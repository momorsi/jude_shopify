2025-06-17 11:51:15,394 - sync_service - INFO - Starting sync service
2025-06-17 11:51:15,398 - sync_service - INFO - Sync cycle started at 2025-06-17 08:51:15.398709
2025-06-17 11:51:15,398 - sync_service - INFO - Starting master data sync
2025-06-17 11:51:15,398 - sync_service - INFO - Starting master data sync
2025-06-17 11:51:15,402 - sync_service - INFO - API Call: {'service': 'shopify', 'endpoint': 'graphql', 'request': {'query': '\n        query GetProducts($first: Int!, $after: String) {\n            products(first: $first, after: $after) {\n                pageInfo {\n                    hasNextPage\n                    endCursor\n                }\n                edges {\n                    node {\n                        id\n                        title\n                        handle\n                        description\n                        variants(first: 1) {\n                            edges {\n                                node {\n                                    id\n                                    sku\n                                    price\n                                    inventoryQuantity\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n        }\n        ', 'variables': {'first': 100, 'after': None}}, 'response': None, 'status': None}
2025-06-17 11:51:15,409 - sync_service - INFO - Starting inventory sync
2025-06-17 11:51:15,410 - sync_service - INFO - Starting orders sync
2025-06-17 11:51:15,920 - sync_service - ERROR - GraphQL query error: Error while fetching schema: [
If you don't need the schema, you can try with: "fetch_schema_from_transport=False"
2025-06-17 11:51:15,920 - sync_service - ERROR - Failed to get products from Shopify: Error while fetching schema: [
If you don't need the schema, you can try with: "fetch_schema_from_transport=False"
2025-06-17 11:51:15,920 - sync_service - ERROR - Product sync failed: Error while fetching schema: [
If you don't need the schema, you can try with: "fetch_schema_from_transport=False"
2025-06-17 11:51:15,920 - sync_service - INFO - Next sync cycle scheduled for 2025-06-17 09:51:15.398709
2025-06-17 11:52:42,306 - sync_service - INFO - Starting sync service
2025-06-17 11:52:42,316 - sync_service - INFO - Sync cycle started at 2025-06-17 08:52:42.316005
2025-06-17 11:52:42,316 - sync_service - INFO - Starting master data sync
2025-06-17 11:52:42,316 - sync_service - INFO - Starting master data sync
2025-06-17 11:52:42,316 - sync_service - INFO - API Call: {'service': 'shopify', 'endpoint': 'graphql', 'request': {'query': '\n        query GetProducts($first: Int!, $after: String) {\n            products(first: $first, after: $after) {\n                pageInfo {\n                    hasNextPage\n                    endCursor\n                }\n                edges {\n                    node {\n                        id\n                        title\n                        handle\n                        description\n                        variants(first: 1) {\n                            edges {\n                                node {\n                                    id\n                                    sku\n                                    price\n                                    inventoryQuantity\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n        }\n        ', 'variables': {'first': 100, 'after': None}}, 'response': None, 'status': None}
2025-06-17 11:52:42,370 - sync_service - INFO - Starting inventory sync
2025-06-17 11:52:42,372 - sync_service - INFO - Starting orders sync
2025-06-17 11:52:42,734 - sync_service - ERROR - GraphQL query error: [
2025-06-17 11:52:42,739 - sync_service - ERROR - Failed to get products from Shopify: [
2025-06-17 11:52:42,739 - sync_service - ERROR - Product sync failed: [
2025-06-17 11:52:42,739 - sync_service - INFO - Next sync cycle scheduled for 2025-06-17 09:52:42.316005
2025-06-17 11:54:06,195 - sync_service - INFO - Starting sync service
2025-06-17 11:54:06,196 - sync_service - INFO - Sync cycle started at 2025-06-17 08:54:06.196853
2025-06-17 11:54:06,196 - sync_service - INFO - Starting master data sync
2025-06-17 11:54:06,198 - sync_service - INFO - Starting master data sync
2025-06-17 11:54:06,198 - sync_service - INFO - API Call: {'service': 'shopify', 'endpoint': 'graphql', 'request': {'query': '\n        query GetProducts($first: Int!, $after: String) {\n            products(first: $first, after: $after) {\n                pageInfo {\n                    hasNextPage\n                    endCursor\n                }\n                edges {\n                    node {\n                        id\n                        title\n                        handle\n                        description\n                        variants(first: 1) {\n                            edges {\n                                node {\n                                    id\n                                    sku\n                                    price\n                                    inventoryQuantity\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n        }\n        ', 'variables': {'first': 100, 'after': None}}, 'response': None, 'status': None}
2025-06-17 11:54:06,207 - sync_service - INFO - Starting inventory sync
2025-06-17 11:54:06,209 - sync_service - INFO - Starting orders sync
2025-06-17 11:54:06,581 - sync_service - ERROR - GraphQL query error: [
GraphQL Errors: "[API] Invalid API key or access token (unrecognized login or wrong password)"
2025-06-17 11:54:06,581 - sync_service - ERROR - Failed to get products from Shopify: GraphQL query error: [
GraphQL Errors: "[API] Invalid API key or access token (unrecognized login or wrong password)"
2025-06-17 11:54:06,581 - sync_service - ERROR - Product sync failed: GraphQL query error: [
GraphQL Errors: "[API] Invalid API key or access token (unrecognized login or wrong password)"
2025-06-17 11:54:06,581 - sync_service - INFO - Next sync cycle scheduled for 2025-06-17 09:54:06.196853
2025-06-17 11:55:44,505 - sync_service - INFO - Starting sync service
2025-06-17 11:55:44,505 - sync_service - INFO - Sync cycle started at 2025-06-17 08:55:44.505419
2025-06-17 11:55:44,507 - sync_service - INFO - Starting master data sync
2025-06-17 11:55:44,508 - sync_service - INFO - Starting master data sync
2025-06-17 11:55:44,508 - sync_service - INFO - API Call: {'service': 'shopify', 'endpoint': 'graphql', 'request': {'query': '\n        query GetProducts($first: Int!, $after: String) {\n            products(first: $first, after: $after) {\n                pageInfo {\n                    hasNextPage\n                    endCursor\n                }\n                edges {\n                    node {\n                        id\n                        title\n                        handle\n                        description\n                        variants(first: 1) {\n                            edges {\n                                node {\n                                    id\n                                    sku\n                                    price\n                                    inventoryQuantity\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n        }\n        ', 'variables': {'first': 100, 'after': None}}, 'response': None, 'status': None}
2025-06-17 11:55:44,521 - sync_service - INFO - Starting inventory sync
2025-06-17 11:55:44,525 - sync_service - INFO - Starting orders sync
2025-06-17 11:55:45,091 - sync_service - INFO - API Call: {'service': 'shopify', 'endpoint': 'graphql', 'request': None, 'response': {'products': {'pageInfo': {'hasNextPage': False, 'endCursor': 'eyJsYXN0X2lkIjo4NTIxODQ0MzkyMDkwLCJsYXN0X3ZhbHVlIjoiODUyMTg0NDM5MjA5MCJ9'}, 'edges': [{'node': {'id': 'gid://shopify/Product/8521844392090', 'title': 'NABB', 'handle': 'nabb', 'description': 'Not a Bean Bag', 'variants': {'edges': [{'node': {'id': 'gid://shopify/ProductVariant/45841365074074', 'sku': '', 'price': '1750.00', 'inventoryQuantity': 1}}]}}}]}}, 'status': 'success'}
2025-06-17 11:55:45,093 - sync_service - INFO - Sync Event: {'sync_type': 'master_data_products', 'items_processed': 1, 'success_count': 1, 'error_count': 0, 'details': None}
2025-06-17 11:55:45,093 - sync_service - INFO - API Call: {'service': 'shopify', 'endpoint': 'graphql', 'request': {'query': '\n        query GetProducts($first: Int!, $after: String) {\n            products(first: $first, after: $after) {\n                pageInfo {\n                    hasNextPage\n                    endCursor\n                }\n                edges {\n                    node {\n                        id\n                        title\n                        handle\n                        description\n                        variants(first: 1) {\n                            edges {\n                                node {\n                                    id\n                                    sku\n                                    price\n                                    inventoryQuantity\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n        }\n        ', 'variables': {'first': 100, 'after': None}}, 'response': None, 'status': None}
2025-06-17 11:55:45,501 - sync_service - INFO - API Call: {'service': 'shopify', 'endpoint': 'graphql', 'request': None, 'response': {'products': {'pageInfo': {'hasNextPage': False, 'endCursor': 'eyJsYXN0X2lkIjo4NTIxODQ0MzkyMDkwLCJsYXN0X3ZhbHVlIjoiODUyMTg0NDM5MjA5MCJ9'}, 'edges': [{'node': {'id': 'gid://shopify/Product/8521844392090', 'title': 'NABB', 'handle': 'nabb', 'description': 'Not a Bean Bag', 'variants': {'edges': [{'node': {'id': 'gid://shopify/ProductVariant/45841365074074', 'sku': '', 'price': '1750.00', 'inventoryQuantity': 1}}]}}}]}}, 'status': 'success'}
2025-06-17 11:55:45,502 - sync_service - INFO - Sync Event: {'sync_type': 'master_data_variants', 'items_processed': 1, 'success_count': 1, 'error_count': 0, 'details': None}
2025-06-17 11:55:45,503 - sync_service - INFO - Master data sync completed
2025-06-17 11:55:45,503 - sync_service - INFO - Next sync cycle scheduled for 2025-06-17 09:55:44.505419
2025-06-17 15:17:49,805 - sync_service - INFO - Sync cycle started at 2025-06-17 12:17:49.805080
2025-06-17 15:17:49,825 - sync_service - INFO - Starting master data sync
2025-06-17 15:17:49,829 - sync_service - INFO - Starting master data sync
2025-06-17 15:17:49,831 - sync_service - INFO - API Call: {'service': 'shopify', 'endpoint': 'graphql', 'request': {'query': '\n        query GetProducts($first: Int!, $after: String) {\n            products(first: $first, after: $after) {\n                pageInfo {\n                    hasNextPage\n                    endCursor\n                }\n                edges {\n                    node {\n                        id\n                        title\n                        handle\n                        description\n                        variants(first: 1) {\n                            edges {\n                                node {\n                                    id\n                                    sku\n                                    price\n                                    inventoryQuantity\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n        }\n        ', 'variables': {'first': 100, 'after': None}}, 'response': None, 'status': None}
2025-06-17 15:17:49,853 - sync_service - INFO - Starting inventory sync
2025-06-17 15:17:49,855 - sync_service - INFO - Starting orders sync
2025-06-17 15:17:50,261 - sync_service - ERROR - GraphQL query error: [
GraphQL Errors: "[API] Invalid API key or access token (unrecognized login or wrong password)"
2025-06-17 15:17:50,261 - sync_service - ERROR - Failed to get products from Shopify: GraphQL query error: [
GraphQL Errors: "[API] Invalid API key or access token (unrecognized login or wrong password)"
2025-06-17 15:17:50,263 - sync_service - ERROR - Product sync failed: GraphQL query error: [
GraphQL Errors: "[API] Invalid API key or access token (unrecognized login or wrong password)"
2025-06-17 15:17:50,265 - sync_service - INFO - Next sync cycle scheduled for 2025-06-17 13:17:49.805080
2025-06-17 15:19:28,736 - sync_service - INFO - Sync cycle started at 2025-06-17 12:19:28.736263
2025-06-17 15:19:28,751 - sync_service - INFO - Starting master data sync
2025-06-17 15:19:28,753 - sync_service - INFO - Starting master data sync
2025-06-17 15:19:28,759 - sync_service - INFO - API Call: {'service': 'shopify', 'endpoint': 'graphql', 'request': {'query': '\n        query GetProducts($first: Int!, $after: String) {\n            products(first: $first, after: $after) {\n                pageInfo {\n                    hasNextPage\n                    endCursor\n                }\n                edges {\n                    node {\n                        id\n                        title\n                        handle\n                        description\n                        variants(first: 1) {\n                            edges {\n                                node {\n                                    id\n                                    sku\n                                    price\n                                    inventoryQuantity\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n        }\n        ', 'variables': {'first': 100, 'after': None}}, 'response': None, 'status': None}
2025-06-17 15:19:28,784 - sync_service - INFO - Starting inventory sync
2025-06-17 15:19:28,787 - sync_service - INFO - Starting orders sync
2025-06-17 15:19:29,263 - sync_service - INFO - API Call: {'service': 'shopify', 'endpoint': 'graphql', 'request': None, 'response': {'products': {'pageInfo': {'hasNextPage': False, 'endCursor': 'eyJsYXN0X2lkIjo4NTIxODQ0MzkyMDkwLCJsYXN0X3ZhbHVlIjoiODUyMTg0NDM5MjA5MCJ9'}, 'edges': [{'node': {'id': 'gid://shopify/Product/8521844392090', 'title': 'NABB', 'handle': 'nabb', 'description': 'Not a Bean Bag', 'variants': {'edges': [{'node': {'id': 'gid://shopify/ProductVariant/45841365074074', 'sku': '', 'price': '1750.00', 'inventoryQuantity': 1}}]}}}]}}, 'status': 'success'}
2025-06-17 15:19:29,263 - sync_service - INFO - Sync Event: {'sync_type': 'master_data_products', 'items_processed': 1, 'success_count': 1, 'error_count': 0, 'details': None}
2025-06-17 15:19:29,267 - sync_service - INFO - API Call: {'service': 'shopify', 'endpoint': 'graphql', 'request': {'query': '\n        query GetProducts($first: Int!, $after: String) {\n            products(first: $first, after: $after) {\n                pageInfo {\n                    hasNextPage\n                    endCursor\n                }\n                edges {\n                    node {\n                        id\n                        title\n                        handle\n                        description\n                        variants(first: 1) {\n                            edges {\n                                node {\n                                    id\n                                    sku\n                                    price\n                                    inventoryQuantity\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n        }\n        ', 'variables': {'first': 100, 'after': None}}, 'response': None, 'status': None}
2025-06-17 15:19:29,693 - sync_service - INFO - API Call: {'service': 'shopify', 'endpoint': 'graphql', 'request': None, 'response': {'products': {'pageInfo': {'hasNextPage': False, 'endCursor': 'eyJsYXN0X2lkIjo4NTIxODQ0MzkyMDkwLCJsYXN0X3ZhbHVlIjoiODUyMTg0NDM5MjA5MCJ9'}, 'edges': [{'node': {'id': 'gid://shopify/Product/8521844392090', 'title': 'NABB', 'handle': 'nabb', 'description': 'Not a Bean Bag', 'variants': {'edges': [{'node': {'id': 'gid://shopify/ProductVariant/45841365074074', 'sku': '', 'price': '1750.00', 'inventoryQuantity': 1}}]}}}]}}, 'status': 'success'}
2025-06-17 15:19:29,698 - sync_service - INFO - Sync Event: {'sync_type': 'master_data_variants', 'items_processed': 1, 'success_count': 1, 'error_count': 0, 'details': None}
2025-06-17 15:19:29,698 - sync_service - INFO - Master data sync completed
2025-06-17 15:19:29,700 - sync_service - INFO - Next sync cycle scheduled for 2025-06-17 13:19:28.736263
2025-06-30 15:11:58,071 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'login', 'request': {'company': 'GREENS_TEST', 'user': 'RPRO'}, 'response': None, 'status': None}
2025-06-30 15:11:58,789 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'login', 'request': None, 'response': {'status': 'failed', 'status_code': 404}, 'status': 'failure'}
2025-06-30 15:11:58,833 - sync_service - ERROR - SAP login failed: 404 - <!DOCTYPE HTML PUBLIC "-//IETF//DTD HTML 2.0//EN">
<html><head>
<title>404 Not Found</title>
</head><body>
<h1>Not Found</h1>
<p>The requested URL was not found on this server.</p>
</body></html>

2025-06-30 15:11:58,842 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'login', 'request': {'company': 'GREENS_TEST', 'user': 'RPRO'}, 'response': None, 'status': None}
2025-06-30 15:11:59,312 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'login', 'request': None, 'response': {'status': 'failed', 'status_code': 404}, 'status': 'failure'}
2025-06-30 15:11:59,312 - sync_service - ERROR - SAP login failed: 404 - <!DOCTYPE HTML PUBLIC "-//IETF//DTD HTML 2.0//EN">
<html><head>
<title>404 Not Found</title>
</head><body>
<h1>Not Found</h1>
<p>The requested URL was not found on this server.</p>
</body></html>

2025-06-30 15:11:59,316 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'login', 'request': {'company': 'GREENS_TEST', 'user': 'RPRO'}, 'response': None, 'status': None}
2025-06-30 15:11:59,791 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'login', 'request': None, 'response': {'status': 'failed', 'status_code': 404}, 'status': 'failure'}
2025-06-30 15:11:59,793 - sync_service - ERROR - SAP login failed: 404 - <!DOCTYPE HTML PUBLIC "-//IETF//DTD HTML 2.0//EN">
<html><head>
<title>404 Not Found</title>
</head><body>
<h1>Not Found</h1>
<p>The requested URL was not found on this server.</p>
</body></html>

2025-06-30 15:13:10,057 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'login', 'request': {'company': 'GREENS_TEST', 'user': 'RPRO'}, 'response': None, 'status': None}
2025-06-30 15:13:12,122 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'login', 'request': None, 'response': {'status': 'success'}, 'status': 'success'}
2025-06-30 15:13:12,122 - sync_service - INFO - SAP login successful
2025-06-30 15:13:12,122 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'Items', 'request': {'method': 'GET', 'url': 'https://sapgc.wisys.com.sa:50000/b1s/v1/Items', 'data': None, 'params': {'$top': 5}}, 'response': None, 'status': None}
2025-06-30 15:13:20,875 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'BusinessPartners', 'request': {'method': 'GET', 'url': 'https://sapgc.wisys.com.sa:50000/b1s/v1/BusinessPartners', 'data': None, 'params': {}}, 'response': None, 'status': None}
2025-06-30 15:13:28,409 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'Orders', 'request': {'method': 'GET', 'url': 'https://sapgc.wisys.com.sa:50000/b1s/v1/Orders', 'data': None, 'params': {'$top': 5}}, 'response': None, 'status': None}
2025-06-30 15:13:30,336 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'sml.svc/NEW_ITEMS?$orderby=ItemCode', 'request': {'method': 'GET', 'url': 'https://sapgc.wisys.com.sa:50000/b1s/v1/sml.svc/NEW_ITEMS?$orderby=ItemCode', 'data': None, 'params': None}, 'response': None, 'status': None}
2025-06-30 15:13:31,078 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'Items', 'request': {'method': 'GET', 'url': 'https://sapgc.wisys.com.sa:50000/b1s/v1/Items', 'data': None, 'params': {'$filter': "ItemCode eq 'ITEM001'", '$top': 1}}, 'response': None, 'status': None}
2025-06-30 15:13:31,588 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'Items', 'request': None, 'response': {'odata.metadata': 'https://sapgc.wisys.com.sa:50000/b1s/v1/$metadata#Items', 'value': []}, 'status': 'success'}
2025-06-30 15:13:31,591 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'Items', 'request': {'method': 'GET', 'url': 'https://sapgc.wisys.com.sa:50000/b1s/v1/Items', 'data': None, 'params': {'$orderby': 'ItemCode desc', '$top': 3}}, 'response': None, 'status': None}
2025-06-30 15:41:47,682 - sync_service - INFO - Starting new items sync from SAP to Shopify
2025-06-30 15:41:47,684 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'login', 'request': {'company': 'GREENS_TEST', 'user': 'RPRO'}, 'response': None, 'status': None}
2025-06-30 15:41:49,885 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'login', 'request': None, 'response': {'status': 'success'}, 'status': 'success'}
2025-06-30 15:41:49,885 - sync_service - INFO - SAP login successful
2025-06-30 15:41:49,893 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'sml.svc/NEW_ITEMS?$orderby=ItemCode', 'request': {'method': 'GET', 'url': 'https://sapgc.wisys.com.sa:50000/b1s/v1/sml.svc/NEW_ITEMS?$orderby=ItemCode', 'data': None, 'params': None}, 'response': None, 'status': None}
2025-06-30 15:41:51,381 - sync_service - INFO - Retrieved 1 new items from SAP
2025-06-30 15:41:51,381 - sync_service - INFO - Processing SAP item: 10101010101010
2025-06-30 15:41:51,382 - sync_service - INFO - API Call: {'service': 'shopify', 'endpoint': 'graphql', 'request': {'query': '\n            mutation productCreate($input: ProductInput!) {\n                productCreate(input: $input) {\n                    product {\n                        id\n                        title\n                        handle\n                        variants(first: 1) {\n                            edges {\n                                node {\n                                    id\n                                    sku\n                                    inventoryItem {\n                                        id\n                                    }\n                                }\n                            }\n                        }\n                    }\n                    userErrors {\n                        field\n                        message\n                    }\n                }\n            }\n            ', 'variables': {'input': {'title': 'PROFESSIONAL HOT WATR BAG 27791111', 'descriptionHtml': '', 'vendor': 'PROFESSIONAL HOT WATER BAG 2779', 'productType': 'Default', 'status': 'DRAFT', 'tags': ['Brand:PROFESSIONAL', 'U_Size:1', 'U_Attribute:BAG'], 'variants': [{'sku': '10101010101010', 'price': '0.0', 'inventoryPolicy': 'DENY', 'inventoryManagement': 'SHOPIFY', 'inventoryQuantities': [{'availableQuantity': 0, 'locationId': 'gid://shopify/Location/1'}], 'weight': 0.0, 'weightUnit': 'KILOGRAMS'}], 'seo': {'title': 'PROFESSIONAL HOT WATR BAG 27791111', 'description': ''}}}}, 'response': None, 'status': None}
2025-06-30 15:41:52,719 - sync_service - INFO - API Call: {'service': 'shopify', 'endpoint': 'graphql', 'request': None, 'response': {'productCreate': {'product': None, 'userErrors': [{'field': ['variants', '0', 'inventoryQuantities'], 'message': "The quantity couldn't be set because the location was deleted."}]}}, 'status': 'success'}
2025-06-30 15:41:52,719 - sync_service - ERROR - Failed to create product in Shopify: The quantity couldn't be set because the location was deleted.
2025-06-30 15:41:52,719 - sync_service - INFO - Sync Event: {'sync_type': 'new_items_sap_to_shopify', 'items_processed': 0, 'success_count': 0, 'error_count': 1, 'details': None}
2025-06-30 15:41:52,719 - sync_service - INFO - New items sync completed: 0 processed, 0 successful, 1 errors
2025-06-30 15:42:19,041 - sync_service - INFO - API Call: {'service': 'shopify', 'endpoint': 'graphql', 'request': {'query': '\n        query {\n            locations(first: 10) {\n                edges {\n                    node {\n                        id\n                        name\n                        address {\n                            address1\n                            city\n                            country\n                        }\n                        isActive\n                    }\n                }\n            }\n        }\n        ', 'variables': None}, 'response': None, 'status': None}
2025-06-30 15:42:19,636 - sync_service - INFO - API Call: {'service': 'shopify', 'endpoint': 'graphql', 'request': None, 'response': {'locations': {'edges': [{'node': {'id': 'gid://shopify/Location/76913967258', 'name': 'Alexandria Warehouse', 'address': {'address1': 'Hatem Mosque', 'city': 'Sidi Gaber', 'country': 'Egypt'}, 'isActive': True}}, {'node': {'id': 'gid://shopify/Location/76072616090', 'name': 'Mivida Greens 6 (Parcel 22)', 'address': {'address1': 'Mivida Greens 6 (Parcel 22)', 'city': 'New Cairo 1', 'country': 'Egypt'}, 'isActive': True}}, {'node': {'id': 'gid://shopify/Location/76914000026', 'name': 'Mokattam Warehouse', 'address': {'address1': 'Mokattam', 'city': 'El Mokattam', 'country': 'Egypt'}, 'isActive': True}}, {'node': {'id': 'gid://shopify/Location/76914032794', 'name': 'Physical Warehouse', 'address': {'address1': 'bosta', 'city': 'Dar El Salam', 'country': 'Egypt'}, 'isActive': True}}]}}, 'status': 'success'}
2025-06-30 15:42:56,594 - sync_service - INFO - Starting new items sync from SAP to Shopify
2025-06-30 15:42:56,594 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'login', 'request': {'company': 'GREENS_TEST', 'user': 'RPRO'}, 'response': None, 'status': None}
2025-06-30 15:42:57,982 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'login', 'request': None, 'response': {'status': 'success'}, 'status': 'success'}
2025-06-30 15:42:57,986 - sync_service - INFO - SAP login successful
2025-06-30 15:42:57,989 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'sml.svc/NEW_ITEMS?$orderby=ItemCode', 'request': {'method': 'GET', 'url': 'https://sapgc.wisys.com.sa:50000/b1s/v1/sml.svc/NEW_ITEMS?$orderby=ItemCode', 'data': None, 'params': None}, 'response': None, 'status': None}
2025-06-30 15:42:59,790 - sync_service - INFO - Retrieved 1 new items from SAP
2025-06-30 15:42:59,790 - sync_service - INFO - Processing SAP item: 10101010101010
2025-06-30 15:42:59,792 - sync_service - INFO - API Call: {'service': 'shopify', 'endpoint': 'graphql', 'request': {'query': '\n            mutation productCreate($input: ProductInput!) {\n                productCreate(input: $input) {\n                    product {\n                        id\n                        title\n                        handle\n                        variants(first: 1) {\n                            edges {\n                                node {\n                                    id\n                                    sku\n                                    inventoryItem {\n                                        id\n                                    }\n                                }\n                            }\n                        }\n                    }\n                    userErrors {\n                        field\n                        message\n                    }\n                }\n            }\n            ', 'variables': {'input': {'title': 'PROFESSIONAL HOT WATR BAG 27791111', 'descriptionHtml': '', 'vendor': 'PROFESSIONAL HOT WATER BAG 2779', 'productType': 'Default', 'status': 'DRAFT', 'tags': ['Brand:PROFESSIONAL', 'U_Size:1', 'U_Attribute:BAG'], 'variants': [{'sku': '10101010101010', 'price': '0.0', 'inventoryPolicy': 'DENY', 'inventoryManagement': 'SHOPIFY', 'inventoryQuantities': [{'availableQuantity': 0, 'locationId': 'gid://shopify/Location/76913967258'}], 'weight': 0.0, 'weightUnit': 'KILOGRAMS'}], 'seo': {'title': 'PROFESSIONAL HOT WATR BAG 27791111', 'description': ''}}}}, 'response': None, 'status': None}
2025-06-30 15:43:00,794 - sync_service - INFO - API Call: {'service': 'shopify', 'endpoint': 'graphql', 'request': None, 'response': {'productCreate': {'product': {'id': 'gid://shopify/Product/8542831149210', 'title': 'PROFESSIONAL HOT WATR BAG 27791111', 'handle': 'professional-hot-watr-bag-27791111', 'variants': {'edges': [{'node': {'id': 'gid://shopify/ProductVariant/45902873198746', 'sku': '10101010101010', 'inventoryItem': {'id': 'gid://shopify/InventoryItem/47875014099098'}}}]}}, 'userErrors': []}}, 'status': 'success'}
2025-06-30 15:43:00,794 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': "Items('10101010101010')", 'request': {'method': 'PATCH', 'url': "https://sapgc.wisys.com.sa:50000/b1s/v1/Items('10101010101010')", 'data': {'U_Main_SID': '8542831149210', 'U_Price_SID': '45902873198746', 'U_Extend_SID': '47875014099098', 'U_SyncDT': 1612643.25, 'U_SyncTime': 'SYNCED'}, 'params': None}, 'response': None, 'status': None}
2025-06-30 15:43:02,728 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': "Items('10101010101010')", 'request': None, 'response': {'status_code': 400, 'text': '{\n   "error" : {\n      "code" : -1,\n      "message" : {\n         "lang" : "en-us",\n         "value" : "16126403 is a bad date in property U_SyncDT"\n      }\n   }\n}\n'}, 'status': 'failure'}
2025-06-30 15:43:02,728 - sync_service - ERROR - Failed to update SAP item 10101010101010: HTTP 400: {
   "error" : {
      "code" : -1,
      "message" : {
         "lang" : "en-us",
         "value" : "16126403 is a bad date in property U_SyncDT"
      }
   }
}

2025-06-30 15:43:02,731 - sync_service - ERROR - Failed to update SAP with Shopify ID: HTTP 400: {
   "error" : {
      "code" : -1,
      "message" : {
         "lang" : "en-us",
         "value" : "16126403 is a bad date in property U_SyncDT"
      }
   }
}

2025-06-30 15:43:02,732 - sync_service - INFO - Successfully synced item 10101010101010 to Shopify
2025-06-30 15:43:03,251 - sync_service - INFO - Sync Event: {'sync_type': 'new_items_sap_to_shopify', 'items_processed': 1, 'success_count': 1, 'error_count': 0, 'details': None}
2025-06-30 15:43:03,253 - sync_service - INFO - New items sync completed: 1 processed, 1 successful, 0 errors
2025-06-30 16:16:50,650 - sync_service - INFO - Initialized Shopify client for store: Local Store (local)
2025-06-30 16:16:50,672 - sync_service - INFO - API Call: {'service': 'shopify', 'endpoint': 'graphql_local', 'request': {'query': '\n        query {\n            locations(first: 10) {\n                edges {\n                    node {\n                        id\n                        name\n                        address {\n                            address1\n                            city\n                            country\n                        }\n                        isActive\n                    }\n                }\n            }\n        }\n        ', 'variables': None}, 'response': None, 'status': None}
2025-06-30 16:16:51,291 - sync_service - INFO - API Call: {'service': 'shopify', 'endpoint': 'graphql_local', 'request': None, 'response': {'locations': {'edges': [{'node': {'id': 'gid://shopify/Location/76913967258', 'name': 'Alexandria Warehouse', 'address': {'address1': 'Hatem Mosque', 'city': 'Sidi Gaber', 'country': 'Egypt'}, 'isActive': True}}, {'node': {'id': 'gid://shopify/Location/76072616090', 'name': 'Mivida Greens 6 (Parcel 22)', 'address': {'address1': 'Mivida Greens 6 (Parcel 22)', 'city': 'New Cairo 1', 'country': 'Egypt'}, 'isActive': True}}, {'node': {'id': 'gid://shopify/Location/76914000026', 'name': 'Mokattam Warehouse', 'address': {'address1': 'Mokattam', 'city': 'El Mokattam', 'country': 'Egypt'}, 'isActive': True}}, {'node': {'id': 'gid://shopify/Location/76914032794', 'name': 'Physical Warehouse', 'address': {'address1': 'bosta', 'city': 'Dar El Salam', 'country': 'Egypt'}, 'isActive': True}}]}}, 'status': 'success'}
2025-06-30 16:16:52,122 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'login', 'request': {'company': 'GREENS_TEST', 'user': 'RPRO'}, 'response': None, 'status': None}
2025-06-30 16:16:53,822 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'login', 'request': None, 'response': {'status': 'success'}, 'status': 'success'}
2025-06-30 16:16:53,822 - sync_service - INFO - SAP login successful
2025-06-30 16:16:53,822 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'sml.svc/NEW_ITEMS?$orderby=ItemCode', 'request': {'method': 'GET', 'url': 'https://sapgc.wisys.com.sa:50000/b1s/v1/sml.svc/NEW_ITEMS?$orderby=ItemCode', 'data': None, 'params': None}, 'response': None, 'status': None}
2025-06-30 16:17:23,806 - sync_service - INFO - Initialized Shopify client for store: Local Store (local)
2025-06-30 16:17:23,806 - sync_service - INFO - Starting multi-store new items sync from SAP to Shopify
2025-06-30 16:17:23,822 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'login', 'request': {'company': 'GREENS_TEST', 'user': 'RPRO'}, 'response': None, 'status': None}
2025-06-30 16:17:25,185 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'login', 'request': None, 'response': {'status': 'success'}, 'status': 'success'}
2025-06-30 16:17:25,186 - sync_service - INFO - SAP login successful
2025-06-30 16:17:25,190 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'sml.svc/NEW_ITEMS?$orderby=ItemCode', 'request': {'method': 'GET', 'url': 'https://sapgc.wisys.com.sa:50000/b1s/v1/sml.svc/NEW_ITEMS?$orderby=ItemCode', 'data': None, 'params': None}, 'response': None, 'status': None}
2025-06-30 16:17:26,582 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'sml.svc/NEW_ITEMS?$orderby=ItemCode', 'request': None, 'response': {'@odata.context': 'https://sapgc.wisys.com.sa:50000/b1s/v1/sml.svc/$metadata#NEW_ITEMS', 'value': [{'ItemCode': '10101010101010', 'ItemName': 'PROFESSIONAL HOT WATR BAG 27791111', 'FrgnName': 'بروفيشنال قربة ماء حار 2779', 'Price': 29.58, 'ReportCode': '729807766000157645', 'SerialType': 0, 'BatchType': 4, 'InvntItem': 'Y', 'BP_SID': '594556761000118648', 'DCS_SID': '616144142000124886', 'U_Text1': 'PROFESSIONAL HOT WATER BAG 2779', 'U_Text3': 'بروفيشنال قربة ماء حار 2779', 'U_Size': '1', 'U_Attribute': 'BAG', 'U_Color': None, 'U_Flavor': None, 'U_Count': None, 'U_PackSize': None, 'U_Concentration': None, 'U_TargetHairType': 'UPDATE', 'U_TargetSkinType': None, 'U_Scent': None, 'U_Productfunction': None, 'U_ProductIngredient': None, 'U_BRND': 'PROFESSIONAL', 'Barcode': '', 'id__': 1}]}, 'status': 'success'}
2025-06-30 16:17:26,590 - sync_service - INFO - Retrieved 1 new items from SAP
2025-06-30 16:17:26,593 - sync_service - INFO - Processing SAP item: 10101010101010
2025-06-30 16:17:26,593 - sync_service - INFO - Creating product in store: Local Store
2025-06-30 16:17:26,594 - sync_service - INFO - API Call: {'service': 'shopify', 'endpoint': 'graphql_local', 'request': {'query': '\n        mutation productCreate($input: ProductInput!) {\n            productCreate(input: $input) {\n                product {\n                    id\n                    title\n                    handle\n                    variants(first: 1) {\n                        edges {\n                            node {\n                                id\n                                sku\n                                inventoryItem {\n                                    id\n                                }\n                            }\n                        }\n                    }\n                }\n                userErrors {\n                    field\n                    message\n                }\n            }\n        }\n        ', 'variables': {'input': {'title': 'PROFESSIONAL HOT WATR BAG 27791111', 'descriptionHtml': '', 'vendor': 'PROFESSIONAL HOT WATER BAG 2779', 'productType': 'Default', 'status': 'DRAFT', 'tags': ['Brand:PROFESSIONAL', 'U_Size:1', 'U_Attribute:BAG'], 'variants': [{'sku': '10101010101010', 'price': '0.0', 'inventoryPolicy': 'DENY', 'inventoryManagement': 'SHOPIFY', 'inventoryQuantities': [{'availableQuantity': 0, 'locationId': 'gid://shopify/Location/76913967258'}], 'weight': 0.0, 'weightUnit': 'KILOGRAMS'}], 'seo': {'title': 'PROFESSIONAL HOT WATR BAG 27791111', 'description': ''}}}}, 'response': None, 'status': None}
2025-06-30 16:17:27,549 - sync_service - INFO - API Call: {'service': 'shopify', 'endpoint': 'graphql_local', 'request': None, 'response': {'productCreate': {'product': {'id': 'gid://shopify/Product/8542859952282', 'title': 'PROFESSIONAL HOT WATR BAG 27791111', 'handle': 'professional-hot-watr-bag-27791111', 'variants': {'edges': [{'node': {'id': 'gid://shopify/ProductVariant/45902952595610', 'sku': '10101010101010', 'inventoryItem': {'id': 'gid://shopify/InventoryItem/47875093659802'}}}]}}, 'userErrors': []}}, 'status': 'success'}
2025-06-30 16:17:27,549 - sync_service - INFO - Successfully created product in store local
2025-06-30 16:17:27,549 - sync_service - ERROR - Error updating SAP with Shopify IDs: 'data'
2025-06-30 16:17:27,551 - sync_service - ERROR - Failed to update SAP with Shopify IDs: 'data'
2025-06-30 16:17:27,552 - sync_service - INFO - Successfully synced item 10101010101010 to all stores
2025-06-30 16:17:28,056 - sync_service - INFO - Sync Event: {'sync_type': 'multi_store_new_items_sap_to_shopify', 'items_processed': 1, 'success_count': 1, 'error_count': 0, 'details': None}
2025-06-30 16:17:28,059 - sync_service - INFO - Multi-store new items sync completed: 1 processed, 1 successful, 0 errors
2025-06-30 16:18:49,965 - sync_service - INFO - Initialized Shopify client for store: Local Store (local)
2025-06-30 16:18:49,969 - sync_service - INFO - Starting multi-store new items sync from SAP to Shopify
2025-06-30 16:18:49,972 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'login', 'request': {'company': 'GREENS_TEST', 'user': 'RPRO'}, 'response': None, 'status': None}
2025-06-30 16:18:51,357 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'login', 'request': None, 'response': {'status': 'success'}, 'status': 'success'}
2025-06-30 16:18:51,360 - sync_service - INFO - SAP login successful
2025-06-30 16:18:51,362 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'sml.svc/NEW_ITEMS?$orderby=ItemCode', 'request': {'method': 'GET', 'url': 'https://sapgc.wisys.com.sa:50000/b1s/v1/sml.svc/NEW_ITEMS?$orderby=ItemCode', 'data': None, 'params': None}, 'response': None, 'status': None}
2025-06-30 16:18:52,840 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'sml.svc/NEW_ITEMS?$orderby=ItemCode', 'request': None, 'response': {'@odata.context': 'https://sapgc.wisys.com.sa:50000/b1s/v1/sml.svc/$metadata#NEW_ITEMS', 'value': [{'ItemCode': '10101010101010', 'ItemName': 'PROFESSIONAL HOT WATR BAG 27791111', 'FrgnName': 'بروفيشنال قربة ماء حار 2779', 'Price': 29.58, 'ReportCode': '729807766000157645', 'SerialType': 0, 'BatchType': 4, 'InvntItem': 'Y', 'BP_SID': '594556761000118648', 'DCS_SID': '616144142000124886', 'U_Text1': 'PROFESSIONAL HOT WATER BAG 2779', 'U_Text3': 'بروفيشنال قربة ماء حار 2779', 'U_Size': '1', 'U_Attribute': 'BAG', 'U_Color': None, 'U_Flavor': None, 'U_Count': None, 'U_PackSize': None, 'U_Concentration': None, 'U_TargetHairType': 'UPDATE', 'U_TargetSkinType': None, 'U_Scent': None, 'U_Productfunction': None, 'U_ProductIngredient': None, 'U_BRND': 'PROFESSIONAL', 'Barcode': '', 'id__': 1}]}, 'status': 'success'}
2025-06-30 16:18:52,856 - sync_service - INFO - Retrieved 1 new items from SAP
2025-06-30 16:18:52,856 - sync_service - INFO - Processing SAP item: 10101010101010
2025-06-30 16:18:52,856 - sync_service - INFO - Creating product in store: Local Store
2025-06-30 16:18:52,856 - sync_service - INFO - API Call: {'service': 'shopify', 'endpoint': 'graphql_local', 'request': {'query': '\n        mutation productCreate($input: ProductInput!) {\n            productCreate(input: $input) {\n                product {\n                    id\n                    title\n                    handle\n                    variants(first: 1) {\n                        edges {\n                            node {\n                                id\n                                sku\n                                inventoryItem {\n                                    id\n                                }\n                            }\n                        }\n                    }\n                }\n                userErrors {\n                    field\n                    message\n                }\n            }\n        }\n        ', 'variables': {'input': {'title': 'PROFESSIONAL HOT WATR BAG 27791111', 'descriptionHtml': '', 'vendor': 'PROFESSIONAL HOT WATER BAG 2779', 'productType': 'Default', 'status': 'DRAFT', 'tags': ['Brand:PROFESSIONAL', 'U_Size:1', 'U_Attribute:BAG'], 'variants': [{'sku': '10101010101010', 'price': '0.0', 'inventoryPolicy': 'DENY', 'inventoryManagement': 'SHOPIFY', 'inventoryQuantities': [{'availableQuantity': 0, 'locationId': 'gid://shopify/Location/76913967258'}], 'weight': 0.0, 'weightUnit': 'KILOGRAMS'}], 'seo': {'title': 'PROFESSIONAL HOT WATR BAG 27791111', 'description': ''}}}}, 'response': None, 'status': None}
2025-06-30 16:18:53,998 - sync_service - INFO - API Call: {'service': 'shopify', 'endpoint': 'graphql_local', 'request': None, 'response': {'productCreate': {'product': {'id': 'gid://shopify/Product/8542860804250', 'title': 'PROFESSIONAL HOT WATR BAG 27791111', 'handle': 'professional-hot-watr-bag-27791111', 'variants': {'edges': [{'node': {'id': 'gid://shopify/ProductVariant/45902953906330', 'sku': '10101010101010', 'inventoryItem': {'id': 'gid://shopify/InventoryItem/47875094970522'}}}]}}, 'userErrors': []}}, 'status': 'success'}
2025-06-30 16:18:53,998 - sync_service - INFO - Successfully created product in store local
2025-06-30 16:18:53,998 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': "Items('10101010101010')", 'request': {'method': 'PATCH', 'url': "https://sapgc.wisys.com.sa:50000/b1s/v1/Items('10101010101010')", 'data': {'U_SyncDT': '2025-06-30', 'U_SyncTime': 'SYNCED', 'U_LOCAL_SID': '8542860804250', 'U_LOCAL_VARIANT_SID': '45902953906330', 'U_LOCAL_INVENTORY_SID': '47875094970522'}, 'params': None}, 'response': None, 'status': None}
2025-06-30 16:18:55,608 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': "Items('10101010101010')", 'request': None, 'response': {'status_code': 400, 'text': '{\n   "error" : {\n      "code" : -1000,\n      "message" : {\n         "lang" : "en-us",\n         "value" : "Property \'U_LOCAL_INVENTORY_SID\' of \'Item\' is invalid"\n      }\n   }\n}\n'}, 'status': 'failure'}
2025-06-30 16:18:55,611 - sync_service - ERROR - Failed to update SAP item 10101010101010: HTTP 400: {
   "error" : {
      "code" : -1000,
      "message" : {
         "lang" : "en-us",
         "value" : "Property 'U_LOCAL_INVENTORY_SID' of 'Item' is invalid"
      }
   }
}

2025-06-30 16:18:55,614 - sync_service - ERROR - Failed to update SAP with Shopify IDs: HTTP 400: {
   "error" : {
      "code" : -1000,
      "message" : {
         "lang" : "en-us",
         "value" : "Property 'U_LOCAL_INVENTORY_SID' of 'Item' is invalid"
      }
   }
}

2025-06-30 16:18:55,615 - sync_service - INFO - Successfully synced item 10101010101010 to all stores
2025-06-30 16:18:56,134 - sync_service - INFO - Sync Event: {'sync_type': 'multi_store_new_items_sap_to_shopify', 'items_processed': 1, 'success_count': 1, 'error_count': 0, 'details': None}
2025-06-30 16:18:56,134 - sync_service - INFO - Multi-store new items sync completed: 1 processed, 1 successful, 0 errors
2025-06-30 16:55:11,248 - sync_service - INFO - Initialized Shopify client for store: Local Store (local)
2025-06-30 16:55:11,263 - sync_service - INFO - API Call: {'service': 'shopify', 'endpoint': 'graphql_local', 'request': {'query': '\n        query {\n            locations(first: 10) {\n                edges {\n                    node {\n                        id\n                        name\n                        address {\n                            address1\n                            city\n                            country\n                        }\n                        isActive\n                    }\n                }\n            }\n        }\n        ', 'variables': None}, 'response': None, 'status': None}
2025-06-30 16:55:11,919 - sync_service - INFO - API Call: {'service': 'shopify', 'endpoint': 'graphql_local', 'request': None, 'response': {'locations': {'edges': [{'node': {'id': 'gid://shopify/Location/76913967258', 'name': 'Alexandria Warehouse', 'address': {'address1': 'Hatem Mosque', 'city': 'Sidi Gaber', 'country': 'Egypt'}, 'isActive': True}}, {'node': {'id': 'gid://shopify/Location/76072616090', 'name': 'Mivida Greens 6 (Parcel 22)', 'address': {'address1': 'Mivida Greens 6 (Parcel 22)', 'city': 'New Cairo 1', 'country': 'Egypt'}, 'isActive': True}}, {'node': {'id': 'gid://shopify/Location/76914000026', 'name': 'Mokattam Warehouse', 'address': {'address1': 'Mokattam', 'city': 'El Mokattam', 'country': 'Egypt'}, 'isActive': True}}, {'node': {'id': 'gid://shopify/Location/76914032794', 'name': 'Physical Warehouse', 'address': {'address1': 'bosta', 'city': 'Dar El Salam', 'country': 'Egypt'}, 'isActive': True}}]}}, 'status': 'success'}
2025-06-30 16:55:12,598 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'login', 'request': {'company': 'GREENS_TEST', 'user': 'RPRO'}, 'response': None, 'status': None}
2025-06-30 16:55:14,167 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'login', 'request': None, 'response': {'status': 'success'}, 'status': 'success'}
2025-06-30 16:55:14,169 - sync_service - INFO - SAP login successful
2025-06-30 16:55:14,174 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'sml.svc/NEW_ITEMS?$orderby=ItemCode', 'request': {'method': 'GET', 'url': 'https://sapgc.wisys.com.sa:50000/b1s/v1/sml.svc/NEW_ITEMS?$orderby=ItemCode', 'data': None, 'params': None}, 'response': None, 'status': None}
2025-06-30 16:55:15,477 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'sml.svc/NEW_ITEMS?$orderby=ItemCode', 'request': None, 'response': {'@odata.context': 'https://sapgc.wisys.com.sa:50000/b1s/v1/sml.svc/$metadata#NEW_ITEMS', 'value': [{'ItemCode': '10101010101010', 'ItemName': 'PROFESSIONAL HOT WATR BAG 27791111', 'FrgnName': 'بروفيشنال قربة ماء حار 2779', 'Price': 29.58, 'ReportCode': '729807766000157645', 'SerialType': 0, 'BatchType': 4, 'InvntItem': 'Y', 'BP_SID': '594556761000118648', 'DCS_SID': '616144142000124886', 'U_Text1': 'PROFESSIONAL HOT WATER BAG 2779', 'U_Text3': 'بروفيشنال قربة ماء حار 2779', 'U_Size': '1', 'U_Attribute': 'BAG', 'U_Color': None, 'U_Flavor': None, 'U_Count': None, 'U_PackSize': None, 'U_Concentration': None, 'U_TargetHairType': 'UPDATE', 'U_TargetSkinType': None, 'U_Scent': None, 'U_Productfunction': None, 'U_ProductIngredient': None, 'U_BRND': 'PROFESSIONAL', 'Barcode': '', 'id__': 1}]}, 'status': 'success'}
2025-07-02 14:57:18,178 - sync_service - INFO - Initialized Shopify client for store: Local Store (local)
2025-07-02 14:57:18,180 - sync_service - INFO - API Call: {'service': 'shopify', 'endpoint': 'graphql_local', 'request': {'query': '\n        query {\n            locations(first: 10) {\n                edges {\n                    node {\n                        id\n                        name\n                        address {\n                            address1\n                            city\n                            country\n                        }\n                        isActive\n                    }\n                }\n            }\n        }\n        ', 'variables': None}, 'response': None, 'status': None}
2025-07-02 14:57:19,213 - sync_service - INFO - API Call: {'service': 'shopify', 'endpoint': 'graphql_local', 'request': None, 'response': {'locations': {'edges': [{'node': {'id': 'gid://shopify/Location/70074892354', 'name': '5A by The Waterway Store', 'address': {'address1': '5A by The Waterway Developments', 'city': 'New Cairo 1', 'country': 'Egypt'}, 'isActive': True}}, {'node': {'id': 'gid://shopify/Location/70074957890', 'name': 'Arkan Store', 'address': {'address1': 'Arkan', 'city': 'First Al Sheikh Zayed', 'country': 'Egypt'}, 'isActive': True}}, {'node': {'id': 'gid://shopify/Location/68605345858', 'name': 'Cairo', 'address': {'address1': '00', 'city': 'Cairo', 'country': 'Egypt'}, 'isActive': True}}, {'node': {'id': 'gid://shopify/Location/70074990658', 'name': 'Zamalek Store', 'address': {'address1': 'Degla Center', 'city': 'Zamalek', 'country': 'Egypt'}, 'isActive': True}}]}}, 'status': 'success'}
2025-07-02 14:57:19,221 - sync_service - INFO - API Call: {'service': 'shopify', 'endpoint': 'graphql_local', 'request': {'query': '\n        query GetProducts($first: Int!, $after: String) {\n            products(first: $first, after: $after) {\n                pageInfo {\n                    hasNextPage\n                    endCursor\n                }\n                edges {\n                    node {\n                        id\n                        title\n                        handle\n                        description\n                        variants(first: 1) {\n                            edges {\n                                node {\n                                    id\n                                    sku\n                                    price\n                                    inventoryQuantity\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n        }\n        ', 'variables': {'first': 10, 'after': None}}, 'response': None, 'status': None}
2025-07-02 14:57:19,853 - sync_service - INFO - API Call: {'service': 'shopify', 'endpoint': 'graphql_local', 'request': None, 'response': {'products': {'pageInfo': {'hasNextPage': True, 'endCursor': 'eyJsYXN0X2lkIjo3NDQyMDIyNjYyMjEwLCJsYXN0X3ZhbHVlIjoiNzQ0MjAyMjY2MjIxMCJ9'}, 'edges': [{'node': {'id': 'gid://shopify/Product/7442022170690', 'title': 'Sulla Luna Earrings', 'handle': 'sulla-luna-earrings', 'description': 'Inspired by ancient Etruscan art, the Sulla Luna earrings feature a fan with cut-out triangular spirals hung from a gold-plated ornamental hook. These lightweight earrings are a go-to everyday accessory.', 'variants': {'edges': [{'node': {'id': 'gid://shopify/ProductVariant/42003146211394', 'sku': 'FG-0000075', 'price': '4800.00', 'inventoryQuantity': 0}}]}}}, {'node': {'id': 'gid://shopify/Product/7442022203458', 'title': 'Sulla Luna Mix Earrings', 'handle': 'sulla-luna-mix-earrings', 'description': 'Inspired by ancient Etruscan art, the Sulla Luna Mix earrings feature a decorated silver hook and a gold-plated silver fan that suspends from it. The fan is an elegant sheet that presents cut-out triangular spirals. These lightweight earrings are a go-to pair.', 'variants': {'edges': [{'node': {'id': 'gid://shopify/ProductVariant/42003146276930', 'sku': 'FG-0000077', 'price': '7300.00', 'inventoryQuantity': 0}}]}}}, {'node': {'id': 'gid://shopify/Product/7442022301762', 'title': 'Lima Lima Bracelet', 'handle': 'lima-lima-bracelet', 'description': "The Lima Lima bracelet features silver and gold-plated irregular scales with cutout detailing to mimic the sea coral's irregular textures.", 'variants': {'edges': [{'node': {'id': 'gid://shopify/ProductVariant/42003146342466', 'sku': 'FG-0000014', 'price': '6800.00', 'inventoryQuantity': 0}}]}}}, {'node': {'id': 'gid://shopify/Product/7442022334530', 'title': 'Harmonia Hoop', 'handle': 'harmonia-hoop', 'description': 'The Harmonia Hoop features three hoops bonded at their top with a granulated silver hoop in the middle. On either side rest polished gold hoops that are irregularly shaped. Inspired by the duality of the journey of love, the Harmonia Hoops fuse texture and smoothness with mixed metals to show how opposing forces can come together in blissful harmony.', 'variants': {'edges': [{'node': {'id': 'gid://shopify/ProductVariant/42003146408002', 'sku': 'FG-0000225', 'price': '8800.00', 'inventoryQuantity': 4}}]}}}, {'node': {'id': 'gid://shopify/Product/7442022432834', 'title': 'Harmonia Cuff', 'handle': 'harmonia-cuff', 'description': 'Mixed metal cuff is hand-shaped to twist into a curved shape, where the two ends are mirrored, but never meet. The Harmonia Cuff, with a hinged back, features a granulated silver layer which is accentuated with a gold extension that presents fluid linear cut-outs.', 'variants': {'edges': [{'node': {'id': 'gid://shopify/ProductVariant/42003146440770', 'sku': 'FG-0000280', 'price': '15000.00', 'inventoryQuantity': 0}}]}}}, {'node': {'id': 'gid://shopify/Product/7442022498370', 'title': 'Medusa Bracelet', 'handle': 'medusa-bracelet', 'description': "The Medusa Bracelet decorates the wrist with its ornate spirals. Boasting a dramatic granulated texture that offsets the polished half of the bracelet. Merging tight and fluid curves and textural elements, the Medusa Bracelet is a spell-casting piece that represents the paradox of Medusa's journey.", 'variants': {'edges': [{'node': {'id': 'gid://shopify/ProductVariant/42003146506306', 'sku': 'FG-0000287', 'price': '4300.00', 'inventoryQuantity': 0}}]}}}, {'node': {'id': 'gid://shopify/Product/7442022531138', 'title': 'Hera Earrings', 'handle': 'hera-earrings', 'description': 'Channeling the power of feminine energy, the Hera Earrings form an irregular hoop that hangs into an asymmetrical shape, held proudly by a domed stud.The innermost layer is encrusted with a granulated surface that symbolizes charged energy which accents the polished surfaces, representing the duality of women as both powerful and gentle.', 'variants': {'edges': [{'node': {'id': 'gid://shopify/ProductVariant/42003146539074', 'sku': 'FG-0000267', 'price': '4900.00', 'inventoryQuantity': 0}}]}}}, {'node': {'id': 'gid://shopify/Product/7442022563906', 'title': 'Thea Necklace', 'handle': 'thea-necklace', 'description': 'Harnessing goddess energy, the Thea Necklace is formed with crescent scales attached together, accentuated with slender hand-crafted spirals that add an airiness to the structured scales. Including an adjustable chain and hook closure, the Thea Necklace can be worn as a statement or a stacked piece.', 'variants': {'edges': [{'node': {'id': 'gid://shopify/ProductVariant/42003146571842', 'sku': 'FG-0000224', 'price': '6200.00', 'inventoryQuantity': 0}}]}}}, {'node': {'id': 'gid://shopify/Product/7442022629442', 'title': 'Thalia Necklace', 'handle': 'thalia-necklace', 'description': 'A distinct hook brings the two contrasting halves together, forming an adjustable Y-shaped necklace with a dangling, uniquely shaped pearl. The Thalia Necklace, named after the Greek Muse of youth and beauty, rejoices in its own darling silhouette that joins smoothness, roughness, structure, fluidity, strength, and preciosity together.', 'variants': {'edges': [{'node': {'id': 'gid://shopify/ProductVariant/42003146637378', 'sku': 'FG-0000223', 'price': '6200.00', 'inventoryQuantity': 0}}]}}}, {'node': {'id': 'gid://shopify/Product/7442022662210', 'title': 'Medusa Earrings', 'handle': 'medusa-earrings', 'description': 'The Medusa Earring is a slender silver spiral that traces the shape of the ear. Hung gracefully from the spiral is a medley of miniature, mismatched gold-plated charms engraved with spirals and irregular lines. Granules accentuate the spiral for a touch of edginess. These earrings are just as music is to the ears: an orchestra of shapes, fine details and playfulness.', 'variants': {'edges': [{'node': {'id': 'gid://shopify/ProductVariant/42003146670146', 'sku': 'FG-0000344', 'price': '7500.00', 'inventoryQuantity': 0}}]}}}]}}, 'status': 'success'}
2025-07-02 14:57:19,880 - sync_service - INFO - API Call: {'service': 'shopify', 'endpoint': 'graphql_local', 'request': {'query': '\n        query GetProducts($first: Int!, $after: String) {\n            products(first: $first, after: $after) {\n                pageInfo {\n                    hasNextPage\n                    endCursor\n                }\n                edges {\n                    node {\n                        id\n                        title\n                        handle\n                        description\n                        variants(first: 1) {\n                            edges {\n                                node {\n                                    id\n                                    sku\n                                    price\n                                    inventoryQuantity\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n        }\n        ', 'variables': {'first': 1, 'after': None}}, 'response': None, 'status': None}
2025-07-02 14:57:20,626 - sync_service - INFO - API Call: {'service': 'shopify', 'endpoint': 'graphql_local', 'request': None, 'response': {'products': {'pageInfo': {'hasNextPage': True, 'endCursor': 'eyJsYXN0X2lkIjo3NDQyMDIyMTcwNjkwLCJsYXN0X3ZhbHVlIjoiNzQ0MjAyMjE3MDY5MCJ9'}, 'edges': [{'node': {'id': 'gid://shopify/Product/7442022170690', 'title': 'Sulla Luna Earrings', 'handle': 'sulla-luna-earrings', 'description': 'Inspired by ancient Etruscan art, the Sulla Luna earrings feature a fan with cut-out triangular spirals hung from a gold-plated ornamental hook. These lightweight earrings are a go-to everyday accessory.', 'variants': {'edges': [{'node': {'id': 'gid://shopify/ProductVariant/42003146211394', 'sku': 'FG-0000075', 'price': '4800.00', 'inventoryQuantity': 0}}]}}}]}}, 'status': 'success'}
2025-07-02 14:57:21,518 - sync_service - INFO - API Call: {'service': 'shopify', 'endpoint': 'graphql_local', 'request': {'query': '\n            query GetProductBySku($sku: String!) {\n                products(first: 1, query: $sku) {\n                    edges {\n                        node {\n                            id\n                            title\n                            variants(first: 1) {\n                                edges {\n                                    node {\n                                        sku\n                                    }\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n            ', 'variables': {'sku': 'sku:FG-0000075'}}, 'response': None, 'status': None}
2025-07-02 14:57:22,058 - sync_service - INFO - API Call: {'service': 'shopify', 'endpoint': 'graphql_local', 'request': None, 'response': {'products': {'edges': [{'node': {'id': 'gid://shopify/Product/7442022170690', 'title': 'Sulla Luna Earrings', 'variants': {'edges': [{'node': {'sku': 'FG-0000075'}}]}}}]}}, 'status': 'success'}
2025-07-08 23:38:48,034 - sync_service - INFO - Initialized Shopify client for store: Local Store (local)
2025-07-08 23:38:55,534 - sync_service - INFO - Initialized Shopify client for store: Local Store (local)
2025-07-08 23:41:22,046 - sync_service - INFO - Initialized Shopify client for store: Local Store (local)
2025-07-08 23:41:22,695 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'login', 'request': {'company': 'JudeBenHalim_Test', 'user': 'manager'}, 'response': None, 'status': None}
2025-07-08 23:41:23,311 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'login', 'request': None, 'response': {'status': 'success'}, 'status': 'success'}
2025-07-08 23:41:23,312 - sync_service - INFO - SAP login successful
2025-07-08 23:41:23,314 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'view.svc/MASHURA_New_ItemsB1SLQuery', 'request': {'method': 'GET', 'url': 'https://10.0.0.100:50000/b1s/v1/view.svc/MASHURA_New_ItemsB1SLQuery', 'data': None, 'params': None}, 'response': None, 'status': None}
2025-07-08 23:41:23,474 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'view.svc/MASHURA_New_ItemsB1SLQuery', 'request': None, 'response': {'odata.metadata': 'https://10.0.0.100:50000/b1s/v1/view.svc/$metadata#MASHURA_New_ItemsB1SLQuery', 'value': [{'itemcode': 'FG-0000701', 'ItemName': 'Morsi-Black-Gold', 'MainProduct': 'Morsi Necklace', 'Color': 'Black Gold', 'OnHand': 10.0, 'IsCommited': 0.0, 'Available': 10.0, 'Price': 2500.0, 'Status': 'new', 'Shopify_ProductCode': '', 'Shopify_Store': 'local', 'id__': 1}, {'itemcode': 'FG-0000702', 'ItemName': 'Morsi-Rose-Gold', 'MainProduct': 'Morsi Necklace', 'Color': 'Rose Gold', 'OnHand': 15.0, 'IsCommited': 0.0, 'Available': 15.0, 'Price': 2500.0, 'Status': 'new', 'Shopify_ProductCode': '', 'Shopify_Store': 'local', 'id__': 2}, {'itemcode': 'FG-0000703', 'ItemName': 'Morsi-White-Gold', 'MainProduct': 'Morsi Necklace', 'Color': 'White Gold', 'OnHand': 20.0, 'IsCommited': 0.0, 'Available': 20.0, 'Price': 2500.0, 'Status': 'new', 'Shopify_ProductCode': '', 'Shopify_Store': 'local', 'id__': 3}, {'itemcode': 'FG-0000701', 'ItemName': 'Morsi-Black-Gold', 'MainProduct': 'Morsi Necklace', 'Color': 'Black Gold', 'OnHand': 10.0, 'IsCommited': 0.0, 'Available': 10.0, 'Price': 3500.0, 'Status': 'new', 'Shopify_ProductCode': '', 'Shopify_Store': 'international', 'id__': 4}, {'itemcode': 'FG-0000702', 'ItemName': 'Morsi-Rose-Gold', 'MainProduct': 'Morsi Necklace', 'Color': 'Rose Gold', 'OnHand': 15.0, 'IsCommited': 0.0, 'Available': 15.0, 'Price': 3500.0, 'Status': 'new', 'Shopify_ProductCode': '', 'Shopify_Store': 'international', 'id__': 5}, {'itemcode': 'FG-0000703', 'ItemName': 'Morsi-White-Gold', 'MainProduct': 'Morsi Necklace', 'Color': 'White Gold', 'OnHand': 20.0, 'IsCommited': 0.0, 'Available': 20.0, 'Price': 3500.0, 'Status': 'new', 'Shopify_ProductCode': '', 'Shopify_Store': 'international', 'id__': 6}]}, 'status': 'success'}
2025-07-08 23:41:23,478 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': "view.svc/MASHURA_New_ItemsB1SLQuery?$filter=Shopify_Store eq 'local'&$orderby=MainProduct", 'request': {'method': 'GET', 'url': "https://10.0.0.100:50000/b1s/v1/view.svc/MASHURA_New_ItemsB1SLQuery?$filter=Shopify_Store eq 'local'&$orderby=MainProduct", 'data': None, 'params': None}, 'response': None, 'status': None}
2025-07-08 23:41:23,618 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': "view.svc/MASHURA_New_ItemsB1SLQuery?$filter=Shopify_Store eq 'local'&$orderby=MainProduct", 'request': None, 'response': {'odata.metadata': 'https://10.0.0.100:50000/b1s/v1/view.svc/$metadata#MASHURA_New_ItemsB1SLQuery', 'value': [{'itemcode': 'FG-0000701', 'ItemName': 'Morsi-Black-Gold', 'MainProduct': 'Morsi Necklace', 'Color': 'Black Gold', 'OnHand': 10.0, 'IsCommited': 0.0, 'Available': 10.0, 'Price': 2500.0, 'Status': 'new', 'Shopify_ProductCode': '', 'Shopify_Store': 'local', 'id__': 1}, {'itemcode': 'FG-0000702', 'ItemName': 'Morsi-Rose-Gold', 'MainProduct': 'Morsi Necklace', 'Color': 'Rose Gold', 'OnHand': 15.0, 'IsCommited': 0.0, 'Available': 15.0, 'Price': 2500.0, 'Status': 'new', 'Shopify_ProductCode': '', 'Shopify_Store': 'local', 'id__': 2}, {'itemcode': 'FG-0000703', 'ItemName': 'Morsi-White-Gold', 'MainProduct': 'Morsi Necklace', 'Color': 'White Gold', 'OnHand': 20.0, 'IsCommited': 0.0, 'Available': 20.0, 'Price': 2500.0, 'Status': 'new', 'Shopify_ProductCode': '', 'Shopify_Store': 'local', 'id__': 3}]}, 'status': 'success'}
2025-07-08 23:48:34,772 - sync_service - INFO - Initialized Shopify client for store: Local Store (local)
2025-07-08 23:48:34,786 - sync_service - INFO - Starting multi-store new items sync from SAP to Shopify
2025-07-08 23:48:34,787 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'login', 'request': {'company': 'JudeBenHalim_Test', 'user': 'manager'}, 'response': None, 'status': None}
2025-07-08 23:48:35,372 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'login', 'request': None, 'response': {'status': 'success'}, 'status': 'success'}
2025-07-08 23:48:35,372 - sync_service - INFO - SAP login successful
2025-07-08 23:48:35,373 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'view.svc/MASHURA_New_ItemsB1SLQuery', 'request': {'method': 'GET', 'url': 'https://10.0.0.100:50000/b1s/v1/view.svc/MASHURA_New_ItemsB1SLQuery', 'data': None, 'params': None}, 'response': None, 'status': None}
2025-07-08 23:48:35,469 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'view.svc/MASHURA_New_ItemsB1SLQuery', 'request': None, 'response': {'odata.metadata': 'https://10.0.0.100:50000/b1s/v1/view.svc/$metadata#MASHURA_New_ItemsB1SLQuery', 'value': [{'itemcode': 'FG-0000701', 'ItemName': 'Morsi-Black-Gold', 'MainProduct': 'Morsi Necklace', 'Color': 'Black Gold', 'OnHand': 10.0, 'IsCommited': 0.0, 'Available': 10.0, 'Price': 2500.0, 'Status': 'new', 'Shopify_ProductCode': '', 'Shopify_Store': 'local', 'id__': 1}, {'itemcode': 'FG-0000702', 'ItemName': 'Morsi-Rose-Gold', 'MainProduct': 'Morsi Necklace', 'Color': 'Rose Gold', 'OnHand': 15.0, 'IsCommited': 0.0, 'Available': 15.0, 'Price': 2500.0, 'Status': 'new', 'Shopify_ProductCode': '', 'Shopify_Store': 'local', 'id__': 2}, {'itemcode': 'FG-0000703', 'ItemName': 'Morsi-White-Gold', 'MainProduct': 'Morsi Necklace', 'Color': 'White Gold', 'OnHand': 20.0, 'IsCommited': 0.0, 'Available': 20.0, 'Price': 2500.0, 'Status': 'new', 'Shopify_ProductCode': '', 'Shopify_Store': 'local', 'id__': 3}, {'itemcode': 'FG-0000701', 'ItemName': 'Morsi-Black-Gold', 'MainProduct': 'Morsi Necklace', 'Color': 'Black Gold', 'OnHand': 10.0, 'IsCommited': 0.0, 'Available': 10.0, 'Price': 3500.0, 'Status': 'new', 'Shopify_ProductCode': '', 'Shopify_Store': 'international', 'id__': 4}, {'itemcode': 'FG-0000702', 'ItemName': 'Morsi-Rose-Gold', 'MainProduct': 'Morsi Necklace', 'Color': 'Rose Gold', 'OnHand': 15.0, 'IsCommited': 0.0, 'Available': 15.0, 'Price': 3500.0, 'Status': 'new', 'Shopify_ProductCode': '', 'Shopify_Store': 'international', 'id__': 5}, {'itemcode': 'FG-0000703', 'ItemName': 'Morsi-White-Gold', 'MainProduct': 'Morsi Necklace', 'Color': 'White Gold', 'OnHand': 20.0, 'IsCommited': 0.0, 'Available': 20.0, 'Price': 3500.0, 'Status': 'new', 'Shopify_ProductCode': '', 'Shopify_Store': 'international', 'id__': 6}]}, 'status': 'success'}
2025-07-08 23:48:35,470 - sync_service - INFO - Retrieved 6 new items from SAP
2025-07-08 23:48:35,470 - sync_service - INFO - Grouped 6 items into 1 product groups
2025-07-08 23:48:35,471 - sync_service - INFO - Processing product group:  with 1 items
2025-07-08 23:48:35,471 - sync_service - INFO - Creating product in store: Local Store
2025-07-08 23:48:35,471 - sync_service - INFO - API Call: {'service': 'shopify', 'endpoint': 'graphql_local', 'request': {'query': '\n        mutation productCreate($input: ProductInput!) {\n            productCreate(input: $input) {\n                product {\n                    id\n                    title\n                    handle\n                    variants(first: 50) {\n                        edges {\n                            node {\n                                id\n                                sku\n                                inventoryItem {\n                                    id\n                                }\n                                selectedOptions {\n                                    name\n                                    value\n                                }\n                            }\n                        }\n                    }\n                }\n                userErrors {\n                    field\n                    message\n                }\n            }\n        }\n        ', 'variables': {'input': {'title': 'Morsi-Black-Gold', 'descriptionHtml': '', 'vendor': '', 'productType': 'Default', 'status': 'DRAFT', 'tags': [], 'variants': [{'sku': '', 'price': '2500.0', 'inventoryPolicy': 'DENY', 'inventoryManagement': 'SHOPIFY', 'inventoryQuantities': [{'availableQuantity': 10, 'locationId': 'gid://shopify/Location/76913967258'}], 'weight': 0.0, 'weightUnit': 'KILOGRAMS'}], 'seo': {'title': 'Morsi-Black-Gold', 'description': ''}}}}, 'response': None, 'status': None}
2025-07-08 23:48:36,150 - sync_service - INFO - API Call: {'service': 'shopify', 'endpoint': 'graphql_local', 'request': None, 'response': {'productCreate': {'product': None, 'userErrors': [{'field': ['variants', '0', 'inventoryQuantities'], 'message': "The quantity couldn't be set because the location was deleted."}]}}, 'status': 'success'}
2025-07-08 23:48:36,151 - sync_service - ERROR - Failed to create product in store local: The quantity couldn't be set because the location was deleted.
2025-07-08 23:48:36,152 - sync_service - ERROR - Failed to sync product group  to all stores
2025-07-08 23:48:36,659 - sync_service - INFO - Sync Event: {'sync_type': 'multi_store_new_items_sap_to_shopify', 'items_processed': 1, 'success_count': 0, 'error_count': 1, 'details': None}
2025-07-08 23:48:36,660 - sync_service - INFO - Multi-store new items sync completed: 1 processed, 0 successful, 1 errors
2025-07-08 23:53:16,829 - sync_service - INFO - Initialized Shopify client for store: Local Store (local)
2025-07-08 23:53:16,832 - sync_service - INFO - API Call: {'service': 'shopify', 'endpoint': 'graphql_local', 'request': {'query': '\n        query {\n            locations(first: 10) {\n                edges {\n                    node {\n                        id\n                        name\n                        address {\n                            address1\n                            city\n                            country\n                        }\n                        isActive\n                    }\n                }\n            }\n        }\n        ', 'variables': None}, 'response': None, 'status': None}
2025-07-08 23:53:17,217 - sync_service - INFO - API Call: {'service': 'shopify', 'endpoint': 'graphql_local', 'request': None, 'response': {'locations': {'edges': [{'node': {'id': 'gid://shopify/Location/70074892354', 'name': '5A by The Waterway Store', 'address': {'address1': '5A by The Waterway Developments', 'city': 'New Cairo 1', 'country': 'Egypt'}, 'isActive': True}}, {'node': {'id': 'gid://shopify/Location/70074957890', 'name': 'Arkan Store', 'address': {'address1': 'Arkan', 'city': 'First Al Sheikh Zayed', 'country': 'Egypt'}, 'isActive': True}}, {'node': {'id': 'gid://shopify/Location/68605345858', 'name': 'Cairo', 'address': {'address1': '00', 'city': 'Cairo', 'country': 'Egypt'}, 'isActive': True}}, {'node': {'id': 'gid://shopify/Location/70074990658', 'name': 'Zamalek Store', 'address': {'address1': 'Degla Center', 'city': 'Zamalek', 'country': 'Egypt'}, 'isActive': True}}]}}, 'status': 'success'}
2025-07-08 23:53:47,569 - sync_service - INFO - Initialized Shopify client for store: Local Store (local)
2025-07-08 23:53:47,582 - sync_service - INFO - Starting multi-store new items sync from SAP to Shopify
2025-07-08 23:53:47,583 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'login', 'request': {'company': 'JudeBenHalim_Test', 'user': 'manager'}, 'response': None, 'status': None}
2025-07-08 23:53:48,172 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'login', 'request': None, 'response': {'status': 'success'}, 'status': 'success'}
2025-07-08 23:53:48,173 - sync_service - INFO - SAP login successful
2025-07-08 23:53:48,174 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'view.svc/MASHURA_New_ItemsB1SLQuery', 'request': {'method': 'GET', 'url': 'https://10.0.0.100:50000/b1s/v1/view.svc/MASHURA_New_ItemsB1SLQuery', 'data': None, 'params': None}, 'response': None, 'status': None}
2025-07-08 23:53:48,276 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'view.svc/MASHURA_New_ItemsB1SLQuery', 'request': None, 'response': {'odata.metadata': 'https://10.0.0.100:50000/b1s/v1/view.svc/$metadata#MASHURA_New_ItemsB1SLQuery', 'value': [{'itemcode': 'FG-0000701', 'ItemName': 'Morsi-Black-Gold', 'MainProduct': 'Morsi Necklace', 'Color': 'Black Gold', 'OnHand': 10.0, 'IsCommited': 0.0, 'Available': 10.0, 'Price': 2500.0, 'Status': 'new', 'Shopify_ProductCode': '', 'Shopify_Store': 'local', 'id__': 1}, {'itemcode': 'FG-0000702', 'ItemName': 'Morsi-Rose-Gold', 'MainProduct': 'Morsi Necklace', 'Color': 'Rose Gold', 'OnHand': 15.0, 'IsCommited': 0.0, 'Available': 15.0, 'Price': 2500.0, 'Status': 'new', 'Shopify_ProductCode': '', 'Shopify_Store': 'local', 'id__': 2}, {'itemcode': 'FG-0000703', 'ItemName': 'Morsi-White-Gold', 'MainProduct': 'Morsi Necklace', 'Color': 'White Gold', 'OnHand': 20.0, 'IsCommited': 0.0, 'Available': 20.0, 'Price': 2500.0, 'Status': 'new', 'Shopify_ProductCode': '', 'Shopify_Store': 'local', 'id__': 3}, {'itemcode': 'FG-0000701', 'ItemName': 'Morsi-Black-Gold', 'MainProduct': 'Morsi Necklace', 'Color': 'Black Gold', 'OnHand': 10.0, 'IsCommited': 0.0, 'Available': 10.0, 'Price': 3500.0, 'Status': 'new', 'Shopify_ProductCode': '', 'Shopify_Store': 'international', 'id__': 4}, {'itemcode': 'FG-0000702', 'ItemName': 'Morsi-Rose-Gold', 'MainProduct': 'Morsi Necklace', 'Color': 'Rose Gold', 'OnHand': 15.0, 'IsCommited': 0.0, 'Available': 15.0, 'Price': 3500.0, 'Status': 'new', 'Shopify_ProductCode': '', 'Shopify_Store': 'international', 'id__': 5}, {'itemcode': 'FG-0000703', 'ItemName': 'Morsi-White-Gold', 'MainProduct': 'Morsi Necklace', 'Color': 'White Gold', 'OnHand': 20.0, 'IsCommited': 0.0, 'Available': 20.0, 'Price': 3500.0, 'Status': 'new', 'Shopify_ProductCode': '', 'Shopify_Store': 'international', 'id__': 6}]}, 'status': 'success'}
2025-07-08 23:53:48,279 - sync_service - INFO - Retrieved 6 new items from SAP
2025-07-08 23:53:48,280 - sync_service - INFO - Grouped 6 items into 1 product groups
2025-07-08 23:53:48,281 - sync_service - INFO - Processing product group:  with 1 items
2025-07-08 23:53:48,282 - sync_service - INFO - Creating product in store: Local Store
2025-07-08 23:53:48,283 - sync_service - INFO - API Call: {'service': 'shopify', 'endpoint': 'graphql_local', 'request': {'query': '\n        mutation productCreate($input: ProductInput!) {\n            productCreate(input: $input) {\n                product {\n                    id\n                    title\n                    handle\n                    variants(first: 50) {\n                        edges {\n                            node {\n                                id\n                                sku\n                                inventoryItem {\n                                    id\n                                }\n                                selectedOptions {\n                                    name\n                                    value\n                                }\n                            }\n                        }\n                    }\n                }\n                userErrors {\n                    field\n                    message\n                }\n            }\n        }\n        ', 'variables': {'input': {'title': 'Morsi-Black-Gold', 'descriptionHtml': '', 'vendor': '', 'productType': 'Default', 'status': 'DRAFT', 'tags': [], 'variants': [{'sku': '', 'price': '2500.0', 'inventoryPolicy': 'DENY', 'inventoryManagement': 'SHOPIFY', 'inventoryQuantities': [{'availableQuantity': 10, 'locationId': 'gid://shopify/Location/68605345858'}], 'weight': 0.0, 'weightUnit': 'KILOGRAMS'}], 'seo': {'title': 'Morsi-Black-Gold', 'description': ''}}}}, 'response': None, 'status': None}
2025-07-08 23:53:49,079 - sync_service - INFO - API Call: {'service': 'shopify', 'endpoint': 'graphql_local', 'request': None, 'response': {'productCreate': {'product': {'id': 'gid://shopify/Product/7510088319042', 'title': 'Morsi-Black-Gold', 'handle': 'morsi-black-gold', 'variants': {'edges': [{'node': {'id': 'gid://shopify/ProductVariant/42293279981634', 'sku': None, 'inventoryItem': {'id': 'gid://shopify/InventoryItem/44394408247362'}, 'selectedOptions': [{'name': 'Title', 'value': 'Default Title'}]}}]}}, 'userErrors': []}}, 'status': 'success'}
2025-07-08 23:53:49,080 - sync_service - INFO - Successfully created product in store local
2025-07-08 23:53:49,080 - sync_service - INFO - Successfully synced product group  to all stores
2025-07-08 23:53:49,589 - sync_service - INFO - Sync Event: {'sync_type': 'multi_store_new_items_sap_to_shopify', 'items_processed': 1, 'success_count': 1, 'error_count': 0, 'details': None}
2025-07-08 23:53:49,590 - sync_service - INFO - Multi-store new items sync completed: 1 processed, 1 successful, 0 errors
2025-07-08 23:58:32,279 - sync_service - INFO - Initialized Shopify client for store: Local Store (local)
2025-07-08 23:58:32,281 - sync_service - INFO - Starting multi-store new items sync from SAP to Shopify
2025-07-08 23:58:32,281 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'login', 'request': {'company': 'JudeBenHalim_Test', 'user': 'manager'}, 'response': None, 'status': None}
2025-07-08 23:58:33,292 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'login', 'request': None, 'response': {'status': 'success'}, 'status': 'success'}
2025-07-08 23:58:33,293 - sync_service - INFO - SAP login successful
2025-07-08 23:58:33,294 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'view.svc/MASHURA_New_ItemsB1SLQuery', 'request': {'method': 'GET', 'url': 'https://10.0.0.100:50000/b1s/v1/view.svc/MASHURA_New_ItemsB1SLQuery', 'data': None, 'params': None}, 'response': None, 'status': None}
2025-07-08 23:58:33,813 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'view.svc/MASHURA_New_ItemsB1SLQuery', 'request': None, 'response': {'odata.metadata': 'https://10.0.0.100:50000/b1s/v1/view.svc/$metadata#MASHURA_New_ItemsB1SLQuery', 'value': [{'itemcode': 'FG-0000701', 'ItemName': 'Morsi-Black-Gold', 'MainProduct': 'Morsi Necklace', 'Color': 'Black Gold', 'OnHand': 10.0, 'IsCommited': 0.0, 'Available': 10.0, 'Price': 2500.0, 'Status': 'new', 'Shopify_ProductCode': '', 'Shopify_Store': 'local', 'id__': 1}, {'itemcode': 'FG-0000702', 'ItemName': 'Morsi-Rose-Gold', 'MainProduct': 'Morsi Necklace', 'Color': 'Rose Gold', 'OnHand': 15.0, 'IsCommited': 0.0, 'Available': 15.0, 'Price': 2500.0, 'Status': 'new', 'Shopify_ProductCode': '', 'Shopify_Store': 'local', 'id__': 2}, {'itemcode': 'FG-0000703', 'ItemName': 'Morsi-White-Gold', 'MainProduct': 'Morsi Necklace', 'Color': 'White Gold', 'OnHand': 20.0, 'IsCommited': 0.0, 'Available': 20.0, 'Price': 2500.0, 'Status': 'new', 'Shopify_ProductCode': '', 'Shopify_Store': 'local', 'id__': 3}, {'itemcode': 'FG-0000701', 'ItemName': 'Morsi-Black-Gold', 'MainProduct': 'Morsi Necklace', 'Color': 'Black Gold', 'OnHand': 10.0, 'IsCommited': 0.0, 'Available': 10.0, 'Price': 3500.0, 'Status': 'new', 'Shopify_ProductCode': '', 'Shopify_Store': 'international', 'id__': 4}, {'itemcode': 'FG-0000702', 'ItemName': 'Morsi-Rose-Gold', 'MainProduct': 'Morsi Necklace', 'Color': 'Rose Gold', 'OnHand': 15.0, 'IsCommited': 0.0, 'Available': 15.0, 'Price': 3500.0, 'Status': 'new', 'Shopify_ProductCode': '', 'Shopify_Store': 'international', 'id__': 5}, {'itemcode': 'FG-0000703', 'ItemName': 'Morsi-White-Gold', 'MainProduct': 'Morsi Necklace', 'Color': 'White Gold', 'OnHand': 20.0, 'IsCommited': 0.0, 'Available': 20.0, 'Price': 3500.0, 'Status': 'new', 'Shopify_ProductCode': '', 'Shopify_Store': 'international', 'id__': 6}]}, 'status': 'success'}
2025-07-08 23:58:33,814 - sync_service - INFO - Retrieved 6 new items from SAP
2025-07-08 23:58:33,815 - sync_service - INFO - Product group: ('Morsi Necklace', 'local') has 3 items
2025-07-08 23:58:33,815 - sync_service - INFO - Product group: ('Morsi Necklace', 'international') has 3 items
2025-07-08 23:58:33,816 - sync_service - INFO - Grouped 6 items into 2 product groups
2025-07-08 23:58:33,817 - sync_service - INFO - Processing product group: ('Morsi Necklace', 'local') with 3 items
2025-07-08 23:58:33,817 - sync_service - INFO - Creating product in store: Local Store
2025-07-08 23:58:33,818 - sync_service - INFO - API Call: {'service': 'shopify', 'endpoint': 'graphql_local', 'request': {'query': '\n        mutation productCreate($input: ProductInput!) {\n            productCreate(input: $input) {\n                product {\n                    id\n                    title\n                    handle\n                    variants(first: 50) {\n                        edges {\n                            node {\n                                id\n                                sku\n                                inventoryItem {\n                                    id\n                                }\n                                selectedOptions {\n                                    name\n                                    value\n                                }\n                            }\n                        }\n                    }\n                }\n                userErrors {\n                    field\n                    message\n                }\n            }\n        }\n        ', 'variables': {'input': {'title': 'Morsi-Black-Gold', 'descriptionHtml': '', 'vendor': '', 'productType': 'Default', 'status': 'DRAFT', 'tags': [], 'options': [{'name': 'Color'}], 'variants': [{'sku': '', 'price': '2500.0', 'inventoryPolicy': 'DENY', 'inventoryManagement': 'SHOPIFY', 'inventoryQuantities': [{'availableQuantity': 10, 'locationId': 'gid://shopify/Location/68605345858'}], 'weight': 0.0, 'weightUnit': 'KILOGRAMS'}, {'sku': '', 'price': '2500.0', 'inventoryPolicy': 'DENY', 'inventoryManagement': 'SHOPIFY', 'inventoryQuantities': [{'availableQuantity': 10, 'locationId': 'gid://shopify/Location/68605345858'}], 'weight': 0.0, 'weightUnit': 'KILOGRAMS'}, {'sku': '', 'price': '2500.0', 'inventoryPolicy': 'DENY', 'inventoryManagement': 'SHOPIFY', 'inventoryQuantities': [{'availableQuantity': 10, 'locationId': 'gid://shopify/Location/68605345858'}], 'weight': 0.0, 'weightUnit': 'KILOGRAMS'}], 'seo': {'title': 'Morsi-Black-Gold', 'description': ''}}}}, 'response': None, 'status': None}
2025-07-08 23:58:43,819 - sync_service - ERROR - GraphQL query error for store local: 
2025-07-08 23:58:43,820 - sync_service - ERROR - Failed to create product in store local: GraphQL query error for store local: 
2025-07-08 23:58:43,821 - sync_service - ERROR - Failed to sync product group ('Morsi Necklace', 'local') to all stores
2025-07-08 23:58:44,330 - sync_service - INFO - Processing product group: ('Morsi Necklace', 'international') with 3 items
2025-07-08 23:58:44,330 - sync_service - INFO - Creating product in store: Local Store
2025-07-08 23:58:44,331 - sync_service - INFO - API Call: {'service': 'shopify', 'endpoint': 'graphql_local', 'request': {'query': '\n        mutation productCreate($input: ProductInput!) {\n            productCreate(input: $input) {\n                product {\n                    id\n                    title\n                    handle\n                    variants(first: 50) {\n                        edges {\n                            node {\n                                id\n                                sku\n                                inventoryItem {\n                                    id\n                                }\n                                selectedOptions {\n                                    name\n                                    value\n                                }\n                            }\n                        }\n                    }\n                }\n                userErrors {\n                    field\n                    message\n                }\n            }\n        }\n        ', 'variables': {'input': {'title': 'Morsi-Black-Gold', 'descriptionHtml': '', 'vendor': '', 'productType': 'Default', 'status': 'DRAFT', 'tags': [], 'options': [{'name': 'Color'}], 'variants': [{'sku': '', 'price': '3500.0', 'inventoryPolicy': 'DENY', 'inventoryManagement': 'SHOPIFY', 'inventoryQuantities': [{'availableQuantity': 10, 'locationId': 'gid://shopify/Location/68605345858'}], 'weight': 0.0, 'weightUnit': 'KILOGRAMS'}, {'sku': '', 'price': '3500.0', 'inventoryPolicy': 'DENY', 'inventoryManagement': 'SHOPIFY', 'inventoryQuantities': [{'availableQuantity': 10, 'locationId': 'gid://shopify/Location/68605345858'}], 'weight': 0.0, 'weightUnit': 'KILOGRAMS'}, {'sku': '', 'price': '3500.0', 'inventoryPolicy': 'DENY', 'inventoryManagement': 'SHOPIFY', 'inventoryQuantities': [{'availableQuantity': 10, 'locationId': 'gid://shopify/Location/68605345858'}], 'weight': 0.0, 'weightUnit': 'KILOGRAMS'}], 'seo': {'title': 'Morsi-Black-Gold', 'description': ''}}}}, 'response': None, 'status': None}
2025-07-08 23:58:44,754 - sync_service - ERROR - GraphQL query error for store local: {'message': 'Variable $input of type ProductInput! was provided invalid value for options.0 (Could not coerce value {name:"Color"} to String)', 'locations': [{'line': 1, 'column': 24}], 'extensions': {'value': {'title': 'Morsi-Black-Gold', 'descriptionHtml': '', 'vendor': '', 'productType': 'Default', 'status': 'DRAFT', 'tags': [], 'options': [{'name': 'Color'}], 'variants': [{'sku': '', 'price': '3500.0', 'inventoryPolicy': 'DENY', 'inventoryManagement': 'SHOPIFY', 'inventoryQuantities': [{'availableQuantity': 10, 'locationId': 'gid://shopify/Location/68605345858'}], 'weight': 0.0, 'weightUnit': 'KILOGRAMS'}, {'sku': '', 'price': '3500.0', 'inventoryPolicy': 'DENY', 'inventoryManagement': 'SHOPIFY', 'inventoryQuantities': [{'availableQuantity': 10, 'locationId': 'gid://shopify/Location/68605345858'}], 'weight': 0.0, 'weightUnit': 'KILOGRAMS'}, {'sku': '', 'price': '3500.0', 'inventoryPolicy': 'DENY', 'inventoryManagement': 'SHOPIFY', 'inventoryQuantities': [{'availableQuantity': 10, 'locationId': 'gid://shopify/Location/68605345858'}], 'weight': 0.0, 'weightUnit': 'KILOGRAMS'}], 'seo': {'title': 'Morsi-Black-Gold', 'description': ''}}, 'problems': [{'path': ['options', 0], 'explanation': 'Could not coerce value {name:"Color"} to String'}]}}
GraphQL Errors: [
  {
    "message": "Variable $input of type ProductInput! was provided invalid value for options.0 (Could not coerce value {name:\"Color\"} to String)",
    "locations": [
      {
        "line": 1,
        "column": 24
      }
    ],
    "extensions": {
      "value": {
        "title": "Morsi-Black-Gold",
        "descriptionHtml": "",
        "vendor": "",
        "productType": "Default",
        "status": "DRAFT",
        "tags": [],
        "options": [
          {
            "name": "Color"
          }
        ],
        "variants": [
          {
            "sku": "",
            "price": "3500.0",
            "inventoryPolicy": "DENY",
            "inventoryManagement": "SHOPIFY",
            "inventoryQuantities": [
              {
                "availableQuantity": 10,
                "locationId": "gid://shopify/Location/68605345858"
              }
            ],
            "weight": 0.0,
            "weightUnit": "KILOGRAMS"
          },
          {
            "sku": "",
            "price": "3500.0",
            "inventoryPolicy": "DENY",
            "inventoryManagement": "SHOPIFY",
            "inventoryQuantities": [
              {
                "availableQuantity": 10,
                "locationId": "gid://shopify/Location/68605345858"
              }
            ],
            "weight": 0.0,
            "weightUnit": "KILOGRAMS"
          },
          {
            "sku": "",
            "price": "3500.0",
            "inventoryPolicy": "DENY",
            "inventoryManagement": "SHOPIFY",
            "inventoryQuantities": [
              {
                "availableQuantity": 10,
                "locationId": "gid://shopify/Location/68605345858"
              }
            ],
            "weight": 0.0,
            "weightUnit": "KILOGRAMS"
          }
        ],
        "seo": {
          "title": "Morsi-Black-Gold",
          "description": ""
        }
      },
      "problems": [
        {
          "path": [
            "options",
            0
          ],
          "explanation": "Could not coerce value {name:\"Color\"} to String"
        }
      ]
    }
  }
]
2025-07-08 23:58:44,755 - sync_service - ERROR - Failed to create product in store local: GraphQL query error for store local: {'message': 'Variable $input of type ProductInput! was provided invalid value for options.0 (Could not coerce value {name:"Color"} to String)', 'locations': [{'line': 1, 'column': 24}], 'extensions': {'value': {'title': 'Morsi-Black-Gold', 'descriptionHtml': '', 'vendor': '', 'productType': 'Default', 'status': 'DRAFT', 'tags': [], 'options': [{'name': 'Color'}], 'variants': [{'sku': '', 'price': '3500.0', 'inventoryPolicy': 'DENY', 'inventoryManagement': 'SHOPIFY', 'inventoryQuantities': [{'availableQuantity': 10, 'locationId': 'gid://shopify/Location/68605345858'}], 'weight': 0.0, 'weightUnit': 'KILOGRAMS'}, {'sku': '', 'price': '3500.0', 'inventoryPolicy': 'DENY', 'inventoryManagement': 'SHOPIFY', 'inventoryQuantities': [{'availableQuantity': 10, 'locationId': 'gid://shopify/Location/68605345858'}], 'weight': 0.0, 'weightUnit': 'KILOGRAMS'}, {'sku': '', 'price': '3500.0', 'inventoryPolicy': 'DENY', 'inventoryManagement': 'SHOPIFY', 'inventoryQuantities': [{'availableQuantity': 10, 'locationId': 'gid://shopify/Location/68605345858'}], 'weight': 0.0, 'weightUnit': 'KILOGRAMS'}], 'seo': {'title': 'Morsi-Black-Gold', 'description': ''}}, 'problems': [{'path': ['options', 0], 'explanation': 'Could not coerce value {name:"Color"} to String'}]}}
GraphQL Errors: [
  {
    "message": "Variable $input of type ProductInput! was provided invalid value for options.0 (Could not coerce value {name:\"Color\"} to String)",
    "locations": [
      {
        "line": 1,
        "column": 24
      }
    ],
    "extensions": {
      "value": {
        "title": "Morsi-Black-Gold",
        "descriptionHtml": "",
        "vendor": "",
        "productType": "Default",
        "status": "DRAFT",
        "tags": [],
        "options": [
          {
            "name": "Color"
          }
        ],
        "variants": [
          {
            "sku": "",
            "price": "3500.0",
            "inventoryPolicy": "DENY",
            "inventoryManagement": "SHOPIFY",
            "inventoryQuantities": [
              {
                "availableQuantity": 10,
                "locationId": "gid://shopify/Location/68605345858"
              }
            ],
            "weight": 0.0,
            "weightUnit": "KILOGRAMS"
          },
          {
            "sku": "",
            "price": "3500.0",
            "inventoryPolicy": "DENY",
            "inventoryManagement": "SHOPIFY",
            "inventoryQuantities": [
              {
                "availableQuantity": 10,
                "locationId": "gid://shopify/Location/68605345858"
              }
            ],
            "weight": 0.0,
            "weightUnit": "KILOGRAMS"
          },
          {
            "sku": "",
            "price": "3500.0",
            "inventoryPolicy": "DENY",
            "inventoryManagement": "SHOPIFY",
            "inventoryQuantities": [
              {
                "availableQuantity": 10,
                "locationId": "gid://shopify/Location/68605345858"
              }
            ],
            "weight": 0.0,
            "weightUnit": "KILOGRAMS"
          }
        ],
        "seo": {
          "title": "Morsi-Black-Gold",
          "description": ""
        }
      },
      "problems": [
        {
          "path": [
            "options",
            0
          ],
          "explanation": "Could not coerce value {name:\"Color\"} to String"
        }
      ]
    }
  }
]
2025-07-08 23:58:44,757 - sync_service - ERROR - Failed to sync product group ('Morsi Necklace', 'international') to all stores
2025-07-08 23:58:45,262 - sync_service - INFO - Sync Event: {'sync_type': 'multi_store_new_items_sap_to_shopify', 'items_processed': 2, 'success_count': 0, 'error_count': 2, 'details': None}
2025-07-08 23:58:45,263 - sync_service - INFO - Multi-store new items sync completed: 2 processed, 0 successful, 2 errors
2025-07-09 00:08:42,635 - sync_service - INFO - Initialized Shopify client for store: Local Store (local)
2025-07-09 00:08:42,637 - sync_service - INFO - Starting multi-store new items sync from SAP to Shopify
2025-07-09 00:08:42,637 - sync_service - INFO - Fetching new items for store: local
2025-07-09 00:08:42,637 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'login', 'request': {'company': 'JudeBenHalim_Test', 'user': 'manager'}, 'response': None, 'status': None}
2025-07-09 00:08:43,203 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'login', 'request': None, 'response': {'status': 'success'}, 'status': 'success'}
2025-07-09 00:08:43,204 - sync_service - INFO - SAP login successful
2025-07-09 00:08:43,205 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': "view.svc/MASHURA_New_ItemsB1SLQuery?$filter=Shopify_Store eq 'local'&$orderby=MainProduct", 'request': {'method': 'GET', 'url': "https://10.0.0.100:50000/b1s/v1/view.svc/MASHURA_New_ItemsB1SLQuery?$filter=Shopify_Store eq 'local'&$orderby=MainProduct", 'data': None, 'params': None}, 'response': None, 'status': None}
2025-07-09 00:08:43,309 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': "view.svc/MASHURA_New_ItemsB1SLQuery?$filter=Shopify_Store eq 'local'&$orderby=MainProduct", 'request': None, 'response': {'odata.metadata': 'https://10.0.0.100:50000/b1s/v1/view.svc/$metadata#MASHURA_New_ItemsB1SLQuery', 'value': [{'itemcode': 'FG-0000701', 'ItemName': 'Morsi-Black-Gold', 'MainProduct': 'Morsi Necklace', 'Color': 'Black Gold', 'OnHand': 10.0, 'IsCommited': 0.0, 'Available': 10.0, 'Price': 2500.0, 'Status': 'new', 'Shopify_ProductCode': '', 'Shopify_Store': 'local', 'id__': 1}, {'itemcode': 'FG-0000702', 'ItemName': 'Morsi-Rose-Gold', 'MainProduct': 'Morsi Necklace', 'Color': 'Rose Gold', 'OnHand': 15.0, 'IsCommited': 0.0, 'Available': 15.0, 'Price': 2500.0, 'Status': 'new', 'Shopify_ProductCode': '', 'Shopify_Store': 'local', 'id__': 2}, {'itemcode': 'FG-0000703', 'ItemName': 'Morsi-White-Gold', 'MainProduct': 'Morsi Necklace', 'Color': 'White Gold', 'OnHand': 20.0, 'IsCommited': 0.0, 'Available': 20.0, 'Price': 2500.0, 'Status': 'new', 'Shopify_ProductCode': '', 'Shopify_Store': 'local', 'id__': 3}]}, 'status': 'success'}
2025-07-09 00:08:43,313 - sync_service - INFO - Product group: ('Morsi Necklace', 'local') has 3 items
2025-07-09 00:08:43,314 - sync_service - INFO - Grouped 3 items into 1 product groups for store local
2025-07-09 00:08:43,314 - sync_service - INFO - Processing product group: ('Morsi Necklace', 'local') with 3 items for store local
2025-07-09 00:08:43,316 - sync_service - INFO - API Call: {'service': 'shopify', 'endpoint': 'graphql_local', 'request': {'query': '\n        mutation productCreate($input: ProductInput!) {\n            productCreate(input: $input) {\n                product {\n                    id\n                    title\n                    handle\n                    variants(first: 50) {\n                        edges {\n                            node {\n                                id\n                                sku\n                                inventoryItem {\n                                    id\n                                }\n                                selectedOptions {\n                                    name\n                                    value\n                                }\n                            }\n                        }\n                    }\n                }\n                userErrors {\n                    field\n                    message\n                }\n            }\n        }\n        ', 'variables': {'input': {'title': 'Morsi-Black-Gold', 'descriptionHtml': '', 'vendor': '', 'productType': 'Default', 'status': 'DRAFT', 'tags': [], 'options': [{'name': 'Color'}], 'variants': [{'sku': '', 'price': '2500.0', 'inventoryPolicy': 'DENY', 'inventoryManagement': 'SHOPIFY', 'inventoryQuantities': [{'availableQuantity': 10, 'locationId': 'gid://shopify/Location/68605345858'}], 'weight': 0.0, 'weightUnit': 'KILOGRAMS'}, {'sku': '', 'price': '2500.0', 'inventoryPolicy': 'DENY', 'inventoryManagement': 'SHOPIFY', 'inventoryQuantities': [{'availableQuantity': 10, 'locationId': 'gid://shopify/Location/68605345858'}], 'weight': 0.0, 'weightUnit': 'KILOGRAMS'}, {'sku': '', 'price': '2500.0', 'inventoryPolicy': 'DENY', 'inventoryManagement': 'SHOPIFY', 'inventoryQuantities': [{'availableQuantity': 10, 'locationId': 'gid://shopify/Location/68605345858'}], 'weight': 0.0, 'weightUnit': 'KILOGRAMS'}], 'seo': {'title': 'Morsi-Black-Gold', 'description': ''}}}}, 'response': None, 'status': None}
2025-07-09 00:08:43,749 - sync_service - ERROR - GraphQL query error for store local: {'message': 'Variable $input of type ProductInput! was provided invalid value for options.0 (Could not coerce value {name:"Color"} to String)', 'locations': [{'line': 1, 'column': 24}], 'extensions': {'value': {'title': 'Morsi-Black-Gold', 'descriptionHtml': '', 'vendor': '', 'productType': 'Default', 'status': 'DRAFT', 'tags': [], 'options': [{'name': 'Color'}], 'variants': [{'sku': '', 'price': '2500.0', 'inventoryPolicy': 'DENY', 'inventoryManagement': 'SHOPIFY', 'inventoryQuantities': [{'availableQuantity': 10, 'locationId': 'gid://shopify/Location/68605345858'}], 'weight': 0.0, 'weightUnit': 'KILOGRAMS'}, {'sku': '', 'price': '2500.0', 'inventoryPolicy': 'DENY', 'inventoryManagement': 'SHOPIFY', 'inventoryQuantities': [{'availableQuantity': 10, 'locationId': 'gid://shopify/Location/68605345858'}], 'weight': 0.0, 'weightUnit': 'KILOGRAMS'}, {'sku': '', 'price': '2500.0', 'inventoryPolicy': 'DENY', 'inventoryManagement': 'SHOPIFY', 'inventoryQuantities': [{'availableQuantity': 10, 'locationId': 'gid://shopify/Location/68605345858'}], 'weight': 0.0, 'weightUnit': 'KILOGRAMS'}], 'seo': {'title': 'Morsi-Black-Gold', 'description': ''}}, 'problems': [{'path': ['options', 0], 'explanation': 'Could not coerce value {name:"Color"} to String'}]}}
GraphQL Errors: [
  {
    "message": "Variable $input of type ProductInput! was provided invalid value for options.0 (Could not coerce value {name:\"Color\"} to String)",
    "locations": [
      {
        "line": 1,
        "column": 24
      }
    ],
    "extensions": {
      "value": {
        "title": "Morsi-Black-Gold",
        "descriptionHtml": "",
        "vendor": "",
        "productType": "Default",
        "status": "DRAFT",
        "tags": [],
        "options": [
          {
            "name": "Color"
          }
        ],
        "variants": [
          {
            "sku": "",
            "price": "2500.0",
            "inventoryPolicy": "DENY",
            "inventoryManagement": "SHOPIFY",
            "inventoryQuantities": [
              {
                "availableQuantity": 10,
                "locationId": "gid://shopify/Location/68605345858"
              }
            ],
            "weight": 0.0,
            "weightUnit": "KILOGRAMS"
          },
          {
            "sku": "",
            "price": "2500.0",
            "inventoryPolicy": "DENY",
            "inventoryManagement": "SHOPIFY",
            "inventoryQuantities": [
              {
                "availableQuantity": 10,
                "locationId": "gid://shopify/Location/68605345858"
              }
            ],
            "weight": 0.0,
            "weightUnit": "KILOGRAMS"
          },
          {
            "sku": "",
            "price": "2500.0",
            "inventoryPolicy": "DENY",
            "inventoryManagement": "SHOPIFY",
            "inventoryQuantities": [
              {
                "availableQuantity": 10,
                "locationId": "gid://shopify/Location/68605345858"
              }
            ],
            "weight": 0.0,
            "weightUnit": "KILOGRAMS"
          }
        ],
        "seo": {
          "title": "Morsi-Black-Gold",
          "description": ""
        }
      },
      "problems": [
        {
          "path": [
            "options",
            0
          ],
          "explanation": "Could not coerce value {name:\"Color\"} to String"
        }
      ]
    }
  }
]
2025-07-09 00:08:43,750 - sync_service - ERROR - Failed to create product in store local: GraphQL query error for store local: {'message': 'Variable $input of type ProductInput! was provided invalid value for options.0 (Could not coerce value {name:"Color"} to String)', 'locations': [{'line': 1, 'column': 24}], 'extensions': {'value': {'title': 'Morsi-Black-Gold', 'descriptionHtml': '', 'vendor': '', 'productType': 'Default', 'status': 'DRAFT', 'tags': [], 'options': [{'name': 'Color'}], 'variants': [{'sku': '', 'price': '2500.0', 'inventoryPolicy': 'DENY', 'inventoryManagement': 'SHOPIFY', 'inventoryQuantities': [{'availableQuantity': 10, 'locationId': 'gid://shopify/Location/68605345858'}], 'weight': 0.0, 'weightUnit': 'KILOGRAMS'}, {'sku': '', 'price': '2500.0', 'inventoryPolicy': 'DENY', 'inventoryManagement': 'SHOPIFY', 'inventoryQuantities': [{'availableQuantity': 10, 'locationId': 'gid://shopify/Location/68605345858'}], 'weight': 0.0, 'weightUnit': 'KILOGRAMS'}, {'sku': '', 'price': '2500.0', 'inventoryPolicy': 'DENY', 'inventoryManagement': 'SHOPIFY', 'inventoryQuantities': [{'availableQuantity': 10, 'locationId': 'gid://shopify/Location/68605345858'}], 'weight': 0.0, 'weightUnit': 'KILOGRAMS'}], 'seo': {'title': 'Morsi-Black-Gold', 'description': ''}}, 'problems': [{'path': ['options', 0], 'explanation': 'Could not coerce value {name:"Color"} to String'}]}}
GraphQL Errors: [
  {
    "message": "Variable $input of type ProductInput! was provided invalid value for options.0 (Could not coerce value {name:\"Color\"} to String)",
    "locations": [
      {
        "line": 1,
        "column": 24
      }
    ],
    "extensions": {
      "value": {
        "title": "Morsi-Black-Gold",
        "descriptionHtml": "",
        "vendor": "",
        "productType": "Default",
        "status": "DRAFT",
        "tags": [],
        "options": [
          {
            "name": "Color"
          }
        ],
        "variants": [
          {
            "sku": "",
            "price": "2500.0",
            "inventoryPolicy": "DENY",
            "inventoryManagement": "SHOPIFY",
            "inventoryQuantities": [
              {
                "availableQuantity": 10,
                "locationId": "gid://shopify/Location/68605345858"
              }
            ],
            "weight": 0.0,
            "weightUnit": "KILOGRAMS"
          },
          {
            "sku": "",
            "price": "2500.0",
            "inventoryPolicy": "DENY",
            "inventoryManagement": "SHOPIFY",
            "inventoryQuantities": [
              {
                "availableQuantity": 10,
                "locationId": "gid://shopify/Location/68605345858"
              }
            ],
            "weight": 0.0,
            "weightUnit": "KILOGRAMS"
          },
          {
            "sku": "",
            "price": "2500.0",
            "inventoryPolicy": "DENY",
            "inventoryManagement": "SHOPIFY",
            "inventoryQuantities": [
              {
                "availableQuantity": 10,
                "locationId": "gid://shopify/Location/68605345858"
              }
            ],
            "weight": 0.0,
            "weightUnit": "KILOGRAMS"
          }
        ],
        "seo": {
          "title": "Morsi-Black-Gold",
          "description": ""
        }
      },
      "problems": [
        {
          "path": [
            "options",
            0
          ],
          "explanation": "Could not coerce value {name:\"Color\"} to String"
        }
      ]
    }
  }
]
2025-07-09 00:08:44,260 - sync_service - INFO - Sync Event: {'sync_type': 'multi_store_new_items_sap_to_shopify', 'items_processed': 1, 'success_count': 0, 'error_count': 1, 'details': None}
2025-07-09 00:08:44,262 - sync_service - INFO - Multi-store new items sync completed: 1 processed, 0 successful, 1 errors
2025-07-09 00:10:46,830 - sync_service - INFO - Initialized Shopify client for store: Local Store (local)
2025-07-09 00:10:46,833 - sync_service - INFO - Starting multi-store new items sync from SAP to Shopify
2025-07-09 00:10:46,834 - sync_service - INFO - Fetching new items for store: local
2025-07-09 00:10:46,835 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'login', 'request': {'company': 'JudeBenHalim_Test', 'user': 'manager'}, 'response': None, 'status': None}
2025-07-09 00:10:47,427 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'login', 'request': None, 'response': {'status': 'success'}, 'status': 'success'}
2025-07-09 00:10:47,429 - sync_service - INFO - SAP login successful
2025-07-09 00:10:47,433 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': "view.svc/MASHURA_New_ItemsB1SLQuery?$filter=Shopify_Store eq 'local'&$orderby=MainProduct", 'request': {'method': 'GET', 'url': "https://10.0.0.100:50000/b1s/v1/view.svc/MASHURA_New_ItemsB1SLQuery?$filter=Shopify_Store eq 'local'&$orderby=MainProduct", 'data': None, 'params': None}, 'response': None, 'status': None}
2025-07-09 00:10:47,546 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': "view.svc/MASHURA_New_ItemsB1SLQuery?$filter=Shopify_Store eq 'local'&$orderby=MainProduct", 'request': None, 'response': {'odata.metadata': 'https://10.0.0.100:50000/b1s/v1/view.svc/$metadata#MASHURA_New_ItemsB1SLQuery', 'value': [{'itemcode': 'FG-0000701', 'ItemName': 'Morsi-Black-Gold', 'MainProduct': 'Morsi Necklace', 'Color': 'Black Gold', 'OnHand': 10.0, 'IsCommited': 0.0, 'Available': 10.0, 'Price': 2500.0, 'Status': 'new', 'Shopify_ProductCode': '', 'Shopify_Store': 'local', 'id__': 1}, {'itemcode': 'FG-0000702', 'ItemName': 'Morsi-Rose-Gold', 'MainProduct': 'Morsi Necklace', 'Color': 'Rose Gold', 'OnHand': 15.0, 'IsCommited': 0.0, 'Available': 15.0, 'Price': 2500.0, 'Status': 'new', 'Shopify_ProductCode': '', 'Shopify_Store': 'local', 'id__': 2}, {'itemcode': 'FG-0000703', 'ItemName': 'Morsi-White-Gold', 'MainProduct': 'Morsi Necklace', 'Color': 'White Gold', 'OnHand': 20.0, 'IsCommited': 0.0, 'Available': 20.0, 'Price': 2500.0, 'Status': 'new', 'Shopify_ProductCode': '', 'Shopify_Store': 'local', 'id__': 3}]}, 'status': 'success'}
2025-07-09 00:10:47,550 - sync_service - INFO - Product group: ('Morsi Necklace', 'local') has 3 items
2025-07-09 00:10:47,551 - sync_service - INFO - Grouped 3 items into 1 product groups for store local
2025-07-09 00:10:47,552 - sync_service - INFO - Processing product group: ('Morsi Necklace', 'local') with 3 items for store local
2025-07-09 00:10:47,553 - sync_service - INFO - API Call: {'service': 'shopify', 'endpoint': 'graphql_local', 'request': {'query': '\n        mutation productCreate($input: ProductInput!) {\n            productCreate(input: $input) {\n                product {\n                    id\n                    title\n                    handle\n                    variants(first: 50) {\n                        edges {\n                            node {\n                                id\n                                sku\n                                inventoryItem {\n                                    id\n                                }\n                                selectedOptions {\n                                    name\n                                    value\n                                }\n                            }\n                        }\n                    }\n                }\n                userErrors {\n                    field\n                    message\n                }\n            }\n        }\n        ', 'variables': {'input': {'title': 'Morsi-Black-Gold', 'descriptionHtml': '', 'vendor': '', 'productType': 'Default', 'status': 'DRAFT', 'tags': [], 'options': ['Color'], 'variants': [{'sku': '', 'price': '2500.0', 'inventoryPolicy': 'DENY', 'inventoryManagement': 'SHOPIFY', 'inventoryQuantities': [{'availableQuantity': 10, 'locationId': 'gid://shopify/Location/68605345858'}], 'weight': 0.0, 'weightUnit': 'KILOGRAMS'}, {'sku': '', 'price': '2500.0', 'inventoryPolicy': 'DENY', 'inventoryManagement': 'SHOPIFY', 'inventoryQuantities': [{'availableQuantity': 10, 'locationId': 'gid://shopify/Location/68605345858'}], 'weight': 0.0, 'weightUnit': 'KILOGRAMS'}, {'sku': '', 'price': '2500.0', 'inventoryPolicy': 'DENY', 'inventoryManagement': 'SHOPIFY', 'inventoryQuantities': [{'availableQuantity': 10, 'locationId': 'gid://shopify/Location/68605345858'}], 'weight': 0.0, 'weightUnit': 'KILOGRAMS'}], 'seo': {'title': 'Morsi-Black-Gold', 'description': ''}}}}, 'response': None, 'status': None}
2025-07-09 00:10:48,110 - sync_service - INFO - API Call: {'service': 'shopify', 'endpoint': 'graphql_local', 'request': None, 'response': {'productCreate': {'product': None, 'userErrors': [{'field': ['variants', '1'], 'message': "The variant 'Default Title' already exists."}]}}, 'status': 'success'}
2025-07-09 00:10:48,111 - sync_service - ERROR - Failed to create product in store local: The variant 'Default Title' already exists.
2025-07-09 00:10:48,625 - sync_service - INFO - Sync Event: {'sync_type': 'multi_store_new_items_sap_to_shopify', 'items_processed': 1, 'success_count': 0, 'error_count': 1, 'details': None}
2025-07-09 00:10:48,626 - sync_service - INFO - Multi-store new items sync completed: 1 processed, 0 successful, 1 errors
2025-07-09 00:18:22,153 - sync_service - INFO - Initialized Shopify client for store: Local Store (local)
2025-07-09 00:18:22,156 - sync_service - INFO - Starting multi-store new items sync from SAP to Shopify
2025-07-09 00:18:22,157 - sync_service - INFO - Fetching new items for store: local
2025-07-09 00:18:22,157 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'login', 'request': {'company': 'JudeBenHalim_Test', 'user': 'manager'}, 'response': None, 'status': None}
2025-07-09 00:18:22,713 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'login', 'request': None, 'response': {'status': 'success'}, 'status': 'success'}
2025-07-09 00:18:22,714 - sync_service - INFO - SAP login successful
2025-07-09 00:18:22,715 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': "view.svc/MASHURA_New_ItemsB1SLQuery?$filter=Shopify_Store eq 'local'&$orderby=MainProduct", 'request': {'method': 'GET', 'url': "https://10.0.0.100:50000/b1s/v1/view.svc/MASHURA_New_ItemsB1SLQuery?$filter=Shopify_Store eq 'local'&$orderby=MainProduct", 'data': None, 'params': None}, 'response': None, 'status': None}
2025-07-09 00:18:22,821 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': "view.svc/MASHURA_New_ItemsB1SLQuery?$filter=Shopify_Store eq 'local'&$orderby=MainProduct", 'request': None, 'response': {'odata.metadata': 'https://10.0.0.100:50000/b1s/v1/view.svc/$metadata#MASHURA_New_ItemsB1SLQuery', 'value': [{'itemcode': 'FG-0000701', 'ItemName': 'Morsi-Black-Gold', 'MainProduct': 'Morsi Necklace', 'Color': 'Black Gold', 'OnHand': 10.0, 'IsCommited': 0.0, 'Available': 10.0, 'Price': 2500.0, 'Status': 'new', 'Shopify_ProductCode': '', 'Shopify_Store': 'local', 'id__': 1}, {'itemcode': 'FG-0000702', 'ItemName': 'Morsi-Rose-Gold', 'MainProduct': 'Morsi Necklace', 'Color': 'Rose Gold', 'OnHand': 15.0, 'IsCommited': 0.0, 'Available': 15.0, 'Price': 2500.0, 'Status': 'new', 'Shopify_ProductCode': '', 'Shopify_Store': 'local', 'id__': 2}, {'itemcode': 'FG-0000703', 'ItemName': 'Morsi-White-Gold', 'MainProduct': 'Morsi Necklace', 'Color': 'White Gold', 'OnHand': 20.0, 'IsCommited': 0.0, 'Available': 20.0, 'Price': 2500.0, 'Status': 'new', 'Shopify_ProductCode': '', 'Shopify_Store': 'local', 'id__': 3}]}, 'status': 'success'}
2025-07-09 00:18:22,822 - sync_service - INFO - Product group: ('Morsi Necklace', 'local') has 3 items
2025-07-09 00:18:22,822 - sync_service - INFO - Grouped 3 items into 1 product groups for store local
2025-07-09 00:18:22,823 - sync_service - INFO - Processing product group: ('Morsi Necklace', 'local') with 3 items for store local
2025-07-09 00:18:22,823 - sync_service - INFO - API Call: {'service': 'shopify', 'endpoint': 'graphql_local', 'request': {'query': '\n        mutation productCreate($input: ProductInput!) {\n            productCreate(input: $input) {\n                product {\n                    id\n                    title\n                    handle\n                    variants(first: 50) {\n                        edges {\n                            node {\n                                id\n                                sku\n                                inventoryItem {\n                                    id\n                                }\n                                selectedOptions {\n                                    name\n                                    value\n                                }\n                            }\n                        }\n                    }\n                }\n                userErrors {\n                    field\n                    message\n                }\n            }\n        }\n        ', 'variables': {'input': {'title': 'Morsi-Black-Gold', 'descriptionHtml': '', 'vendor': '', 'productType': 'Default', 'status': 'DRAFT', 'tags': [], 'options': ['Color'], 'variants': [{'sku': 'FG-0000701', 'price': '2500.0', 'inventoryPolicy': 'DENY', 'inventoryManagement': 'SHOPIFY', 'inventoryQuantities': [{'availableQuantity': 10, 'locationId': 'gid://shopify/Location/68605345858'}], 'weight': 0.0, 'weightUnit': 'KILOGRAMS', 'option1': 'Black Gold'}, {'sku': 'FG-0000702', 'price': '2500.0', 'inventoryPolicy': 'DENY', 'inventoryManagement': 'SHOPIFY', 'inventoryQuantities': [{'availableQuantity': 10, 'locationId': 'gid://shopify/Location/68605345858'}], 'weight': 0.0, 'weightUnit': 'KILOGRAMS', 'option1': 'Rose Gold'}, {'sku': 'FG-0000703', 'price': '2500.0', 'inventoryPolicy': 'DENY', 'inventoryManagement': 'SHOPIFY', 'inventoryQuantities': [{'availableQuantity': 10, 'locationId': 'gid://shopify/Location/68605345858'}], 'weight': 0.0, 'weightUnit': 'KILOGRAMS', 'option1': 'White Gold'}], 'seo': {'title': 'Morsi-Black-Gold', 'description': ''}}}}, 'response': None, 'status': None}
2025-07-09 00:18:32,831 - sync_service - ERROR - GraphQL query error for store local: 
2025-07-09 00:18:32,832 - sync_service - ERROR - Failed to create product in store local: GraphQL query error for store local: 
2025-07-09 00:18:33,342 - sync_service - INFO - Sync Event: {'sync_type': 'multi_store_new_items_sap_to_shopify', 'items_processed': 1, 'success_count': 0, 'error_count': 1, 'details': None}
2025-07-09 00:18:33,342 - sync_service - INFO - Multi-store new items sync completed: 1 processed, 0 successful, 1 errors
2025-07-09 00:22:12,414 - sync_service - INFO - Initialized Shopify client for store: Local Store (local)
2025-07-09 00:22:12,424 - sync_service - INFO - Starting multi-store new items sync from SAP to Shopify
2025-07-09 00:22:12,425 - sync_service - INFO - Fetching new items for store: local
2025-07-09 00:22:12,428 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'login', 'request': {'company': 'JudeBenHalim_Test', 'user': 'manager'}, 'response': None, 'status': None}
2025-07-09 00:22:12,989 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'login', 'request': None, 'response': {'status': 'success'}, 'status': 'success'}
2025-07-09 00:22:12,990 - sync_service - INFO - SAP login successful
2025-07-09 00:22:12,992 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': "view.svc/MASHURA_New_ItemsB1SLQuery?$filter=Shopify_Store eq 'local'&$orderby=MainProduct", 'request': {'method': 'GET', 'url': "https://10.0.0.100:50000/b1s/v1/view.svc/MASHURA_New_ItemsB1SLQuery?$filter=Shopify_Store eq 'local'&$orderby=MainProduct", 'data': None, 'params': None}, 'response': None, 'status': None}
2025-07-09 00:22:13,089 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': "view.svc/MASHURA_New_ItemsB1SLQuery?$filter=Shopify_Store eq 'local'&$orderby=MainProduct", 'request': None, 'response': {'odata.metadata': 'https://10.0.0.100:50000/b1s/v1/view.svc/$metadata#MASHURA_New_ItemsB1SLQuery', 'value': [{'itemcode': 'FG-0000701', 'ItemName': 'Morsi-Black-Gold', 'MainProduct': 'Morsi Necklace', 'Color': 'Black Gold', 'OnHand': 10.0, 'IsCommited': 0.0, 'Available': 10.0, 'Price': 2500.0, 'Status': 'new', 'Shopify_ProductCode': '', 'Shopify_Store': 'local', 'id__': 1}, {'itemcode': 'FG-0000702', 'ItemName': 'Morsi-Rose-Gold', 'MainProduct': 'Morsi Necklace', 'Color': 'Rose Gold', 'OnHand': 15.0, 'IsCommited': 0.0, 'Available': 15.0, 'Price': 2500.0, 'Status': 'new', 'Shopify_ProductCode': '', 'Shopify_Store': 'local', 'id__': 2}, {'itemcode': 'FG-0000703', 'ItemName': 'Morsi-White-Gold', 'MainProduct': 'Morsi Necklace', 'Color': 'White Gold', 'OnHand': 20.0, 'IsCommited': 0.0, 'Available': 20.0, 'Price': 2500.0, 'Status': 'new', 'Shopify_ProductCode': '', 'Shopify_Store': 'local', 'id__': 3}]}, 'status': 'success'}
2025-07-09 00:22:13,090 - sync_service - INFO - Product group: ('Morsi Necklace', 'local') has 3 items
2025-07-09 00:22:13,091 - sync_service - INFO - Grouped 3 items into 1 product groups for store local
2025-07-09 00:22:13,092 - sync_service - INFO - Processing product group: ('Morsi Necklace', 'local') with 3 items for store local
2025-07-09 00:22:13,092 - sync_service - INFO - API Call: {'service': 'shopify', 'endpoint': 'graphql_local', 'request': {'query': '\n        mutation productCreate($input: ProductInput!) {\n            productCreate(input: $input) {\n                product {\n                    id\n                    title\n                    handle\n                    variants(first: 50) {\n                        edges {\n                            node {\n                                id\n                                sku\n                                inventoryItem {\n                                    id\n                                }\n                                selectedOptions {\n                                    name\n                                    value\n                                }\n                            }\n                        }\n                    }\n                }\n                userErrors {\n                    field\n                    message\n                }\n            }\n        }\n        ', 'variables': {'input': {'title': 'Morsi-Black-Gold', 'descriptionHtml': '', 'vendor': '', 'productType': 'Default', 'status': 'DRAFT', 'tags': [], 'options': ['Color'], 'variants': [{'sku': 'FG-0000701', 'price': '2500.0', 'inventoryPolicy': 'DENY', 'inventoryManagement': 'SHOPIFY', 'inventoryQuantities': [{'availableQuantity': 10, 'locationId': 'gid://shopify/Location/68605345858'}], 'weight': 0.0, 'weightUnit': 'KILOGRAMS', 'option1': 'Black Gold'}, {'sku': 'FG-0000702', 'price': '2500.0', 'inventoryPolicy': 'DENY', 'inventoryManagement': 'SHOPIFY', 'inventoryQuantities': [{'availableQuantity': 10, 'locationId': 'gid://shopify/Location/68605345858'}], 'weight': 0.0, 'weightUnit': 'KILOGRAMS', 'option1': 'Rose Gold'}, {'sku': 'FG-0000703', 'price': '2500.0', 'inventoryPolicy': 'DENY', 'inventoryManagement': 'SHOPIFY', 'inventoryQuantities': [{'availableQuantity': 10, 'locationId': 'gid://shopify/Location/68605345858'}], 'weight': 0.0, 'weightUnit': 'KILOGRAMS', 'option1': 'White Gold'}], 'seo': {'title': 'Morsi-Black-Gold', 'description': ''}}}}, 'response': None, 'status': None}
2025-07-09 00:22:23,115 - sync_service - ERROR - GraphQL query error for store local: 
2025-07-09 00:22:23,115 - sync_service - ERROR - Shopify full response for store local: {'msg': 'failure', 'error': 'GraphQL query error for store local: '}
2025-07-09 00:22:23,116 - sync_service - ERROR - Failed to create product in store local: GraphQL query error for store local: 
2025-07-09 00:22:23,625 - sync_service - INFO - Sync Event: {'sync_type': 'multi_store_new_items_sap_to_shopify', 'items_processed': 1, 'success_count': 0, 'error_count': 1, 'details': None}
2025-07-09 00:22:23,625 - sync_service - INFO - Multi-store new items sync completed: 1 processed, 0 successful, 1 errors
2025-07-09 00:24:10,256 - sync_service - INFO - Initialized Shopify client for store: Local Store (local)
2025-07-09 00:24:10,259 - sync_service - INFO - Starting multi-store new items sync from SAP to Shopify
2025-07-09 00:24:10,259 - sync_service - INFO - Fetching new items for store: local
2025-07-09 00:24:10,261 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'login', 'request': {'company': 'JudeBenHalim_Test', 'user': 'manager'}, 'response': None, 'status': None}
2025-07-09 00:24:11,050 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'login', 'request': None, 'response': {'status': 'success'}, 'status': 'success'}
2025-07-09 00:24:11,050 - sync_service - INFO - SAP login successful
2025-07-09 00:24:11,051 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': "view.svc/MASHURA_New_ItemsB1SLQuery?$filter=Shopify_Store eq 'local'&$orderby=MainProduct", 'request': {'method': 'GET', 'url': "https://10.0.0.100:50000/b1s/v1/view.svc/MASHURA_New_ItemsB1SLQuery?$filter=Shopify_Store eq 'local'&$orderby=MainProduct", 'data': None, 'params': None}, 'response': None, 'status': None}
2025-07-09 00:24:11,162 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': "view.svc/MASHURA_New_ItemsB1SLQuery?$filter=Shopify_Store eq 'local'&$orderby=MainProduct", 'request': None, 'response': {'odata.metadata': 'https://10.0.0.100:50000/b1s/v1/view.svc/$metadata#MASHURA_New_ItemsB1SLQuery', 'value': [{'itemcode': 'FG-0000701', 'ItemName': 'Morsi-Black-Gold', 'MainProduct': 'Morsi Necklace', 'Color': 'Black Gold', 'OnHand': 10.0, 'IsCommited': 0.0, 'Available': 10.0, 'Price': 2500.0, 'Status': 'new', 'Shopify_ProductCode': '', 'Shopify_Store': 'local', 'id__': 1}, {'itemcode': 'FG-0000702', 'ItemName': 'Morsi-Rose-Gold', 'MainProduct': 'Morsi Necklace', 'Color': 'Rose Gold', 'OnHand': 15.0, 'IsCommited': 0.0, 'Available': 15.0, 'Price': 2500.0, 'Status': 'new', 'Shopify_ProductCode': '', 'Shopify_Store': 'local', 'id__': 2}, {'itemcode': 'FG-0000703', 'ItemName': 'Morsi-White-Gold', 'MainProduct': 'Morsi Necklace', 'Color': 'White Gold', 'OnHand': 20.0, 'IsCommited': 0.0, 'Available': 20.0, 'Price': 2500.0, 'Status': 'new', 'Shopify_ProductCode': '', 'Shopify_Store': 'local', 'id__': 3}]}, 'status': 'success'}
2025-07-09 00:24:11,163 - sync_service - INFO - Product group: ('Morsi Necklace', 'local') has 3 items
2025-07-09 00:24:11,163 - sync_service - INFO - Grouped 3 items into 1 product groups for store local
2025-07-09 00:24:11,163 - sync_service - INFO - Processing product group: ('Morsi Necklace', 'local') with 3 items for store local
2025-07-09 00:24:11,164 - sync_service - INFO - API Call: {'service': 'shopify', 'endpoint': 'graphql_local', 'request': {'query': '\n        mutation productCreate($input: ProductInput!) {\n            productCreate(input: $input) {\n                product {\n                    id\n                    title\n                    handle\n                    variants(first: 50) {\n                        edges {\n                            node {\n                                id\n                                sku\n                                inventoryItem {\n                                    id\n                                }\n                                selectedOptions {\n                                    name\n                                    value\n                                }\n                            }\n                        }\n                    }\n                }\n                userErrors {\n                    field\n                    message\n                }\n            }\n        }\n        ', 'variables': {'input': {'title': 'Morsi-Black-Gold', 'status': 'DRAFT', 'options': ['Color'], 'variants': [{'option1': 'Black Gold', 'sku': 'FG-0000701'}, {'option1': 'Rose Gold', 'sku': 'FG-0000702'}, {'option1': 'White Gold', 'sku': 'FG-0000703'}]}}}, 'response': None, 'status': None}
2025-07-09 00:24:11,530 - sync_service - ERROR - GraphQL query error for store local: {'message': 'Variable $input of type ProductInput! was provided invalid value for variants.0.option1 (Field is not defined on ProductVariantInput), variants.1.option1 (Field is not defined on ProductVariantInput), variants.2.option1 (Field is not defined on ProductVariantInput)', 'locations': [{'line': 1, 'column': 24}], 'extensions': {'value': {'title': 'Morsi-Black-Gold', 'status': 'DRAFT', 'options': ['Color'], 'variants': [{'option1': 'Black Gold', 'sku': 'FG-0000701'}, {'option1': 'Rose Gold', 'sku': 'FG-0000702'}, {'option1': 'White Gold', 'sku': 'FG-0000703'}]}, 'problems': [{'path': ['variants', 0, 'option1'], 'explanation': 'Field is not defined on ProductVariantInput'}, {'path': ['variants', 1, 'option1'], 'explanation': 'Field is not defined on ProductVariantInput'}, {'path': ['variants', 2, 'option1'], 'explanation': 'Field is not defined on ProductVariantInput'}]}}
GraphQL Errors: [
  {
    "message": "Variable $input of type ProductInput! was provided invalid value for variants.0.option1 (Field is not defined on ProductVariantInput), variants.1.option1 (Field is not defined on ProductVariantInput), variants.2.option1 (Field is not defined on ProductVariantInput)",
    "locations": [
      {
        "line": 1,
        "column": 24
      }
    ],
    "extensions": {
      "value": {
        "title": "Morsi-Black-Gold",
        "status": "DRAFT",
        "options": [
          "Color"
        ],
        "variants": [
          {
            "option1": "Black Gold",
            "sku": "FG-0000701"
          },
          {
            "option1": "Rose Gold",
            "sku": "FG-0000702"
          },
          {
            "option1": "White Gold",
            "sku": "FG-0000703"
          }
        ]
      },
      "problems": [
        {
          "path": [
            "variants",
            0,
            "option1"
          ],
          "explanation": "Field is not defined on ProductVariantInput"
        },
        {
          "path": [
            "variants",
            1,
            "option1"
          ],
          "explanation": "Field is not defined on ProductVariantInput"
        },
        {
          "path": [
            "variants",
            2,
            "option1"
          ],
          "explanation": "Field is not defined on ProductVariantInput"
        }
      ]
    }
  }
]
2025-07-09 00:24:11,530 - sync_service - ERROR - Shopify full response for store local: {'msg': 'failure', 'error': 'GraphQL query error for store local: {\'message\': \'Variable $input of type ProductInput! was provided invalid value for variants.0.option1 (Field is not defined on ProductVariantInput), variants.1.option1 (Field is not defined on ProductVariantInput), variants.2.option1 (Field is not defined on ProductVariantInput)\', \'locations\': [{\'line\': 1, \'column\': 24}], \'extensions\': {\'value\': {\'title\': \'Morsi-Black-Gold\', \'status\': \'DRAFT\', \'options\': [\'Color\'], \'variants\': [{\'option1\': \'Black Gold\', \'sku\': \'FG-0000701\'}, {\'option1\': \'Rose Gold\', \'sku\': \'FG-0000702\'}, {\'option1\': \'White Gold\', \'sku\': \'FG-0000703\'}]}, \'problems\': [{\'path\': [\'variants\', 0, \'option1\'], \'explanation\': \'Field is not defined on ProductVariantInput\'}, {\'path\': [\'variants\', 1, \'option1\'], \'explanation\': \'Field is not defined on ProductVariantInput\'}, {\'path\': [\'variants\', 2, \'option1\'], \'explanation\': \'Field is not defined on ProductVariantInput\'}]}}\nGraphQL Errors: [\n  {\n    "message": "Variable $input of type ProductInput! was provided invalid value for variants.0.option1 (Field is not defined on ProductVariantInput), variants.1.option1 (Field is not defined on ProductVariantInput), variants.2.option1 (Field is not defined on ProductVariantInput)",\n    "locations": [\n      {\n        "line": 1,\n        "column": 24\n      }\n    ],\n    "extensions": {\n      "value": {\n        "title": "Morsi-Black-Gold",\n        "status": "DRAFT",\n        "options": [\n          "Color"\n        ],\n        "variants": [\n          {\n            "option1": "Black Gold",\n            "sku": "FG-0000701"\n          },\n          {\n            "option1": "Rose Gold",\n            "sku": "FG-0000702"\n          },\n          {\n            "option1": "White Gold",\n            "sku": "FG-0000703"\n          }\n        ]\n      },\n      "problems": [\n        {\n          "path": [\n            "variants",\n            0,\n            "option1"\n          ],\n          "explanation": "Field is not defined on ProductVariantInput"\n        },\n        {\n          "path": [\n            "variants",\n            1,\n            "option1"\n          ],\n          "explanation": "Field is not defined on ProductVariantInput"\n        },\n        {\n          "path": [\n            "variants",\n            2,\n            "option1"\n          ],\n          "explanation": "Field is not defined on ProductVariantInput"\n        }\n      ]\n    }\n  }\n]'}
2025-07-09 00:24:11,531 - sync_service - ERROR - Failed to create product in store local: GraphQL query error for store local: {'message': 'Variable $input of type ProductInput! was provided invalid value for variants.0.option1 (Field is not defined on ProductVariantInput), variants.1.option1 (Field is not defined on ProductVariantInput), variants.2.option1 (Field is not defined on ProductVariantInput)', 'locations': [{'line': 1, 'column': 24}], 'extensions': {'value': {'title': 'Morsi-Black-Gold', 'status': 'DRAFT', 'options': ['Color'], 'variants': [{'option1': 'Black Gold', 'sku': 'FG-0000701'}, {'option1': 'Rose Gold', 'sku': 'FG-0000702'}, {'option1': 'White Gold', 'sku': 'FG-0000703'}]}, 'problems': [{'path': ['variants', 0, 'option1'], 'explanation': 'Field is not defined on ProductVariantInput'}, {'path': ['variants', 1, 'option1'], 'explanation': 'Field is not defined on ProductVariantInput'}, {'path': ['variants', 2, 'option1'], 'explanation': 'Field is not defined on ProductVariantInput'}]}}
GraphQL Errors: [
  {
    "message": "Variable $input of type ProductInput! was provided invalid value for variants.0.option1 (Field is not defined on ProductVariantInput), variants.1.option1 (Field is not defined on ProductVariantInput), variants.2.option1 (Field is not defined on ProductVariantInput)",
    "locations": [
      {
        "line": 1,
        "column": 24
      }
    ],
    "extensions": {
      "value": {
        "title": "Morsi-Black-Gold",
        "status": "DRAFT",
        "options": [
          "Color"
        ],
        "variants": [
          {
            "option1": "Black Gold",
            "sku": "FG-0000701"
          },
          {
            "option1": "Rose Gold",
            "sku": "FG-0000702"
          },
          {
            "option1": "White Gold",
            "sku": "FG-0000703"
          }
        ]
      },
      "problems": [
        {
          "path": [
            "variants",
            0,
            "option1"
          ],
          "explanation": "Field is not defined on ProductVariantInput"
        },
        {
          "path": [
            "variants",
            1,
            "option1"
          ],
          "explanation": "Field is not defined on ProductVariantInput"
        },
        {
          "path": [
            "variants",
            2,
            "option1"
          ],
          "explanation": "Field is not defined on ProductVariantInput"
        }
      ]
    }
  }
]
2025-07-09 00:24:12,037 - sync_service - INFO - Sync Event: {'sync_type': 'multi_store_new_items_sap_to_shopify', 'items_processed': 1, 'success_count': 0, 'error_count': 1, 'details': None}
2025-07-09 00:24:12,037 - sync_service - INFO - Multi-store new items sync completed: 1 processed, 0 successful, 1 errors
2025-07-09 00:25:46,176 - sync_service - INFO - Initialized Shopify client for store: Local Store (local)
2025-07-09 00:25:46,177 - sync_service - INFO - Starting multi-store new items sync from SAP to Shopify
2025-07-09 00:25:46,178 - sync_service - INFO - Fetching new items for store: local
2025-07-09 00:25:46,178 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'login', 'request': {'company': 'JudeBenHalim_Test', 'user': 'manager'}, 'response': None, 'status': None}
2025-07-09 00:25:46,755 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'login', 'request': None, 'response': {'status': 'success'}, 'status': 'success'}
2025-07-09 00:25:46,756 - sync_service - INFO - SAP login successful
2025-07-09 00:25:46,756 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': "view.svc/MASHURA_New_ItemsB1SLQuery?$filter=Shopify_Store eq 'local'&$orderby=MainProduct", 'request': {'method': 'GET', 'url': "https://10.0.0.100:50000/b1s/v1/view.svc/MASHURA_New_ItemsB1SLQuery?$filter=Shopify_Store eq 'local'&$orderby=MainProduct", 'data': None, 'params': None}, 'response': None, 'status': None}
2025-07-09 00:25:46,844 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': "view.svc/MASHURA_New_ItemsB1SLQuery?$filter=Shopify_Store eq 'local'&$orderby=MainProduct", 'request': None, 'response': {'odata.metadata': 'https://10.0.0.100:50000/b1s/v1/view.svc/$metadata#MASHURA_New_ItemsB1SLQuery', 'value': [{'itemcode': 'FG-0000701', 'ItemName': 'Morsi-Black-Gold', 'MainProduct': 'Morsi Necklace', 'Color': 'Black Gold', 'OnHand': 10.0, 'IsCommited': 0.0, 'Available': 10.0, 'Price': 2500.0, 'Status': 'new', 'Shopify_ProductCode': '', 'Shopify_Store': 'local', 'id__': 1}, {'itemcode': 'FG-0000702', 'ItemName': 'Morsi-Rose-Gold', 'MainProduct': 'Morsi Necklace', 'Color': 'Rose Gold', 'OnHand': 15.0, 'IsCommited': 0.0, 'Available': 15.0, 'Price': 2500.0, 'Status': 'new', 'Shopify_ProductCode': '', 'Shopify_Store': 'local', 'id__': 2}, {'itemcode': 'FG-0000703', 'ItemName': 'Morsi-White-Gold', 'MainProduct': 'Morsi Necklace', 'Color': 'White Gold', 'OnHand': 20.0, 'IsCommited': 0.0, 'Available': 20.0, 'Price': 2500.0, 'Status': 'new', 'Shopify_ProductCode': '', 'Shopify_Store': 'local', 'id__': 3}]}, 'status': 'success'}
2025-07-09 00:25:46,845 - sync_service - INFO - Product group: ('Morsi Necklace', 'local') has 3 items
2025-07-09 00:25:46,845 - sync_service - INFO - Grouped 3 items into 1 product groups for store local
2025-07-09 00:25:46,846 - sync_service - INFO - Processing product group: ('Morsi Necklace', 'local') with 3 items for store local
2025-07-09 00:25:46,846 - sync_service - INFO - API Call: {'service': 'shopify', 'endpoint': 'graphql_local', 'request': {'query': '\n        mutation productCreate($input: ProductInput!) {\n            productCreate(input: $input) {\n                product {\n                    id\n                    title\n                    handle\n                    variants(first: 50) {\n                        edges {\n                            node {\n                                id\n                                sku\n                                inventoryItem {\n                                    id\n                                }\n                                selectedOptions {\n                                    name\n                                    value\n                                }\n                            }\n                        }\n                    }\n                }\n                userErrors {\n                    field\n                    message\n                }\n            }\n        }\n        ', 'variables': {'input': {'title': 'Morsi-Black-Gold', 'status': 'DRAFT', 'options': ['Color'], 'variants': [{'options': ['Black Gold'], 'sku': 'FG-0000701'}, {'options': ['Rose Gold'], 'sku': 'FG-0000702'}, {'options': ['White Gold'], 'sku': 'FG-0000703'}]}}}, 'response': None, 'status': None}
2025-07-09 00:25:56,851 - sync_service - ERROR - GraphQL query error for store local: 
2025-07-09 00:25:56,852 - sync_service - ERROR - Shopify full response for store local: {'msg': 'failure', 'error': 'GraphQL query error for store local: '}
2025-07-09 00:25:56,852 - sync_service - ERROR - Failed to create product in store local: GraphQL query error for store local: 
2025-07-09 00:25:57,356 - sync_service - INFO - Sync Event: {'sync_type': 'multi_store_new_items_sap_to_shopify', 'items_processed': 1, 'success_count': 0, 'error_count': 1, 'details': None}
2025-07-09 00:25:57,356 - sync_service - INFO - Multi-store new items sync completed: 1 processed, 0 successful, 1 errors
2025-07-09 00:28:51,016 - sync_service - INFO - Initialized Shopify client for store: Local Store (local)
2025-07-09 00:28:51,022 - sync_service - INFO - Starting multi-store new items sync from SAP to Shopify
2025-07-09 00:28:51,023 - sync_service - INFO - Fetching new items for store: local
2025-07-09 00:28:51,024 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'login', 'request': {'company': 'JudeBenHalim_Test', 'user': 'manager'}, 'response': None, 'status': None}
2025-07-09 00:28:51,596 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'login', 'request': None, 'response': {'status': 'success'}, 'status': 'success'}
2025-07-09 00:28:51,598 - sync_service - INFO - SAP login successful
2025-07-09 00:28:51,599 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': "view.svc/MASHURA_New_ItemsB1SLQuery?$filter=Shopify_Store eq 'local'&$orderby=MainProduct", 'request': {'method': 'GET', 'url': "https://10.0.0.100:50000/b1s/v1/view.svc/MASHURA_New_ItemsB1SLQuery?$filter=Shopify_Store eq 'local'&$orderby=MainProduct", 'data': None, 'params': None}, 'response': None, 'status': None}
2025-07-09 00:28:52,396 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': "view.svc/MASHURA_New_ItemsB1SLQuery?$filter=Shopify_Store eq 'local'&$orderby=MainProduct", 'request': None, 'response': {'odata.metadata': 'https://10.0.0.100:50000/b1s/v1/view.svc/$metadata#MASHURA_New_ItemsB1SLQuery', 'value': [{'itemcode': 'FG-0000701', 'ItemName': 'Morsi-Black-Gold', 'MainProduct': 'Morsi Necklace', 'Color': 'Black Gold', 'OnHand': 10.0, 'IsCommited': 0.0, 'Available': 10.0, 'Price': 2500.0, 'Status': 'new', 'Shopify_ProductCode': '', 'Shopify_Store': 'local', 'id__': 1}, {'itemcode': 'FG-0000702', 'ItemName': 'Morsi-Rose-Gold', 'MainProduct': 'Morsi Necklace', 'Color': 'Rose Gold', 'OnHand': 15.0, 'IsCommited': 0.0, 'Available': 15.0, 'Price': 2500.0, 'Status': 'new', 'Shopify_ProductCode': '', 'Shopify_Store': 'local', 'id__': 2}, {'itemcode': 'FG-0000703', 'ItemName': 'Morsi-White-Gold', 'MainProduct': 'Morsi Necklace', 'Color': 'White Gold', 'OnHand': 20.0, 'IsCommited': 0.0, 'Available': 20.0, 'Price': 2500.0, 'Status': 'new', 'Shopify_ProductCode': '', 'Shopify_Store': 'local', 'id__': 3}]}, 'status': 'success'}
2025-07-09 00:28:52,397 - sync_service - INFO - Product group: ('Morsi Necklace', 'local') has 3 items
2025-07-09 00:28:52,398 - sync_service - INFO - Grouped 3 items into 1 product groups for store local
2025-07-09 00:28:52,398 - sync_service - INFO - Processing product group: ('Morsi Necklace', 'local') with 3 items for store local
2025-07-09 00:28:52,398 - sync_service - INFO - API Call: {'service': 'shopify', 'endpoint': 'graphql_local', 'request': {'query': '\n        mutation productCreate($input: ProductInput!) {\n            productCreate(input: $input) {\n                product {\n                    id\n                    title\n                    handle\n                    variants(first: 50) {\n                        edges {\n                            node {\n                                id\n                                sku\n                                inventoryItem {\n                                    id\n                                }\n                                selectedOptions {\n                                    name\n                                    value\n                                }\n                            }\n                        }\n                    }\n                }\n                userErrors {\n                    field\n                    message\n                }\n            }\n        }\n        ', 'variables': {'input': {'title': 'Morsi-Black-Gold', 'status': 'DRAFT', 'options': ['Color'], 'variants': [{'options': ['Black Gold'], 'sku': 'FG-0000701'}]}}}, 'response': None, 'status': None}
2025-07-09 00:28:53,097 - sync_service - INFO - API Call: {'service': 'shopify', 'endpoint': 'graphql_local', 'request': None, 'response': {'productCreate': {'product': {'id': 'gid://shopify/Product/7510099329090', 'title': 'Morsi-Black-Gold', 'handle': 'morsi-black-gold', 'variants': {'edges': [{'node': {'id': 'gid://shopify/ProductVariant/42293401256002', 'sku': 'FG-0000701', 'inventoryItem': {'id': 'gid://shopify/InventoryItem/44394529521730'}, 'selectedOptions': [{'name': 'Color', 'value': 'Black Gold'}]}}]}}, 'userErrors': []}}, 'status': 'success'}
2025-07-09 00:28:53,098 - sync_service - ERROR - Shopify full response for store local: {'msg': 'success', 'data': {'productCreate': {'product': {'id': 'gid://shopify/Product/7510099329090', 'title': 'Morsi-Black-Gold', 'handle': 'morsi-black-gold', 'variants': {'edges': [{'node': {'id': 'gid://shopify/ProductVariant/42293401256002', 'sku': 'FG-0000701', 'inventoryItem': {'id': 'gid://shopify/InventoryItem/44394529521730'}, 'selectedOptions': [{'name': 'Color', 'value': 'Black Gold'}]}}]}}, 'userErrors': []}}}
2025-07-09 00:28:53,098 - sync_service - INFO - Successfully created product in store local
2025-07-09 00:28:53,604 - sync_service - INFO - Sync Event: {'sync_type': 'multi_store_new_items_sap_to_shopify', 'items_processed': 1, 'success_count': 1, 'error_count': 0, 'details': None}
2025-07-09 00:28:53,605 - sync_service - INFO - Multi-store new items sync completed: 1 processed, 1 successful, 0 errors
2025-07-09 00:34:44,571 - sync_service - INFO - Initialized Shopify client for store: Local Store (local)
2025-07-09 00:34:44,573 - sync_service - INFO - Starting multi-store new items sync from SAP to Shopify
2025-07-09 00:34:44,574 - sync_service - INFO - Fetching new items for store: local
2025-07-09 00:34:44,574 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'login', 'request': {'company': 'JudeBenHalim_Test', 'user': 'manager'}, 'response': None, 'status': None}
2025-07-09 00:34:45,168 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'login', 'request': None, 'response': {'status': 'success'}, 'status': 'success'}
2025-07-09 00:34:45,168 - sync_service - INFO - SAP login successful
2025-07-09 00:34:45,169 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': "view.svc/MASHURA_New_ItemsB1SLQuery?$filter=Shopify_Store eq 'local'&$orderby=MainProduct", 'request': {'method': 'GET', 'url': "https://10.0.0.100:50000/b1s/v1/view.svc/MASHURA_New_ItemsB1SLQuery?$filter=Shopify_Store eq 'local'&$orderby=MainProduct", 'data': None, 'params': None}, 'response': None, 'status': None}
2025-07-09 00:34:45,688 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': "view.svc/MASHURA_New_ItemsB1SLQuery?$filter=Shopify_Store eq 'local'&$orderby=MainProduct", 'request': None, 'response': {'odata.metadata': 'https://10.0.0.100:50000/b1s/v1/view.svc/$metadata#MASHURA_New_ItemsB1SLQuery', 'value': [{'itemcode': 'FG-0000701', 'ItemName': 'Morsi-Black-Gold', 'MainProduct': 'Morsi Necklace', 'Color': 'Black Gold', 'OnHand': 10.0, 'IsCommited': 0.0, 'Available': 10.0, 'Price': 2500.0, 'Status': 'new', 'Shopify_ProductCode': '', 'Shopify_Store': 'local', 'id__': 1}, {'itemcode': 'FG-0000702', 'ItemName': 'Morsi-Rose-Gold', 'MainProduct': 'Morsi Necklace', 'Color': 'Rose Gold', 'OnHand': 15.0, 'IsCommited': 0.0, 'Available': 15.0, 'Price': 2500.0, 'Status': 'new', 'Shopify_ProductCode': '', 'Shopify_Store': 'local', 'id__': 2}, {'itemcode': 'FG-0000703', 'ItemName': 'Morsi-White-Gold', 'MainProduct': 'Morsi Necklace', 'Color': 'White Gold', 'OnHand': 20.0, 'IsCommited': 0.0, 'Available': 20.0, 'Price': 2500.0, 'Status': 'new', 'Shopify_ProductCode': '', 'Shopify_Store': 'local', 'id__': 3}]}, 'status': 'success'}
2025-07-09 00:34:45,689 - sync_service - INFO - Product group: ('Morsi Necklace', 'local') has 3 items
2025-07-09 00:34:45,690 - sync_service - INFO - Grouped 3 items into 1 product groups for store local
2025-07-09 00:34:45,691 - sync_service - INFO - Processing product group: ('Morsi Necklace', 'local') with 3 items for store local
2025-07-09 00:34:45,691 - sync_service - INFO - API Call: {'service': 'shopify', 'endpoint': 'graphql_local', 'request': {'query': '\n        mutation productCreate($input: ProductInput!) {\n            productCreate(input: $input) {\n                product {\n                    id\n                    title\n                    handle\n                    variants(first: 50) {\n                        edges {\n                            node {\n                                id\n                                sku\n                                inventoryItem {\n                                    id\n                                }\n                                selectedOptions {\n                                    name\n                                    value\n                                }\n                            }\n                        }\n                    }\n                }\n                userErrors {\n                    field\n                    message\n                }\n            }\n        }\n        ', 'variables': {'input': {'title': 'Morsi Necklace', 'status': 'DRAFT', 'options': ['Color'], 'variants': [{'options': ['Black Gold'], 'sku': 'FG-0000701'}, {'options': ['Rose Gold'], 'sku': 'FG-0000702'}, {'options': ['White Gold'], 'sku': 'FG-0000703'}]}}}, 'response': None, 'status': None}
2025-07-09 00:34:46,445 - sync_service - INFO - API Call: {'service': 'shopify', 'endpoint': 'graphql_local', 'request': None, 'response': {'productCreate': {'product': {'id': 'gid://shopify/Product/7510100869186', 'title': 'Morsi Necklace', 'handle': 'morsi-necklace', 'variants': {'edges': [{'node': {'id': 'gid://shopify/ProductVariant/42293419475010', 'sku': 'FG-0000701', 'inventoryItem': {'id': 'gid://shopify/InventoryItem/44394547413058'}, 'selectedOptions': [{'name': 'Color', 'value': 'Black Gold'}]}}, {'node': {'id': 'gid://shopify/ProductVariant/42293419507778', 'sku': 'FG-0000702', 'inventoryItem': {'id': 'gid://shopify/InventoryItem/44394547445826'}, 'selectedOptions': [{'name': 'Color', 'value': 'Rose Gold'}]}}, {'node': {'id': 'gid://shopify/ProductVariant/42293419540546', 'sku': 'FG-0000703', 'inventoryItem': {'id': 'gid://shopify/InventoryItem/44394547478594'}, 'selectedOptions': [{'name': 'Color', 'value': 'White Gold'}]}}]}}, 'userErrors': []}}, 'status': 'success'}
2025-07-09 00:34:46,447 - sync_service - ERROR - Shopify full response for store local: {'msg': 'success', 'data': {'productCreate': {'product': {'id': 'gid://shopify/Product/7510100869186', 'title': 'Morsi Necklace', 'handle': 'morsi-necklace', 'variants': {'edges': [{'node': {'id': 'gid://shopify/ProductVariant/42293419475010', 'sku': 'FG-0000701', 'inventoryItem': {'id': 'gid://shopify/InventoryItem/44394547413058'}, 'selectedOptions': [{'name': 'Color', 'value': 'Black Gold'}]}}, {'node': {'id': 'gid://shopify/ProductVariant/42293419507778', 'sku': 'FG-0000702', 'inventoryItem': {'id': 'gid://shopify/InventoryItem/44394547445826'}, 'selectedOptions': [{'name': 'Color', 'value': 'Rose Gold'}]}}, {'node': {'id': 'gid://shopify/ProductVariant/42293419540546', 'sku': 'FG-0000703', 'inventoryItem': {'id': 'gid://shopify/InventoryItem/44394547478594'}, 'selectedOptions': [{'name': 'Color', 'value': 'White Gold'}]}}]}}, 'userErrors': []}}}
2025-07-09 00:34:46,448 - sync_service - INFO - Successfully created product in store local
2025-07-09 00:34:46,955 - sync_service - INFO - Sync Event: {'sync_type': 'multi_store_new_items_sap_to_shopify', 'items_processed': 1, 'success_count': 1, 'error_count': 0, 'details': None}
2025-07-09 00:34:46,957 - sync_service - INFO - Multi-store new items sync completed: 1 processed, 1 successful, 0 errors
2025-07-09 00:36:57,008 - sync_service - INFO - Initialized Shopify client for store: Local Store (local)
2025-07-09 00:36:57,010 - sync_service - INFO - Starting multi-store new items sync from SAP to Shopify
2025-07-09 00:36:57,010 - sync_service - INFO - Fetching new items for store: local
2025-07-09 00:36:57,011 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'login', 'request': {'company': 'JudeBenHalim_Test', 'user': 'manager'}, 'response': None, 'status': None}
2025-07-09 00:36:57,581 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'login', 'request': None, 'response': {'status': 'success'}, 'status': 'success'}
2025-07-09 00:36:57,583 - sync_service - INFO - SAP login successful
2025-07-09 00:36:57,584 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': "view.svc/MASHURA_New_ItemsB1SLQuery?$filter=Shopify_Store eq 'local'&$orderby=MainProduct", 'request': {'method': 'GET', 'url': "https://10.0.0.100:50000/b1s/v1/view.svc/MASHURA_New_ItemsB1SLQuery?$filter=Shopify_Store eq 'local'&$orderby=MainProduct", 'data': None, 'params': None}, 'response': None, 'status': None}
2025-07-09 00:36:58,092 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': "view.svc/MASHURA_New_ItemsB1SLQuery?$filter=Shopify_Store eq 'local'&$orderby=MainProduct", 'request': None, 'response': {'odata.metadata': 'https://10.0.0.100:50000/b1s/v1/view.svc/$metadata#MASHURA_New_ItemsB1SLQuery', 'value': [{'itemcode': 'FG-0000701', 'ItemName': 'Morsi-Black-Gold', 'MainProduct': 'Morsi Necklace', 'Color': 'Black Gold', 'OnHand': 10.0, 'IsCommited': 0.0, 'Available': 10.0, 'Price': 2500.0, 'Status': 'new', 'Shopify_ProductCode': '', 'Shopify_Store': 'local', 'id__': 1}, {'itemcode': 'FG-0000702', 'ItemName': 'Morsi-Rose-Gold', 'MainProduct': 'Morsi Necklace', 'Color': 'Rose Gold', 'OnHand': 15.0, 'IsCommited': 0.0, 'Available': 15.0, 'Price': 2500.0, 'Status': 'new', 'Shopify_ProductCode': '', 'Shopify_Store': 'local', 'id__': 2}, {'itemcode': 'FG-0000703', 'ItemName': 'Morsi-White-Gold', 'MainProduct': 'Morsi Necklace', 'Color': 'White Gold', 'OnHand': 20.0, 'IsCommited': 0.0, 'Available': 20.0, 'Price': 2500.0, 'Status': 'new', 'Shopify_ProductCode': '', 'Shopify_Store': 'local', 'id__': 3}]}, 'status': 'success'}
2025-07-09 00:36:58,093 - sync_service - INFO - Product group: ('Morsi Necklace', 'local') has 3 items
2025-07-09 00:36:58,094 - sync_service - INFO - Grouped 3 items into 1 product groups for store local
2025-07-09 00:36:58,094 - sync_service - INFO - Processing product group: ('Morsi Necklace', 'local') with 3 items for store local
2025-07-09 00:36:58,095 - sync_service - INFO - API Call: {'service': 'shopify', 'endpoint': 'graphql_local', 'request': {'query': '\n        mutation productCreate($input: ProductInput!) {\n            productCreate(input: $input) {\n                product {\n                    id\n                    title\n                    handle\n                    variants(first: 50) {\n                        edges {\n                            node {\n                                id\n                                sku\n                                inventoryItem {\n                                    id\n                                }\n                                selectedOptions {\n                                    name\n                                    value\n                                }\n                            }\n                        }\n                    }\n                }\n                userErrors {\n                    field\n                    message\n                }\n            }\n        }\n        ', 'variables': {'input': {'title': 'Morsi Necklace', 'status': 'DRAFT', 'options': ['Color'], 'variants': [{'options': ['Black Gold'], 'sku': 'FG-0000701', 'inventoryManagement': 'SHOPIFY', 'inventoryQuantities': [{'availableQuantity': 10, 'locationId': 'gid://shopify/Location/68605345858'}]}, {'options': ['Rose Gold'], 'sku': 'FG-0000702', 'inventoryManagement': 'SHOPIFY', 'inventoryQuantities': [{'availableQuantity': 15, 'locationId': 'gid://shopify/Location/68605345858'}]}, {'options': ['White Gold'], 'sku': 'FG-0000703', 'inventoryManagement': 'SHOPIFY', 'inventoryQuantities': [{'availableQuantity': 20, 'locationId': 'gid://shopify/Location/68605345858'}]}]}}}, 'response': None, 'status': None}
2025-07-09 00:36:58,794 - sync_service - INFO - API Call: {'service': 'shopify', 'endpoint': 'graphql_local', 'request': None, 'response': {'productCreate': {'product': {'id': 'gid://shopify/Product/7510101590082', 'title': 'Morsi Necklace', 'handle': 'morsi-necklace', 'variants': {'edges': [{'node': {'id': 'gid://shopify/ProductVariant/42293424586818', 'sku': 'FG-0000701', 'inventoryItem': {'id': 'gid://shopify/InventoryItem/44394552852546'}, 'selectedOptions': [{'name': 'Color', 'value': 'Black Gold'}]}}, {'node': {'id': 'gid://shopify/ProductVariant/42293424619586', 'sku': 'FG-0000702', 'inventoryItem': {'id': 'gid://shopify/InventoryItem/44394552885314'}, 'selectedOptions': [{'name': 'Color', 'value': 'Rose Gold'}]}}, {'node': {'id': 'gid://shopify/ProductVariant/42293424652354', 'sku': 'FG-0000703', 'inventoryItem': {'id': 'gid://shopify/InventoryItem/44394552918082'}, 'selectedOptions': [{'name': 'Color', 'value': 'White Gold'}]}}]}}, 'userErrors': []}}, 'status': 'success'}
2025-07-09 00:36:58,795 - sync_service - ERROR - Shopify full response for store local: {'msg': 'success', 'data': {'productCreate': {'product': {'id': 'gid://shopify/Product/7510101590082', 'title': 'Morsi Necklace', 'handle': 'morsi-necklace', 'variants': {'edges': [{'node': {'id': 'gid://shopify/ProductVariant/42293424586818', 'sku': 'FG-0000701', 'inventoryItem': {'id': 'gid://shopify/InventoryItem/44394552852546'}, 'selectedOptions': [{'name': 'Color', 'value': 'Black Gold'}]}}, {'node': {'id': 'gid://shopify/ProductVariant/42293424619586', 'sku': 'FG-0000702', 'inventoryItem': {'id': 'gid://shopify/InventoryItem/44394552885314'}, 'selectedOptions': [{'name': 'Color', 'value': 'Rose Gold'}]}}, {'node': {'id': 'gid://shopify/ProductVariant/42293424652354', 'sku': 'FG-0000703', 'inventoryItem': {'id': 'gid://shopify/InventoryItem/44394552918082'}, 'selectedOptions': [{'name': 'Color', 'value': 'White Gold'}]}}]}}, 'userErrors': []}}}
2025-07-09 00:36:58,796 - sync_service - INFO - Successfully created product in store local
2025-07-09 00:36:59,297 - sync_service - INFO - Sync Event: {'sync_type': 'multi_store_new_items_sap_to_shopify', 'items_processed': 1, 'success_count': 1, 'error_count': 0, 'details': None}
2025-07-09 00:36:59,298 - sync_service - INFO - Multi-store new items sync completed: 1 processed, 1 successful, 0 errors
2025-07-09 00:40:41,875 - sync_service - INFO - Initialized Shopify client for store: Local Store (local)
2025-07-09 00:40:41,877 - sync_service - INFO - Starting multi-store new items sync from SAP to Shopify
2025-07-09 00:40:41,878 - sync_service - INFO - Fetching new items for store: local
2025-07-09 00:40:41,879 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'login', 'request': {'company': 'JudeBenHalim_Test', 'user': 'manager'}, 'response': None, 'status': None}
2025-07-09 00:40:42,452 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'login', 'request': None, 'response': {'status': 'success'}, 'status': 'success'}
2025-07-09 00:40:42,452 - sync_service - INFO - SAP login successful
2025-07-09 00:40:42,453 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': "view.svc/MASHURA_New_ItemsB1SLQuery?$filter=Shopify_Store eq 'local'&$orderby=MainProduct", 'request': {'method': 'GET', 'url': "https://10.0.0.100:50000/b1s/v1/view.svc/MASHURA_New_ItemsB1SLQuery?$filter=Shopify_Store eq 'local'&$orderby=MainProduct", 'data': None, 'params': None}, 'response': None, 'status': None}
2025-07-09 00:40:42,962 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': "view.svc/MASHURA_New_ItemsB1SLQuery?$filter=Shopify_Store eq 'local'&$orderby=MainProduct", 'request': None, 'response': {'odata.metadata': 'https://10.0.0.100:50000/b1s/v1/view.svc/$metadata#MASHURA_New_ItemsB1SLQuery', 'value': [{'itemcode': 'FG-0000701', 'ItemName': 'Morsi-Black-Gold', 'MainProduct': 'Morsi Necklace', 'Color': 'Black Gold', 'OnHand': 10.0, 'IsCommited': 0.0, 'Available': 10.0, 'Price': 2500.0, 'Status': 'new', 'Shopify_ProductCode': '', 'Shopify_Store': 'local', 'id__': 1}, {'itemcode': 'FG-0000702', 'ItemName': 'Morsi-Rose-Gold', 'MainProduct': 'Morsi Necklace', 'Color': 'Rose Gold', 'OnHand': 15.0, 'IsCommited': 0.0, 'Available': 15.0, 'Price': 2500.0, 'Status': 'new', 'Shopify_ProductCode': '', 'Shopify_Store': 'local', 'id__': 2}, {'itemcode': 'FG-0000703', 'ItemName': 'Morsi-White-Gold', 'MainProduct': 'Morsi Necklace', 'Color': 'White Gold', 'OnHand': 20.0, 'IsCommited': 0.0, 'Available': 20.0, 'Price': 2500.0, 'Status': 'new', 'Shopify_ProductCode': '', 'Shopify_Store': 'local', 'id__': 3}]}, 'status': 'success'}
2025-07-09 00:40:42,963 - sync_service - INFO - Product group: ('Morsi Necklace', 'local') has 3 items
2025-07-09 00:40:42,964 - sync_service - INFO - Grouped 3 items into 1 product groups for store local
2025-07-09 00:40:42,964 - sync_service - INFO - Processing product group: ('Morsi Necklace', 'local') with 3 items for store local
2025-07-09 00:40:42,965 - sync_service - INFO - API Call: {'service': 'shopify', 'endpoint': 'graphql_local', 'request': {'query': '\n        mutation productCreate($input: ProductInput!) {\n            productCreate(input: $input) {\n                product {\n                    id\n                    title\n                    handle\n                    variants(first: 50) {\n                        edges {\n                            node {\n                                id\n                                sku\n                                inventoryItem {\n                                    id\n                                }\n                                selectedOptions {\n                                    name\n                                    value\n                                }\n                            }\n                        }\n                    }\n                }\n                userErrors {\n                    field\n                    message\n                }\n            }\n        }\n        ', 'variables': {'input': {'title': 'Morsi Necklace', 'status': 'DRAFT', 'options': ['Color'], 'variants': [{'options': ['Black Gold'], 'sku': 'FG-0000701', 'price': '2500.0', 'inventoryManagement': 'SHOPIFY', 'inventoryQuantities': [{'availableQuantity': 10, 'locationId': 'gid://shopify/Location/68605345858'}]}, {'options': ['Rose Gold'], 'sku': 'FG-0000702', 'price': '2500.0', 'inventoryManagement': 'SHOPIFY', 'inventoryQuantities': [{'availableQuantity': 15, 'locationId': 'gid://shopify/Location/68605345858'}]}, {'options': ['White Gold'], 'sku': 'FG-0000703', 'price': '2500.0', 'inventoryManagement': 'SHOPIFY', 'inventoryQuantities': [{'availableQuantity': 20, 'locationId': 'gid://shopify/Location/68605345858'}]}]}}}, 'response': None, 'status': None}
2025-07-09 00:40:43,742 - sync_service - INFO - API Call: {'service': 'shopify', 'endpoint': 'graphql_local', 'request': None, 'response': {'productCreate': {'product': {'id': 'gid://shopify/Product/7510103228482', 'title': 'Morsi Necklace', 'handle': 'morsi-necklace', 'variants': {'edges': [{'node': {'id': 'gid://shopify/ProductVariant/42293446541378', 'sku': 'FG-0000701', 'inventoryItem': {'id': 'gid://shopify/InventoryItem/44394574512194'}, 'selectedOptions': [{'name': 'Color', 'value': 'Black Gold'}]}}, {'node': {'id': 'gid://shopify/ProductVariant/42293446574146', 'sku': 'FG-0000702', 'inventoryItem': {'id': 'gid://shopify/InventoryItem/44394574544962'}, 'selectedOptions': [{'name': 'Color', 'value': 'Rose Gold'}]}}, {'node': {'id': 'gid://shopify/ProductVariant/42293446639682', 'sku': 'FG-0000703', 'inventoryItem': {'id': 'gid://shopify/InventoryItem/44394574577730'}, 'selectedOptions': [{'name': 'Color', 'value': 'White Gold'}]}}]}}, 'userErrors': []}}, 'status': 'success'}
2025-07-09 00:40:43,743 - sync_service - ERROR - Shopify full response for store local: {'msg': 'success', 'data': {'productCreate': {'product': {'id': 'gid://shopify/Product/7510103228482', 'title': 'Morsi Necklace', 'handle': 'morsi-necklace', 'variants': {'edges': [{'node': {'id': 'gid://shopify/ProductVariant/42293446541378', 'sku': 'FG-0000701', 'inventoryItem': {'id': 'gid://shopify/InventoryItem/44394574512194'}, 'selectedOptions': [{'name': 'Color', 'value': 'Black Gold'}]}}, {'node': {'id': 'gid://shopify/ProductVariant/42293446574146', 'sku': 'FG-0000702', 'inventoryItem': {'id': 'gid://shopify/InventoryItem/44394574544962'}, 'selectedOptions': [{'name': 'Color', 'value': 'Rose Gold'}]}}, {'node': {'id': 'gid://shopify/ProductVariant/42293446639682', 'sku': 'FG-0000703', 'inventoryItem': {'id': 'gid://shopify/InventoryItem/44394574577730'}, 'selectedOptions': [{'name': 'Color', 'value': 'White Gold'}]}}]}}, 'userErrors': []}}}
2025-07-09 00:40:43,744 - sync_service - INFO - Successfully created product in store local
2025-07-09 00:40:44,257 - sync_service - INFO - Sync Event: {'sync_type': 'multi_store_new_items_sap_to_shopify', 'items_processed': 1, 'success_count': 1, 'error_count': 0, 'details': None}
2025-07-09 00:40:44,257 - sync_service - INFO - Multi-store new items sync completed: 1 processed, 1 successful, 0 errors
2025-07-09 01:01:20,306 - sync_service - INFO - Initialized Shopify client for store: Local Store (local)
2025-07-09 01:01:20,310 - sync_service - INFO - Starting multi-store new items sync from SAP to Shopify
2025-07-09 01:01:20,310 - sync_service - INFO - Fetching new items for store: local
2025-07-09 01:01:20,312 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'login', 'request': {'company': 'JudeBenHalim_Test', 'user': 'manager'}, 'response': None, 'status': None}
2025-07-09 01:01:21,738 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'login', 'request': None, 'response': {'status': 'success'}, 'status': 'success'}
2025-07-09 01:01:21,740 - sync_service - INFO - SAP login successful
2025-07-09 01:01:21,741 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': "view.svc/MASHURA_New_ItemsB1SLQuery?$filter=Shopify_Store eq 'local'&$orderby=MainProduct", 'request': {'method': 'GET', 'url': "https://10.0.0.100:50000/b1s/v1/view.svc/MASHURA_New_ItemsB1SLQuery?$filter=Shopify_Store eq 'local'&$orderby=MainProduct", 'data': None, 'params': None}, 'response': None, 'status': None}
2025-07-09 01:01:22,251 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': "view.svc/MASHURA_New_ItemsB1SLQuery?$filter=Shopify_Store eq 'local'&$orderby=MainProduct", 'request': None, 'response': {'odata.metadata': 'https://10.0.0.100:50000/b1s/v1/view.svc/$metadata#MASHURA_New_ItemsB1SLQuery', 'value': [{'itemcode': 'FG-0000701', 'ItemName': 'Morsi-Black-Gold', 'MainProduct': 'Morsi Necklace', 'Color': 'Black Gold', 'OnHand': 10.0, 'IsCommited': 0.0, 'Available': 10.0, 'Price': 2500.0, 'Status': 'new', 'Shopify_ProductCode': '', 'Shopify_Store': 'local', 'id__': 1}, {'itemcode': 'FG-0000702', 'ItemName': 'Morsi-Rose-Gold', 'MainProduct': 'Morsi Necklace', 'Color': 'Rose Gold', 'OnHand': 15.0, 'IsCommited': 0.0, 'Available': 15.0, 'Price': 2500.0, 'Status': 'new', 'Shopify_ProductCode': '', 'Shopify_Store': 'local', 'id__': 2}, {'itemcode': 'FG-0000703', 'ItemName': 'Morsi-White-Gold', 'MainProduct': 'Morsi Necklace', 'Color': 'White Gold', 'OnHand': 20.0, 'IsCommited': 0.0, 'Available': 20.0, 'Price': 2500.0, 'Status': 'new', 'Shopify_ProductCode': '', 'Shopify_Store': 'local', 'id__': 3}]}, 'status': 'success'}
2025-07-09 01:01:22,253 - sync_service - INFO - Product group: ('Morsi Necklace', 'local') has 3 items
2025-07-09 01:01:22,255 - sync_service - INFO - Grouped 3 items into 1 product groups for store local
2025-07-09 01:01:22,255 - sync_service - INFO - Processing product group: ('Morsi Necklace', 'local') with 3 items for store local
2025-07-09 01:01:22,257 - sync_service - INFO - API Call: {'service': 'shopify', 'endpoint': 'graphql_local', 'request': {'query': '\n        mutation productCreate($input: ProductInput!) {\n            productCreate(input: $input) {\n                product {\n                    id\n                    title\n                    handle\n                    variants(first: 50) {\n                        edges {\n                            node {\n                                id\n                                sku\n                                inventoryItem {\n                                    id\n                                }\n                                selectedOptions {\n                                    name\n                                    value\n                                }\n                            }\n                        }\n                    }\n                }\n                userErrors {\n                    field\n                    message\n                }\n            }\n        }\n        ', 'variables': {'input': {'title': 'Morsi Necklace', 'status': 'DRAFT', 'options': ['Color'], 'variants': [{'options': ['Black Gold'], 'sku': 'FG-0000701', 'price': '2500.0', 'inventoryManagement': 'SHOPIFY', 'inventoryQuantities': [{'availableQuantity': 10, 'locationId': 'gid://shopify/Location/68605345858'}]}, {'options': ['Rose Gold'], 'sku': 'FG-0000702', 'price': '2500.0', 'inventoryManagement': 'SHOPIFY', 'inventoryQuantities': [{'availableQuantity': 15, 'locationId': 'gid://shopify/Location/68605345858'}]}, {'options': ['White Gold'], 'sku': 'FG-0000703', 'price': '2500.0', 'inventoryManagement': 'SHOPIFY', 'inventoryQuantities': [{'availableQuantity': 20, 'locationId': 'gid://shopify/Location/68605345858'}]}]}}}, 'response': None, 'status': None}
2025-07-09 01:01:23,589 - sync_service - INFO - API Call: {'service': 'shopify', 'endpoint': 'graphql_local', 'request': None, 'response': {'productCreate': {'product': {'id': 'gid://shopify/Product/7510108733506', 'title': 'Morsi Necklace', 'handle': 'morsi-necklace-1', 'variants': {'edges': [{'node': {'id': 'gid://shopify/ProductVariant/42293507063874', 'sku': 'FG-0000701', 'inventoryItem': {'id': 'gid://shopify/InventoryItem/44394637557826'}, 'selectedOptions': [{'name': 'Color', 'value': 'Black Gold'}]}}, {'node': {'id': 'gid://shopify/ProductVariant/42293507096642', 'sku': 'FG-0000702', 'inventoryItem': {'id': 'gid://shopify/InventoryItem/44394637590594'}, 'selectedOptions': [{'name': 'Color', 'value': 'Rose Gold'}]}}, {'node': {'id': 'gid://shopify/ProductVariant/42293507129410', 'sku': 'FG-0000703', 'inventoryItem': {'id': 'gid://shopify/InventoryItem/44394637623362'}, 'selectedOptions': [{'name': 'Color', 'value': 'White Gold'}]}}]}}, 'userErrors': []}}, 'status': 'success'}
2025-07-09 01:01:23,590 - sync_service - ERROR - Shopify full response for store local: {'msg': 'success', 'data': {'productCreate': {'product': {'id': 'gid://shopify/Product/7510108733506', 'title': 'Morsi Necklace', 'handle': 'morsi-necklace-1', 'variants': {'edges': [{'node': {'id': 'gid://shopify/ProductVariant/42293507063874', 'sku': 'FG-0000701', 'inventoryItem': {'id': 'gid://shopify/InventoryItem/44394637557826'}, 'selectedOptions': [{'name': 'Color', 'value': 'Black Gold'}]}}, {'node': {'id': 'gid://shopify/ProductVariant/42293507096642', 'sku': 'FG-0000702', 'inventoryItem': {'id': 'gid://shopify/InventoryItem/44394637590594'}, 'selectedOptions': [{'name': 'Color', 'value': 'Rose Gold'}]}}, {'node': {'id': 'gid://shopify/ProductVariant/42293507129410', 'sku': 'FG-0000703', 'inventoryItem': {'id': 'gid://shopify/InventoryItem/44394637623362'}, 'selectedOptions': [{'name': 'Color', 'value': 'White Gold'}]}}]}}, 'userErrors': []}}}
2025-07-09 01:01:23,591 - sync_service - INFO - Successfully created product in store local
2025-07-09 01:01:23,591 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'U_SHOPIFY_MAPPING', 'request': {'method': 'POST', 'url': 'https://10.0.0.100:50000/b1s/v1/U_SHOPIFY_MAPPING', 'data': {'Code': '7510108733506', 'Name': '7510108733506', 'U_Shopify_Type': 'product', 'U_SAP_Code': 'Morsi Necklace', 'U_Shopify_Store': 'local', 'U_SAP_Type': 'item'}, 'params': None}, 'response': None, 'status': None}
2025-07-09 01:01:23,724 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'U_SHOPIFY_MAPPING', 'request': None, 'response': {'odata.metadata': 'https://10.0.0.100:50000/b1s/v1/$metadata#U_SHOPIFY_MAPPING/@Element', 'Code': '7510108733506', 'Name': '7510108733506', 'U_Shopify_Type': 'product', 'U_SAP_Code': 'Morsi Necklace', 'U_SAP_Type': 'item', 'U_Shopify_Store': 'local'}, 'status': 'success'}
2025-07-09 01:01:23,727 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'U_SHOPIFY_MAPPING', 'request': {'method': 'POST', 'url': 'https://10.0.0.100:50000/b1s/v1/U_SHOPIFY_MAPPING', 'data': {'Code': '42293507063874', 'Name': '42293507063874', 'U_Shopify_Type': 'variant', 'U_SAP_Code': 'FG-0000701', 'U_Shopify_Store': 'local', 'U_SAP_Type': 'item'}, 'params': None}, 'response': None, 'status': None}
2025-07-09 01:01:24,633 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'U_SHOPIFY_MAPPING', 'request': None, 'response': {'odata.metadata': 'https://10.0.0.100:50000/b1s/v1/$metadata#U_SHOPIFY_MAPPING/@Element', 'Code': '42293507063874', 'Name': '42293507063874', 'U_Shopify_Type': 'variant', 'U_SAP_Code': 'FG-0000701', 'U_SAP_Type': 'item', 'U_Shopify_Store': 'local'}, 'status': 'success'}
2025-07-09 01:01:24,633 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'U_SHOPIFY_MAPPING', 'request': {'method': 'POST', 'url': 'https://10.0.0.100:50000/b1s/v1/U_SHOPIFY_MAPPING', 'data': {'Code': '44394637557826', 'Name': '44394637557826', 'U_Shopify_Type': 'variant_inventory', 'U_SAP_Code': 'FG-0000701', 'U_Shopify_Store': 'local', 'U_SAP_Type': 'item'}, 'params': None}, 'response': None, 'status': None}
2025-07-09 01:01:24,741 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'U_SHOPIFY_MAPPING', 'request': None, 'response': {'odata.metadata': 'https://10.0.0.100:50000/b1s/v1/$metadata#U_SHOPIFY_MAPPING/@Element', 'Code': '44394637557826', 'Name': '44394637557826', 'U_Shopify_Type': 'variant_inventory', 'U_SAP_Code': 'FG-0000701', 'U_SAP_Type': 'item', 'U_Shopify_Store': 'local'}, 'status': 'success'}
2025-07-09 01:01:24,744 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'U_SHOPIFY_MAPPING', 'request': {'method': 'POST', 'url': 'https://10.0.0.100:50000/b1s/v1/U_SHOPIFY_MAPPING', 'data': {'Code': '42293507096642', 'Name': '42293507096642', 'U_Shopify_Type': 'variant', 'U_SAP_Code': 'FG-0000702', 'U_Shopify_Store': 'local', 'U_SAP_Type': 'item'}, 'params': None}, 'response': None, 'status': None}
2025-07-09 01:01:24,843 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'U_SHOPIFY_MAPPING', 'request': None, 'response': {'odata.metadata': 'https://10.0.0.100:50000/b1s/v1/$metadata#U_SHOPIFY_MAPPING/@Element', 'Code': '42293507096642', 'Name': '42293507096642', 'U_Shopify_Type': 'variant', 'U_SAP_Code': 'FG-0000702', 'U_SAP_Type': 'item', 'U_Shopify_Store': 'local'}, 'status': 'success'}
2025-07-09 01:01:24,844 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'U_SHOPIFY_MAPPING', 'request': {'method': 'POST', 'url': 'https://10.0.0.100:50000/b1s/v1/U_SHOPIFY_MAPPING', 'data': {'Code': '44394637590594', 'Name': '44394637590594', 'U_Shopify_Type': 'variant_inventory', 'U_SAP_Code': 'FG-0000702', 'U_Shopify_Store': 'local', 'U_SAP_Type': 'item'}, 'params': None}, 'response': None, 'status': None}
2025-07-09 01:01:24,953 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'U_SHOPIFY_MAPPING', 'request': None, 'response': {'odata.metadata': 'https://10.0.0.100:50000/b1s/v1/$metadata#U_SHOPIFY_MAPPING/@Element', 'Code': '44394637590594', 'Name': '44394637590594', 'U_Shopify_Type': 'variant_inventory', 'U_SAP_Code': 'FG-0000702', 'U_SAP_Type': 'item', 'U_Shopify_Store': 'local'}, 'status': 'success'}
2025-07-09 01:01:24,954 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'U_SHOPIFY_MAPPING', 'request': {'method': 'POST', 'url': 'https://10.0.0.100:50000/b1s/v1/U_SHOPIFY_MAPPING', 'data': {'Code': '42293507129410', 'Name': '42293507129410', 'U_Shopify_Type': 'variant', 'U_SAP_Code': 'FG-0000703', 'U_Shopify_Store': 'local', 'U_SAP_Type': 'item'}, 'params': None}, 'response': None, 'status': None}
2025-07-09 01:01:25,051 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'U_SHOPIFY_MAPPING', 'request': None, 'response': {'odata.metadata': 'https://10.0.0.100:50000/b1s/v1/$metadata#U_SHOPIFY_MAPPING/@Element', 'Code': '42293507129410', 'Name': '42293507129410', 'U_Shopify_Type': 'variant', 'U_SAP_Code': 'FG-0000703', 'U_SAP_Type': 'item', 'U_Shopify_Store': 'local'}, 'status': 'success'}
2025-07-09 01:01:25,053 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'U_SHOPIFY_MAPPING', 'request': {'method': 'POST', 'url': 'https://10.0.0.100:50000/b1s/v1/U_SHOPIFY_MAPPING', 'data': {'Code': '44394637623362', 'Name': '44394637623362', 'U_Shopify_Type': 'variant_inventory', 'U_SAP_Code': 'FG-0000703', 'U_Shopify_Store': 'local', 'U_SAP_Type': 'item'}, 'params': None}, 'response': None, 'status': None}
2025-07-09 01:01:25,151 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'U_SHOPIFY_MAPPING', 'request': None, 'response': {'odata.metadata': 'https://10.0.0.100:50000/b1s/v1/$metadata#U_SHOPIFY_MAPPING/@Element', 'Code': '44394637623362', 'Name': '44394637623362', 'U_Shopify_Type': 'variant_inventory', 'U_SAP_Code': 'FG-0000703', 'U_SAP_Type': 'item', 'U_Shopify_Store': 'local'}, 'status': 'success'}
2025-07-09 01:01:25,657 - sync_service - INFO - Sync Event: {'sync_type': 'multi_store_new_items_sap_to_shopify', 'items_processed': 1, 'success_count': 1, 'error_count': 0, 'details': None}
2025-07-09 01:01:25,657 - sync_service - INFO - Multi-store new items sync completed: 1 processed, 1 successful, 0 errors
2025-07-09 15:44:15,683 - sync_service - INFO - Initialized Shopify client for store: Local Store (local)
2025-07-09 15:44:22,768 - sync_service - INFO - Initialized Shopify client for store: Local Store (local)
2025-07-09 15:44:23,008 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'login', 'request': {'company': 'JudeBenHalim_Test', 'user': 'manager'}, 'response': None, 'status': None}
2025-07-09 15:44:23,144 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'login', 'request': {'company': 'JudeBenHalim_Test', 'user': 'manager'}, 'response': None, 'status': None}
2025-07-09 15:44:23,179 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'login', 'request': {'company': 'JudeBenHalim_Test', 'user': 'manager'}, 'response': None, 'status': None}
2025-07-09 15:44:23,184 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'login', 'request': {'company': 'JudeBenHalim_Test', 'user': 'manager'}, 'response': None, 'status': None}
2025-07-09 15:44:23,191 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'login', 'request': {'company': 'JudeBenHalim_Test', 'user': 'manager'}, 'response': None, 'status': None}
2025-07-09 15:44:23,193 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'login', 'request': {'company': 'JudeBenHalim_Test', 'user': 'manager'}, 'response': None, 'status': None}
2025-07-09 15:44:23,193 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'login', 'request': {'company': 'JudeBenHalim_Test', 'user': 'manager'}, 'response': None, 'status': None}
2025-07-09 15:44:23,195 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'login', 'request': {'company': 'JudeBenHalim_Test', 'user': 'manager'}, 'response': None, 'status': None}
2025-07-09 15:44:23,204 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'login', 'request': {'company': 'JudeBenHalim_Test', 'user': 'manager'}, 'response': None, 'status': None}
2025-07-09 15:44:23,311 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'login', 'request': {'company': 'JudeBenHalim_Test', 'user': 'manager'}, 'response': None, 'status': None}
2025-07-09 15:44:23,332 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'login', 'request': {'company': 'JudeBenHalim_Test', 'user': 'manager'}, 'response': None, 'status': None}
2025-07-09 15:44:23,339 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'login', 'request': {'company': 'JudeBenHalim_Test', 'user': 'manager'}, 'response': None, 'status': None}
2025-07-09 15:44:23,341 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'login', 'request': {'company': 'JudeBenHalim_Test', 'user': 'manager'}, 'response': None, 'status': None}
2025-07-09 15:44:23,342 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'login', 'request': {'company': 'JudeBenHalim_Test', 'user': 'manager'}, 'response': None, 'status': None}
2025-07-09 15:44:23,345 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'login', 'request': {'company': 'JudeBenHalim_Test', 'user': 'manager'}, 'response': None, 'status': None}
2025-07-09 15:44:23,355 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'login', 'request': {'company': 'JudeBenHalim_Test', 'user': 'manager'}, 'response': None, 'status': None}
2025-07-09 15:44:23,559 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'login', 'request': {'company': 'JudeBenHalim_Test', 'user': 'manager'}, 'response': None, 'status': None}
2025-07-09 15:44:23,576 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'login', 'request': {'company': 'JudeBenHalim_Test', 'user': 'manager'}, 'response': None, 'status': None}
2025-07-09 15:44:23,595 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'login', 'request': {'company': 'JudeBenHalim_Test', 'user': 'manager'}, 'response': None, 'status': None}
2025-07-09 15:44:23,776 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'login', 'request': {'company': 'JudeBenHalim_Test', 'user': 'manager'}, 'response': None, 'status': None}
2025-07-09 15:44:23,809 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'login', 'request': {'company': 'JudeBenHalim_Test', 'user': 'manager'}, 'response': None, 'status': None}
2025-07-09 15:44:23,812 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'login', 'request': {'company': 'JudeBenHalim_Test', 'user': 'manager'}, 'response': None, 'status': None}
2025-07-09 15:44:23,813 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'login', 'request': {'company': 'JudeBenHalim_Test', 'user': 'manager'}, 'response': None, 'status': None}
2025-07-09 15:44:23,814 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'login', 'request': {'company': 'JudeBenHalim_Test', 'user': 'manager'}, 'response': None, 'status': None}
2025-07-09 15:44:23,816 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'login', 'request': {'company': 'JudeBenHalim_Test', 'user': 'manager'}, 'response': None, 'status': None}
2025-07-09 15:44:23,817 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'login', 'request': {'company': 'JudeBenHalim_Test', 'user': 'manager'}, 'response': None, 'status': None}
2025-07-09 15:44:23,827 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'login', 'request': {'company': 'JudeBenHalim_Test', 'user': 'manager'}, 'response': None, 'status': None}
2025-07-09 15:44:23,828 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'login', 'request': {'company': 'JudeBenHalim_Test', 'user': 'manager'}, 'response': None, 'status': None}
2025-07-09 15:44:23,830 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'login', 'request': {'company': 'JudeBenHalim_Test', 'user': 'manager'}, 'response': None, 'status': None}
2025-07-09 15:44:23,833 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'login', 'request': {'company': 'JudeBenHalim_Test', 'user': 'manager'}, 'response': None, 'status': None}
2025-07-09 15:44:24,005 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'login', 'request': {'company': 'JudeBenHalim_Test', 'user': 'manager'}, 'response': None, 'status': None}
2025-07-09 15:44:24,026 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'login', 'request': {'company': 'JudeBenHalim_Test', 'user': 'manager'}, 'response': None, 'status': None}
2025-07-09 15:44:24,055 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'login', 'request': {'company': 'JudeBenHalim_Test', 'user': 'manager'}, 'response': None, 'status': None}
2025-07-09 15:44:24,058 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'login', 'request': {'company': 'JudeBenHalim_Test', 'user': 'manager'}, 'response': None, 'status': None}
2025-07-09 15:44:24,060 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'login', 'request': {'company': 'JudeBenHalim_Test', 'user': 'manager'}, 'response': None, 'status': None}
2025-07-09 15:44:24,061 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'login', 'request': {'company': 'JudeBenHalim_Test', 'user': 'manager'}, 'response': None, 'status': None}
2025-07-09 15:44:24,062 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'login', 'request': {'company': 'JudeBenHalim_Test', 'user': 'manager'}, 'response': None, 'status': None}
2025-07-09 15:44:24,066 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'login', 'request': {'company': 'JudeBenHalim_Test', 'user': 'manager'}, 'response': None, 'status': None}
2025-07-09 15:44:24,186 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'login', 'request': {'company': 'JudeBenHalim_Test', 'user': 'manager'}, 'response': None, 'status': None}
2025-07-09 15:44:24,208 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'login', 'request': {'company': 'JudeBenHalim_Test', 'user': 'manager'}, 'response': None, 'status': None}
2025-07-09 15:44:24,212 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'login', 'request': {'company': 'JudeBenHalim_Test', 'user': 'manager'}, 'response': None, 'status': None}
2025-07-09 15:44:24,221 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'login', 'request': {'company': 'JudeBenHalim_Test', 'user': 'manager'}, 'response': None, 'status': None}
2025-07-09 15:44:24,233 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'login', 'request': {'company': 'JudeBenHalim_Test', 'user': 'manager'}, 'response': None, 'status': None}
2025-07-09 15:44:24,393 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'login', 'request': {'company': 'JudeBenHalim_Test', 'user': 'manager'}, 'response': None, 'status': None}
2025-07-09 15:44:24,402 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'login', 'request': {'company': 'JudeBenHalim_Test', 'user': 'manager'}, 'response': None, 'status': None}
2025-07-09 15:44:24,407 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'login', 'request': {'company': 'JudeBenHalim_Test', 'user': 'manager'}, 'response': None, 'status': None}
2025-07-09 15:44:24,408 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'login', 'request': {'company': 'JudeBenHalim_Test', 'user': 'manager'}, 'response': None, 'status': None}
2025-07-09 15:44:24,410 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'login', 'request': {'company': 'JudeBenHalim_Test', 'user': 'manager'}, 'response': None, 'status': None}
2025-07-09 15:44:24,410 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'login', 'request': {'company': 'JudeBenHalim_Test', 'user': 'manager'}, 'response': None, 'status': None}
2025-07-09 15:44:24,412 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'login', 'request': {'company': 'JudeBenHalim_Test', 'user': 'manager'}, 'response': None, 'status': None}
2025-07-09 15:44:24,426 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'login', 'request': {'company': 'JudeBenHalim_Test', 'user': 'manager'}, 'response': None, 'status': None}
2025-07-09 15:44:24,431 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'login', 'request': {'company': 'JudeBenHalim_Test', 'user': 'manager'}, 'response': None, 'status': None}
2025-07-09 15:44:24,457 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'login', 'request': {'company': 'JudeBenHalim_Test', 'user': 'manager'}, 'response': None, 'status': None}
2025-07-09 15:44:24,460 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'login', 'request': {'company': 'JudeBenHalim_Test', 'user': 'manager'}, 'response': None, 'status': None}
2025-07-09 15:44:24,461 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'login', 'request': {'company': 'JudeBenHalim_Test', 'user': 'manager'}, 'response': None, 'status': None}
2025-07-09 15:44:24,465 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'login', 'request': {'company': 'JudeBenHalim_Test', 'user': 'manager'}, 'response': None, 'status': None}
2025-07-09 15:44:24,627 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'login', 'request': {'company': 'JudeBenHalim_Test', 'user': 'manager'}, 'response': None, 'status': None}
2025-07-09 15:44:24,649 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'login', 'request': {'company': 'JudeBenHalim_Test', 'user': 'manager'}, 'response': None, 'status': None}
2025-07-09 15:44:24,661 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'login', 'request': {'company': 'JudeBenHalim_Test', 'user': 'manager'}, 'response': None, 'status': None}
2025-07-09 15:44:24,662 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'login', 'request': {'company': 'JudeBenHalim_Test', 'user': 'manager'}, 'response': None, 'status': None}
2025-07-09 15:44:24,795 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'login', 'request': {'company': 'JudeBenHalim_Test', 'user': 'manager'}, 'response': None, 'status': None}
2025-07-09 15:44:24,797 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'login', 'request': {'company': 'JudeBenHalim_Test', 'user': 'manager'}, 'response': None, 'status': None}
2025-07-09 15:44:24,799 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'login', 'request': {'company': 'JudeBenHalim_Test', 'user': 'manager'}, 'response': None, 'status': None}
2025-07-09 15:44:24,800 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'login', 'request': {'company': 'JudeBenHalim_Test', 'user': 'manager'}, 'response': None, 'status': None}
2025-07-09 15:44:24,802 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'login', 'request': {'company': 'JudeBenHalim_Test', 'user': 'manager'}, 'response': None, 'status': None}
2025-07-09 15:44:24,805 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'login', 'request': {'company': 'JudeBenHalim_Test', 'user': 'manager'}, 'response': None, 'status': None}
2025-07-09 15:44:24,806 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'login', 'request': {'company': 'JudeBenHalim_Test', 'user': 'manager'}, 'response': None, 'status': None}
2025-07-09 15:44:24,809 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'login', 'request': {'company': 'JudeBenHalim_Test', 'user': 'manager'}, 'response': None, 'status': None}
2025-07-09 15:44:24,810 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'login', 'request': {'company': 'JudeBenHalim_Test', 'user': 'manager'}, 'response': None, 'status': None}
2025-07-09 15:44:24,811 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'login', 'request': {'company': 'JudeBenHalim_Test', 'user': 'manager'}, 'response': None, 'status': None}
2025-07-09 15:44:24,812 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'login', 'request': {'company': 'JudeBenHalim_Test', 'user': 'manager'}, 'response': None, 'status': None}
2025-07-09 15:44:24,812 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'login', 'request': {'company': 'JudeBenHalim_Test', 'user': 'manager'}, 'response': None, 'status': None}
2025-07-09 15:44:24,813 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'login', 'request': {'company': 'JudeBenHalim_Test', 'user': 'manager'}, 'response': None, 'status': None}
2025-07-09 15:44:24,815 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'login', 'request': {'company': 'JudeBenHalim_Test', 'user': 'manager'}, 'response': None, 'status': None}
2025-07-09 15:44:24,815 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'login', 'request': {'company': 'JudeBenHalim_Test', 'user': 'manager'}, 'response': None, 'status': None}
2025-07-09 15:44:24,816 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'login', 'request': {'company': 'JudeBenHalim_Test', 'user': 'manager'}, 'response': None, 'status': None}
2025-07-09 15:44:24,816 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'login', 'request': {'company': 'JudeBenHalim_Test', 'user': 'manager'}, 'response': None, 'status': None}
2025-07-09 15:44:24,818 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'login', 'request': {'company': 'JudeBenHalim_Test', 'user': 'manager'}, 'response': None, 'status': None}
2025-07-09 15:44:24,819 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'login', 'request': {'company': 'JudeBenHalim_Test', 'user': 'manager'}, 'response': None, 'status': None}
2025-07-09 15:44:24,821 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'login', 'request': {'company': 'JudeBenHalim_Test', 'user': 'manager'}, 'response': None, 'status': None}
2025-07-09 15:44:24,823 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'login', 'request': {'company': 'JudeBenHalim_Test', 'user': 'manager'}, 'response': None, 'status': None}
2025-07-09 15:44:24,825 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'login', 'request': {'company': 'JudeBenHalim_Test', 'user': 'manager'}, 'response': None, 'status': None}
2025-07-09 15:44:24,825 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'login', 'request': {'company': 'JudeBenHalim_Test', 'user': 'manager'}, 'response': None, 'status': None}
2025-07-09 15:44:24,826 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'login', 'request': {'company': 'JudeBenHalim_Test', 'user': 'manager'}, 'response': None, 'status': None}
2025-07-09 15:44:24,828 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'login', 'request': {'company': 'JudeBenHalim_Test', 'user': 'manager'}, 'response': None, 'status': None}
2025-07-09 15:44:24,839 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'login', 'request': {'company': 'JudeBenHalim_Test', 'user': 'manager'}, 'response': None, 'status': None}
2025-07-09 15:44:24,843 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'login', 'request': {'company': 'JudeBenHalim_Test', 'user': 'manager'}, 'response': None, 'status': None}
2025-07-09 15:44:24,849 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'login', 'request': {'company': 'JudeBenHalim_Test', 'user': 'manager'}, 'response': None, 'status': None}
2025-07-09 15:44:24,854 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'login', 'request': {'company': 'JudeBenHalim_Test', 'user': 'manager'}, 'response': None, 'status': None}
2025-07-09 15:44:24,970 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'login', 'request': {'company': 'JudeBenHalim_Test', 'user': 'manager'}, 'response': None, 'status': None}
2025-07-09 15:44:24,972 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'login', 'request': {'company': 'JudeBenHalim_Test', 'user': 'manager'}, 'response': None, 'status': None}
2025-07-09 15:44:24,975 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'login', 'request': {'company': 'JudeBenHalim_Test', 'user': 'manager'}, 'response': None, 'status': None}
2025-07-09 15:44:24,976 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'login', 'request': {'company': 'JudeBenHalim_Test', 'user': 'manager'}, 'response': None, 'status': None}
2025-07-09 15:44:24,977 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'login', 'request': {'company': 'JudeBenHalim_Test', 'user': 'manager'}, 'response': None, 'status': None}
2025-07-09 15:44:24,977 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'login', 'request': {'company': 'JudeBenHalim_Test', 'user': 'manager'}, 'response': None, 'status': None}
2025-07-09 15:44:24,996 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'login', 'request': {'company': 'JudeBenHalim_Test', 'user': 'manager'}, 'response': None, 'status': None}
2025-07-09 15:44:24,998 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'login', 'request': {'company': 'JudeBenHalim_Test', 'user': 'manager'}, 'response': None, 'status': None}
2025-07-09 15:44:25,006 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'login', 'request': {'company': 'JudeBenHalim_Test', 'user': 'manager'}, 'response': None, 'status': None}
2025-07-09 15:44:25,009 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'login', 'request': {'company': 'JudeBenHalim_Test', 'user': 'manager'}, 'response': None, 'status': None}
2025-07-09 15:44:25,009 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'login', 'request': {'company': 'JudeBenHalim_Test', 'user': 'manager'}, 'response': None, 'status': None}
2025-07-09 15:44:25,011 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'login', 'request': {'company': 'JudeBenHalim_Test', 'user': 'manager'}, 'response': None, 'status': None}
2025-07-09 15:44:25,012 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'login', 'request': {'company': 'JudeBenHalim_Test', 'user': 'manager'}, 'response': None, 'status': None}
2025-07-09 15:44:25,013 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'login', 'request': {'company': 'JudeBenHalim_Test', 'user': 'manager'}, 'response': None, 'status': None}
2025-07-09 15:44:25,013 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'login', 'request': {'company': 'JudeBenHalim_Test', 'user': 'manager'}, 'response': None, 'status': None}
2025-07-09 15:44:25,015 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'login', 'request': {'company': 'JudeBenHalim_Test', 'user': 'manager'}, 'response': None, 'status': None}
2025-07-09 15:44:25,015 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'login', 'request': {'company': 'JudeBenHalim_Test', 'user': 'manager'}, 'response': None, 'status': None}
2025-07-09 15:44:25,016 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'login', 'request': {'company': 'JudeBenHalim_Test', 'user': 'manager'}, 'response': None, 'status': None}
2025-07-09 15:44:25,017 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'login', 'request': {'company': 'JudeBenHalim_Test', 'user': 'manager'}, 'response': None, 'status': None}
2025-07-09 15:44:25,019 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'login', 'request': {'company': 'JudeBenHalim_Test', 'user': 'manager'}, 'response': None, 'status': None}
2025-07-09 15:44:25,021 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'login', 'request': {'company': 'JudeBenHalim_Test', 'user': 'manager'}, 'response': None, 'status': None}
2025-07-09 15:44:25,022 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'login', 'request': {'company': 'JudeBenHalim_Test', 'user': 'manager'}, 'response': None, 'status': None}
2025-07-09 15:44:25,024 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'login', 'request': {'company': 'JudeBenHalim_Test', 'user': 'manager'}, 'response': None, 'status': None}
2025-07-09 15:44:25,026 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'login', 'request': {'company': 'JudeBenHalim_Test', 'user': 'manager'}, 'response': None, 'status': None}
2025-07-09 15:44:25,026 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'login', 'request': {'company': 'JudeBenHalim_Test', 'user': 'manager'}, 'response': None, 'status': None}
2025-07-09 15:44:25,027 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'login', 'request': {'company': 'JudeBenHalim_Test', 'user': 'manager'}, 'response': None, 'status': None}
2025-07-09 15:44:25,041 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'login', 'request': {'company': 'JudeBenHalim_Test', 'user': 'manager'}, 'response': None, 'status': None}
2025-07-09 15:44:25,044 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'login', 'request': {'company': 'JudeBenHalim_Test', 'user': 'manager'}, 'response': None, 'status': None}
2025-07-09 15:44:25,045 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'login', 'request': {'company': 'JudeBenHalim_Test', 'user': 'manager'}, 'response': None, 'status': None}
2025-07-09 15:44:25,051 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'login', 'request': {'company': 'JudeBenHalim_Test', 'user': 'manager'}, 'response': None, 'status': None}
2025-07-09 15:44:25,055 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'login', 'request': {'company': 'JudeBenHalim_Test', 'user': 'manager'}, 'response': None, 'status': None}
2025-07-09 15:44:25,060 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'login', 'request': {'company': 'JudeBenHalim_Test', 'user': 'manager'}, 'response': None, 'status': None}
2025-07-09 15:44:25,187 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'login', 'request': {'company': 'JudeBenHalim_Test', 'user': 'manager'}, 'response': None, 'status': None}
2025-07-09 15:44:25,218 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'login', 'request': {'company': 'JudeBenHalim_Test', 'user': 'manager'}, 'response': None, 'status': None}
2025-07-09 15:44:25,221 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'login', 'request': {'company': 'JudeBenHalim_Test', 'user': 'manager'}, 'response': None, 'status': None}
2025-07-09 15:44:25,222 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'login', 'request': {'company': 'JudeBenHalim_Test', 'user': 'manager'}, 'response': None, 'status': None}
2025-07-09 15:44:25,224 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'login', 'request': {'company': 'JudeBenHalim_Test', 'user': 'manager'}, 'response': None, 'status': None}
2025-07-09 15:44:25,225 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'login', 'request': {'company': 'JudeBenHalim_Test', 'user': 'manager'}, 'response': None, 'status': None}
2025-07-09 15:44:25,228 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'login', 'request': {'company': 'JudeBenHalim_Test', 'user': 'manager'}, 'response': None, 'status': None}
2025-07-09 15:44:25,230 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'login', 'request': {'company': 'JudeBenHalim_Test', 'user': 'manager'}, 'response': None, 'status': None}
2025-07-09 15:44:25,231 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'login', 'request': {'company': 'JudeBenHalim_Test', 'user': 'manager'}, 'response': None, 'status': None}
2025-07-09 15:44:25,233 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'login', 'request': {'company': 'JudeBenHalim_Test', 'user': 'manager'}, 'response': None, 'status': None}
2025-07-09 15:44:25,234 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'login', 'request': {'company': 'JudeBenHalim_Test', 'user': 'manager'}, 'response': None, 'status': None}
2025-07-09 15:44:25,236 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'login', 'request': {'company': 'JudeBenHalim_Test', 'user': 'manager'}, 'response': None, 'status': None}
2025-07-09 15:44:25,237 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'login', 'request': {'company': 'JudeBenHalim_Test', 'user': 'manager'}, 'response': None, 'status': None}
2025-07-09 15:44:25,239 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'login', 'request': {'company': 'JudeBenHalim_Test', 'user': 'manager'}, 'response': None, 'status': None}
2025-07-09 15:44:25,240 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'login', 'request': {'company': 'JudeBenHalim_Test', 'user': 'manager'}, 'response': None, 'status': None}
2025-07-09 15:44:25,243 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'login', 'request': {'company': 'JudeBenHalim_Test', 'user': 'manager'}, 'response': None, 'status': None}
2025-07-09 15:44:25,245 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'login', 'request': {'company': 'JudeBenHalim_Test', 'user': 'manager'}, 'response': None, 'status': None}
2025-07-09 15:44:25,248 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'login', 'request': {'company': 'JudeBenHalim_Test', 'user': 'manager'}, 'response': None, 'status': None}
2025-07-09 15:44:33,271 - sync_service - ERROR - Error logging API call to SAP: RetryError[<Future at 0x1f1e917d870 state=finished raised RecursionError>]
2025-07-09 15:44:33,275 - sync_service - ERROR - SAP login error: maximum recursion depth exceeded
2025-07-09 15:44:33,277 - sync_service - ERROR - Failed to add API log to SAP: Failed to login to SAP
2025-07-09 15:44:33,279 - sync_service - ERROR - SAP login error: maximum recursion depth exceeded while calling a Python object
2025-07-09 15:44:33,280 - sync_service - ERROR - Failed to add API log to SAP: Failed to login to SAP
2025-07-09 15:44:33,295 - sync_service - ERROR - SAP login error: maximum recursion depth exceeded while calling a Python object
2025-07-09 15:44:33,299 - sync_service - ERROR - Failed to add API log to SAP: Failed to login to SAP
2025-07-09 15:44:34,046 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'login', 'request': None, 'response': {'status': 'success'}, 'status': 'success'}
2025-07-09 15:44:34,050 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'U_API_LOG', 'request': {'method': 'POST', 'url': 'https://10.0.0.100:50000/b1s/v1/U_API_LOG', 'data': {'U_Server': 'sap', 'U_EndPoint': 'login', 'U_Request': '', 'U_Response': '{"status": "success"}', 'U_Status': 'success', 'U_Reference': '', 'U_LogDate': '2025-07-09', 'U_LogTime': '1544', 'U_Action': '', 'U_Value': ''}, 'params': None}, 'response': None, 'status': None}
2025-07-09 15:44:34,052 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'U_API_LOG', 'request': {'method': 'POST', 'url': 'https://10.0.0.100:50000/b1s/v1/U_API_LOG', 'data': {'U_Server': 'sap', 'U_EndPoint': 'U_API_LOG', 'U_Request': '{"method": "POST", "url": "https://10.0.0.100:50000/b1s/v1/U_API_LOG", "data": {"U_Server": "sap", "U_EndPoint": "login", "U_Request": "", "U_Response": "{\\"status\\": \\"success\\"}", "U_Status": "success", "U_Reference": "", "U_LogDate": "2025-07-09", "U_LogTime": "1544", "U_Action": "", "U_Value": ""}, "params": null}', 'U_Response': '', 'U_Status': 'success', 'U_Reference': '', 'U_LogDate': '2025-07-09', 'U_LogTime': '1544', 'U_Action': '', 'U_Value': ''}, 'params': None}, 'response': None, 'status': None}
2025-07-09 15:44:34,053 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'U_API_LOG', 'request': {'method': 'POST', 'url': 'https://10.0.0.100:50000/b1s/v1/U_API_LOG', 'data': {'U_Server': 'sap', 'U_EndPoint': 'U_API_LOG', 'U_Request': '{"method": "POST", "url": "https://10.0.0.100:50000/b1s/v1/U_API_LOG", "data": {"U_Server": "sap", "U_EndPoint": "U_API_LOG", "U_Request": "{\\"method\\": \\"POST\\", \\"url\\": \\"https://10.0.0.100:50000/b1s/v1/U_API_LOG\\", \\"data\\": {\\"U_Server\\": \\"sap\\", \\"U_EndPoint\\": \\"login\\", \\"U_Request\\": \\"\\", \\"U_Response\\": \\"{\\\\\\"status\\\\\\": \\\\\\"success\\\\\\"}\\", \\"U_Status\\": \\"success\\", \\"U_Reference\\": \\"\\", \\"U_LogDate\\": \\"2025-07-09\\", \\"U_LogTime\\": \\"1544\\", \\"U_Action\\": \\"\\", \\"U_Value\\": \\"\\"}, \\"params\\": null}", "U_Response": "", "U_Status": "success", "U_Reference": "", "U_LogDate": "2025-07-09", "U_LogTime": "1544", "U_Action": "", "U_Value": ""}, "params": null}', 'U_Response': '', 'U_Status': 'success', 'U_Reference': '', 'U_LogDate': '2025-07-09', 'U_LogTime': '1544', 'U_Action': '', 'U_Value': ''}, 'params': None}, 'response': None, 'status': None}
2025-07-09 15:44:34,054 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'U_API_LOG', 'request': {'method': 'POST', 'url': 'https://10.0.0.100:50000/b1s/v1/U_API_LOG', 'data': {'U_Server': 'sap', 'U_EndPoint': 'U_API_LOG', 'U_Request': '{"method": "POST", "url": "https://10.0.0.100:50000/b1s/v1/U_API_LOG", "data": {"U_Server": "sap", "U_EndPoint": "U_API_LOG", "U_Request": "{\\"method\\": \\"POST\\", \\"url\\": \\"https://10.0.0.100:50000/b1s/v1/U_API_LOG\\", \\"data\\": {\\"U_Server\\": \\"sap\\", \\"U_EndPoint\\": \\"U_API_LOG\\", \\"U_Request\\": \\"{\\\\\\"method\\\\\\": \\\\\\"POST\\\\\\", \\\\\\"url\\\\\\": \\\\\\"https://10.0.0.100:50000/b1s/v1/U_API_LOG\\\\\\", \\\\\\"data\\\\\\": {\\\\\\"U_Server\\\\\\": \\\\\\"sap\\\\\\", \\\\\\"U_EndPoint\\\\\\": \\\\\\"login\\\\\\", \\\\\\"U_Request\\\\\\": \\\\\\"\\\\\\", \\\\\\"U_Response\\\\\\": \\\\\\"{\\\\\\\\\\\\\\"status\\\\\\\\\\\\\\": \\\\\\\\\\\\\\"success\\\\\\\\\\\\\\"}\\\\\\", \\\\\\"U_Status\\\\\\": \\\\\\"success\\\\\\", \\\\\\"U_Reference\\\\\\": \\\\\\"\\\\\\", \\\\\\"U_LogDate\\\\\\": \\\\\\"2025-07-09\\\\\\", \\\\\\"U_LogTime\\\\\\": \\\\\\"1544\\\\\\", \\\\\\"U_Action\\\\\\": \\\\\\"\\\\\\", \\\\\\"U_Value\\\\\\": \\\\\\"\\\\\\"}, \\\\\\"params\\\\\\": null}\\", \\"U_Response\\": \\"\\", \\"U_Status\\": \\"success\\", \\"U_Reference\\": \\"\\", \\"U_LogDate\\": \\"2025-07-09\\", \\"U_LogTime\\": \\"1544\\", \\"U_Action\\": \\"\\", \\"U_Value\\": \\"\\"}, \\"params\\": null}", "U_Response": "", "U_Status": "success", "U_Reference": "", "U_LogDate": "2025-07-09", "U_LogTime": "1544", "U_Action": "", "U_Value": ""}, "params": null}', 'U_Response': '', 'U_Status': 'success', 'U_Reference': '', 'U_LogDate': '2025-07-09', 'U_LogTime': '1544', 'U_Action': '', 'U_Value': ''}, 'params': None}, 'response': None, 'status': None}
2025-07-09 15:44:34,055 - sync_service - ERROR - Error logging API call to SAP: maximum recursion depth exceeded while calling a Python object
2025-07-09 15:44:34,059 - sync_service - ERROR - Error logging API call to SAP: maximum recursion depth exceeded while calling a Python object
2025-07-09 15:44:34,060 - sync_service - ERROR - SAP request error: maximum recursion depth exceeded while calling a Python object
2025-07-09 15:44:34,061 - sync_service - ERROR - Error logging API call to SAP: maximum recursion depth exceeded while calling a Python object
2025-07-09 15:44:34,062 - sync_service - ERROR - Failed to add API log to SAP: SAP request error: maximum recursion depth exceeded while calling a Python object
2025-07-09 15:44:34,064 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'U_API_LOG', 'request': {'method': 'POST', 'url': 'https://10.0.0.100:50000/b1s/v1/U_API_LOG', 'data': {'U_Server': 'sap', 'U_EndPoint': 'U_API_LOG', 'U_Request': '{"method": "POST", "url": "https://10.0.0.100:50000/b1s/v1/U_API_LOG", "data": {"U_Server": "sap", "U_EndPoint": "U_API_LOG", "U_Request": "{\\"method\\": \\"POST\\", \\"url\\": \\"https://10.0.0.100:50000/b1s/v1/U_API_LOG\\", \\"data\\": {\\"U_Server\\": \\"sap\\", \\"U_EndPoint\\": \\"U_API_LOG\\", \\"U_Request\\": \\"{\\\\\\"method\\\\\\": \\\\\\"POST\\\\\\", \\\\\\"url\\\\\\": \\\\\\"https://10.0.0.100:50000/b1s/v1/U_API_LOG\\\\\\", \\\\\\"data\\\\\\": {\\\\\\"U_Server\\\\\\": \\\\\\"sap\\\\\\", \\\\\\"U_EndPoint\\\\\\": \\\\\\"login\\\\\\", \\\\\\"U_Request\\\\\\": \\\\\\"\\\\\\", \\\\\\"U_Response\\\\\\": \\\\\\"{\\\\\\\\\\\\\\"status\\\\\\\\\\\\\\": \\\\\\\\\\\\\\"success\\\\\\\\\\\\\\"}\\\\\\", \\\\\\"U_Status\\\\\\": \\\\\\"success\\\\\\", \\\\\\"U_Reference\\\\\\": \\\\\\"\\\\\\", \\\\\\"U_LogDate\\\\\\": \\\\\\"2025-07-09\\\\\\", \\\\\\"U_LogTime\\\\\\": \\\\\\"1544\\\\\\", \\\\\\"U_Action\\\\\\": \\\\\\"\\\\\\", \\\\\\"U_Value\\\\\\": \\\\\\"\\\\\\"}, \\\\\\"params\\\\\\": null}\\", \\"U_Response\\": \\"\\", \\"U_Status\\": \\"success\\", \\"U_Reference\\": \\"\\", \\"U_LogDate\\": \\"2025-07-09\\", \\"U_LogTime\\": \\"1544\\", \\"U_Action\\": \\"\\", \\"U_Value\\": \\"\\"}, \\"params\\": null}", "U_Response": "", "U_Status": "success", "U_Reference": "", "U_LogDate": "2025-07-09", "U_LogTime": "1544", "U_Action": "", "U_Value": ""}, "params": null}', 'U_Response': '', 'U_Status': 'success', 'U_Reference': '', 'U_LogDate': '2025-07-09', 'U_LogTime': '1544', 'U_Action': 'sap_post', 'U_Value': 'SAP POST request to U_API_LOG'}, 'params': None}, 'response': None, 'status': None}
2025-07-09 15:44:34,066 - sync_service - ERROR - Error logging API call to SAP: maximum recursion depth exceeded while calling a Python object
2025-07-09 15:44:34,068 - sync_service - ERROR - Error logging API call to SAP: maximum recursion depth exceeded while calling a Python object
2025-07-09 15:44:34,069 - sync_service - ERROR - SAP request error: maximum recursion depth exceeded while calling a Python object
2025-07-09 15:44:34,071 - sync_service - ERROR - Error logging API call to SAP: maximum recursion depth exceeded while calling a Python object
2025-07-09 15:44:34,071 - sync_service - ERROR - Failed to add API log to SAP: SAP request error: maximum recursion depth exceeded while calling a Python object
2025-07-09 15:44:34,076 - sync_service - ERROR - SAP request error: maximum recursion depth exceeded while calling a Python object
2025-07-09 15:44:34,077 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'U_API_LOG', 'request': {'method': 'POST', 'url': 'https://10.0.0.100:50000/b1s/v1/U_API_LOG', 'data': {'U_Server': 'sap', 'U_EndPoint': 'U_API_LOG', 'U_Request': '', 'U_Response': '{"error": "SAP request error: maximum recursion depth exceeded while calling a Python object"}', 'U_Status': 'failure', 'U_Reference': '', 'U_LogDate': '2025-07-09', 'U_LogTime': '1544', 'U_Action': 'sap_post_exception', 'U_Value': 'SAP POST request exception to U_API_LOG: maximum recursion depth exceeded while calling a Python object'}, 'params': None}, 'response': None, 'status': None}
2025-07-09 15:44:34,079 - sync_service - ERROR - Error logging API call to SAP: maximum recursion depth exceeded while calling a Python object
2025-07-09 15:44:34,080 - sync_service - ERROR - Error logging API call to SAP: maximum recursion depth exceeded while calling a Python object
2025-07-09 15:44:34,082 - sync_service - ERROR - SAP request error: maximum recursion depth exceeded while calling a Python object
2025-07-09 15:44:34,083 - sync_service - ERROR - Error logging API call to SAP: maximum recursion depth exceeded while calling a Python object
2025-07-09 15:44:34,084 - sync_service - ERROR - Failed to add API log to SAP: SAP request error: maximum recursion depth exceeded while calling a Python object
2025-07-09 15:44:34,084 - sync_service - ERROR - Failed to add API log to SAP: SAP request error: maximum recursion depth exceeded while calling a Python object
2025-07-09 15:44:34,085 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'U_API_LOG', 'request': {'method': 'POST', 'url': 'https://10.0.0.100:50000/b1s/v1/U_API_LOG', 'data': {'U_Server': 'sap', 'U_EndPoint': 'U_API_LOG', 'U_Request': '{"method": "POST", "url": "https://10.0.0.100:50000/b1s/v1/U_API_LOG", "data": {"U_Server": "sap", "U_EndPoint": "U_API_LOG", "U_Request": "{\\"method\\": \\"POST\\", \\"url\\": \\"https://10.0.0.100:50000/b1s/v1/U_API_LOG\\", \\"data\\": {\\"U_Server\\": \\"sap\\", \\"U_EndPoint\\": \\"login\\", \\"U_Request\\": \\"\\", \\"U_Response\\": \\"{\\\\\\"status\\\\\\": \\\\\\"success\\\\\\"}\\", \\"U_Status\\": \\"success\\", \\"U_Reference\\": \\"\\", \\"U_LogDate\\": \\"2025-07-09\\", \\"U_LogTime\\": \\"1544\\", \\"U_Action\\": \\"\\", \\"U_Value\\": \\"\\"}, \\"params\\": null}", "U_Response": "", "U_Status": "success", "U_Reference": "", "U_LogDate": "2025-07-09", "U_LogTime": "1544", "U_Action": "", "U_Value": ""}, "params": null}', 'U_Response': '', 'U_Status': 'success', 'U_Reference': '', 'U_LogDate': '2025-07-09', 'U_LogTime': '1544', 'U_Action': 'sap_post', 'U_Value': 'SAP POST request to U_API_LOG'}, 'params': None}, 'response': None, 'status': None}
2025-07-09 15:44:34,087 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'U_API_LOG', 'request': {'method': 'POST', 'url': 'https://10.0.0.100:50000/b1s/v1/U_API_LOG', 'data': {'U_Server': 'sap', 'U_EndPoint': 'U_API_LOG', 'U_Request': '{"method": "POST", "url": "https://10.0.0.100:50000/b1s/v1/U_API_LOG", "data": {"U_Server": "sap", "U_EndPoint": "U_API_LOG", "U_Request": "{\\"method\\": \\"POST\\", \\"url\\": \\"https://10.0.0.100:50000/b1s/v1/U_API_LOG\\", \\"data\\": {\\"U_Server\\": \\"sap\\", \\"U_EndPoint\\": \\"U_API_LOG\\", \\"U_Request\\": \\"{\\\\\\"method\\\\\\": \\\\\\"POST\\\\\\", \\\\\\"url\\\\\\": \\\\\\"https://10.0.0.100:50000/b1s/v1/U_API_LOG\\\\\\", \\\\\\"data\\\\\\": {\\\\\\"U_Server\\\\\\": \\\\\\"sap\\\\\\", \\\\\\"U_EndPoint\\\\\\": \\\\\\"login\\\\\\", \\\\\\"U_Request\\\\\\": \\\\\\"\\\\\\", \\\\\\"U_Response\\\\\\": \\\\\\"{\\\\\\\\\\\\\\"status\\\\\\\\\\\\\\": \\\\\\\\\\\\\\"success\\\\\\\\\\\\\\"}\\\\\\", \\\\\\"U_Status\\\\\\": \\\\\\"success\\\\\\", \\\\\\"U_Reference\\\\\\": \\\\\\"\\\\\\", \\\\\\"U_LogDate\\\\\\": \\\\\\"2025-07-09\\\\\\", \\\\\\"U_LogTime\\\\\\": \\\\\\"1544\\\\\\", \\\\\\"U_Action\\\\\\": \\\\\\"\\\\\\", \\\\\\"U_Value\\\\\\": \\\\\\"\\\\\\"}, \\\\\\"params\\\\\\": null}\\", \\"U_Response\\": \\"\\", \\"U_Status\\": \\"success\\", \\"U_Reference\\": \\"\\", \\"U_LogDate\\": \\"2025-07-09\\", \\"U_LogTime\\": \\"1544\\", \\"U_Action\\": \\"\\", \\"U_Value\\": \\"\\"}, \\"params\\": null}", "U_Response": "", "U_Status": "success", "U_Reference": "", "U_LogDate": "2025-07-09", "U_LogTime": "1544", "U_Action": "sap_post", "U_Value": "SAP POST request to U_API_LOG"}, "params": null}', 'U_Response': '', 'U_Status': 'success', 'U_Reference': '', 'U_LogDate': '2025-07-09', 'U_LogTime': '1544', 'U_Action': '', 'U_Value': ''}, 'params': None}, 'response': None, 'status': None}
2025-07-09 15:44:34,088 - sync_service - ERROR - Error logging API call to SAP: maximum recursion depth exceeded while calling a Python object
2025-07-09 15:44:34,091 - sync_service - ERROR - Error logging API call to SAP: maximum recursion depth exceeded while calling a Python object
2025-07-09 15:44:34,093 - sync_service - ERROR - SAP request error: maximum recursion depth exceeded while calling a Python object
2025-07-09 15:44:34,095 - sync_service - ERROR - Error logging API call to SAP: maximum recursion depth exceeded while calling a Python object
2025-07-09 15:44:34,095 - sync_service - ERROR - Failed to add API log to SAP: SAP request error: maximum recursion depth exceeded while calling a Python object
2025-07-09 15:44:34,096 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'U_API_LOG', 'request': {'method': 'POST', 'url': 'https://10.0.0.100:50000/b1s/v1/U_API_LOG', 'data': {'U_Server': 'sap', 'U_EndPoint': 'U_API_LOG', 'U_Request': '{"method": "POST", "url": "https://10.0.0.100:50000/b1s/v1/U_API_LOG", "data": {"U_Server": "sap", "U_EndPoint": "U_API_LOG", "U_Request": "{\\"method\\": \\"POST\\", \\"url\\": \\"https://10.0.0.100:50000/b1s/v1/U_API_LOG\\", \\"data\\": {\\"U_Server\\": \\"sap\\", \\"U_EndPoint\\": \\"U_API_LOG\\", \\"U_Request\\": \\"{\\\\\\"method\\\\\\": \\\\\\"POST\\\\\\", \\\\\\"url\\\\\\": \\\\\\"https://10.0.0.100:50000/b1s/v1/U_API_LOG\\\\\\", \\\\\\"data\\\\\\": {\\\\\\"U_Server\\\\\\": \\\\\\"sap\\\\\\", \\\\\\"U_EndPoint\\\\\\": \\\\\\"login\\\\\\", \\\\\\"U_Request\\\\\\": \\\\\\"\\\\\\", \\\\\\"U_Response\\\\\\": \\\\\\"{\\\\\\\\\\\\\\"status\\\\\\\\\\\\\\": \\\\\\\\\\\\\\"success\\\\\\\\\\\\\\"}\\\\\\", \\\\\\"U_Status\\\\\\": \\\\\\"success\\\\\\", \\\\\\"U_Reference\\\\\\": \\\\\\"\\\\\\", \\\\\\"U_LogDate\\\\\\": \\\\\\"2025-07-09\\\\\\", \\\\\\"U_LogTime\\\\\\": \\\\\\"1544\\\\\\", \\\\\\"U_Action\\\\\\": \\\\\\"\\\\\\", \\\\\\"U_Value\\\\\\": \\\\\\"\\\\\\"}, \\\\\\"params\\\\\\": null}\\", \\"U_Response\\": \\"\\", \\"U_Status\\": \\"success\\", \\"U_Reference\\": \\"\\", \\"U_LogDate\\": \\"2025-07-09\\", \\"U_LogTime\\": \\"1544\\", \\"U_Action\\": \\"\\", \\"U_Value\\": \\"\\"}, \\"params\\": null}", "U_Response": "", "U_Status": "success", "U_Reference": "", "U_LogDate": "2025-07-09", "U_LogTime": "1544", "U_Action": "sap_post", "U_Value": "SAP POST request to U_API_LOG"}, "params": null}', 'U_Response': '', 'U_Status': 'success', 'U_Reference': '', 'U_LogDate': '2025-07-09', 'U_LogTime': '1544', 'U_Action': 'sap_post', 'U_Value': 'SAP POST request to U_API_LOG'}, 'params': None}, 'response': None, 'status': None}
2025-07-09 15:44:34,100 - sync_service - ERROR - Error logging API call to SAP: maximum recursion depth exceeded while calling a Python object
2025-07-09 15:44:34,103 - sync_service - ERROR - Error logging API call to SAP: maximum recursion depth exceeded while calling a Python object
2025-07-09 15:44:34,105 - sync_service - ERROR - SAP request error: maximum recursion depth exceeded while calling a Python object
2025-07-09 15:44:34,106 - sync_service - ERROR - Error logging API call to SAP: maximum recursion depth exceeded while calling a Python object
2025-07-09 15:44:34,106 - sync_service - ERROR - Failed to add API log to SAP: SAP request error: maximum recursion depth exceeded while calling a Python object
2025-07-09 15:44:34,111 - sync_service - ERROR - SAP request error: maximum recursion depth exceeded while calling a Python object
2025-07-09 15:44:34,112 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'U_API_LOG', 'request': {'method': 'POST', 'url': 'https://10.0.0.100:50000/b1s/v1/U_API_LOG', 'data': {'U_Server': 'sap', 'U_EndPoint': 'U_API_LOG', 'U_Request': '', 'U_Response': '{"error": "SAP request error: maximum recursion depth exceeded while calling a Python object"}', 'U_Status': 'failure', 'U_Reference': '', 'U_LogDate': '2025-07-09', 'U_LogTime': '1544', 'U_Action': 'sap_post_exception', 'U_Value': 'SAP POST request exception to U_API_LOG: maximum recursion depth exceeded while calling a Python object'}, 'params': None}, 'response': None, 'status': None}
2025-07-09 15:44:34,113 - sync_service - ERROR - Error logging API call to SAP: maximum recursion depth exceeded while calling a Python object
2025-07-09 15:44:34,114 - sync_service - ERROR - Error logging API call to SAP: maximum recursion depth exceeded while calling a Python object
2025-07-09 15:44:34,116 - sync_service - ERROR - SAP request error: maximum recursion depth exceeded while calling a Python object
2025-07-09 15:44:34,118 - sync_service - ERROR - Error logging API call to SAP: maximum recursion depth exceeded while calling a Python object
2025-07-09 15:44:34,118 - sync_service - ERROR - Failed to add API log to SAP: SAP request error: maximum recursion depth exceeded while calling a Python object
2025-07-09 15:44:34,120 - sync_service - ERROR - Failed to add API log to SAP: SAP request error: maximum recursion depth exceeded while calling a Python object
2025-07-09 15:44:34,393 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'U_API_LOG', 'request': None, 'response': None, 'status': 'success'}
2025-07-09 15:44:34,394 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'U_API_LOG', 'request': {'method': 'POST', 'url': 'https://10.0.0.100:50000/b1s/v1/U_API_LOG', 'data': {'U_Server': 'sap', 'U_EndPoint': 'U_API_LOG', 'U_Request': '', 'U_Response': '', 'U_Status': 'success', 'U_Reference': '', 'U_LogDate': '2025-07-09', 'U_LogTime': '1544', 'U_Action': '', 'U_Value': ''}, 'params': None}, 'response': None, 'status': None}
2025-07-09 15:44:34,395 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'U_API_LOG', 'request': {'method': 'POST', 'url': 'https://10.0.0.100:50000/b1s/v1/U_API_LOG', 'data': {'U_Server': 'sap', 'U_EndPoint': 'U_API_LOG', 'U_Request': '{"method": "POST", "url": "https://10.0.0.100:50000/b1s/v1/U_API_LOG", "data": {"U_Server": "sap", "U_EndPoint": "U_API_LOG", "U_Request": "", "U_Response": "", "U_Status": "success", "U_Reference": "", "U_LogDate": "2025-07-09", "U_LogTime": "1544", "U_Action": "", "U_Value": ""}, "params": null}', 'U_Response': '', 'U_Status': 'success', 'U_Reference': '', 'U_LogDate': '2025-07-09', 'U_LogTime': '1544', 'U_Action': '', 'U_Value': ''}, 'params': None}, 'response': None, 'status': None}
2025-07-09 15:44:34,396 - sync_service - ERROR - Error logging API call to SAP: maximum recursion depth exceeded while calling a Python object
2025-07-09 15:44:34,398 - sync_service - ERROR - Error logging API call to SAP: maximum recursion depth exceeded while calling a Python object
2025-07-09 15:44:34,399 - sync_service - ERROR - SAP request error: maximum recursion depth exceeded while calling a Python object
2025-07-09 15:44:34,402 - sync_service - ERROR - Error logging API call to SAP: maximum recursion depth exceeded while calling a Python object
2025-07-09 15:44:34,403 - sync_service - ERROR - Failed to add API log to SAP: SAP request error: maximum recursion depth exceeded while calling a Python object
2025-07-09 15:44:34,404 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'U_API_LOG', 'request': {'method': 'POST', 'url': 'https://10.0.0.100:50000/b1s/v1/U_API_LOG', 'data': {'U_Server': 'sap', 'U_EndPoint': 'U_API_LOG', 'U_Request': '{"method": "POST", "url": "https://10.0.0.100:50000/b1s/v1/U_API_LOG", "data": {"U_Server": "sap", "U_EndPoint": "U_API_LOG", "U_Request": "", "U_Response": "", "U_Status": "success", "U_Reference": "", "U_LogDate": "2025-07-09", "U_LogTime": "1544", "U_Action": "", "U_Value": ""}, "params": null}', 'U_Response': '', 'U_Status': 'success', 'U_Reference': '', 'U_LogDate': '2025-07-09', 'U_LogTime': '1544', 'U_Action': 'sap_post', 'U_Value': 'SAP POST request to U_API_LOG'}, 'params': None}, 'response': None, 'status': None}
2025-07-09 15:44:34,407 - sync_service - ERROR - Error logging API call to SAP: maximum recursion depth exceeded while calling a Python object
2025-07-09 15:44:34,409 - sync_service - ERROR - Error logging API call to SAP: maximum recursion depth exceeded while calling a Python object
2025-07-09 15:44:34,410 - sync_service - ERROR - SAP request error: maximum recursion depth exceeded while calling a Python object
2025-07-09 15:44:34,411 - sync_service - ERROR - Error logging API call to SAP: maximum recursion depth exceeded while calling a Python object
2025-07-09 15:44:34,411 - sync_service - ERROR - Failed to add API log to SAP: SAP request error: maximum recursion depth exceeded while calling a Python object
2025-07-09 15:44:34,416 - sync_service - ERROR - SAP request error: maximum recursion depth exceeded while calling a Python object
2025-07-09 15:44:34,419 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'U_API_LOG', 'request': {'method': 'POST', 'url': 'https://10.0.0.100:50000/b1s/v1/U_API_LOG', 'data': {'U_Server': 'sap', 'U_EndPoint': 'U_API_LOG', 'U_Request': '', 'U_Response': '{"error": "SAP request error: maximum recursion depth exceeded while calling a Python object"}', 'U_Status': 'failure', 'U_Reference': '', 'U_LogDate': '2025-07-09', 'U_LogTime': '1544', 'U_Action': 'sap_post_exception', 'U_Value': 'SAP POST request exception to U_API_LOG: maximum recursion depth exceeded while calling a Python object'}, 'params': None}, 'response': None, 'status': None}
2025-07-09 15:44:34,421 - sync_service - ERROR - Error logging API call to SAP: maximum recursion depth exceeded while calling a Python object
2025-07-09 15:44:34,423 - sync_service - ERROR - Error logging API call to SAP: maximum recursion depth exceeded while calling a Python object
2025-07-09 15:44:34,425 - sync_service - ERROR - SAP request error: maximum recursion depth exceeded while calling a Python object
2025-07-09 15:44:34,427 - sync_service - ERROR - Error logging API call to SAP: maximum recursion depth exceeded while calling a Python object
2025-07-09 15:44:34,427 - sync_service - ERROR - Failed to add API log to SAP: SAP request error: maximum recursion depth exceeded while calling a Python object
2025-07-09 15:44:34,427 - sync_service - ERROR - Failed to add API log to SAP: SAP request error: maximum recursion depth exceeded while calling a Python object
2025-07-09 15:44:34,428 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'U_API_LOG', 'request': {'method': 'POST', 'url': 'https://10.0.0.100:50000/b1s/v1/U_API_LOG', 'data': {'U_Server': 'sap', 'U_EndPoint': 'U_API_LOG', 'U_Request': '', 'U_Response': '', 'U_Status': 'success', 'U_Reference': '', 'U_LogDate': '2025-07-09', 'U_LogTime': '1544', 'U_Action': 'sap_post_success', 'U_Value': 'SAP POST request successful to U_API_LOG'}, 'params': None}, 'response': None, 'status': None}
2025-07-09 15:44:34,428 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'U_API_LOG', 'request': {'method': 'POST', 'url': 'https://10.0.0.100:50000/b1s/v1/U_API_LOG', 'data': {'U_Server': 'sap', 'U_EndPoint': 'U_API_LOG', 'U_Request': '{"method": "POST", "url": "https://10.0.0.100:50000/b1s/v1/U_API_LOG", "data": {"U_Server": "sap", "U_EndPoint": "U_API_LOG", "U_Request": "", "U_Response": "", "U_Status": "success", "U_Reference": "", "U_LogDate": "2025-07-09", "U_LogTime": "1544", "U_Action": "sap_post_success", "U_Value": "SAP POST request successful to U_API_LOG"}, "params": null}', 'U_Response': '', 'U_Status': 'success', 'U_Reference': '', 'U_LogDate': '2025-07-09', 'U_LogTime': '1544', 'U_Action': '', 'U_Value': ''}, 'params': None}, 'response': None, 'status': None}
2025-07-09 15:44:34,430 - sync_service - ERROR - Error logging API call to SAP: maximum recursion depth exceeded while calling a Python object
2025-07-09 15:44:34,432 - sync_service - ERROR - Error logging API call to SAP: maximum recursion depth exceeded while calling a Python object
2025-07-09 15:44:34,435 - sync_service - ERROR - SAP request error: maximum recursion depth exceeded while calling a Python object
2025-07-09 15:44:34,436 - sync_service - ERROR - Error logging API call to SAP: maximum recursion depth exceeded while calling a Python object
2025-07-09 15:44:34,438 - sync_service - ERROR - Failed to add API log to SAP: SAP request error: maximum recursion depth exceeded while calling a Python object
2025-07-09 15:44:34,438 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'U_API_LOG', 'request': {'method': 'POST', 'url': 'https://10.0.0.100:50000/b1s/v1/U_API_LOG', 'data': {'U_Server': 'sap', 'U_EndPoint': 'U_API_LOG', 'U_Request': '{"method": "POST", "url": "https://10.0.0.100:50000/b1s/v1/U_API_LOG", "data": {"U_Server": "sap", "U_EndPoint": "U_API_LOG", "U_Request": "", "U_Response": "", "U_Status": "success", "U_Reference": "", "U_LogDate": "2025-07-09", "U_LogTime": "1544", "U_Action": "sap_post_success", "U_Value": "SAP POST request successful to U_API_LOG"}, "params": null}', 'U_Response': '', 'U_Status': 'success', 'U_Reference': '', 'U_LogDate': '2025-07-09', 'U_LogTime': '1544', 'U_Action': 'sap_post', 'U_Value': 'SAP POST request to U_API_LOG'}, 'params': None}, 'response': None, 'status': None}
2025-07-09 15:44:34,443 - sync_service - ERROR - Error logging API call to SAP: maximum recursion depth exceeded while calling a Python object
2025-07-09 15:44:34,444 - sync_service - ERROR - Error logging API call to SAP: maximum recursion depth exceeded while calling a Python object
2025-07-09 15:44:34,446 - sync_service - ERROR - SAP request error: maximum recursion depth exceeded while calling a Python object
2025-07-09 15:44:34,448 - sync_service - ERROR - Error logging API call to SAP: maximum recursion depth exceeded while calling a Python object
2025-07-09 15:44:34,449 - sync_service - ERROR - Failed to add API log to SAP: SAP request error: maximum recursion depth exceeded while calling a Python object
2025-07-09 15:44:34,454 - sync_service - ERROR - SAP request error: maximum recursion depth exceeded while calling a Python object
2025-07-09 15:44:34,455 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'U_API_LOG', 'request': {'method': 'POST', 'url': 'https://10.0.0.100:50000/b1s/v1/U_API_LOG', 'data': {'U_Server': 'sap', 'U_EndPoint': 'U_API_LOG', 'U_Request': '', 'U_Response': '{"error": "SAP request error: maximum recursion depth exceeded while calling a Python object"}', 'U_Status': 'failure', 'U_Reference': '', 'U_LogDate': '2025-07-09', 'U_LogTime': '1544', 'U_Action': 'sap_post_exception', 'U_Value': 'SAP POST request exception to U_API_LOG: maximum recursion depth exceeded while calling a Python object'}, 'params': None}, 'response': None, 'status': None}
2025-07-09 15:44:34,459 - sync_service - ERROR - Error logging API call to SAP: maximum recursion depth exceeded while calling a Python object
2025-07-09 15:44:34,460 - sync_service - ERROR - Error logging API call to SAP: maximum recursion depth exceeded while calling a Python object
2025-07-09 15:44:34,461 - sync_service - ERROR - SAP request error: maximum recursion depth exceeded while calling a Python object
2025-07-09 15:44:34,462 - sync_service - ERROR - Error logging API call to SAP: maximum recursion depth exceeded while calling a Python object
2025-07-09 15:44:34,463 - sync_service - ERROR - Failed to add API log to SAP: SAP request error: maximum recursion depth exceeded while calling a Python object
2025-07-09 15:44:34,464 - sync_service - ERROR - Failed to add API log to SAP: SAP request error: maximum recursion depth exceeded while calling a Python object
2025-07-09 15:44:34,467 - sync_service - INFO - API log added to SAP: sap - U_API_LOG - success
2025-07-09 15:44:34,469 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'U_API_LOG', 'request': {'method': 'POST', 'url': 'https://10.0.0.100:50000/b1s/v1/U_API_LOG', 'data': {'U_Server': 'sap', 'U_EndPoint': 'U_API_LOG', 'U_Request': '{"method": "POST", "url": "https://10.0.0.100:50000/b1s/v1/U_API_LOG", "data": {"U_Server": "sap", "U_EndPoint": "login", "U_Request": "", "U_Response": "{\\"status\\": \\"success\\"}", "U_Status": "success", "U_Reference": "", "U_LogDate": "2025-07-09", "U_LogTime": "1544", "U_Action": "", "U_Value": ""}, "params": null}', 'U_Response': '', 'U_Status': 'success', 'U_Reference': '', 'U_LogDate': '2025-07-09', 'U_LogTime': '1544', 'U_Action': 'sap_post', 'U_Value': 'SAP POST request to U_API_LOG'}, 'params': None}, 'response': None, 'status': None}
2025-07-09 15:44:34,470 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'U_API_LOG', 'request': {'method': 'POST', 'url': 'https://10.0.0.100:50000/b1s/v1/U_API_LOG', 'data': {'U_Server': 'sap', 'U_EndPoint': 'U_API_LOG', 'U_Request': '{"method": "POST", "url": "https://10.0.0.100:50000/b1s/v1/U_API_LOG", "data": {"U_Server": "sap", "U_EndPoint": "U_API_LOG", "U_Request": "{\\"method\\": \\"POST\\", \\"url\\": \\"https://10.0.0.100:50000/b1s/v1/U_API_LOG\\", \\"data\\": {\\"U_Server\\": \\"sap\\", \\"U_EndPoint\\": \\"login\\", \\"U_Request\\": \\"\\", \\"U_Response\\": \\"{\\\\\\"status\\\\\\": \\\\\\"success\\\\\\"}\\", \\"U_Status\\": \\"success\\", \\"U_Reference\\": \\"\\", \\"U_LogDate\\": \\"2025-07-09\\", \\"U_LogTime\\": \\"1544\\", \\"U_Action\\": \\"\\", \\"U_Value\\": \\"\\"}, \\"params\\": null}", "U_Response": "", "U_Status": "success", "U_Reference": "", "U_LogDate": "2025-07-09", "U_LogTime": "1544", "U_Action": "sap_post", "U_Value": "SAP POST request to U_API_LOG"}, "params": null}', 'U_Response': '', 'U_Status': 'success', 'U_Reference': '', 'U_LogDate': '2025-07-09', 'U_LogTime': '1544', 'U_Action': '', 'U_Value': ''}, 'params': None}, 'response': None, 'status': None}
2025-07-09 15:44:34,471 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'U_API_LOG', 'request': {'method': 'POST', 'url': 'https://10.0.0.100:50000/b1s/v1/U_API_LOG', 'data': {'U_Server': 'sap', 'U_EndPoint': 'U_API_LOG', 'U_Request': '{"method": "POST", "url": "https://10.0.0.100:50000/b1s/v1/U_API_LOG", "data": {"U_Server": "sap", "U_EndPoint": "U_API_LOG", "U_Request": "{\\"method\\": \\"POST\\", \\"url\\": \\"https://10.0.0.100:50000/b1s/v1/U_API_LOG\\", \\"data\\": {\\"U_Server\\": \\"sap\\", \\"U_EndPoint\\": \\"U_API_LOG\\", \\"U_Request\\": \\"{\\\\\\"method\\\\\\": \\\\\\"POST\\\\\\", \\\\\\"url\\\\\\": \\\\\\"https://10.0.0.100:50000/b1s/v1/U_API_LOG\\\\\\", \\\\\\"data\\\\\\": {\\\\\\"U_Server\\\\\\": \\\\\\"sap\\\\\\", \\\\\\"U_EndPoint\\\\\\": \\\\\\"login\\\\\\", \\\\\\"U_Request\\\\\\": \\\\\\"\\\\\\", \\\\\\"U_Response\\\\\\": \\\\\\"{\\\\\\\\\\\\\\"status\\\\\\\\\\\\\\": \\\\\\\\\\\\\\"success\\\\\\\\\\\\\\"}\\\\\\", \\\\\\"U_Status\\\\\\": \\\\\\"success\\\\\\", \\\\\\"U_Reference\\\\\\": \\\\\\"\\\\\\", \\\\\\"U_LogDate\\\\\\": \\\\\\"2025-07-09\\\\\\", \\\\\\"U_LogTime\\\\\\": \\\\\\"1544\\\\\\", \\\\\\"U_Action\\\\\\": \\\\\\"\\\\\\", \\\\\\"U_Value\\\\\\": \\\\\\"\\\\\\"}, \\\\\\"params\\\\\\": null}\\", \\"U_Response\\": \\"\\", \\"U_Status\\": \\"success\\", \\"U_Reference\\": \\"\\", \\"U_LogDate\\": \\"2025-07-09\\", \\"U_LogTime\\": \\"1544\\", \\"U_Action\\": \\"sap_post\\", \\"U_Value\\": \\"SAP POST request to U_API_LOG\\"}, \\"params\\": null}", "U_Response": "", "U_Status": "success", "U_Reference": "", "U_LogDate": "2025-07-09", "U_LogTime": "1544", "U_Action": "", "U_Value": ""}, "params": null}', 'U_Response': '', 'U_Status': 'success', 'U_Reference': '', 'U_LogDate': '2025-07-09', 'U_LogTime': '1544', 'U_Action': '', 'U_Value': ''}, 'params': None}, 'response': None, 'status': None}
2025-07-09 15:44:34,473 - sync_service - ERROR - Error logging API call to SAP: maximum recursion depth exceeded while calling a Python object
2025-07-09 15:44:34,478 - sync_service - ERROR - Error logging API call to SAP: maximum recursion depth exceeded while calling a Python object
2025-07-09 15:44:34,479 - sync_service - ERROR - SAP request error: maximum recursion depth exceeded while calling a Python object
2025-07-09 15:44:34,482 - sync_service - ERROR - Error logging API call to SAP: maximum recursion depth exceeded while calling a Python object
2025-07-09 15:44:34,484 - sync_service - ERROR - Failed to add API log to SAP: SAP request error: maximum recursion depth exceeded while calling a Python object
2025-07-09 15:44:34,486 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'U_API_LOG', 'request': {'method': 'POST', 'url': 'https://10.0.0.100:50000/b1s/v1/U_API_LOG', 'data': {'U_Server': 'sap', 'U_EndPoint': 'U_API_LOG', 'U_Request': '{"method": "POST", "url": "https://10.0.0.100:50000/b1s/v1/U_API_LOG", "data": {"U_Server": "sap", "U_EndPoint": "U_API_LOG", "U_Request": "{\\"method\\": \\"POST\\", \\"url\\": \\"https://10.0.0.100:50000/b1s/v1/U_API_LOG\\", \\"data\\": {\\"U_Server\\": \\"sap\\", \\"U_EndPoint\\": \\"U_API_LOG\\", \\"U_Request\\": \\"{\\\\\\"method\\\\\\": \\\\\\"POST\\\\\\", \\\\\\"url\\\\\\": \\\\\\"https://10.0.0.100:50000/b1s/v1/U_API_LOG\\\\\\", \\\\\\"data\\\\\\": {\\\\\\"U_Server\\\\\\": \\\\\\"sap\\\\\\", \\\\\\"U_EndPoint\\\\\\": \\\\\\"login\\\\\\", \\\\\\"U_Request\\\\\\": \\\\\\"\\\\\\", \\\\\\"U_Response\\\\\\": \\\\\\"{\\\\\\\\\\\\\\"status\\\\\\\\\\\\\\": \\\\\\\\\\\\\\"success\\\\\\\\\\\\\\"}\\\\\\", \\\\\\"U_Status\\\\\\": \\\\\\"success\\\\\\", \\\\\\"U_Reference\\\\\\": \\\\\\"\\\\\\", \\\\\\"U_LogDate\\\\\\": \\\\\\"2025-07-09\\\\\\", \\\\\\"U_LogTime\\\\\\": \\\\\\"1544\\\\\\", \\\\\\"U_Action\\\\\\": \\\\\\"\\\\\\", \\\\\\"U_Value\\\\\\": \\\\\\"\\\\\\"}, \\\\\\"params\\\\\\": null}\\", \\"U_Response\\": \\"\\", \\"U_Status\\": \\"success\\", \\"U_Reference\\": \\"\\", \\"U_LogDate\\": \\"2025-07-09\\", \\"U_LogTime\\": \\"1544\\", \\"U_Action\\": \\"sap_post\\", \\"U_Value\\": \\"SAP POST request to U_API_LOG\\"}, \\"params\\": null}", "U_Response": "", "U_Status": "success", "U_Reference": "", "U_LogDate": "2025-07-09", "U_LogTime": "1544", "U_Action": "", "U_Value": ""}, "params": null}', 'U_Response': '', 'U_Status': 'success', 'U_Reference': '', 'U_LogDate': '2025-07-09', 'U_LogTime': '1544', 'U_Action': 'sap_post', 'U_Value': 'SAP POST request to U_API_LOG'}, 'params': None}, 'response': None, 'status': None}
2025-07-09 15:44:34,488 - sync_service - ERROR - Error logging API call to SAP: maximum recursion depth exceeded while calling a Python object
2025-07-09 15:44:34,489 - sync_service - ERROR - Error logging API call to SAP: maximum recursion depth exceeded while calling a Python object
2025-07-09 15:44:34,492 - sync_service - ERROR - SAP request error: maximum recursion depth exceeded while calling a Python object
2025-07-09 15:44:34,493 - sync_service - ERROR - Error logging API call to SAP: maximum recursion depth exceeded while calling a Python object
2025-07-09 15:44:34,494 - sync_service - ERROR - Failed to add API log to SAP: SAP request error: maximum recursion depth exceeded while calling a Python object
2025-07-09 15:44:34,497 - sync_service - ERROR - SAP request error: maximum recursion depth exceeded while calling a Python object
2025-07-09 15:44:34,499 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'U_API_LOG', 'request': {'method': 'POST', 'url': 'https://10.0.0.100:50000/b1s/v1/U_API_LOG', 'data': {'U_Server': 'sap', 'U_EndPoint': 'U_API_LOG', 'U_Request': '', 'U_Response': '{"error": "SAP request error: maximum recursion depth exceeded while calling a Python object"}', 'U_Status': 'failure', 'U_Reference': '', 'U_LogDate': '2025-07-09', 'U_LogTime': '1544', 'U_Action': 'sap_post_exception', 'U_Value': 'SAP POST request exception to U_API_LOG: maximum recursion depth exceeded while calling a Python object'}, 'params': None}, 'response': None, 'status': None}
2025-07-09 15:44:34,503 - sync_service - ERROR - Error logging API call to SAP: maximum recursion depth exceeded while calling a Python object
2025-07-09 15:44:34,505 - sync_service - ERROR - Error logging API call to SAP: maximum recursion depth exceeded while calling a Python object
2025-07-09 15:44:34,506 - sync_service - ERROR - SAP request error: maximum recursion depth exceeded while calling a Python object
2025-07-09 15:44:34,511 - sync_service - ERROR - Error logging API call to SAP: maximum recursion depth exceeded while calling a Python object
2025-07-09 15:44:34,511 - sync_service - ERROR - Failed to add API log to SAP: SAP request error: maximum recursion depth exceeded while calling a Python object
2025-07-09 15:44:34,512 - sync_service - ERROR - Failed to add API log to SAP: SAP request error: maximum recursion depth exceeded while calling a Python object
2025-07-09 15:44:34,513 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'U_API_LOG', 'request': {'method': 'POST', 'url': 'https://10.0.0.100:50000/b1s/v1/U_API_LOG', 'data': {'U_Server': 'sap', 'U_EndPoint': 'U_API_LOG', 'U_Request': '{"method": "POST", "url": "https://10.0.0.100:50000/b1s/v1/U_API_LOG", "data": {"U_Server": "sap", "U_EndPoint": "U_API_LOG", "U_Request": "{\\"method\\": \\"POST\\", \\"url\\": \\"https://10.0.0.100:50000/b1s/v1/U_API_LOG\\", \\"data\\": {\\"U_Server\\": \\"sap\\", \\"U_EndPoint\\": \\"login\\", \\"U_Request\\": \\"\\", \\"U_Response\\": \\"{\\\\\\"status\\\\\\": \\\\\\"success\\\\\\"}\\", \\"U_Status\\": \\"success\\", \\"U_Reference\\": \\"\\", \\"U_LogDate\\": \\"2025-07-09\\", \\"U_LogTime\\": \\"1544\\", \\"U_Action\\": \\"\\", \\"U_Value\\": \\"\\"}, \\"params\\": null}", "U_Response": "", "U_Status": "success", "U_Reference": "", "U_LogDate": "2025-07-09", "U_LogTime": "1544", "U_Action": "sap_post", "U_Value": "SAP POST request to U_API_LOG"}, "params": null}', 'U_Response': '', 'U_Status': 'success', 'U_Reference': '', 'U_LogDate': '2025-07-09', 'U_LogTime': '1544', 'U_Action': 'sap_post', 'U_Value': 'SAP POST request to U_API_LOG'}, 'params': None}, 'response': None, 'status': None}
2025-07-09 15:44:34,515 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'U_API_LOG', 'request': {'method': 'POST', 'url': 'https://10.0.0.100:50000/b1s/v1/U_API_LOG', 'data': {'U_Server': 'sap', 'U_EndPoint': 'U_API_LOG', 'U_Request': '{"method": "POST", "url": "https://10.0.0.100:50000/b1s/v1/U_API_LOG", "data": {"U_Server": "sap", "U_EndPoint": "U_API_LOG", "U_Request": "{\\"method\\": \\"POST\\", \\"url\\": \\"https://10.0.0.100:50000/b1s/v1/U_API_LOG\\", \\"data\\": {\\"U_Server\\": \\"sap\\", \\"U_EndPoint\\": \\"U_API_LOG\\", \\"U_Request\\": \\"{\\\\\\"method\\\\\\": \\\\\\"POST\\\\\\", \\\\\\"url\\\\\\": \\\\\\"https://10.0.0.100:50000/b1s/v1/U_API_LOG\\\\\\", \\\\\\"data\\\\\\": {\\\\\\"U_Server\\\\\\": \\\\\\"sap\\\\\\", \\\\\\"U_EndPoint\\\\\\": \\\\\\"login\\\\\\", \\\\\\"U_Request\\\\\\": \\\\\\"\\\\\\", \\\\\\"U_Response\\\\\\": \\\\\\"{\\\\\\\\\\\\\\"status\\\\\\\\\\\\\\": \\\\\\\\\\\\\\"success\\\\\\\\\\\\\\"}\\\\\\", \\\\\\"U_Status\\\\\\": \\\\\\"success\\\\\\", \\\\\\"U_Reference\\\\\\": \\\\\\"\\\\\\", \\\\\\"U_LogDate\\\\\\": \\\\\\"2025-07-09\\\\\\", \\\\\\"U_LogTime\\\\\\": \\\\\\"1544\\\\\\", \\\\\\"U_Action\\\\\\": \\\\\\"\\\\\\", \\\\\\"U_Value\\\\\\": \\\\\\"\\\\\\"}, \\\\\\"params\\\\\\": null}\\", \\"U_Response\\": \\"\\", \\"U_Status\\": \\"success\\", \\"U_Reference\\": \\"\\", \\"U_LogDate\\": \\"2025-07-09\\", \\"U_LogTime\\": \\"1544\\", \\"U_Action\\": \\"sap_post\\", \\"U_Value\\": \\"SAP POST request to U_API_LOG\\"}, \\"params\\": null}", "U_Response": "", "U_Status": "success", "U_Reference": "", "U_LogDate": "2025-07-09", "U_LogTime": "1544", "U_Action": "sap_post", "U_Value": "SAP POST request to U_API_LOG"}, "params": null}', 'U_Response': '', 'U_Status': 'success', 'U_Reference': '', 'U_LogDate': '2025-07-09', 'U_LogTime': '1544', 'U_Action': '', 'U_Value': ''}, 'params': None}, 'response': None, 'status': None}
2025-07-09 15:44:34,516 - sync_service - ERROR - Error logging API call to SAP: maximum recursion depth exceeded while calling a Python object
2025-07-09 15:44:34,519 - sync_service - ERROR - Error logging API call to SAP: maximum recursion depth exceeded while calling a Python object
2025-07-09 15:44:34,521 - sync_service - ERROR - SAP request error: maximum recursion depth exceeded while calling a Python object
2025-07-09 15:44:34,522 - sync_service - ERROR - Error logging API call to SAP: maximum recursion depth exceeded while calling a Python object
2025-07-09 15:44:34,523 - sync_service - ERROR - Failed to add API log to SAP: SAP request error: maximum recursion depth exceeded while calling a Python object
2025-07-09 15:44:34,526 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'U_API_LOG', 'request': {'method': 'POST', 'url': 'https://10.0.0.100:50000/b1s/v1/U_API_LOG', 'data': {'U_Server': 'sap', 'U_EndPoint': 'U_API_LOG', 'U_Request': '{"method": "POST", "url": "https://10.0.0.100:50000/b1s/v1/U_API_LOG", "data": {"U_Server": "sap", "U_EndPoint": "U_API_LOG", "U_Request": "{\\"method\\": \\"POST\\", \\"url\\": \\"https://10.0.0.100:50000/b1s/v1/U_API_LOG\\", \\"data\\": {\\"U_Server\\": \\"sap\\", \\"U_EndPoint\\": \\"U_API_LOG\\", \\"U_Request\\": \\"{\\\\\\"method\\\\\\": \\\\\\"POST\\\\\\", \\\\\\"url\\\\\\": \\\\\\"https://10.0.0.100:50000/b1s/v1/U_API_LOG\\\\\\", \\\\\\"data\\\\\\": {\\\\\\"U_Server\\\\\\": \\\\\\"sap\\\\\\", \\\\\\"U_EndPoint\\\\\\": \\\\\\"login\\\\\\", \\\\\\"U_Request\\\\\\": \\\\\\"\\\\\\", \\\\\\"U_Response\\\\\\": \\\\\\"{\\\\\\\\\\\\\\"status\\\\\\\\\\\\\\": \\\\\\\\\\\\\\"success\\\\\\\\\\\\\\"}\\\\\\", \\\\\\"U_Status\\\\\\": \\\\\\"success\\\\\\", \\\\\\"U_Reference\\\\\\": \\\\\\"\\\\\\", \\\\\\"U_LogDate\\\\\\": \\\\\\"2025-07-09\\\\\\", \\\\\\"U_LogTime\\\\\\": \\\\\\"1544\\\\\\", \\\\\\"U_Action\\\\\\": \\\\\\"\\\\\\", \\\\\\"U_Value\\\\\\": \\\\\\"\\\\\\"}, \\\\\\"params\\\\\\": null}\\", \\"U_Response\\": \\"\\", \\"U_Status\\": \\"success\\", \\"U_Reference\\": \\"\\", \\"U_LogDate\\": \\"2025-07-09\\", \\"U_LogTime\\": \\"1544\\", \\"U_Action\\": \\"sap_post\\", \\"U_Value\\": \\"SAP POST request to U_API_LOG\\"}, \\"params\\": null}", "U_Response": "", "U_Status": "success", "U_Reference": "", "U_LogDate": "2025-07-09", "U_LogTime": "1544", "U_Action": "sap_post", "U_Value": "SAP POST request to U_API_LOG"}, "params": null}', 'U_Response': '', 'U_Status': 'success', 'U_Reference': '', 'U_LogDate': '2025-07-09', 'U_LogTime': '1544', 'U_Action': 'sap_post', 'U_Value': 'SAP POST request to U_API_LOG'}, 'params': None}, 'response': None, 'status': None}
2025-07-09 15:44:34,527 - sync_service - ERROR - Error logging API call to SAP: maximum recursion depth exceeded while calling a Python object
2025-07-09 15:44:34,529 - sync_service - ERROR - Error logging API call to SAP: maximum recursion depth exceeded while calling a Python object
2025-07-09 15:44:34,531 - sync_service - ERROR - SAP request error: maximum recursion depth exceeded while calling a Python object
2025-07-09 15:44:34,532 - sync_service - ERROR - Error logging API call to SAP: maximum recursion depth exceeded while calling a Python object
2025-07-09 15:44:34,533 - sync_service - ERROR - Failed to add API log to SAP: SAP request error: maximum recursion depth exceeded while calling a Python object
2025-07-09 15:44:34,537 - sync_service - ERROR - SAP request error: maximum recursion depth exceeded while calling a Python object
2025-07-09 15:44:34,537 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'U_API_LOG', 'request': {'method': 'POST', 'url': 'https://10.0.0.100:50000/b1s/v1/U_API_LOG', 'data': {'U_Server': 'sap', 'U_EndPoint': 'U_API_LOG', 'U_Request': '', 'U_Response': '{"error": "SAP request error: maximum recursion depth exceeded while calling a Python object"}', 'U_Status': 'failure', 'U_Reference': '', 'U_LogDate': '2025-07-09', 'U_LogTime': '1544', 'U_Action': 'sap_post_exception', 'U_Value': 'SAP POST request exception to U_API_LOG: maximum recursion depth exceeded while calling a Python object'}, 'params': None}, 'response': None, 'status': None}
2025-07-09 15:44:34,538 - sync_service - ERROR - Error logging API call to SAP: maximum recursion depth exceeded while calling a Python object
2025-07-09 15:44:34,540 - sync_service - ERROR - Error logging API call to SAP: maximum recursion depth exceeded while calling a Python object
2025-07-09 15:44:34,543 - sync_service - ERROR - SAP request error: maximum recursion depth exceeded while calling a Python object
2025-07-09 15:44:34,544 - sync_service - ERROR - Error logging API call to SAP: maximum recursion depth exceeded while calling a Python object
2025-07-09 15:44:34,544 - sync_service - ERROR - Failed to add API log to SAP: SAP request error: maximum recursion depth exceeded while calling a Python object
2025-07-09 15:44:34,545 - sync_service - ERROR - Failed to add API log to SAP: SAP request error: maximum recursion depth exceeded while calling a Python object
2025-07-09 15:44:35,205 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'U_API_LOG', 'request': None, 'response': None, 'status': 'success'}
2025-07-09 15:44:35,210 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'U_API_LOG', 'request': {'method': 'POST', 'url': 'https://10.0.0.100:50000/b1s/v1/U_API_LOG', 'data': {'U_Server': 'sap', 'U_EndPoint': 'U_API_LOG', 'U_Request': '', 'U_Response': '', 'U_Status': 'success', 'U_Reference': '', 'U_LogDate': '2025-07-09', 'U_LogTime': '1544', 'U_Action': '', 'U_Value': ''}, 'params': None}, 'response': None, 'status': None}
2025-07-09 15:44:35,210 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'U_API_LOG', 'request': {'method': 'POST', 'url': 'https://10.0.0.100:50000/b1s/v1/U_API_LOG', 'data': {'U_Server': 'sap', 'U_EndPoint': 'U_API_LOG', 'U_Request': '{"method": "POST", "url": "https://10.0.0.100:50000/b1s/v1/U_API_LOG", "data": {"U_Server": "sap", "U_EndPoint": "U_API_LOG", "U_Request": "", "U_Response": "", "U_Status": "success", "U_Reference": "", "U_LogDate": "2025-07-09", "U_LogTime": "1544", "U_Action": "", "U_Value": ""}, "params": null}', 'U_Response': '', 'U_Status': 'success', 'U_Reference': '', 'U_LogDate': '2025-07-09', 'U_LogTime': '1544', 'U_Action': '', 'U_Value': ''}, 'params': None}, 'response': None, 'status': None}
2025-07-09 15:44:35,212 - sync_service - ERROR - Error logging API call to SAP: maximum recursion depth exceeded while calling a Python object
2025-07-09 15:44:35,214 - sync_service - ERROR - Error logging API call to SAP: maximum recursion depth exceeded while calling a Python object
2025-07-09 15:44:35,218 - sync_service - ERROR - SAP request error: maximum recursion depth exceeded while calling a Python object
2025-07-09 15:44:35,221 - sync_service - ERROR - Error logging API call to SAP: maximum recursion depth exceeded while calling a Python object
2025-07-09 15:44:35,221 - sync_service - ERROR - Failed to add API log to SAP: SAP request error: maximum recursion depth exceeded while calling a Python object
2025-07-09 15:44:35,222 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'U_API_LOG', 'request': {'method': 'POST', 'url': 'https://10.0.0.100:50000/b1s/v1/U_API_LOG', 'data': {'U_Server': 'sap', 'U_EndPoint': 'U_API_LOG', 'U_Request': '{"method": "POST", "url": "https://10.0.0.100:50000/b1s/v1/U_API_LOG", "data": {"U_Server": "sap", "U_EndPoint": "U_API_LOG", "U_Request": "", "U_Response": "", "U_Status": "success", "U_Reference": "", "U_LogDate": "2025-07-09", "U_LogTime": "1544", "U_Action": "", "U_Value": ""}, "params": null}', 'U_Response': '', 'U_Status': 'success', 'U_Reference': '', 'U_LogDate': '2025-07-09', 'U_LogTime': '1544', 'U_Action': 'sap_post', 'U_Value': 'SAP POST request to U_API_LOG'}, 'params': None}, 'response': None, 'status': None}
2025-07-09 15:44:35,226 - sync_service - ERROR - Error logging API call to SAP: maximum recursion depth exceeded while calling a Python object
2025-07-09 15:44:35,227 - sync_service - ERROR - Error logging API call to SAP: maximum recursion depth exceeded while calling a Python object
2025-07-09 15:44:35,228 - sync_service - ERROR - SAP request error: maximum recursion depth exceeded while calling a Python object
2025-07-09 15:44:35,229 - sync_service - ERROR - Error logging API call to SAP: maximum recursion depth exceeded while calling a Python object
2025-07-09 15:44:35,229 - sync_service - ERROR - Failed to add API log to SAP: SAP request error: maximum recursion depth exceeded while calling a Python object
2025-07-09 15:44:35,235 - sync_service - ERROR - SAP request error: maximum recursion depth exceeded while calling a Python object
2025-07-09 15:44:35,236 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'U_API_LOG', 'request': {'method': 'POST', 'url': 'https://10.0.0.100:50000/b1s/v1/U_API_LOG', 'data': {'U_Server': 'sap', 'U_EndPoint': 'U_API_LOG', 'U_Request': '', 'U_Response': '{"error": "SAP request error: maximum recursion depth exceeded while calling a Python object"}', 'U_Status': 'failure', 'U_Reference': '', 'U_LogDate': '2025-07-09', 'U_LogTime': '1544', 'U_Action': 'sap_post_exception', 'U_Value': 'SAP POST request exception to U_API_LOG: maximum recursion depth exceeded while calling a Python object'}, 'params': None}, 'response': None, 'status': None}
2025-07-09 15:44:35,238 - sync_service - ERROR - Error logging API call to SAP: maximum recursion depth exceeded while calling a Python object
2025-07-09 15:44:35,240 - sync_service - ERROR - Error logging API call to SAP: maximum recursion depth exceeded while calling a Python object
2025-07-09 15:44:35,242 - sync_service - ERROR - SAP request error: maximum recursion depth exceeded while calling a Python object
2025-07-09 15:44:35,244 - sync_service - ERROR - Error logging API call to SAP: maximum recursion depth exceeded while calling a Python object
2025-07-09 15:44:35,245 - sync_service - ERROR - Failed to add API log to SAP: SAP request error: maximum recursion depth exceeded while calling a Python object
2025-07-09 15:44:35,245 - sync_service - ERROR - Failed to add API log to SAP: SAP request error: maximum recursion depth exceeded while calling a Python object
2025-07-09 15:44:35,247 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'U_API_LOG', 'request': {'method': 'POST', 'url': 'https://10.0.0.100:50000/b1s/v1/U_API_LOG', 'data': {'U_Server': 'sap', 'U_EndPoint': 'U_API_LOG', 'U_Request': '', 'U_Response': '', 'U_Status': 'success', 'U_Reference': '', 'U_LogDate': '2025-07-09', 'U_LogTime': '1544', 'U_Action': 'sap_post_success', 'U_Value': 'SAP POST request successful to U_API_LOG'}, 'params': None}, 'response': None, 'status': None}
2025-07-09 15:44:35,248 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'U_API_LOG', 'request': {'method': 'POST', 'url': 'https://10.0.0.100:50000/b1s/v1/U_API_LOG', 'data': {'U_Server': 'sap', 'U_EndPoint': 'U_API_LOG', 'U_Request': '{"method": "POST", "url": "https://10.0.0.100:50000/b1s/v1/U_API_LOG", "data": {"U_Server": "sap", "U_EndPoint": "U_API_LOG", "U_Request": "", "U_Response": "", "U_Status": "success", "U_Reference": "", "U_LogDate": "2025-07-09", "U_LogTime": "1544", "U_Action": "sap_post_success", "U_Value": "SAP POST request successful to U_API_LOG"}, "params": null}', 'U_Response': '', 'U_Status': 'success', 'U_Reference': '', 'U_LogDate': '2025-07-09', 'U_LogTime': '1544', 'U_Action': '', 'U_Value': ''}, 'params': None}, 'response': None, 'status': None}
2025-07-09 15:44:35,250 - sync_service - ERROR - Error logging API call to SAP: maximum recursion depth exceeded while calling a Python object
2025-07-09 15:44:35,251 - sync_service - ERROR - Error logging API call to SAP: maximum recursion depth exceeded while calling a Python object
2025-07-09 15:44:35,253 - sync_service - ERROR - SAP request error: maximum recursion depth exceeded while calling a Python object
2025-07-09 15:44:35,254 - sync_service - ERROR - Error logging API call to SAP: maximum recursion depth exceeded while calling a Python object
2025-07-09 15:44:35,255 - sync_service - ERROR - Failed to add API log to SAP: SAP request error: maximum recursion depth exceeded while calling a Python object
2025-07-09 15:44:35,258 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'U_API_LOG', 'request': {'method': 'POST', 'url': 'https://10.0.0.100:50000/b1s/v1/U_API_LOG', 'data': {'U_Server': 'sap', 'U_EndPoint': 'U_API_LOG', 'U_Request': '{"method": "POST", "url": "https://10.0.0.100:50000/b1s/v1/U_API_LOG", "data": {"U_Server": "sap", "U_EndPoint": "U_API_LOG", "U_Request": "", "U_Response": "", "U_Status": "success", "U_Reference": "", "U_LogDate": "2025-07-09", "U_LogTime": "1544", "U_Action": "sap_post_success", "U_Value": "SAP POST request successful to U_API_LOG"}, "params": null}', 'U_Response': '', 'U_Status': 'success', 'U_Reference': '', 'U_LogDate': '2025-07-09', 'U_LogTime': '1544', 'U_Action': 'sap_post', 'U_Value': 'SAP POST request to U_API_LOG'}, 'params': None}, 'response': None, 'status': None}
2025-07-09 15:44:35,260 - sync_service - ERROR - Error logging API call to SAP: maximum recursion depth exceeded while calling a Python object
2025-07-09 15:44:35,263 - sync_service - ERROR - Error logging API call to SAP: maximum recursion depth exceeded while calling a Python object
2025-07-09 15:44:35,267 - sync_service - ERROR - SAP request error: maximum recursion depth exceeded while calling a Python object
2025-07-09 15:44:35,269 - sync_service - ERROR - Error logging API call to SAP: maximum recursion depth exceeded while calling a Python object
2025-07-09 15:44:35,270 - sync_service - ERROR - Failed to add API log to SAP: SAP request error: maximum recursion depth exceeded while calling a Python object
2025-07-09 15:44:35,274 - sync_service - ERROR - SAP request error: maximum recursion depth exceeded while calling a Python object
2025-07-09 15:44:35,277 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'U_API_LOG', 'request': {'method': 'POST', 'url': 'https://10.0.0.100:50000/b1s/v1/U_API_LOG', 'data': {'U_Server': 'sap', 'U_EndPoint': 'U_API_LOG', 'U_Request': '', 'U_Response': '{"error": "SAP request error: maximum recursion depth exceeded while calling a Python object"}', 'U_Status': 'failure', 'U_Reference': '', 'U_LogDate': '2025-07-09', 'U_LogTime': '1544', 'U_Action': 'sap_post_exception', 'U_Value': 'SAP POST request exception to U_API_LOG: maximum recursion depth exceeded while calling a Python object'}, 'params': None}, 'response': None, 'status': None}
2025-07-09 15:44:35,278 - sync_service - ERROR - Error logging API call to SAP: maximum recursion depth exceeded while calling a Python object
2025-07-09 15:44:35,279 - sync_service - ERROR - Error logging API call to SAP: maximum recursion depth exceeded while calling a Python object
2025-07-09 15:44:35,282 - sync_service - ERROR - SAP request error: maximum recursion depth exceeded while calling a Python object
2025-07-09 15:44:35,284 - sync_service - ERROR - Error logging API call to SAP: maximum recursion depth exceeded while calling a Python object
2025-07-09 15:44:35,285 - sync_service - ERROR - Failed to add API log to SAP: SAP request error: maximum recursion depth exceeded while calling a Python object
2025-07-09 15:44:35,286 - sync_service - ERROR - Failed to add API log to SAP: SAP request error: maximum recursion depth exceeded while calling a Python object
2025-07-09 15:44:35,288 - sync_service - INFO - API log added to SAP: sap - U_API_LOG - success
2025-07-09 15:44:35,480 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'U_API_LOG', 'request': None, 'response': None, 'status': 'success'}
2025-07-09 15:44:35,485 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'U_API_LOG', 'request': {'method': 'POST', 'url': 'https://10.0.0.100:50000/b1s/v1/U_API_LOG', 'data': {'U_Server': 'sap', 'U_EndPoint': 'U_API_LOG', 'U_Request': '', 'U_Response': '', 'U_Status': 'success', 'U_Reference': '', 'U_LogDate': '2025-07-09', 'U_LogTime': '1544', 'U_Action': '', 'U_Value': ''}, 'params': None}, 'response': None, 'status': None}
2025-07-09 15:44:35,489 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'U_API_LOG', 'request': {'method': 'POST', 'url': 'https://10.0.0.100:50000/b1s/v1/U_API_LOG', 'data': {'U_Server': 'sap', 'U_EndPoint': 'U_API_LOG', 'U_Request': '{"method": "POST", "url": "https://10.0.0.100:50000/b1s/v1/U_API_LOG", "data": {"U_Server": "sap", "U_EndPoint": "U_API_LOG", "U_Request": "", "U_Response": "", "U_Status": "success", "U_Reference": "", "U_LogDate": "2025-07-09", "U_LogTime": "1544", "U_Action": "", "U_Value": ""}, "params": null}', 'U_Response': '', 'U_Status': 'success', 'U_Reference': '', 'U_LogDate': '2025-07-09', 'U_LogTime': '1544', 'U_Action': '', 'U_Value': ''}, 'params': None}, 'response': None, 'status': None}
2025-07-09 15:44:35,491 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'U_API_LOG', 'request': {'method': 'POST', 'url': 'https://10.0.0.100:50000/b1s/v1/U_API_LOG', 'data': {'U_Server': 'sap', 'U_EndPoint': 'U_API_LOG', 'U_Request': '{"method": "POST", "url": "https://10.0.0.100:50000/b1s/v1/U_API_LOG", "data": {"U_Server": "sap", "U_EndPoint": "U_API_LOG", "U_Request": "{\\"method\\": \\"POST\\", \\"url\\": \\"https://10.0.0.100:50000/b1s/v1/U_API_LOG\\", \\"data\\": {\\"U_Server\\": \\"sap\\", \\"U_EndPoint\\": \\"U_API_LOG\\", \\"U_Request\\": \\"\\", \\"U_Response\\": \\"\\", \\"U_Status\\": \\"success\\", \\"U_Reference\\": \\"\\", \\"U_LogDate\\": \\"2025-07-09\\", \\"U_LogTime\\": \\"1544\\", \\"U_Action\\": \\"\\", \\"U_Value\\": \\"\\"}, \\"params\\": null}", "U_Response": "", "U_Status": "success", "U_Reference": "", "U_LogDate": "2025-07-09", "U_LogTime": "1544", "U_Action": "", "U_Value": ""}, "params": null}', 'U_Response': '', 'U_Status': 'success', 'U_Reference': '', 'U_LogDate': '2025-07-09', 'U_LogTime': '1544', 'U_Action': '', 'U_Value': ''}, 'params': None}, 'response': None, 'status': None}
2025-07-09 15:44:35,497 - sync_service - ERROR - Error logging API call to SAP: maximum recursion depth exceeded while calling a Python object
2025-07-09 15:44:35,499 - sync_service - ERROR - Error logging API call to SAP: maximum recursion depth exceeded while calling a Python object
2025-07-09 15:44:35,502 - sync_service - ERROR - SAP request error: maximum recursion depth exceeded while calling a Python object
2025-07-09 15:44:35,505 - sync_service - ERROR - Error logging API call to SAP: maximum recursion depth exceeded while calling a Python object
2025-07-09 15:44:35,507 - sync_service - ERROR - Failed to add API log to SAP: SAP request error: maximum recursion depth exceeded while calling a Python object
2025-07-09 15:44:35,509 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'U_API_LOG', 'request': {'method': 'POST', 'url': 'https://10.0.0.100:50000/b1s/v1/U_API_LOG', 'data': {'U_Server': 'sap', 'U_EndPoint': 'U_API_LOG', 'U_Request': '{"method": "POST", "url": "https://10.0.0.100:50000/b1s/v1/U_API_LOG", "data": {"U_Server": "sap", "U_EndPoint": "U_API_LOG", "U_Request": "{\\"method\\": \\"POST\\", \\"url\\": \\"https://10.0.0.100:50000/b1s/v1/U_API_LOG\\", \\"data\\": {\\"U_Server\\": \\"sap\\", \\"U_EndPoint\\": \\"U_API_LOG\\", \\"U_Request\\": \\"\\", \\"U_Response\\": \\"\\", \\"U_Status\\": \\"success\\", \\"U_Reference\\": \\"\\", \\"U_LogDate\\": \\"2025-07-09\\", \\"U_LogTime\\": \\"1544\\", \\"U_Action\\": \\"\\", \\"U_Value\\": \\"\\"}, \\"params\\": null}", "U_Response": "", "U_Status": "success", "U_Reference": "", "U_LogDate": "2025-07-09", "U_LogTime": "1544", "U_Action": "", "U_Value": ""}, "params": null}', 'U_Response': '', 'U_Status': 'success', 'U_Reference': '', 'U_LogDate': '2025-07-09', 'U_LogTime': '1544', 'U_Action': 'sap_post', 'U_Value': 'SAP POST request to U_API_LOG'}, 'params': None}, 'response': None, 'status': None}
2025-07-09 15:44:35,512 - sync_service - ERROR - Error logging API call to SAP: maximum recursion depth exceeded while calling a Python object
2025-07-09 15:44:35,515 - sync_service - ERROR - Error logging API call to SAP: maximum recursion depth exceeded while calling a Python object
2025-07-09 15:44:35,517 - sync_service - ERROR - SAP request error: maximum recursion depth exceeded while calling a Python object
2025-07-09 15:44:35,520 - sync_service - ERROR - Error logging API call to SAP: maximum recursion depth exceeded while calling a Python object
2025-07-09 15:44:35,522 - sync_service - ERROR - Failed to add API log to SAP: SAP request error: maximum recursion depth exceeded while calling a Python object
2025-07-09 15:44:35,525 - sync_service - ERROR - SAP request error: maximum recursion depth exceeded while calling a Python object
2025-07-09 15:44:35,527 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'U_API_LOG', 'request': {'method': 'POST', 'url': 'https://10.0.0.100:50000/b1s/v1/U_API_LOG', 'data': {'U_Server': 'sap', 'U_EndPoint': 'U_API_LOG', 'U_Request': '', 'U_Response': '{"error": "SAP request error: maximum recursion depth exceeded while calling a Python object"}', 'U_Status': 'failure', 'U_Reference': '', 'U_LogDate': '2025-07-09', 'U_LogTime': '1544', 'U_Action': 'sap_post_exception', 'U_Value': 'SAP POST request exception to U_API_LOG: maximum recursion depth exceeded while calling a Python object'}, 'params': None}, 'response': None, 'status': None}
2025-07-09 15:44:35,528 - sync_service - ERROR - Error logging API call to SAP: maximum recursion depth exceeded while calling a Python object
2025-07-09 15:44:35,528 - sync_service - ERROR - Error logging API call to SAP: maximum recursion depth exceeded while calling a Python object
2025-07-09 15:44:35,531 - sync_service - ERROR - SAP request error: maximum recursion depth exceeded while calling a Python object
2025-07-09 15:44:35,532 - sync_service - ERROR - Error logging API call to SAP: maximum recursion depth exceeded while calling a Python object
2025-07-09 15:44:35,532 - sync_service - ERROR - Failed to add API log to SAP: SAP request error: maximum recursion depth exceeded while calling a Python object
2025-07-09 15:44:35,533 - sync_service - ERROR - Failed to add API log to SAP: SAP request error: maximum recursion depth exceeded while calling a Python object
2025-07-09 15:44:35,534 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'U_API_LOG', 'request': {'method': 'POST', 'url': 'https://10.0.0.100:50000/b1s/v1/U_API_LOG', 'data': {'U_Server': 'sap', 'U_EndPoint': 'U_API_LOG', 'U_Request': '{"method": "POST", "url": "https://10.0.0.100:50000/b1s/v1/U_API_LOG", "data": {"U_Server": "sap", "U_EndPoint": "U_API_LOG", "U_Request": "", "U_Response": "", "U_Status": "success", "U_Reference": "", "U_LogDate": "2025-07-09", "U_LogTime": "1544", "U_Action": "", "U_Value": ""}, "params": null}', 'U_Response': '', 'U_Status': 'success', 'U_Reference': '', 'U_LogDate': '2025-07-09', 'U_LogTime': '1544', 'U_Action': 'sap_post', 'U_Value': 'SAP POST request to U_API_LOG'}, 'params': None}, 'response': None, 'status': None}
2025-07-09 15:44:35,535 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'U_API_LOG', 'request': {'method': 'POST', 'url': 'https://10.0.0.100:50000/b1s/v1/U_API_LOG', 'data': {'U_Server': 'sap', 'U_EndPoint': 'U_API_LOG', 'U_Request': '{"method": "POST", "url": "https://10.0.0.100:50000/b1s/v1/U_API_LOG", "data": {"U_Server": "sap", "U_EndPoint": "U_API_LOG", "U_Request": "{\\"method\\": \\"POST\\", \\"url\\": \\"https://10.0.0.100:50000/b1s/v1/U_API_LOG\\", \\"data\\": {\\"U_Server\\": \\"sap\\", \\"U_EndPoint\\": \\"U_API_LOG\\", \\"U_Request\\": \\"\\", \\"U_Response\\": \\"\\", \\"U_Status\\": \\"success\\", \\"U_Reference\\": \\"\\", \\"U_LogDate\\": \\"2025-07-09\\", \\"U_LogTime\\": \\"1544\\", \\"U_Action\\": \\"\\", \\"U_Value\\": \\"\\"}, \\"params\\": null}", "U_Response": "", "U_Status": "success", "U_Reference": "", "U_LogDate": "2025-07-09", "U_LogTime": "1544", "U_Action": "sap_post", "U_Value": "SAP POST request to U_API_LOG"}, "params": null}', 'U_Response': '', 'U_Status': 'success', 'U_Reference': '', 'U_LogDate': '2025-07-09', 'U_LogTime': '1544', 'U_Action': '', 'U_Value': ''}, 'params': None}, 'response': None, 'status': None}
2025-07-09 15:44:35,537 - sync_service - ERROR - Error logging API call to SAP: maximum recursion depth exceeded while calling a Python object
2025-07-09 15:44:35,538 - sync_service - ERROR - Error logging API call to SAP: maximum recursion depth exceeded while calling a Python object
2025-07-09 15:44:35,539 - sync_service - ERROR - SAP request error: maximum recursion depth exceeded while calling a Python object
2025-07-09 15:44:35,540 - sync_service - ERROR - Error logging API call to SAP: maximum recursion depth exceeded while calling a Python object
2025-07-09 15:44:35,541 - sync_service - ERROR - Failed to add API log to SAP: SAP request error: maximum recursion depth exceeded while calling a Python object
2025-07-09 15:44:35,543 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'U_API_LOG', 'request': {'method': 'POST', 'url': 'https://10.0.0.100:50000/b1s/v1/U_API_LOG', 'data': {'U_Server': 'sap', 'U_EndPoint': 'U_API_LOG', 'U_Request': '{"method": "POST", "url": "https://10.0.0.100:50000/b1s/v1/U_API_LOG", "data": {"U_Server": "sap", "U_EndPoint": "U_API_LOG", "U_Request": "{\\"method\\": \\"POST\\", \\"url\\": \\"https://10.0.0.100:50000/b1s/v1/U_API_LOG\\", \\"data\\": {\\"U_Server\\": \\"sap\\", \\"U_EndPoint\\": \\"U_API_LOG\\", \\"U_Request\\": \\"\\", \\"U_Response\\": \\"\\", \\"U_Status\\": \\"success\\", \\"U_Reference\\": \\"\\", \\"U_LogDate\\": \\"2025-07-09\\", \\"U_LogTime\\": \\"1544\\", \\"U_Action\\": \\"\\", \\"U_Value\\": \\"\\"}, \\"params\\": null}", "U_Response": "", "U_Status": "success", "U_Reference": "", "U_LogDate": "2025-07-09", "U_LogTime": "1544", "U_Action": "sap_post", "U_Value": "SAP POST request to U_API_LOG"}, "params": null}', 'U_Response': '', 'U_Status': 'success', 'U_Reference': '', 'U_LogDate': '2025-07-09', 'U_LogTime': '1544', 'U_Action': 'sap_post', 'U_Value': 'SAP POST request to U_API_LOG'}, 'params': None}, 'response': None, 'status': None}
2025-07-09 15:44:35,545 - sync_service - ERROR - Error logging API call to SAP: maximum recursion depth exceeded while calling a Python object
2025-07-09 15:44:35,549 - sync_service - ERROR - Error logging API call to SAP: maximum recursion depth exceeded while calling a Python object
2025-07-09 15:44:35,551 - sync_service - ERROR - SAP request error: maximum recursion depth exceeded while calling a Python object
2025-07-09 15:44:35,559 - sync_service - ERROR - Error logging API call to SAP: maximum recursion depth exceeded while calling a Python object
2025-07-09 15:44:35,560 - sync_service - ERROR - Failed to add API log to SAP: SAP request error: maximum recursion depth exceeded while calling a Python object
2025-07-09 15:44:35,562 - sync_service - ERROR - SAP request error: maximum recursion depth exceeded while calling a Python object
2025-07-09 15:44:35,563 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'U_API_LOG', 'request': {'method': 'POST', 'url': 'https://10.0.0.100:50000/b1s/v1/U_API_LOG', 'data': {'U_Server': 'sap', 'U_EndPoint': 'U_API_LOG', 'U_Request': '', 'U_Response': '{"error": "SAP request error: maximum recursion depth exceeded while calling a Python object"}', 'U_Status': 'failure', 'U_Reference': '', 'U_LogDate': '2025-07-09', 'U_LogTime': '1544', 'U_Action': 'sap_post_exception', 'U_Value': 'SAP POST request exception to U_API_LOG: maximum recursion depth exceeded while calling a Python object'}, 'params': None}, 'response': None, 'status': None}
2025-07-09 15:44:35,565 - sync_service - ERROR - Error logging API call to SAP: maximum recursion depth exceeded while calling a Python object
2025-07-09 15:44:35,567 - sync_service - ERROR - Error logging API call to SAP: maximum recursion depth exceeded while calling a Python object
2025-07-09 15:44:35,569 - sync_service - ERROR - SAP request error: maximum recursion depth exceeded while calling a Python object
2025-07-09 15:44:35,570 - sync_service - ERROR - Error logging API call to SAP: maximum recursion depth exceeded while calling a Python object
2025-07-09 15:44:35,571 - sync_service - ERROR - Failed to add API log to SAP: SAP request error: maximum recursion depth exceeded while calling a Python object
2025-07-09 15:44:35,571 - sync_service - ERROR - Failed to add API log to SAP: SAP request error: maximum recursion depth exceeded while calling a Python object
2025-07-09 15:44:35,822 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'U_API_LOG', 'request': None, 'response': None, 'status': 'success'}
2025-07-09 15:44:35,823 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'U_API_LOG', 'request': {'method': 'POST', 'url': 'https://10.0.0.100:50000/b1s/v1/U_API_LOG', 'data': {'U_Server': 'sap', 'U_EndPoint': 'U_API_LOG', 'U_Request': '', 'U_Response': '', 'U_Status': 'success', 'U_Reference': '', 'U_LogDate': '2025-07-09', 'U_LogTime': '1544', 'U_Action': '', 'U_Value': ''}, 'params': None}, 'response': None, 'status': None}
2025-07-09 15:44:35,825 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'U_API_LOG', 'request': {'method': 'POST', 'url': 'https://10.0.0.100:50000/b1s/v1/U_API_LOG', 'data': {'U_Server': 'sap', 'U_EndPoint': 'U_API_LOG', 'U_Request': '{"method": "POST", "url": "https://10.0.0.100:50000/b1s/v1/U_API_LOG", "data": {"U_Server": "sap", "U_EndPoint": "U_API_LOG", "U_Request": "", "U_Response": "", "U_Status": "success", "U_Reference": "", "U_LogDate": "2025-07-09", "U_LogTime": "1544", "U_Action": "", "U_Value": ""}, "params": null}', 'U_Response': '', 'U_Status': 'success', 'U_Reference': '', 'U_LogDate': '2025-07-09', 'U_LogTime': '1544', 'U_Action': '', 'U_Value': ''}, 'params': None}, 'response': None, 'status': None}
2025-07-09 15:44:35,829 - sync_service - ERROR - Error logging API call to SAP: maximum recursion depth exceeded while calling a Python object
2025-07-09 15:44:35,838 - sync_service - ERROR - Error logging API call to SAP: maximum recursion depth exceeded while calling a Python object
2025-07-09 15:44:35,839 - sync_service - ERROR - SAP request error: maximum recursion depth exceeded while calling a Python object
2025-07-09 15:44:35,842 - sync_service - ERROR - Error logging API call to SAP: maximum recursion depth exceeded while calling a Python object
2025-07-09 15:44:35,844 - sync_service - ERROR - Failed to add API log to SAP: SAP request error: maximum recursion depth exceeded while calling a Python object
2025-07-09 15:44:35,844 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'U_API_LOG', 'request': {'method': 'POST', 'url': 'https://10.0.0.100:50000/b1s/v1/U_API_LOG', 'data': {'U_Server': 'sap', 'U_EndPoint': 'U_API_LOG', 'U_Request': '{"method": "POST", "url": "https://10.0.0.100:50000/b1s/v1/U_API_LOG", "data": {"U_Server": "sap", "U_EndPoint": "U_API_LOG", "U_Request": "", "U_Response": "", "U_Status": "success", "U_Reference": "", "U_LogDate": "2025-07-09", "U_LogTime": "1544", "U_Action": "", "U_Value": ""}, "params": null}', 'U_Response': '', 'U_Status': 'success', 'U_Reference': '', 'U_LogDate': '2025-07-09', 'U_LogTime': '1544', 'U_Action': 'sap_post', 'U_Value': 'SAP POST request to U_API_LOG'}, 'params': None}, 'response': None, 'status': None}
2025-07-09 15:44:35,848 - sync_service - ERROR - Error logging API call to SAP: maximum recursion depth exceeded while calling a Python object
2025-07-09 15:44:35,851 - sync_service - ERROR - Error logging API call to SAP: maximum recursion depth exceeded while calling a Python object
2025-07-09 15:44:35,853 - sync_service - ERROR - SAP request error: maximum recursion depth exceeded while calling a Python object
2025-07-09 15:44:35,854 - sync_service - ERROR - Error logging API call to SAP: maximum recursion depth exceeded while calling a Python object
2025-07-09 15:44:35,856 - sync_service - ERROR - Failed to add API log to SAP: SAP request error: maximum recursion depth exceeded while calling a Python object
2025-07-09 15:44:35,860 - sync_service - ERROR - SAP request error: maximum recursion depth exceeded while calling a Python object
2025-07-09 15:44:35,870 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'U_API_LOG', 'request': {'method': 'POST', 'url': 'https://10.0.0.100:50000/b1s/v1/U_API_LOG', 'data': {'U_Server': 'sap', 'U_EndPoint': 'U_API_LOG', 'U_Request': '', 'U_Response': '{"error": "SAP request error: maximum recursion depth exceeded while calling a Python object"}', 'U_Status': 'failure', 'U_Reference': '', 'U_LogDate': '2025-07-09', 'U_LogTime': '1544', 'U_Action': 'sap_post_exception', 'U_Value': 'SAP POST request exception to U_API_LOG: maximum recursion depth exceeded while calling a Python object'}, 'params': None}, 'response': None, 'status': None}
2025-07-09 15:44:35,888 - sync_service - ERROR - Error logging API call to SAP: maximum recursion depth exceeded while calling a Python object
2025-07-09 15:44:35,890 - sync_service - ERROR - Error logging API call to SAP: maximum recursion depth exceeded while calling a Python object
2025-07-09 15:44:35,892 - sync_service - ERROR - SAP request error: maximum recursion depth exceeded while calling a Python object
2025-07-09 15:44:35,894 - sync_service - ERROR - Error logging API call to SAP: maximum recursion depth exceeded while calling a Python object
2025-07-09 15:44:35,895 - sync_service - ERROR - Failed to add API log to SAP: SAP request error: maximum recursion depth exceeded while calling a Python object
2025-07-09 15:44:35,897 - sync_service - ERROR - Failed to add API log to SAP: SAP request error: maximum recursion depth exceeded while calling a Python object
2025-07-09 15:44:35,901 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'U_API_LOG', 'request': {'method': 'POST', 'url': 'https://10.0.0.100:50000/b1s/v1/U_API_LOG', 'data': {'U_Server': 'sap', 'U_EndPoint': 'U_API_LOG', 'U_Request': '', 'U_Response': '', 'U_Status': 'success', 'U_Reference': '', 'U_LogDate': '2025-07-09', 'U_LogTime': '1544', 'U_Action': 'sap_post_success', 'U_Value': 'SAP POST request successful to U_API_LOG'}, 'params': None}, 'response': None, 'status': None}
2025-07-09 15:44:35,903 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'U_API_LOG', 'request': {'method': 'POST', 'url': 'https://10.0.0.100:50000/b1s/v1/U_API_LOG', 'data': {'U_Server': 'sap', 'U_EndPoint': 'U_API_LOG', 'U_Request': '{"method": "POST", "url": "https://10.0.0.100:50000/b1s/v1/U_API_LOG", "data": {"U_Server": "sap", "U_EndPoint": "U_API_LOG", "U_Request": "", "U_Response": "", "U_Status": "success", "U_Reference": "", "U_LogDate": "2025-07-09", "U_LogTime": "1544", "U_Action": "sap_post_success", "U_Value": "SAP POST request successful to U_API_LOG"}, "params": null}', 'U_Response': '', 'U_Status': 'success', 'U_Reference': '', 'U_LogDate': '2025-07-09', 'U_LogTime': '1544', 'U_Action': '', 'U_Value': ''}, 'params': None}, 'response': None, 'status': None}
2025-07-09 15:44:35,905 - sync_service - ERROR - Error logging API call to SAP: maximum recursion depth exceeded while calling a Python object
2025-07-09 15:44:35,908 - sync_service - ERROR - Error logging API call to SAP: maximum recursion depth exceeded while calling a Python object
2025-07-09 15:44:35,914 - sync_service - ERROR - SAP request error: maximum recursion depth exceeded while calling a Python object
2025-07-09 15:44:35,920 - sync_service - ERROR - Error logging API call to SAP: maximum recursion depth exceeded while calling a Python object
2025-07-09 15:44:35,922 - sync_service - ERROR - Failed to add API log to SAP: SAP request error: maximum recursion depth exceeded while calling a Python object
2025-07-09 15:44:35,924 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'U_API_LOG', 'request': {'method': 'POST', 'url': 'https://10.0.0.100:50000/b1s/v1/U_API_LOG', 'data': {'U_Server': 'sap', 'U_EndPoint': 'U_API_LOG', 'U_Request': '{"method": "POST", "url": "https://10.0.0.100:50000/b1s/v1/U_API_LOG", "data": {"U_Server": "sap", "U_EndPoint": "U_API_LOG", "U_Request": "", "U_Response": "", "U_Status": "success", "U_Reference": "", "U_LogDate": "2025-07-09", "U_LogTime": "1544", "U_Action": "sap_post_success", "U_Value": "SAP POST request successful to U_API_LOG"}, "params": null}', 'U_Response': '', 'U_Status': 'success', 'U_Reference': '', 'U_LogDate': '2025-07-09', 'U_LogTime': '1544', 'U_Action': 'sap_post', 'U_Value': 'SAP POST request to U_API_LOG'}, 'params': None}, 'response': None, 'status': None}
2025-07-09 15:44:35,927 - sync_service - ERROR - Error logging API call to SAP: maximum recursion depth exceeded while calling a Python object
2025-07-09 15:44:35,930 - sync_service - ERROR - Error logging API call to SAP: maximum recursion depth exceeded while calling a Python object
2025-07-09 15:44:35,932 - sync_service - ERROR - SAP request error: maximum recursion depth exceeded while calling a Python object
2025-07-09 15:44:35,935 - sync_service - ERROR - Error logging API call to SAP: maximum recursion depth exceeded while calling a Python object
2025-07-09 15:44:35,936 - sync_service - ERROR - Failed to add API log to SAP: SAP request error: maximum recursion depth exceeded while calling a Python object
2025-07-09 15:44:35,942 - sync_service - ERROR - SAP request error: maximum recursion depth exceeded while calling a Python object
2025-07-09 15:44:35,943 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'U_API_LOG', 'request': {'method': 'POST', 'url': 'https://10.0.0.100:50000/b1s/v1/U_API_LOG', 'data': {'U_Server': 'sap', 'U_EndPoint': 'U_API_LOG', 'U_Request': '', 'U_Response': '{"error": "SAP request error: maximum recursion depth exceeded while calling a Python object"}', 'U_Status': 'failure', 'U_Reference': '', 'U_LogDate': '2025-07-09', 'U_LogTime': '1544', 'U_Action': 'sap_post_exception', 'U_Value': 'SAP POST request exception to U_API_LOG: maximum recursion depth exceeded while calling a Python object'}, 'params': None}, 'response': None, 'status': None}
2025-07-09 15:44:35,944 - sync_service - ERROR - Error logging API call to SAP: maximum recursion depth exceeded while calling a Python object
2025-07-09 15:44:35,945 - sync_service - ERROR - Error logging API call to SAP: maximum recursion depth exceeded while calling a Python object
2025-07-09 15:44:35,947 - sync_service - ERROR - SAP request error: maximum recursion depth exceeded while calling a Python object
2025-07-09 15:44:35,949 - sync_service - ERROR - Error logging API call to SAP: maximum recursion depth exceeded while calling a Python object
2025-07-09 15:44:35,950 - sync_service - ERROR - Failed to add API log to SAP: SAP request error: maximum recursion depth exceeded while calling a Python object
2025-07-09 15:44:35,951 - sync_service - ERROR - Failed to add API log to SAP: SAP request error: maximum recursion depth exceeded while calling a Python object
2025-07-09 15:44:35,954 - sync_service - INFO - API log added to SAP: sap - U_API_LOG - success
2025-07-09 15:44:35,955 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'U_API_LOG', 'request': {'method': 'POST', 'url': 'https://10.0.0.100:50000/b1s/v1/U_API_LOG', 'data': {'U_Server': 'sap', 'U_EndPoint': 'U_API_LOG', 'U_Request': '', 'U_Response': '', 'U_Status': 'success', 'U_Reference': '', 'U_LogDate': '2025-07-09', 'U_LogTime': '1544', 'U_Action': 'sap_post_success', 'U_Value': 'SAP POST request successful to U_API_LOG'}, 'params': None}, 'response': None, 'status': None}
2025-07-09 15:44:35,957 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'U_API_LOG', 'request': {'method': 'POST', 'url': 'https://10.0.0.100:50000/b1s/v1/U_API_LOG', 'data': {'U_Server': 'sap', 'U_EndPoint': 'U_API_LOG', 'U_Request': '{"method": "POST", "url": "https://10.0.0.100:50000/b1s/v1/U_API_LOG", "data": {"U_Server": "sap", "U_EndPoint": "U_API_LOG", "U_Request": "", "U_Response": "", "U_Status": "success", "U_Reference": "", "U_LogDate": "2025-07-09", "U_LogTime": "1544", "U_Action": "sap_post_success", "U_Value": "SAP POST request successful to U_API_LOG"}, "params": null}', 'U_Response': '', 'U_Status': 'success', 'U_Reference': '', 'U_LogDate': '2025-07-09', 'U_LogTime': '1544', 'U_Action': '', 'U_Value': ''}, 'params': None}, 'response': None, 'status': None}
2025-07-09 15:44:35,959 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'U_API_LOG', 'request': {'method': 'POST', 'url': 'https://10.0.0.100:50000/b1s/v1/U_API_LOG', 'data': {'U_Server': 'sap', 'U_EndPoint': 'U_API_LOG', 'U_Request': '{"method": "POST", "url": "https://10.0.0.100:50000/b1s/v1/U_API_LOG", "data": {"U_Server": "sap", "U_EndPoint": "U_API_LOG", "U_Request": "{\\"method\\": \\"POST\\", \\"url\\": \\"https://10.0.0.100:50000/b1s/v1/U_API_LOG\\", \\"data\\": {\\"U_Server\\": \\"sap\\", \\"U_EndPoint\\": \\"U_API_LOG\\", \\"U_Request\\": \\"\\", \\"U_Response\\": \\"\\", \\"U_Status\\": \\"success\\", \\"U_Reference\\": \\"\\", \\"U_LogDate\\": \\"2025-07-09\\", \\"U_LogTime\\": \\"1544\\", \\"U_Action\\": \\"sap_post_success\\", \\"U_Value\\": \\"SAP POST request successful to U_API_LOG\\"}, \\"params\\": null}", "U_Response": "", "U_Status": "success", "U_Reference": "", "U_LogDate": "2025-07-09", "U_LogTime": "1544", "U_Action": "", "U_Value": ""}, "params": null}', 'U_Response': '', 'U_Status': 'success', 'U_Reference': '', 'U_LogDate': '2025-07-09', 'U_LogTime': '1544', 'U_Action': '', 'U_Value': ''}, 'params': None}, 'response': None, 'status': None}
2025-07-09 15:44:35,961 - sync_service - ERROR - Error logging API call to SAP: maximum recursion depth exceeded while calling a Python object
2025-07-09 15:44:35,963 - sync_service - ERROR - Error logging API call to SAP: maximum recursion depth exceeded while calling a Python object
2025-07-09 15:44:35,965 - sync_service - ERROR - SAP request error: maximum recursion depth exceeded while calling a Python object
2025-07-09 15:44:35,970 - sync_service - ERROR - Error logging API call to SAP: maximum recursion depth exceeded while calling a Python object
2025-07-09 15:44:35,971 - sync_service - ERROR - Failed to add API log to SAP: SAP request error: maximum recursion depth exceeded while calling a Python object
2025-07-09 15:44:35,973 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'U_API_LOG', 'request': {'method': 'POST', 'url': 'https://10.0.0.100:50000/b1s/v1/U_API_LOG', 'data': {'U_Server': 'sap', 'U_EndPoint': 'U_API_LOG', 'U_Request': '{"method": "POST", "url": "https://10.0.0.100:50000/b1s/v1/U_API_LOG", "data": {"U_Server": "sap", "U_EndPoint": "U_API_LOG", "U_Request": "{\\"method\\": \\"POST\\", \\"url\\": \\"https://10.0.0.100:50000/b1s/v1/U_API_LOG\\", \\"data\\": {\\"U_Server\\": \\"sap\\", \\"U_EndPoint\\": \\"U_API_LOG\\", \\"U_Request\\": \\"\\", \\"U_Response\\": \\"\\", \\"U_Status\\": \\"success\\", \\"U_Reference\\": \\"\\", \\"U_LogDate\\": \\"2025-07-09\\", \\"U_LogTime\\": \\"1544\\", \\"U_Action\\": \\"sap_post_success\\", \\"U_Value\\": \\"SAP POST request successful to U_API_LOG\\"}, \\"params\\": null}", "U_Response": "", "U_Status": "success", "U_Reference": "", "U_LogDate": "2025-07-09", "U_LogTime": "1544", "U_Action": "", "U_Value": ""}, "params": null}', 'U_Response': '', 'U_Status': 'success', 'U_Reference': '', 'U_LogDate': '2025-07-09', 'U_LogTime': '1544', 'U_Action': 'sap_post', 'U_Value': 'SAP POST request to U_API_LOG'}, 'params': None}, 'response': None, 'status': None}
2025-07-09 15:44:35,976 - sync_service - ERROR - Error logging API call to SAP: maximum recursion depth exceeded while calling a Python object
2025-07-09 15:44:35,978 - sync_service - ERROR - Error logging API call to SAP: maximum recursion depth exceeded while calling a Python object
2025-07-09 15:44:35,979 - sync_service - ERROR - SAP request error: maximum recursion depth exceeded while calling a Python object
2025-07-09 15:44:35,980 - sync_service - ERROR - Error logging API call to SAP: maximum recursion depth exceeded while calling a Python object
2025-07-09 15:44:35,981 - sync_service - ERROR - Failed to add API log to SAP: SAP request error: maximum recursion depth exceeded while calling a Python object
2025-07-09 15:44:35,988 - sync_service - ERROR - SAP request error: maximum recursion depth exceeded while calling a Python object
2025-07-09 15:44:35,990 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'U_API_LOG', 'request': {'method': 'POST', 'url': 'https://10.0.0.100:50000/b1s/v1/U_API_LOG', 'data': {'U_Server': 'sap', 'U_EndPoint': 'U_API_LOG', 'U_Request': '', 'U_Response': '{"error": "SAP request error: maximum recursion depth exceeded while calling a Python object"}', 'U_Status': 'failure', 'U_Reference': '', 'U_LogDate': '2025-07-09', 'U_LogTime': '1544', 'U_Action': 'sap_post_exception', 'U_Value': 'SAP POST request exception to U_API_LOG: maximum recursion depth exceeded while calling a Python object'}, 'params': None}, 'response': None, 'status': None}
2025-07-09 15:44:35,993 - sync_service - ERROR - Error logging API call to SAP: maximum recursion depth exceeded while calling a Python object
2025-07-09 15:44:35,995 - sync_service - ERROR - Error logging API call to SAP: maximum recursion depth exceeded while calling a Python object
2025-07-09 15:44:35,997 - sync_service - ERROR - SAP request error: maximum recursion depth exceeded while calling a Python object
2025-07-09 15:44:36,000 - sync_service - ERROR - Error logging API call to SAP: maximum recursion depth exceeded while calling a Python object
2025-07-09 15:44:36,001 - sync_service - ERROR - Failed to add API log to SAP: SAP request error: maximum recursion depth exceeded while calling a Python object
2025-07-09 15:44:36,002 - sync_service - ERROR - Failed to add API log to SAP: SAP request error: maximum recursion depth exceeded while calling a Python object
2025-07-09 15:44:36,003 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'U_API_LOG', 'request': {'method': 'POST', 'url': 'https://10.0.0.100:50000/b1s/v1/U_API_LOG', 'data': {'U_Server': 'sap', 'U_EndPoint': 'U_API_LOG', 'U_Request': '{"method": "POST", "url": "https://10.0.0.100:50000/b1s/v1/U_API_LOG", "data": {"U_Server": "sap", "U_EndPoint": "U_API_LOG", "U_Request": "", "U_Response": "", "U_Status": "success", "U_Reference": "", "U_LogDate": "2025-07-09", "U_LogTime": "1544", "U_Action": "sap_post_success", "U_Value": "SAP POST request successful to U_API_LOG"}, "params": null}', 'U_Response': '', 'U_Status': 'success', 'U_Reference': '', 'U_LogDate': '2025-07-09', 'U_LogTime': '1544', 'U_Action': 'sap_post', 'U_Value': 'SAP POST request to U_API_LOG'}, 'params': None}, 'response': None, 'status': None}
2025-07-09 15:44:36,004 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'U_API_LOG', 'request': {'method': 'POST', 'url': 'https://10.0.0.100:50000/b1s/v1/U_API_LOG', 'data': {'U_Server': 'sap', 'U_EndPoint': 'U_API_LOG', 'U_Request': '{"method": "POST", "url": "https://10.0.0.100:50000/b1s/v1/U_API_LOG", "data": {"U_Server": "sap", "U_EndPoint": "U_API_LOG", "U_Request": "{\\"method\\": \\"POST\\", \\"url\\": \\"https://10.0.0.100:50000/b1s/v1/U_API_LOG\\", \\"data\\": {\\"U_Server\\": \\"sap\\", \\"U_EndPoint\\": \\"U_API_LOG\\", \\"U_Request\\": \\"\\", \\"U_Response\\": \\"\\", \\"U_Status\\": \\"success\\", \\"U_Reference\\": \\"\\", \\"U_LogDate\\": \\"2025-07-09\\", \\"U_LogTime\\": \\"1544\\", \\"U_Action\\": \\"sap_post_success\\", \\"U_Value\\": \\"SAP POST request successful to U_API_LOG\\"}, \\"params\\": null}", "U_Response": "", "U_Status": "success", "U_Reference": "", "U_LogDate": "2025-07-09", "U_LogTime": "1544", "U_Action": "sap_post", "U_Value": "SAP POST request to U_API_LOG"}, "params": null}', 'U_Response': '', 'U_Status': 'success', 'U_Reference': '', 'U_LogDate': '2025-07-09', 'U_LogTime': '1544', 'U_Action': '', 'U_Value': ''}, 'params': None}, 'response': None, 'status': None}
2025-07-09 15:44:36,007 - sync_service - ERROR - Error logging API call to SAP: maximum recursion depth exceeded while calling a Python object
2025-07-09 15:44:36,009 - sync_service - ERROR - Error logging API call to SAP: maximum recursion depth exceeded while calling a Python object
2025-07-09 15:44:36,010 - sync_service - ERROR - SAP request error: maximum recursion depth exceeded while calling a Python object
2025-07-09 15:44:36,011 - sync_service - ERROR - Error logging API call to SAP: maximum recursion depth exceeded while calling a Python object
2025-07-09 15:44:36,011 - sync_service - ERROR - Failed to add API log to SAP: SAP request error: maximum recursion depth exceeded while calling a Python object
2025-07-09 15:44:36,012 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'U_API_LOG', 'request': {'method': 'POST', 'url': 'https://10.0.0.100:50000/b1s/v1/U_API_LOG', 'data': {'U_Server': 'sap', 'U_EndPoint': 'U_API_LOG', 'U_Request': '{"method": "POST", "url": "https://10.0.0.100:50000/b1s/v1/U_API_LOG", "data": {"U_Server": "sap", "U_EndPoint": "U_API_LOG", "U_Request": "{\\"method\\": \\"POST\\", \\"url\\": \\"https://10.0.0.100:50000/b1s/v1/U_API_LOG\\", \\"data\\": {\\"U_Server\\": \\"sap\\", \\"U_EndPoint\\": \\"U_API_LOG\\", \\"U_Request\\": \\"\\", \\"U_Response\\": \\"\\", \\"U_Status\\": \\"success\\", \\"U_Reference\\": \\"\\", \\"U_LogDate\\": \\"2025-07-09\\", \\"U_LogTime\\": \\"1544\\", \\"U_Action\\": \\"sap_post_success\\", \\"U_Value\\": \\"SAP POST request successful to U_API_LOG\\"}, \\"params\\": null}", "U_Response": "", "U_Status": "success", "U_Reference": "", "U_LogDate": "2025-07-09", "U_LogTime": "1544", "U_Action": "sap_post", "U_Value": "SAP POST request to U_API_LOG"}, "params": null}', 'U_Response': '', 'U_Status': 'success', 'U_Reference': '', 'U_LogDate': '2025-07-09', 'U_LogTime': '1544', 'U_Action': 'sap_post', 'U_Value': 'SAP POST request to U_API_LOG'}, 'params': None}, 'response': None, 'status': None}
2025-07-09 15:44:36,013 - sync_service - ERROR - Error logging API call to SAP: maximum recursion depth exceeded while calling a Python object
2025-07-09 15:44:36,015 - sync_service - ERROR - Error logging API call to SAP: maximum recursion depth exceeded while calling a Python object
2025-07-09 15:44:36,017 - sync_service - ERROR - SAP request error: maximum recursion depth exceeded while calling a Python object
2025-07-09 15:44:36,020 - sync_service - ERROR - Error logging API call to SAP: maximum recursion depth exceeded while calling a Python object
2025-07-09 15:44:36,021 - sync_service - ERROR - Failed to add API log to SAP: SAP request error: maximum recursion depth exceeded while calling a Python object
2025-07-09 15:44:36,026 - sync_service - ERROR - SAP request error: maximum recursion depth exceeded while calling a Python object
2025-07-09 15:44:36,028 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'U_API_LOG', 'request': {'method': 'POST', 'url': 'https://10.0.0.100:50000/b1s/v1/U_API_LOG', 'data': {'U_Server': 'sap', 'U_EndPoint': 'U_API_LOG', 'U_Request': '', 'U_Response': '{"error": "SAP request error: maximum recursion depth exceeded while calling a Python object"}', 'U_Status': 'failure', 'U_Reference': '', 'U_LogDate': '2025-07-09', 'U_LogTime': '1544', 'U_Action': 'sap_post_exception', 'U_Value': 'SAP POST request exception to U_API_LOG: maximum recursion depth exceeded while calling a Python object'}, 'params': None}, 'response': None, 'status': None}
2025-07-09 15:44:36,028 - sync_service - ERROR - Error logging API call to SAP: maximum recursion depth exceeded while calling a Python object
2025-07-09 15:44:36,029 - sync_service - ERROR - Error logging API call to SAP: maximum recursion depth exceeded while calling a Python object
2025-07-09 15:44:36,031 - sync_service - ERROR - SAP request error: maximum recursion depth exceeded while calling a Python object
2025-07-09 15:44:36,034 - sync_service - ERROR - Error logging API call to SAP: maximum recursion depth exceeded while calling a Python object
2025-07-09 15:44:36,035 - sync_service - ERROR - Failed to add API log to SAP: SAP request error: maximum recursion depth exceeded while calling a Python object
2025-07-09 15:44:36,036 - sync_service - ERROR - Failed to add API log to SAP: SAP request error: maximum recursion depth exceeded while calling a Python object
2025-07-09 15:44:36,260 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'U_API_LOG', 'request': None, 'response': None, 'status': 'success'}
2025-07-09 15:44:36,261 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'U_API_LOG', 'request': {'method': 'POST', 'url': 'https://10.0.0.100:50000/b1s/v1/U_API_LOG', 'data': {'U_Server': 'sap', 'U_EndPoint': 'U_API_LOG', 'U_Request': '', 'U_Response': '', 'U_Status': 'success', 'U_Reference': '', 'U_LogDate': '2025-07-09', 'U_LogTime': '1544', 'U_Action': '', 'U_Value': ''}, 'params': None}, 'response': None, 'status': None}
2025-07-09 15:44:36,263 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'U_API_LOG', 'request': {'method': 'POST', 'url': 'https://10.0.0.100:50000/b1s/v1/U_API_LOG', 'data': {'U_Server': 'sap', 'U_EndPoint': 'U_API_LOG', 'U_Request': '{"method": "POST", "url": "https://10.0.0.100:50000/b1s/v1/U_API_LOG", "data": {"U_Server": "sap", "U_EndPoint": "U_API_LOG", "U_Request": "", "U_Response": "", "U_Status": "success", "U_Reference": "", "U_LogDate": "2025-07-09", "U_LogTime": "1544", "U_Action": "", "U_Value": ""}, "params": null}', 'U_Response': '', 'U_Status': 'success', 'U_Reference': '', 'U_LogDate': '2025-07-09', 'U_LogTime': '1544', 'U_Action': '', 'U_Value': ''}, 'params': None}, 'response': None, 'status': None}
2025-07-09 15:44:36,268 - sync_service - ERROR - Error logging API call to SAP: maximum recursion depth exceeded while calling a Python object
2025-07-09 15:44:36,272 - sync_service - ERROR - Error logging API call to SAP: maximum recursion depth exceeded while calling a Python object
2025-07-09 15:44:36,274 - sync_service - ERROR - SAP request error: maximum recursion depth exceeded while calling a Python object
2025-07-09 15:44:36,276 - sync_service - ERROR - Error logging API call to SAP: maximum recursion depth exceeded while calling a Python object
2025-07-09 15:44:36,277 - sync_service - ERROR - Failed to add API log to SAP: SAP request error: maximum recursion depth exceeded while calling a Python object
2025-07-09 15:44:36,277 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'U_API_LOG', 'request': {'method': 'POST', 'url': 'https://10.0.0.100:50000/b1s/v1/U_API_LOG', 'data': {'U_Server': 'sap', 'U_EndPoint': 'U_API_LOG', 'U_Request': '{"method": "POST", "url": "https://10.0.0.100:50000/b1s/v1/U_API_LOG", "data": {"U_Server": "sap", "U_EndPoint": "U_API_LOG", "U_Request": "", "U_Response": "", "U_Status": "success", "U_Reference": "", "U_LogDate": "2025-07-09", "U_LogTime": "1544", "U_Action": "", "U_Value": ""}, "params": null}', 'U_Response': '', 'U_Status': 'success', 'U_Reference': '', 'U_LogDate': '2025-07-09', 'U_LogTime': '1544', 'U_Action': 'sap_post', 'U_Value': 'SAP POST request to U_API_LOG'}, 'params': None}, 'response': None, 'status': None}
2025-07-09 15:44:36,279 - sync_service - ERROR - Error logging API call to SAP: maximum recursion depth exceeded while calling a Python object
2025-07-09 15:44:36,280 - sync_service - ERROR - Error logging API call to SAP: maximum recursion depth exceeded while calling a Python object
2025-07-09 15:44:36,282 - sync_service - ERROR - SAP request error: maximum recursion depth exceeded while calling a Python object
2025-07-09 15:44:36,284 - sync_service - ERROR - Error logging API call to SAP: maximum recursion depth exceeded while calling a Python object
2025-07-09 15:44:36,285 - sync_service - ERROR - Failed to add API log to SAP: SAP request error: maximum recursion depth exceeded while calling a Python object
2025-07-09 15:44:36,290 - sync_service - ERROR - SAP request error: maximum recursion depth exceeded while calling a Python object
2025-07-09 15:44:36,291 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'U_API_LOG', 'request': {'method': 'POST', 'url': 'https://10.0.0.100:50000/b1s/v1/U_API_LOG', 'data': {'U_Server': 'sap', 'U_EndPoint': 'U_API_LOG', 'U_Request': '', 'U_Response': '{"error": "SAP request error: maximum recursion depth exceeded while calling a Python object"}', 'U_Status': 'failure', 'U_Reference': '', 'U_LogDate': '2025-07-09', 'U_LogTime': '1544', 'U_Action': 'sap_post_exception', 'U_Value': 'SAP POST request exception to U_API_LOG: maximum recursion depth exceeded while calling a Python object'}, 'params': None}, 'response': None, 'status': None}
2025-07-09 15:44:36,293 - sync_service - ERROR - Error logging API call to SAP: maximum recursion depth exceeded while calling a Python object
2025-07-09 15:44:36,294 - sync_service - ERROR - Error logging API call to SAP: maximum recursion depth exceeded while calling a Python object
2025-07-09 15:44:36,295 - sync_service - ERROR - SAP request error: maximum recursion depth exceeded while calling a Python object
2025-07-09 15:44:36,296 - sync_service - ERROR - Error logging API call to SAP: maximum recursion depth exceeded while calling a Python object
2025-07-09 15:44:36,298 - sync_service - ERROR - Failed to add API log to SAP: SAP request error: maximum recursion depth exceeded while calling a Python object
2025-07-09 15:44:36,298 - sync_service - ERROR - Failed to add API log to SAP: SAP request error: maximum recursion depth exceeded while calling a Python object
2025-07-09 15:44:36,300 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'U_API_LOG', 'request': {'method': 'POST', 'url': 'https://10.0.0.100:50000/b1s/v1/U_API_LOG', 'data': {'U_Server': 'sap', 'U_EndPoint': 'U_API_LOG', 'U_Request': '', 'U_Response': '', 'U_Status': 'success', 'U_Reference': '', 'U_LogDate': '2025-07-09', 'U_LogTime': '1544', 'U_Action': 'sap_post_success', 'U_Value': 'SAP POST request successful to U_API_LOG'}, 'params': None}, 'response': None, 'status': None}
2025-07-09 15:44:36,301 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'U_API_LOG', 'request': {'method': 'POST', 'url': 'https://10.0.0.100:50000/b1s/v1/U_API_LOG', 'data': {'U_Server': 'sap', 'U_EndPoint': 'U_API_LOG', 'U_Request': '{"method": "POST", "url": "https://10.0.0.100:50000/b1s/v1/U_API_LOG", "data": {"U_Server": "sap", "U_EndPoint": "U_API_LOG", "U_Request": "", "U_Response": "", "U_Status": "success", "U_Reference": "", "U_LogDate": "2025-07-09", "U_LogTime": "1544", "U_Action": "sap_post_success", "U_Value": "SAP POST request successful to U_API_LOG"}, "params": null}', 'U_Response': '', 'U_Status': 'success', 'U_Reference': '', 'U_LogDate': '2025-07-09', 'U_LogTime': '1544', 'U_Action': '', 'U_Value': ''}, 'params': None}, 'response': None, 'status': None}
2025-07-09 15:44:36,303 - sync_service - ERROR - Error logging API call to SAP: maximum recursion depth exceeded while calling a Python object
2025-07-09 15:44:36,304 - sync_service - ERROR - Error logging API call to SAP: maximum recursion depth exceeded while calling a Python object
2025-07-09 15:44:36,306 - sync_service - ERROR - SAP request error: maximum recursion depth exceeded while calling a Python object
2025-07-09 15:44:36,309 - sync_service - ERROR - Error logging API call to SAP: maximum recursion depth exceeded while calling a Python object
2025-07-09 15:44:36,310 - sync_service - ERROR - Failed to add API log to SAP: SAP request error: maximum recursion depth exceeded while calling a Python object
2025-07-09 15:44:36,311 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'U_API_LOG', 'request': {'method': 'POST', 'url': 'https://10.0.0.100:50000/b1s/v1/U_API_LOG', 'data': {'U_Server': 'sap', 'U_EndPoint': 'U_API_LOG', 'U_Request': '{"method": "POST", "url": "https://10.0.0.100:50000/b1s/v1/U_API_LOG", "data": {"U_Server": "sap", "U_EndPoint": "U_API_LOG", "U_Request": "", "U_Response": "", "U_Status": "success", "U_Reference": "", "U_LogDate": "2025-07-09", "U_LogTime": "1544", "U_Action": "sap_post_success", "U_Value": "SAP POST request successful to U_API_LOG"}, "params": null}', 'U_Response': '', 'U_Status': 'success', 'U_Reference': '', 'U_LogDate': '2025-07-09', 'U_LogTime': '1544', 'U_Action': 'sap_post', 'U_Value': 'SAP POST request to U_API_LOG'}, 'params': None}, 'response': None, 'status': None}
2025-07-09 15:44:36,312 - sync_service - ERROR - Error logging API call to SAP: maximum recursion depth exceeded while calling a Python object
2025-07-09 15:44:36,319 - sync_service - ERROR - Error logging API call to SAP: maximum recursion depth exceeded while calling a Python object
2025-07-09 15:44:36,321 - sync_service - ERROR - SAP request error: maximum recursion depth exceeded while calling a Python object
2025-07-09 15:44:36,325 - sync_service - ERROR - Error logging API call to SAP: maximum recursion depth exceeded while calling a Python object
2025-07-09 15:44:36,326 - sync_service - ERROR - Failed to add API log to SAP: SAP request error: maximum recursion depth exceeded while calling a Python object
2025-07-09 15:44:36,328 - sync_service - ERROR - SAP request error: maximum recursion depth exceeded while calling a Python object
2025-07-09 15:44:36,329 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'U_API_LOG', 'request': {'method': 'POST', 'url': 'https://10.0.0.100:50000/b1s/v1/U_API_LOG', 'data': {'U_Server': 'sap', 'U_EndPoint': 'U_API_LOG', 'U_Request': '', 'U_Response': '{"error": "SAP request error: maximum recursion depth exceeded while calling a Python object"}', 'U_Status': 'failure', 'U_Reference': '', 'U_LogDate': '2025-07-09', 'U_LogTime': '1544', 'U_Action': 'sap_post_exception', 'U_Value': 'SAP POST request exception to U_API_LOG: maximum recursion depth exceeded while calling a Python object'}, 'params': None}, 'response': None, 'status': None}
2025-07-09 15:44:36,331 - sync_service - ERROR - Error logging API call to SAP: maximum recursion depth exceeded while calling a Python object
2025-07-09 15:44:36,332 - sync_service - ERROR - Error logging API call to SAP: maximum recursion depth exceeded while calling a Python object
2025-07-09 15:44:36,334 - sync_service - ERROR - SAP request error: maximum recursion depth exceeded while calling a Python object
2025-07-09 15:44:36,336 - sync_service - ERROR - Error logging API call to SAP: maximum recursion depth exceeded while calling a Python object
2025-07-09 15:44:36,337 - sync_service - ERROR - Failed to add API log to SAP: SAP request error: maximum recursion depth exceeded while calling a Python object
2025-07-09 15:44:36,337 - sync_service - ERROR - Failed to add API log to SAP: SAP request error: maximum recursion depth exceeded while calling a Python object
2025-07-09 15:44:36,340 - sync_service - INFO - API log added to SAP: sap - U_API_LOG - success
2025-07-09 15:44:36,344 - sync_service - INFO - API log added to SAP: sap - login - success
2025-07-09 15:44:36,344 - sync_service - INFO - SAP login successful
2025-07-09 15:44:36,346 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'U_API_LOG', 'request': {'method': 'POST', 'url': 'https://10.0.0.100:50000/b1s/v1/U_API_LOG', 'data': {'U_Server': 'sap', 'U_EndPoint': 'login', 'U_Request': '{"company": "JudeBenHalim_Test", "user": "manager"}', 'U_Response': '', 'U_Status': 'success', 'U_Reference': '', 'U_LogDate': '2025-07-09', 'U_LogTime': '1544', 'U_Action': '', 'U_Value': ''}, 'params': None}, 'response': None, 'status': None}
2025-07-09 15:44:36,350 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'U_API_LOG', 'request': {'method': 'POST', 'url': 'https://10.0.0.100:50000/b1s/v1/U_API_LOG', 'data': {'U_Server': 'sap', 'U_EndPoint': 'U_API_LOG', 'U_Request': '{"method": "POST", "url": "https://10.0.0.100:50000/b1s/v1/U_API_LOG", "data": {"U_Server": "sap", "U_EndPoint": "login", "U_Request": "{\\"company\\": \\"JudeBenHalim_Test\\", \\"user\\": \\"manager\\"}", "U_Response": "", "U_Status": "success", "U_Reference": "", "U_LogDate": "2025-07-09", "U_LogTime": "1544", "U_Action": "", "U_Value": ""}, "params": null}', 'U_Response': '', 'U_Status': 'success', 'U_Reference': '', 'U_LogDate': '2025-07-09', 'U_LogTime': '1544', 'U_Action': '', 'U_Value': ''}, 'params': None}, 'response': None, 'status': None}
2025-07-09 15:44:36,352 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'U_API_LOG', 'request': {'method': 'POST', 'url': 'https://10.0.0.100:50000/b1s/v1/U_API_LOG', 'data': {'U_Server': 'sap', 'U_EndPoint': 'U_API_LOG', 'U_Request': '{"method": "POST", "url": "https://10.0.0.100:50000/b1s/v1/U_API_LOG", "data": {"U_Server": "sap", "U_EndPoint": "U_API_LOG", "U_Request": "{\\"method\\": \\"POST\\", \\"url\\": \\"https://10.0.0.100:50000/b1s/v1/U_API_LOG\\", \\"data\\": {\\"U_Server\\": \\"sap\\", \\"U_EndPoint\\": \\"login\\", \\"U_Request\\": \\"{\\\\\\"company\\\\\\": \\\\\\"JudeBenHalim_Test\\\\\\", \\\\\\"user\\\\\\": \\\\\\"manager\\\\\\"}\\", \\"U_Response\\": \\"\\", \\"U_Status\\": \\"success\\", \\"U_Reference\\": \\"\\", \\"U_LogDate\\": \\"2025-07-09\\", \\"U_LogTime\\": \\"1544\\", \\"U_Action\\": \\"\\", \\"U_Value\\": \\"\\"}, \\"params\\": null}", "U_Response": "", "U_Status": "success", "U_Reference": "", "U_LogDate": "2025-07-09", "U_LogTime": "1544", "U_Action": "", "U_Value": ""}, "params": null}', 'U_Response': '', 'U_Status': 'success', 'U_Reference': '', 'U_LogDate': '2025-07-09', 'U_LogTime': '1544', 'U_Action': '', 'U_Value': ''}, 'params': None}, 'response': None, 'status': None}
2025-07-09 15:44:36,354 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'U_API_LOG', 'request': {'method': 'POST', 'url': 'https://10.0.0.100:50000/b1s/v1/U_API_LOG', 'data': {'U_Server': 'sap', 'U_EndPoint': 'U_API_LOG', 'U_Request': '{"method": "POST", "url": "https://10.0.0.100:50000/b1s/v1/U_API_LOG", "data": {"U_Server": "sap", "U_EndPoint": "U_API_LOG", "U_Request": "{\\"method\\": \\"POST\\", \\"url\\": \\"https://10.0.0.100:50000/b1s/v1/U_API_LOG\\", \\"data\\": {\\"U_Server\\": \\"sap\\", \\"U_EndPoint\\": \\"U_API_LOG\\", \\"U_Request\\": \\"{\\\\\\"method\\\\\\": \\\\\\"POST\\\\\\", \\\\\\"url\\\\\\": \\\\\\"https://10.0.0.100:50000/b1s/v1/U_API_LOG\\\\\\", \\\\\\"data\\\\\\": {\\\\\\"U_Server\\\\\\": \\\\\\"sap\\\\\\", \\\\\\"U_EndPoint\\\\\\": \\\\\\"login\\\\\\", \\\\\\"U_Request\\\\\\": \\\\\\"{\\\\\\\\\\\\\\"company\\\\\\\\\\\\\\": \\\\\\\\\\\\\\"JudeBenHalim_Test\\\\\\\\\\\\\\", \\\\\\\\\\\\\\"user\\\\\\\\\\\\\\": \\\\\\\\\\\\\\"manager\\\\\\\\\\\\\\"}\\\\\\", \\\\\\"U_Response\\\\\\": \\\\\\"\\\\\\", \\\\\\"U_Status\\\\\\": \\\\\\"success\\\\\\", \\\\\\"U_Reference\\\\\\": \\\\\\"\\\\\\", \\\\\\"U_LogDate\\\\\\": \\\\\\"2025-07-09\\\\\\", \\\\\\"U_LogTime\\\\\\": \\\\\\"1544\\\\\\", \\\\\\"U_Action\\\\\\": \\\\\\"\\\\\\", \\\\\\"U_Value\\\\\\": \\\\\\"\\\\\\"}, \\\\\\"params\\\\\\": null}\\", \\"U_Response\\": \\"\\", \\"U_Status\\": \\"success\\", \\"U_Reference\\": \\"\\", \\"U_LogDate\\": \\"2025-07-09\\", \\"U_LogTime\\": \\"1544\\", \\"U_Action\\": \\"\\", \\"U_Value\\": \\"\\"}, \\"params\\": null}", "U_Response": "", "U_Status": "success", "U_Reference": "", "U_LogDate": "2025-07-09", "U_LogTime": "1544", "U_Action": "", "U_Value": ""}, "params": null}', 'U_Response': '', 'U_Status': 'success', 'U_Reference': '', 'U_LogDate': '2025-07-09', 'U_LogTime': '1544', 'U_Action': '', 'U_Value': ''}, 'params': None}, 'response': None, 'status': None}
2025-07-09 15:44:36,356 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'U_API_LOG', 'request': {'method': 'POST', 'url': 'https://10.0.0.100:50000/b1s/v1/U_API_LOG', 'data': {'U_Server': 'sap', 'U_EndPoint': 'U_API_LOG', 'U_Request': '{"method": "POST", "url": "https://10.0.0.100:50000/b1s/v1/U_API_LOG", "data": {"U_Server": "sap", "U_EndPoint": "U_API_LOG", "U_Request": "{\\"method\\": \\"POST\\", \\"url\\": \\"https://10.0.0.100:50000/b1s/v1/U_API_LOG\\", \\"data\\": {\\"U_Server\\": \\"sap\\", \\"U_EndPoint\\": \\"U_API_LOG\\", \\"U_Request\\": \\"{\\\\\\"method\\\\\\": \\\\\\"POST\\\\\\", \\\\\\"url\\\\\\": \\\\\\"https://10.0.0.100:50000/b1s/v1/U_API_LOG\\\\\\", \\\\\\"data\\\\\\": {\\\\\\"U_Server\\\\\\": \\\\\\"sap\\\\\\", \\\\\\"U_EndPoint\\\\\\": \\\\\\"U_API_LOG\\\\\\", \\\\\\"U_Request\\\\\\": \\\\\\"{\\\\\\\\\\\\\\"method\\\\\\\\\\\\\\": \\\\\\\\\\\\\\"POST\\\\\\\\\\\\\\", \\\\\\\\\\\\\\"url\\\\\\\\\\\\\\": \\\\\\\\\\\\\\"https://10.0.0.100:50000/b1s/v1/U_API_LOG\\\\\\\\\\\\\\", \\\\\\\\\\\\\\"data\\\\\\\\\\\\\\": {\\\\\\\\\\\\\\"U_Server\\\\\\\\\\\\\\": \\\\\\\\\\\\\\"sap\\\\\\\\\\\\\\", \\\\\\\\\\\\\\"U_EndPoint\\\\\\\\\\\\\\": \\\\\\\\\\\\\\"login\\\\\\\\\\\\\\", \\\\\\\\\\\\\\"U_Request\\\\\\\\\\\\\\": \\\\\\\\\\\\\\"{\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"company\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\": \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"JudeBenHalim_Test\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\", \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"user\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\": \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"manager\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"}\\\\\\\\\\\\\\", \\\\\\\\\\\\\\"U_Response\\\\\\\\\\\\\\": \\\\\\\\\\\\\\"\\\\\\\\\\\\\\", \\\\\\\\\\\\\\"U_Status\\\\\\\\\\\\\\": \\\\\\\\\\\\\\"success\\\\\\\\\\\\\\", \\\\\\\\\\\\\\"U_Reference\\\\\\\\\\\\\\": \\\\\\\\\\\\\\"\\\\\\\\\\\\\\", \\\\\\\\\\\\\\"U_LogDate\\\\\\\\\\\\\\": \\\\\\\\\\\\\\"2025-07-09\\\\\\\\\\\\\\", \\\\\\\\\\\\\\"U_LogTime\\\\\\\\\\\\\\": \\\\\\\\\\\\\\"1544\\\\\\\\\\\\\\", \\\\\\\\\\\\\\"U_Action\\\\\\\\\\\\\\": \\\\\\\\\\\\\\"\\\\\\\\\\\\\\", \\\\\\\\\\\\\\"U_Value\\\\\\\\\\\\\\": \\\\\\\\\\\\\\"\\\\\\\\\\\\\\"}, \\\\\\\\\\\\\\"params\\\\\\\\\\\\\\": null}\\\\\\", \\\\\\"U_Response\\\\\\": \\\\\\"\\\\\\", \\\\\\"U_Status\\\\\\": \\\\\\"success\\\\\\", \\\\\\"U_Reference\\\\\\": \\\\\\"\\\\\\", \\\\\\"U_LogDate\\\\\\": \\\\\\"2025-07-09\\\\\\", \\\\\\"U_LogTime\\\\\\": \\\\\\"1544\\\\\\", \\\\\\"U_Action\\\\\\": \\\\\\"\\\\\\", \\\\\\"U_Value\\\\\\": \\\\\\"\\\\\\"}, \\\\\\"params\\\\\\": null}\\", \\"U_Response\\": \\"\\", \\"U_Status\\": \\"success\\", \\"U_Reference\\": \\"\\", \\"U_LogDate\\": \\"2025-07-09\\", \\"U_LogTime\\": \\"1544\\", \\"U_Action\\": \\"\\", \\"U_Value\\": \\"\\"}, \\"params\\": null}", "U_Response": "", "U_Status": "success", "U_Reference": "", "U_LogDate": "2025-07-09", "U_LogTime": "1544", "U_Action": "", "U_Value": ""}, "params": null}', 'U_Response': '', 'U_Status': 'success', 'U_Reference': '', 'U_LogDate': '2025-07-09', 'U_LogTime': '1544', 'U_Action': '', 'U_Value': ''}, 'params': None}, 'response': None, 'status': None}
2025-07-09 15:44:44,378 - sync_service - ERROR - Error logging API call to SAP: RetryError[<Future at 0x1f1e9273d60 state=finished raised RecursionError>]
2025-07-09 15:44:52,403 - sync_service - ERROR - Error logging API call to SAP: RetryError[<Future at 0x1f1e9272cb0 state=finished raised RecursionError>]
2025-07-09 15:44:52,407 - sync_service - ERROR - SAP request error: maximum recursion depth exceeded
2025-07-09 15:45:00,431 - sync_service - ERROR - Error logging API call to SAP: RetryError[<Future at 0x1f1e9271150 state=finished raised RecursionError>]
2025-07-09 15:45:00,434 - sync_service - ERROR - Failed to add API log to SAP: SAP request error: maximum recursion depth exceeded
2025-07-09 15:45:00,438 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'U_API_LOG', 'request': {'method': 'POST', 'url': 'https://10.0.0.100:50000/b1s/v1/U_API_LOG', 'data': {'U_Server': 'sap', 'U_EndPoint': 'U_API_LOG', 'U_Request': '{"method": "POST", "url": "https://10.0.0.100:50000/b1s/v1/U_API_LOG", "data": {"U_Server": "sap", "U_EndPoint": "U_API_LOG", "U_Request": "{\\"method\\": \\"POST\\", \\"url\\": \\"https://10.0.0.100:50000/b1s/v1/U_API_LOG\\", \\"data\\": {\\"U_Server\\": \\"sap\\", \\"U_EndPoint\\": \\"U_API_LOG\\", \\"U_Request\\": \\"{\\\\\\"method\\\\\\": \\\\\\"POST\\\\\\", \\\\\\"url\\\\\\": \\\\\\"https://10.0.0.100:50000/b1s/v1/U_API_LOG\\\\\\", \\\\\\"data\\\\\\": {\\\\\\"U_Server\\\\\\": \\\\\\"sap\\\\\\", \\\\\\"U_EndPoint\\\\\\": \\\\\\"U_API_LOG\\\\\\", \\\\\\"U_Request\\\\\\": \\\\\\"{\\\\\\\\\\\\\\"method\\\\\\\\\\\\\\": \\\\\\\\\\\\\\"POST\\\\\\\\\\\\\\", \\\\\\\\\\\\\\"url\\\\\\\\\\\\\\": \\\\\\\\\\\\\\"https://10.0.0.100:50000/b1s/v1/U_API_LOG\\\\\\\\\\\\\\", \\\\\\\\\\\\\\"data\\\\\\\\\\\\\\": {\\\\\\\\\\\\\\"U_Server\\\\\\\\\\\\\\": \\\\\\\\\\\\\\"sap\\\\\\\\\\\\\\", \\\\\\\\\\\\\\"U_EndPoint\\\\\\\\\\\\\\": \\\\\\\\\\\\\\"login\\\\\\\\\\\\\\", \\\\\\\\\\\\\\"U_Request\\\\\\\\\\\\\\": \\\\\\\\\\\\\\"{\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"company\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\": \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"JudeBenHalim_Test\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\", \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"user\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\": \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"manager\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"}\\\\\\\\\\\\\\", \\\\\\\\\\\\\\"U_Response\\\\\\\\\\\\\\": \\\\\\\\\\\\\\"\\\\\\\\\\\\\\", \\\\\\\\\\\\\\"U_Status\\\\\\\\\\\\\\": \\\\\\\\\\\\\\"success\\\\\\\\\\\\\\", \\\\\\\\\\\\\\"U_Reference\\\\\\\\\\\\\\": \\\\\\\\\\\\\\"\\\\\\\\\\\\\\", \\\\\\\\\\\\\\"U_LogDate\\\\\\\\\\\\\\": \\\\\\\\\\\\\\"2025-07-09\\\\\\\\\\\\\\", \\\\\\\\\\\\\\"U_LogTime\\\\\\\\\\\\\\": \\\\\\\\\\\\\\"1544\\\\\\\\\\\\\\", \\\\\\\\\\\\\\"U_Action\\\\\\\\\\\\\\": \\\\\\\\\\\\\\"\\\\\\\\\\\\\\", \\\\\\\\\\\\\\"U_Value\\\\\\\\\\\\\\": \\\\\\\\\\\\\\"\\\\\\\\\\\\\\"}, \\\\\\\\\\\\\\"params\\\\\\\\\\\\\\": null}\\\\\\", \\\\\\"U_Response\\\\\\": \\\\\\"\\\\\\", \\\\\\"U_Status\\\\\\": \\\\\\"success\\\\\\", \\\\\\"U_Reference\\\\\\": \\\\\\"\\\\\\", \\\\\\"U_LogDate\\\\\\": \\\\\\"2025-07-09\\\\\\", \\\\\\"U_LogTime\\\\\\": \\\\\\"1544\\\\\\", \\\\\\"U_Action\\\\\\": \\\\\\"\\\\\\", \\\\\\"U_Value\\\\\\": \\\\\\"\\\\\\"}, \\\\\\"params\\\\\\": null}\\", \\"U_Response\\": \\"\\", \\"U_Status\\": \\"success\\", \\"U_Reference\\": \\"\\", \\"U_LogDate\\": \\"2025-07-09\\", \\"U_LogTime\\": \\"1544\\", \\"U_Action\\": \\"\\", \\"U_Value\\": \\"\\"}, \\"params\\": null}", "U_Response": "", "U_Status": "success", "U_Reference": "", "U_LogDate": "2025-07-09", "U_LogTime": "1544", "U_Action": "", "U_Value": ""}, "params": null}', 'U_Response': '', 'U_Status': 'success', 'U_Reference': '', 'U_LogDate': '2025-07-09', 'U_LogTime': '1545', 'U_Action': 'sap_post', 'U_Value': 'SAP POST request to U_API_LOG'}, 'params': None}, 'response': None, 'status': None}
2025-07-09 15:45:08,475 - sync_service - ERROR - Error logging API call to SAP: RetryError[<Future at 0x1f1e9273340 state=finished raised RecursionError>]
2025-07-09 15:45:16,512 - sync_service - ERROR - Error logging API call to SAP: RetryError[<Future at 0x1f1e9273370 state=finished raised RecursionError>]
2025-07-09 15:45:16,515 - sync_service - ERROR - SAP request error: maximum recursion depth exceeded
2025-07-09 15:45:24,544 - sync_service - ERROR - Error logging API call to SAP: RetryError[<Future at 0x1f1e9272e90 state=finished raised RecursionError>]
2025-07-09 15:45:24,544 - sync_service - ERROR - Failed to add API log to SAP: SAP request error: maximum recursion depth exceeded
2025-07-09 15:45:24,551 - sync_service - ERROR - SAP request error: maximum recursion depth exceeded while calling a Python object
2025-07-09 15:45:24,553 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'U_API_LOG', 'request': {'method': 'POST', 'url': 'https://10.0.0.100:50000/b1s/v1/U_API_LOG', 'data': {'U_Server': 'sap', 'U_EndPoint': 'U_API_LOG', 'U_Request': '', 'U_Response': '{"error": "SAP request error: maximum recursion depth exceeded while calling a Python object"}', 'U_Status': 'failure', 'U_Reference': '', 'U_LogDate': '2025-07-09', 'U_LogTime': '1545', 'U_Action': 'sap_post_exception', 'U_Value': 'SAP POST request exception to U_API_LOG: maximum recursion depth exceeded while calling a Python object'}, 'params': None}, 'response': None, 'status': None}
2025-07-09 15:45:32,579 - sync_service - ERROR - Error logging API call to SAP: RetryError[<Future at 0x1f1e9273700 state=finished raised RecursionError>]
2025-07-09 15:45:40,605 - sync_service - ERROR - Error logging API call to SAP: RetryError[<Future at 0x1f1e9273430 state=finished raised RecursionError>]
2025-07-09 15:45:40,610 - sync_service - ERROR - SAP request error: maximum recursion depth exceeded
2025-07-09 15:45:48,683 - sync_service - ERROR - Error logging API call to SAP: RetryError[<Future at 0x1f1e9272020 state=finished raised RecursionError>]
2025-07-09 15:45:48,685 - sync_service - ERROR - Failed to add API log to SAP: SAP request error: maximum recursion depth exceeded
2025-07-09 15:45:48,686 - sync_service - ERROR - Failed to add API log to SAP: SAP request error: maximum recursion depth exceeded while calling a Python object
2025-07-09 15:45:48,687 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'U_API_LOG', 'request': {'method': 'POST', 'url': 'https://10.0.0.100:50000/b1s/v1/U_API_LOG', 'data': {'U_Server': 'sap', 'U_EndPoint': 'U_API_LOG', 'U_Request': '{"method": "POST", "url": "https://10.0.0.100:50000/b1s/v1/U_API_LOG", "data": {"U_Server": "sap", "U_EndPoint": "U_API_LOG", "U_Request": "{\\"method\\": \\"POST\\", \\"url\\": \\"https://10.0.0.100:50000/b1s/v1/U_API_LOG\\", \\"data\\": {\\"U_Server\\": \\"sap\\", \\"U_EndPoint\\": \\"U_API_LOG\\", \\"U_Request\\": \\"{\\\\\\"method\\\\\\": \\\\\\"POST\\\\\\", \\\\\\"url\\\\\\": \\\\\\"https://10.0.0.100:50000/b1s/v1/U_API_LOG\\\\\\", \\\\\\"data\\\\\\": {\\\\\\"U_Server\\\\\\": \\\\\\"sap\\\\\\", \\\\\\"U_EndPoint\\\\\\": \\\\\\"login\\\\\\", \\\\\\"U_Request\\\\\\": \\\\\\"{\\\\\\\\\\\\\\"company\\\\\\\\\\\\\\": \\\\\\\\\\\\\\"JudeBenHalim_Test\\\\\\\\\\\\\\", \\\\\\\\\\\\\\"user\\\\\\\\\\\\\\": \\\\\\\\\\\\\\"manager\\\\\\\\\\\\\\"}\\\\\\", \\\\\\"U_Response\\\\\\": \\\\\\"\\\\\\", \\\\\\"U_Status\\\\\\": \\\\\\"success\\\\\\", \\\\\\"U_Reference\\\\\\": \\\\\\"\\\\\\", \\\\\\"U_LogDate\\\\\\": \\\\\\"2025-07-09\\\\\\", \\\\\\"U_LogTime\\\\\\": \\\\\\"1544\\\\\\", \\\\\\"U_Action\\\\\\": \\\\\\"\\\\\\", \\\\\\"U_Value\\\\\\": \\\\\\"\\\\\\"}, \\\\\\"params\\\\\\": null}\\", \\"U_Response\\": \\"\\", \\"U_Status\\": \\"success\\", \\"U_Reference\\": \\"\\", \\"U_LogDate\\": \\"2025-07-09\\", \\"U_LogTime\\": \\"1544\\", \\"U_Action\\": \\"\\", \\"U_Value\\": \\"\\"}, \\"params\\": null}", "U_Response": "", "U_Status": "success", "U_Reference": "", "U_LogDate": "2025-07-09", "U_LogTime": "1544", "U_Action": "", "U_Value": ""}, "params": null}', 'U_Response': '', 'U_Status': 'success', 'U_Reference': '', 'U_LogDate': '2025-07-09', 'U_LogTime': '1545', 'U_Action': 'sap_post', 'U_Value': 'SAP POST request to U_API_LOG'}, 'params': None}, 'response': None, 'status': None}
2025-07-09 15:45:48,689 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'U_API_LOG', 'request': {'method': 'POST', 'url': 'https://10.0.0.100:50000/b1s/v1/U_API_LOG', 'data': {'U_Server': 'sap', 'U_EndPoint': 'U_API_LOG', 'U_Request': '{"method": "POST", "url": "https://10.0.0.100:50000/b1s/v1/U_API_LOG", "data": {"U_Server": "sap", "U_EndPoint": "U_API_LOG", "U_Request": "{\\"method\\": \\"POST\\", \\"url\\": \\"https://10.0.0.100:50000/b1s/v1/U_API_LOG\\", \\"data\\": {\\"U_Server\\": \\"sap\\", \\"U_EndPoint\\": \\"U_API_LOG\\", \\"U_Request\\": \\"{\\\\\\"method\\\\\\": \\\\\\"POST\\\\\\", \\\\\\"url\\\\\\": \\\\\\"https://10.0.0.100:50000/b1s/v1/U_API_LOG\\\\\\", \\\\\\"data\\\\\\": {\\\\\\"U_Server\\\\\\": \\\\\\"sap\\\\\\", \\\\\\"U_EndPoint\\\\\\": \\\\\\"U_API_LOG\\\\\\", \\\\\\"U_Request\\\\\\": \\\\\\"{\\\\\\\\\\\\\\"method\\\\\\\\\\\\\\": \\\\\\\\\\\\\\"POST\\\\\\\\\\\\\\", \\\\\\\\\\\\\\"url\\\\\\\\\\\\\\": \\\\\\\\\\\\\\"https://10.0.0.100:50000/b1s/v1/U_API_LOG\\\\\\\\\\\\\\", \\\\\\\\\\\\\\"data\\\\\\\\\\\\\\": {\\\\\\\\\\\\\\"U_Server\\\\\\\\\\\\\\": \\\\\\\\\\\\\\"sap\\\\\\\\\\\\\\", \\\\\\\\\\\\\\"U_EndPoint\\\\\\\\\\\\\\": \\\\\\\\\\\\\\"login\\\\\\\\\\\\\\", \\\\\\\\\\\\\\"U_Request\\\\\\\\\\\\\\": \\\\\\\\\\\\\\"{\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"company\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\": \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"JudeBenHalim_Test\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\", \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"user\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\": \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"manager\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"}\\\\\\\\\\\\\\", \\\\\\\\\\\\\\"U_Response\\\\\\\\\\\\\\": \\\\\\\\\\\\\\"\\\\\\\\\\\\\\", \\\\\\\\\\\\\\"U_Status\\\\\\\\\\\\\\": \\\\\\\\\\\\\\"success\\\\\\\\\\\\\\", \\\\\\\\\\\\\\"U_Reference\\\\\\\\\\\\\\": \\\\\\\\\\\\\\"\\\\\\\\\\\\\\", \\\\\\\\\\\\\\"U_LogDate\\\\\\\\\\\\\\": \\\\\\\\\\\\\\"2025-07-09\\\\\\\\\\\\\\", \\\\\\\\\\\\\\"U_LogTime\\\\\\\\\\\\\\": \\\\\\\\\\\\\\"1544\\\\\\\\\\\\\\", \\\\\\\\\\\\\\"U_Action\\\\\\\\\\\\\\": \\\\\\\\\\\\\\"\\\\\\\\\\\\\\", \\\\\\\\\\\\\\"U_Value\\\\\\\\\\\\\\": \\\\\\\\\\\\\\"\\\\\\\\\\\\\\"}, \\\\\\\\\\\\\\"params\\\\\\\\\\\\\\": null}\\\\\\", \\\\\\"U_Response\\\\\\": \\\\\\"\\\\\\", \\\\\\"U_Status\\\\\\": \\\\\\"success\\\\\\", \\\\\\"U_Reference\\\\\\": \\\\\\"\\\\\\", \\\\\\"U_LogDate\\\\\\": \\\\\\"2025-07-09\\\\\\", \\\\\\"U_LogTime\\\\\\": \\\\\\"1544\\\\\\", \\\\\\"U_Action\\\\\\": \\\\\\"\\\\\\", \\\\\\"U_Value\\\\\\": \\\\\\"\\\\\\"}, \\\\\\"params\\\\\\": null}\\", \\"U_Response\\": \\"\\", \\"U_Status\\": \\"success\\", \\"U_Reference\\": \\"\\", \\"U_LogDate\\": \\"2025-07-09\\", \\"U_LogTime\\": \\"1544\\", \\"U_Action\\": \\"\\", \\"U_Value\\": \\"\\"}, \\"params\\": null}", "U_Response": "", "U_Status": "success", "U_Reference": "", "U_LogDate": "2025-07-09", "U_LogTime": "1545", "U_Action": "sap_post", "U_Value": "SAP POST request to U_API_LOG"}, "params": null}', 'U_Response': '', 'U_Status': 'success', 'U_Reference': '', 'U_LogDate': '2025-07-09', 'U_LogTime': '1545', 'U_Action': '', 'U_Value': ''}, 'params': None}, 'response': None, 'status': None}
2025-07-09 15:45:56,718 - sync_service - ERROR - Error logging API call to SAP: RetryError[<Future at 0x1f1e9272440 state=finished raised RecursionError>]
2025-07-09 15:46:04,738 - sync_service - ERROR - Error logging API call to SAP: RetryError[<Future at 0x1f1e9272860 state=finished raised RecursionError>]
2025-07-09 15:46:04,837 - sync_service - ERROR - SAP request error: maximum recursion depth exceeded
2025-07-09 15:46:12,879 - sync_service - ERROR - Error logging API call to SAP: RetryError[<Future at 0x1f1e92734f0 state=finished raised RecursionError>]
2025-07-09 15:46:12,880 - sync_service - ERROR - Failed to add API log to SAP: SAP request error: maximum recursion depth exceeded
2025-07-09 15:46:12,883 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'U_API_LOG', 'request': {'method': 'POST', 'url': 'https://10.0.0.100:50000/b1s/v1/U_API_LOG', 'data': {'U_Server': 'sap', 'U_EndPoint': 'U_API_LOG', 'U_Request': '{"method": "POST", "url": "https://10.0.0.100:50000/b1s/v1/U_API_LOG", "data": {"U_Server": "sap", "U_EndPoint": "U_API_LOG", "U_Request": "{\\"method\\": \\"POST\\", \\"url\\": \\"https://10.0.0.100:50000/b1s/v1/U_API_LOG\\", \\"data\\": {\\"U_Server\\": \\"sap\\", \\"U_EndPoint\\": \\"U_API_LOG\\", \\"U_Request\\": \\"{\\\\\\"method\\\\\\": \\\\\\"POST\\\\\\", \\\\\\"url\\\\\\": \\\\\\"https://10.0.0.100:50000/b1s/v1/U_API_LOG\\\\\\", \\\\\\"data\\\\\\": {\\\\\\"U_Server\\\\\\": \\\\\\"sap\\\\\\", \\\\\\"U_EndPoint\\\\\\": \\\\\\"U_API_LOG\\\\\\", \\\\\\"U_Request\\\\\\": \\\\\\"{\\\\\\\\\\\\\\"method\\\\\\\\\\\\\\": \\\\\\\\\\\\\\"POST\\\\\\\\\\\\\\", \\\\\\\\\\\\\\"url\\\\\\\\\\\\\\": \\\\\\\\\\\\\\"https://10.0.0.100:50000/b1s/v1/U_API_LOG\\\\\\\\\\\\\\", \\\\\\\\\\\\\\"data\\\\\\\\\\\\\\": {\\\\\\\\\\\\\\"U_Server\\\\\\\\\\\\\\": \\\\\\\\\\\\\\"sap\\\\\\\\\\\\\\", \\\\\\\\\\\\\\"U_EndPoint\\\\\\\\\\\\\\": \\\\\\\\\\\\\\"login\\\\\\\\\\\\\\", \\\\\\\\\\\\\\"U_Request\\\\\\\\\\\\\\": \\\\\\\\\\\\\\"{\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"company\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\": \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"JudeBenHalim_Test\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\", \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"user\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\": \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"manager\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"}\\\\\\\\\\\\\\", \\\\\\\\\\\\\\"U_Response\\\\\\\\\\\\\\": \\\\\\\\\\\\\\"\\\\\\\\\\\\\\", \\\\\\\\\\\\\\"U_Status\\\\\\\\\\\\\\": \\\\\\\\\\\\\\"success\\\\\\\\\\\\\\", \\\\\\\\\\\\\\"U_Reference\\\\\\\\\\\\\\": \\\\\\\\\\\\\\"\\\\\\\\\\\\\\", \\\\\\\\\\\\\\"U_LogDate\\\\\\\\\\\\\\": \\\\\\\\\\\\\\"2025-07-09\\\\\\\\\\\\\\", \\\\\\\\\\\\\\"U_LogTime\\\\\\\\\\\\\\": \\\\\\\\\\\\\\"1544\\\\\\\\\\\\\\", \\\\\\\\\\\\\\"U_Action\\\\\\\\\\\\\\": \\\\\\\\\\\\\\"\\\\\\\\\\\\\\", \\\\\\\\\\\\\\"U_Value\\\\\\\\\\\\\\": \\\\\\\\\\\\\\"\\\\\\\\\\\\\\"}, \\\\\\\\\\\\\\"params\\\\\\\\\\\\\\": null}\\\\\\", \\\\\\"U_Response\\\\\\": \\\\\\"\\\\\\", \\\\\\"U_Status\\\\\\": \\\\\\"success\\\\\\", \\\\\\"U_Reference\\\\\\": \\\\\\"\\\\\\", \\\\\\"U_LogDate\\\\\\": \\\\\\"2025-07-09\\\\\\", \\\\\\"U_LogTime\\\\\\": \\\\\\"1544\\\\\\", \\\\\\"U_Action\\\\\\": \\\\\\"\\\\\\", \\\\\\"U_Value\\\\\\": \\\\\\"\\\\\\"}, \\\\\\"params\\\\\\": null}\\", \\"U_Response\\": \\"\\", \\"U_Status\\": \\"success\\", \\"U_Reference\\": \\"\\", \\"U_LogDate\\": \\"2025-07-09\\", \\"U_LogTime\\": \\"1544\\", \\"U_Action\\": \\"\\", \\"U_Value\\": \\"\\"}, \\"params\\": null}", "U_Response": "", "U_Status": "success", "U_Reference": "", "U_LogDate": "2025-07-09", "U_LogTime": "1545", "U_Action": "sap_post", "U_Value": "SAP POST request to U_API_LOG"}, "params": null}', 'U_Response': '', 'U_Status': 'success', 'U_Reference': '', 'U_LogDate': '2025-07-09', 'U_LogTime': '1546', 'U_Action': 'sap_post', 'U_Value': 'SAP POST request to U_API_LOG'}, 'params': None}, 'response': None, 'status': None}
2025-07-09 15:46:20,921 - sync_service - ERROR - Error logging API call to SAP: RetryError[<Future at 0x1f1e9272110 state=finished raised RecursionError>]
2025-07-09 15:46:28,954 - sync_service - ERROR - Error logging API call to SAP: RetryError[<Future at 0x1f1e9273310 state=finished raised RecursionError>]
2025-07-09 15:46:28,957 - sync_service - ERROR - SAP request error: maximum recursion depth exceeded
2025-07-09 15:47:58,331 - sync_service - INFO - Initialized Shopify client for store: Local Store (local)
2025-07-09 15:48:09,923 - sync_service - INFO - Initialized Shopify client for store: Local Store (local)
2025-07-09 15:48:09,928 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'login', 'request': {'company': 'JudeBenHalim_Test', 'user': 'manager'}, 'response': None, 'status': None}
2025-07-09 15:48:30,197 - sync_service - INFO - SAP logging client login successful
2025-07-09 15:48:30,812 - sync_service - INFO - API log added to SAP: sap - login - success
2025-07-09 15:48:31,430 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'login', 'request': None, 'response': {'status': 'success'}, 'status': 'success'}
2025-07-09 15:48:31,628 - sync_service - INFO - API log added to SAP: sap - login - success
2025-07-09 15:48:31,630 - sync_service - INFO - SAP login successful
2025-07-09 15:48:31,631 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': "view.svc/MASHURA_New_ItemsB1SLQuery?$filter=Shopify_Store eq 'local'&$orderby=MainProduct", 'request': {'method': 'GET', 'url': "https://10.0.0.100:50000/b1s/v1/view.svc/MASHURA_New_ItemsB1SLQuery?$filter=Shopify_Store eq 'local'&$orderby=MainProduct", 'data': None, 'params': None}, 'response': None, 'status': None}
2025-07-09 15:48:31,757 - sync_service - INFO - API log added to SAP: sap - view.svc/MASHURA_New_ItemsB1SLQuery?$filter=Shopify_Store eq 'local'&$orderby=MainProduct - success
2025-07-09 15:48:31,858 - sync_service - INFO - API log added to SAP: sap - view.svc/MASHURA_New_ItemsB1SLQuery?$filter=Shopify_Store eq 'local'&$orderby=MainProduct - success
2025-07-09 15:48:32,051 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': "view.svc/MASHURA_New_ItemsB1SLQuery?$filter=Shopify_Store eq 'local'&$orderby=MainProduct", 'request': None, 'response': {'odata.metadata': 'https://10.0.0.100:50000/b1s/v1/view.svc/$metadata#MASHURA_New_ItemsB1SLQuery', 'value': [{'itemcode': 'FG-0000704', 'ItemName': 'Morsi-Green', 'MainProduct': 'Morsi Necklace', 'Color': 'Green', 'OnHand': 0.0, 'IsCommited': 0.0, 'Available': 0.0, 'Price': 2500.0, 'Status': 'existing', 'Shopify_ProductCode': '7510108733506', 'Shopify_Store': 'local', 'id__': 1}]}, 'status': 'success'}
2025-07-09 15:48:32,201 - sync_service - INFO - API log added to SAP: sap - view.svc/MASHURA_New_ItemsB1SLQuery?$filter=Shopify_Store eq 'local'&$orderby=MainProduct - success
2025-07-09 15:48:32,361 - sync_service - INFO - API log added to SAP: sap - view.svc/MASHURA_New_ItemsB1SLQuery?$filter=Shopify_Store eq 'local'&$orderby=MainProduct - success
2025-07-09 15:48:32,364 - sync_service - INFO - Product group: ('Morsi Necklace', 'local') has 1 items
2025-07-09 15:48:32,370 - sync_service - INFO - Starting multi-store new items sync from SAP to Shopify
2025-07-09 15:48:32,371 - sync_service - INFO - Fetching new items for store: local
2025-07-09 15:48:32,373 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': "view.svc/MASHURA_New_ItemsB1SLQuery?$filter=Shopify_Store eq 'local'&$orderby=MainProduct", 'request': {'method': 'GET', 'url': "https://10.0.0.100:50000/b1s/v1/view.svc/MASHURA_New_ItemsB1SLQuery?$filter=Shopify_Store eq 'local'&$orderby=MainProduct", 'data': None, 'params': None}, 'response': None, 'status': None}
2025-07-09 15:48:32,513 - sync_service - INFO - API log added to SAP: sap - view.svc/MASHURA_New_ItemsB1SLQuery?$filter=Shopify_Store eq 'local'&$orderby=MainProduct - success
2025-07-09 15:48:32,618 - sync_service - INFO - API log added to SAP: sap - view.svc/MASHURA_New_ItemsB1SLQuery?$filter=Shopify_Store eq 'local'&$orderby=MainProduct - success
2025-07-09 15:48:33,121 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': "view.svc/MASHURA_New_ItemsB1SLQuery?$filter=Shopify_Store eq 'local'&$orderby=MainProduct", 'request': None, 'response': {'odata.metadata': 'https://10.0.0.100:50000/b1s/v1/view.svc/$metadata#MASHURA_New_ItemsB1SLQuery', 'value': [{'itemcode': 'FG-0000704', 'ItemName': 'Morsi-Green', 'MainProduct': 'Morsi Necklace', 'Color': 'Green', 'OnHand': 0.0, 'IsCommited': 0.0, 'Available': 0.0, 'Price': 2500.0, 'Status': 'existing', 'Shopify_ProductCode': '7510108733506', 'Shopify_Store': 'local', 'id__': 1}]}, 'status': 'success'}
2025-07-09 15:48:33,246 - sync_service - INFO - API log added to SAP: sap - view.svc/MASHURA_New_ItemsB1SLQuery?$filter=Shopify_Store eq 'local'&$orderby=MainProduct - success
2025-07-09 15:48:33,358 - sync_service - INFO - API log added to SAP: sap - view.svc/MASHURA_New_ItemsB1SLQuery?$filter=Shopify_Store eq 'local'&$orderby=MainProduct - success
2025-07-09 15:48:33,361 - sync_service - INFO - Product group: ('Morsi Necklace', 'local') has 1 items
2025-07-09 15:48:33,363 - sync_service - INFO - Grouped 1 items into 1 product groups for store local
2025-07-09 15:48:33,372 - sync_service - INFO - Processing product group: ('Morsi Necklace', 'local') with 1 items for store local
2025-07-09 15:48:33,375 - sync_service - INFO - API Call: {'service': 'shopify', 'endpoint': 'graphql_local', 'request': {'query': '\n        mutation productCreate($input: ProductInput!) {\n            productCreate(input: $input) {\n                product {\n                    id\n                    title\n                    handle\n                    variants(first: 50) {\n                        edges {\n                            node {\n                                id\n                                sku\n                                inventoryItem {\n                                    id\n                                }\n                                selectedOptions {\n                                    name\n                                    value\n                                }\n                            }\n                        }\n                    }\n                }\n                userErrors {\n                    field\n                    message\n                }\n            }\n        }\n        ', 'variables': {'input': {'title': 'Morsi-Green', 'descriptionHtml': '', 'vendor': '', 'productType': 'Default', 'status': 'DRAFT', 'tags': [], 'variants': [{'sku': 'FG-0000704', 'price': '2500.0', 'inventoryPolicy': 'DENY', 'inventoryManagement': 'SHOPIFY', 'inventoryQuantities': [{'availableQuantity': 10, 'locationId': 'gid://shopify/Location/68605345858'}], 'weight': 0.0, 'weightUnit': 'KILOGRAMS', 'option1': 'Green'}], 'seo': {'title': 'Morsi-Green', 'description': ''}}}}, 'response': None, 'status': None}
2025-07-09 15:48:33,470 - sync_service - INFO - API log added to SAP: shopify - graphql_local - success
2025-07-09 15:48:33,582 - sync_service - ERROR - Failed to add API log to SAP: HTTP 400: {
   "error" : {
      "code" : -1,
      "message" : {
         "lang" : "en-us",
         "value" : "CServiceData::SetPropertyValueString failed; Value too long in property 'U_Action' of 'U_API_LOG'"
      }
   }
}

2025-07-09 15:48:43,613 - sync_service - ERROR - GraphQL query error for store local: 
2025-07-09 15:48:43,728 - sync_service - ERROR - Failed to add API log to SAP: HTTP 400: {
   "error" : {
      "code" : -1,
      "message" : {
         "lang" : "en-us",
         "value" : "CServiceData::SetPropertyValueString failed; Value too long in property 'U_Action' of 'U_API_LOG'"
      }
   }
}

2025-07-09 15:48:43,730 - sync_service - ERROR - Failed to create product in store local: GraphQL query error for store local: 
2025-07-09 15:48:44,239 - sync_service - INFO - Sync Event: {'sync_type': 'multi_store_new_items_sap_to_shopify', 'items_processed': 1, 'success_count': 0, 'error_count': 1, 'details': None}
2025-07-09 15:48:44,241 - sync_service - INFO - Multi-store new items sync completed: 1 processed, 0 successful, 1 errors
2025-07-09 15:48:44,244 - sync_service - INFO - Product group: ('TEST-PRODUCT', 'store1') has 1 items
2025-07-09 15:53:09,977 - sync_service - INFO - Initialized Shopify client for store: Local Store (local)
2025-07-09 15:53:14,161 - sync_service - INFO - Initialized Shopify client for store: Local Store (local)
2025-07-09 15:53:14,167 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'login', 'request': {'company': 'JudeBenHalim_Test', 'user': 'manager'}, 'response': None, 'status': None}
2025-07-09 15:53:14,169 - sync_service - ERROR - SAP login error: object NoneType can't be used in 'await' expression
2025-07-09 15:53:14,171 - sync_service - INFO - Product group: ('TEST-PRODUCT', 'store1') has 1 items
2025-07-09 15:53:18,841 - sync_service - INFO - Initialized Shopify client for store: Local Store (local)
2025-07-09 15:53:18,849 - sync_service - INFO - Starting multi-store new items sync from SAP to Shopify
2025-07-09 15:53:19,402 - sync_service - INFO - SAP logging client login successful
2025-07-09 15:53:20,006 - sync_service - INFO - API log added to SAP: system - /sync/new_items_multi_store - success
2025-07-09 15:53:20,008 - sync_service - INFO - Fetching new items for store: local
2025-07-09 15:53:20,009 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'login', 'request': {'company': 'JudeBenHalim_Test', 'user': 'manager'}, 'response': None, 'status': None}
2025-07-09 15:53:20,009 - sync_service - ERROR - SAP login error: object NoneType can't be used in 'await' expression
2025-07-09 15:53:20,013 - sync_service - ERROR - Failed to get new items from SAP for store local: Failed to login to SAP
2025-07-09 15:53:20,014 - sync_service - INFO - Sync Event: {'sync_type': 'multi_store_new_items_sap_to_shopify', 'items_processed': 0, 'success_count': 0, 'error_count': 0, 'details': None}
2025-07-09 15:53:20,258 - sync_service - INFO - API log added to SAP: system - /sync/new_items_multi_store - success
2025-07-09 15:53:20,306 - sync_service - INFO - Multi-store new items sync completed: 0 processed, 0 successful, 0 errors
2025-07-09 15:54:28,231 - sync_service - INFO - Initialized Shopify client for store: Local Store (local)
2025-07-09 15:54:28,241 - sync_service - INFO - Starting multi-store new items sync from SAP to Shopify
2025-07-09 15:54:28,879 - sync_service - INFO - SAP logging client login successful
2025-07-09 15:54:29,596 - sync_service - INFO - API log added to SAP: system - /sync/new_items_multi_store - success
2025-07-09 15:54:29,596 - sync_service - INFO - Fetching new items for store: local
2025-07-09 15:54:29,596 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'login', 'request': {'company': 'JudeBenHalim_Test', 'user': 'manager'}, 'response': None, 'status': None}
2025-07-09 15:54:30,129 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'login', 'request': None, 'response': {'status': 'success'}, 'status': 'success'}
2025-07-09 15:54:30,129 - sync_service - INFO - SAP login successful
2025-07-09 15:54:30,131 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': "view.svc/MASHURA_New_ItemsB1SLQuery?$filter=Shopify_Store eq 'local'&$orderby=MainProduct", 'request': {'method': 'GET', 'url': "https://10.0.0.100:50000/b1s/v1/view.svc/MASHURA_New_ItemsB1SLQuery?$filter=Shopify_Store eq 'local'&$orderby=MainProduct", 'data': None, 'params': None}, 'response': None, 'status': None}
2025-07-09 15:54:30,639 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': "view.svc/MASHURA_New_ItemsB1SLQuery?$filter=Shopify_Store eq 'local'&$orderby=MainProduct", 'request': None, 'response': {'odata.metadata': 'https://10.0.0.100:50000/b1s/v1/view.svc/$metadata#MASHURA_New_ItemsB1SLQuery', 'value': [{'itemcode': 'FG-0000704', 'ItemName': 'Morsi-Green', 'MainProduct': 'Morsi Necklace', 'Color': 'Green', 'OnHand': 0.0, 'IsCommited': 0.0, 'Available': 0.0, 'Price': 2500.0, 'Status': 'existing', 'Shopify_ProductCode': '7510108733506', 'Shopify_Store': 'local', 'id__': 1}]}, 'status': 'success'}
2025-07-09 15:54:30,643 - sync_service - INFO - Product group: ('Morsi Necklace', 'local') has 1 items
2025-07-09 15:54:30,646 - sync_service - INFO - Grouped 1 items into 1 product groups for store local
2025-07-09 15:54:30,647 - sync_service - INFO - Processing product group: ('Morsi Necklace', 'local') with 1 items for store local
2025-07-09 15:54:30,787 - sync_service - INFO - API log added to SAP: shopify - /admin/api/graphql_local - success
2025-07-09 15:54:30,789 - sync_service - INFO - API Call: {'service': 'shopify', 'endpoint': 'graphql_local', 'request': {'query': '\n        mutation productCreate($input: ProductInput!) {\n            productCreate(input: $input) {\n                product {\n                    id\n                    title\n                    handle\n                    variants(first: 50) {\n                        edges {\n                            node {\n                                id\n                                sku\n                                inventoryItem {\n                                    id\n                                }\n                                selectedOptions {\n                                    name\n                                    value\n                                }\n                            }\n                        }\n                    }\n                }\n                userErrors {\n                    field\n                    message\n                }\n            }\n        }\n        ', 'variables': {'input': {'title': 'Morsi-Green', 'descriptionHtml': '', 'vendor': '', 'productType': 'Default', 'status': 'DRAFT', 'tags': [], 'variants': [{'sku': 'FG-0000704', 'price': '2500.0', 'inventoryPolicy': 'DENY', 'inventoryManagement': 'SHOPIFY', 'inventoryQuantities': [{'availableQuantity': 10, 'locationId': 'gid://shopify/Location/68605345858'}], 'weight': 0.0, 'weightUnit': 'KILOGRAMS', 'option1': 'Green'}], 'seo': {'title': 'Morsi-Green', 'description': ''}}}}, 'response': None, 'status': None}
2025-07-09 15:54:31,261 - sync_service - ERROR - GraphQL query error for store local: {'message': 'Variable $input of type ProductInput! was provided invalid value for variants.0.option1 (Field is not defined on ProductVariantInput)', 'locations': [{'line': 1, 'column': 24}], 'extensions': {'value': {'title': 'Morsi-Green', 'descriptionHtml': '', 'vendor': '', 'productType': 'Default', 'status': 'DRAFT', 'tags': [], 'variants': [{'sku': 'FG-0000704', 'price': '2500.0', 'inventoryPolicy': 'DENY', 'inventoryManagement': 'SHOPIFY', 'inventoryQuantities': [{'availableQuantity': 10, 'locationId': 'gid://shopify/Location/68605345858'}], 'weight': 0.0, 'weightUnit': 'KILOGRAMS', 'option1': 'Green'}], 'seo': {'title': 'Morsi-Green', 'description': ''}}, 'problems': [{'path': ['variants', 0, 'option1'], 'explanation': 'Field is not defined on ProductVariantInput'}]}}
GraphQL Errors: [
  {
    "message": "Variable $input of type ProductInput! was provided invalid value for variants.0.option1 (Field is not defined on ProductVariantInput)",
    "locations": [
      {
        "line": 1,
        "column": 24
      }
    ],
    "extensions": {
      "value": {
        "title": "Morsi-Green",
        "descriptionHtml": "",
        "vendor": "",
        "productType": "Default",
        "status": "DRAFT",
        "tags": [],
        "variants": [
          {
            "sku": "FG-0000704",
            "price": "2500.0",
            "inventoryPolicy": "DENY",
            "inventoryManagement": "SHOPIFY",
            "inventoryQuantities": [
              {
                "availableQuantity": 10,
                "locationId": "gid://shopify/Location/68605345858"
              }
            ],
            "weight": 0.0,
            "weightUnit": "KILOGRAMS",
            "option1": "Green"
          }
        ],
        "seo": {
          "title": "Morsi-Green",
          "description": ""
        }
      },
      "problems": [
        {
          "path": [
            "variants",
            0,
            "option1"
          ],
          "explanation": "Field is not defined on ProductVariantInput"
        }
      ]
    }
  }
]
2025-07-09 15:54:31,263 - sync_service - ERROR - Shopify full response for store local: {'msg': 'failure', 'error': 'GraphQL query error for store local: {\'message\': \'Variable $input of type ProductInput! was provided invalid value for variants.0.option1 (Field is not defined on ProductVariantInput)\', \'locations\': [{\'line\': 1, \'column\': 24}], \'extensions\': {\'value\': {\'title\': \'Morsi-Green\', \'descriptionHtml\': \'\', \'vendor\': \'\', \'productType\': \'Default\', \'status\': \'DRAFT\', \'tags\': [], \'variants\': [{\'sku\': \'FG-0000704\', \'price\': \'2500.0\', \'inventoryPolicy\': \'DENY\', \'inventoryManagement\': \'SHOPIFY\', \'inventoryQuantities\': [{\'availableQuantity\': 10, \'locationId\': \'gid://shopify/Location/68605345858\'}], \'weight\': 0.0, \'weightUnit\': \'KILOGRAMS\', \'option1\': \'Green\'}], \'seo\': {\'title\': \'Morsi-Green\', \'description\': \'\'}}, \'problems\': [{\'path\': [\'variants\', 0, \'option1\'], \'explanation\': \'Field is not defined on ProductVariantInput\'}]}}\nGraphQL Errors: [\n  {\n    "message": "Variable $input of type ProductInput! was provided invalid value for variants.0.option1 (Field is not defined on ProductVariantInput)",\n    "locations": [\n      {\n        "line": 1,\n        "column": 24\n      }\n    ],\n    "extensions": {\n      "value": {\n        "title": "Morsi-Green",\n        "descriptionHtml": "",\n        "vendor": "",\n        "productType": "Default",\n        "status": "DRAFT",\n        "tags": [],\n        "variants": [\n          {\n            "sku": "FG-0000704",\n            "price": "2500.0",\n            "inventoryPolicy": "DENY",\n            "inventoryManagement": "SHOPIFY",\n            "inventoryQuantities": [\n              {\n                "availableQuantity": 10,\n                "locationId": "gid://shopify/Location/68605345858"\n              }\n            ],\n            "weight": 0.0,\n            "weightUnit": "KILOGRAMS",\n            "option1": "Green"\n          }\n        ],\n        "seo": {\n          "title": "Morsi-Green",\n          "description": ""\n        }\n      },\n      "problems": [\n        {\n          "path": [\n            "variants",\n            0,\n            "option1"\n          ],\n          "explanation": "Field is not defined on ProductVariantInput"\n        }\n      ]\n    }\n  }\n]'}
2025-07-09 15:54:31,395 - sync_service - ERROR - Failed to add API log to SAP: HTTP 400: {
   "error" : {
      "code" : -1,
      "message" : {
         "lang" : "en-us",
         "value" : "CServiceData::SetPropertyValueString failed; Value too long in property 'U_Value' of 'U_API_LOG'"
      }
   }
}

2025-07-09 15:54:31,396 - sync_service - ERROR - Failed to create product in store local: GraphQL query error for store local: {'message': 'Variable $input of type ProductInput! was provided invalid value for variants.0.option1 (Field is not defined on ProductVariantInput)', 'locations': [{'line': 1, 'column': 24}], 'extensions': {'value': {'title': 'Morsi-Green', 'descriptionHtml': '', 'vendor': '', 'productType': 'Default', 'status': 'DRAFT', 'tags': [], 'variants': [{'sku': 'FG-0000704', 'price': '2500.0', 'inventoryPolicy': 'DENY', 'inventoryManagement': 'SHOPIFY', 'inventoryQuantities': [{'availableQuantity': 10, 'locationId': 'gid://shopify/Location/68605345858'}], 'weight': 0.0, 'weightUnit': 'KILOGRAMS', 'option1': 'Green'}], 'seo': {'title': 'Morsi-Green', 'description': ''}}, 'problems': [{'path': ['variants', 0, 'option1'], 'explanation': 'Field is not defined on ProductVariantInput'}]}}
GraphQL Errors: [
  {
    "message": "Variable $input of type ProductInput! was provided invalid value for variants.0.option1 (Field is not defined on ProductVariantInput)",
    "locations": [
      {
        "line": 1,
        "column": 24
      }
    ],
    "extensions": {
      "value": {
        "title": "Morsi-Green",
        "descriptionHtml": "",
        "vendor": "",
        "productType": "Default",
        "status": "DRAFT",
        "tags": [],
        "variants": [
          {
            "sku": "FG-0000704",
            "price": "2500.0",
            "inventoryPolicy": "DENY",
            "inventoryManagement": "SHOPIFY",
            "inventoryQuantities": [
              {
                "availableQuantity": 10,
                "locationId": "gid://shopify/Location/68605345858"
              }
            ],
            "weight": 0.0,
            "weightUnit": "KILOGRAMS",
            "option1": "Green"
          }
        ],
        "seo": {
          "title": "Morsi-Green",
          "description": ""
        }
      },
      "problems": [
        {
          "path": [
            "variants",
            0,
            "option1"
          ],
          "explanation": "Field is not defined on ProductVariantInput"
        }
      ]
    }
  }
]
2025-07-09 15:54:31,912 - sync_service - INFO - Sync Event: {'sync_type': 'multi_store_new_items_sap_to_shopify', 'items_processed': 1, 'success_count': 0, 'error_count': 1, 'details': None}
2025-07-09 15:54:32,044 - sync_service - INFO - API log added to SAP: system - /sync/new_items_multi_store - success
2025-07-09 15:54:32,046 - sync_service - INFO - Multi-store new items sync completed: 1 processed, 0 successful, 1 errors
2025-07-09 15:58:35,325 - sync_service - INFO - Initialized Shopify client for store: Local Store (local)
2025-07-09 15:58:35,332 - sync_service - INFO - Starting multi-store new items sync from SAP to Shopify
2025-07-09 15:58:35,940 - sync_service - INFO - SAP logging client login successful
2025-07-09 15:58:36,770 - sync_service - INFO - API log added to SAP: system - /sync/new_items_multi_store - success
2025-07-09 15:58:36,772 - sync_service - INFO - Fetching new items for store: local
2025-07-09 15:58:36,773 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'login', 'request': {'company': 'JudeBenHalim_Test', 'user': 'manager'}, 'response': None, 'status': None}
2025-07-09 15:58:37,385 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'login', 'request': None, 'response': {'status': 'success'}, 'status': 'success'}
2025-07-09 15:58:37,386 - sync_service - INFO - SAP login successful
2025-07-09 15:58:37,389 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': "view.svc/MASHURA_New_ItemsB1SLQuery?$filter=Shopify_Store eq 'local'&$orderby=MainProduct", 'request': {'method': 'GET', 'url': "https://10.0.0.100:50000/b1s/v1/view.svc/MASHURA_New_ItemsB1SLQuery?$filter=Shopify_Store eq 'local'&$orderby=MainProduct", 'data': None, 'params': None}, 'response': None, 'status': None}
2025-07-09 15:58:37,908 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': "view.svc/MASHURA_New_ItemsB1SLQuery?$filter=Shopify_Store eq 'local'&$orderby=MainProduct", 'request': None, 'response': {'odata.metadata': 'https://10.0.0.100:50000/b1s/v1/view.svc/$metadata#MASHURA_New_ItemsB1SLQuery', 'value': [{'itemcode': 'FG-0000704', 'ItemName': 'Morsi-Green', 'MainProduct': 'Morsi Necklace', 'Color': 'Green', 'OnHand': 0.0, 'IsCommited': 0.0, 'Available': 0.0, 'Price': 2500.0, 'Status': 'existing', 'Shopify_ProductCode': '7510108733506', 'Shopify_Store': 'local', 'id__': 1}]}, 'status': 'success'}
2025-07-09 15:58:37,913 - sync_service - INFO - Product group: ('Morsi Necklace', 'local') has 1 items
2025-07-09 15:58:37,914 - sync_service - INFO - Grouped 1 items into 1 product groups for store local
2025-07-09 15:58:37,915 - sync_service - INFO - Processing product group: ('Morsi Necklace', 'local') with 1 items for store local
2025-07-09 15:58:38,092 - sync_service - ERROR - Failed to add API log to SAP: HTTP 400: {
   "error" : {
      "code" : -1,
      "message" : {
         "lang" : "en-us",
         "value" : "CServiceData::SetPropertyValueString failed; Value too long in property 'U_Action' of 'U_API_LOG'"
      }
   }
}

2025-07-09 15:58:38,094 - sync_service - INFO - API Call: {'service': 'shopify', 'endpoint': 'graphql_local', 'request': {'query': '\n        query GetProductByHandle($handle: String!) {\n            productByHandle(handle: $handle) {\n                id\n                title\n                handle\n                description\n                variants(first: 50) {\n                    edges {\n                        node {\n                            id\n                            sku\n                            price\n                            inventoryItem {\n                                id\n                            }\n                            selectedOptions {\n                                name\n                                value\n                            }\n                        }\n                    }\n                }\n            }\n        }\n        ', 'variables': {'handle': 'morsi-necklace'}}, 'response': None, 'status': None}
2025-07-09 15:58:38,510 - sync_service - INFO - API Call: {'service': 'shopify', 'endpoint': 'graphql_local', 'request': None, 'response': {'productByHandle': None}, 'status': 'success'}
2025-07-09 15:58:38,665 - sync_service - ERROR - Failed to add API log to SAP: HTTP 400: {
   "error" : {
      "code" : -1,
      "message" : {
         "lang" : "en-us",
         "value" : "CServiceData::SetPropertyValueString failed; Value too long in property 'U_Action' of 'U_API_LOG'"
      }
   }
}

2025-07-09 15:58:38,667 - sync_service - INFO - Product Morsi Necklace doesn't exist in store local, creating new product
2025-07-09 15:58:38,785 - sync_service - INFO - API log added to SAP: shopify - /admin/api/graphql_local - success
2025-07-09 15:58:38,786 - sync_service - INFO - API Call: {'service': 'shopify', 'endpoint': 'graphql_local', 'request': {'query': '\n        mutation productCreate($input: ProductInput!) {\n            productCreate(input: $input) {\n                product {\n                    id\n                    title\n                    handle\n                    variants(first: 50) {\n                        edges {\n                            node {\n                                id\n                                sku\n                                inventoryItem {\n                                    id\n                                }\n                                selectedOptions {\n                                    name\n                                    value\n                                }\n                            }\n                        }\n                    }\n                }\n                userErrors {\n                    field\n                    message\n                }\n            }\n        }\n        ', 'variables': {'input': {'title': 'Morsi-Green', 'descriptionHtml': '', 'vendor': '', 'productType': 'Default', 'status': 'DRAFT', 'tags': [], 'variants': [{'sku': 'FG-0000704', 'price': '2500.0', 'inventoryPolicy': 'DENY', 'inventoryManagement': 'SHOPIFY', 'inventoryQuantities': [{'availableQuantity': 10, 'locationId': 'gid://shopify/Location/68605345858'}], 'weight': 0.0, 'weightUnit': 'KILOGRAMS'}], 'seo': {'title': 'Morsi-Green', 'description': ''}}}}, 'response': None, 'status': None}
2025-07-09 15:58:39,493 - sync_service - INFO - API Call: {'service': 'shopify', 'endpoint': 'graphql_local', 'request': None, 'response': {'productCreate': {'product': {'id': 'gid://shopify/Product/7510766616642', 'title': 'Morsi-Green', 'handle': 'morsi-green', 'variants': {'edges': [{'node': {'id': 'gid://shopify/ProductVariant/42295121281090', 'sku': 'FG-0000704', 'inventoryItem': {'id': 'gid://shopify/InventoryItem/44396252233794'}, 'selectedOptions': [{'name': 'Title', 'value': 'Default Title'}]}}]}}, 'userErrors': []}}, 'status': 'success'}
2025-07-09 15:58:39,494 - sync_service - ERROR - Shopify full response for store local: {'msg': 'success', 'data': {'productCreate': {'product': {'id': 'gid://shopify/Product/7510766616642', 'title': 'Morsi-Green', 'handle': 'morsi-green', 'variants': {'edges': [{'node': {'id': 'gid://shopify/ProductVariant/42295121281090', 'sku': 'FG-0000704', 'inventoryItem': {'id': 'gid://shopify/InventoryItem/44396252233794'}, 'selectedOptions': [{'name': 'Title', 'value': 'Default Title'}]}}]}}, 'userErrors': []}}}
2025-07-09 15:58:39,902 - sync_service - INFO - API log added to SAP: shopify - /admin/api/graphql_local - success
2025-07-09 15:58:39,904 - sync_service - INFO - Successfully created product in store local
2025-07-09 15:58:40,014 - sync_service - INFO - API log added to SAP: sap - /U_SHOPIFY_MAPPING - success
2025-07-09 15:58:40,017 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'U_SHOPIFY_MAPPING', 'request': {'method': 'POST', 'url': 'https://10.0.0.100:50000/b1s/v1/U_SHOPIFY_MAPPING', 'data': {'Code': '7510766616642', 'Name': '7510766616642', 'U_Shopify_Type': 'product', 'U_SAP_Code': 'Morsi Necklace', 'U_Shopify_Store': 'local', 'U_SAP_Type': 'item'}, 'params': None}, 'response': None, 'status': None}
2025-07-09 15:58:40,151 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'U_SHOPIFY_MAPPING', 'request': None, 'response': {'odata.metadata': 'https://10.0.0.100:50000/b1s/v1/$metadata#U_SHOPIFY_MAPPING/@Element', 'Code': '7510766616642', 'Name': '7510766616642', 'U_Shopify_Type': 'product', 'U_SAP_Code': 'Morsi Necklace', 'U_SAP_Type': 'item', 'U_Shopify_Store': 'local'}, 'status': 'success'}
2025-07-09 15:58:40,315 - sync_service - INFO - API log added to SAP: sap - /U_SHOPIFY_MAPPING - success
2025-07-09 15:58:40,473 - sync_service - INFO - API log added to SAP: sap - /U_SHOPIFY_MAPPING - success
2025-07-09 15:58:40,474 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'U_SHOPIFY_MAPPING', 'request': {'method': 'POST', 'url': 'https://10.0.0.100:50000/b1s/v1/U_SHOPIFY_MAPPING', 'data': {'Code': '42295121281090', 'Name': '42295121281090', 'U_Shopify_Type': 'variant', 'U_SAP_Code': 'FG-0000704', 'U_Shopify_Store': 'local', 'U_SAP_Type': 'item'}, 'params': None}, 'response': None, 'status': None}
2025-07-09 15:58:40,649 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'U_SHOPIFY_MAPPING', 'request': None, 'response': {'odata.metadata': 'https://10.0.0.100:50000/b1s/v1/$metadata#U_SHOPIFY_MAPPING/@Element', 'Code': '42295121281090', 'Name': '42295121281090', 'U_Shopify_Type': 'variant', 'U_SAP_Code': 'FG-0000704', 'U_SAP_Type': 'item', 'U_Shopify_Store': 'local'}, 'status': 'success'}
2025-07-09 15:58:40,827 - sync_service - INFO - API log added to SAP: sap - /U_SHOPIFY_MAPPING - success
2025-07-09 15:58:40,984 - sync_service - ERROR - Failed to add API log to SAP: HTTP 400: {
   "error" : {
      "code" : -1,
      "message" : {
         "lang" : "en-us",
         "value" : "CServiceData::SetPropertyValueString failed; Value too long in property 'U_Action' of 'U_API_LOG'"
      }
   }
}

2025-07-09 15:58:40,985 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'U_SHOPIFY_MAPPING', 'request': {'method': 'POST', 'url': 'https://10.0.0.100:50000/b1s/v1/U_SHOPIFY_MAPPING', 'data': {'Code': '44396252233794', 'Name': '44396252233794', 'U_Shopify_Type': 'variant_inventory', 'U_SAP_Code': 'FG-0000704', 'U_Shopify_Store': 'local', 'U_SAP_Type': 'item'}, 'params': None}, 'response': None, 'status': None}
2025-07-09 15:58:41,127 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'U_SHOPIFY_MAPPING', 'request': None, 'response': {'odata.metadata': 'https://10.0.0.100:50000/b1s/v1/$metadata#U_SHOPIFY_MAPPING/@Element', 'Code': '44396252233794', 'Name': '44396252233794', 'U_Shopify_Type': 'variant_inventory', 'U_SAP_Code': 'FG-0000704', 'U_SAP_Type': 'item', 'U_Shopify_Store': 'local'}, 'status': 'success'}
2025-07-09 15:58:41,242 - sync_service - ERROR - Failed to add API log to SAP: HTTP 400: {
   "error" : {
      "code" : -1,
      "message" : {
         "lang" : "en-us",
         "value" : "CServiceData::SetPropertyValueString failed; Value too long in property 'U_Action' of 'U_API_LOG'"
      }
   }
}

2025-07-09 15:58:41,758 - sync_service - INFO - Sync Event: {'sync_type': 'multi_store_new_items_sap_to_shopify', 'items_processed': 1, 'success_count': 1, 'error_count': 0, 'details': None}
2025-07-09 15:58:41,858 - sync_service - INFO - API log added to SAP: system - /sync/new_items_multi_store - success
2025-07-09 15:58:41,859 - sync_service - INFO - Multi-store new items sync completed: 1 processed, 1 successful, 0 errors
2025-07-09 16:01:38,961 - sync_service - INFO - Initialized Shopify client for store: Local Store (local)
2025-07-09 16:01:38,970 - sync_service - INFO - Starting multi-store new items sync from SAP to Shopify
2025-07-09 16:01:39,631 - sync_service - INFO - SAP logging client login successful
2025-07-09 16:01:40,226 - sync_service - INFO - API log added to SAP: system - /sync/new_items_multi_store - success
2025-07-09 16:01:40,227 - sync_service - INFO - Fetching new items for store: local
2025-07-09 16:01:40,228 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'login', 'request': {'company': 'JudeBenHalim_Test', 'user': 'manager'}, 'response': None, 'status': None}
2025-07-09 16:01:40,823 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'login', 'request': None, 'response': {'status': 'success'}, 'status': 'success'}
2025-07-09 16:01:40,824 - sync_service - INFO - SAP login successful
2025-07-09 16:01:40,826 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': "view.svc/MASHURA_New_ItemsB1SLQuery?$filter=Shopify_Store eq 'local'&$orderby=MainProduct", 'request': {'method': 'GET', 'url': "https://10.0.0.100:50000/b1s/v1/view.svc/MASHURA_New_ItemsB1SLQuery?$filter=Shopify_Store eq 'local'&$orderby=MainProduct", 'data': None, 'params': None}, 'response': None, 'status': None}
2025-07-09 16:01:41,359 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': "view.svc/MASHURA_New_ItemsB1SLQuery?$filter=Shopify_Store eq 'local'&$orderby=MainProduct", 'request': None, 'response': {'odata.metadata': 'https://10.0.0.100:50000/b1s/v1/view.svc/$metadata#MASHURA_New_ItemsB1SLQuery', 'value': []}, 'status': 'success'}
2025-07-09 16:01:41,360 - sync_service - INFO - No new items found in SAP for store local
2025-07-09 16:01:41,363 - sync_service - INFO - Sync Event: {'sync_type': 'multi_store_new_items_sap_to_shopify', 'items_processed': 0, 'success_count': 0, 'error_count': 0, 'details': None}
2025-07-09 16:01:41,774 - sync_service - INFO - API log added to SAP: system - /sync/new_items_multi_store - success
2025-07-09 16:01:41,775 - sync_service - INFO - Multi-store new items sync completed: 0 processed, 0 successful, 0 errors
2025-07-09 16:02:02,146 - sync_service - INFO - Initialized Shopify client for store: Local Store (local)
2025-07-09 16:02:02,726 - sync_service - INFO - SAP logging client login successful
2025-07-09 16:02:03,272 - sync_service - INFO - API log added to SAP: system - /test/existing_product_variant - success
2025-07-09 16:02:03,364 - sync_service - INFO - API log added to SAP: system - /test/existing_product_variant - success
2025-07-09 16:02:27,966 - sync_service - INFO - Initialized Shopify client for store: Local Store (local)
2025-07-09 16:02:28,514 - sync_service - INFO - SAP logging client login successful
2025-07-09 16:02:29,006 - sync_service - INFO - API log added to SAP: system - /test/mock_existing_product - success
2025-07-09 16:02:29,103 - sync_service - INFO - API log added to SAP: system - /test/mock_existing_product - success
2025-07-09 16:05:24,695 - sync_service - INFO - Initialized Shopify client for store: Local Store (local)
2025-07-09 16:05:24,702 - sync_service - INFO - Starting multi-store new items sync from SAP to Shopify
2025-07-09 16:05:25,401 - sync_service - INFO - SAP logging client login successful
2025-07-09 16:05:25,981 - sync_service - INFO - API log added to SAP: system - /sync/new_items_multi_store - success
2025-07-09 16:05:25,985 - sync_service - INFO - Fetching new items for store: local
2025-07-09 16:05:25,987 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'login', 'request': {'company': 'JudeBenHalim_Test', 'user': 'manager'}, 'response': None, 'status': None}
2025-07-09 16:05:26,526 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'login', 'request': None, 'response': {'status': 'success'}, 'status': 'success'}
2025-07-09 16:05:26,527 - sync_service - INFO - SAP login successful
2025-07-09 16:05:26,528 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': "view.svc/MASHURA_New_ItemsB1SLQuery?$filter=Shopify_Store eq 'local'&$orderby=MainProduct", 'request': {'method': 'GET', 'url': "https://10.0.0.100:50000/b1s/v1/view.svc/MASHURA_New_ItemsB1SLQuery?$filter=Shopify_Store eq 'local'&$orderby=MainProduct", 'data': None, 'params': None}, 'response': None, 'status': None}
2025-07-09 16:05:27,361 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': "view.svc/MASHURA_New_ItemsB1SLQuery?$filter=Shopify_Store eq 'local'&$orderby=MainProduct", 'request': None, 'response': {'odata.metadata': 'https://10.0.0.100:50000/b1s/v1/view.svc/$metadata#MASHURA_New_ItemsB1SLQuery', 'value': [{'itemcode': 'FG-0000704', 'ItemName': 'Morsi-Green', 'MainProduct': 'Morsi Necklace', 'Color': 'Green', 'OnHand': 0.0, 'IsCommited': 0.0, 'Available': 0.0, 'Price': 2500.0, 'Status': 'existing', 'Shopify_ProductCode': '7510108733506', 'Shopify_Store': 'local', 'id__': 1}]}, 'status': 'success'}
2025-07-09 16:05:27,363 - sync_service - INFO - Product group: ('Morsi Necklace', 'local') has 1 items
2025-07-09 16:05:27,364 - sync_service - INFO - Grouped 1 items into 1 product groups for store local
2025-07-09 16:05:27,366 - sync_service - INFO - Processing product group: ('Morsi Necklace', 'local') with 1 items for store local
2025-07-09 16:05:27,371 - sync_service - INFO - Found existing Shopify product ID: 7510108733506 for Morsi Necklace
2025-07-09 16:05:27,373 - sync_service - INFO - Product Morsi Necklace already exists in store local, adding variants
2025-07-09 16:05:27,536 - sync_service - ERROR - Failed to add API log to SAP: HTTP 400: {
   "error" : {
      "code" : -1,
      "message" : {
         "lang" : "en-us",
         "value" : "CServiceData::SetPropertyValueString failed; Value too long in property 'U_Action' of 'U_API_LOG'"
      }
   }
}

2025-07-09 16:05:27,538 - sync_service - INFO - API Call: {'service': 'shopify', 'endpoint': 'graphql_local', 'request': {'query': '\n        mutation productVariantCreate($input: ProductVariantInput!) {\n            productVariantCreate(input: $input) {\n                productVariant {\n                    id\n                    sku\n                    price\n                    inventoryItem {\n                        id\n                    }\n                    selectedOptions {\n                        name\n                        value\n                    }\n                }\n                userErrors {\n                    field\n                    message\n                }\n            }\n        }\n        ', 'variables': {'input': {'sku': 'FG-0000704', 'price': '2500.0', 'inventoryPolicy': 'DENY', 'inventoryManagement': 'SHOPIFY', 'inventoryQuantities': [{'availableQuantity': 10, 'locationId': 'gid://shopify/Location/68605345858'}], 'weight': 0.0, 'weightUnit': 'KILOGRAMS', 'productId': 'gid://shopify/Product/7510108733506'}}}, 'response': None, 'status': None}
2025-07-09 16:05:37,533 - sync_service - ERROR - GraphQL query error for store local: 
2025-07-09 16:05:37,689 - sync_service - ERROR - Failed to add API log to SAP: HTTP 400: {
   "error" : {
      "code" : -1,
      "message" : {
         "lang" : "en-us",
         "value" : "CServiceData::SetPropertyValueString failed; Value too long in property 'U_Action' of 'U_API_LOG'"
      }
   }
}

2025-07-09 16:05:37,693 - sync_service - ERROR - Failed to add variant FG-0000704: GraphQL query error for store local: 
2025-07-09 16:05:37,806 - sync_service - INFO - API log added to SAP: sap - /U_SHOPIFY_MAPPING - success
2025-07-09 16:05:37,810 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'U_SHOPIFY_MAPPING', 'request': {'method': 'POST', 'url': 'https://10.0.0.100:50000/b1s/v1/U_SHOPIFY_MAPPING', 'data': {'Code': '7510108733506', 'Name': '7510108733506', 'U_Shopify_Type': 'product', 'U_SAP_Code': 'Morsi Necklace', 'U_Shopify_Store': 'local', 'U_SAP_Type': 'item'}, 'params': None}, 'response': None, 'status': None}
2025-07-09 16:05:37,965 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'U_SHOPIFY_MAPPING', 'request': None, 'response': {'status_code': 400, 'text': '{\n   "error" : {\n      "code" : -2035,\n      "message" : {\n         "lang" : "en-us",\n         "value" : "This entry already exists in the following tables (ODBC -2035)"\n      }\n   }\n}\n'}, 'status': 'failure'}
2025-07-09 16:05:38,123 - sync_service - INFO - API log added to SAP: sap - /U_SHOPIFY_MAPPING - failure
2025-07-09 16:05:38,626 - sync_service - INFO - Sync Event: {'sync_type': 'multi_store_new_items_sap_to_shopify', 'items_processed': 1, 'success_count': 0, 'error_count': 1, 'details': None}
2025-07-09 16:05:38,791 - sync_service - INFO - API log added to SAP: system - /sync/new_items_multi_store - success
2025-07-09 16:05:38,807 - sync_service - INFO - Multi-store new items sync completed: 1 processed, 0 successful, 1 errors
2025-07-09 16:08:27,632 - sync_service - INFO - Initialized Shopify client for store: Local Store (local)
2025-07-09 16:08:27,646 - sync_service - INFO - Starting multi-store new items sync from SAP to Shopify
2025-07-09 16:08:28,303 - sync_service - INFO - SAP logging client login successful
2025-07-09 16:08:28,967 - sync_service - INFO - API log added to SAP: system - /sync/new_items_multi_store - success
2025-07-09 16:08:28,969 - sync_service - INFO - Fetching new items for store: local
2025-07-09 16:08:28,971 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'login', 'request': {'company': 'JudeBenHalim_Test', 'user': 'manager'}, 'response': None, 'status': None}
2025-07-09 16:08:29,562 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'login', 'request': None, 'response': {'status': 'success'}, 'status': 'success'}
2025-07-09 16:08:29,563 - sync_service - INFO - SAP login successful
2025-07-09 16:08:29,563 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': "view.svc/MASHURA_New_ItemsB1SLQuery?$filter=Shopify_Store eq 'local'&$orderby=MainProduct", 'request': {'method': 'GET', 'url': "https://10.0.0.100:50000/b1s/v1/view.svc/MASHURA_New_ItemsB1SLQuery?$filter=Shopify_Store eq 'local'&$orderby=MainProduct", 'data': None, 'params': None}, 'response': None, 'status': None}
2025-07-09 16:08:30,125 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': "view.svc/MASHURA_New_ItemsB1SLQuery?$filter=Shopify_Store eq 'local'&$orderby=MainProduct", 'request': None, 'response': {'odata.metadata': 'https://10.0.0.100:50000/b1s/v1/view.svc/$metadata#MASHURA_New_ItemsB1SLQuery', 'value': [{'itemcode': 'FG-0000704', 'ItemName': 'Morsi-Green', 'MainProduct': 'Morsi Necklace', 'Color': 'Green', 'OnHand': 0.0, 'IsCommited': 0.0, 'Available': 0.0, 'Price': 2500.0, 'Status': 'existing', 'Shopify_ProductCode': '7510108733506', 'Shopify_Store': 'local', 'id__': 1}]}, 'status': 'success'}
2025-07-09 16:08:30,128 - sync_service - INFO - Product group: ('Morsi Necklace', 'local') has 1 items
2025-07-09 16:08:30,129 - sync_service - INFO - Grouped 1 items into 1 product groups for store local
2025-07-09 16:08:30,129 - sync_service - INFO - Processing product group: ('Morsi Necklace', 'local') with 1 items for store local
2025-07-09 16:08:30,130 - sync_service - INFO - Found existing Shopify product ID: 7510108733506 for Morsi Necklace
2025-07-09 16:08:30,130 - sync_service - INFO - Product Morsi Necklace already exists in store local, adding variants
2025-07-09 16:08:30,298 - sync_service - ERROR - Failed to add API log to SAP: HTTP 400: {
   "error" : {
      "code" : -1,
      "message" : {
         "lang" : "en-us",
         "value" : "CServiceData::SetPropertyValueString failed; Value too long in property 'U_Action' of 'U_API_LOG'"
      }
   }
}

2025-07-09 16:08:30,299 - sync_service - INFO - API Call: {'service': 'shopify', 'endpoint': 'graphql_local', 'request': {'query': '\n        mutation productVariantCreate($input: ProductVariantInput!) {\n            productVariantCreate(input: $input) {\n                productVariant {\n                    id\n                    sku\n                    price\n                    inventoryItem {\n                        id\n                    }\n                    selectedOptions {\n                        name\n                        value\n                    }\n                }\n                userErrors {\n                    field\n                    message\n                }\n            }\n        }\n        ', 'variables': {'input': {'sku': 'FG-0000704', 'price': '2500.0', 'inventoryPolicy': 'DENY', 'inventoryManagement': 'SHOPIFY', 'weight': 0.0, 'weightUnit': 'KILOGRAMS', 'productId': 'gid://shopify/Product/7510108733506'}}}, 'response': None, 'status': None}
2025-07-09 16:08:31,006 - sync_service - INFO - API Call: {'service': 'shopify', 'endpoint': 'graphql_local', 'request': None, 'response': {'productVariantCreate': {'productVariant': {'id': 'gid://shopify/ProductVariant/42295132028994', 'sku': 'FG-0000704', 'price': '2500.00', 'inventoryItem': {'id': 'gid://shopify/InventoryItem/44396262981698'}, 'selectedOptions': [{'name': 'Color', 'value': 'Default Title'}]}, 'userErrors': []}}, 'status': 'success'}
2025-07-09 16:08:31,231 - sync_service - ERROR - Failed to add API log to SAP: HTTP 400: {
   "error" : {
      "code" : -1,
      "message" : {
         "lang" : "en-us",
         "value" : "CServiceData::SetPropertyValueString failed; Value too long in property 'U_Action' of 'U_API_LOG'"
      }
   }
}

2025-07-09 16:08:31,231 - sync_service - INFO - API Call: {'service': 'shopify', 'endpoint': 'graphql_local', 'request': {'query': '\n        mutation inventoryAdjustQuantity($input: InventoryAdjustQuantityInput!) {\n            inventoryAdjustQuantity(input: $input) {\n                inventoryLevel {\n                    available\n                }\n                userErrors {\n                    field\n                    message\n                }\n            }\n        }\n        ', 'variables': {'input': {'inventoryItemId': 'gid://shopify/InventoryItem/44396262981698', 'availableDelta': 10}}}, 'response': None, 'status': None}
2025-07-09 16:08:31,647 - sync_service - ERROR - GraphQL query error for store local: {'message': "Field 'inventoryAdjustQuantity' doesn't exist on type 'Mutation'", 'locations': [{'line': 2, 'column': 3}], 'path': ['mutation inventoryAdjustQuantity', 'inventoryAdjustQuantity'], 'extensions': {'code': 'undefinedField', 'typeName': 'Mutation', 'fieldName': 'inventoryAdjustQuantity'}}
GraphQL Errors: [
  {
    "message": "Field 'inventoryAdjustQuantity' doesn't exist on type 'Mutation'",
    "locations": [
      {
        "line": 2,
        "column": 3
      }
    ],
    "path": [
      "mutation inventoryAdjustQuantity",
      "inventoryAdjustQuantity"
    ],
    "extensions": {
      "code": "undefinedField",
      "typeName": "Mutation",
      "fieldName": "inventoryAdjustQuantity"
    }
  },
  {
    "message": "Variable $input is declared by inventoryAdjustQuantity but not used",
    "locations": [
      {
        "line": 1,
        "column": 1
      }
    ],
    "path": [
      "mutation inventoryAdjustQuantity"
    ],
    "extensions": {
      "code": "variableNotUsed",
      "variableName": "input"
    }
  }
]
2025-07-09 16:08:31,881 - sync_service - ERROR - Failed to add API log to SAP: HTTP 400: {
   "error" : {
      "code" : -1,
      "message" : {
         "lang" : "en-us",
         "value" : "CServiceData::SetPropertyValueString failed; Value too long in property 'U_Value' of 'U_API_LOG'"
      }
   }
}

2025-07-09 16:08:31,883 - sync_service - WARNING - Failed to set inventory for variant FG-0000704: GraphQL query error for store local: {'message': "Field 'inventoryAdjustQuantity' doesn't exist on type 'Mutation'", 'locations': [{'line': 2, 'column': 3}], 'path': ['mutation inventoryAdjustQuantity', 'inventoryAdjustQuantity'], 'extensions': {'code': 'undefinedField', 'typeName': 'Mutation', 'fieldName': 'inventoryAdjustQuantity'}}
GraphQL Errors: [
  {
    "message": "Field 'inventoryAdjustQuantity' doesn't exist on type 'Mutation'",
    "locations": [
      {
        "line": 2,
        "column": 3
      }
    ],
    "path": [
      "mutation inventoryAdjustQuantity",
      "inventoryAdjustQuantity"
    ],
    "extensions": {
      "code": "undefinedField",
      "typeName": "Mutation",
      "fieldName": "inventoryAdjustQuantity"
    }
  },
  {
    "message": "Variable $input is declared by inventoryAdjustQuantity but not used",
    "locations": [
      {
        "line": 1,
        "column": 1
      }
    ],
    "path": [
      "mutation inventoryAdjustQuantity"
    ],
    "extensions": {
      "code": "variableNotUsed",
      "variableName": "input"
    }
  }
]
2025-07-09 16:08:31,884 - sync_service - INFO - Successfully added variant FG-0000704 to existing product
2025-07-09 16:08:32,176 - sync_service - INFO - API log added to SAP: sap - /U_SHOPIFY_MAPPING - success
2025-07-09 16:08:32,178 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'U_SHOPIFY_MAPPING', 'request': {'method': 'POST', 'url': 'https://10.0.0.100:50000/b1s/v1/U_SHOPIFY_MAPPING', 'data': {'Code': '7510108733506', 'Name': '7510108733506', 'U_Shopify_Type': 'product', 'U_SAP_Code': 'Morsi Necklace', 'U_Shopify_Store': 'local', 'U_SAP_Type': 'item'}, 'params': None}, 'response': None, 'status': None}
2025-07-09 16:08:32,379 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'U_SHOPIFY_MAPPING', 'request': None, 'response': {'status_code': 400, 'text': '{\n   "error" : {\n      "code" : -2035,\n      "message" : {\n         "lang" : "en-us",\n         "value" : "This entry already exists in the following tables (ODBC -2035)"\n      }\n   }\n}\n'}, 'status': 'failure'}
2025-07-09 16:08:32,590 - sync_service - INFO - API log added to SAP: sap - /U_SHOPIFY_MAPPING - failure
2025-07-09 16:08:32,742 - sync_service - INFO - API log added to SAP: sap - /U_SHOPIFY_MAPPING - success
2025-07-09 16:08:32,744 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'U_SHOPIFY_MAPPING', 'request': {'method': 'POST', 'url': 'https://10.0.0.100:50000/b1s/v1/U_SHOPIFY_MAPPING', 'data': {'Code': '42295132028994', 'Name': '42295132028994', 'U_Shopify_Type': 'variant', 'U_SAP_Code': 'FG-0000704', 'U_Shopify_Store': 'local', 'U_SAP_Type': 'item'}, 'params': None}, 'response': None, 'status': None}
2025-07-09 16:08:33,008 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'U_SHOPIFY_MAPPING', 'request': None, 'response': {'odata.metadata': 'https://10.0.0.100:50000/b1s/v1/$metadata#U_SHOPIFY_MAPPING/@Element', 'Code': '42295132028994', 'Name': '42295132028994', 'U_Shopify_Type': 'variant', 'U_SAP_Code': 'FG-0000704', 'U_SAP_Type': 'item', 'U_Shopify_Store': 'local'}, 'status': 'success'}
2025-07-09 16:08:33,181 - sync_service - INFO - API log added to SAP: sap - /U_SHOPIFY_MAPPING - success
2025-07-09 16:08:33,402 - sync_service - ERROR - Failed to add API log to SAP: HTTP 400: {
   "error" : {
      "code" : -1,
      "message" : {
         "lang" : "en-us",
         "value" : "CServiceData::SetPropertyValueString failed; Value too long in property 'U_Action' of 'U_API_LOG'"
      }
   }
}

2025-07-09 16:08:33,405 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'U_SHOPIFY_MAPPING', 'request': {'method': 'POST', 'url': 'https://10.0.0.100:50000/b1s/v1/U_SHOPIFY_MAPPING', 'data': {'Code': '44396262981698', 'Name': '44396262981698', 'U_Shopify_Type': 'variant_inventory', 'U_SAP_Code': 'FG-0000704', 'U_Shopify_Store': 'local', 'U_SAP_Type': 'item'}, 'params': None}, 'response': None, 'status': None}
2025-07-09 16:08:33,612 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'U_SHOPIFY_MAPPING', 'request': None, 'response': {'odata.metadata': 'https://10.0.0.100:50000/b1s/v1/$metadata#U_SHOPIFY_MAPPING/@Element', 'Code': '44396262981698', 'Name': '44396262981698', 'U_Shopify_Type': 'variant_inventory', 'U_SAP_Code': 'FG-0000704', 'U_SAP_Type': 'item', 'U_Shopify_Store': 'local'}, 'status': 'success'}
2025-07-09 16:08:33,846 - sync_service - ERROR - Failed to add API log to SAP: HTTP 400: {
   "error" : {
      "code" : -1,
      "message" : {
         "lang" : "en-us",
         "value" : "CServiceData::SetPropertyValueString failed; Value too long in property 'U_Action' of 'U_API_LOG'"
      }
   }
}

2025-07-09 16:08:34,355 - sync_service - INFO - Sync Event: {'sync_type': 'multi_store_new_items_sap_to_shopify', 'items_processed': 1, 'success_count': 1, 'error_count': 0, 'details': None}
2025-07-09 16:08:34,601 - sync_service - INFO - API log added to SAP: system - /sync/new_items_multi_store - success
2025-07-09 16:08:34,603 - sync_service - INFO - Multi-store new items sync completed: 1 processed, 1 successful, 0 errors
2025-07-09 16:12:31,880 - sync_service - INFO - Initialized Shopify client for store: Local Store (local)
2025-07-09 16:12:31,888 - sync_service - INFO - Starting multi-store new items sync from SAP to Shopify
2025-07-09 16:12:32,490 - sync_service - INFO - SAP logging client login successful
2025-07-09 16:12:33,059 - sync_service - INFO - API log added to SAP: system - /sync/new_items_multi_store - success
2025-07-09 16:12:33,066 - sync_service - INFO - Fetching new items for store: local
2025-07-09 16:12:33,067 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'login', 'request': {'company': 'JudeBenHalim_Test', 'user': 'manager'}, 'response': None, 'status': None}
2025-07-09 16:12:33,585 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'login', 'request': None, 'response': {'status': 'success'}, 'status': 'success'}
2025-07-09 16:12:33,587 - sync_service - INFO - SAP login successful
2025-07-09 16:12:33,588 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': "view.svc/MASHURA_New_ItemsB1SLQuery?$filter=Shopify_Store eq 'local'&$orderby=MainProduct", 'request': {'method': 'GET', 'url': "https://10.0.0.100:50000/b1s/v1/view.svc/MASHURA_New_ItemsB1SLQuery?$filter=Shopify_Store eq 'local'&$orderby=MainProduct", 'data': None, 'params': None}, 'response': None, 'status': None}
2025-07-09 16:12:34,098 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': "view.svc/MASHURA_New_ItemsB1SLQuery?$filter=Shopify_Store eq 'local'&$orderby=MainProduct", 'request': None, 'response': {'odata.metadata': 'https://10.0.0.100:50000/b1s/v1/view.svc/$metadata#MASHURA_New_ItemsB1SLQuery', 'value': [{'itemcode': 'FG-0000704', 'ItemName': 'Morsi-Green', 'MainProduct': 'Morsi Necklace', 'Color': 'Green', 'OnHand': 0.0, 'IsCommited': 0.0, 'Available': 0.0, 'Price': 2500.0, 'Status': 'existing', 'Shopify_ProductCode': '7510108733506', 'Shopify_Store': 'local', 'id__': 1}]}, 'status': 'success'}
2025-07-09 16:12:34,114 - sync_service - INFO - Product group: ('Morsi Necklace', 'local') has 1 items
2025-07-09 16:12:34,116 - sync_service - INFO - Grouped 1 items into 1 product groups for store local
2025-07-09 16:12:34,117 - sync_service - INFO - Processing product group: ('Morsi Necklace', 'local') with 1 items for store local
2025-07-09 16:12:34,118 - sync_service - INFO - Found existing Shopify product ID: 7510108733506 for Morsi Necklace
2025-07-09 16:12:34,119 - sync_service - INFO - Product Morsi Necklace already exists in store local, adding variants
2025-07-09 16:12:34,120 - sync_service - INFO - Setting up Color option for product gid://shopify/Product/7510108733506 with values: ['Green']
2025-07-09 16:12:34,121 - sync_service - INFO - API Call: {'service': 'shopify', 'endpoint': 'graphql_local', 'request': {'query': '\n        mutation productUpdate($input: ProductInput!) {\n            productUpdate(input: $input) {\n                product {\n                    id\n                    title\n                    options {\n                        id\n                        name\n                        values\n                    }\n                }\n                userErrors {\n                    field\n                    message\n                }\n            }\n        }\n        ', 'variables': {'input': {'id': 'gid://shopify/Product/7510108733506', 'options': [{'name': 'Color', 'values': ['Green']}]}}}, 'response': None, 'status': None}
2025-07-09 16:12:34,505 - sync_service - ERROR - GraphQL query error for store local: {'message': 'Variable $input of type ProductInput! was provided invalid value for options.0 (Could not coerce value {name:"Color",values:["Green"]} to String)', 'locations': [{'line': 1, 'column': 24}], 'extensions': {'value': {'id': 'gid://shopify/Product/7510108733506', 'options': [{'name': 'Color', 'values': ['Green']}]}, 'problems': [{'path': ['options', 0], 'explanation': 'Could not coerce value {name:"Color",values:["Green"]} to String'}]}}
GraphQL Errors: [
  {
    "message": "Variable $input of type ProductInput! was provided invalid value for options.0 (Could not coerce value {name:\"Color\",values:[\"Green\"]} to String)",
    "locations": [
      {
        "line": 1,
        "column": 24
      }
    ],
    "extensions": {
      "value": {
        "id": "gid://shopify/Product/7510108733506",
        "options": [
          {
            "name": "Color",
            "values": [
              "Green"
            ]
          }
        ]
      },
      "problems": [
        {
          "path": [
            "options",
            0
          ],
          "explanation": "Could not coerce value {name:\"Color\",values:[\"Green\"]} to String"
        }
      ]
    }
  }
]
2025-07-09 16:12:34,639 - sync_service - ERROR - Failed to add API log to SAP: HTTP 400: {
   "error" : {
      "code" : -1,
      "message" : {
         "lang" : "en-us",
         "value" : "CServiceData::SetPropertyValueString failed; Value too long in property 'U_Value' of 'U_API_LOG'"
      }
   }
}

2025-07-09 16:12:34,640 - sync_service - WARNING - Failed to add Color option to product: GraphQL query error for store local: {'message': 'Variable $input of type ProductInput! was provided invalid value for options.0 (Could not coerce value {name:"Color",values:["Green"]} to String)', 'locations': [{'line': 1, 'column': 24}], 'extensions': {'value': {'id': 'gid://shopify/Product/7510108733506', 'options': [{'name': 'Color', 'values': ['Green']}]}, 'problems': [{'path': ['options', 0], 'explanation': 'Could not coerce value {name:"Color",values:["Green"]} to String'}]}}
GraphQL Errors: [
  {
    "message": "Variable $input of type ProductInput! was provided invalid value for options.0 (Could not coerce value {name:\"Color\",values:[\"Green\"]} to String)",
    "locations": [
      {
        "line": 1,
        "column": 24
      }
    ],
    "extensions": {
      "value": {
        "id": "gid://shopify/Product/7510108733506",
        "options": [
          {
            "name": "Color",
            "values": [
              "Green"
            ]
          }
        ]
      },
      "problems": [
        {
          "path": [
            "options",
            0
          ],
          "explanation": "Could not coerce value {name:\"Color\",values:[\"Green\"]} to String"
        }
      ]
    }
  }
]
2025-07-09 16:12:34,769 - sync_service - ERROR - Failed to add API log to SAP: HTTP 400: {
   "error" : {
      "code" : -1,
      "message" : {
         "lang" : "en-us",
         "value" : "CServiceData::SetPropertyValueString failed; Value too long in property 'U_Action' of 'U_API_LOG'"
      }
   }
}

2025-07-09 16:12:34,771 - sync_service - INFO - API Call: {'service': 'shopify', 'endpoint': 'graphql_local', 'request': {'query': '\n        mutation productVariantCreate($input: ProductVariantInput!) {\n            productVariantCreate(input: $input) {\n                productVariant {\n                    id\n                    sku\n                    price\n                    inventoryItem {\n                        id\n                    }\n                    selectedOptions {\n                        name\n                        value\n                    }\n                }\n                userErrors {\n                    field\n                    message\n                }\n            }\n        }\n        ', 'variables': {'input': {'sku': 'FG-0000704', 'price': '2500.0', 'inventoryPolicy': 'DENY', 'inventoryManagement': 'SHOPIFY', 'weight': 0.0, 'weightUnit': 'KILOGRAMS', 'option1': 'Green', 'productId': 'gid://shopify/Product/7510108733506'}}}, 'response': None, 'status': None}
2025-07-09 16:12:44,781 - sync_service - ERROR - GraphQL query error for store local: 
2025-07-09 16:12:44,783 - sync_service - ERROR - Detailed variant creation error for FG-0000704: GraphQL query error for store local: 
2025-07-09 16:12:44,962 - sync_service - ERROR - Failed to add API log to SAP: HTTP 400: {
   "error" : {
      "code" : -1,
      "message" : {
         "lang" : "en-us",
         "value" : "CServiceData::SetPropertyValueString failed; Value too long in property 'U_Action' of 'U_API_LOG'"
      }
   }
}

2025-07-09 16:12:44,965 - sync_service - ERROR - Failed to add variant FG-0000704: GraphQL query error for store local: 
2025-07-09 16:12:45,084 - sync_service - INFO - API log added to SAP: sap - /U_SHOPIFY_MAPPING - success
2025-07-09 16:12:45,085 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'U_SHOPIFY_MAPPING', 'request': {'method': 'POST', 'url': 'https://10.0.0.100:50000/b1s/v1/U_SHOPIFY_MAPPING', 'data': {'Code': '7510108733506', 'Name': '7510108733506', 'U_Shopify_Type': 'product', 'U_SAP_Code': 'Morsi Necklace', 'U_Shopify_Store': 'local', 'U_SAP_Type': 'item'}, 'params': None}, 'response': None, 'status': None}
2025-07-09 16:12:45,209 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'U_SHOPIFY_MAPPING', 'request': None, 'response': {'status_code': 400, 'text': '{\n   "error" : {\n      "code" : -2035,\n      "message" : {\n         "lang" : "en-us",\n         "value" : "This entry already exists in the following tables (ODBC -2035)"\n      }\n   }\n}\n'}, 'status': 'failure'}
2025-07-09 16:12:45,335 - sync_service - INFO - API log added to SAP: sap - /U_SHOPIFY_MAPPING - failure
2025-07-09 16:12:45,837 - sync_service - INFO - Sync Event: {'sync_type': 'multi_store_new_items_sap_to_shopify', 'items_processed': 1, 'success_count': 0, 'error_count': 1, 'details': None}
2025-07-09 16:12:45,956 - sync_service - INFO - API log added to SAP: system - /sync/new_items_multi_store - success
2025-07-09 16:12:45,958 - sync_service - INFO - Multi-store new items sync completed: 1 processed, 0 successful, 1 errors
2025-07-09 16:13:53,975 - sync_service - INFO - Initialized Shopify client for store: Local Store (local)
2025-07-09 16:13:53,983 - sync_service - INFO - Starting multi-store new items sync from SAP to Shopify
2025-07-09 16:13:54,698 - sync_service - INFO - SAP logging client login successful
2025-07-09 16:13:55,275 - sync_service - INFO - API log added to SAP: system - /sync/new_items_multi_store - success
2025-07-09 16:13:55,278 - sync_service - INFO - Fetching new items for store: local
2025-07-09 16:13:55,281 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'login', 'request': {'company': 'JudeBenHalim_Test', 'user': 'manager'}, 'response': None, 'status': None}
2025-07-09 16:13:55,866 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'login', 'request': None, 'response': {'status': 'success'}, 'status': 'success'}
2025-07-09 16:13:55,867 - sync_service - INFO - SAP login successful
2025-07-09 16:13:55,869 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': "view.svc/MASHURA_New_ItemsB1SLQuery?$filter=Shopify_Store eq 'local'&$orderby=MainProduct", 'request': {'method': 'GET', 'url': "https://10.0.0.100:50000/b1s/v1/view.svc/MASHURA_New_ItemsB1SLQuery?$filter=Shopify_Store eq 'local'&$orderby=MainProduct", 'data': None, 'params': None}, 'response': None, 'status': None}
2025-07-09 16:13:56,382 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': "view.svc/MASHURA_New_ItemsB1SLQuery?$filter=Shopify_Store eq 'local'&$orderby=MainProduct", 'request': None, 'response': {'odata.metadata': 'https://10.0.0.100:50000/b1s/v1/view.svc/$metadata#MASHURA_New_ItemsB1SLQuery', 'value': [{'itemcode': 'FG-0000704', 'ItemName': 'Morsi-Green', 'MainProduct': 'Morsi Necklace', 'Color': 'Green', 'OnHand': 0.0, 'IsCommited': 0.0, 'Available': 0.0, 'Price': 2500.0, 'Status': 'existing', 'Shopify_ProductCode': '7510108733506', 'Shopify_Store': 'local', 'id__': 1}]}, 'status': 'success'}
2025-07-09 16:13:56,384 - sync_service - INFO - Product group: ('Morsi Necklace', 'local') has 1 items
2025-07-09 16:13:56,386 - sync_service - INFO - Grouped 1 items into 1 product groups for store local
2025-07-09 16:13:56,387 - sync_service - INFO - Processing product group: ('Morsi Necklace', 'local') with 1 items for store local
2025-07-09 16:13:56,388 - sync_service - INFO - Found existing Shopify product ID: 7510108733506 for Morsi Necklace
2025-07-09 16:13:56,388 - sync_service - INFO - Product Morsi Necklace already exists in store local, adding variants
2025-07-09 16:13:56,588 - sync_service - ERROR - Failed to add API log to SAP: HTTP 400: {
   "error" : {
      "code" : -1,
      "message" : {
         "lang" : "en-us",
         "value" : "CServiceData::SetPropertyValueString failed; Value too long in property 'U_Action' of 'U_API_LOG'"
      }
   }
}

2025-07-09 16:13:56,589 - sync_service - INFO - API Call: {'service': 'shopify', 'endpoint': 'graphql_local', 'request': {'query': '\n        mutation productVariantCreate($input: ProductVariantInput!) {\n            productVariantCreate(input: $input) {\n                productVariant {\n                    id\n                    sku\n                    price\n                    inventoryItem {\n                        id\n                    }\n                    selectedOptions {\n                        name\n                        value\n                    }\n                }\n                userErrors {\n                    field\n                    message\n                }\n            }\n        }\n        ', 'variables': {'input': {'sku': 'FG-0000704', 'price': '2500.0', 'inventoryPolicy': 'DENY', 'inventoryManagement': 'SHOPIFY', 'weight': 0.0, 'weightUnit': 'KILOGRAMS', '_color': 'Green', 'productId': 'gid://shopify/Product/7510108733506'}}}, 'response': None, 'status': None}
2025-07-09 16:13:56,949 - sync_service - ERROR - GraphQL query error for store local: {'message': 'Variable $input of type ProductVariantInput! was provided invalid value for _color (Field is not defined on ProductVariantInput)', 'locations': [{'line': 1, 'column': 31}], 'extensions': {'value': {'sku': 'FG-0000704', 'price': '2500.0', 'inventoryPolicy': 'DENY', 'inventoryManagement': 'SHOPIFY', 'weight': 0.0, 'weightUnit': 'KILOGRAMS', '_color': 'Green', 'productId': 'gid://shopify/Product/7510108733506'}, 'problems': [{'path': ['_color'], 'explanation': 'Field is not defined on ProductVariantInput'}]}}
GraphQL Errors: [
  {
    "message": "Variable $input of type ProductVariantInput! was provided invalid value for _color (Field is not defined on ProductVariantInput)",
    "locations": [
      {
        "line": 1,
        "column": 31
      }
    ],
    "extensions": {
      "value": {
        "sku": "FG-0000704",
        "price": "2500.0",
        "inventoryPolicy": "DENY",
        "inventoryManagement": "SHOPIFY",
        "weight": 0.0,
        "weightUnit": "KILOGRAMS",
        "_color": "Green",
        "productId": "gid://shopify/Product/7510108733506"
      },
      "problems": [
        {
          "path": [
            "_color"
          ],
          "explanation": "Field is not defined on ProductVariantInput"
        }
      ]
    }
  }
]
2025-07-09 16:13:57,048 - sync_service - ERROR - Failed to add API log to SAP: HTTP 400: {
   "error" : {
      "code" : -1,
      "message" : {
         "lang" : "en-us",
         "value" : "CServiceData::SetPropertyValueString failed; Value too long in property 'U_Value' of 'U_API_LOG'"
      }
   }
}

2025-07-09 16:13:57,049 - sync_service - ERROR - Detailed variant creation error for FG-0000704: GraphQL query error for store local: {'message': 'Variable $input of type ProductVariantInput! was provided invalid value for _color (Field is not defined on ProductVariantInput)', 'locations': [{'line': 1, 'column': 31}], 'extensions': {'value': {'sku': 'FG-0000704', 'price': '2500.0', 'inventoryPolicy': 'DENY', 'inventoryManagement': 'SHOPIFY', 'weight': 0.0, 'weightUnit': 'KILOGRAMS', '_color': 'Green', 'productId': 'gid://shopify/Product/7510108733506'}, 'problems': [{'path': ['_color'], 'explanation': 'Field is not defined on ProductVariantInput'}]}}
GraphQL Errors: [
  {
    "message": "Variable $input of type ProductVariantInput! was provided invalid value for _color (Field is not defined on ProductVariantInput)",
    "locations": [
      {
        "line": 1,
        "column": 31
      }
    ],
    "extensions": {
      "value": {
        "sku": "FG-0000704",
        "price": "2500.0",
        "inventoryPolicy": "DENY",
        "inventoryManagement": "SHOPIFY",
        "weight": 0.0,
        "weightUnit": "KILOGRAMS",
        "_color": "Green",
        "productId": "gid://shopify/Product/7510108733506"
      },
      "problems": [
        {
          "path": [
            "_color"
          ],
          "explanation": "Field is not defined on ProductVariantInput"
        }
      ]
    }
  }
]
2025-07-09 16:13:57,158 - sync_service - ERROR - Failed to add API log to SAP: HTTP 400: {
   "error" : {
      "code" : -1,
      "message" : {
         "lang" : "en-us",
         "value" : "CServiceData::SetPropertyValueString failed; Value too long in property 'U_Action' of 'U_API_LOG'"
      }
   }
}

2025-07-09 16:13:57,159 - sync_service - ERROR - Failed to add variant FG-0000704: GraphQL query error for store local: {'message': 'Variable $input of type ProductVariantInput! was provided invalid value for _color (Field is not defined on ProductVariantInput)', 'locations': [{'line': 1, 'column': 31}], 'extensions': {'value': {'sku': 'FG-0000704', 'price': '2500.0', 'inventoryPolicy': 'DENY', 'inventoryManagement': 'SHOPIFY', 'weight': 0.0, 'weightUnit': 'KILOGRAMS', '_color': 'Green', 'productId': 'gid://shopify/Product/7510108733506'}, 'problems': [{'path': ['_color'], 'explanation': 'Field is not defined on ProductVariantInput'}]}}
GraphQL Errors: [
  {
    "message": "Variable $input of type ProductVariantInput! was provided invalid value for _color (Field is not defined on ProductVariantInput)",
    "locations": [
      {
        "line": 1,
        "column": 31
      }
    ],
    "extensions": {
      "value": {
        "sku": "FG-0000704",
        "price": "2500.0",
        "inventoryPolicy": "DENY",
        "inventoryManagement": "SHOPIFY",
        "weight": 0.0,
        "weightUnit": "KILOGRAMS",
        "_color": "Green",
        "productId": "gid://shopify/Product/7510108733506"
      },
      "problems": [
        {
          "path": [
            "_color"
          ],
          "explanation": "Field is not defined on ProductVariantInput"
        }
      ]
    }
  }
]
2025-07-09 16:13:57,296 - sync_service - INFO - API log added to SAP: sap - /U_SHOPIFY_MAPPING - success
2025-07-09 16:13:57,298 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'U_SHOPIFY_MAPPING', 'request': {'method': 'POST', 'url': 'https://10.0.0.100:50000/b1s/v1/U_SHOPIFY_MAPPING', 'data': {'Code': '7510108733506', 'Name': '7510108733506', 'U_Shopify_Type': 'product', 'U_SAP_Code': 'Morsi Necklace', 'U_Shopify_Store': 'local', 'U_SAP_Type': 'item'}, 'params': None}, 'response': None, 'status': None}
2025-07-09 16:13:57,415 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'U_SHOPIFY_MAPPING', 'request': None, 'response': {'status_code': 400, 'text': '{\n   "error" : {\n      "code" : -2035,\n      "message" : {\n         "lang" : "en-us",\n         "value" : "This entry already exists in the following tables (ODBC -2035)"\n      }\n   }\n}\n'}, 'status': 'failure'}
2025-07-09 16:13:57,529 - sync_service - INFO - API log added to SAP: sap - /U_SHOPIFY_MAPPING - failure
2025-07-09 16:13:58,047 - sync_service - INFO - Sync Event: {'sync_type': 'multi_store_new_items_sap_to_shopify', 'items_processed': 1, 'success_count': 0, 'error_count': 1, 'details': None}
2025-07-09 16:13:58,155 - sync_service - INFO - API log added to SAP: system - /sync/new_items_multi_store - success
2025-07-09 16:13:58,156 - sync_service - INFO - Multi-store new items sync completed: 1 processed, 0 successful, 1 errors
2025-07-09 16:15:17,179 - sync_service - INFO - Initialized Shopify client for store: Local Store (local)
2025-07-09 16:15:17,188 - sync_service - INFO - Starting multi-store new items sync from SAP to Shopify
2025-07-09 16:15:17,748 - sync_service - INFO - SAP logging client login successful
2025-07-09 16:15:18,313 - sync_service - INFO - API log added to SAP: system - /sync/new_items_multi_store - success
2025-07-09 16:15:18,313 - sync_service - INFO - Fetching new items for store: local
2025-07-09 16:15:18,315 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'login', 'request': {'company': 'JudeBenHalim_Test', 'user': 'manager'}, 'response': None, 'status': None}
2025-07-09 16:15:18,787 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'login', 'request': None, 'response': {'status': 'success'}, 'status': 'success'}
2025-07-09 16:15:18,789 - sync_service - INFO - SAP login successful
2025-07-09 16:15:18,792 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': "view.svc/MASHURA_New_ItemsB1SLQuery?$filter=Shopify_Store eq 'local'&$orderby=MainProduct", 'request': {'method': 'GET', 'url': "https://10.0.0.100:50000/b1s/v1/view.svc/MASHURA_New_ItemsB1SLQuery?$filter=Shopify_Store eq 'local'&$orderby=MainProduct", 'data': None, 'params': None}, 'response': None, 'status': None}
2025-07-09 16:15:19,279 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': "view.svc/MASHURA_New_ItemsB1SLQuery?$filter=Shopify_Store eq 'local'&$orderby=MainProduct", 'request': None, 'response': {'odata.metadata': 'https://10.0.0.100:50000/b1s/v1/view.svc/$metadata#MASHURA_New_ItemsB1SLQuery', 'value': [{'itemcode': 'FG-0000704', 'ItemName': 'Morsi-Green', 'MainProduct': 'Morsi Necklace', 'Color': 'Green', 'OnHand': 0.0, 'IsCommited': 0.0, 'Available': 0.0, 'Price': 2500.0, 'Status': 'existing', 'Shopify_ProductCode': '7510108733506', 'Shopify_Store': 'local', 'id__': 1}]}, 'status': 'success'}
2025-07-09 16:15:19,281 - sync_service - INFO - Product group: ('Morsi Necklace', 'local') has 1 items
2025-07-09 16:15:19,282 - sync_service - INFO - Grouped 1 items into 1 product groups for store local
2025-07-09 16:15:19,283 - sync_service - INFO - Processing product group: ('Morsi Necklace', 'local') with 1 items for store local
2025-07-09 16:15:19,284 - sync_service - INFO - Found existing Shopify product ID: 7510108733506 for Morsi Necklace
2025-07-09 16:15:19,284 - sync_service - INFO - Product Morsi Necklace already exists in store local, adding variants
2025-07-09 16:15:19,452 - sync_service - ERROR - Failed to add API log to SAP: HTTP 400: {
   "error" : {
      "code" : -1,
      "message" : {
         "lang" : "en-us",
         "value" : "CServiceData::SetPropertyValueString failed; Value too long in property 'U_Action' of 'U_API_LOG'"
      }
   }
}

2025-07-09 16:15:19,485 - sync_service - INFO - API Call: {'service': 'shopify', 'endpoint': 'graphql_local', 'request': {'query': '\n        mutation productVariantCreate($input: ProductVariantInput!) {\n            productVariantCreate(input: $input) {\n                productVariant {\n                    id\n                    sku\n                    price\n                    inventoryItem {\n                        id\n                    }\n                    selectedOptions {\n                        name\n                        value\n                    }\n                }\n                userErrors {\n                    field\n                    message\n                }\n            }\n        }\n        ', 'variables': {'input': {'sku': 'FG-0000704', 'price': '2500.0', 'inventoryPolicy': 'DENY', 'inventoryManagement': 'SHOPIFY', 'weight': 0.0, 'weightUnit': 'KILOGRAMS', 'productId': 'gid://shopify/Product/7510108733506'}}}, 'response': None, 'status': None}
2025-07-09 16:15:20,085 - sync_service - INFO - API Call: {'service': 'shopify', 'endpoint': 'graphql_local', 'request': None, 'response': {'productVariantCreate': {'productVariant': {'id': 'gid://shopify/ProductVariant/42295138943042', 'sku': 'FG-0000704', 'price': '2500.00', 'inventoryItem': {'id': 'gid://shopify/InventoryItem/44396269895746'}, 'selectedOptions': [{'name': 'Color', 'value': 'Default Title'}]}, 'userErrors': []}}, 'status': 'success'}
2025-07-09 16:15:20,085 - sync_service - INFO - API Call: {'service': 'shopify', 'endpoint': 'graphql_local', 'request': {'query': '\n        mutation productVariantUpdate($input: ProductVariantInput!) {\n            productVariantUpdate(input: $input) {\n                productVariant {\n                    id\n                    sku\n                    title\n                    selectedOptions {\n                        name\n                        value\n                    }\n                }\n                userErrors {\n                    field\n                    message\n                }\n            }\n        }\n        ', 'variables': {'input': {'title': 'Green', 'id': 'gid://shopify/ProductVariant/42295138943042'}}}, 'response': None, 'status': None}
2025-07-09 16:15:20,588 - sync_service - INFO - API Call: {'service': 'shopify', 'endpoint': 'graphql_local', 'request': None, 'response': {'productVariantUpdate': {'productVariant': {'id': 'gid://shopify/ProductVariant/42295138943042', 'sku': 'FG-0000704', 'title': 'Default Title', 'selectedOptions': [{'name': 'Color', 'value': 'Default Title'}]}, 'userErrors': []}}, 'status': 'success'}
2025-07-09 16:15:20,589 - sync_service - INFO - Updated variant FG-0000704 title to 'Green'
2025-07-09 16:15:20,698 - sync_service - ERROR - Failed to add API log to SAP: HTTP 400: {
   "error" : {
      "code" : -1,
      "message" : {
         "lang" : "en-us",
         "value" : "CServiceData::SetPropertyValueString failed; Value too long in property 'U_Action' of 'U_API_LOG'"
      }
   }
}

2025-07-09 16:15:20,700 - sync_service - INFO - API Call: {'service': 'shopify', 'endpoint': 'graphql_local', 'request': {'query': '\n        mutation inventoryAdjustQuantity($input: InventoryAdjustQuantityInput!) {\n            inventoryAdjustQuantity(input: $input) {\n                inventoryLevel {\n                    available\n                }\n                userErrors {\n                    field\n                    message\n                }\n            }\n        }\n        ', 'variables': {'input': {'inventoryItemId': 'gid://shopify/InventoryItem/44396269895746', 'availableDelta': 10}}}, 'response': None, 'status': None}
2025-07-09 16:15:21,063 - sync_service - ERROR - GraphQL query error for store local: {'message': "Field 'inventoryAdjustQuantity' doesn't exist on type 'Mutation'", 'locations': [{'line': 2, 'column': 3}], 'path': ['mutation inventoryAdjustQuantity', 'inventoryAdjustQuantity'], 'extensions': {'code': 'undefinedField', 'typeName': 'Mutation', 'fieldName': 'inventoryAdjustQuantity'}}
GraphQL Errors: [
  {
    "message": "Field 'inventoryAdjustQuantity' doesn't exist on type 'Mutation'",
    "locations": [
      {
        "line": 2,
        "column": 3
      }
    ],
    "path": [
      "mutation inventoryAdjustQuantity",
      "inventoryAdjustQuantity"
    ],
    "extensions": {
      "code": "undefinedField",
      "typeName": "Mutation",
      "fieldName": "inventoryAdjustQuantity"
    }
  },
  {
    "message": "Variable $input is declared by inventoryAdjustQuantity but not used",
    "locations": [
      {
        "line": 1,
        "column": 1
      }
    ],
    "path": [
      "mutation inventoryAdjustQuantity"
    ],
    "extensions": {
      "code": "variableNotUsed",
      "variableName": "input"
    }
  }
]
2025-07-09 16:15:21,194 - sync_service - ERROR - Failed to add API log to SAP: HTTP 400: {
   "error" : {
      "code" : -1,
      "message" : {
         "lang" : "en-us",
         "value" : "CServiceData::SetPropertyValueString failed; Value too long in property 'U_Value' of 'U_API_LOG'"
      }
   }
}

2025-07-09 16:15:21,195 - sync_service - WARNING - Failed to set inventory for variant FG-0000704: GraphQL query error for store local: {'message': "Field 'inventoryAdjustQuantity' doesn't exist on type 'Mutation'", 'locations': [{'line': 2, 'column': 3}], 'path': ['mutation inventoryAdjustQuantity', 'inventoryAdjustQuantity'], 'extensions': {'code': 'undefinedField', 'typeName': 'Mutation', 'fieldName': 'inventoryAdjustQuantity'}}
GraphQL Errors: [
  {
    "message": "Field 'inventoryAdjustQuantity' doesn't exist on type 'Mutation'",
    "locations": [
      {
        "line": 2,
        "column": 3
      }
    ],
    "path": [
      "mutation inventoryAdjustQuantity",
      "inventoryAdjustQuantity"
    ],
    "extensions": {
      "code": "undefinedField",
      "typeName": "Mutation",
      "fieldName": "inventoryAdjustQuantity"
    }
  },
  {
    "message": "Variable $input is declared by inventoryAdjustQuantity but not used",
    "locations": [
      {
        "line": 1,
        "column": 1
      }
    ],
    "path": [
      "mutation inventoryAdjustQuantity"
    ],
    "extensions": {
      "code": "variableNotUsed",
      "variableName": "input"
    }
  }
]
2025-07-09 16:15:21,196 - sync_service - INFO - Successfully added variant FG-0000704 to existing product
2025-07-09 16:15:21,312 - sync_service - INFO - API log added to SAP: sap - /U_SHOPIFY_MAPPING - success
2025-07-09 16:15:21,314 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'U_SHOPIFY_MAPPING', 'request': {'method': 'POST', 'url': 'https://10.0.0.100:50000/b1s/v1/U_SHOPIFY_MAPPING', 'data': {'Code': '7510108733506', 'Name': '7510108733506', 'U_Shopify_Type': 'product', 'U_SAP_Code': 'Morsi Necklace', 'U_Shopify_Store': 'local', 'U_SAP_Type': 'item'}, 'params': None}, 'response': None, 'status': None}
2025-07-09 16:15:21,436 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'U_SHOPIFY_MAPPING', 'request': None, 'response': {'status_code': 400, 'text': '{\n   "error" : {\n      "code" : -2035,\n      "message" : {\n         "lang" : "en-us",\n         "value" : "This entry already exists in the following tables (ODBC -2035)"\n      }\n   }\n}\n'}, 'status': 'failure'}
2025-07-09 16:15:21,564 - sync_service - INFO - API log added to SAP: sap - /U_SHOPIFY_MAPPING - failure
2025-07-09 16:15:21,678 - sync_service - INFO - API log added to SAP: sap - /U_SHOPIFY_MAPPING - success
2025-07-09 16:15:21,679 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'U_SHOPIFY_MAPPING', 'request': {'method': 'POST', 'url': 'https://10.0.0.100:50000/b1s/v1/U_SHOPIFY_MAPPING', 'data': {'Code': '42295138943042', 'Name': '42295138943042', 'U_Shopify_Type': 'variant', 'U_SAP_Code': 'FG-0000704', 'U_Shopify_Store': 'local', 'U_SAP_Type': 'item'}, 'params': None}, 'response': None, 'status': None}
2025-07-09 16:15:21,828 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'U_SHOPIFY_MAPPING', 'request': None, 'response': {'odata.metadata': 'https://10.0.0.100:50000/b1s/v1/$metadata#U_SHOPIFY_MAPPING/@Element', 'Code': '42295138943042', 'Name': '42295138943042', 'U_Shopify_Type': 'variant', 'U_SAP_Code': 'FG-0000704', 'U_SAP_Type': 'item', 'U_Shopify_Store': 'local'}, 'status': 'success'}
2025-07-09 16:15:21,947 - sync_service - INFO - API log added to SAP: sap - /U_SHOPIFY_MAPPING - success
2025-07-09 16:15:22,051 - sync_service - ERROR - Failed to add API log to SAP: HTTP 400: {
   "error" : {
      "code" : -1,
      "message" : {
         "lang" : "en-us",
         "value" : "CServiceData::SetPropertyValueString failed; Value too long in property 'U_Action' of 'U_API_LOG'"
      }
   }
}

2025-07-09 16:15:22,052 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'U_SHOPIFY_MAPPING', 'request': {'method': 'POST', 'url': 'https://10.0.0.100:50000/b1s/v1/U_SHOPIFY_MAPPING', 'data': {'Code': '44396269895746', 'Name': '44396269895746', 'U_Shopify_Type': 'variant_inventory', 'U_SAP_Code': 'FG-0000704', 'U_Shopify_Store': 'local', 'U_SAP_Type': 'item'}, 'params': None}, 'response': None, 'status': None}
2025-07-09 16:15:22,179 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'U_SHOPIFY_MAPPING', 'request': None, 'response': {'odata.metadata': 'https://10.0.0.100:50000/b1s/v1/$metadata#U_SHOPIFY_MAPPING/@Element', 'Code': '44396269895746', 'Name': '44396269895746', 'U_Shopify_Type': 'variant_inventory', 'U_SAP_Code': 'FG-0000704', 'U_SAP_Type': 'item', 'U_Shopify_Store': 'local'}, 'status': 'success'}
2025-07-09 16:15:22,287 - sync_service - ERROR - Failed to add API log to SAP: HTTP 400: {
   "error" : {
      "code" : -1,
      "message" : {
         "lang" : "en-us",
         "value" : "CServiceData::SetPropertyValueString failed; Value too long in property 'U_Action' of 'U_API_LOG'"
      }
   }
}

2025-07-09 16:15:22,790 - sync_service - INFO - Sync Event: {'sync_type': 'multi_store_new_items_sap_to_shopify', 'items_processed': 1, 'success_count': 1, 'error_count': 0, 'details': None}
2025-07-09 16:15:22,904 - sync_service - INFO - API log added to SAP: system - /sync/new_items_multi_store - success
2025-07-09 16:15:22,906 - sync_service - INFO - Multi-store new items sync completed: 1 processed, 1 successful, 0 errors
2025-07-09 16:21:29,500 - sync_service - INFO - Initialized Shopify client for store: Local Store (local)
2025-07-09 16:21:29,509 - sync_service - INFO - Starting multi-store new items sync from SAP to Shopify
2025-07-09 16:21:30,105 - sync_service - INFO - SAP logging client login successful
2025-07-09 16:21:30,660 - sync_service - INFO - API log added to SAP: system - /sync/new_items_multi_store - success
2025-07-09 16:21:30,663 - sync_service - INFO - Fetching new items for store: local
2025-07-09 16:21:30,665 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'login', 'request': {'company': 'JudeBenHalim_Test', 'user': 'manager'}, 'response': None, 'status': None}
2025-07-09 16:21:31,210 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'login', 'request': None, 'response': {'status': 'success'}, 'status': 'success'}
2025-07-09 16:21:31,212 - sync_service - INFO - SAP login successful
2025-07-09 16:21:31,214 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': "view.svc/MASHURA_New_ItemsB1SLQuery?$filter=Shopify_Store eq 'local'&$orderby=MainProduct", 'request': {'method': 'GET', 'url': "https://10.0.0.100:50000/b1s/v1/view.svc/MASHURA_New_ItemsB1SLQuery?$filter=Shopify_Store eq 'local'&$orderby=MainProduct", 'data': None, 'params': None}, 'response': None, 'status': None}
2025-07-09 16:21:31,724 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': "view.svc/MASHURA_New_ItemsB1SLQuery?$filter=Shopify_Store eq 'local'&$orderby=MainProduct", 'request': None, 'response': {'odata.metadata': 'https://10.0.0.100:50000/b1s/v1/view.svc/$metadata#MASHURA_New_ItemsB1SLQuery', 'value': [{'itemcode': 'FG-0000704', 'ItemName': 'Morsi-Green', 'MainProduct': 'Morsi Necklace', 'Color': 'Green', 'OnHand': 0.0, 'IsCommited': 0.0, 'Available': 0.0, 'Price': 2500.0, 'Status': 'existing', 'Shopify_ProductCode': '7510108733506', 'Shopify_Store': 'local', 'id__': 1}]}, 'status': 'success'}
2025-07-09 16:21:31,726 - sync_service - INFO - Product group: ('Morsi Necklace', 'local') has 1 items
2025-07-09 16:21:31,727 - sync_service - INFO - Grouped 1 items into 1 product groups for store local
2025-07-09 16:21:31,727 - sync_service - INFO - Processing product group: ('Morsi Necklace', 'local') with 1 items for store local
2025-07-09 16:21:31,728 - sync_service - INFO - Found existing Shopify product ID: 7510108733506 for Morsi Necklace
2025-07-09 16:21:31,728 - sync_service - INFO - Product Morsi Necklace already exists in store local, adding variants
2025-07-09 16:21:31,730 - sync_service - INFO - API Call: {'service': 'shopify', 'endpoint': 'graphql_local', 'request': {'query': '\n        query GetProductByHandle($handle: String!) {\n            productByHandle(handle: $handle) {\n                id\n                title\n                handle\n                description\n                variants(first: 50) {\n                    edges {\n                        node {\n                            id\n                            sku\n                            price\n                            inventoryItem {\n                                id\n                            }\n                            selectedOptions {\n                                name\n                                value\n                            }\n                        }\n                    }\n                }\n            }\n        }\n        ', 'variables': {'handle': None}}, 'response': None, 'status': None}
2025-07-09 16:21:32,125 - sync_service - ERROR - GraphQL query error for store local: {'message': 'Variable $handle of type String! was provided invalid value', 'locations': [{'line': 1, 'column': 26}], 'extensions': {'value': None, 'problems': [{'path': [], 'explanation': 'Expected value to not be null'}]}}
GraphQL Errors: [
  {
    "message": "Variable $handle of type String! was provided invalid value",
    "locations": [
      {
        "line": 1,
        "column": 26
      }
    ],
    "extensions": {
      "value": null,
      "problems": [
        {
          "path": [],
          "explanation": "Expected value to not be null"
        }
      ]
    }
  }
]
2025-07-09 16:21:32,251 - sync_service - ERROR - Failed to add API log to SAP: HTTP 400: {
   "error" : {
      "code" : -1,
      "message" : {
         "lang" : "en-us",
         "value" : "CServiceData::SetPropertyValueString failed; Value too long in property 'U_Value' of 'U_API_LOG'"
      }
   }
}

2025-07-09 16:21:32,363 - sync_service - ERROR - Failed to add API log to SAP: HTTP 400: {
   "error" : {
      "code" : -1,
      "message" : {
         "lang" : "en-us",
         "value" : "CServiceData::SetPropertyValueString failed; Value too long in property 'U_Action' of 'U_API_LOG'"
      }
   }
}

2025-07-09 16:21:32,366 - sync_service - INFO - API Call: {'service': 'shopify', 'endpoint': 'graphql_local', 'request': {'query': '\n        mutation productVariantCreate($input: ProductVariantInput!) {\n            productVariantCreate(input: $input) {\n                productVariant {\n                    id\n                    sku\n                    price\n                    inventoryItem {\n                        id\n                    }\n                    selectedOptions {\n                        name\n                        value\n                    }\n                }\n                userErrors {\n                    field\n                    message\n                }\n            }\n        }\n        ', 'variables': {'input': {'sku': 'FG-0000704', 'price': '2500.0', 'inventoryPolicy': 'DENY', 'inventoryManagement': 'SHOPIFY', 'weight': 0.0, 'weightUnit': 'KILOGRAMS', 'option1': 'Green', 'productId': 'gid://shopify/Product/7510108733506'}}}, 'response': None, 'status': None}
2025-07-09 16:21:32,763 - sync_service - ERROR - GraphQL query error for store local: {'message': 'Variable $input of type ProductVariantInput! was provided invalid value for option1 (Field is not defined on ProductVariantInput)', 'locations': [{'line': 1, 'column': 31}], 'extensions': {'value': {'sku': 'FG-0000704', 'price': '2500.0', 'inventoryPolicy': 'DENY', 'inventoryManagement': 'SHOPIFY', 'weight': 0.0, 'weightUnit': 'KILOGRAMS', 'option1': 'Green', 'productId': 'gid://shopify/Product/7510108733506'}, 'problems': [{'path': ['option1'], 'explanation': 'Field is not defined on ProductVariantInput'}]}}
GraphQL Errors: [
  {
    "message": "Variable $input of type ProductVariantInput! was provided invalid value for option1 (Field is not defined on ProductVariantInput)",
    "locations": [
      {
        "line": 1,
        "column": 31
      }
    ],
    "extensions": {
      "value": {
        "sku": "FG-0000704",
        "price": "2500.0",
        "inventoryPolicy": "DENY",
        "inventoryManagement": "SHOPIFY",
        "weight": 0.0,
        "weightUnit": "KILOGRAMS",
        "option1": "Green",
        "productId": "gid://shopify/Product/7510108733506"
      },
      "problems": [
        {
          "path": [
            "option1"
          ],
          "explanation": "Field is not defined on ProductVariantInput"
        }
      ]
    }
  }
]
2025-07-09 16:21:32,895 - sync_service - ERROR - Failed to add API log to SAP: HTTP 400: {
   "error" : {
      "code" : -1,
      "message" : {
         "lang" : "en-us",
         "value" : "CServiceData::SetPropertyValueString failed; Value too long in property 'U_Value' of 'U_API_LOG'"
      }
   }
}

2025-07-09 16:21:32,897 - sync_service - ERROR - Detailed variant creation error for FG-0000704: GraphQL query error for store local: {'message': 'Variable $input of type ProductVariantInput! was provided invalid value for option1 (Field is not defined on ProductVariantInput)', 'locations': [{'line': 1, 'column': 31}], 'extensions': {'value': {'sku': 'FG-0000704', 'price': '2500.0', 'inventoryPolicy': 'DENY', 'inventoryManagement': 'SHOPIFY', 'weight': 0.0, 'weightUnit': 'KILOGRAMS', 'option1': 'Green', 'productId': 'gid://shopify/Product/7510108733506'}, 'problems': [{'path': ['option1'], 'explanation': 'Field is not defined on ProductVariantInput'}]}}
GraphQL Errors: [
  {
    "message": "Variable $input of type ProductVariantInput! was provided invalid value for option1 (Field is not defined on ProductVariantInput)",
    "locations": [
      {
        "line": 1,
        "column": 31
      }
    ],
    "extensions": {
      "value": {
        "sku": "FG-0000704",
        "price": "2500.0",
        "inventoryPolicy": "DENY",
        "inventoryManagement": "SHOPIFY",
        "weight": 0.0,
        "weightUnit": "KILOGRAMS",
        "option1": "Green",
        "productId": "gid://shopify/Product/7510108733506"
      },
      "problems": [
        {
          "path": [
            "option1"
          ],
          "explanation": "Field is not defined on ProductVariantInput"
        }
      ]
    }
  }
]
2025-07-09 16:21:33,010 - sync_service - ERROR - Failed to add API log to SAP: HTTP 400: {
   "error" : {
      "code" : -1,
      "message" : {
         "lang" : "en-us",
         "value" : "CServiceData::SetPropertyValueString failed; Value too long in property 'U_Action' of 'U_API_LOG'"
      }
   }
}

2025-07-09 16:21:33,012 - sync_service - ERROR - Failed to add variant FG-0000704: GraphQL query error for store local: {'message': 'Variable $input of type ProductVariantInput! was provided invalid value for option1 (Field is not defined on ProductVariantInput)', 'locations': [{'line': 1, 'column': 31}], 'extensions': {'value': {'sku': 'FG-0000704', 'price': '2500.0', 'inventoryPolicy': 'DENY', 'inventoryManagement': 'SHOPIFY', 'weight': 0.0, 'weightUnit': 'KILOGRAMS', 'option1': 'Green', 'productId': 'gid://shopify/Product/7510108733506'}, 'problems': [{'path': ['option1'], 'explanation': 'Field is not defined on ProductVariantInput'}]}}
GraphQL Errors: [
  {
    "message": "Variable $input of type ProductVariantInput! was provided invalid value for option1 (Field is not defined on ProductVariantInput)",
    "locations": [
      {
        "line": 1,
        "column": 31
      }
    ],
    "extensions": {
      "value": {
        "sku": "FG-0000704",
        "price": "2500.0",
        "inventoryPolicy": "DENY",
        "inventoryManagement": "SHOPIFY",
        "weight": 0.0,
        "weightUnit": "KILOGRAMS",
        "option1": "Green",
        "productId": "gid://shopify/Product/7510108733506"
      },
      "problems": [
        {
          "path": [
            "option1"
          ],
          "explanation": "Field is not defined on ProductVariantInput"
        }
      ]
    }
  }
]
2025-07-09 16:21:33,133 - sync_service - INFO - API log added to SAP: sap - /U_SHOPIFY_MAPPING - success
2025-07-09 16:21:33,135 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'U_SHOPIFY_MAPPING', 'request': {'method': 'POST', 'url': 'https://10.0.0.100:50000/b1s/v1/U_SHOPIFY_MAPPING', 'data': {'Code': '7510108733506', 'Name': '7510108733506', 'U_Shopify_Type': 'product', 'U_SAP_Code': 'Morsi Necklace', 'U_Shopify_Store': 'local', 'U_SAP_Type': 'item'}, 'params': None}, 'response': None, 'status': None}
2025-07-09 16:21:33,248 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'U_SHOPIFY_MAPPING', 'request': None, 'response': {'status_code': 400, 'text': '{\n   "error" : {\n      "code" : -2035,\n      "message" : {\n         "lang" : "en-us",\n         "value" : "This entry already exists in the following tables (ODBC -2035)"\n      }\n   }\n}\n'}, 'status': 'failure'}
2025-07-09 16:21:33,374 - sync_service - INFO - API log added to SAP: sap - /U_SHOPIFY_MAPPING - failure
2025-07-09 16:21:33,905 - sync_service - INFO - Sync Event: {'sync_type': 'multi_store_new_items_sap_to_shopify', 'items_processed': 1, 'success_count': 0, 'error_count': 1, 'details': None}
2025-07-09 16:21:34,018 - sync_service - INFO - API log added to SAP: system - /sync/new_items_multi_store - success
2025-07-09 16:21:34,048 - sync_service - INFO - Multi-store new items sync completed: 1 processed, 0 successful, 1 errors
2025-07-09 16:23:03,009 - sync_service - INFO - Initialized Shopify client for store: Local Store (local)
2025-07-09 16:23:03,016 - sync_service - INFO - Starting multi-store new items sync from SAP to Shopify
2025-07-09 16:23:03,667 - sync_service - INFO - SAP logging client login successful
2025-07-09 16:23:04,215 - sync_service - INFO - API log added to SAP: system - /sync/new_items_multi_store - success
2025-07-09 16:23:04,216 - sync_service - INFO - Fetching new items for store: local
2025-07-09 16:23:04,218 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'login', 'request': {'company': 'JudeBenHalim_Test', 'user': 'manager'}, 'response': None, 'status': None}
2025-07-09 16:23:04,747 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'login', 'request': None, 'response': {'status': 'success'}, 'status': 'success'}
2025-07-09 16:23:04,748 - sync_service - INFO - SAP login successful
2025-07-09 16:23:04,750 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': "view.svc/MASHURA_New_ItemsB1SLQuery?$filter=Shopify_Store eq 'local'&$orderby=MainProduct", 'request': {'method': 'GET', 'url': "https://10.0.0.100:50000/b1s/v1/view.svc/MASHURA_New_ItemsB1SLQuery?$filter=Shopify_Store eq 'local'&$orderby=MainProduct", 'data': None, 'params': None}, 'response': None, 'status': None}
2025-07-09 16:23:05,281 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': "view.svc/MASHURA_New_ItemsB1SLQuery?$filter=Shopify_Store eq 'local'&$orderby=MainProduct", 'request': None, 'response': {'odata.metadata': 'https://10.0.0.100:50000/b1s/v1/view.svc/$metadata#MASHURA_New_ItemsB1SLQuery', 'value': [{'itemcode': 'FG-0000704', 'ItemName': 'Morsi-Green', 'MainProduct': 'Morsi Necklace', 'Color': 'Green', 'OnHand': 0.0, 'IsCommited': 0.0, 'Available': 0.0, 'Price': 2500.0, 'Status': 'existing', 'Shopify_ProductCode': '7510108733506', 'Shopify_Store': 'local', 'id__': 1}]}, 'status': 'success'}
2025-07-09 16:23:05,283 - sync_service - INFO - Product group: ('Morsi Necklace', 'local') has 1 items
2025-07-09 16:23:05,284 - sync_service - INFO - Grouped 1 items into 1 product groups for store local
2025-07-09 16:23:05,286 - sync_service - INFO - Processing product group: ('Morsi Necklace', 'local') with 1 items for store local
2025-07-09 16:23:05,287 - sync_service - INFO - Found existing Shopify product ID: 7510108733506 for Morsi Necklace
2025-07-09 16:23:05,289 - sync_service - INFO - Product Morsi Necklace already exists in store local, adding variants
2025-07-09 16:23:05,291 - sync_service - INFO - API Call: {'service': 'shopify', 'endpoint': 'graphql_local', 'request': {'query': '\n        query GetProductByHandle($handle: String!) {\n            productByHandle(handle: $handle) {\n                id\n                title\n                handle\n                description\n                variants(first: 50) {\n                    edges {\n                        node {\n                            id\n                            sku\n                            price\n                            inventoryItem {\n                                id\n                            }\n                            selectedOptions {\n                                name\n                                value\n                            }\n                        }\n                    }\n                }\n            }\n        }\n        ', 'variables': {'handle': None}}, 'response': None, 'status': None}
2025-07-09 16:23:05,642 - sync_service - ERROR - GraphQL query error for store local: {'message': 'Variable $handle of type String! was provided invalid value', 'locations': [{'line': 1, 'column': 26}], 'extensions': {'value': None, 'problems': [{'path': [], 'explanation': 'Expected value to not be null'}]}}
GraphQL Errors: [
  {
    "message": "Variable $handle of type String! was provided invalid value",
    "locations": [
      {
        "line": 1,
        "column": 26
      }
    ],
    "extensions": {
      "value": null,
      "problems": [
        {
          "path": [],
          "explanation": "Expected value to not be null"
        }
      ]
    }
  }
]
2025-07-09 16:23:05,762 - sync_service - ERROR - Failed to add API log to SAP: HTTP 400: {
   "error" : {
      "code" : -1,
      "message" : {
         "lang" : "en-us",
         "value" : "CServiceData::SetPropertyValueString failed; Value too long in property 'U_Value' of 'U_API_LOG'"
      }
   }
}

2025-07-09 16:23:05,899 - sync_service - ERROR - Failed to add API log to SAP: HTTP 400: {
   "error" : {
      "code" : -1,
      "message" : {
         "lang" : "en-us",
         "value" : "CServiceData::SetPropertyValueString failed; Value too long in property 'U_Action' of 'U_API_LOG'"
      }
   }
}

2025-07-09 16:23:05,901 - sync_service - INFO - API Call: {'service': 'shopify', 'endpoint': 'graphql_local', 'request': {'query': '\n        mutation productVariantCreate($input: ProductVariantInput!) {\n            productVariantCreate(input: $input) {\n                productVariant {\n                    id\n                    sku\n                    price\n                    inventoryItem {\n                        id\n                    }\n                    selectedOptions {\n                        name\n                        value\n                    }\n                }\n                userErrors {\n                    field\n                    message\n                }\n            }\n        }\n        ', 'variables': {'input': {'sku': 'FG-0000704', 'price': '2500.0', 'inventoryPolicy': 'DENY', 'inventoryManagement': 'SHOPIFY', 'weight': 0.0, 'weightUnit': 'KILOGRAMS', 'selectedOptions': [{'name': 'Color', 'value': 'Green'}], 'productId': 'gid://shopify/Product/7510108733506'}}}, 'response': None, 'status': None}
2025-07-09 16:23:06,284 - sync_service - ERROR - GraphQL query error for store local: {'message': 'Variable $input of type ProductVariantInput! was provided invalid value for selectedOptions (Field is not defined on ProductVariantInput)', 'locations': [{'line': 1, 'column': 31}], 'extensions': {'value': {'sku': 'FG-0000704', 'price': '2500.0', 'inventoryPolicy': 'DENY', 'inventoryManagement': 'SHOPIFY', 'weight': 0.0, 'weightUnit': 'KILOGRAMS', 'selectedOptions': [{'name': 'Color', 'value': 'Green'}], 'productId': 'gid://shopify/Product/7510108733506'}, 'problems': [{'path': ['selectedOptions'], 'explanation': 'Field is not defined on ProductVariantInput'}]}}
GraphQL Errors: [
  {
    "message": "Variable $input of type ProductVariantInput! was provided invalid value for selectedOptions (Field is not defined on ProductVariantInput)",
    "locations": [
      {
        "line": 1,
        "column": 31
      }
    ],
    "extensions": {
      "value": {
        "sku": "FG-0000704",
        "price": "2500.0",
        "inventoryPolicy": "DENY",
        "inventoryManagement": "SHOPIFY",
        "weight": 0.0,
        "weightUnit": "KILOGRAMS",
        "selectedOptions": [
          {
            "name": "Color",
            "value": "Green"
          }
        ],
        "productId": "gid://shopify/Product/7510108733506"
      },
      "problems": [
        {
          "path": [
            "selectedOptions"
          ],
          "explanation": "Field is not defined on ProductVariantInput"
        }
      ]
    }
  }
]
2025-07-09 16:23:06,449 - sync_service - ERROR - Failed to add API log to SAP: HTTP 400: {
   "error" : {
      "code" : -1,
      "message" : {
         "lang" : "en-us",
         "value" : "CServiceData::SetPropertyValueString failed; Value too long in property 'U_Value' of 'U_API_LOG'"
      }
   }
}

2025-07-09 16:23:06,450 - sync_service - ERROR - Detailed variant creation error for FG-0000704: GraphQL query error for store local: {'message': 'Variable $input of type ProductVariantInput! was provided invalid value for selectedOptions (Field is not defined on ProductVariantInput)', 'locations': [{'line': 1, 'column': 31}], 'extensions': {'value': {'sku': 'FG-0000704', 'price': '2500.0', 'inventoryPolicy': 'DENY', 'inventoryManagement': 'SHOPIFY', 'weight': 0.0, 'weightUnit': 'KILOGRAMS', 'selectedOptions': [{'name': 'Color', 'value': 'Green'}], 'productId': 'gid://shopify/Product/7510108733506'}, 'problems': [{'path': ['selectedOptions'], 'explanation': 'Field is not defined on ProductVariantInput'}]}}
GraphQL Errors: [
  {
    "message": "Variable $input of type ProductVariantInput! was provided invalid value for selectedOptions (Field is not defined on ProductVariantInput)",
    "locations": [
      {
        "line": 1,
        "column": 31
      }
    ],
    "extensions": {
      "value": {
        "sku": "FG-0000704",
        "price": "2500.0",
        "inventoryPolicy": "DENY",
        "inventoryManagement": "SHOPIFY",
        "weight": 0.0,
        "weightUnit": "KILOGRAMS",
        "selectedOptions": [
          {
            "name": "Color",
            "value": "Green"
          }
        ],
        "productId": "gid://shopify/Product/7510108733506"
      },
      "problems": [
        {
          "path": [
            "selectedOptions"
          ],
          "explanation": "Field is not defined on ProductVariantInput"
        }
      ]
    }
  }
]
2025-07-09 16:23:06,580 - sync_service - ERROR - Failed to add API log to SAP: HTTP 400: {
   "error" : {
      "code" : -1,
      "message" : {
         "lang" : "en-us",
         "value" : "CServiceData::SetPropertyValueString failed; Value too long in property 'U_Action' of 'U_API_LOG'"
      }
   }
}

2025-07-09 16:23:06,581 - sync_service - ERROR - Failed to add variant FG-0000704: GraphQL query error for store local: {'message': 'Variable $input of type ProductVariantInput! was provided invalid value for selectedOptions (Field is not defined on ProductVariantInput)', 'locations': [{'line': 1, 'column': 31}], 'extensions': {'value': {'sku': 'FG-0000704', 'price': '2500.0', 'inventoryPolicy': 'DENY', 'inventoryManagement': 'SHOPIFY', 'weight': 0.0, 'weightUnit': 'KILOGRAMS', 'selectedOptions': [{'name': 'Color', 'value': 'Green'}], 'productId': 'gid://shopify/Product/7510108733506'}, 'problems': [{'path': ['selectedOptions'], 'explanation': 'Field is not defined on ProductVariantInput'}]}}
GraphQL Errors: [
  {
    "message": "Variable $input of type ProductVariantInput! was provided invalid value for selectedOptions (Field is not defined on ProductVariantInput)",
    "locations": [
      {
        "line": 1,
        "column": 31
      }
    ],
    "extensions": {
      "value": {
        "sku": "FG-0000704",
        "price": "2500.0",
        "inventoryPolicy": "DENY",
        "inventoryManagement": "SHOPIFY",
        "weight": 0.0,
        "weightUnit": "KILOGRAMS",
        "selectedOptions": [
          {
            "name": "Color",
            "value": "Green"
          }
        ],
        "productId": "gid://shopify/Product/7510108733506"
      },
      "problems": [
        {
          "path": [
            "selectedOptions"
          ],
          "explanation": "Field is not defined on ProductVariantInput"
        }
      ]
    }
  }
]
2025-07-09 16:23:06,709 - sync_service - INFO - API log added to SAP: sap - /U_SHOPIFY_MAPPING - success
2025-07-09 16:23:06,710 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'U_SHOPIFY_MAPPING', 'request': {'method': 'POST', 'url': 'https://10.0.0.100:50000/b1s/v1/U_SHOPIFY_MAPPING', 'data': {'Code': '7510108733506', 'Name': '7510108733506', 'U_Shopify_Type': 'product', 'U_SAP_Code': 'Morsi Necklace', 'U_Shopify_Store': 'local', 'U_SAP_Type': 'item'}, 'params': None}, 'response': None, 'status': None}
2025-07-09 16:23:06,832 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'U_SHOPIFY_MAPPING', 'request': None, 'response': {'status_code': 400, 'text': '{\n   "error" : {\n      "code" : -2035,\n      "message" : {\n         "lang" : "en-us",\n         "value" : "This entry already exists in the following tables (ODBC -2035)"\n      }\n   }\n}\n'}, 'status': 'failure'}
2025-07-09 16:23:06,946 - sync_service - INFO - API log added to SAP: sap - /U_SHOPIFY_MAPPING - failure
2025-07-09 16:23:07,460 - sync_service - INFO - Sync Event: {'sync_type': 'multi_store_new_items_sap_to_shopify', 'items_processed': 1, 'success_count': 0, 'error_count': 1, 'details': None}
2025-07-09 16:23:07,581 - sync_service - INFO - API log added to SAP: system - /sync/new_items_multi_store - success
2025-07-09 16:23:07,583 - sync_service - INFO - Multi-store new items sync completed: 1 processed, 0 successful, 1 errors
2025-07-09 16:23:38,990 - sync_service - INFO - Initialized Shopify client for store: Local Store (local)
2025-07-09 16:23:38,995 - sync_service - INFO - Starting multi-store new items sync from SAP to Shopify
2025-07-09 16:23:39,684 - sync_service - INFO - SAP logging client login successful
2025-07-09 16:23:40,420 - sync_service - INFO - API log added to SAP: system - /sync/new_items_multi_store - success
2025-07-09 16:23:40,421 - sync_service - INFO - Fetching new items for store: local
2025-07-09 16:23:40,423 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'login', 'request': {'company': 'JudeBenHalim_Test', 'user': 'manager'}, 'response': None, 'status': None}
2025-07-09 16:23:41,002 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'login', 'request': None, 'response': {'status': 'success'}, 'status': 'success'}
2025-07-09 16:23:41,003 - sync_service - INFO - SAP login successful
2025-07-09 16:23:41,004 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': "view.svc/MASHURA_New_ItemsB1SLQuery?$filter=Shopify_Store eq 'local'&$orderby=MainProduct", 'request': {'method': 'GET', 'url': "https://10.0.0.100:50000/b1s/v1/view.svc/MASHURA_New_ItemsB1SLQuery?$filter=Shopify_Store eq 'local'&$orderby=MainProduct", 'data': None, 'params': None}, 'response': None, 'status': None}
2025-07-09 16:23:41,503 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': "view.svc/MASHURA_New_ItemsB1SLQuery?$filter=Shopify_Store eq 'local'&$orderby=MainProduct", 'request': None, 'response': {'odata.metadata': 'https://10.0.0.100:50000/b1s/v1/view.svc/$metadata#MASHURA_New_ItemsB1SLQuery', 'value': [{'itemcode': 'FG-0000704', 'ItemName': 'Morsi-Green', 'MainProduct': 'Morsi Necklace', 'Color': 'Green', 'OnHand': 0.0, 'IsCommited': 0.0, 'Available': 0.0, 'Price': 2500.0, 'Status': 'existing', 'Shopify_ProductCode': '7510108733506', 'Shopify_Store': 'local', 'id__': 1}]}, 'status': 'success'}
2025-07-09 16:23:41,505 - sync_service - INFO - Product group: ('Morsi Necklace', 'local') has 1 items
2025-07-09 16:23:41,508 - sync_service - INFO - Grouped 1 items into 1 product groups for store local
2025-07-09 16:23:41,508 - sync_service - INFO - Processing product group: ('Morsi Necklace', 'local') with 1 items for store local
2025-07-09 16:23:41,509 - sync_service - INFO - Found existing Shopify product ID: 7510108733506 for Morsi Necklace
2025-07-09 16:23:41,511 - sync_service - INFO - Product Morsi Necklace already exists in store local, adding variants
2025-07-09 16:23:41,512 - sync_service - INFO - API Call: {'service': 'shopify', 'endpoint': 'graphql_local', 'request': {'query': '\n        query GetProductByHandle($handle: String!) {\n            productByHandle(handle: $handle) {\n                id\n                title\n                handle\n                description\n                variants(first: 50) {\n                    edges {\n                        node {\n                            id\n                            sku\n                            price\n                            inventoryItem {\n                                id\n                            }\n                            selectedOptions {\n                                name\n                                value\n                            }\n                        }\n                    }\n                }\n            }\n        }\n        ', 'variables': {'handle': None}}, 'response': None, 'status': None}
2025-07-09 16:23:41,886 - sync_service - ERROR - GraphQL query error for store local: {'message': 'Variable $handle of type String! was provided invalid value', 'locations': [{'line': 1, 'column': 26}], 'extensions': {'value': None, 'problems': [{'path': [], 'explanation': 'Expected value to not be null'}]}}
GraphQL Errors: [
  {
    "message": "Variable $handle of type String! was provided invalid value",
    "locations": [
      {
        "line": 1,
        "column": 26
      }
    ],
    "extensions": {
      "value": null,
      "problems": [
        {
          "path": [],
          "explanation": "Expected value to not be null"
        }
      ]
    }
  }
]
2025-07-09 16:23:42,074 - sync_service - ERROR - Failed to add API log to SAP: HTTP 400: {
   "error" : {
      "code" : -1,
      "message" : {
         "lang" : "en-us",
         "value" : "CServiceData::SetPropertyValueString failed; Value too long in property 'U_Value' of 'U_API_LOG'"
      }
   }
}

2025-07-09 16:23:42,211 - sync_service - ERROR - Failed to add API log to SAP: HTTP 400: {
   "error" : {
      "code" : -1,
      "message" : {
         "lang" : "en-us",
         "value" : "CServiceData::SetPropertyValueString failed; Value too long in property 'U_Action' of 'U_API_LOG'"
      }
   }
}

2025-07-09 16:23:42,212 - sync_service - INFO - API Call: {'service': 'shopify', 'endpoint': 'graphql_local', 'request': {'query': '\n        mutation productVariantCreate($input: ProductVariantInput!) {\n            productVariantCreate(input: $input) {\n                productVariant {\n                    id\n                    sku\n                    price\n                    inventoryItem {\n                        id\n                    }\n                    selectedOptions {\n                        name\n                        value\n                    }\n                }\n                userErrors {\n                    field\n                    message\n                }\n            }\n        }\n        ', 'variables': {'input': {'sku': 'FG-0000704', 'price': '2500.0', 'inventoryPolicy': 'DENY', 'inventoryManagement': 'SHOPIFY', 'weight': 0.0, 'weightUnit': 'KILOGRAMS', 'productId': 'gid://shopify/Product/7510108733506'}}}, 'response': None, 'status': None}
2025-07-09 16:23:42,638 - sync_service - INFO - API Call: {'service': 'shopify', 'endpoint': 'graphql_local', 'request': None, 'response': {'productVariantCreate': {'productVariant': None, 'userErrors': [{'field': None, 'message': "The variant 'Default Title' already exists."}]}}, 'status': 'success'}
2025-07-09 16:23:42,744 - sync_service - ERROR - Failed to add API log to SAP: HTTP 400: {
   "error" : {
      "code" : -1,
      "message" : {
         "lang" : "en-us",
         "value" : "CServiceData::SetPropertyValueString failed; Value too long in property 'U_Action' of 'U_API_LOG'"
      }
   }
}

2025-07-09 16:23:42,745 - sync_service - ERROR - Failed to add variant FG-0000704: The variant 'Default Title' already exists.
2025-07-09 16:23:42,904 - sync_service - INFO - API log added to SAP: sap - /U_SHOPIFY_MAPPING - success
2025-07-09 16:23:42,906 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'U_SHOPIFY_MAPPING', 'request': {'method': 'POST', 'url': 'https://10.0.0.100:50000/b1s/v1/U_SHOPIFY_MAPPING', 'data': {'Code': '7510108733506', 'Name': '7510108733506', 'U_Shopify_Type': 'product', 'U_SAP_Code': 'Morsi Necklace', 'U_Shopify_Store': 'local', 'U_SAP_Type': 'item'}, 'params': None}, 'response': None, 'status': None}
2025-07-09 16:23:43,069 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'U_SHOPIFY_MAPPING', 'request': None, 'response': {'status_code': 400, 'text': '{\n   "error" : {\n      "code" : -2035,\n      "message" : {\n         "lang" : "en-us",\n         "value" : "This entry already exists in the following tables (ODBC -2035)"\n      }\n   }\n}\n'}, 'status': 'failure'}
2025-07-09 16:23:43,472 - sync_service - INFO - API log added to SAP: sap - /U_SHOPIFY_MAPPING - failure
2025-07-09 16:23:43,987 - sync_service - INFO - Sync Event: {'sync_type': 'multi_store_new_items_sap_to_shopify', 'items_processed': 1, 'success_count': 0, 'error_count': 1, 'details': None}
2025-07-09 16:23:44,110 - sync_service - INFO - API log added to SAP: system - /sync/new_items_multi_store - success
2025-07-09 16:23:44,111 - sync_service - INFO - Multi-store new items sync completed: 1 processed, 0 successful, 1 errors
2025-07-09 16:24:08,953 - sync_service - INFO - Initialized Shopify client for store: Local Store (local)
2025-07-09 16:24:08,961 - sync_service - INFO - Starting multi-store new items sync from SAP to Shopify
2025-07-09 16:24:09,574 - sync_service - INFO - SAP logging client login successful
2025-07-09 16:24:10,137 - sync_service - INFO - API log added to SAP: system - /sync/new_items_multi_store - success
2025-07-09 16:24:10,140 - sync_service - INFO - Fetching new items for store: local
2025-07-09 16:24:10,144 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'login', 'request': {'company': 'JudeBenHalim_Test', 'user': 'manager'}, 'response': None, 'status': None}
2025-07-09 16:24:10,834 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'login', 'request': None, 'response': {'status': 'success'}, 'status': 'success'}
2025-07-09 16:24:10,835 - sync_service - INFO - SAP login successful
2025-07-09 16:24:10,837 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': "view.svc/MASHURA_New_ItemsB1SLQuery?$filter=Shopify_Store eq 'local'&$orderby=MainProduct", 'request': {'method': 'GET', 'url': "https://10.0.0.100:50000/b1s/v1/view.svc/MASHURA_New_ItemsB1SLQuery?$filter=Shopify_Store eq 'local'&$orderby=MainProduct", 'data': None, 'params': None}, 'response': None, 'status': None}
2025-07-09 16:24:11,438 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': "view.svc/MASHURA_New_ItemsB1SLQuery?$filter=Shopify_Store eq 'local'&$orderby=MainProduct", 'request': None, 'response': {'odata.metadata': 'https://10.0.0.100:50000/b1s/v1/view.svc/$metadata#MASHURA_New_ItemsB1SLQuery', 'value': [{'itemcode': 'FG-0000704', 'ItemName': 'Morsi-Green', 'MainProduct': 'Morsi Necklace', 'Color': 'Green', 'OnHand': 0.0, 'IsCommited': 0.0, 'Available': 0.0, 'Price': 2500.0, 'Status': 'existing', 'Shopify_ProductCode': '7510108733506', 'Shopify_Store': 'local', 'id__': 1}]}, 'status': 'success'}
2025-07-09 16:24:11,441 - sync_service - INFO - Product group: ('Morsi Necklace', 'local') has 1 items
2025-07-09 16:24:11,442 - sync_service - INFO - Grouped 1 items into 1 product groups for store local
2025-07-09 16:24:11,443 - sync_service - INFO - Processing product group: ('Morsi Necklace', 'local') with 1 items for store local
2025-07-09 16:24:11,444 - sync_service - INFO - Found existing Shopify product ID: 7510108733506 for Morsi Necklace
2025-07-09 16:24:11,444 - sync_service - INFO - Product Morsi Necklace already exists in store local, adding variants
2025-07-09 16:24:11,445 - sync_service - INFO - API Call: {'service': 'shopify', 'endpoint': 'graphql_local', 'request': {'query': '\n        query GetProduct($id: ID!) {\n            product(id: $id) {\n                id\n                title\n                handle\n                description\n                variants(first: 50) {\n                    edges {\n                        node {\n                            id\n                            sku\n                            price\n                            inventoryItem {\n                                id\n                            }\n                            selectedOptions {\n                                name\n                                value\n                            }\n                        }\n                    }\n                }\n            }\n        }\n        ', 'variables': {'id': 'gid://shopify/Product/7510108733506'}}, 'response': None, 'status': None}
2025-07-09 16:24:21,471 - sync_service - ERROR - GraphQL query error for store local: 
2025-07-09 16:24:21,473 - sync_service - INFO - API Call: {'service': 'shopify', 'endpoint': 'graphql_local', 'request': {'query': '\n        query GetProductByHandle($handle: String!) {\n            productByHandle(handle: $handle) {\n                id\n                title\n                handle\n                description\n                variants(first: 50) {\n                    edges {\n                        node {\n                            id\n                            sku\n                            price\n                            inventoryItem {\n                                id\n                            }\n                            selectedOptions {\n                                name\n                                value\n                            }\n                        }\n                    }\n                }\n            }\n        }\n        ', 'variables': {'handle': None}}, 'response': None, 'status': None}
2025-07-09 16:24:21,857 - sync_service - ERROR - GraphQL query error for store local: {'message': 'Variable $handle of type String! was provided invalid value', 'locations': [{'line': 1, 'column': 26}], 'extensions': {'value': None, 'problems': [{'path': [], 'explanation': 'Expected value to not be null'}]}}
GraphQL Errors: [
  {
    "message": "Variable $handle of type String! was provided invalid value",
    "locations": [
      {
        "line": 1,
        "column": 26
      }
    ],
    "extensions": {
      "value": null,
      "problems": [
        {
          "path": [],
          "explanation": "Expected value to not be null"
        }
      ]
    }
  }
]
2025-07-09 16:24:22,025 - sync_service - ERROR - Failed to add API log to SAP: HTTP 400: {
   "error" : {
      "code" : -1,
      "message" : {
         "lang" : "en-us",
         "value" : "CServiceData::SetPropertyValueString failed; Value too long in property 'U_Value' of 'U_API_LOG'"
      }
   }
}

2025-07-09 16:24:22,126 - sync_service - ERROR - Failed to add API log to SAP: HTTP 400: {
   "error" : {
      "code" : -1,
      "message" : {
         "lang" : "en-us",
         "value" : "CServiceData::SetPropertyValueString failed; Value too long in property 'U_Action' of 'U_API_LOG'"
      }
   }
}

2025-07-09 16:24:22,126 - sync_service - INFO - API Call: {'service': 'shopify', 'endpoint': 'graphql_local', 'request': {'query': '\n        mutation productVariantCreate($input: ProductVariantInput!) {\n            productVariantCreate(input: $input) {\n                productVariant {\n                    id\n                    sku\n                    price\n                    inventoryItem {\n                        id\n                    }\n                    selectedOptions {\n                        name\n                        value\n                    }\n                }\n                userErrors {\n                    field\n                    message\n                }\n            }\n        }\n        ', 'variables': {'input': {'sku': 'FG-0000704', 'price': '2500.0', 'inventoryPolicy': 'DENY', 'inventoryManagement': 'SHOPIFY', 'weight': 0.0, 'weightUnit': 'KILOGRAMS', 'productId': 'gid://shopify/Product/7510108733506'}}}, 'response': None, 'status': None}
2025-07-09 16:24:22,575 - sync_service - INFO - API Call: {'service': 'shopify', 'endpoint': 'graphql_local', 'request': None, 'response': {'productVariantCreate': {'productVariant': None, 'userErrors': [{'field': None, 'message': "The variant 'Default Title' already exists."}]}}, 'status': 'success'}
2025-07-09 16:24:22,736 - sync_service - ERROR - Failed to add API log to SAP: HTTP 400: {
   "error" : {
      "code" : -1,
      "message" : {
         "lang" : "en-us",
         "value" : "CServiceData::SetPropertyValueString failed; Value too long in property 'U_Action' of 'U_API_LOG'"
      }
   }
}

2025-07-09 16:24:22,738 - sync_service - ERROR - Failed to add variant FG-0000704: The variant 'Default Title' already exists.
2025-07-09 16:24:22,911 - sync_service - INFO - API log added to SAP: sap - /U_SHOPIFY_MAPPING - success
2025-07-09 16:24:22,916 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'U_SHOPIFY_MAPPING', 'request': {'method': 'POST', 'url': 'https://10.0.0.100:50000/b1s/v1/U_SHOPIFY_MAPPING', 'data': {'Code': '7510108733506', 'Name': '7510108733506', 'U_Shopify_Type': 'product', 'U_SAP_Code': 'Morsi Necklace', 'U_Shopify_Store': 'local', 'U_SAP_Type': 'item'}, 'params': None}, 'response': None, 'status': None}
2025-07-09 16:24:23,709 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'U_SHOPIFY_MAPPING', 'request': None, 'response': {'status_code': 400, 'text': '{\n   "error" : {\n      "code" : -2035,\n      "message" : {\n         "lang" : "en-us",\n         "value" : "This entry already exists in the following tables (ODBC -2035)"\n      }\n   }\n}\n'}, 'status': 'failure'}
2025-07-09 16:24:23,857 - sync_service - INFO - API log added to SAP: sap - /U_SHOPIFY_MAPPING - failure
2025-07-09 16:24:24,369 - sync_service - INFO - Sync Event: {'sync_type': 'multi_store_new_items_sap_to_shopify', 'items_processed': 1, 'success_count': 0, 'error_count': 1, 'details': None}
2025-07-09 16:24:24,477 - sync_service - INFO - API log added to SAP: system - /sync/new_items_multi_store - success
2025-07-09 16:24:24,479 - sync_service - INFO - Multi-store new items sync completed: 1 processed, 0 successful, 1 errors
2025-07-09 16:25:48,091 - sync_service - INFO - Initialized Shopify client for store: Local Store (local)
2025-07-09 16:25:48,097 - sync_service - INFO - Starting multi-store new items sync from SAP to Shopify
2025-07-09 16:25:48,684 - sync_service - INFO - SAP logging client login successful
2025-07-09 16:25:49,226 - sync_service - INFO - API log added to SAP: system - /sync/new_items_multi_store - success
2025-07-09 16:25:49,227 - sync_service - INFO - Fetching new items for store: local
2025-07-09 16:25:49,229 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'login', 'request': {'company': 'JudeBenHalim_Test', 'user': 'manager'}, 'response': None, 'status': None}
2025-07-09 16:25:49,768 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'login', 'request': None, 'response': {'status': 'success'}, 'status': 'success'}
2025-07-09 16:25:49,772 - sync_service - INFO - SAP login successful
2025-07-09 16:25:49,777 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': "view.svc/MASHURA_New_ItemsB1SLQuery?$filter=Shopify_Store eq 'local'&$orderby=MainProduct", 'request': {'method': 'GET', 'url': "https://10.0.0.100:50000/b1s/v1/view.svc/MASHURA_New_ItemsB1SLQuery?$filter=Shopify_Store eq 'local'&$orderby=MainProduct", 'data': None, 'params': None}, 'response': None, 'status': None}
2025-07-09 16:25:50,322 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': "view.svc/MASHURA_New_ItemsB1SLQuery?$filter=Shopify_Store eq 'local'&$orderby=MainProduct", 'request': None, 'response': {'odata.metadata': 'https://10.0.0.100:50000/b1s/v1/view.svc/$metadata#MASHURA_New_ItemsB1SLQuery', 'value': [{'itemcode': 'FG-0000704', 'ItemName': 'Morsi-Green', 'MainProduct': 'Morsi Necklace', 'Color': 'Green', 'OnHand': 0.0, 'IsCommited': 0.0, 'Available': 0.0, 'Price': 2500.0, 'Status': 'existing', 'Shopify_ProductCode': '7510108733506', 'Shopify_Store': 'local', 'id__': 1}]}, 'status': 'success'}
2025-07-09 16:25:50,325 - sync_service - INFO - Product group: ('Morsi Necklace', 'local') has 1 items
2025-07-09 16:25:50,327 - sync_service - INFO - Grouped 1 items into 1 product groups for store local
2025-07-09 16:25:50,328 - sync_service - INFO - Processing product group: ('Morsi Necklace', 'local') with 1 items for store local
2025-07-09 16:25:50,329 - sync_service - INFO - Found existing Shopify product ID: 7510108733506 for Morsi Necklace
2025-07-09 16:25:50,330 - sync_service - INFO - Product Morsi Necklace already exists in store local, adding variants
2025-07-09 16:25:50,331 - sync_service - INFO - API Call: {'service': 'shopify', 'endpoint': 'graphql_local', 'request': {'query': '\n        query GetProduct($id: ID!) {\n            product(id: $id) {\n                id\n                title\n                handle\n                description\n                variants(first: 50) {\n                    edges {\n                        node {\n                            id\n                            sku\n                            price\n                            inventoryItem {\n                                id\n                            }\n                            selectedOptions {\n                                name\n                                value\n                            }\n                        }\n                    }\n                }\n            }\n        }\n        ', 'variables': {'id': 'gid://shopify/Product/7510108733506'}}, 'response': None, 'status': None}
2025-07-09 16:26:00,336 - sync_service - ERROR - GraphQL query error for store local: 
2025-07-09 16:26:00,339 - sync_service - INFO - API Call: {'service': 'shopify', 'endpoint': 'graphql_local', 'request': {'query': '\n        query GetProductByHandle($handle: String!) {\n            productByHandle(handle: $handle) {\n                id\n                title\n                handle\n                description\n                variants(first: 50) {\n                    edges {\n                        node {\n                            id\n                            sku\n                            price\n                            inventoryItem {\n                                id\n                            }\n                            selectedOptions {\n                                name\n                                value\n                            }\n                        }\n                    }\n                }\n            }\n        }\n        ', 'variables': {'handle': None}}, 'response': None, 'status': None}
2025-07-09 16:26:00,686 - sync_service - ERROR - GraphQL query error for store local: {'message': 'Variable $handle of type String! was provided invalid value', 'locations': [{'line': 1, 'column': 26}], 'extensions': {'value': None, 'problems': [{'path': [], 'explanation': 'Expected value to not be null'}]}}
GraphQL Errors: [
  {
    "message": "Variable $handle of type String! was provided invalid value",
    "locations": [
      {
        "line": 1,
        "column": 26
      }
    ],
    "extensions": {
      "value": null,
      "problems": [
        {
          "path": [],
          "explanation": "Expected value to not be null"
        }
      ]
    }
  }
]
2025-07-09 16:26:00,823 - sync_service - ERROR - Failed to add API log to SAP: HTTP 400: {
   "error" : {
      "code" : -1,
      "message" : {
         "lang" : "en-us",
         "value" : "CServiceData::SetPropertyValueString failed; Value too long in property 'U_Value' of 'U_API_LOG'"
      }
   }
}

2025-07-09 16:26:00,989 - sync_service - ERROR - Failed to add API log to SAP: HTTP 400: {
   "error" : {
      "code" : -1,
      "message" : {
         "lang" : "en-us",
         "value" : "CServiceData::SetPropertyValueString failed; Value too long in property 'U_Action' of 'U_API_LOG'"
      }
   }
}

2025-07-09 16:26:00,992 - sync_service - INFO - API Call: {'service': 'shopify', 'endpoint': 'graphql_local', 'request': {'query': '\n        mutation productVariantCreate($input: ProductVariantInput!) {\n            productVariantCreate(input: $input) {\n                productVariant {\n                    id\n                    sku\n                    price\n                    inventoryItem {\n                        id\n                    }\n                    selectedOptions {\n                        name\n                        value\n                    }\n                }\n                userErrors {\n                    field\n                    message\n                }\n            }\n        }\n        ', 'variables': {'input': {'sku': 'FG-0000704', 'price': '2500.0', 'inventoryPolicy': 'DENY', 'inventoryManagement': 'SHOPIFY', 'weight': 0.0, 'weightUnit': 'KILOGRAMS', 'productId': 'gid://shopify/Product/7510108733506'}}}, 'response': None, 'status': None}
2025-07-09 16:26:01,899 - sync_service - INFO - API Call: {'service': 'shopify', 'endpoint': 'graphql_local', 'request': None, 'response': {'productVariantCreate': {'productVariant': {'id': 'gid://shopify/ProductVariant/42295150805058', 'sku': 'FG-0000704', 'price': '2500.00', 'inventoryItem': {'id': 'gid://shopify/InventoryItem/44396281561154'}, 'selectedOptions': [{'name': 'Color', 'value': 'Default Title'}]}, 'userErrors': []}}, 'status': 'success'}
2025-07-09 16:26:01,900 - sync_service - INFO - API Call: {'service': 'shopify', 'endpoint': 'graphql_local', 'request': {'query': '\n        mutation productVariantUpdate($input: ProductVariantInput!) {\n            productVariantUpdate(input: $input) {\n                productVariant {\n                    id\n                    sku\n                    title\n                    selectedOptions {\n                        name\n                        value\n                    }\n                }\n                userErrors {\n                    field\n                    message\n                }\n            }\n        }\n        ', 'variables': {'input': {'title': 'Green', 'id': 'gid://shopify/ProductVariant/42295150805058'}}}, 'response': None, 'status': None}
2025-07-09 16:26:02,480 - sync_service - INFO - API Call: {'service': 'shopify', 'endpoint': 'graphql_local', 'request': None, 'response': {'productVariantUpdate': {'productVariant': {'id': 'gid://shopify/ProductVariant/42295150805058', 'sku': 'FG-0000704', 'title': 'Default Title', 'selectedOptions': [{'name': 'Color', 'value': 'Default Title'}]}, 'userErrors': []}}, 'status': 'success'}
2025-07-09 16:26:02,482 - sync_service - INFO - Updated variant FG-0000704 title to 'Green'
2025-07-09 16:26:02,651 - sync_service - ERROR - Failed to add API log to SAP: HTTP 400: {
   "error" : {
      "code" : -1,
      "message" : {
         "lang" : "en-us",
         "value" : "CServiceData::SetPropertyValueString failed; Value too long in property 'U_Action' of 'U_API_LOG'"
      }
   }
}

2025-07-09 16:26:02,653 - sync_service - INFO - API Call: {'service': 'shopify', 'endpoint': 'graphql_local', 'request': {'query': '\n        mutation inventoryAdjustQuantity($input: InventoryAdjustQuantityInput!) {\n            inventoryAdjustQuantity(input: $input) {\n                inventoryLevel {\n                    available\n                }\n                userErrors {\n                    field\n                    message\n                }\n            }\n        }\n        ', 'variables': {'input': {'inventoryItemId': 'gid://shopify/InventoryItem/44396281561154', 'availableDelta': 10}}}, 'response': None, 'status': None}
2025-07-09 16:26:03,133 - sync_service - ERROR - GraphQL query error for store local: {'message': "Field 'inventoryAdjustQuantity' doesn't exist on type 'Mutation'", 'locations': [{'line': 2, 'column': 3}], 'path': ['mutation inventoryAdjustQuantity', 'inventoryAdjustQuantity'], 'extensions': {'code': 'undefinedField', 'typeName': 'Mutation', 'fieldName': 'inventoryAdjustQuantity'}}
GraphQL Errors: [
  {
    "message": "Field 'inventoryAdjustQuantity' doesn't exist on type 'Mutation'",
    "locations": [
      {
        "line": 2,
        "column": 3
      }
    ],
    "path": [
      "mutation inventoryAdjustQuantity",
      "inventoryAdjustQuantity"
    ],
    "extensions": {
      "code": "undefinedField",
      "typeName": "Mutation",
      "fieldName": "inventoryAdjustQuantity"
    }
  },
  {
    "message": "Variable $input is declared by inventoryAdjustQuantity but not used",
    "locations": [
      {
        "line": 1,
        "column": 1
      }
    ],
    "path": [
      "mutation inventoryAdjustQuantity"
    ],
    "extensions": {
      "code": "variableNotUsed",
      "variableName": "input"
    }
  }
]
2025-07-09 16:26:03,260 - sync_service - ERROR - Failed to add API log to SAP: HTTP 400: {
   "error" : {
      "code" : -1,
      "message" : {
         "lang" : "en-us",
         "value" : "CServiceData::SetPropertyValueString failed; Value too long in property 'U_Value' of 'U_API_LOG'"
      }
   }
}

2025-07-09 16:26:03,261 - sync_service - WARNING - Failed to set inventory for variant FG-0000704: GraphQL query error for store local: {'message': "Field 'inventoryAdjustQuantity' doesn't exist on type 'Mutation'", 'locations': [{'line': 2, 'column': 3}], 'path': ['mutation inventoryAdjustQuantity', 'inventoryAdjustQuantity'], 'extensions': {'code': 'undefinedField', 'typeName': 'Mutation', 'fieldName': 'inventoryAdjustQuantity'}}
GraphQL Errors: [
  {
    "message": "Field 'inventoryAdjustQuantity' doesn't exist on type 'Mutation'",
    "locations": [
      {
        "line": 2,
        "column": 3
      }
    ],
    "path": [
      "mutation inventoryAdjustQuantity",
      "inventoryAdjustQuantity"
    ],
    "extensions": {
      "code": "undefinedField",
      "typeName": "Mutation",
      "fieldName": "inventoryAdjustQuantity"
    }
  },
  {
    "message": "Variable $input is declared by inventoryAdjustQuantity but not used",
    "locations": [
      {
        "line": 1,
        "column": 1
      }
    ],
    "path": [
      "mutation inventoryAdjustQuantity"
    ],
    "extensions": {
      "code": "variableNotUsed",
      "variableName": "input"
    }
  }
]
2025-07-09 16:26:03,262 - sync_service - INFO - Successfully added variant FG-0000704 to existing product
2025-07-09 16:26:03,718 - sync_service - INFO - API log added to SAP: sap - /U_SHOPIFY_MAPPING - success
2025-07-09 16:26:03,719 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'U_SHOPIFY_MAPPING', 'request': {'method': 'POST', 'url': 'https://10.0.0.100:50000/b1s/v1/U_SHOPIFY_MAPPING', 'data': {'Code': '7510108733506', 'Name': '7510108733506', 'U_Shopify_Type': 'product', 'U_SAP_Code': 'Morsi Necklace', 'U_Shopify_Store': 'local', 'U_SAP_Type': 'item'}, 'params': None}, 'response': None, 'status': None}
2025-07-09 16:26:03,851 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'U_SHOPIFY_MAPPING', 'request': None, 'response': {'status_code': 400, 'text': '{\n   "error" : {\n      "code" : -2035,\n      "message" : {\n         "lang" : "en-us",\n         "value" : "This entry already exists in the following tables (ODBC -2035)"\n      }\n   }\n}\n'}, 'status': 'failure'}
2025-07-09 16:26:03,960 - sync_service - INFO - API log added to SAP: sap - /U_SHOPIFY_MAPPING - failure
2025-07-09 16:26:04,088 - sync_service - INFO - API log added to SAP: sap - /U_SHOPIFY_MAPPING - success
2025-07-09 16:26:04,110 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'U_SHOPIFY_MAPPING', 'request': {'method': 'POST', 'url': 'https://10.0.0.100:50000/b1s/v1/U_SHOPIFY_MAPPING', 'data': {'Code': '42295150805058', 'Name': '42295150805058', 'U_Shopify_Type': 'variant', 'U_SAP_Code': 'FG-0000704', 'U_Shopify_Store': 'local', 'U_SAP_Type': 'item'}, 'params': None}, 'response': None, 'status': None}
2025-07-09 16:26:04,228 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'U_SHOPIFY_MAPPING', 'request': None, 'response': {'odata.metadata': 'https://10.0.0.100:50000/b1s/v1/$metadata#U_SHOPIFY_MAPPING/@Element', 'Code': '42295150805058', 'Name': '42295150805058', 'U_Shopify_Type': 'variant', 'U_SAP_Code': 'FG-0000704', 'U_SAP_Type': 'item', 'U_Shopify_Store': 'local'}, 'status': 'success'}
2025-07-09 16:26:04,348 - sync_service - INFO - API log added to SAP: sap - /U_SHOPIFY_MAPPING - success
2025-07-09 16:26:04,459 - sync_service - ERROR - Failed to add API log to SAP: HTTP 400: {
   "error" : {
      "code" : -1,
      "message" : {
         "lang" : "en-us",
         "value" : "CServiceData::SetPropertyValueString failed; Value too long in property 'U_Action' of 'U_API_LOG'"
      }
   }
}

2025-07-09 16:26:04,461 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'U_SHOPIFY_MAPPING', 'request': {'method': 'POST', 'url': 'https://10.0.0.100:50000/b1s/v1/U_SHOPIFY_MAPPING', 'data': {'Code': '44396281561154', 'Name': '44396281561154', 'U_Shopify_Type': 'variant_inventory', 'U_SAP_Code': 'FG-0000704', 'U_Shopify_Store': 'local', 'U_SAP_Type': 'item'}, 'params': None}, 'response': None, 'status': None}
2025-07-09 16:26:04,579 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'U_SHOPIFY_MAPPING', 'request': None, 'response': {'odata.metadata': 'https://10.0.0.100:50000/b1s/v1/$metadata#U_SHOPIFY_MAPPING/@Element', 'Code': '44396281561154', 'Name': '44396281561154', 'U_Shopify_Type': 'variant_inventory', 'U_SAP_Code': 'FG-0000704', 'U_SAP_Type': 'item', 'U_Shopify_Store': 'local'}, 'status': 'success'}
2025-07-09 16:26:04,692 - sync_service - ERROR - Failed to add API log to SAP: HTTP 400: {
   "error" : {
      "code" : -1,
      "message" : {
         "lang" : "en-us",
         "value" : "CServiceData::SetPropertyValueString failed; Value too long in property 'U_Action' of 'U_API_LOG'"
      }
   }
}

2025-07-09 16:26:05,205 - sync_service - INFO - Sync Event: {'sync_type': 'multi_store_new_items_sap_to_shopify', 'items_processed': 1, 'success_count': 1, 'error_count': 0, 'details': None}
2025-07-09 16:26:05,566 - sync_service - INFO - API log added to SAP: system - /sync/new_items_multi_store - success
2025-07-09 16:26:05,567 - sync_service - INFO - Multi-store new items sync completed: 1 processed, 1 successful, 0 errors
2025-07-09 16:32:16,807 - sync_service - INFO - Initialized Shopify client for store: Local Store (local)
2025-07-09 16:32:16,807 - sync_service - INFO - Starting multi-store new items sync from SAP to Shopify
2025-07-09 16:32:37,865 - sync_service - ERROR - SAP logging client login error: All connection attempts failed
2025-07-09 16:32:37,867 - sync_service - ERROR - Failed to add API log to SAP: Failed to login to SAP
2025-07-09 16:32:37,872 - sync_service - INFO - Fetching new items for store: local
2025-07-09 16:32:37,880 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'login', 'request': {'company': 'JudeBenHalim_Test', 'user': 'manager'}, 'response': None, 'status': None}
2025-07-09 16:32:58,920 - sync_service - ERROR - SAP login error: All connection attempts failed
2025-07-09 16:32:58,930 - sync_service - ERROR - Failed to get new items from SAP for store local: Failed to login to SAP
2025-07-09 16:32:58,931 - sync_service - INFO - Sync Event: {'sync_type': 'multi_store_new_items_sap_to_shopify', 'items_processed': 0, 'success_count': 0, 'error_count': 0, 'details': None}
2025-07-09 16:36:32,668 - sync_service - INFO - Initialized Shopify client for store: Local Store (local)
2025-07-09 16:36:32,672 - sync_service - INFO - Starting multi-store new items sync from SAP to Shopify
2025-07-09 16:36:33,319 - sync_service - INFO - SAP logging client login successful
2025-07-09 16:36:33,830 - sync_service - INFO - API log added to SAP: system - /sync/new_items_multi_store - success
2025-07-09 16:36:33,831 - sync_service - INFO - Fetching new items for store: local
2025-07-09 16:36:33,832 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'login', 'request': {'company': 'JudeBenHalim_Test', 'user': 'manager'}, 'response': None, 'status': None}
2025-07-09 16:36:34,319 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'login', 'request': None, 'response': {'status': 'success'}, 'status': 'success'}
2025-07-09 16:36:34,320 - sync_service - INFO - SAP login successful
2025-07-09 16:36:34,321 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': "view.svc/MASHURA_New_ItemsB1SLQuery?$filter=Shopify_Store eq 'local'&$orderby=MainProduct", 'request': {'method': 'GET', 'url': "https://10.0.0.100:50000/b1s/v1/view.svc/MASHURA_New_ItemsB1SLQuery?$filter=Shopify_Store eq 'local'&$orderby=MainProduct", 'data': None, 'params': None}, 'response': None, 'status': None}
2025-07-09 16:36:34,805 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': "view.svc/MASHURA_New_ItemsB1SLQuery?$filter=Shopify_Store eq 'local'&$orderby=MainProduct", 'request': None, 'response': {'odata.metadata': 'https://10.0.0.100:50000/b1s/v1/view.svc/$metadata#MASHURA_New_ItemsB1SLQuery', 'value': [{'itemcode': 'FG-0000704', 'ItemName': 'Morsi-Green', 'MainProduct': 'Morsi Necklace', 'Color': 'Green', 'OnHand': 0.0, 'IsCommited': 0.0, 'Available': 0.0, 'Price': 2500.0, 'Status': 'existing', 'Shopify_ProductCode': '7510108733506', 'Shopify_Store': 'local', 'id__': 1}]}, 'status': 'success'}
2025-07-09 16:36:34,809 - sync_service - INFO - Product group: ('Morsi Necklace', 'local') has 1 items
2025-07-09 16:36:34,811 - sync_service - INFO - Grouped 1 items into 1 product groups for store local
2025-07-09 16:36:34,811 - sync_service - INFO - Processing product group: ('Morsi Necklace', 'local') with 1 items for store local
2025-07-09 16:36:34,812 - sync_service - INFO - Found existing Shopify product ID: 7510108733506 for Morsi Necklace
2025-07-09 16:36:34,814 - sync_service - INFO - Product Morsi Necklace already exists in store local, adding variants
2025-07-09 16:36:34,814 - sync_service - INFO - API Call: {'service': 'shopify', 'endpoint': 'graphql_local', 'request': {'query': '\n        query GetProduct($id: ID!) {\n            product(id: $id) {\n                id\n                title\n                handle\n                description\n                variants(first: 50) {\n                    edges {\n                        node {\n                            id\n                            sku\n                            price\n                            inventoryItem {\n                                id\n                            }\n                            selectedOptions {\n                                name\n                                value\n                            }\n                        }\n                    }\n                }\n            }\n        }\n        ', 'variables': {'id': 'gid://shopify/Product/7510108733506'}}, 'response': None, 'status': None}
2025-07-09 16:36:35,276 - sync_service - INFO - API Call: {'service': 'shopify', 'endpoint': 'graphql_local', 'request': None, 'response': {'product': {'id': 'gid://shopify/Product/7510108733506', 'title': 'Morsi Necklace', 'handle': 'morsi-necklace-1', 'description': '', 'variants': {'edges': [{'node': {'id': 'gid://shopify/ProductVariant/42293507063874', 'sku': 'FG-0000701', 'price': '2500.00', 'inventoryItem': {'id': 'gid://shopify/InventoryItem/44394637557826'}, 'selectedOptions': [{'name': 'Color', 'value': 'Black Gold'}]}}, {'node': {'id': 'gid://shopify/ProductVariant/42293507096642', 'sku': 'FG-0000702', 'price': '2500.00', 'inventoryItem': {'id': 'gid://shopify/InventoryItem/44394637590594'}, 'selectedOptions': [{'name': 'Color', 'value': 'Rose Gold'}]}}, {'node': {'id': 'gid://shopify/ProductVariant/42293507129410', 'sku': 'FG-0000703', 'price': '2500.00', 'inventoryItem': {'id': 'gid://shopify/InventoryItem/44394637623362'}, 'selectedOptions': [{'name': 'Color', 'value': 'White Gold'}]}}]}}}, 'status': 'success'}
2025-07-09 16:36:35,278 - sync_service - INFO - API Call: {'service': 'shopify', 'endpoint': 'graphql_local', 'request': {'query': '\n        query GetProductByHandle($handle: String!) {\n            productByHandle(handle: $handle) {\n                id\n                title\n                handle\n                description\n                variants(first: 50) {\n                    edges {\n                        node {\n                            id\n                            sku\n                            price\n                            inventoryItem {\n                                id\n                            }\n                            selectedOptions {\n                                name\n                                value\n                            }\n                        }\n                    }\n                }\n            }\n        }\n        ', 'variables': {'handle': None}}, 'response': None, 'status': None}
2025-07-09 16:36:35,663 - sync_service - ERROR - GraphQL query error for store local: {'message': 'Variable $handle of type String! was provided invalid value', 'locations': [{'line': 1, 'column': 26}], 'extensions': {'value': None, 'problems': [{'path': [], 'explanation': 'Expected value to not be null'}]}}
GraphQL Errors: [
  {
    "message": "Variable $handle of type String! was provided invalid value",
    "locations": [
      {
        "line": 1,
        "column": 26
      }
    ],
    "extensions": {
      "value": null,
      "problems": [
        {
          "path": [],
          "explanation": "Expected value to not be null"
        }
      ]
    }
  }
]
2025-07-09 16:36:35,769 - sync_service - ERROR - Failed to add API log to SAP: HTTP 400: {
   "error" : {
      "code" : -1,
      "message" : {
         "lang" : "en-us",
         "value" : "CServiceData::SetPropertyValueString failed; Value too long in property 'U_Value' of 'U_API_LOG'"
      }
   }
}

2025-07-09 16:36:35,852 - sync_service - ERROR - Failed to add API log to SAP: HTTP 400: {
   "error" : {
      "code" : -1,
      "message" : {
         "lang" : "en-us",
         "value" : "CServiceData::SetPropertyValueString failed; Value too long in property 'U_Action' of 'U_API_LOG'"
      }
   }
}

2025-07-09 16:36:35,853 - sync_service - INFO - API Call: {'service': 'shopify', 'endpoint': 'graphql_local', 'request': {'query': '\n        mutation productVariantCreate($input: ProductVariantInput!) {\n            productVariantCreate(input: $input) {\n                productVariant {\n                    id\n                    sku\n                    price\n                    inventoryItem {\n                        id\n                    }\n                    selectedOptions {\n                        name\n                        value\n                    }\n                }\n                userErrors {\n                    field\n                    message\n                }\n            }\n        }\n        ', 'variables': {'input': {'sku': 'FG-0000704', 'price': '2500.0', 'inventoryPolicy': 'DENY', 'inventoryManagement': 'SHOPIFY', 'weight': 0.0, 'weightUnit': 'KILOGRAMS', 'productId': 'gid://shopify/Product/7510108733506'}}}, 'response': None, 'status': None}
2025-07-09 16:36:36,504 - sync_service - INFO - API Call: {'service': 'shopify', 'endpoint': 'graphql_local', 'request': None, 'response': {'productVariantCreate': {'productVariant': {'id': 'gid://shopify/ProductVariant/42295166599234', 'sku': 'FG-0000704', 'price': '2500.00', 'inventoryItem': {'id': 'gid://shopify/InventoryItem/44396297355330'}, 'selectedOptions': [{'name': 'Color', 'value': 'Default Title'}]}, 'userErrors': []}}, 'status': 'success'}
2025-07-09 16:36:36,505 - sync_service - INFO - API Call: {'service': 'shopify', 'endpoint': 'graphql_local', 'request': {'query': '\n        mutation productVariantUpdate($input: ProductVariantInput!) {\n            productVariantUpdate(input: $input) {\n                productVariant {\n                    id\n                    sku\n                    title\n                    selectedOptions {\n                        name\n                        value\n                    }\n                }\n                userErrors {\n                    field\n                    message\n                }\n            }\n        }\n        ', 'variables': {'input': {'title': 'Green', 'selectedOptions': [{'name': 'Color', 'value': 'Green'}], 'id': 'gid://shopify/ProductVariant/42295166599234'}}}, 'response': None, 'status': None}
2025-07-09 16:36:46,501 - sync_service - ERROR - GraphQL query error for store local: 
2025-07-09 16:36:46,503 - sync_service - WARNING - Failed to update variant FG-0000704 title: GraphQL query error for store local: 
2025-07-09 16:36:46,753 - sync_service - ERROR - Failed to add API log to SAP: HTTP 400: {
   "error" : {
      "code" : -1,
      "message" : {
         "lang" : "en-us",
         "value" : "CServiceData::SetPropertyValueString failed; Value too long in property 'U_Action' of 'U_API_LOG'"
      }
   }
}

2025-07-09 16:36:46,754 - sync_service - INFO - API Call: {'service': 'shopify', 'endpoint': 'graphql_local', 'request': {'query': '\n        mutation inventoryAdjustQuantity($input: InventoryAdjustQuantityInput!) {\n            inventoryAdjustQuantity(input: $input) {\n                inventoryLevel {\n                    available\n                }\n                userErrors {\n                    field\n                    message\n                }\n            }\n        }\n        ', 'variables': {'input': {'inventoryItemId': 'gid://shopify/InventoryItem/44396297355330', 'availableDelta': 10}}}, 'response': None, 'status': None}
2025-07-09 16:36:49,230 - sync_service - ERROR - GraphQL query error for store local: {'message': "Field 'inventoryAdjustQuantity' doesn't exist on type 'Mutation'", 'locations': [{'line': 2, 'column': 3}], 'path': ['mutation inventoryAdjustQuantity', 'inventoryAdjustQuantity'], 'extensions': {'code': 'undefinedField', 'typeName': 'Mutation', 'fieldName': 'inventoryAdjustQuantity'}}
GraphQL Errors: [
  {
    "message": "Field 'inventoryAdjustQuantity' doesn't exist on type 'Mutation'",
    "locations": [
      {
        "line": 2,
        "column": 3
      }
    ],
    "path": [
      "mutation inventoryAdjustQuantity",
      "inventoryAdjustQuantity"
    ],
    "extensions": {
      "code": "undefinedField",
      "typeName": "Mutation",
      "fieldName": "inventoryAdjustQuantity"
    }
  },
  {
    "message": "Variable $input is declared by inventoryAdjustQuantity but not used",
    "locations": [
      {
        "line": 1,
        "column": 1
      }
    ],
    "path": [
      "mutation inventoryAdjustQuantity"
    ],
    "extensions": {
      "code": "variableNotUsed",
      "variableName": "input"
    }
  }
]
2025-07-09 16:36:49,335 - sync_service - ERROR - Failed to add API log to SAP: HTTP 400: {
   "error" : {
      "code" : -1,
      "message" : {
         "lang" : "en-us",
         "value" : "CServiceData::SetPropertyValueString failed; Value too long in property 'U_Value' of 'U_API_LOG'"
      }
   }
}

2025-07-09 16:36:49,336 - sync_service - WARNING - Failed to set inventory for variant FG-0000704: GraphQL query error for store local: {'message': "Field 'inventoryAdjustQuantity' doesn't exist on type 'Mutation'", 'locations': [{'line': 2, 'column': 3}], 'path': ['mutation inventoryAdjustQuantity', 'inventoryAdjustQuantity'], 'extensions': {'code': 'undefinedField', 'typeName': 'Mutation', 'fieldName': 'inventoryAdjustQuantity'}}
GraphQL Errors: [
  {
    "message": "Field 'inventoryAdjustQuantity' doesn't exist on type 'Mutation'",
    "locations": [
      {
        "line": 2,
        "column": 3
      }
    ],
    "path": [
      "mutation inventoryAdjustQuantity",
      "inventoryAdjustQuantity"
    ],
    "extensions": {
      "code": "undefinedField",
      "typeName": "Mutation",
      "fieldName": "inventoryAdjustQuantity"
    }
  },
  {
    "message": "Variable $input is declared by inventoryAdjustQuantity but not used",
    "locations": [
      {
        "line": 1,
        "column": 1
      }
    ],
    "path": [
      "mutation inventoryAdjustQuantity"
    ],
    "extensions": {
      "code": "variableNotUsed",
      "variableName": "input"
    }
  }
]
2025-07-09 16:36:49,337 - sync_service - INFO - Successfully added variant FG-0000704 to existing product
2025-07-09 16:36:49,465 - sync_service - INFO - API log added to SAP: sap - /U_SHOPIFY_MAPPING - success
2025-07-09 16:36:49,467 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'U_SHOPIFY_MAPPING', 'request': {'method': 'POST', 'url': 'https://10.0.0.100:50000/b1s/v1/U_SHOPIFY_MAPPING', 'data': {'Code': '7510108733506', 'Name': '7510108733506', 'U_Shopify_Type': 'product', 'U_SAP_Code': 'Morsi Necklace', 'U_Shopify_Store': 'local', 'U_SAP_Type': 'item'}, 'params': None}, 'response': None, 'status': None}
2025-07-09 16:36:49,618 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'U_SHOPIFY_MAPPING', 'request': None, 'response': {'status_code': 400, 'text': '{\n   "error" : {\n      "code" : -2035,\n      "message" : {\n         "lang" : "en-us",\n         "value" : "This entry already exists in the following tables (ODBC -2035)"\n      }\n   }\n}\n'}, 'status': 'failure'}
2025-07-09 16:36:49,763 - sync_service - INFO - API log added to SAP: sap - /U_SHOPIFY_MAPPING - failure
2025-07-09 16:36:49,915 - sync_service - INFO - API log added to SAP: sap - /U_SHOPIFY_MAPPING - success
2025-07-09 16:36:49,916 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'U_SHOPIFY_MAPPING', 'request': {'method': 'POST', 'url': 'https://10.0.0.100:50000/b1s/v1/U_SHOPIFY_MAPPING', 'data': {'Code': '42295166599234', 'Name': '42295166599234', 'U_Shopify_Type': 'variant', 'U_SAP_Code': 'FG-0000704', 'U_Shopify_Store': 'local', 'U_SAP_Type': 'item'}, 'params': None}, 'response': None, 'status': None}
2025-07-09 16:36:50,076 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'U_SHOPIFY_MAPPING', 'request': None, 'response': {'odata.metadata': 'https://10.0.0.100:50000/b1s/v1/$metadata#U_SHOPIFY_MAPPING/@Element', 'Code': '42295166599234', 'Name': '42295166599234', 'U_Shopify_Type': 'variant', 'U_SAP_Code': 'FG-0000704', 'U_SAP_Type': 'item', 'U_Shopify_Store': 'local'}, 'status': 'success'}
2025-07-09 16:36:50,238 - sync_service - INFO - API log added to SAP: sap - /U_SHOPIFY_MAPPING - success
2025-07-09 16:36:50,383 - sync_service - ERROR - Failed to add API log to SAP: HTTP 400: {
   "error" : {
      "code" : -1,
      "message" : {
         "lang" : "en-us",
         "value" : "CServiceData::SetPropertyValueString failed; Value too long in property 'U_Action' of 'U_API_LOG'"
      }
   }
}

2025-07-09 16:36:50,385 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'U_SHOPIFY_MAPPING', 'request': {'method': 'POST', 'url': 'https://10.0.0.100:50000/b1s/v1/U_SHOPIFY_MAPPING', 'data': {'Code': '44396297355330', 'Name': '44396297355330', 'U_Shopify_Type': 'variant_inventory', 'U_SAP_Code': 'FG-0000704', 'U_Shopify_Store': 'local', 'U_SAP_Type': 'item'}, 'params': None}, 'response': None, 'status': None}
2025-07-09 16:36:50,512 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'U_SHOPIFY_MAPPING', 'request': None, 'response': {'odata.metadata': 'https://10.0.0.100:50000/b1s/v1/$metadata#U_SHOPIFY_MAPPING/@Element', 'Code': '44396297355330', 'Name': '44396297355330', 'U_Shopify_Type': 'variant_inventory', 'U_SAP_Code': 'FG-0000704', 'U_SAP_Type': 'item', 'U_Shopify_Store': 'local'}, 'status': 'success'}
2025-07-09 16:36:50,639 - sync_service - ERROR - Failed to add API log to SAP: HTTP 400: {
   "error" : {
      "code" : -1,
      "message" : {
         "lang" : "en-us",
         "value" : "CServiceData::SetPropertyValueString failed; Value too long in property 'U_Action' of 'U_API_LOG'"
      }
   }
}

2025-07-09 16:36:51,149 - sync_service - INFO - Sync Event: {'sync_type': 'multi_store_new_items_sap_to_shopify', 'items_processed': 1, 'success_count': 1, 'error_count': 0, 'details': None}
2025-07-09 16:36:51,276 - sync_service - INFO - API log added to SAP: system - /sync/new_items_multi_store - success
2025-07-09 16:36:51,277 - sync_service - INFO - Multi-store new items sync completed: 1 processed, 1 successful, 0 errors
2025-07-09 16:37:54,636 - sync_service - INFO - Initialized Shopify client for store: Local Store (local)
2025-07-09 16:37:54,645 - sync_service - INFO - Starting multi-store new items sync from SAP to Shopify
2025-07-09 16:37:55,273 - sync_service - INFO - SAP logging client login successful
2025-07-09 16:37:55,826 - sync_service - INFO - API log added to SAP: system - /sync/new_items_multi_store - success
2025-07-09 16:37:55,828 - sync_service - INFO - Fetching new items for store: local
2025-07-09 16:37:55,829 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'login', 'request': {'company': 'JudeBenHalim_Test', 'user': 'manager'}, 'response': None, 'status': None}
2025-07-09 16:37:56,682 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'login', 'request': None, 'response': {'status': 'success'}, 'status': 'success'}
2025-07-09 16:37:56,684 - sync_service - INFO - SAP login successful
2025-07-09 16:37:56,686 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': "view.svc/MASHURA_New_ItemsB1SLQuery?$filter=Shopify_Store eq 'local'&$orderby=MainProduct", 'request': {'method': 'GET', 'url': "https://10.0.0.100:50000/b1s/v1/view.svc/MASHURA_New_ItemsB1SLQuery?$filter=Shopify_Store eq 'local'&$orderby=MainProduct", 'data': None, 'params': None}, 'response': None, 'status': None}
2025-07-09 16:37:57,337 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': "view.svc/MASHURA_New_ItemsB1SLQuery?$filter=Shopify_Store eq 'local'&$orderby=MainProduct", 'request': None, 'response': {'odata.metadata': 'https://10.0.0.100:50000/b1s/v1/view.svc/$metadata#MASHURA_New_ItemsB1SLQuery', 'value': []}, 'status': 'success'}
2025-07-09 16:37:57,338 - sync_service - INFO - No new items found in SAP for store local
2025-07-09 16:37:57,341 - sync_service - INFO - Sync Event: {'sync_type': 'multi_store_new_items_sap_to_shopify', 'items_processed': 0, 'success_count': 0, 'error_count': 0, 'details': None}
2025-07-09 16:37:57,697 - sync_service - INFO - API log added to SAP: system - /sync/new_items_multi_store - success
2025-07-09 16:37:57,698 - sync_service - INFO - Multi-store new items sync completed: 0 processed, 0 successful, 0 errors
2025-07-09 16:39:04,386 - sync_service - INFO - Initialized Shopify client for store: Local Store (local)
2025-07-09 16:39:04,388 - sync_service - INFO - Updating variant gid://shopify/ProductVariant/42295166599234 with title 'Green'
2025-07-09 16:39:04,389 - sync_service - INFO - API Call: {'service': 'shopify', 'endpoint': 'graphql_local', 'request': {'query': '\n        mutation productVariantUpdate($input: ProductVariantInput!) {\n            productVariantUpdate(input: $input) {\n                productVariant {\n                    id\n                    sku\n                    title\n                    selectedOptions {\n                        name\n                        value\n                    }\n                }\n                userErrors {\n                    field\n                    message\n                }\n            }\n        }\n        ', 'variables': {'input': {'title': 'Green', 'id': 'gid://shopify/ProductVariant/42295166599234'}}}, 'response': None, 'status': None}
2025-07-09 16:39:14,418 - sync_service - ERROR - GraphQL query error for store local: 
2025-07-09 16:39:14,420 - sync_service - ERROR - ❌ Failed to update variant: GraphQL query error for store local: 
2025-07-09 16:39:47,107 - sync_service - INFO - Initialized Shopify client for store: Local Store (local)
2025-07-09 16:39:47,266 - sync_service - INFO - Checking variants for product gid://shopify/Product/7510108733506
2025-07-09 16:39:47,527 - sync_service - INFO - API Call: {'service': 'shopify', 'endpoint': 'graphql_local', 'request': {'query': '\n        query GetProduct($id: ID!) {\n            product(id: $id) {\n                id\n                title\n                handle\n                description\n                variants(first: 50) {\n                    edges {\n                        node {\n                            id\n                            sku\n                            price\n                            inventoryItem {\n                                id\n                            }\n                            selectedOptions {\n                                name\n                                value\n                            }\n                        }\n                    }\n                }\n            }\n        }\n        ', 'variables': {'id': 'gid://shopify/Product/7510108733506'}}, 'response': None, 'status': None}
2025-07-09 16:39:57,646 - sync_service - ERROR - GraphQL query error for store local: 
2025-07-09 16:39:57,648 - sync_service - ERROR - ❌ Failed to get product: GraphQL query error for store local: 
2025-07-09 16:41:03,031 - sync_service - INFO - Initialized Shopify client for store: Local Store (local)
2025-07-09 16:41:03,037 - sync_service - INFO - Testing Shopify connection...
2025-07-09 16:41:03,037 - sync_service - INFO - API Call: {'service': 'shopify', 'endpoint': 'graphql_local', 'request': {'query': '\n        query {\n            locations(first: 10) {\n                edges {\n                    node {\n                        id\n                        name\n                        address {\n                            address1\n                            city\n                            country\n                        }\n                        isActive\n                    }\n                }\n            }\n        }\n        ', 'variables': None}, 'response': None, 'status': None}
2025-07-09 16:41:13,064 - sync_service - ERROR - GraphQL query error for store local: 
2025-07-09 16:41:13,067 - sync_service - ERROR - ❌ Shopify connection failed: GraphQL query error for store local: 
2025-07-09 16:41:57,538 - sync_service - INFO - Testing REST connection to https://eg-judebenhalim.myshopify.com/admin/api/2024-01/products.json
2025-07-09 16:41:59,132 - sync_service - INFO - ✅ REST connection successful
2025-07-09 16:41:59,134 - sync_service - INFO - Found 50 products
2025-07-09 16:42:16,269 - sync_service - INFO - Searching for variant with SKU: FG-0000704
2025-07-09 16:42:27,912 - sync_service - INFO - Found variant: ID=42003146211394, Current title=Default Title
2025-07-09 16:42:27,914 - sync_service - INFO - Updating variant 42003146211394 with title 'Green'
2025-07-09 16:42:28,212 - sync_service - INFO - ✅ Successfully updated variant title to 'Green'
2025-07-09 16:42:28,213 - sync_service - INFO - Updated variant: {'variant': {'id': 42003146211394, 'product_id': 7442022170690, 'title': 'Default Title', 'price': '4800.00', 'position': 1, 'inventory_policy': 'deny', 'compare_at_price': None, 'option1': 'Default Title', 'option2': None, 'option3': None, 'created_at': '2025-02-21T20:03:26+02:00', 'updated_at': '2025-07-09T10:14:21+03:00', 'taxable': False, 'barcode': None, 'fulfillment_service': 'manual', 'grams': 0, 'inventory_management': 'shopify', 'requires_shipping': True, 'sku': 'FG-0000075', 'weight': 0.0, 'weight_unit': 'g', 'inventory_item_id': 44107688411202, 'inventory_quantity': 3, 'old_inventory_quantity': 3, 'admin_graphql_api_id': 'gid://shopify/ProductVariant/42003146211394', 'image_id': None}}
2025-07-09 16:42:45,620 - sync_service - INFO - Listing all variants...
2025-07-09 16:42:58,430 - sync_service - INFO - Found 250 variants:
2025-07-09 16:42:58,435 - sync_service - INFO -   *** TARGET: SKU=FG-0000075, Title=Default Title, ID=42003146211394 ***
2025-07-09 16:42:58,441 - sync_service - INFO -   *** TARGET: SKU=FG-0000077, Title=Default Title, ID=42003146276930 ***
2025-07-09 16:42:58,443 - sync_service - INFO -   - SKU=FG-0000014, Title=Default Title, ID=42003146342466
2025-07-09 16:42:58,447 - sync_service - INFO -   - SKU=FG-0000225, Title=Default Title, ID=42003146408002
2025-07-09 16:42:58,449 - sync_service - INFO -   - SKU=FG-0000280, Title=Default Title, ID=42003146440770
2025-07-09 16:42:58,451 - sync_service - INFO -   - SKU=FG-0000287, Title=Default Title, ID=42003146506306
2025-07-09 16:42:58,454 - sync_service - INFO -   - SKU=FG-0000267, Title=Default Title, ID=42003146539074
2025-07-09 16:42:58,569 - sync_service - INFO -   - SKU=FG-0000224, Title=Default Title, ID=42003146571842
2025-07-09 16:42:58,585 - sync_service - INFO -   - SKU=FG-0000223, Title=Default Title, ID=42003146637378
2025-07-09 16:42:58,599 - sync_service - INFO -   - SKU=FG-0000344, Title=Default Title, ID=42003146670146
2025-07-09 16:42:58,603 - sync_service - INFO -   - SKU=FG-0000347, Title=Default Title, ID=42003146702914
2025-07-09 16:42:58,722 - sync_service - INFO -   - SKU=FG-0000342, Title=Default Title, ID=42003146768450
2025-07-09 16:42:58,743 - sync_service - INFO -   - SKU=FG-0000345, Title=Default Title, ID=42003146801218
2025-07-09 16:42:58,749 - sync_service - INFO -   - SKU=FG-0000366, Title=Default Title, ID=42003146833986
2025-07-09 16:42:58,935 - sync_service - INFO -   - SKU=FG-0000367, Title=Default Title, ID=42003146899522
2025-07-09 16:42:58,952 - sync_service - INFO -   - SKU=FG-0000368, Title=Default Title, ID=42003146932290
2025-07-09 16:42:58,977 - sync_service - INFO -   - SKU=FG-0000369, Title=Default Title, ID=42003146997826
2025-07-09 16:42:58,984 - sync_service - INFO -   - SKU=FG-0000383, Title=Default Title, ID=42003147030594
2025-07-09 16:42:58,998 - sync_service - INFO -   - SKU=FG-0000384, Title=Default Title, ID=42003147096130
2025-07-09 16:42:59,002 - sync_service - INFO -   - SKU=FG-0000361, Title=Default Title, ID=42003147128898
2025-07-09 16:42:59,009 - sync_service - INFO -   - SKU=FG-0000427, Title=Default Title, ID=42003147194434
2025-07-09 16:42:59,016 - sync_service - INFO -   - SKU=FG-0000237, Title=Lime Green-Magenta, ID=42003147227202
2025-07-09 16:42:59,018 - sync_service - INFO -   - SKU=FG-0000238, Title=Burnt Orange-Royal Blue, ID=42003147259970
2025-07-09 16:42:59,020 - sync_service - INFO -   - SKU=FG-0000235, Title=Royal Blue-Olive Green, ID=42003147292738
2025-07-09 16:42:59,022 - sync_service - INFO -   - SKU=FG-0000239, Title=Magenta-Lime Green, ID=42003147325506
2025-07-09 16:42:59,156 - sync_service - INFO -   - SKU=FG-0000236, Title=Olive Green-Burnt Orange, ID=42003147358274
2025-07-09 16:42:59,164 - sync_service - INFO -   - SKU=FG-0000255, Title=Rose, ID=42003147423810
2025-07-09 16:42:59,172 - sync_service - INFO -   - SKU=FG-0000254, Title=Olive Green, ID=42003147456578
2025-07-09 16:42:59,182 - sync_service - INFO -   - SKU=FG-0000256, Title=Burnt Orange, ID=42003147489346
2025-07-09 16:42:59,186 - sync_service - INFO -   - SKU=FG-0000257, Title=Pearl White, ID=42003147522114
2025-07-09 16:42:59,190 - sync_service - INFO -   - SKU=FG-0000270, Title=Rose, ID=42003147554882
2025-07-09 16:42:59,192 - sync_service - INFO -   - SKU=FG-0000268, Title=Olive Green, ID=42003147587650
2025-07-09 16:42:59,194 - sync_service - INFO -   - SKU=FG-0000269, Title=Burnt Orange, ID=42003147620418
2025-07-09 16:42:59,195 - sync_service - INFO -   - SKU=FG-0000271, Title=Pearl White, ID=42003147653186
2025-07-09 16:42:59,200 - sync_service - INFO -   - SKU=FG-0000334, Title=Pearl White, ID=42003147718722
2025-07-09 16:42:59,201 - sync_service - INFO -   - SKU=FG-0000266, Title=Rose, ID=42003147751490
2025-07-09 16:42:59,202 - sync_service - INFO -   - SKU=FG-0000288, Title=Olive Green, ID=42003147784258
2025-07-09 16:42:59,203 - sync_service - INFO -   - SKU=FG-0000265, Title=Lime Green, ID=42003147817026
2025-07-09 16:42:59,204 - sync_service - INFO -   - SKU=FG-0000352, Title=Frost White, ID=42003147849794
2025-07-09 16:42:59,206 - sync_service - INFO -   - SKU=FG-0000354, Title=Maroon, ID=42003147882562
2025-07-09 16:42:59,207 - sync_service - INFO -   - SKU=FG-0000353, Title=Christmas Forest Green, ID=42003147915330
2025-07-09 16:42:59,207 - sync_service - INFO -   - SKU=FG-0000372, Title=Jupiter Red, ID=42003147980866
2025-07-09 16:42:59,209 - sync_service - INFO -   - SKU=FG-0000373, Title=Moon White, ID=42003148013634
2025-07-09 16:42:59,209 - sync_service - INFO -   - SKU=FG-0000370, Title=Space Blue, ID=42003148046402
2025-07-09 16:42:59,211 - sync_service - INFO -   - SKU=FG-0000371, Title=Terrestrial Green, ID=42003148079170
2025-07-09 16:42:59,212 - sync_service - INFO -   - SKU=FG-0000382, Title=Space Blue, ID=42003148111938
2025-07-09 16:42:59,214 - sync_service - INFO -   - SKU=FG-0000395, Title=Terrestrial Green, ID=42003148144706
2025-07-09 16:42:59,215 - sync_service - INFO -   - SKU=FG-0000396, Title=Jupiter Red, ID=42003148177474
2025-07-09 16:42:59,215 - sync_service - INFO -   - SKU=FG-0000381, Title=Moon White, ID=42003148243010
2025-07-09 16:42:59,216 - sync_service - INFO -   - SKU=FG-0000378, Title=Space Blue, ID=42003148275778
2025-07-09 16:42:59,217 - sync_service - INFO -   - SKU=FG-0000379, Title=Terrestrial Green, ID=42003148308546
2025-07-09 16:42:59,218 - sync_service - INFO -   - SKU=FG-0000380, Title=Jupiter Red, ID=42003148341314
2025-07-09 16:42:59,220 - sync_service - INFO -   - SKU=FG-0000377, Title=Jupiter Red, ID=42003148374082
2025-07-09 16:42:59,221 - sync_service - INFO -   - SKU=FG-0000374, Title=Space Blue, ID=42003148406850
2025-07-09 16:42:59,222 - sync_service - INFO -   - SKU=FG-0000375, Title=Terrestrial Green, ID=42003148439618
2025-07-09 16:42:59,222 - sync_service - INFO -   - SKU=FG-0000376, Title=Moon White, ID=42003148472386
2025-07-09 16:42:59,224 - sync_service - INFO -   - SKU=FG-0000399, Title=Space Blue, ID=42003148505154
2025-07-09 16:42:59,224 - sync_service - INFO -   - SKU=FG-0000400, Title=Terrestrial Green, ID=42003148537922
2025-07-09 16:42:59,227 - sync_service - INFO -   - SKU=FG-0000401, Title=Jupiter Red, ID=42003148570690
2025-07-09 16:42:59,230 - sync_service - INFO -   - SKU=FG-0000432, Title=Jupiter Red, ID=42003148636226
2025-07-09 16:42:59,234 - sync_service - INFO -   - SKU=FG-0000433, Title=Space Blue, ID=42003148668994
2025-07-09 16:42:59,237 - sync_service - INFO -   - SKU=FG-0000431, Title=Terrestrial Green, ID=42003148701762
2025-07-09 16:42:59,238 - sync_service - INFO -   - SKU=FG-0000417, Title=Space Blue, ID=42003148734530
2025-07-09 16:42:59,239 - sync_service - INFO -   - SKU=FG-0000415, Title=Terrestrial Green, ID=42003148767298
2025-07-09 16:42:59,240 - sync_service - INFO -   - SKU=FG-0000416, Title=Jupiter Red, ID=42003148800066
2025-07-09 16:42:59,241 - sync_service - INFO -   - SKU=FG-0000435, Title=Shades of Blue, ID=42003148865602
2025-07-09 16:42:59,241 - sync_service - INFO -   - SKU=FG-0000434, Title=Lime green-Blushed Pink, ID=42003148898370
2025-07-09 16:42:59,245 - sync_service - INFO -   - SKU=FG-0000437, Title=Rose, ID=42003148931138
2025-07-09 16:42:59,248 - sync_service - INFO -   - SKU=FG-0000411, Title=Moon White, ID=42003148963906
2025-07-09 16:42:59,249 - sync_service - INFO -   - SKU=FG-0000408, Title=Space Blue, ID=42003148996674
2025-07-09 16:42:59,250 - sync_service - INFO -   - SKU=FG-0000409, Title=Terrestrial Green, ID=42003149029442
2025-07-09 16:42:59,251 - sync_service - INFO -   - SKU=FG-0000410, Title=Jupiter Red, ID=42003149062210
2025-07-09 16:42:59,252 - sync_service - INFO -   - SKU=FG-0000559, Title=Green, ID=42003149127746
2025-07-09 16:42:59,253 - sync_service - INFO -   - SKU=FG-0000567, Title=Purple, ID=42003149160514
2025-07-09 16:42:59,253 - sync_service - INFO -   - SKU=FG-0000555, Title=Beige, ID=42003149226050
2025-07-09 16:42:59,255 - sync_service - INFO -   - SKU=FG-0000557, Title=Burnt Orange, ID=42003149258818
2025-07-09 16:42:59,255 - sync_service - INFO -   - SKU=FG-0000556, Title=Green, ID=42003149291586
2025-07-09 16:42:59,261 - sync_service - INFO -   - SKU=FG-0000565, Title=Purple, ID=42003149324354
2025-07-09 16:42:59,267 - sync_service - INFO -   - SKU=FG-0000552, Title=Beige, ID=42003149357122
2025-07-09 16:42:59,270 - sync_service - INFO -   - SKU=FG-0000554, Title=Burnt Orange, ID=42003149389890
2025-07-09 16:42:59,270 - sync_service - INFO -   - SKU=FG-0000553, Title=Green, ID=42003149422658
2025-07-09 16:42:59,271 - sync_service - INFO -   - SKU=FG-0000566, Title=Purple, ID=42003149455426
2025-07-09 16:42:59,271 - sync_service - INFO -   - SKU=FG-0000425, Title=Space Blue, ID=42003149488194
2025-07-09 16:42:59,272 - sync_service - INFO -   - SKU=FG-0000424, Title=Terrestrial Green, ID=42003149520962
2025-07-09 16:42:59,274 - sync_service - INFO -   - SKU=FG-0000426, Title=Jupiter Red, ID=42003149553730
2025-07-09 16:42:59,281 - sync_service - INFO -   - SKU=FG-0000429, Title=Space Blue, ID=42003149586498
2025-07-09 16:42:59,286 - sync_service - INFO -   - SKU=FG-0000428, Title=Terrestrial Green, ID=42003149619266
2025-07-09 16:42:59,287 - sync_service - INFO -   - SKU=FG-0000430, Title=Jupiter Red, ID=42003149652034
2025-07-09 16:42:59,287 - sync_service - INFO -   - SKU=FG-0000477, Title=Default Title, ID=42003149684802
2025-07-09 16:42:59,289 - sync_service - INFO -   - SKU=FG-0000482, Title=Default Title, ID=42003149717570
2025-07-09 16:42:59,290 - sync_service - INFO -   - SKU=FG-0000500, Title=Default Title, ID=42003149750338
2025-07-09 16:42:59,454 - sync_service - INFO -   - SKU=FG-0000497, Title=Default Title, ID=42003149783106
2025-07-09 16:42:59,464 - sync_service - INFO -   - SKU=FG-0000499, Title=Default Title, ID=42003149815874
2025-07-09 16:42:59,490 - sync_service - INFO -   - SKU=FG-0000496, Title=Default Title, ID=42003149848642
2025-07-09 16:42:59,495 - sync_service - INFO -   - SKU=FG-0000498, Title=Default Title, ID=42003149881410
2025-07-09 16:42:59,499 - sync_service - INFO -   - SKU=FG-0000253, Title=Default Title, ID=42003149914178
2025-07-09 16:42:59,502 - sync_service - INFO -   - SKU=FG-0000289, Title=Default Title, ID=42003149946946
2025-07-09 16:42:59,504 - sync_service - INFO -   - SKU=FG-0000501, Title=blueberry Punch, Cherry Pie, Cotton Candy, Orange Peel, Sour Lime, Sweet Melon, ID=42003149979714
2025-07-09 16:42:59,507 - sync_service - INFO -   - SKU=FG-0000535, Title=Default Title, ID=42003150012482
2025-07-09 16:42:59,508 - sync_service - INFO -   - SKU=FG-0000533, Title=Default Title, ID=42003150045250
2025-07-09 16:42:59,511 - sync_service - INFO -   - SKU=FG-0000542, Title=Default Title, ID=42003150078018
2025-07-09 16:42:59,513 - sync_service - INFO -   - SKU=FG-0000549, Title=Default Title, ID=42003150110786
2025-07-09 16:42:59,516 - sync_service - INFO -   - SKU=FG-0000541, Title=Default Title, ID=42003150143554
2025-07-09 16:42:59,517 - sync_service - INFO -   - SKU=FG-0000509, Title=Default Title, ID=42003150176322
2025-07-09 16:42:59,519 - sync_service - INFO -   - SKU=FG-0000516, Title=Default Title, ID=42003150209090
2025-07-09 16:42:59,520 - sync_service - INFO -   - SKU=FG-0000534, Title=Default Title, ID=42003150274626
2025-07-09 16:42:59,521 - sync_service - INFO -   - SKU=FG-0000539, Title=Default Title, ID=42003150438466
2025-07-09 16:42:59,522 - sync_service - INFO -   - SKU=FG-0000532, Title=Default Title, ID=42003150471234
2025-07-09 16:42:59,524 - sync_service - INFO -   - SKU=FG-0000514, Title=Default Title, ID=42003150504002
2025-07-09 16:42:59,525 - sync_service - INFO -   - SKU=FG-0000540, Title=Default Title, ID=42003150536770
2025-07-09 16:42:59,529 - sync_service - INFO -   - SKU=FG-0000508, Title=Default Title, ID=42003150569538
2025-07-09 16:42:59,534 - sync_service - INFO -   - SKU=FG-0000544, Title=Default Title, ID=42003150602306
2025-07-09 16:42:59,658 - sync_service - INFO -   - SKU=FG-0000513, Title=Default Title, ID=42003150635074
2025-07-09 16:42:59,665 - sync_service - INFO -   - SKU=FG-0000543, Title=Default Title, ID=42003150700610
2025-07-09 16:42:59,669 - sync_service - INFO -   - SKU=FG-0000515, Title=Default Title, ID=42003150766146
2025-07-09 16:42:59,670 - sync_service - INFO -   - SKU=FG-0000569, Title=Default Title, ID=42003150929986
2025-07-09 16:42:59,674 - sync_service - INFO -   - SKU=FG-0000568, Title=Default Title, ID=42003150962754
2025-07-09 16:42:59,688 - sync_service - INFO -   - SKU=FG-0000571, Title=Default Title, ID=42003150995522
2025-07-09 16:42:59,695 - sync_service - INFO -   - SKU=FG-0000572, Title=Default Title, ID=42003151028290
2025-07-09 16:42:59,699 - sync_service - INFO -   - SKU=FG-0000570, Title=Default Title, ID=42003151061058
2025-07-09 16:42:59,702 - sync_service - INFO -   - SKU=FG-0000458, Title=Pearl White, ID=42003151126594
2025-07-09 16:42:59,716 - sync_service - INFO -   - SKU=FG-0000457, Title=Blue, ID=42003151159362
2025-07-09 16:42:59,719 - sync_service - INFO -   - SKU=FG-0000460, Title=Red, ID=42003151192130
2025-07-09 16:42:59,725 - sync_service - INFO -   - SKU=FG-0000459, Title=Green, ID=42003151224898
2025-07-09 16:42:59,727 - sync_service - INFO -   - SKU=FG-0000464, Title=Pearl White, ID=42003151290434
2025-07-09 16:42:59,727 - sync_service - INFO -   - SKU=FG-0000462, Title=Green, ID=42003151323202
2025-07-09 16:42:59,728 - sync_service - INFO -   - SKU=FG-0000461, Title=Blue, ID=42003151355970
2025-07-09 16:42:59,729 - sync_service - INFO -   - SKU=FG-0000463, Title=Red, ID=42003151388738
2025-07-09 16:42:59,730 - sync_service - INFO -   - SKU=FG-0000484, Title=Pearl White, ID=42003151421506
2025-07-09 16:42:59,730 - sync_service - INFO -   - SKU=FG-0000483, Title=Red, ID=42003151454274
2025-07-09 16:42:59,731 - sync_service - INFO -   - SKU=FG-0000481, Title=Green, ID=42003151487042
2025-07-09 16:42:59,731 - sync_service - INFO -   - SKU=FG-0000466, Title=Green, ID=42003151519810
2025-07-09 16:42:59,732 - sync_service - INFO -   - SKU=FG-0000467, Title=Pearl White, ID=42003151552578
2025-07-09 16:42:59,734 - sync_service - INFO -   - SKU=FG-0000465, Title=Blue, ID=42003151585346
2025-07-09 16:42:59,735 - sync_service - INFO -   - SKU=FG-0000468, Title=Red, ID=42003151618114
2025-07-09 16:42:59,738 - sync_service - INFO -   - SKU=FG-0000476, Title=Pearl White, ID=42003151650882
2025-07-09 16:42:59,739 - sync_service - INFO -   - SKU=FG-0000475, Title=Red, ID=42003151683650
2025-07-09 16:42:59,740 - sync_service - INFO -   - SKU=FG-0000474, Title=Green, ID=42003151716418
2025-07-09 16:42:59,744 - sync_service - INFO -   - SKU=FG-0000473, Title=Blue, ID=42003151749186
2025-07-09 16:42:59,901 - sync_service - INFO -   - SKU=FG-0000491, Title=Pearl White, ID=42003151814722
2025-07-09 16:42:59,903 - sync_service - INFO -   - SKU=FG-0000489, Title=Green, ID=42003151847490
2025-07-09 16:42:59,904 - sync_service - INFO -   - SKU=FG-0000490, Title=Red, ID=42003151880258
2025-07-09 16:42:59,904 - sync_service - INFO -   - SKU=FG-0000488, Title=Blue, ID=42003151913026
2025-07-09 16:42:59,904 - sync_service - INFO -   - SKU=FG-0000469, Title=Blue, ID=42003151945794
2025-07-09 16:42:59,909 - sync_service - INFO -   - SKU=FG-0000471, Title=Pearl White, ID=42003151978562
2025-07-09 16:42:59,910 - sync_service - INFO -   - SKU=FG-0000470, Title=Green, ID=42003152011330
2025-07-09 16:42:59,914 - sync_service - INFO -   - SKU=FG-0000472, Title=Red, ID=42003152044098
2025-07-09 16:42:59,915 - sync_service - INFO -   - SKU=FG-0000487, Title=Pearl White, ID=42003152076866
2025-07-09 16:42:59,918 - sync_service - INFO -   - SKU=FG-0000486, Title=Teal Green, ID=42003152109634
2025-07-09 16:42:59,919 - sync_service - INFO -   - SKU=FG-0000485, Title=Dusty Blue, ID=42003152142402
2025-07-09 16:42:59,921 - sync_service - INFO -   - SKU=FG-0000517, Title=Teal Blue, ID=42003152175170
2025-07-09 16:42:59,921 - sync_service - INFO -   - SKU=FG-0000518, Title=Emerald Green, ID=42003152207938
2025-07-09 16:42:59,923 - sync_service - INFO -   - SKU=FG-0000519, Title=Lime Green, ID=42003152240706
2025-07-09 16:42:59,924 - sync_service - INFO -   - SKU=FG-0000520, Title=Burnt Orange, ID=42003152273474
2025-07-09 16:42:59,925 - sync_service - INFO -   - SKU=FG-0000521, Title=Pearl White, ID=42003152306242
2025-07-09 16:42:59,929 - sync_service - INFO -   - SKU=FG-0000510, Title=Teal Blue, ID=42003152339010
2025-07-09 16:42:59,930 - sync_service - INFO -   - SKU=FG-0000511, Title=Emerald Green, ID=42003152371778
2025-07-09 16:42:59,932 - sync_service - INFO -   - SKU=FG-0000512, Title=Pearl White, ID=42003152404546
2025-07-09 16:42:59,934 - sync_service - INFO -   - SKU=FG-0000529, Title=Lime Green, ID=42003152437314
2025-07-09 16:42:59,935 - sync_service - INFO -   - SKU=FG-0000530, Title=Burnt Orange, ID=42003152470082
2025-07-09 16:42:59,936 - sync_service - INFO -   - SKU=FG-0000531, Title=Pearl White, ID=42003152502850
2025-07-09 16:42:59,936 - sync_service - INFO -   - SKU=FG-0000527, Title=Teal Blue, ID=42003152535618
2025-07-09 16:42:59,937 - sync_service - INFO -   - SKU=FG-0000528, Title=Emerald Green, ID=42003152568386
2025-07-09 16:42:59,939 - sync_service - INFO -   - SKU=FG-0000545, Title=Teal Blue, ID=42003152601154
2025-07-09 16:42:59,941 - sync_service - INFO -   - SKU=FG-0000546, Title=Emerald Green, ID=42003152633922
2025-07-09 16:42:59,947 - sync_service - INFO -   - SKU=FG-0000547, Title=Lime Green, ID=42003152666690
2025-07-09 16:42:59,949 - sync_service - INFO -   - SKU=FG-0000548, Title=Pearl White, ID=42003152699458
2025-07-09 16:42:59,951 - sync_service - INFO -   - SKU=FG-0000536, Title=Teal Blue, ID=42003152732226
2025-07-09 16:42:59,952 - sync_service - INFO -   - SKU=FG-0000537, Title=Emerald Green, ID=42003152764994
2025-07-09 16:42:59,953 - sync_service - INFO -   - SKU=FG-0000538, Title=Pearl White, ID=42003152797762
2025-07-09 16:42:59,953 - sync_service - INFO -   - SKU=FG-0000522, Title=Teal Blue, ID=42003152830530
2025-07-09 16:42:59,958 - sync_service - INFO -   - SKU=FG-0000523, Title=Emerald Green, ID=42003152863298
2025-07-09 16:42:59,959 - sync_service - INFO -   - SKU=FG-0000524, Title=Lime Green, ID=42003152896066
2025-07-09 16:42:59,960 - sync_service - INFO -   - SKU=FG-0000525, Title=Burnt Orange, ID=42003152928834
2025-07-09 16:42:59,963 - sync_service - INFO -   - SKU=FG-0000526, Title=Pearl White, ID=42003152961602
2025-07-09 16:42:59,965 - sync_service - INFO -   - SKU=FG-0000582, Title=Rose, ID=42003152994370
2025-07-09 16:42:59,966 - sync_service - INFO -   - SKU=FG-0000581, Title=Green, ID=42003153027138
2025-07-09 16:42:59,968 - sync_service - INFO -   - SKU=FG-0000580, Title=Pearl White, ID=42003153059906
2025-07-09 16:42:59,968 - sync_service - INFO -   - SKU=FG-0000611, Title=Rose, ID=42003153092674
2025-07-09 16:42:59,969 - sync_service - INFO -   - SKU=FG-0000610, Title=Green, ID=42003153125442
2025-07-09 16:42:59,969 - sync_service - INFO -   - SKU=FG-0000609, Title=Pearl White, ID=42003153158210
2025-07-09 16:42:59,972 - sync_service - INFO -   - SKU=FG-0000583, Title=Default Title, ID=42003153190978
2025-07-09 16:42:59,973 - sync_service - INFO -   - SKU=FG-0000587, Title=Default Title, ID=42003153223746
2025-07-09 16:42:59,975 - sync_service - INFO -   - SKU=FG-0000575, Title=Default Title, ID=42003153256514
2025-07-09 16:42:59,979 - sync_service - INFO -   - SKU=FG-0000595, Title=Default Title, ID=42003153289282
2025-07-09 16:42:59,982 - sync_service - INFO -   - SKU=FG-0000593, Title=Default Title, ID=42003153322050
2025-07-09 16:42:59,983 - sync_service - INFO -   - SKU=FG-0000576, Title=Pearl White, ID=42003153354818
2025-07-09 16:42:59,985 - sync_service - INFO -   - SKU=FG-0000578, Title=Rose, ID=42003153387586
2025-07-09 16:42:59,987 - sync_service - INFO -   - SKU=FG-0000577, Title=Green, ID=42003153420354
2025-07-09 16:42:59,988 - sync_service - INFO -   - SKU=FG-0000591, Title=Rose, ID=42003153453122
2025-07-09 16:42:59,990 - sync_service - INFO -   - SKU=FG-0000590, Title=Green, ID=42003153485890
2025-07-09 16:42:59,990 - sync_service - INFO -   - SKU=FG-0000589, Title=Pearl White, ID=42003153518658
2025-07-09 16:42:59,992 - sync_service - INFO -   - SKU=FG-0000094, Title=Default Title, ID=42003160137794
2025-07-09 16:42:59,992 - sync_service - INFO -   - SKU=FG-0000096, Title=Default Title, ID=42003160170562
2025-07-09 16:42:59,992 - sync_service - INFO -   - SKU=FG-0000250, Title=Default Title, ID=42003160203330
2025-07-09 16:42:59,993 - sync_service - INFO -   - SKU=FG-0000251, Title=Default Title, ID=42003160236098
2025-07-09 16:42:59,993 - sync_service - INFO -   - SKU=FG-0000605, Title=Default Title, ID=42003161055298
2025-07-09 16:42:59,995 - sync_service - INFO -   - SKU=FG-0000585, Title=Default Title, ID=42003161088066
2025-07-09 16:42:59,995 - sync_service - INFO -   - SKU=FG-0000594, Title=Default Title, ID=42003161120834
2025-07-09 16:42:59,997 - sync_service - INFO -   - SKU=FG-0000596, Title=Black, ID=42003161251906
2025-07-09 16:42:59,997 - sync_service - INFO -   - SKU=FG-0000597, Title=Teal Blue, ID=42003161284674
2025-07-09 16:42:59,998 - sync_service - INFO -   - SKU=FG-0000598, Title=Purple, ID=42003161317442
2025-07-09 16:42:59,998 - sync_service - INFO -   - SKU=FG-0000606, Title=Black, ID=42003161350210
2025-07-09 16:43:00,000 - sync_service - INFO -   - SKU=FG-0000607, Title=Teal Blue, ID=42003161382978
2025-07-09 16:43:00,000 - sync_service - INFO -   - SKU=FG-0000608, Title=Purple, ID=42003161415746
2025-07-09 16:43:00,004 - sync_service - INFO -   - SKU=FG-0000599, Title=Black, ID=42003161448514
2025-07-09 16:43:00,007 - sync_service - INFO -   - SKU=FG-0000600, Title=Purple, ID=42003161481282
2025-07-09 16:43:00,018 - sync_service - INFO -   - SKU=FG-0000601, Title=Teal Blue, ID=42003161514050
2025-07-09 16:43:00,029 - sync_service - INFO -   - SKU=FG-0000584, Title=Default Title, ID=42135097835586
2025-07-09 16:43:00,030 - sync_service - INFO -   - SKU=FG-0000615, Title=Default Title, ID=42135104356418
2025-07-09 16:43:00,032 - sync_service - INFO -   - SKU=FG-0000586, Title=Default Title, ID=42135109763138
2025-07-09 16:43:00,034 - sync_service - INFO -   - SKU=FG-0000588, Title=Default Title, ID=42135110484034
2025-07-09 16:43:00,035 - sync_service - INFO -   - SKU=FG-0000614, Title=Default Title, ID=42135111598146
2025-07-09 16:43:00,043 - sync_service - INFO -   - SKU=FG-0000613, Title=Default Title, ID=42135112187970
2025-07-09 16:43:00,215 - sync_service - INFO -   - SKU=FG-0000579, Title=Default Title, ID=42135112745026
2025-07-09 16:43:00,224 - sync_service - INFO -   - SKU=FG-0000574, Title=Default Title, ID=42135115366466
2025-07-09 16:43:00,225 - sync_service - INFO -   - SKU=FG-0000616, Title=Default Title, ID=42135115890754
2025-07-09 16:43:00,226 - sync_service - INFO -   - SKU=FG-0000603, Title=Teal Blue, ID=42140537815106
2025-07-09 16:43:00,227 - sync_service - INFO -   - SKU=FG-0000604, Title=Purple, ID=42140537847874
2025-07-09 16:43:00,229 - sync_service - INFO -   - SKU=FG-0000602, Title=Black, ID=42140537880642
2025-07-09 16:43:00,232 - sync_service - INFO -   - SKU=FG-0000618, Title=Blue, ID=42194952192066
2025-07-09 16:43:00,236 - sync_service - INFO -   - SKU=FG-0000619, Title=Green, ID=42194952224834
2025-07-09 16:43:00,243 - sync_service - INFO -   - SKU=FG-0000620, Title=Orange, ID=42194952257602
2025-07-09 16:43:00,264 - sync_service - INFO -   - SKU=FG-0000621, Title=Blue, ID=42194952290370
2025-07-09 16:43:00,270 - sync_service - INFO -   - SKU=FG-0000622, Title=Green, ID=42194952323138
2025-07-09 16:43:00,273 - sync_service - INFO -   - SKU=FG-0000623, Title=Orange, ID=42194952355906
2025-07-09 16:43:00,274 - sync_service - INFO -   - SKU=FG-0000624, Title=Blue, ID=42194952388674
2025-07-09 16:43:00,275 - sync_service - INFO -   - SKU=FG-0000625, Title=Green, ID=42194952421442
2025-07-09 16:43:00,275 - sync_service - INFO -   - SKU=FG-0000627, Title=Orange, ID=42194952454210
2025-07-09 16:43:00,276 - sync_service - INFO -   - SKU=FG-0000626, Title=Lime, ID=42194952486978
2025-07-09 16:43:00,277 - sync_service - INFO -   - SKU=FG-0000629, Title=White, ID=42194952519746
2025-07-09 16:43:00,278 - sync_service - INFO -   - SKU=FG-0000628, Title=Pink, ID=42194952552514
2025-07-09 16:43:00,279 - sync_service - INFO -   - SKU=FG-0000631, Title=Default Title, ID=42194952585282
2025-07-09 16:43:00,279 - sync_service - INFO -   - SKU=FG-0000630, Title=Default Title, ID=42194952618050
2025-07-09 16:43:00,280 - sync_service - INFO -   - SKU=FG-0000632, Title=Blue, ID=42194952650818
2025-07-09 16:43:00,283 - sync_service - INFO -   - SKU=FG-0000633, Title=Green, ID=42194952683586
2025-07-09 16:43:00,284 - sync_service - INFO -   - SKU=FG-0000635, Title=Orange, ID=42194952716354
2025-07-09 16:43:00,286 - sync_service - INFO -   - SKU=FG-0000634, Title=Lime, ID=42194952749122
2025-07-09 16:43:00,286 - sync_service - INFO -   - SKU=FG-0000637, Title=White, ID=42194952781890
2025-07-09 16:43:00,287 - sync_service - INFO -   - SKU=FG-0000636, Title=Pink, ID=42194952814658
2025-07-09 16:43:00,288 - sync_service - INFO -   - SKU=FG-0000638, Title=Blue, ID=42194952847426
2025-07-09 16:43:00,288 - sync_service - INFO -   - SKU=FG-0000639, Title=Green, ID=42194952880194
2025-07-09 16:43:00,291 - sync_service - INFO -   - SKU=FG-0000641, Title=Orange, ID=42194952912962
2025-07-09 16:43:00,293 - sync_service - INFO -   - SKU=FG-0000640, Title=Lime, ID=42194952945730
2025-07-09 16:43:00,293 - sync_service - INFO -   - SKU=FG-0000643, Title=White, ID=42194952978498
2025-07-09 16:43:00,294 - sync_service - INFO -   - SKU=FG-0000642, Title=Pink, ID=42194953011266
2025-07-09 16:43:00,295 - sync_service - INFO -   - SKU=FG-0000653, Title=Blue, ID=42194953044034
2025-07-09 16:43:00,299 - sync_service - INFO -   - SKU=FG-0000654, Title=Green, ID=42194953076802
2025-07-09 16:43:00,300 - sync_service - INFO -   - SKU=FG-0000655, Title=Orange, ID=42194953109570
2025-07-09 16:43:00,302 - sync_service - INFO -   - SKU=FG-0000656, Title=Blue, ID=42194953142338
2025-07-09 16:43:00,303 - sync_service - INFO - 
Found 2 target variants:
2025-07-09 16:43:00,304 - sync_service - INFO -   - SKU: FG-0000075, Title: Default Title, ID: 42003146211394
2025-07-09 16:43:00,304 - sync_service - INFO -   - SKU: FG-0000077, Title: Default Title, ID: 42003146276930
2025-07-09 16:44:40,450 - sync_service - INFO - Searching for variant with SKU: FG-0000704
2025-07-09 16:45:27,420 - sync_service - INFO - Updating variant 42295166599234 with title 'Green'
2025-07-09 16:45:38,904 - sync_service - INFO - ✅ Successfully updated variant title to 'Green'
2025-07-09 16:45:38,904 - sync_service - INFO - Updated variant: {'variant': {'id': 42295166599234, 'product_id': 7510108733506, 'title': 'Default Title', 'price': '2500.00', 'position': 4, 'inventory_policy': 'deny', 'compare_at_price': None, 'option1': 'Default Title', 'option2': None, 'option3': None, 'created_at': '2025-07-09T16:36:37+03:00', 'updated_at': '2025-07-09T16:36:37+03:00', 'taxable': True, 'barcode': None, 'fulfillment_service': 'manual', 'grams': 0, 'inventory_management': 'shopify', 'requires_shipping': True, 'sku': 'FG-0000704', 'weight': 0.0, 'weight_unit': 'kg', 'inventory_item_id': 44396297355330, 'inventory_quantity': 0, 'old_inventory_quantity': 0, 'admin_graphql_api_id': 'gid://shopify/ProductVariant/42295166599234', 'image_id': None}}
2025-07-09 16:45:55,823 - sync_service - INFO - Verifying variant 42295166599234 title
2025-07-09 16:46:07,346 - sync_service - INFO - ✅ Variant FG-0000704 current status:
2025-07-09 16:46:07,352 - sync_service - INFO -   - Title: Default Title
2025-07-09 16:46:07,360 - sync_service - INFO -   - Option1: Default Title
2025-07-09 16:46:07,363 - sync_service - WARNING - ⚠️  Title is still 'Default Title', not 'Green'
2025-07-09 16:46:38,631 - sync_service - INFO - Updating variant 42295166599234 with title and option1 to 'Green'
2025-07-09 16:46:39,244 - sync_service - INFO - ✅ Successfully updated variant
2025-07-09 16:46:39,248 - sync_service - INFO - Updated variant: {'variant': {'id': 42295166599234, 'product_id': 7510108733506, 'title': 'Green', 'price': '2500.00', 'position': 4, 'inventory_policy': 'deny', 'compare_at_price': None, 'option1': 'Green', 'option2': None, 'option3': None, 'created_at': '2025-07-09T16:36:37+03:00', 'updated_at': '2025-07-09T16:46:40+03:00', 'taxable': True, 'barcode': None, 'fulfillment_service': 'manual', 'grams': 0, 'inventory_management': 'shopify', 'requires_shipping': True, 'sku': 'FG-0000704', 'weight': 0.0, 'weight_unit': 'kg', 'inventory_item_id': 44396297355330, 'inventory_quantity': 0, 'old_inventory_quantity': 0, 'admin_graphql_api_id': 'gid://shopify/ProductVariant/42295166599234', 'image_id': None}}
2025-07-09 16:55:17,230 - sync_service - INFO - Initialized Shopify client for store: Local Store (local)
2025-07-14 11:35:07,614 - sync_service - INFO - Initialized Shopify client for store: Local Store (local)
2025-07-14 11:35:07,725 - sync_service - INFO - Starting inventory sync using change-based tracking
2025-07-14 11:35:07,730 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'login', 'request': {'company': 'JudeBenHalim_Test', 'user': 'manager'}, 'response': None, 'status': None}
2025-07-14 11:35:10,016 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'login', 'request': None, 'response': {'status': 'success'}, 'status': 'success'}
2025-07-14 11:35:10,023 - sync_service - INFO - SAP login successful
2025-07-14 11:35:10,040 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'sml.svc/QTY_CHANGE', 'request': {'method': 'GET', 'url': 'https://10.0.0.100:50000/b1s/v1/sml.svc/QTY_CHANGE', 'data': None, 'params': {}}, 'response': None, 'status': None}
2025-07-14 11:35:10,437 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'sml.svc/QTY_CHANGE', 'request': None, 'response': {'status_code': 400, 'text': '{\n   "error" : {\n      "code" : 805,\n      "message" : {\n         "lang" : "en-us",\n         "value" : "Semantic Layer exposure is not enabled."\n      }\n   }\n}\n'}, 'status': 'failure'}
2025-07-14 11:35:10,448 - sync_service - ERROR - Failed to get inventory changes from SAP: HTTP 400: {
   "error" : {
      "code" : 805,
      "message" : {
         "lang" : "en-us",
         "value" : "Semantic Layer exposure is not enabled."
      }
   }
}

2025-07-14 11:38:06,975 - sync_service - INFO - Initialized Shopify client for store: Local Store (local)
2025-07-14 11:38:07,014 - sync_service - INFO - Starting inventory sync using change-based tracking
2025-07-14 11:38:07,016 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'login', 'request': {'company': 'JudeBenHalim_Test', 'user': 'manager'}, 'response': None, 'status': None}
2025-07-14 11:38:07,839 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'login', 'request': None, 'response': {'status': 'success'}, 'status': 'success'}
2025-07-14 11:38:07,841 - sync_service - INFO - SAP login successful
2025-07-14 11:38:07,845 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'sml.svc/QTY_CHANGE', 'request': {'method': 'GET', 'url': 'https://10.0.0.100:50000/b1s/v1/sml.svc/QTY_CHANGE', 'data': None, 'params': {}}, 'response': None, 'status': None}
2025-07-14 11:38:08,553 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'sml.svc/QTY_CHANGE', 'request': None, 'response': {'status_code': 400, 'text': '{\n   "error" : {\n      "code" : 805,\n      "message" : {\n         "lang" : "en-us",\n         "value" : "Semantic Layer exposure is not enabled."\n      }\n   }\n}\n'}, 'status': 'failure'}
2025-07-14 11:38:08,553 - sync_service - ERROR - Failed to get inventory changes from SAP: HTTP 400: {
   "error" : {
      "code" : 805,
      "message" : {
         "lang" : "en-us",
         "value" : "Semantic Layer exposure is not enabled."
      }
   }
}

2025-07-14 11:40:56,301 - sync_service - INFO - Initialized Shopify client for store: Local Store (local)
2025-07-14 11:40:56,335 - sync_service - INFO - Starting inventory sync using change-based tracking
2025-07-14 11:40:56,336 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'login', 'request': {'company': 'JudeBenHalim_Test', 'user': 'manager'}, 'response': None, 'status': None}
2025-07-14 11:40:57,105 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'login', 'request': None, 'response': {'status': 'success'}, 'status': 'success'}
2025-07-14 11:40:57,110 - sync_service - INFO - SAP login successful
2025-07-14 11:40:57,113 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'sml.svc/QTY_CHANGE', 'request': {'method': 'GET', 'url': 'https://10.0.0.100:50000/b1s/v1/sml.svc/QTY_CHANGE', 'data': None, 'params': {}}, 'response': None, 'status': None}
2025-07-14 11:40:57,807 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'sml.svc/QTY_CHANGE', 'request': None, 'response': {'status_code': 400, 'text': '{\n   "error" : {\n      "code" : 805,\n      "message" : {\n         "lang" : "en-us",\n         "value" : "Semantic Layer exposure is not enabled."\n      }\n   }\n}\n'}, 'status': 'failure'}
2025-07-14 11:40:57,811 - sync_service - ERROR - Failed to get inventory changes from SAP: HTTP 400: {
   "error" : {
      "code" : 805,
      "message" : {
         "lang" : "en-us",
         "value" : "Semantic Layer exposure is not enabled."
      }
   }
}

2025-07-14 11:42:07,877 - sync_service - INFO - Initialized Shopify client for store: Local Store (local)
2025-07-14 11:42:07,899 - sync_service - INFO - Starting inventory sync using change-based tracking
2025-07-14 11:42:07,902 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'login', 'request': {'company': 'JudeBenHalim_Test', 'user': 'manager'}, 'response': None, 'status': None}
2025-07-14 11:42:08,733 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'login', 'request': None, 'response': {'status': 'success'}, 'status': 'success'}
2025-07-14 11:42:08,735 - sync_service - INFO - SAP login successful
2025-07-14 11:42:08,736 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'sml.svc/QTY_CHANGE', 'request': {'method': 'GET', 'url': 'https://10.0.0.100:50000/b1s/v1/sml.svc/QTY_CHANGE', 'data': None, 'params': {}}, 'response': None, 'status': None}
2025-07-14 11:42:09,403 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'sml.svc/QTY_CHANGE', 'request': None, 'response': {'status_code': 400, 'text': '{\n   "error" : {\n      "code" : 805,\n      "message" : {\n         "lang" : "en-us",\n         "value" : "Semantic Layer exposure is not enabled."\n      }\n   }\n}\n'}, 'status': 'failure'}
2025-07-14 11:42:09,404 - sync_service - ERROR - Failed to get inventory changes from SAP: HTTP 400: {
   "error" : {
      "code" : 805,
      "message" : {
         "lang" : "en-us",
         "value" : "Semantic Layer exposure is not enabled."
      }
   }
}

2025-07-14 11:42:46,900 - sync_service - INFO - Initialized Shopify client for store: Local Store (local)
2025-07-14 11:42:46,920 - sync_service - INFO - Starting stock change sync using MASHURA_StockChangeB1SLQuery view
2025-07-14 11:42:46,921 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'login', 'request': {'company': 'JudeBenHalim_Test', 'user': 'manager'}, 'response': None, 'status': None}
2025-07-14 11:42:48,169 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'login', 'request': None, 'response': {'status': 'success'}, 'status': 'success'}
2025-07-14 11:42:48,170 - sync_service - INFO - SAP login successful
2025-07-14 11:42:48,170 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'view.svc/MASHURA_StockChangeB1SLQuery', 'request': {'method': 'GET', 'url': 'https://10.0.0.100:50000/b1s/v1/view.svc/MASHURA_StockChangeB1SLQuery', 'data': None, 'params': {'$top': 50}}, 'response': None, 'status': None}
2025-07-14 11:42:48,858 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'view.svc/MASHURA_StockChangeB1SLQuery', 'request': None, 'response': {'odata.metadata': 'https://10.0.0.100:50000/b1s/v1/view.svc/$metadata#MASHURA_StockChangeB1SLQuery', 'value': [{'ItemCode': 'FG-0000701', 'Variant_ID': '44394637557826', 'OnHand': 30.0, 'Available': 30.0, 'Location_ID': '68605345858', 'id__': 1}, {'ItemCode': 'FG-0000702', 'Variant_ID': '44394637590594', 'OnHand': 45.0, 'Available': 45.0, 'Location_ID': '68605345858', 'id__': 2}, {'ItemCode': 'FG-0000703', 'Variant_ID': '44394637623362', 'OnHand': 60.0, 'Available': 60.0, 'Location_ID': '68605345858', 'id__': 3}, {'ItemCode': 'FG-0000704', 'Variant_ID': '44396297355330', 'OnHand': 80.0, 'Available': 80.0, 'Location_ID': '68605345858', 'id__': 4}]}, 'status': 'success'}
2025-07-14 11:42:48,862 - sync_service - ERROR - Error updating inventory level for store local: 'ConfigSettings' object has no attribute 'get_store_config'
2025-07-14 11:42:49,550 - sync_service - INFO - SAP logging client login successful
2025-07-14 11:42:50,219 - sync_service - INFO - API log added to SAP: shopify - inventory_levels - failure
2025-07-14 11:42:50,330 - sync_service - ERROR - Error updating inventory level for store local: 'ConfigSettings' object has no attribute 'get_store_config'
2025-07-14 11:42:50,588 - sync_service - INFO - API log added to SAP: shopify - inventory_levels - failure
2025-07-14 11:42:50,701 - sync_service - ERROR - Error updating inventory level for store local: 'ConfigSettings' object has no attribute 'get_store_config'
2025-07-14 11:42:50,987 - sync_service - INFO - API log added to SAP: shopify - inventory_levels - failure
2025-07-14 11:42:51,103 - sync_service - ERROR - Error updating inventory level for store local: 'ConfigSettings' object has no attribute 'get_store_config'
2025-07-14 11:42:51,374 - sync_service - INFO - API log added to SAP: shopify - inventory_levels - failure
2025-07-14 11:42:51,478 - sync_service - INFO - Stock change sync completed: 4 processed, 0 successful, 4 errors
2025-07-14 11:44:22,628 - sync_service - INFO - Initialized Shopify client for store: Local Store (local)
2025-07-14 11:44:22,656 - sync_service - INFO - Starting stock change sync using MASHURA_StockChangeB1SLQuery view
2025-07-14 11:44:22,658 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'login', 'request': {'company': 'JudeBenHalim_Test', 'user': 'manager'}, 'response': None, 'status': None}
2025-07-14 11:44:23,405 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'login', 'request': None, 'response': {'status': 'success'}, 'status': 'success'}
2025-07-14 11:44:23,406 - sync_service - INFO - SAP login successful
2025-07-14 11:44:23,408 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'view.svc/MASHURA_StockChangeB1SLQuery', 'request': {'method': 'GET', 'url': 'https://10.0.0.100:50000/b1s/v1/view.svc/MASHURA_StockChangeB1SLQuery', 'data': None, 'params': {'$top': 50}}, 'response': None, 'status': None}
2025-07-14 11:44:24,017 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'view.svc/MASHURA_StockChangeB1SLQuery', 'request': None, 'response': {'odata.metadata': 'https://10.0.0.100:50000/b1s/v1/view.svc/$metadata#MASHURA_StockChangeB1SLQuery', 'value': [{'ItemCode': 'FG-0000701', 'Variant_ID': '44394637557826', 'OnHand': 30.0, 'Available': 30.0, 'Location_ID': '68605345858', 'id__': 1}, {'ItemCode': 'FG-0000702', 'Variant_ID': '44394637590594', 'OnHand': 45.0, 'Available': 45.0, 'Location_ID': '68605345858', 'id__': 2}, {'ItemCode': 'FG-0000703', 'Variant_ID': '44394637623362', 'OnHand': 60.0, 'Available': 60.0, 'Location_ID': '68605345858', 'id__': 3}, {'ItemCode': 'FG-0000704', 'Variant_ID': '44396297355330', 'OnHand': 80.0, 'Available': 80.0, 'Location_ID': '68605345858', 'id__': 4}]}, 'status': 'success'}
2025-07-14 11:44:24,020 - sync_service - ERROR - Error updating inventory level for store local: 'ConfigSettings' object has no attribute 'get_store_config'
2025-07-14 11:44:24,658 - sync_service - INFO - SAP logging client login successful
2025-07-14 11:44:25,258 - sync_service - INFO - API log added to SAP: shopify - inventory_levels - failure
2025-07-14 11:44:25,376 - sync_service - ERROR - Error updating inventory level for store local: 'ConfigSettings' object has no attribute 'get_store_config'
2025-07-14 11:44:25,616 - sync_service - INFO - API log added to SAP: shopify - inventory_levels - failure
2025-07-14 11:44:25,719 - sync_service - ERROR - Error updating inventory level for store local: 'ConfigSettings' object has no attribute 'get_store_config'
2025-07-14 11:44:25,988 - sync_service - INFO - API log added to SAP: shopify - inventory_levels - failure
2025-07-14 11:44:26,092 - sync_service - ERROR - Error updating inventory level for store local: 'ConfigSettings' object has no attribute 'get_store_config'
2025-07-14 11:44:26,358 - sync_service - INFO - API log added to SAP: shopify - inventory_levels - failure
2025-07-14 11:44:26,468 - sync_service - INFO - Stock change sync completed: 4 processed, 0 successful, 4 errors
2025-07-14 12:08:47,081 - sync_service - INFO - Initialized Shopify client for store: Local Store (local)
2025-07-14 12:08:48,057 - sync_service - INFO - Starting stock change sync using MASHURA_StockChangeB1SLQuery view
2025-07-14 12:08:48,085 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'login', 'request': {'company': 'JudeBenHalim_Test', 'user': 'manager'}, 'response': None, 'status': None}
2025-07-14 12:08:49,079 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'login', 'request': None, 'response': {'status': 'success'}, 'status': 'success'}
2025-07-14 12:08:49,081 - sync_service - INFO - SAP login successful
2025-07-14 12:08:49,083 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'view.svc/MASHURA_StockChangeB1SLQuery', 'request': {'method': 'GET', 'url': 'https://10.0.0.100:50000/b1s/v1/view.svc/MASHURA_StockChangeB1SLQuery', 'data': None, 'params': {'$top': 50}}, 'response': None, 'status': None}
2025-07-14 12:08:49,805 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'view.svc/MASHURA_StockChangeB1SLQuery', 'request': None, 'response': {'odata.metadata': 'https://10.0.0.100:50000/b1s/v1/view.svc/$metadata#MASHURA_StockChangeB1SLQuery', 'value': [{'ItemCode': 'FG-0000701', 'Variant_ID': '44394637557826', 'OnHand': 30.0, 'Available': 30.0, 'Location_ID': '68605345858', 'id__': 1}, {'ItemCode': 'FG-0000702', 'Variant_ID': '44394637590594', 'OnHand': 45.0, 'Available': 45.0, 'Location_ID': '68605345858', 'id__': 2}, {'ItemCode': 'FG-0000703', 'Variant_ID': '44394637623362', 'OnHand': 60.0, 'Available': 60.0, 'Location_ID': '68605345858', 'id__': 3}, {'ItemCode': 'FG-0000704', 'Variant_ID': '44396297355330', 'OnHand': 80.0, 'Available': 80.0, 'Location_ID': '68605345858', 'id__': 4}]}, 'status': 'success'}
2025-07-14 12:08:49,812 - sync_service - INFO - API Call: {'service': 'shopify', 'endpoint': 'rest_inventory_local', 'request': {'location_id': '68605345858', 'inventory_item_id': '44394637557826', 'available': 30.0}, 'response': None, 'status': None}
2025-07-14 12:09:01,651 - sync_service - INFO - API Call: {'service': 'shopify', 'endpoint': 'rest_inventory_local', 'request': None, 'response': {'error': 'HTTP 400: {"errors":{"available":"expected Float to be a Integer"}}'}, 'status': 'failure'}
2025-07-14 12:09:02,418 - sync_service - INFO - SAP logging client login successful
2025-07-14 12:09:03,085 - sync_service - INFO - API log added to SAP: shopify - inventory_levels - failure
2025-07-14 12:09:03,199 - sync_service - INFO - API Call: {'service': 'shopify', 'endpoint': 'rest_inventory_local', 'request': {'location_id': '68605345858', 'inventory_item_id': '44394637590594', 'available': 45.0}, 'response': None, 'status': None}
2025-07-14 12:09:03,725 - sync_service - INFO - API Call: {'service': 'shopify', 'endpoint': 'rest_inventory_local', 'request': None, 'response': {'error': 'HTTP 400: {"errors":{"available":"expected Float to be a Integer"}}'}, 'status': 'failure'}
2025-07-14 12:09:04,002 - sync_service - INFO - API log added to SAP: shopify - inventory_levels - failure
2025-07-14 12:09:04,109 - sync_service - INFO - API Call: {'service': 'shopify', 'endpoint': 'rest_inventory_local', 'request': {'location_id': '68605345858', 'inventory_item_id': '44394637623362', 'available': 60.0}, 'response': None, 'status': None}
2025-07-14 12:09:04,584 - sync_service - INFO - API Call: {'service': 'shopify', 'endpoint': 'rest_inventory_local', 'request': None, 'response': {'error': 'HTTP 400: {"errors":{"available":"expected Float to be a Integer"}}'}, 'status': 'failure'}
2025-07-14 12:09:04,854 - sync_service - INFO - API log added to SAP: shopify - inventory_levels - failure
2025-07-14 12:09:04,962 - sync_service - INFO - API Call: {'service': 'shopify', 'endpoint': 'rest_inventory_local', 'request': {'location_id': '68605345858', 'inventory_item_id': '44396297355330', 'available': 80.0}, 'response': None, 'status': None}
2025-07-14 12:09:05,480 - sync_service - INFO - API Call: {'service': 'shopify', 'endpoint': 'rest_inventory_local', 'request': None, 'response': {'error': 'HTTP 400: {"errors":{"available":"expected Float to be a Integer"}}'}, 'status': 'failure'}
2025-07-14 12:09:05,765 - sync_service - INFO - API log added to SAP: shopify - inventory_levels - failure
2025-07-14 12:09:05,880 - sync_service - INFO - Stock change sync completed: 4 processed, 0 successful, 4 errors
2025-07-14 12:09:53,100 - sync_service - INFO - Initialized Shopify client for store: Local Store (local)
2025-07-14 12:09:53,139 - sync_service - INFO - Starting stock change sync using MASHURA_StockChangeB1SLQuery view
2025-07-14 12:09:53,144 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'login', 'request': {'company': 'JudeBenHalim_Test', 'user': 'manager'}, 'response': None, 'status': None}
2025-07-14 12:09:53,884 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'login', 'request': None, 'response': {'status': 'success'}, 'status': 'success'}
2025-07-14 12:09:53,885 - sync_service - INFO - SAP login successful
2025-07-14 12:09:53,889 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'view.svc/MASHURA_StockChangeB1SLQuery', 'request': {'method': 'GET', 'url': 'https://10.0.0.100:50000/b1s/v1/view.svc/MASHURA_StockChangeB1SLQuery', 'data': None, 'params': {'$top': 50}}, 'response': None, 'status': None}
2025-07-14 12:09:54,560 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'view.svc/MASHURA_StockChangeB1SLQuery', 'request': None, 'response': {'odata.metadata': 'https://10.0.0.100:50000/b1s/v1/view.svc/$metadata#MASHURA_StockChangeB1SLQuery', 'value': [{'ItemCode': 'FG-0000701', 'Variant_ID': '44394637557826', 'OnHand': 30.0, 'Available': 30.0, 'Location_ID': '68605345858', 'id__': 1}, {'ItemCode': 'FG-0000702', 'Variant_ID': '44394637590594', 'OnHand': 45.0, 'Available': 45.0, 'Location_ID': '68605345858', 'id__': 2}, {'ItemCode': 'FG-0000703', 'Variant_ID': '44394637623362', 'OnHand': 60.0, 'Available': 60.0, 'Location_ID': '68605345858', 'id__': 3}, {'ItemCode': 'FG-0000704', 'Variant_ID': '44396297355330', 'OnHand': 80.0, 'Available': 80.0, 'Location_ID': '68605345858', 'id__': 4}]}, 'status': 'success'}
2025-07-14 12:09:54,565 - sync_service - INFO - API Call: {'service': 'shopify', 'endpoint': 'rest_inventory_local', 'request': {'location_id': '68605345858', 'inventory_item_id': '44394637557826', 'available': 30}, 'response': None, 'status': None}
2025-07-14 12:10:06,248 - sync_service - INFO - API Call: {'service': 'shopify', 'endpoint': 'rest_inventory_local', 'request': None, 'response': {'inventory_level': {'inventory_item_id': 44394637557826, 'location_id': 68605345858, 'available': 30, 'updated_at': '2025-07-14T12:10:06+03:00', 'admin_graphql_api_id': 'gid://shopify/InventoryLevel/103109591106?inventory_item_id=44394637557826'}}, 'status': 'success'}
2025-07-14 12:10:07,476 - sync_service - INFO - SAP logging client login successful
2025-07-14 12:10:08,109 - sync_service - INFO - API log added to SAP: shopify - inventory_levels - success
2025-07-14 12:10:08,228 - sync_service - INFO - API Call: {'service': 'shopify', 'endpoint': 'rest_inventory_local', 'request': {'location_id': '68605345858', 'inventory_item_id': '44394637590594', 'available': 45}, 'response': None, 'status': None}
2025-07-14 12:10:21,886 - sync_service - ERROR - Error updating inventory level for store local: All connection attempts failed
2025-07-14 12:10:22,211 - sync_service - INFO - API log added to SAP: shopify - inventory_levels - failure
2025-07-14 12:10:22,328 - sync_service - INFO - API Call: {'service': 'shopify', 'endpoint': 'rest_inventory_local', 'request': {'location_id': '68605345858', 'inventory_item_id': '44394637623362', 'available': 60}, 'response': None, 'status': None}
2025-07-14 12:10:34,042 - sync_service - INFO - API Call: {'service': 'shopify', 'endpoint': 'rest_inventory_local', 'request': None, 'response': {'inventory_level': {'inventory_item_id': 44394637623362, 'location_id': 68605345858, 'available': 60, 'updated_at': '2025-07-14T12:10:34+03:00', 'admin_graphql_api_id': 'gid://shopify/InventoryLevel/103109591106?inventory_item_id=44394637623362'}}, 'status': 'success'}
2025-07-14 12:10:34,848 - sync_service - INFO - API log added to SAP: shopify - inventory_levels - success
2025-07-14 12:10:34,955 - sync_service - INFO - API Call: {'service': 'shopify', 'endpoint': 'rest_inventory_local', 'request': {'location_id': '68605345858', 'inventory_item_id': '44396297355330', 'available': 80}, 'response': None, 'status': None}
2025-07-14 12:10:35,544 - sync_service - INFO - API Call: {'service': 'shopify', 'endpoint': 'rest_inventory_local', 'request': None, 'response': {'inventory_level': {'inventory_item_id': 44396297355330, 'location_id': 68605345858, 'available': 80, 'updated_at': '2025-07-14T12:10:35+03:00', 'admin_graphql_api_id': 'gid://shopify/InventoryLevel/103109591106?inventory_item_id=44396297355330'}}, 'status': 'success'}
2025-07-14 12:10:36,376 - sync_service - INFO - API log added to SAP: shopify - inventory_levels - success
2025-07-14 12:10:36,482 - sync_service - INFO - Stock change sync completed: 4 processed, 3 successful, 1 errors
2025-07-14 12:12:30,265 - sync_service - INFO - Initialized Shopify client for store: Local Store (local)
2025-07-14 12:12:30,270 - sync_service - INFO - Starting stock change sync using MASHURA_StockChangeB1SLQuery view
2025-07-14 12:12:30,271 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'login', 'request': {'company': 'JudeBenHalim_Test', 'user': 'manager'}, 'response': None, 'status': None}
2025-07-14 12:12:31,005 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'login', 'request': None, 'response': {'status': 'success'}, 'status': 'success'}
2025-07-14 12:12:31,008 - sync_service - INFO - SAP login successful
2025-07-14 12:12:31,011 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'view.svc/MASHURA_StockChangeB1SLQuery', 'request': {'method': 'GET', 'url': 'https://10.0.0.100:50000/b1s/v1/view.svc/MASHURA_StockChangeB1SLQuery', 'data': None, 'params': {'$top': 50}}, 'response': None, 'status': None}
2025-07-14 12:12:31,624 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'view.svc/MASHURA_StockChangeB1SLQuery', 'request': None, 'response': {'odata.metadata': 'https://10.0.0.100:50000/b1s/v1/view.svc/$metadata#MASHURA_StockChangeB1SLQuery', 'value': [{'ItemCode': 'FG-0000702', 'Variant_ID': '44394637590594', 'OnHand': 45.0, 'Available': 45.0, 'Location_ID': '68605345858', 'id__': 1}]}, 'status': 'success'}
2025-07-14 12:12:31,629 - sync_service - INFO - API Call: {'service': 'shopify', 'endpoint': 'rest_inventory_local', 'request': {'location_id': '68605345858', 'inventory_item_id': '44394637590594', 'available': 45}, 'response': None, 'status': None}
2025-07-14 12:12:32,195 - sync_service - INFO - API Call: {'service': 'shopify', 'endpoint': 'rest_inventory_local', 'request': None, 'response': {'inventory_level': {'inventory_item_id': 44394637590594, 'location_id': 68605345858, 'available': 45, 'updated_at': '2025-07-14T12:12:32+03:00', 'admin_graphql_api_id': 'gid://shopify/InventoryLevel/103109591106?inventory_item_id=44394637590594'}}, 'status': 'success'}
2025-07-14 12:12:33,357 - sync_service - INFO - SAP logging client login successful
2025-07-14 12:12:34,019 - sync_service - INFO - API log added to SAP: shopify - inventory_levels - success
2025-07-14 12:12:34,122 - sync_service - INFO - Stock change sync completed: 1 processed, 1 successful, 0 errors
2025-07-15 15:39:33,742 - sync_service - INFO - Initialized Shopify client for store: Local Store (local)
2025-07-15 15:39:33,814 - sync_service - INFO - Starting multi-store new items sync from SAP to Shopify
2025-07-15 15:39:35,436 - sync_service - INFO - SAP logging client login successful
2025-07-15 15:39:37,711 - sync_service - INFO - API log added to SAP: system - /sync/new_items_multi_store - success
2025-07-15 15:39:37,716 - sync_service - INFO - Fetching new items for store: local
2025-07-15 15:39:37,722 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'login', 'request': {'company': 'JudeBenHalim_Test', 'user': 'manager'}, 'response': None, 'status': None}
2025-07-15 15:39:39,159 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'login', 'request': None, 'response': {'status': 'success'}, 'status': 'success'}
2025-07-15 15:39:39,161 - sync_service - INFO - SAP login successful
2025-07-15 15:39:39,167 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': "view.svc/MASHURA_New_ItemsB1SLQuery?$filter=Shopify_Store eq 'local'&$orderby=MainProduct", 'request': {'method': 'GET', 'url': "https://10.0.0.100:50000/b1s/v1/view.svc/MASHURA_New_ItemsB1SLQuery?$filter=Shopify_Store eq 'local'&$orderby=MainProduct", 'data': None, 'params': None}, 'response': None, 'status': None}
2025-07-15 15:39:40,563 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': "view.svc/MASHURA_New_ItemsB1SLQuery?$filter=Shopify_Store eq 'local'&$orderby=MainProduct", 'request': None, 'response': {'odata.metadata': 'https://10.0.0.100:50000/b1s/v1/view.svc/$metadata#MASHURA_New_ItemsB1SLQuery', 'value': [{'itemcode': 'FG-0000705', 'ItemName': 'Morsi Bracelet', 'MainProduct': None, 'Color': None, 'OnHand': 20.0, 'IsCommited': 0.0, 'Available': 20.0, 'Price': 2500.0, 'Status': 'new', 'Shopify_ProductCode': '', 'Shopify_Store': 'local', 'id__': 1}]}, 'status': 'success'}
2025-07-15 15:39:40,573 - sync_service - INFO - Product group: ('FG-0000705', 'local') has 1 items
2025-07-15 15:39:40,576 - sync_service - INFO - Grouped 1 items into 1 product groups for store local
2025-07-15 15:39:40,588 - sync_service - INFO - Processing product group: ('FG-0000705', 'local') with 1 items for store local
2025-07-15 15:39:41,625 - sync_service - ERROR - Failed to add API log to SAP: HTTP 400: {
   "error" : {
      "code" : -1,
      "message" : {
         "lang" : "en-us",
         "value" : "CServiceData::SetPropertyValueString failed; Value too long in property 'U_Action' of 'U_API_LOG'"
      }
   }
}

2025-07-15 15:39:41,628 - sync_service - ERROR - Error checking existing product in store local: 'NoneType' object has no attribute 'lower'
2025-07-15 15:39:41,630 - sync_service - ERROR - Failed to check existing product in store local: 'NoneType' object has no attribute 'lower'
2025-07-15 15:39:41,631 - sync_service - INFO - Sync Event: {'sync_type': 'multi_store_new_items_sap_to_shopify', 'items_processed': 0, 'success_count': 0, 'error_count': 1, 'details': None}
2025-07-15 15:39:42,926 - sync_service - INFO - API log added to SAP: system - /sync/new_items_multi_store - success
2025-07-15 15:39:42,931 - sync_service - INFO - Multi-store new items sync completed: 0 processed, 0 successful, 1 errors
2025-07-15 15:41:00,629 - sync_service - INFO - Initialized Shopify client for store: Local Store (local)
2025-07-15 15:41:00,637 - sync_service - INFO - Starting multi-store new items sync from SAP to Shopify
2025-07-15 15:41:02,182 - sync_service - INFO - SAP logging client login successful
2025-07-15 15:41:03,685 - sync_service - INFO - API log added to SAP: system - /sync/new_items_multi_store - success
2025-07-15 15:41:03,687 - sync_service - INFO - Fetching new items for store: local
2025-07-15 15:41:03,688 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'login', 'request': {'company': 'JudeBenHalim_Test', 'user': 'manager'}, 'response': None, 'status': None}
2025-07-15 15:41:05,117 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'login', 'request': None, 'response': {'status': 'success'}, 'status': 'success'}
2025-07-15 15:41:05,117 - sync_service - INFO - SAP login successful
2025-07-15 15:41:05,118 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': "view.svc/MASHURA_New_ItemsB1SLQuery?$filter=Shopify_Store eq 'local'&$orderby=MainProduct", 'request': {'method': 'GET', 'url': "https://10.0.0.100:50000/b1s/v1/view.svc/MASHURA_New_ItemsB1SLQuery?$filter=Shopify_Store eq 'local'&$orderby=MainProduct", 'data': None, 'params': None}, 'response': None, 'status': None}
2025-07-15 15:41:06,584 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': "view.svc/MASHURA_New_ItemsB1SLQuery?$filter=Shopify_Store eq 'local'&$orderby=MainProduct", 'request': None, 'response': {'odata.metadata': 'https://10.0.0.100:50000/b1s/v1/view.svc/$metadata#MASHURA_New_ItemsB1SLQuery', 'value': [{'itemcode': 'FG-0000705', 'ItemName': 'Morsi Bracelet', 'MainProduct': None, 'Color': None, 'OnHand': 20.0, 'IsCommited': 0.0, 'Available': 20.0, 'Price': 2500.0, 'Status': 'new', 'Shopify_ProductCode': '', 'Shopify_Store': 'local', 'id__': 1}]}, 'status': 'success'}
2025-07-15 15:41:06,586 - sync_service - INFO - Product group: ('FG-0000705', 'local') has 1 items
2025-07-15 15:41:06,587 - sync_service - INFO - Grouped 1 items into 1 product groups for store local
2025-07-15 15:41:06,588 - sync_service - INFO - Processing product group: ('FG-0000705', 'local') with 1 items for store local
2025-07-15 15:41:07,616 - sync_service - INFO - API log added to SAP: shopify - /admin/api/graphql_local - success
2025-07-15 15:41:07,617 - sync_service - INFO - API Call: {'service': 'shopify', 'endpoint': 'graphql_local', 'request': {'query': '\n        query GetProductByHandle($handle: String!) {\n            productByHandle(handle: $handle) {\n                id\n                title\n                handle\n                description\n                variants(first: 50) {\n                    edges {\n                        node {\n                            id\n                            sku\n                            price\n                            inventoryItem {\n                                id\n                            }\n                            selectedOptions {\n                                name\n                                value\n                            }\n                        }\n                    }\n                }\n            }\n        }\n        ', 'variables': {'handle': 'default'}}, 'response': None, 'status': None}
2025-07-15 15:41:17,621 - sync_service - ERROR - GraphQL query error for store local: 
2025-07-15 15:41:19,149 - sync_service - INFO - API log added to SAP: shopify - /admin/api/graphql_local - success
2025-07-15 15:41:19,150 - sync_service - INFO - Product None doesn't exist in store local, creating new product
2025-07-15 15:41:20,485 - sync_service - INFO - API log added to SAP: shopify - /admin/api/graphql_local - success
2025-07-15 15:41:20,486 - sync_service - INFO - API Call: {'service': 'shopify', 'endpoint': 'graphql_local', 'request': {'query': '\n        mutation productCreate($input: ProductInput!) {\n            productCreate(input: $input) {\n                product {\n                    id\n                    title\n                    handle\n                    variants(first: 50) {\n                        edges {\n                            node {\n                                id\n                                sku\n                                inventoryItem {\n                                    id\n                                }\n                                selectedOptions {\n                                    name\n                                    value\n                                }\n                            }\n                        }\n                    }\n                }\n                userErrors {\n                    field\n                    message\n                }\n            }\n        }\n        ', 'variables': {'input': {'title': 'Morsi Bracelet', 'descriptionHtml': '', 'vendor': '', 'productType': 'Default', 'status': 'DRAFT', 'tags': [], 'productCode': 'FG-0000705', 'variants': [{'price': '2500.0', 'inventoryPolicy': 'DENY', 'inventoryManagement': 'SHOPIFY', 'inventoryQuantities': [{'availableQuantity': 10, 'locationId': 'gid://shopify/Location/68605345858'}], 'weight': 0.0, 'weightUnit': 'KILOGRAMS'}], 'seo': {'title': 'Morsi Bracelet', 'description': ''}}}}, 'response': None, 'status': None}
2025-07-15 15:41:20,962 - sync_service - ERROR - GraphQL query error for store local: {'message': 'Variable $input of type ProductInput! was provided invalid value for productCode (Field is not defined on ProductInput)', 'locations': [{'line': 1, 'column': 24}], 'extensions': {'value': {'title': 'Morsi Bracelet', 'descriptionHtml': '', 'vendor': '', 'productType': 'Default', 'status': 'DRAFT', 'tags': [], 'productCode': 'FG-0000705', 'variants': [{'price': '2500.0', 'inventoryPolicy': 'DENY', 'inventoryManagement': 'SHOPIFY', 'inventoryQuantities': [{'availableQuantity': 10, 'locationId': 'gid://shopify/Location/68605345858'}], 'weight': 0.0, 'weightUnit': 'KILOGRAMS'}], 'seo': {'title': 'Morsi Bracelet', 'description': ''}}, 'problems': [{'path': ['productCode'], 'explanation': 'Field is not defined on ProductInput'}]}}
GraphQL Errors: [
  {
    "message": "Variable $input of type ProductInput! was provided invalid value for productCode (Field is not defined on ProductInput)",
    "locations": [
      {
        "line": 1,
        "column": 24
      }
    ],
    "extensions": {
      "value": {
        "title": "Morsi Bracelet",
        "descriptionHtml": "",
        "vendor": "",
        "productType": "Default",
        "status": "DRAFT",
        "tags": [],
        "productCode": "FG-0000705",
        "variants": [
          {
            "price": "2500.0",
            "inventoryPolicy": "DENY",
            "inventoryManagement": "SHOPIFY",
            "inventoryQuantities": [
              {
                "availableQuantity": 10,
                "locationId": "gid://shopify/Location/68605345858"
              }
            ],
            "weight": 0.0,
            "weightUnit": "KILOGRAMS"
          }
        ],
        "seo": {
          "title": "Morsi Bracelet",
          "description": ""
        }
      },
      "problems": [
        {
          "path": [
            "productCode"
          ],
          "explanation": "Field is not defined on ProductInput"
        }
      ]
    }
  }
]
2025-07-15 15:41:22,494 - sync_service - ERROR - Failed to add API log to SAP: HTTP 400: {
   "error" : {
      "code" : -1,
      "message" : {
         "lang" : "en-us",
         "value" : "CServiceData::SetPropertyValueString failed; Value too long in property 'U_Value' of 'U_API_LOG'"
      }
   }
}

2025-07-15 15:41:22,495 - sync_service - ERROR - Shopify full response for store local: {'msg': 'failure', 'error': 'GraphQL query error for store local: {\'message\': \'Variable $input of type ProductInput! was provided invalid value for productCode (Field is not defined on ProductInput)\', \'locations\': [{\'line\': 1, \'column\': 24}], \'extensions\': {\'value\': {\'title\': \'Morsi Bracelet\', \'descriptionHtml\': \'\', \'vendor\': \'\', \'productType\': \'Default\', \'status\': \'DRAFT\', \'tags\': [], \'productCode\': \'FG-0000705\', \'variants\': [{\'price\': \'2500.0\', \'inventoryPolicy\': \'DENY\', \'inventoryManagement\': \'SHOPIFY\', \'inventoryQuantities\': [{\'availableQuantity\': 10, \'locationId\': \'gid://shopify/Location/68605345858\'}], \'weight\': 0.0, \'weightUnit\': \'KILOGRAMS\'}], \'seo\': {\'title\': \'Morsi Bracelet\', \'description\': \'\'}}, \'problems\': [{\'path\': [\'productCode\'], \'explanation\': \'Field is not defined on ProductInput\'}]}}\nGraphQL Errors: [\n  {\n    "message": "Variable $input of type ProductInput! was provided invalid value for productCode (Field is not defined on ProductInput)",\n    "locations": [\n      {\n        "line": 1,\n        "column": 24\n      }\n    ],\n    "extensions": {\n      "value": {\n        "title": "Morsi Bracelet",\n        "descriptionHtml": "",\n        "vendor": "",\n        "productType": "Default",\n        "status": "DRAFT",\n        "tags": [],\n        "productCode": "FG-0000705",\n        "variants": [\n          {\n            "price": "2500.0",\n            "inventoryPolicy": "DENY",\n            "inventoryManagement": "SHOPIFY",\n            "inventoryQuantities": [\n              {\n                "availableQuantity": 10,\n                "locationId": "gid://shopify/Location/68605345858"\n              }\n            ],\n            "weight": 0.0,\n            "weightUnit": "KILOGRAMS"\n          }\n        ],\n        "seo": {\n          "title": "Morsi Bracelet",\n          "description": ""\n        }\n      },\n      "problems": [\n        {\n          "path": [\n            "productCode"\n          ],\n          "explanation": "Field is not defined on ProductInput"\n        }\n      ]\n    }\n  }\n]'}
2025-07-15 15:41:23,509 - sync_service - ERROR - Failed to add API log to SAP: HTTP 400: {
   "error" : {
      "code" : -1,
      "message" : {
         "lang" : "en-us",
         "value" : "CServiceData::SetPropertyValueString failed; Value too long in property 'U_Value' of 'U_API_LOG'"
      }
   }
}

2025-07-15 15:41:23,510 - sync_service - ERROR - Failed to create product in store local: GraphQL query error for store local: {'message': 'Variable $input of type ProductInput! was provided invalid value for productCode (Field is not defined on ProductInput)', 'locations': [{'line': 1, 'column': 24}], 'extensions': {'value': {'title': 'Morsi Bracelet', 'descriptionHtml': '', 'vendor': '', 'productType': 'Default', 'status': 'DRAFT', 'tags': [], 'productCode': 'FG-0000705', 'variants': [{'price': '2500.0', 'inventoryPolicy': 'DENY', 'inventoryManagement': 'SHOPIFY', 'inventoryQuantities': [{'availableQuantity': 10, 'locationId': 'gid://shopify/Location/68605345858'}], 'weight': 0.0, 'weightUnit': 'KILOGRAMS'}], 'seo': {'title': 'Morsi Bracelet', 'description': ''}}, 'problems': [{'path': ['productCode'], 'explanation': 'Field is not defined on ProductInput'}]}}
GraphQL Errors: [
  {
    "message": "Variable $input of type ProductInput! was provided invalid value for productCode (Field is not defined on ProductInput)",
    "locations": [
      {
        "line": 1,
        "column": 24
      }
    ],
    "extensions": {
      "value": {
        "title": "Morsi Bracelet",
        "descriptionHtml": "",
        "vendor": "",
        "productType": "Default",
        "status": "DRAFT",
        "tags": [],
        "productCode": "FG-0000705",
        "variants": [
          {
            "price": "2500.0",
            "inventoryPolicy": "DENY",
            "inventoryManagement": "SHOPIFY",
            "inventoryQuantities": [
              {
                "availableQuantity": 10,
                "locationId": "gid://shopify/Location/68605345858"
              }
            ],
            "weight": 0.0,
            "weightUnit": "KILOGRAMS"
          }
        ],
        "seo": {
          "title": "Morsi Bracelet",
          "description": ""
        }
      },
      "problems": [
        {
          "path": [
            "productCode"
          ],
          "explanation": "Field is not defined on ProductInput"
        }
      ]
    }
  }
]
2025-07-15 15:41:23,511 - sync_service - INFO - Sync Event: {'sync_type': 'multi_store_new_items_sap_to_shopify', 'items_processed': 0, 'success_count': 0, 'error_count': 1, 'details': None}
2025-07-15 15:41:25,004 - sync_service - INFO - API log added to SAP: system - /sync/new_items_multi_store - success
2025-07-15 15:41:25,018 - sync_service - INFO - Multi-store new items sync completed: 0 processed, 0 successful, 1 errors
2025-07-15 15:42:35,861 - sync_service - INFO - Initialized Shopify client for store: Local Store (local)
2025-07-15 15:42:35,878 - sync_service - INFO - Starting multi-store new items sync from SAP to Shopify
2025-07-15 15:42:37,392 - sync_service - INFO - SAP logging client login successful
2025-07-15 15:42:38,851 - sync_service - INFO - API log added to SAP: system - /sync/new_items_multi_store - success
2025-07-15 15:42:38,853 - sync_service - INFO - Fetching new items for store: local
2025-07-15 15:42:38,856 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'login', 'request': {'company': 'JudeBenHalim_Test', 'user': 'manager'}, 'response': None, 'status': None}
2025-07-15 15:42:40,292 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'login', 'request': None, 'response': {'status': 'success'}, 'status': 'success'}
2025-07-15 15:42:40,294 - sync_service - INFO - SAP login successful
2025-07-15 15:42:40,297 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': "view.svc/MASHURA_New_ItemsB1SLQuery?$filter=Shopify_Store eq 'local'&$orderby=MainProduct", 'request': {'method': 'GET', 'url': "https://10.0.0.100:50000/b1s/v1/view.svc/MASHURA_New_ItemsB1SLQuery?$filter=Shopify_Store eq 'local'&$orderby=MainProduct", 'data': None, 'params': None}, 'response': None, 'status': None}
2025-07-15 15:42:41,720 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': "view.svc/MASHURA_New_ItemsB1SLQuery?$filter=Shopify_Store eq 'local'&$orderby=MainProduct", 'request': None, 'response': {'odata.metadata': 'https://10.0.0.100:50000/b1s/v1/view.svc/$metadata#MASHURA_New_ItemsB1SLQuery', 'value': [{'itemcode': 'FG-0000705', 'ItemName': 'Morsi Bracelet', 'MainProduct': None, 'Color': None, 'OnHand': 20.0, 'IsCommited': 0.0, 'Available': 20.0, 'Price': 2500.0, 'Status': 'new', 'Shopify_ProductCode': '', 'Shopify_Store': 'local', 'id__': 1}]}, 'status': 'success'}
2025-07-15 15:42:41,723 - sync_service - INFO - Product group: ('FG-0000705', 'local') has 1 items
2025-07-15 15:42:41,724 - sync_service - INFO - Grouped 1 items into 1 product groups for store local
2025-07-15 15:42:41,725 - sync_service - INFO - Processing product group: ('FG-0000705', 'local') with 1 items for store local
2025-07-15 15:42:43,156 - sync_service - INFO - API log added to SAP: shopify - /admin/api/graphql_local - success
2025-07-15 15:42:43,157 - sync_service - INFO - API Call: {'service': 'shopify', 'endpoint': 'graphql_local', 'request': {'query': '\n        query GetProductByHandle($handle: String!) {\n            productByHandle(handle: $handle) {\n                id\n                title\n                handle\n                description\n                variants(first: 50) {\n                    edges {\n                        node {\n                            id\n                            sku\n                            price\n                            inventoryItem {\n                                id\n                            }\n                            selectedOptions {\n                                name\n                                value\n                            }\n                        }\n                    }\n                }\n            }\n        }\n        ', 'variables': {'handle': 'default'}}, 'response': None, 'status': None}
2025-07-15 15:42:43,601 - sync_service - INFO - API Call: {'service': 'shopify', 'endpoint': 'graphql_local', 'request': None, 'response': {'productByHandle': None}, 'status': 'success'}
2025-07-15 15:42:44,833 - sync_service - INFO - API log added to SAP: shopify - /admin/api/graphql_local - success
2025-07-15 15:42:44,835 - sync_service - INFO - Product None doesn't exist in store local, creating new product
2025-07-15 15:42:46,442 - sync_service - INFO - API log added to SAP: shopify - /admin/api/graphql_local - success
2025-07-15 15:42:46,446 - sync_service - INFO - API Call: {'service': 'shopify', 'endpoint': 'graphql_local', 'request': {'query': '\n        mutation productCreate($input: ProductInput!) {\n            productCreate(input: $input) {\n                product {\n                    id\n                    title\n                    handle\n                    variants(first: 50) {\n                        edges {\n                            node {\n                                id\n                                sku\n                                inventoryItem {\n                                    id\n                                }\n                                selectedOptions {\n                                    name\n                                    value\n                                }\n                            }\n                        }\n                    }\n                }\n                userErrors {\n                    field\n                    message\n                }\n            }\n        }\n        ', 'variables': {'input': {'title': 'Morsi Bracelet', 'descriptionHtml': '', 'vendor': '', 'productType': 'Default', 'status': 'DRAFT', 'tags': [], 'variants': [{'sku': 'FG-0000705', 'price': '2500.0', 'inventoryPolicy': 'DENY', 'inventoryManagement': 'SHOPIFY', 'inventoryQuantities': [{'availableQuantity': 10, 'locationId': 'gid://shopify/Location/68605345858'}], 'weight': 0.0, 'weightUnit': 'KILOGRAMS'}], 'seo': {'title': 'Morsi Bracelet', 'description': ''}}}}, 'response': None, 'status': None}
2025-07-15 15:42:56,440 - sync_service - ERROR - GraphQL query error for store local: 
2025-07-15 15:42:56,443 - sync_service - ERROR - Shopify full response for store local: {'msg': 'failure', 'error': 'GraphQL query error for store local: '}
2025-07-15 15:42:57,617 - sync_service - INFO - API log added to SAP: shopify - /admin/api/graphql_local - failure
2025-07-15 15:42:57,620 - sync_service - ERROR - Failed to create product in store local: GraphQL query error for store local: 
2025-07-15 15:42:57,622 - sync_service - INFO - Sync Event: {'sync_type': 'multi_store_new_items_sap_to_shopify', 'items_processed': 0, 'success_count': 0, 'error_count': 1, 'details': None}
2025-07-15 15:42:58,693 - sync_service - INFO - API log added to SAP: system - /sync/new_items_multi_store - success
2025-07-15 15:42:58,697 - sync_service - INFO - Multi-store new items sync completed: 0 processed, 0 successful, 1 errors
2025-07-15 15:43:18,757 - sync_service - INFO - Initialized Shopify client for store: Local Store (local)
2025-07-15 15:43:18,773 - sync_service - INFO - Starting multi-store new items sync from SAP to Shopify
2025-07-15 15:43:20,355 - sync_service - INFO - SAP logging client login successful
2025-07-15 15:43:22,717 - sync_service - INFO - API log added to SAP: system - /sync/new_items_multi_store - success
2025-07-15 15:43:22,717 - sync_service - INFO - Fetching new items for store: local
2025-07-15 15:43:22,719 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'login', 'request': {'company': 'JudeBenHalim_Test', 'user': 'manager'}, 'response': None, 'status': None}
2025-07-15 15:43:24,157 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'login', 'request': None, 'response': {'status': 'success'}, 'status': 'success'}
2025-07-15 15:43:24,158 - sync_service - INFO - SAP login successful
2025-07-15 15:43:24,161 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': "view.svc/MASHURA_New_ItemsB1SLQuery?$filter=Shopify_Store eq 'local'&$orderby=MainProduct", 'request': {'method': 'GET', 'url': "https://10.0.0.100:50000/b1s/v1/view.svc/MASHURA_New_ItemsB1SLQuery?$filter=Shopify_Store eq 'local'&$orderby=MainProduct", 'data': None, 'params': None}, 'response': None, 'status': None}
2025-07-15 15:43:25,512 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': "view.svc/MASHURA_New_ItemsB1SLQuery?$filter=Shopify_Store eq 'local'&$orderby=MainProduct", 'request': None, 'response': {'odata.metadata': 'https://10.0.0.100:50000/b1s/v1/view.svc/$metadata#MASHURA_New_ItemsB1SLQuery', 'value': [{'itemcode': 'FG-0000705', 'ItemName': 'Morsi Bracelet', 'MainProduct': None, 'Color': None, 'OnHand': 20.0, 'IsCommited': 0.0, 'Available': 20.0, 'Price': 2500.0, 'Status': 'new', 'Shopify_ProductCode': '', 'Shopify_Store': 'local', 'id__': 1}]}, 'status': 'success'}
2025-07-15 15:43:25,516 - sync_service - INFO - Product group: ('FG-0000705', 'local') has 1 items
2025-07-15 15:43:25,518 - sync_service - INFO - Grouped 1 items into 1 product groups for store local
2025-07-15 15:43:25,519 - sync_service - INFO - Processing product group: ('FG-0000705', 'local') with 1 items for store local
2025-07-15 15:43:26,998 - sync_service - INFO - API log added to SAP: shopify - /admin/api/graphql_local - success
2025-07-15 15:43:27,003 - sync_service - INFO - API Call: {'service': 'shopify', 'endpoint': 'graphql_local', 'request': {'query': '\n        query GetProductByHandle($handle: String!) {\n            productByHandle(handle: $handle) {\n                id\n                title\n                handle\n                description\n                variants(first: 50) {\n                    edges {\n                        node {\n                            id\n                            sku\n                            price\n                            inventoryItem {\n                                id\n                            }\n                            selectedOptions {\n                                name\n                                value\n                            }\n                        }\n                    }\n                }\n            }\n        }\n        ', 'variables': {'handle': 'default'}}, 'response': None, 'status': None}
2025-07-15 15:43:27,518 - sync_service - INFO - API Call: {'service': 'shopify', 'endpoint': 'graphql_local', 'request': None, 'response': {'productByHandle': None}, 'status': 'success'}
2025-07-15 15:43:28,838 - sync_service - INFO - API log added to SAP: shopify - /admin/api/graphql_local - success
2025-07-15 15:43:28,840 - sync_service - INFO - Product None doesn't exist in store local, creating new product
2025-07-15 15:43:29,861 - sync_service - INFO - API log added to SAP: shopify - /admin/api/graphql_local - success
2025-07-15 15:43:29,865 - sync_service - INFO - API Call: {'service': 'shopify', 'endpoint': 'graphql_local', 'request': {'query': '\n        mutation productCreate($input: ProductInput!) {\n            productCreate(input: $input) {\n                product {\n                    id\n                    title\n                    handle\n                    variants(first: 50) {\n                        edges {\n                            node {\n                                id\n                                sku\n                                inventoryItem {\n                                    id\n                                }\n                                selectedOptions {\n                                    name\n                                    value\n                                }\n                            }\n                        }\n                    }\n                }\n                userErrors {\n                    field\n                    message\n                }\n            }\n        }\n        ', 'variables': {'input': {'title': 'Morsi Bracelet', 'descriptionHtml': '', 'vendor': '', 'productType': 'Default', 'status': 'DRAFT', 'tags': [], 'variants': [{'sku': 'FG-0000705', 'price': '2500.0', 'inventoryPolicy': 'DENY', 'inventoryManagement': 'SHOPIFY', 'weight': 0.0, 'weightUnit': 'KILOGRAMS'}], 'seo': {'title': 'Morsi Bracelet', 'description': ''}}}}, 'response': None, 'status': None}
2025-07-15 15:43:30,661 - sync_service - INFO - API Call: {'service': 'shopify', 'endpoint': 'graphql_local', 'request': None, 'response': {'productCreate': {'product': {'id': 'gid://shopify/Product/7513818890306', 'title': 'Morsi Bracelet', 'handle': 'morsi-bracelet', 'variants': {'edges': [{'node': {'id': 'gid://shopify/ProductVariant/42311996735554', 'sku': 'FG-0000705', 'inventoryItem': {'id': 'gid://shopify/InventoryItem/44412903227458'}, 'selectedOptions': [{'name': 'Title', 'value': 'Default Title'}]}}]}}, 'userErrors': []}}, 'status': 'success'}
2025-07-15 15:43:30,664 - sync_service - ERROR - Shopify full response for store local: {'msg': 'success', 'data': {'productCreate': {'product': {'id': 'gid://shopify/Product/7513818890306', 'title': 'Morsi Bracelet', 'handle': 'morsi-bracelet', 'variants': {'edges': [{'node': {'id': 'gid://shopify/ProductVariant/42311996735554', 'sku': 'FG-0000705', 'inventoryItem': {'id': 'gid://shopify/InventoryItem/44412903227458'}, 'selectedOptions': [{'name': 'Title', 'value': 'Default Title'}]}}]}}, 'userErrors': []}}}
2025-07-15 15:43:31,669 - sync_service - INFO - API log added to SAP: shopify - /admin/api/graphql_local - success
2025-07-15 15:43:31,672 - sync_service - INFO - Successfully created product in store local
2025-07-15 15:43:33,156 - sync_service - INFO - API log added to SAP: sap - /U_SHOPIFY_MAPPING - success
2025-07-15 15:43:33,158 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'U_SHOPIFY_MAPPING', 'request': {'method': 'POST', 'url': 'https://10.0.0.100:50000/b1s/v1/U_SHOPIFY_MAPPING', 'data': {'Code': '7513818890306', 'Name': '7513818890306', 'U_Shopify_Type': 'product', 'U_SAP_Code': None, 'U_Shopify_Store': 'local', 'U_SAP_Type': 'item'}, 'params': None}, 'response': None, 'status': None}
2025-07-15 15:43:34,131 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'U_SHOPIFY_MAPPING', 'request': None, 'response': {'odata.metadata': 'https://10.0.0.100:50000/b1s/v1/$metadata#U_SHOPIFY_MAPPING/@Element', 'Code': '7513818890306', 'Name': '7513818890306', 'U_Shopify_Type': 'product', 'U_SAP_Code': None, 'U_SAP_Type': 'item', 'U_Shopify_Store': 'local'}, 'status': 'success'}
2025-07-15 15:43:35,094 - sync_service - INFO - API log added to SAP: sap - /U_SHOPIFY_MAPPING - success
2025-07-15 15:43:36,288 - sync_service - INFO - API log added to SAP: sap - /U_SHOPIFY_MAPPING - success
2025-07-15 15:43:36,288 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'U_SHOPIFY_MAPPING', 'request': {'method': 'POST', 'url': 'https://10.0.0.100:50000/b1s/v1/U_SHOPIFY_MAPPING', 'data': {'Code': '42311996735554', 'Name': '42311996735554', 'U_Shopify_Type': 'variant', 'U_SAP_Code': 'FG-0000705', 'U_Shopify_Store': 'local', 'U_SAP_Type': 'item'}, 'params': None}, 'response': None, 'status': None}
2025-07-15 15:43:37,501 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'U_SHOPIFY_MAPPING', 'request': None, 'response': {'odata.metadata': 'https://10.0.0.100:50000/b1s/v1/$metadata#U_SHOPIFY_MAPPING/@Element', 'Code': '42311996735554', 'Name': '42311996735554', 'U_Shopify_Type': 'variant', 'U_SAP_Code': 'FG-0000705', 'U_SAP_Type': 'item', 'U_Shopify_Store': 'local'}, 'status': 'success'}
2025-07-15 15:43:38,892 - sync_service - INFO - API log added to SAP: sap - /U_SHOPIFY_MAPPING - success
2025-07-15 15:43:39,851 - sync_service - ERROR - Failed to add API log to SAP: HTTP 400: {
   "error" : {
      "code" : -1,
      "message" : {
         "lang" : "en-us",
         "value" : "CServiceData::SetPropertyValueString failed; Value too long in property 'U_Action' of 'U_API_LOG'"
      }
   }
}

2025-07-15 15:43:39,853 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'U_SHOPIFY_MAPPING', 'request': {'method': 'POST', 'url': 'https://10.0.0.100:50000/b1s/v1/U_SHOPIFY_MAPPING', 'data': {'Code': '44412903227458', 'Name': '44412903227458', 'U_Shopify_Type': 'variant_inventory', 'U_SAP_Code': 'FG-0000705', 'U_Shopify_Store': 'local', 'U_SAP_Type': 'item'}, 'params': None}, 'response': None, 'status': None}
2025-07-15 15:43:40,816 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'U_SHOPIFY_MAPPING', 'request': None, 'response': {'odata.metadata': 'https://10.0.0.100:50000/b1s/v1/$metadata#U_SHOPIFY_MAPPING/@Element', 'Code': '44412903227458', 'Name': '44412903227458', 'U_Shopify_Type': 'variant_inventory', 'U_SAP_Code': 'FG-0000705', 'U_SAP_Type': 'item', 'U_Shopify_Store': 'local'}, 'status': 'success'}
2025-07-15 15:43:41,772 - sync_service - ERROR - Failed to add API log to SAP: HTTP 400: {
   "error" : {
      "code" : -1,
      "message" : {
         "lang" : "en-us",
         "value" : "CServiceData::SetPropertyValueString failed; Value too long in property 'U_Action' of 'U_API_LOG'"
      }
   }
}

2025-07-15 15:43:42,291 - sync_service - INFO - Sync Event: {'sync_type': 'multi_store_new_items_sap_to_shopify', 'items_processed': 1, 'success_count': 1, 'error_count': 0, 'details': None}
2025-07-15 15:43:43,687 - sync_service - INFO - API log added to SAP: system - /sync/new_items_multi_store - success
2025-07-15 15:43:43,688 - sync_service - INFO - Multi-store new items sync completed: 1 processed, 1 successful, 0 errors
2025-07-15 15:44:14,208 - sync_service - INFO - Initialized Shopify client for store: Local Store (local)
2025-07-15 15:44:14,245 - sync_service - INFO - Starting stock change sync using MASHURA_StockChangeB1SLQuery view
2025-07-15 15:44:14,247 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'login', 'request': {'company': 'JudeBenHalim_Test', 'user': 'manager'}, 'response': None, 'status': None}
2025-07-15 15:44:15,923 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'login', 'request': None, 'response': {'status': 'success'}, 'status': 'success'}
2025-07-15 15:44:15,924 - sync_service - INFO - SAP login successful
2025-07-15 15:44:15,928 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'view.svc/MASHURA_StockChangeB1SLQuery', 'request': {'method': 'GET', 'url': 'https://10.0.0.100:50000/b1s/v1/view.svc/MASHURA_StockChangeB1SLQuery', 'data': None, 'params': {'$top': 50}}, 'response': None, 'status': None}
2025-07-15 15:44:17,282 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'view.svc/MASHURA_StockChangeB1SLQuery', 'request': None, 'response': {'odata.metadata': 'https://10.0.0.100:50000/b1s/v1/view.svc/$metadata#MASHURA_StockChangeB1SLQuery', 'value': [{'ItemCode': 'FG-0000705', 'Variant_ID': '44412903227458', 'OnHand': 20.0, 'Available': 20.0, 'Location_ID': '68605345858', 'id__': 1}]}, 'status': 'success'}
2025-07-15 15:44:17,287 - sync_service - INFO - API Call: {'service': 'shopify', 'endpoint': 'rest_inventory_local', 'request': {'location_id': '68605345858', 'inventory_item_id': '44412903227458', 'available': 20}, 'response': None, 'status': None}
2025-07-15 15:44:17,838 - sync_service - INFO - API Call: {'service': 'shopify', 'endpoint': 'rest_inventory_local', 'request': None, 'response': {'inventory_level': {'inventory_item_id': 44412903227458, 'location_id': 68605345858, 'available': 20, 'updated_at': '2025-07-15T15:44:18+03:00', 'admin_graphql_api_id': 'gid://shopify/InventoryLevel/103109591106?inventory_item_id=44412903227458'}}, 'status': 'success'}
2025-07-15 15:44:20,608 - sync_service - INFO - SAP logging client login successful
2025-07-15 15:44:22,419 - sync_service - INFO - API log added to SAP: shopify - inventory_levels - success
2025-07-15 15:44:22,528 - sync_service - INFO - Stock change sync completed: 1 processed, 1 successful, 0 errors
2025-07-15 16:02:36,002 - sync_service - INFO - Initialized Shopify client for store: Local Store (local)
2025-07-15 16:02:36,019 - sync_service - INFO - Starting multi-store new items sync from SAP to Shopify
2025-07-15 16:02:37,670 - sync_service - INFO - SAP logging client login successful
2025-07-15 16:02:39,150 - sync_service - INFO - API log added to SAP: system - /sync/new_items_multi_store - success
2025-07-15 16:02:39,152 - sync_service - INFO - Fetching new items for store: local
2025-07-15 16:02:39,154 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'login', 'request': {'company': 'JudeBenHalim_Test', 'user': 'manager'}, 'response': None, 'status': None}
2025-07-15 16:02:41,239 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'login', 'request': None, 'response': {'status': 'success'}, 'status': 'success'}
2025-07-15 16:02:41,240 - sync_service - INFO - SAP login successful
2025-07-15 16:02:41,241 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': "view.svc/MASHURA_New_ItemsB1SLQuery?$filter=Shopify_Store eq 'local'&$orderby=MainProduct", 'request': {'method': 'GET', 'url': "https://10.0.0.100:50000/b1s/v1/view.svc/MASHURA_New_ItemsB1SLQuery?$filter=Shopify_Store eq 'local'&$orderby=MainProduct", 'data': None, 'params': None}, 'response': None, 'status': None}
2025-07-15 16:02:43,247 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': "view.svc/MASHURA_New_ItemsB1SLQuery?$filter=Shopify_Store eq 'local'&$orderby=MainProduct", 'request': None, 'response': {'odata.metadata': 'https://10.0.0.100:50000/b1s/v1/view.svc/$metadata#MASHURA_New_ItemsB1SLQuery', 'value': []}, 'status': 'success'}
2025-07-15 16:02:43,251 - sync_service - INFO - No new items found in SAP for store local
2025-07-15 16:02:43,251 - sync_service - INFO - Sync Event: {'sync_type': 'multi_store_new_items_sap_to_shopify', 'items_processed': 0, 'success_count': 0, 'error_count': 0, 'details': None}
2025-07-15 16:02:44,306 - sync_service - INFO - API log added to SAP: system - /sync/new_items_multi_store - success
2025-07-15 16:02:44,309 - sync_service - INFO - Multi-store new items sync completed: 0 processed, 0 successful, 0 errors
2025-07-15 16:46:14,046 - sync_service - INFO - Initialized Shopify client for store: Local Store (local)
2025-07-15 16:46:14,241 - sync_service - INFO - Starting stock change sync using MASHURA_StockChangeB1SLQuery view
2025-07-15 16:46:14,249 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'login', 'request': {'company': 'JudeBenHalim_Test', 'user': 'manager'}, 'response': None, 'status': None}
2025-07-15 16:46:35,320 - sync_service - ERROR - SAP login error: All connection attempts failed
2025-07-15 16:46:35,322 - sync_service - ERROR - Failed to get stock changes from SAP: Failed to login to SAP
2025-07-15 16:50:39,690 - sync_service - INFO - Initialized Shopify client for store: Local Store (local)
2025-07-15 16:50:39,849 - sync_service - INFO - Starting stock change sync...
2025-07-15 16:50:39,852 - sync_service - INFO - Starting stock change sync using MASHURA_StockChangeB1SLQuery view
2025-07-15 16:50:39,856 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'login', 'request': {'company': 'JudeBenHalim_Test', 'user': 'manager'}, 'response': None, 'status': None}
2025-07-15 16:51:00,939 - sync_service - ERROR - SAP login error: All connection attempts failed
2025-07-15 16:51:00,939 - sync_service - ERROR - Failed to fetch stock changes: Failed to login to SAP
2025-07-15 18:48:41,837 - sync_service - INFO - Initialized Shopify client for store: Local Store (local)
2025-07-15 18:48:41,885 - sync_service - INFO - Starting stock change sync...
2025-07-15 18:48:41,885 - sync_service - INFO - Starting stock change sync using MASHURA_StockChangeB1SLQuery view
2025-07-15 18:48:41,885 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'login', 'request': {'company': 'JudeBenHalim_Test', 'user': 'manager'}, 'response': None, 'status': None}
2025-07-15 18:49:02,957 - sync_service - ERROR - SAP login error: All connection attempts failed
2025-07-15 18:49:02,965 - sync_service - ERROR - Failed to fetch stock changes: Failed to login to SAP
2025-07-15 18:49:12,230 - sync_service - INFO - Initialized Shopify client for store: Local Store (local)
2025-07-15 18:49:12,263 - sync_service - INFO - Starting new items sync...
2025-07-15 18:49:12,265 - sync_service - INFO - Starting multi-store new items sync from SAP to Shopify
2025-07-15 18:49:13,812 - sync_service - INFO - SAP logging client login successful
2025-07-15 18:49:15,744 - sync_service - INFO - API log added to SAP: system - /sync/new_items_multi_store - success
2025-07-15 18:49:15,745 - sync_service - INFO - Fetching new items for store: local
2025-07-15 18:49:15,747 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'login', 'request': {'company': 'JudeBenHalim_Test', 'user': 'manager'}, 'response': None, 'status': None}
2025-07-15 18:49:17,453 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'login', 'request': None, 'response': {'status': 'success'}, 'status': 'success'}
2025-07-15 18:49:17,455 - sync_service - INFO - SAP login successful
2025-07-15 18:49:17,458 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': "view.svc/MASHURA_New_ItemsB1SLQuery?$filter=Shopify_Store eq 'local'&$orderby=MainProduct", 'request': {'method': 'GET', 'url': "https://10.0.0.100:50000/b1s/v1/view.svc/MASHURA_New_ItemsB1SLQuery?$filter=Shopify_Store eq 'local'&$orderby=MainProduct", 'data': None, 'params': None}, 'response': None, 'status': None}
2025-07-15 18:49:19,103 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': "view.svc/MASHURA_New_ItemsB1SLQuery?$filter=Shopify_Store eq 'local'&$orderby=MainProduct", 'request': None, 'response': {'odata.metadata': 'https://10.0.0.100:50000/b1s/v1/view.svc/$metadata#MASHURA_New_ItemsB1SLQuery', 'value': []}, 'status': 'success'}
2025-07-15 18:49:19,107 - sync_service - INFO - No new items found in SAP for store local
2025-07-15 18:49:19,108 - sync_service - INFO - Sync Event: {'sync_type': 'multi_store_new_items_sap_to_shopify', 'items_processed': 0, 'success_count': 0, 'error_count': 0, 'details': None}
2025-07-15 18:49:20,041 - sync_service - INFO - API log added to SAP: system - /sync/new_items_multi_store - success
2025-07-15 18:49:20,044 - sync_service - INFO - Multi-store new items sync completed: 0 processed, 0 successful, 0 errors
2025-07-15 18:58:30,615 - sync_service - INFO - Initialized Shopify client for store: Local Store (local)
2025-07-15 18:58:30,645 - sync_service - INFO - Starting new items sync...
2025-07-15 18:58:30,646 - sync_service - INFO - Starting multi-store new items sync from SAP to Shopify
2025-07-15 18:58:32,446 - sync_service - INFO - SAP logging client login successful
2025-07-15 18:58:34,678 - sync_service - INFO - API log added to SAP: system - /sync/new_items_multi_store - success
2025-07-15 18:58:34,679 - sync_service - INFO - Fetching new items for store: local
2025-07-15 18:58:34,680 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'login', 'request': {'company': 'JudeBenHalim_Test', 'user': 'manager'}, 'response': None, 'status': None}
2025-07-15 18:58:37,440 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'login', 'request': None, 'response': {'status': 'success'}, 'status': 'success'}
2025-07-15 18:58:37,441 - sync_service - INFO - SAP login successful
2025-07-15 18:58:37,445 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': "view.svc/MASHURA_New_ItemsB1SLQuery?$filter=Shopify_Store eq 'local'&$orderby=MainProduct", 'request': {'method': 'GET', 'url': "https://10.0.0.100:50000/b1s/v1/view.svc/MASHURA_New_ItemsB1SLQuery?$filter=Shopify_Store eq 'local'&$orderby=MainProduct", 'data': None, 'params': None}, 'response': None, 'status': None}
2025-07-15 18:58:40,207 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': "view.svc/MASHURA_New_ItemsB1SLQuery?$filter=Shopify_Store eq 'local'&$orderby=MainProduct", 'request': None, 'response': {'odata.metadata': 'https://10.0.0.100:50000/b1s/v1/view.svc/$metadata#MASHURA_New_ItemsB1SLQuery', 'value': [{'itemcode': 'FG-0000707', 'ItemName': 'Morsi Glasses', 'MainProduct': None, 'Color': None, 'OnHand': 30.0, 'IsCommited': 0.0, 'Available': 30.0, 'Price': 2500.0, 'Status': 'new', 'Shopify_ProductCode': '', 'Shopify_Store': 'local', 'id__': 1}, {'itemcode': 'FG-0000708', 'ItemName': 'Morsi-Earrings-Blue', 'MainProduct': 'Morsi Earrings', 'Color': 'Blue', 'OnHand': 0.0, 'IsCommited': 0.0, 'Available': 0.0, 'Price': 2500.0, 'Status': 'new', 'Shopify_ProductCode': '', 'Shopify_Store': 'local', 'id__': 2}, {'itemcode': 'FG-0000706', 'ItemName': 'Morsi-Red', 'MainProduct': 'Morsi Necklace', 'Color': 'Red', 'OnHand': 25.0, 'IsCommited': 0.0, 'Available': 25.0, 'Price': 2500.0, 'Status': 'existing', 'Shopify_ProductCode': '7510108733506', 'Shopify_Store': 'local', 'id__': 3}]}, 'status': 'success'}
2025-07-15 18:58:40,212 - sync_service - INFO - Product group: ('FG-0000707', 'local') has 1 items
2025-07-15 18:58:40,215 - sync_service - INFO - Product group: ('Morsi Earrings', 'local') has 1 items
2025-07-15 18:58:40,218 - sync_service - INFO - Product group: ('Morsi Necklace', 'local') has 1 items
2025-07-15 18:58:40,221 - sync_service - INFO - Grouped 3 items into 3 product groups for store local
2025-07-15 18:58:40,223 - sync_service - INFO - Processing product group: ('FG-0000707', 'local') with 1 items for store local
2025-07-15 18:58:42,040 - sync_service - INFO - API log added to SAP: shopify - /admin/api/graphql_local - success
2025-07-15 18:58:42,041 - sync_service - INFO - API Call: {'service': 'shopify', 'endpoint': 'graphql_local', 'request': {'query': '\n        query GetProductByHandle($handle: String!) {\n            productByHandle(handle: $handle) {\n                id\n                title\n                handle\n                description\n                variants(first: 50) {\n                    edges {\n                        node {\n                            id\n                            sku\n                            price\n                            inventoryItem {\n                                id\n                            }\n                            selectedOptions {\n                                name\n                                value\n                            }\n                        }\n                    }\n                }\n            }\n        }\n        ', 'variables': {'handle': 'default'}}, 'response': None, 'status': None}
2025-07-15 18:58:52,042 - sync_service - ERROR - GraphQL query error for store local: 
2025-07-15 18:58:53,754 - sync_service - INFO - API log added to SAP: shopify - /admin/api/graphql_local - success
2025-07-15 18:58:53,756 - sync_service - INFO - Product None doesn't exist in store local, creating new product
2025-07-15 18:58:55,521 - sync_service - INFO - API log added to SAP: shopify - /admin/api/graphql_local - success
2025-07-15 18:58:55,522 - sync_service - INFO - API Call: {'service': 'shopify', 'endpoint': 'graphql_local', 'request': {'query': '\n        mutation productCreate($input: ProductInput!) {\n            productCreate(input: $input) {\n                product {\n                    id\n                    title\n                    handle\n                    variants(first: 50) {\n                        edges {\n                            node {\n                                id\n                                sku\n                                inventoryItem {\n                                    id\n                                }\n                                selectedOptions {\n                                    name\n                                    value\n                                }\n                            }\n                        }\n                    }\n                }\n                userErrors {\n                    field\n                    message\n                }\n            }\n        }\n        ', 'variables': {'input': {'title': 'Morsi Glasses', 'descriptionHtml': '', 'vendor': '', 'productType': 'Default', 'status': 'DRAFT', 'tags': [], 'variants': [{'sku': 'FG-0000707', 'price': '2500.0', 'inventoryPolicy': 'DENY', 'inventoryManagement': 'SHOPIFY', 'weight': 0.0, 'weightUnit': 'KILOGRAMS'}], 'seo': {'title': 'Morsi Glasses', 'description': ''}}}}, 'response': None, 'status': None}
2025-07-15 18:58:56,509 - sync_service - INFO - API Call: {'service': 'shopify', 'endpoint': 'graphql_local', 'request': None, 'response': {'productCreate': {'product': {'id': 'gid://shopify/Product/7513977159746', 'title': 'Morsi Glasses', 'handle': 'morsi-glasses', 'variants': {'edges': [{'node': {'id': 'gid://shopify/ProductVariant/42313759457346', 'sku': 'FG-0000707', 'inventoryItem': {'id': 'gid://shopify/InventoryItem/44414036344898'}, 'selectedOptions': [{'name': 'Title', 'value': 'Default Title'}]}}]}}, 'userErrors': []}}, 'status': 'success'}
2025-07-15 18:58:56,512 - sync_service - ERROR - Shopify full response for store local: {'msg': 'success', 'data': {'productCreate': {'product': {'id': 'gid://shopify/Product/7513977159746', 'title': 'Morsi Glasses', 'handle': 'morsi-glasses', 'variants': {'edges': [{'node': {'id': 'gid://shopify/ProductVariant/42313759457346', 'sku': 'FG-0000707', 'inventoryItem': {'id': 'gid://shopify/InventoryItem/44414036344898'}, 'selectedOptions': [{'name': 'Title', 'value': 'Default Title'}]}}]}}, 'userErrors': []}}}
2025-07-15 18:58:57,846 - sync_service - INFO - API log added to SAP: shopify - /admin/api/graphql_local - success
2025-07-15 18:58:57,847 - sync_service - INFO - Successfully created product in store local
2025-07-15 18:58:59,313 - sync_service - INFO - API log added to SAP: sap - /U_SHOPIFY_MAPPING - success
2025-07-15 18:58:59,314 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'U_SHOPIFY_MAPPING', 'request': {'method': 'POST', 'url': 'https://10.0.0.100:50000/b1s/v1/U_SHOPIFY_MAPPING', 'data': {'Code': '7513977159746', 'Name': '7513977159746', 'U_Shopify_Type': 'product', 'U_SAP_Code': 'FG-0000707', 'U_Shopify_Store': 'local', 'U_SAP_Type': 'item'}, 'params': None}, 'response': None, 'status': None}
2025-07-15 18:59:00,912 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'U_SHOPIFY_MAPPING', 'request': None, 'response': {'odata.metadata': 'https://10.0.0.100:50000/b1s/v1/$metadata#U_SHOPIFY_MAPPING/@Element', 'Code': '7513977159746', 'Name': '7513977159746', 'U_Shopify_Type': 'product', 'U_SAP_Code': 'FG-0000707', 'U_SAP_Type': 'item', 'U_Shopify_Store': 'local'}, 'status': 'success'}
2025-07-15 18:59:03,924 - sync_service - INFO - API log added to SAP: sap - /U_SHOPIFY_MAPPING - success
2025-07-15 18:59:05,250 - sync_service - INFO - API log added to SAP: sap - /U_SHOPIFY_MAPPING - success
2025-07-15 18:59:05,253 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'U_SHOPIFY_MAPPING', 'request': {'method': 'POST', 'url': 'https://10.0.0.100:50000/b1s/v1/U_SHOPIFY_MAPPING', 'data': {'Code': '42313759457346', 'Name': '42313759457346', 'U_Shopify_Type': 'variant', 'U_SAP_Code': 'FG-0000707', 'U_Shopify_Store': 'local', 'U_SAP_Type': 'item'}, 'params': None}, 'response': None, 'status': None}
2025-07-15 18:59:06,242 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'U_SHOPIFY_MAPPING', 'request': None, 'response': {'odata.metadata': 'https://10.0.0.100:50000/b1s/v1/$metadata#U_SHOPIFY_MAPPING/@Element', 'Code': '42313759457346', 'Name': '42313759457346', 'U_Shopify_Type': 'variant', 'U_SAP_Code': 'FG-0000707', 'U_SAP_Type': 'item', 'U_Shopify_Store': 'local'}, 'status': 'success'}
2025-07-15 18:59:07,592 - sync_service - INFO - API log added to SAP: sap - /U_SHOPIFY_MAPPING - success
2025-07-15 18:59:09,553 - sync_service - ERROR - Failed to add API log to SAP: HTTP 400: {
   "error" : {
      "code" : -1,
      "message" : {
         "lang" : "en-us",
         "value" : "CServiceData::SetPropertyValueString failed; Value too long in property 'U_Action' of 'U_API_LOG'"
      }
   }
}

2025-07-15 18:59:09,556 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'U_SHOPIFY_MAPPING', 'request': {'method': 'POST', 'url': 'https://10.0.0.100:50000/b1s/v1/U_SHOPIFY_MAPPING', 'data': {'Code': '44414036344898', 'Name': '44414036344898', 'U_Shopify_Type': 'variant_inventory', 'U_SAP_Code': 'FG-0000707', 'U_Shopify_Store': 'local', 'U_SAP_Type': 'item'}, 'params': None}, 'response': None, 'status': None}
2025-07-15 18:59:10,727 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'U_SHOPIFY_MAPPING', 'request': None, 'response': {'odata.metadata': 'https://10.0.0.100:50000/b1s/v1/$metadata#U_SHOPIFY_MAPPING/@Element', 'Code': '44414036344898', 'Name': '44414036344898', 'U_Shopify_Type': 'variant_inventory', 'U_SAP_Code': 'FG-0000707', 'U_SAP_Type': 'item', 'U_Shopify_Store': 'local'}, 'status': 'success'}
2025-07-15 18:59:12,212 - sync_service - ERROR - Failed to add API log to SAP: HTTP 400: {
   "error" : {
      "code" : -1,
      "message" : {
         "lang" : "en-us",
         "value" : "CServiceData::SetPropertyValueString failed; Value too long in property 'U_Action' of 'U_API_LOG'"
      }
   }
}

2025-07-15 18:59:12,726 - sync_service - INFO - Processing product group: ('Morsi Earrings', 'local') with 1 items for store local
2025-07-15 18:59:13,528 - sync_service - INFO - API log added to SAP: shopify - /admin/api/graphql_local - success
2025-07-15 18:59:13,528 - sync_service - INFO - API Call: {'service': 'shopify', 'endpoint': 'graphql_local', 'request': {'query': '\n        query GetProductByHandle($handle: String!) {\n            productByHandle(handle: $handle) {\n                id\n                title\n                handle\n                description\n                variants(first: 50) {\n                    edges {\n                        node {\n                            id\n                            sku\n                            price\n                            inventoryItem {\n                                id\n                            }\n                            selectedOptions {\n                                name\n                                value\n                            }\n                        }\n                    }\n                }\n            }\n        }\n        ', 'variables': {'handle': 'morsi-earrings'}}, 'response': None, 'status': None}
2025-07-15 18:59:14,047 - sync_service - INFO - API Call: {'service': 'shopify', 'endpoint': 'graphql_local', 'request': None, 'response': {'productByHandle': None}, 'status': 'success'}
2025-07-15 18:59:14,829 - sync_service - INFO - API log added to SAP: shopify - /admin/api/graphql_local - success
2025-07-15 18:59:14,831 - sync_service - INFO - Product Morsi Earrings doesn't exist in store local, creating new product
2025-07-15 18:59:16,657 - sync_service - INFO - API log added to SAP: shopify - /admin/api/graphql_local - success
2025-07-15 18:59:16,659 - sync_service - INFO - API Call: {'service': 'shopify', 'endpoint': 'graphql_local', 'request': {'query': '\n        mutation productCreate($input: ProductInput!) {\n            productCreate(input: $input) {\n                product {\n                    id\n                    title\n                    handle\n                    variants(first: 50) {\n                        edges {\n                            node {\n                                id\n                                sku\n                                inventoryItem {\n                                    id\n                                }\n                                selectedOptions {\n                                    name\n                                    value\n                                }\n                            }\n                        }\n                    }\n                }\n                userErrors {\n                    field\n                    message\n                }\n            }\n        }\n        ', 'variables': {'input': {'title': 'Morsi-Earrings-Blue', 'descriptionHtml': '', 'vendor': '', 'productType': 'Default', 'status': 'DRAFT', 'tags': [], 'variants': [{'sku': 'FG-0000708', 'price': '2500.0', 'inventoryPolicy': 'DENY', 'inventoryManagement': 'SHOPIFY', 'weight': 0.0, 'weightUnit': 'KILOGRAMS'}], 'seo': {'title': 'Morsi-Earrings-Blue', 'description': ''}}}}, 'response': None, 'status': None}
2025-07-15 18:59:17,432 - sync_service - INFO - API Call: {'service': 'shopify', 'endpoint': 'graphql_local', 'request': None, 'response': {'productCreate': {'product': {'id': 'gid://shopify/Product/7513977192514', 'title': 'Morsi-Earrings-Blue', 'handle': 'morsi-earrings-blue', 'variants': {'edges': [{'node': {'id': 'gid://shopify/ProductVariant/42313759490114', 'sku': 'FG-0000708', 'inventoryItem': {'id': 'gid://shopify/InventoryItem/44414036377666'}, 'selectedOptions': [{'name': 'Title', 'value': 'Default Title'}]}}]}}, 'userErrors': []}}, 'status': 'success'}
2025-07-15 18:59:17,435 - sync_service - ERROR - Shopify full response for store local: {'msg': 'success', 'data': {'productCreate': {'product': {'id': 'gid://shopify/Product/7513977192514', 'title': 'Morsi-Earrings-Blue', 'handle': 'morsi-earrings-blue', 'variants': {'edges': [{'node': {'id': 'gid://shopify/ProductVariant/42313759490114', 'sku': 'FG-0000708', 'inventoryItem': {'id': 'gid://shopify/InventoryItem/44414036377666'}, 'selectedOptions': [{'name': 'Title', 'value': 'Default Title'}]}}]}}, 'userErrors': []}}}
2025-07-15 18:59:18,910 - sync_service - INFO - API log added to SAP: shopify - /admin/api/graphql_local - success
2025-07-15 18:59:18,911 - sync_service - INFO - Successfully created product in store local
2025-07-15 18:59:21,089 - sync_service - INFO - API log added to SAP: sap - /U_SHOPIFY_MAPPING - success
2025-07-15 18:59:21,091 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'U_SHOPIFY_MAPPING', 'request': {'method': 'POST', 'url': 'https://10.0.0.100:50000/b1s/v1/U_SHOPIFY_MAPPING', 'data': {'Code': '7513977192514', 'Name': '7513977192514', 'U_Shopify_Type': 'product', 'U_SAP_Code': 'Morsi Earrings', 'U_Shopify_Store': 'local', 'U_SAP_Type': 'item'}, 'params': None}, 'response': None, 'status': None}
2025-07-15 18:59:22,508 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'U_SHOPIFY_MAPPING', 'request': None, 'response': {'odata.metadata': 'https://10.0.0.100:50000/b1s/v1/$metadata#U_SHOPIFY_MAPPING/@Element', 'Code': '7513977192514', 'Name': '7513977192514', 'U_Shopify_Type': 'product', 'U_SAP_Code': 'Morsi Earrings', 'U_SAP_Type': 'item', 'U_Shopify_Store': 'local'}, 'status': 'success'}
2025-07-15 18:59:24,309 - sync_service - INFO - API log added to SAP: sap - /U_SHOPIFY_MAPPING - success
2025-07-15 18:59:27,078 - sync_service - INFO - API log added to SAP: sap - /U_SHOPIFY_MAPPING - success
2025-07-15 18:59:27,079 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'U_SHOPIFY_MAPPING', 'request': {'method': 'POST', 'url': 'https://10.0.0.100:50000/b1s/v1/U_SHOPIFY_MAPPING', 'data': {'Code': '42313759490114', 'Name': '42313759490114', 'U_Shopify_Type': 'variant', 'U_SAP_Code': 'FG-0000708', 'U_Shopify_Store': 'local', 'U_SAP_Type': 'item'}, 'params': None}, 'response': None, 'status': None}
2025-07-15 18:59:29,509 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'U_SHOPIFY_MAPPING', 'request': None, 'response': {'odata.metadata': 'https://10.0.0.100:50000/b1s/v1/$metadata#U_SHOPIFY_MAPPING/@Element', 'Code': '42313759490114', 'Name': '42313759490114', 'U_Shopify_Type': 'variant', 'U_SAP_Code': 'FG-0000708', 'U_SAP_Type': 'item', 'U_Shopify_Store': 'local'}, 'status': 'success'}
2025-07-15 18:59:32,061 - sync_service - INFO - API log added to SAP: sap - /U_SHOPIFY_MAPPING - success
2025-07-15 18:59:33,526 - sync_service - ERROR - Failed to add API log to SAP: HTTP 400: {
   "error" : {
      "code" : -1,
      "message" : {
         "lang" : "en-us",
         "value" : "CServiceData::SetPropertyValueString failed; Value too long in property 'U_Action' of 'U_API_LOG'"
      }
   }
}

2025-07-15 18:59:33,527 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'U_SHOPIFY_MAPPING', 'request': {'method': 'POST', 'url': 'https://10.0.0.100:50000/b1s/v1/U_SHOPIFY_MAPPING', 'data': {'Code': '44414036377666', 'Name': '44414036377666', 'U_Shopify_Type': 'variant_inventory', 'U_SAP_Code': 'FG-0000708', 'U_Shopify_Store': 'local', 'U_SAP_Type': 'item'}, 'params': None}, 'response': None, 'status': None}
2025-07-15 18:59:36,241 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'U_SHOPIFY_MAPPING', 'request': None, 'response': {'odata.metadata': 'https://10.0.0.100:50000/b1s/v1/$metadata#U_SHOPIFY_MAPPING/@Element', 'Code': '44414036377666', 'Name': '44414036377666', 'U_Shopify_Type': 'variant_inventory', 'U_SAP_Code': 'FG-0000708', 'U_SAP_Type': 'item', 'U_Shopify_Store': 'local'}, 'status': 'success'}
2025-07-15 18:59:37,595 - sync_service - ERROR - Failed to add API log to SAP: HTTP 400: {
   "error" : {
      "code" : -1,
      "message" : {
         "lang" : "en-us",
         "value" : "CServiceData::SetPropertyValueString failed; Value too long in property 'U_Action' of 'U_API_LOG'"
      }
   }
}

2025-07-15 18:59:38,097 - sync_service - INFO - Processing product group: ('Morsi Necklace', 'local') with 1 items for store local
2025-07-15 18:59:38,121 - sync_service - INFO - Found existing Shopify product ID: 7510108733506 for Morsi Necklace
2025-07-15 18:59:38,123 - sync_service - INFO - Product Morsi Necklace already exists in store local, adding variants
2025-07-15 18:59:38,127 - sync_service - INFO - API Call: {'service': 'shopify', 'endpoint': 'graphql_local', 'request': {'query': '\n        query GetProduct($id: ID!) {\n            product(id: $id) {\n                id\n                title\n                handle\n                description\n                variants(first: 50) {\n                    edges {\n                        node {\n                            id\n                            sku\n                            price\n                            inventoryItem {\n                                id\n                            }\n                            selectedOptions {\n                                name\n                                value\n                            }\n                        }\n                    }\n                }\n            }\n        }\n        ', 'variables': {'id': 'gid://shopify/Product/7510108733506'}}, 'response': None, 'status': None}
2025-07-15 18:59:38,623 - sync_service - INFO - API Call: {'service': 'shopify', 'endpoint': 'graphql_local', 'request': None, 'response': {'product': {'id': 'gid://shopify/Product/7510108733506', 'title': 'Morsi Necklace', 'handle': 'morsi-necklace-1', 'description': '', 'variants': {'edges': [{'node': {'id': 'gid://shopify/ProductVariant/42293507063874', 'sku': 'FG-0000701', 'price': '2500.00', 'inventoryItem': {'id': 'gid://shopify/InventoryItem/44394637557826'}, 'selectedOptions': [{'name': 'Color', 'value': 'Black Gold'}]}}, {'node': {'id': 'gid://shopify/ProductVariant/42293507096642', 'sku': 'FG-0000702', 'price': '2500.00', 'inventoryItem': {'id': 'gid://shopify/InventoryItem/44394637590594'}, 'selectedOptions': [{'name': 'Color', 'value': 'Rose Gold'}]}}, {'node': {'id': 'gid://shopify/ProductVariant/42293507129410', 'sku': 'FG-0000703', 'price': '2500.00', 'inventoryItem': {'id': 'gid://shopify/InventoryItem/44394637623362'}, 'selectedOptions': [{'name': 'Color', 'value': 'White Gold'}]}}, {'node': {'id': 'gid://shopify/ProductVariant/42295166599234', 'sku': 'FG-0000704', 'price': '2500.00', 'inventoryItem': {'id': 'gid://shopify/InventoryItem/44396297355330'}, 'selectedOptions': [{'name': 'Color', 'value': 'Green'}]}}]}}}, 'status': 'success'}
2025-07-15 18:59:38,624 - sync_service - INFO - API Call: {'service': 'shopify', 'endpoint': 'graphql_local', 'request': {'query': '\n        query GetProductByHandle($handle: String!) {\n            productByHandle(handle: $handle) {\n                id\n                title\n                handle\n                description\n                variants(first: 50) {\n                    edges {\n                        node {\n                            id\n                            sku\n                            price\n                            inventoryItem {\n                                id\n                            }\n                            selectedOptions {\n                                name\n                                value\n                            }\n                        }\n                    }\n                }\n            }\n        }\n        ', 'variables': {'handle': None}}, 'response': None, 'status': None}
2025-07-15 18:59:39,074 - sync_service - ERROR - GraphQL query error for store local: {'message': 'Variable $handle of type String! was provided invalid value', 'locations': [{'line': 1, 'column': 26}], 'extensions': {'value': None, 'problems': [{'path': [], 'explanation': 'Expected value to not be null'}]}}
GraphQL Errors: [
  {
    "message": "Variable $handle of type String! was provided invalid value",
    "locations": [
      {
        "line": 1,
        "column": 26
      }
    ],
    "extensions": {
      "value": null,
      "problems": [
        {
          "path": [],
          "explanation": "Expected value to not be null"
        }
      ]
    }
  }
]
2025-07-15 18:59:41,378 - sync_service - ERROR - Failed to add API log to SAP: HTTP 400: {
   "error" : {
      "code" : -1,
      "message" : {
         "lang" : "en-us",
         "value" : "CServiceData::SetPropertyValueString failed; Value too long in property 'U_Value' of 'U_API_LOG'"
      }
   }
}

2025-07-15 18:59:43,728 - sync_service - ERROR - Failed to add API log to SAP: HTTP 400: {
   "error" : {
      "code" : -1,
      "message" : {
         "lang" : "en-us",
         "value" : "CServiceData::SetPropertyValueString failed; Value too long in property 'U_Action' of 'U_API_LOG'"
      }
   }
}

2025-07-15 18:59:43,729 - sync_service - INFO - API Call: {'service': 'shopify', 'endpoint': 'graphql_local', 'request': {'query': '\n        mutation productVariantCreate($input: ProductVariantInput!) {\n            productVariantCreate(input: $input) {\n                productVariant {\n                    id\n                    sku\n                    price\n                    inventoryItem {\n                        id\n                    }\n                    selectedOptions {\n                        name\n                        value\n                    }\n                }\n                userErrors {\n                    field\n                    message\n                }\n            }\n        }\n        ', 'variables': {'input': {'sku': 'FG-0000706', 'price': '2500.0', 'inventoryPolicy': 'DENY', 'inventoryManagement': 'SHOPIFY', 'weight': 0.0, 'weightUnit': 'KILOGRAMS', 'options': ['Red'], 'productId': 'gid://shopify/Product/7510108733506'}}}, 'response': None, 'status': None}
2025-07-15 18:59:49,971 - sync_service - INFO - API Call: {'service': 'shopify', 'endpoint': 'graphql_local', 'request': None, 'response': {'productVariantCreate': {'productVariant': {'id': 'gid://shopify/ProductVariant/42313759719490', 'sku': 'FG-0000706', 'price': '2500.00', 'inventoryItem': {'id': 'gid://shopify/InventoryItem/44414036607042'}, 'selectedOptions': [{'name': 'Color', 'value': 'Red'}]}, 'userErrors': []}}, 'status': 'success'}
2025-07-15 18:59:49,974 - sync_service - INFO - API Call: {'service': 'shopify', 'endpoint': 'graphql_local', 'request': {'query': '\n        mutation productVariantUpdate($input: ProductVariantInput!) {\n            productVariantUpdate(input: $input) {\n                productVariant {\n                    id\n                    sku\n                    title\n                    selectedOptions {\n                        name\n                        value\n                    }\n                }\n                userErrors {\n                    field\n                    message\n                }\n            }\n        }\n        ', 'variables': {'input': {'title': 'Red', 'id': 'gid://shopify/ProductVariant/42313759719490'}}}, 'response': None, 'status': None}
2025-07-15 18:59:50,496 - sync_service - INFO - API Call: {'service': 'shopify', 'endpoint': 'graphql_local', 'request': None, 'response': {'productVariantUpdate': {'productVariant': {'id': 'gid://shopify/ProductVariant/42313759719490', 'sku': 'FG-0000706', 'title': 'Red', 'selectedOptions': [{'name': 'Color', 'value': 'Red'}]}, 'userErrors': []}}, 'status': 'success'}
2025-07-15 18:59:50,496 - sync_service - INFO - Updated variant FG-0000706 title to 'Red'
2025-07-15 18:59:51,875 - sync_service - ERROR - Failed to add API log to SAP: HTTP 400: {
   "error" : {
      "code" : -1,
      "message" : {
         "lang" : "en-us",
         "value" : "CServiceData::SetPropertyValueString failed; Value too long in property 'U_Action' of 'U_API_LOG'"
      }
   }
}

2025-07-15 18:59:51,877 - sync_service - INFO - API Call: {'service': 'shopify', 'endpoint': 'graphql_local', 'request': {'query': '\n        mutation inventoryAdjustQuantity($input: InventoryAdjustQuantityInput!) {\n            inventoryAdjustQuantity(input: $input) {\n                inventoryLevel {\n                    available\n                }\n                userErrors {\n                    field\n                    message\n                }\n            }\n        }\n        ', 'variables': {'input': {'inventoryItemId': 'gid://shopify/InventoryItem/44414036607042', 'availableDelta': 10}}}, 'response': None, 'status': None}
2025-07-15 18:59:52,363 - sync_service - ERROR - GraphQL query error for store local: {'message': "Field 'inventoryAdjustQuantity' doesn't exist on type 'Mutation'", 'locations': [{'line': 2, 'column': 3}], 'path': ['mutation inventoryAdjustQuantity', 'inventoryAdjustQuantity'], 'extensions': {'code': 'undefinedField', 'typeName': 'Mutation', 'fieldName': 'inventoryAdjustQuantity'}}
GraphQL Errors: [
  {
    "message": "Field 'inventoryAdjustQuantity' doesn't exist on type 'Mutation'",
    "locations": [
      {
        "line": 2,
        "column": 3
      }
    ],
    "path": [
      "mutation inventoryAdjustQuantity",
      "inventoryAdjustQuantity"
    ],
    "extensions": {
      "code": "undefinedField",
      "typeName": "Mutation",
      "fieldName": "inventoryAdjustQuantity"
    }
  },
  {
    "message": "Variable $input is declared by inventoryAdjustQuantity but not used",
    "locations": [
      {
        "line": 1,
        "column": 1
      }
    ],
    "path": [
      "mutation inventoryAdjustQuantity"
    ],
    "extensions": {
      "code": "variableNotUsed",
      "variableName": "input"
    }
  }
]
2025-07-15 18:59:54,845 - sync_service - ERROR - Failed to add API log to SAP: HTTP 400: {
   "error" : {
      "code" : -1,
      "message" : {
         "lang" : "en-us",
         "value" : "CServiceData::SetPropertyValueString failed; Value too long in property 'U_Value' of 'U_API_LOG'"
      }
   }
}

2025-07-15 18:59:54,846 - sync_service - WARNING - Failed to set inventory for variant FG-0000706: GraphQL query error for store local: {'message': "Field 'inventoryAdjustQuantity' doesn't exist on type 'Mutation'", 'locations': [{'line': 2, 'column': 3}], 'path': ['mutation inventoryAdjustQuantity', 'inventoryAdjustQuantity'], 'extensions': {'code': 'undefinedField', 'typeName': 'Mutation', 'fieldName': 'inventoryAdjustQuantity'}}
GraphQL Errors: [
  {
    "message": "Field 'inventoryAdjustQuantity' doesn't exist on type 'Mutation'",
    "locations": [
      {
        "line": 2,
        "column": 3
      }
    ],
    "path": [
      "mutation inventoryAdjustQuantity",
      "inventoryAdjustQuantity"
    ],
    "extensions": {
      "code": "undefinedField",
      "typeName": "Mutation",
      "fieldName": "inventoryAdjustQuantity"
    }
  },
  {
    "message": "Variable $input is declared by inventoryAdjustQuantity but not used",
    "locations": [
      {
        "line": 1,
        "column": 1
      }
    ],
    "path": [
      "mutation inventoryAdjustQuantity"
    ],
    "extensions": {
      "code": "variableNotUsed",
      "variableName": "input"
    }
  }
]
2025-07-15 18:59:54,847 - sync_service - INFO - Successfully added variant FG-0000706 to existing product
2025-07-15 18:59:57,062 - sync_service - INFO - API log added to SAP: sap - /U_SHOPIFY_MAPPING - success
2025-07-15 18:59:57,062 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'U_SHOPIFY_MAPPING', 'request': {'method': 'POST', 'url': 'https://10.0.0.100:50000/b1s/v1/U_SHOPIFY_MAPPING', 'data': {'Code': '7510108733506', 'Name': '7510108733506', 'U_Shopify_Type': 'product', 'U_SAP_Code': 'Morsi Necklace', 'U_Shopify_Store': 'local', 'U_SAP_Type': 'item'}, 'params': None}, 'response': None, 'status': None}
2025-07-15 18:59:58,879 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'U_SHOPIFY_MAPPING', 'request': None, 'response': {'status_code': 400, 'text': '{\n   "error" : {\n      "code" : -2035,\n      "message" : {\n         "lang" : "en-us",\n         "value" : "This entry already exists in the following tables (ODBC -2035)"\n      }\n   }\n}\n'}, 'status': 'failure'}
2025-07-15 19:00:01,221 - sync_service - INFO - API log added to SAP: sap - /U_SHOPIFY_MAPPING - failure
2025-07-15 19:00:03,946 - sync_service - INFO - API log added to SAP: sap - /U_SHOPIFY_MAPPING - success
2025-07-15 19:00:03,947 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'U_SHOPIFY_MAPPING', 'request': {'method': 'POST', 'url': 'https://10.0.0.100:50000/b1s/v1/U_SHOPIFY_MAPPING', 'data': {'Code': '42313759719490', 'Name': '42313759719490', 'U_Shopify_Type': 'variant', 'U_SAP_Code': 'FG-0000706', 'U_Shopify_Store': 'local', 'U_SAP_Type': 'item'}, 'params': None}, 'response': None, 'status': None}
2025-07-15 19:00:05,157 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'U_SHOPIFY_MAPPING', 'request': None, 'response': {'odata.metadata': 'https://10.0.0.100:50000/b1s/v1/$metadata#U_SHOPIFY_MAPPING/@Element', 'Code': '42313759719490', 'Name': '42313759719490', 'U_Shopify_Type': 'variant', 'U_SAP_Code': 'FG-0000706', 'U_SAP_Type': 'item', 'U_Shopify_Store': 'local'}, 'status': 'success'}
2025-07-15 19:00:06,957 - sync_service - INFO - API log added to SAP: sap - /U_SHOPIFY_MAPPING - success
2025-07-15 19:00:08,883 - sync_service - ERROR - Failed to add API log to SAP: HTTP 400: {
   "error" : {
      "code" : -1,
      "message" : {
         "lang" : "en-us",
         "value" : "CServiceData::SetPropertyValueString failed; Value too long in property 'U_Action' of 'U_API_LOG'"
      }
   }
}

2025-07-15 19:00:08,886 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'U_SHOPIFY_MAPPING', 'request': {'method': 'POST', 'url': 'https://10.0.0.100:50000/b1s/v1/U_SHOPIFY_MAPPING', 'data': {'Code': '44414036607042', 'Name': '44414036607042', 'U_Shopify_Type': 'variant_inventory', 'U_SAP_Code': 'FG-0000706', 'U_Shopify_Store': 'local', 'U_SAP_Type': 'item'}, 'params': None}, 'response': None, 'status': None}
2025-07-15 19:00:10,026 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'U_SHOPIFY_MAPPING', 'request': None, 'response': {'odata.metadata': 'https://10.0.0.100:50000/b1s/v1/$metadata#U_SHOPIFY_MAPPING/@Element', 'Code': '44414036607042', 'Name': '44414036607042', 'U_Shopify_Type': 'variant_inventory', 'U_SAP_Code': 'FG-0000706', 'U_SAP_Type': 'item', 'U_Shopify_Store': 'local'}, 'status': 'success'}
2025-07-15 19:00:11,506 - sync_service - ERROR - Failed to add API log to SAP: HTTP 400: {
   "error" : {
      "code" : -1,
      "message" : {
         "lang" : "en-us",
         "value" : "CServiceData::SetPropertyValueString failed; Value too long in property 'U_Action' of 'U_API_LOG'"
      }
   }
}

2025-07-15 19:00:12,020 - sync_service - INFO - Sync Event: {'sync_type': 'multi_store_new_items_sap_to_shopify', 'items_processed': 3, 'success_count': 3, 'error_count': 0, 'details': None}
2025-07-15 19:00:13,302 - sync_service - INFO - API log added to SAP: system - /sync/new_items_multi_store - success
2025-07-15 19:00:13,304 - sync_service - INFO - Multi-store new items sync completed: 3 processed, 3 successful, 0 errors
2025-07-15 19:00:21,362 - sync_service - INFO - Initialized Shopify client for store: Local Store (local)
2025-07-15 19:00:21,396 - sync_service - INFO - Starting stock change sync...
2025-07-15 19:00:21,396 - sync_service - INFO - Starting stock change sync using MASHURA_StockChangeB1SLQuery view
2025-07-15 19:00:21,397 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'login', 'request': {'company': 'JudeBenHalim_Test', 'user': 'manager'}, 'response': None, 'status': None}
2025-07-15 19:00:22,644 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'login', 'request': None, 'response': {'status': 'success'}, 'status': 'success'}
2025-07-15 19:00:22,646 - sync_service - INFO - SAP login successful
2025-07-15 19:00:22,648 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'view.svc/MASHURA_StockChangeB1SLQuery', 'request': {'method': 'GET', 'url': 'https://10.0.0.100:50000/b1s/v1/view.svc/MASHURA_StockChangeB1SLQuery', 'data': None, 'params': {'$top': 50}}, 'response': None, 'status': None}
2025-07-15 19:00:24,927 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'view.svc/MASHURA_StockChangeB1SLQuery', 'request': None, 'response': {'odata.metadata': 'https://10.0.0.100:50000/b1s/v1/view.svc/$metadata#MASHURA_StockChangeB1SLQuery', 'value': [{'ItemCode': 'FG-0000703', 'Variant_ID': '44394637623362', 'OnHand': 80.0, 'Available': 80.0, 'Location_ID': '68605345858', 'id__': 1}, {'ItemCode': 'FG-0000705', 'Variant_ID': '44412903227458', 'OnHand': 30.0, 'Available': 30.0, 'Location_ID': '68605345858', 'id__': 2}, {'ItemCode': 'FG-0000707', 'Variant_ID': '44414036344898', 'OnHand': 30.0, 'Available': 30.0, 'Location_ID': '68605345858', 'id__': 3}, {'ItemCode': 'FG-0000706', 'Variant_ID': '44414036607042', 'OnHand': 25.0, 'Available': 25.0, 'Location_ID': '68605345858', 'id__': 4}]}, 'status': 'success'}
2025-07-15 19:00:24,930 - sync_service - INFO - API Call: {'service': 'shopify', 'endpoint': 'rest_inventory_local', 'request': {'location_id': '68605345858', 'inventory_item_id': '44394637623362', 'available': 80}, 'response': None, 'status': None}
2025-07-15 19:00:39,986 - sync_service - INFO - API Call: {'service': 'shopify', 'endpoint': 'rest_inventory_local', 'request': None, 'response': {'inventory_level': {'inventory_item_id': 44394637623362, 'location_id': 68605345858, 'available': 80, 'updated_at': '2025-07-15T19:00:39+03:00', 'admin_graphql_api_id': 'gid://shopify/InventoryLevel/103109591106?inventory_item_id=44394637623362'}}, 'status': 'success'}
2025-07-15 19:00:45,738 - sync_service - INFO - SAP logging client login successful
2025-07-15 19:00:48,029 - sync_service - INFO - API log added to SAP: shopify - inventory_levels - success
2025-07-15 19:00:48,143 - sync_service - INFO - API Call: {'service': 'shopify', 'endpoint': 'rest_inventory_local', 'request': {'location_id': '68605345858', 'inventory_item_id': '44412903227458', 'available': 30}, 'response': None, 'status': None}
2025-07-15 19:01:00,436 - sync_service - INFO - API Call: {'service': 'shopify', 'endpoint': 'rest_inventory_local', 'request': None, 'response': {'inventory_level': {'inventory_item_id': 44412903227458, 'location_id': 68605345858, 'available': 30, 'updated_at': '2025-07-15T19:01:00+03:00', 'admin_graphql_api_id': 'gid://shopify/InventoryLevel/103109591106?inventory_item_id=44412903227458'}}, 'status': 'success'}
2025-07-15 19:01:02,424 - sync_service - INFO - API log added to SAP: shopify - inventory_levels - success
2025-07-15 19:01:02,533 - sync_service - INFO - API Call: {'service': 'shopify', 'endpoint': 'rest_inventory_local', 'request': {'location_id': '68605345858', 'inventory_item_id': '44414036344898', 'available': 30}, 'response': None, 'status': None}
2025-07-15 19:01:03,229 - sync_service - INFO - API Call: {'service': 'shopify', 'endpoint': 'rest_inventory_local', 'request': None, 'response': {'inventory_level': {'inventory_item_id': 44414036344898, 'location_id': 68605345858, 'available': 30, 'updated_at': '2025-07-15T19:01:03+03:00', 'admin_graphql_api_id': 'gid://shopify/InventoryLevel/103109591106?inventory_item_id=44414036344898'}}, 'status': 'success'}
2025-07-15 19:01:05,340 - sync_service - INFO - API log added to SAP: shopify - inventory_levels - success
2025-07-15 19:01:05,462 - sync_service - INFO - API Call: {'service': 'shopify', 'endpoint': 'rest_inventory_local', 'request': {'location_id': '68605345858', 'inventory_item_id': '44414036607042', 'available': 25}, 'response': None, 'status': None}
2025-07-15 19:01:13,512 - sync_service - INFO - API Call: {'service': 'shopify', 'endpoint': 'rest_inventory_local', 'request': None, 'response': {'inventory_level': {'inventory_item_id': 44414036607042, 'location_id': 68605345858, 'available': 25, 'updated_at': '2025-07-15T19:01:13+03:00', 'admin_graphql_api_id': 'gid://shopify/InventoryLevel/103109591106?inventory_item_id=44414036607042'}}, 'status': 'success'}
2025-07-15 19:01:16,714 - sync_service - INFO - API log added to SAP: shopify - inventory_levels - success
2025-07-15 19:01:16,831 - sync_service - INFO - Stock change sync completed: 4 processed, 4 successful, 0 errors
2025-07-15 19:05:53,572 - sync_service - INFO - Initialized Shopify client for store: Local Store (local)
2025-07-15 19:05:53,599 - sync_service - INFO - Starting new items sync...
2025-07-15 19:05:53,602 - sync_service - INFO - Starting multi-store new items sync from SAP to Shopify
2025-07-15 19:05:56,012 - sync_service - INFO - SAP logging client login successful
2025-07-15 19:05:58,365 - sync_service - INFO - API log added to SAP: system - /sync/new_items_multi_store - success
2025-07-15 19:05:58,369 - sync_service - INFO - Fetching new items for store: local
2025-07-15 19:05:58,371 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'login', 'request': {'company': 'JudeBenHalim_Test', 'user': 'manager'}, 'response': None, 'status': None}
2025-07-15 19:05:59,575 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'login', 'request': None, 'response': {'status': 'success'}, 'status': 'success'}
2025-07-15 19:05:59,577 - sync_service - INFO - SAP login successful
2025-07-15 19:05:59,581 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': "view.svc/MASHURA_New_ItemsB1SLQuery?$filter=Shopify_Store eq 'local'&$orderby=MainProduct", 'request': {'method': 'GET', 'url': "https://10.0.0.100:50000/b1s/v1/view.svc/MASHURA_New_ItemsB1SLQuery?$filter=Shopify_Store eq 'local'&$orderby=MainProduct", 'data': None, 'params': None}, 'response': None, 'status': None}
2025-07-15 19:06:01,738 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': "view.svc/MASHURA_New_ItemsB1SLQuery?$filter=Shopify_Store eq 'local'&$orderby=MainProduct", 'request': None, 'response': {'odata.metadata': 'https://10.0.0.100:50000/b1s/v1/view.svc/$metadata#MASHURA_New_ItemsB1SLQuery', 'value': [{'itemcode': 'FG-0000708', 'ItemName': 'Morsi-Earrings-Blue', 'MainProduct': 'Morsi Earrings', 'Color': 'Blue', 'OnHand': 0.0, 'IsCommited': 0.0, 'Available': 0.0, 'Price': 2500.0, 'Status': 'new', 'Shopify_ProductCode': '', 'Shopify_Store': 'local', 'id__': 1}, {'itemcode': 'FG-0000709', 'ItemName': 'Morsi-Earrings-Orange', 'MainProduct': 'Morsi Earrings', 'Color': 'Orange', 'OnHand': 15.0, 'IsCommited': 0.0, 'Available': 15.0, 'Price': 2500.0, 'Status': 'new', 'Shopify_ProductCode': '', 'Shopify_Store': 'local', 'id__': 2}]}, 'status': 'success'}
2025-07-15 19:06:01,742 - sync_service - INFO - Product group: ('Morsi Earrings', 'local') has 2 items
2025-07-15 19:06:01,743 - sync_service - INFO - Grouped 2 items into 1 product groups for store local
2025-07-15 19:06:01,743 - sync_service - INFO - Processing product group: ('Morsi Earrings', 'local') with 2 items for store local
2025-07-15 19:06:03,279 - sync_service - INFO - API log added to SAP: shopify - /admin/api/graphql_local - success
2025-07-15 19:06:03,280 - sync_service - INFO - API Call: {'service': 'shopify', 'endpoint': 'graphql_local', 'request': {'query': '\n        query GetProductByHandle($handle: String!) {\n            productByHandle(handle: $handle) {\n                id\n                title\n                handle\n                description\n                variants(first: 50) {\n                    edges {\n                        node {\n                            id\n                            sku\n                            price\n                            inventoryItem {\n                                id\n                            }\n                            selectedOptions {\n                                name\n                                value\n                            }\n                        }\n                    }\n                }\n            }\n        }\n        ', 'variables': {'handle': 'morsi-earrings'}}, 'response': None, 'status': None}
2025-07-15 19:06:03,725 - sync_service - INFO - API Call: {'service': 'shopify', 'endpoint': 'graphql_local', 'request': None, 'response': {'productByHandle': None}, 'status': 'success'}
2025-07-15 19:06:04,968 - sync_service - INFO - API log added to SAP: shopify - /admin/api/graphql_local - success
2025-07-15 19:06:04,972 - sync_service - INFO - Product Morsi Earrings doesn't exist in store local, creating new product
2025-07-15 19:06:05,934 - sync_service - INFO - API log added to SAP: shopify - /admin/api/graphql_local - success
2025-07-15 19:06:05,937 - sync_service - INFO - API Call: {'service': 'shopify', 'endpoint': 'graphql_local', 'request': {'query': '\n        mutation productCreate($input: ProductInput!) {\n            productCreate(input: $input) {\n                product {\n                    id\n                    title\n                    handle\n                    variants(first: 50) {\n                        edges {\n                            node {\n                                id\n                                sku\n                                inventoryItem {\n                                    id\n                                }\n                                selectedOptions {\n                                    name\n                                    value\n                                }\n                            }\n                        }\n                    }\n                }\n                userErrors {\n                    field\n                    message\n                }\n            }\n        }\n        ', 'variables': {'input': {'title': 'Morsi Earrings', 'status': 'DRAFT', 'options': ['Color'], 'variants': [{'options': ['Blue'], 'sku': 'FG-0000708', 'price': '2500.0', 'inventoryManagement': 'SHOPIFY', 'inventoryQuantities': [{'availableQuantity': 0, 'locationId': 'gid://shopify/Location/68605345858'}]}, {'options': ['Orange'], 'sku': 'FG-0000709', 'price': '2500.0', 'inventoryManagement': 'SHOPIFY', 'inventoryQuantities': [{'availableQuantity': 15, 'locationId': 'gid://shopify/Location/68605345858'}]}]}}}, 'response': None, 'status': None}
2025-07-15 19:06:06,820 - sync_service - INFO - API Call: {'service': 'shopify', 'endpoint': 'graphql_local', 'request': None, 'response': {'productCreate': {'product': {'id': 'gid://shopify/Product/7513978830914', 'title': 'Morsi Earrings', 'handle': 'morsi-earrings', 'variants': {'edges': [{'node': {'id': 'gid://shopify/ProductVariant/42313772335170', 'sku': 'FG-0000708', 'inventoryItem': {'id': 'gid://shopify/InventoryItem/44414049222722'}, 'selectedOptions': [{'name': 'Color', 'value': 'Blue'}]}}, {'node': {'id': 'gid://shopify/ProductVariant/42313772367938', 'sku': 'FG-0000709', 'inventoryItem': {'id': 'gid://shopify/InventoryItem/44414049255490'}, 'selectedOptions': [{'name': 'Color', 'value': 'Orange'}]}}]}}, 'userErrors': []}}, 'status': 'success'}
2025-07-15 19:06:06,821 - sync_service - ERROR - Shopify full response for store local: {'msg': 'success', 'data': {'productCreate': {'product': {'id': 'gid://shopify/Product/7513978830914', 'title': 'Morsi Earrings', 'handle': 'morsi-earrings', 'variants': {'edges': [{'node': {'id': 'gid://shopify/ProductVariant/42313772335170', 'sku': 'FG-0000708', 'inventoryItem': {'id': 'gid://shopify/InventoryItem/44414049222722'}, 'selectedOptions': [{'name': 'Color', 'value': 'Blue'}]}}, {'node': {'id': 'gid://shopify/ProductVariant/42313772367938', 'sku': 'FG-0000709', 'inventoryItem': {'id': 'gid://shopify/InventoryItem/44414049255490'}, 'selectedOptions': [{'name': 'Color', 'value': 'Orange'}]}}]}}, 'userErrors': []}}}
2025-07-15 19:06:07,708 - sync_service - INFO - API log added to SAP: shopify - /admin/api/graphql_local - success
2025-07-15 19:06:07,709 - sync_service - INFO - Successfully created product in store local
2025-07-15 19:06:09,459 - sync_service - INFO - API log added to SAP: sap - /U_SHOPIFY_MAPPING - success
2025-07-15 19:06:09,461 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'U_SHOPIFY_MAPPING', 'request': {'method': 'POST', 'url': 'https://10.0.0.100:50000/b1s/v1/U_SHOPIFY_MAPPING', 'data': {'Code': '7513978830914', 'Name': '7513978830914', 'U_Shopify_Type': 'product', 'U_SAP_Code': 'Morsi Earrings', 'U_Shopify_Store': 'local', 'U_SAP_Type': 'item'}, 'params': None}, 'response': None, 'status': None}
2025-07-15 19:06:11,847 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'U_SHOPIFY_MAPPING', 'request': None, 'response': {'odata.metadata': 'https://10.0.0.100:50000/b1s/v1/$metadata#U_SHOPIFY_MAPPING/@Element', 'Code': '7513978830914', 'Name': '7513978830914', 'U_Shopify_Type': 'product', 'U_SAP_Code': 'Morsi Earrings', 'U_SAP_Type': 'item', 'U_Shopify_Store': 'local'}, 'status': 'success'}
2025-07-15 19:06:13,106 - sync_service - INFO - API log added to SAP: sap - /U_SHOPIFY_MAPPING - success
2025-07-15 19:06:14,513 - sync_service - INFO - API log added to SAP: sap - /U_SHOPIFY_MAPPING - success
2025-07-15 19:06:14,514 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'U_SHOPIFY_MAPPING', 'request': {'method': 'POST', 'url': 'https://10.0.0.100:50000/b1s/v1/U_SHOPIFY_MAPPING', 'data': {'Code': '42313772335170', 'Name': '42313772335170', 'U_Shopify_Type': 'variant', 'U_SAP_Code': 'FG-0000708', 'U_Shopify_Store': 'local', 'U_SAP_Type': 'item'}, 'params': None}, 'response': None, 'status': None}
2025-07-15 19:06:16,045 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'U_SHOPIFY_MAPPING', 'request': None, 'response': {'odata.metadata': 'https://10.0.0.100:50000/b1s/v1/$metadata#U_SHOPIFY_MAPPING/@Element', 'Code': '42313772335170', 'Name': '42313772335170', 'U_Shopify_Type': 'variant', 'U_SAP_Code': 'FG-0000708', 'U_SAP_Type': 'item', 'U_Shopify_Store': 'local'}, 'status': 'success'}
2025-07-15 19:06:18,360 - sync_service - INFO - API log added to SAP: sap - /U_SHOPIFY_MAPPING - success
2025-07-15 19:06:19,244 - sync_service - ERROR - Failed to add API log to SAP: HTTP 400: {
   "error" : {
      "code" : -1,
      "message" : {
         "lang" : "en-us",
         "value" : "CServiceData::SetPropertyValueString failed; Value too long in property 'U_Action' of 'U_API_LOG'"
      }
   }
}

2025-07-15 19:06:19,245 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'U_SHOPIFY_MAPPING', 'request': {'method': 'POST', 'url': 'https://10.0.0.100:50000/b1s/v1/U_SHOPIFY_MAPPING', 'data': {'Code': '44414049222722', 'Name': '44414049222722', 'U_Shopify_Type': 'variant_inventory', 'U_SAP_Code': 'FG-0000708', 'U_Shopify_Store': 'local', 'U_SAP_Type': 'item'}, 'params': None}, 'response': None, 'status': None}
2025-07-15 19:06:21,495 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'U_SHOPIFY_MAPPING', 'request': None, 'response': {'odata.metadata': 'https://10.0.0.100:50000/b1s/v1/$metadata#U_SHOPIFY_MAPPING/@Element', 'Code': '44414049222722', 'Name': '44414049222722', 'U_Shopify_Type': 'variant_inventory', 'U_SAP_Code': 'FG-0000708', 'U_SAP_Type': 'item', 'U_Shopify_Store': 'local'}, 'status': 'success'}
2025-07-15 19:06:24,559 - sync_service - ERROR - Failed to add API log to SAP: HTTP 400: {
   "error" : {
      "code" : -1,
      "message" : {
         "lang" : "en-us",
         "value" : "CServiceData::SetPropertyValueString failed; Value too long in property 'U_Action' of 'U_API_LOG'"
      }
   }
}

2025-07-15 19:06:26,612 - sync_service - INFO - API log added to SAP: sap - /U_SHOPIFY_MAPPING - success
2025-07-15 19:06:26,614 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'U_SHOPIFY_MAPPING', 'request': {'method': 'POST', 'url': 'https://10.0.0.100:50000/b1s/v1/U_SHOPIFY_MAPPING', 'data': {'Code': '42313772367938', 'Name': '42313772367938', 'U_Shopify_Type': 'variant', 'U_SAP_Code': 'FG-0000709', 'U_Shopify_Store': 'local', 'U_SAP_Type': 'item'}, 'params': None}, 'response': None, 'status': None}
2025-07-15 19:06:28,457 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'U_SHOPIFY_MAPPING', 'request': None, 'response': {'odata.metadata': 'https://10.0.0.100:50000/b1s/v1/$metadata#U_SHOPIFY_MAPPING/@Element', 'Code': '42313772367938', 'Name': '42313772367938', 'U_Shopify_Type': 'variant', 'U_SAP_Code': 'FG-0000709', 'U_SAP_Type': 'item', 'U_Shopify_Store': 'local'}, 'status': 'success'}
2025-07-15 19:06:29,995 - sync_service - INFO - API log added to SAP: sap - /U_SHOPIFY_MAPPING - success
2025-07-15 19:06:31,013 - sync_service - ERROR - Failed to add API log to SAP: HTTP 400: {
   "error" : {
      "code" : -1,
      "message" : {
         "lang" : "en-us",
         "value" : "CServiceData::SetPropertyValueString failed; Value too long in property 'U_Action' of 'U_API_LOG'"
      }
   }
}

2025-07-15 19:06:31,015 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'U_SHOPIFY_MAPPING', 'request': {'method': 'POST', 'url': 'https://10.0.0.100:50000/b1s/v1/U_SHOPIFY_MAPPING', 'data': {'Code': '44414049255490', 'Name': '44414049255490', 'U_Shopify_Type': 'variant_inventory', 'U_SAP_Code': 'FG-0000709', 'U_Shopify_Store': 'local', 'U_SAP_Type': 'item'}, 'params': None}, 'response': None, 'status': None}
2025-07-15 19:06:32,040 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'U_SHOPIFY_MAPPING', 'request': None, 'response': {'odata.metadata': 'https://10.0.0.100:50000/b1s/v1/$metadata#U_SHOPIFY_MAPPING/@Element', 'Code': '44414049255490', 'Name': '44414049255490', 'U_Shopify_Type': 'variant_inventory', 'U_SAP_Code': 'FG-0000709', 'U_SAP_Type': 'item', 'U_Shopify_Store': 'local'}, 'status': 'success'}
2025-07-15 19:06:34,509 - sync_service - ERROR - Failed to add API log to SAP: HTTP 400: {
   "error" : {
      "code" : -1,
      "message" : {
         "lang" : "en-us",
         "value" : "CServiceData::SetPropertyValueString failed; Value too long in property 'U_Action' of 'U_API_LOG'"
      }
   }
}

2025-07-15 19:06:35,013 - sync_service - INFO - Sync Event: {'sync_type': 'multi_store_new_items_sap_to_shopify', 'items_processed': 1, 'success_count': 1, 'error_count': 0, 'details': None}
2025-07-15 19:06:36,485 - sync_service - INFO - API log added to SAP: system - /sync/new_items_multi_store - success
2025-07-15 19:06:36,488 - sync_service - INFO - Multi-store new items sync completed: 1 processed, 1 successful, 0 errors
2025-07-15 19:06:46,911 - sync_service - INFO - Initialized Shopify client for store: Local Store (local)
2025-07-15 19:06:46,931 - sync_service - INFO - Starting stock change sync...
2025-07-15 19:06:46,932 - sync_service - INFO - Starting stock change sync using MASHURA_StockChangeB1SLQuery view
2025-07-15 19:06:46,933 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'login', 'request': {'company': 'JudeBenHalim_Test', 'user': 'manager'}, 'response': None, 'status': None}
2025-07-15 19:06:49,331 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'login', 'request': None, 'response': {'status': 'success'}, 'status': 'success'}
2025-07-15 19:06:49,334 - sync_service - INFO - SAP login successful
2025-07-15 19:06:49,337 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'view.svc/MASHURA_StockChangeB1SLQuery', 'request': {'method': 'GET', 'url': 'https://10.0.0.100:50000/b1s/v1/view.svc/MASHURA_StockChangeB1SLQuery', 'data': None, 'params': {'$top': 50}}, 'response': None, 'status': None}
2025-07-15 19:06:51,275 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'view.svc/MASHURA_StockChangeB1SLQuery', 'request': None, 'response': {'odata.metadata': 'https://10.0.0.100:50000/b1s/v1/view.svc/$metadata#MASHURA_StockChangeB1SLQuery', 'value': [{'ItemCode': 'FG-0000709', 'Variant_ID': '44414049255490', 'OnHand': 15.0, 'Available': 15.0, 'Location_ID': '68605345858', 'id__': 1}]}, 'status': 'success'}
2025-07-15 19:06:51,276 - sync_service - INFO - API Call: {'service': 'shopify', 'endpoint': 'rest_inventory_local', 'request': {'location_id': '68605345858', 'inventory_item_id': '44414049255490', 'available': 15}, 'response': None, 'status': None}
2025-07-15 19:07:02,808 - sync_service - INFO - API Call: {'service': 'shopify', 'endpoint': 'rest_inventory_local', 'request': None, 'response': {'inventory_level': {'inventory_item_id': 44414049255490, 'location_id': 68605345858, 'available': 15, 'updated_at': '2025-07-15T19:06:12+03:00', 'admin_graphql_api_id': 'gid://shopify/InventoryLevel/103109591106?inventory_item_id=44414049255490'}}, 'status': 'success'}
2025-07-15 19:07:04,516 - sync_service - INFO - SAP logging client login successful
2025-07-15 19:07:06,212 - sync_service - INFO - API log added to SAP: shopify - inventory_levels - success
2025-07-15 19:07:06,321 - sync_service - INFO - Stock change sync completed: 1 processed, 1 successful, 0 errors
2025-07-16 13:32:18,622 - sync_service - INFO - Initialized Shopify client for store: Local Store (local)
2025-07-16 13:32:40,488 - sync_service - INFO - Initialized Shopify client for store: Local Store (local)
2025-07-16 13:32:40,508 - sync_service - INFO - Starting all syncs...
2025-07-16 13:33:07,510 - sync_service - INFO - Initialized Shopify client for store: Local Store (local)
2025-07-16 13:33:07,570 - sync_service - INFO - Starting all syncs...
2025-07-16 13:33:07,574 - sync_service - INFO - Starting new items sync...
2025-07-16 13:33:07,578 - sync_service - INFO - Starting multi-store new items sync from SAP to Shopify
2025-07-16 13:33:09,476 - sync_service - INFO - SAP logging client login successful
2025-07-16 13:33:10,999 - sync_service - INFO - API log added to SAP: system - /sync/new_items_multi_store - success
2025-07-16 13:33:11,004 - sync_service - INFO - Fetching new items for store: local
2025-07-16 13:33:11,010 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'login', 'request': {'company': 'JudeBenHalim_Test', 'user': 'manager'}, 'response': None, 'status': None}
2025-07-16 13:33:12,323 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'login', 'request': None, 'response': {'status': 'success'}, 'status': 'success'}
2025-07-16 13:33:12,326 - sync_service - INFO - SAP login successful
2025-07-16 13:33:12,330 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': "view.svc/MASHURA_New_ItemsB1SLQuery?$filter=Shopify_Store eq 'local'&$orderby=MainProduct", 'request': {'method': 'GET', 'url': "https://10.0.0.100:50000/b1s/v1/view.svc/MASHURA_New_ItemsB1SLQuery?$filter=Shopify_Store eq 'local'&$orderby=MainProduct", 'data': None, 'params': None}, 'response': None, 'status': None}
2025-07-16 13:33:13,355 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': "view.svc/MASHURA_New_ItemsB1SLQuery?$filter=Shopify_Store eq 'local'&$orderby=MainProduct", 'request': None, 'response': {'odata.metadata': 'https://10.0.0.100:50000/b1s/v1/view.svc/$metadata#MASHURA_New_ItemsB1SLQuery', 'value': []}, 'status': 'success'}
2025-07-16 13:33:13,360 - sync_service - INFO - No new items found in SAP for store local
2025-07-16 13:33:13,362 - sync_service - INFO - Sync Event: {'sync_type': 'multi_store_new_items_sap_to_shopify', 'items_processed': 0, 'success_count': 0, 'error_count': 0, 'details': None}
2025-07-16 13:33:15,672 - sync_service - INFO - API log added to SAP: system - /sync/new_items_multi_store - success
2025-07-16 13:33:15,674 - sync_service - INFO - Multi-store new items sync completed: 0 processed, 0 successful, 0 errors
2025-07-16 13:33:15,675 - sync_service - INFO - Starting stock change sync...
2025-07-16 13:33:15,676 - sync_service - INFO - Starting stock change sync using MASHURA_StockChangeB1SLQuery view
2025-07-16 13:33:15,677 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'view.svc/MASHURA_StockChangeB1SLQuery', 'request': {'method': 'GET', 'url': 'https://10.0.0.100:50000/b1s/v1/view.svc/MASHURA_StockChangeB1SLQuery', 'data': None, 'params': {'$top': 50}}, 'response': None, 'status': None}
2025-07-16 13:33:16,707 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'view.svc/MASHURA_StockChangeB1SLQuery', 'request': None, 'response': {'odata.metadata': 'https://10.0.0.100:50000/b1s/v1/view.svc/$metadata#MASHURA_StockChangeB1SLQuery', 'value': []}, 'status': 'success'}
2025-07-16 13:33:16,712 - sync_service - INFO - No stock changes found in the view.
2025-07-16 13:33:16,715 - sync_service - INFO - Starting master data sync...
2025-07-16 13:33:16,717 - sync_service - INFO - Starting master data sync
2025-07-16 13:33:16,718 - sync_service - INFO - API Call: {'service': 'shopify', 'endpoint': 'graphql', 'request': {'query': '\n        query GetProducts($first: Int!, $after: String) {\n            products(first: $first, after: $after) {\n                pageInfo {\n                    hasNextPage\n                    endCursor\n                }\n                edges {\n                    node {\n                        id\n                        title\n                        handle\n                        description\n                        variants(first: 1) {\n                            edges {\n                                node {\n                                    id\n                                    sku\n                                    price\n                                    inventoryQuantity\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n        }\n        ', 'variables': {'first': 100, 'after': None}}, 'response': None, 'status': None}
2025-07-16 13:33:26,731 - sync_service - ERROR - GraphQL query error: 
2025-07-16 13:33:26,733 - sync_service - ERROR - Failed to get products from Shopify: GraphQL query error: 
2025-07-16 13:33:26,733 - sync_service - ERROR - Product sync failed: GraphQL query error: 
2025-07-16 13:33:26,734 - sync_service - INFO - Starting orders sync...
2025-07-16 13:33:26,734 - sync_service - INFO - Starting orders sync
2025-07-16 13:33:26,735 - sync_service - INFO - Sync Event: {'sync_type': 'orders', 'items_processed': 0, 'success_count': 0, 'error_count': 0, 'details': None}
2025-07-16 13:33:26,736 - sync_service - INFO - Orders sync completed
2025-07-16 15:57:20,447 - sync_service - INFO - Initialized Shopify client for store: Local Store (local)
2025-07-16 15:57:20,504 - sync_service - INFO - Starting continuous sync mode...
2025-07-16 15:57:20,507 - sync_service - INFO - New items sync scheduled to run every 10 minutes
2025-07-16 15:57:20,507 - sync_service - INFO - Inventory sync scheduled to run every 2 minutes
2025-07-16 15:57:20,509 - sync_service - INFO - Running new_items sync...
2025-07-16 15:57:20,510 - sync_service - INFO - Starting new items sync...
2025-07-16 15:57:20,511 - sync_service - INFO - Starting multi-store new items sync from SAP to Shopify
2025-07-16 15:57:20,534 - sync_service - INFO - Running stock sync...
2025-07-16 15:57:20,537 - sync_service - INFO - Starting stock change sync...
2025-07-16 15:57:20,538 - sync_service - INFO - Starting stock change sync using MASHURA_StockChangeB1SLQuery view
2025-07-16 15:57:20,538 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'login', 'request': {'company': 'JudeBenHalim_Test', 'user': 'manager'}, 'response': None, 'status': None}
2025-07-16 15:57:21,817 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'login', 'request': None, 'response': {'status': 'success'}, 'status': 'success'}
2025-07-16 15:57:21,819 - sync_service - INFO - SAP login successful
2025-07-16 15:57:21,824 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'view.svc/MASHURA_StockChangeB1SLQuery', 'request': {'method': 'GET', 'url': 'https://10.0.0.100:50000/b1s/v1/view.svc/MASHURA_StockChangeB1SLQuery', 'data': None, 'params': {'$top': 50}}, 'response': None, 'status': None}
2025-07-16 15:57:21,831 - sync_service - INFO - SAP logging client login successful
2025-07-16 15:57:22,545 - sync_service - INFO - API log added to SAP: system - /sync/new_items_multi_store - success
2025-07-16 15:57:22,547 - sync_service - INFO - Fetching new items for store: local
2025-07-16 15:57:22,549 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': "view.svc/MASHURA_New_ItemsB1SLQuery?$filter=Shopify_Store eq 'local'&$orderby=MainProduct", 'request': {'method': 'GET', 'url': "https://10.0.0.100:50000/b1s/v1/view.svc/MASHURA_New_ItemsB1SLQuery?$filter=Shopify_Store eq 'local'&$orderby=MainProduct", 'data': None, 'params': None}, 'response': None, 'status': None}
2025-07-16 15:57:23,259 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': "view.svc/MASHURA_New_ItemsB1SLQuery?$filter=Shopify_Store eq 'local'&$orderby=MainProduct", 'request': None, 'response': {'odata.metadata': 'https://10.0.0.100:50000/b1s/v1/view.svc/$metadata#MASHURA_New_ItemsB1SLQuery', 'value': []}, 'status': 'success'}
2025-07-16 15:57:23,262 - sync_service - INFO - No new items found in SAP for store local
2025-07-16 15:57:23,264 - sync_service - INFO - Sync Event: {'sync_type': 'multi_store_new_items_sap_to_shopify', 'items_processed': 0, 'success_count': 0, 'error_count': 0, 'details': None}
2025-07-16 15:57:23,976 - sync_service - INFO - API log added to SAP: system - /sync/new_items_multi_store - success
2025-07-16 15:57:23,979 - sync_service - INFO - Multi-store new items sync completed: 0 processed, 0 successful, 0 errors
2025-07-16 15:57:23,981 - sync_service - INFO - ✅ new_items sync completed successfully
2025-07-16 15:57:23,982 - sync_service - INFO -    - Processed: 0
2025-07-16 15:57:23,983 - sync_service - INFO -    - Successful: 0
2025-07-16 15:57:23,983 - sync_service - INFO -    - Errors: 0
2025-07-16 15:57:23,988 - sync_service - INFO - Waiting 10 minutes before next new_items sync...
2025-07-16 15:57:24,011 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'view.svc/MASHURA_StockChangeB1SLQuery', 'request': None, 'response': {'odata.metadata': 'https://10.0.0.100:50000/b1s/v1/view.svc/$metadata#MASHURA_StockChangeB1SLQuery', 'value': []}, 'status': 'success'}
2025-07-16 15:57:24,014 - sync_service - INFO - No stock changes found in the view.
2025-07-16 15:57:24,015 - sync_service - INFO - ✅ stock sync completed successfully
2025-07-16 15:57:24,015 - sync_service - INFO -    - Processed: 0
2025-07-16 15:57:24,016 - sync_service - INFO -    - Successful: 0
2025-07-16 15:57:24,016 - sync_service - INFO -    - Errors: 0
2025-07-16 15:57:24,017 - sync_service - INFO - Waiting 2 minutes before next stock sync...
2025-07-16 15:59:24,019 - sync_service - INFO - Running stock sync...
2025-07-16 15:59:24,043 - sync_service - INFO - Starting stock change sync...
2025-07-16 15:59:24,070 - sync_service - INFO - Starting stock change sync using MASHURA_StockChangeB1SLQuery view
2025-07-16 15:59:24,099 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'view.svc/MASHURA_StockChangeB1SLQuery', 'request': {'method': 'GET', 'url': 'https://10.0.0.100:50000/b1s/v1/view.svc/MASHURA_StockChangeB1SLQuery', 'data': None, 'params': {'$top': 50}}, 'response': None, 'status': None}
2025-07-16 15:59:25,748 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'view.svc/MASHURA_StockChangeB1SLQuery', 'request': None, 'response': {'odata.metadata': 'https://10.0.0.100:50000/b1s/v1/view.svc/$metadata#MASHURA_StockChangeB1SLQuery', 'value': []}, 'status': 'success'}
2025-07-16 15:59:25,917 - sync_service - INFO - No stock changes found in the view.
2025-07-16 15:59:26,032 - sync_service - INFO - ✅ stock sync completed successfully
2025-07-16 15:59:26,064 - sync_service - INFO -    - Processed: 0
2025-07-16 15:59:26,074 - sync_service - INFO -    - Successful: 0
2025-07-16 15:59:26,082 - sync_service - INFO -    - Errors: 0
2025-07-16 15:59:26,089 - sync_service - INFO - Waiting 2 minutes before next stock sync...
2025-07-16 16:01:26,101 - sync_service - INFO - Running stock sync...
2025-07-16 16:01:26,103 - sync_service - INFO - Starting stock change sync...
2025-07-16 16:01:26,105 - sync_service - INFO - Starting stock change sync using MASHURA_StockChangeB1SLQuery view
2025-07-16 16:01:26,107 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'view.svc/MASHURA_StockChangeB1SLQuery', 'request': {'method': 'GET', 'url': 'https://10.0.0.100:50000/b1s/v1/view.svc/MASHURA_StockChangeB1SLQuery', 'data': None, 'params': {'$top': 50}}, 'response': None, 'status': None}
2025-07-16 16:01:27,253 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'view.svc/MASHURA_StockChangeB1SLQuery', 'request': None, 'response': {'odata.metadata': 'https://10.0.0.100:50000/b1s/v1/view.svc/$metadata#MASHURA_StockChangeB1SLQuery', 'value': []}, 'status': 'success'}
2025-07-16 16:01:27,254 - sync_service - INFO - No stock changes found in the view.
2025-07-16 16:01:27,255 - sync_service - INFO - ✅ stock sync completed successfully
2025-07-16 16:01:27,256 - sync_service - INFO -    - Processed: 0
2025-07-16 16:01:27,257 - sync_service - INFO -    - Successful: 0
2025-07-16 16:01:27,257 - sync_service - INFO -    - Errors: 0
2025-07-16 16:01:27,258 - sync_service - INFO - Waiting 2 minutes before next stock sync...
2025-07-16 16:03:27,260 - sync_service - INFO - Running stock sync...
2025-07-16 16:03:27,261 - sync_service - INFO - Starting stock change sync...
2025-07-16 16:03:27,262 - sync_service - INFO - Starting stock change sync using MASHURA_StockChangeB1SLQuery view
2025-07-16 16:03:27,263 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'view.svc/MASHURA_StockChangeB1SLQuery', 'request': {'method': 'GET', 'url': 'https://10.0.0.100:50000/b1s/v1/view.svc/MASHURA_StockChangeB1SLQuery', 'data': None, 'params': {'$top': 50}}, 'response': None, 'status': None}
2025-07-16 16:03:28,209 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'view.svc/MASHURA_StockChangeB1SLQuery', 'request': None, 'response': {'odata.metadata': 'https://10.0.0.100:50000/b1s/v1/view.svc/$metadata#MASHURA_StockChangeB1SLQuery', 'value': []}, 'status': 'success'}
2025-07-16 16:03:28,209 - sync_service - INFO - No stock changes found in the view.
2025-07-16 16:03:28,210 - sync_service - INFO - ✅ stock sync completed successfully
2025-07-16 16:03:28,210 - sync_service - INFO -    - Processed: 0
2025-07-16 16:03:28,211 - sync_service - INFO -    - Successful: 0
2025-07-16 16:03:28,211 - sync_service - INFO -    - Errors: 0
2025-07-16 16:03:28,211 - sync_service - INFO - Waiting 2 minutes before next stock sync...
2025-07-16 16:05:28,216 - sync_service - INFO - Running stock sync...
2025-07-16 16:05:28,220 - sync_service - INFO - Starting stock change sync...
2025-07-16 16:05:28,225 - sync_service - INFO - Starting stock change sync using MASHURA_StockChangeB1SLQuery view
2025-07-16 16:05:28,228 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'view.svc/MASHURA_StockChangeB1SLQuery', 'request': {'method': 'GET', 'url': 'https://10.0.0.100:50000/b1s/v1/view.svc/MASHURA_StockChangeB1SLQuery', 'data': None, 'params': {'$top': 50}}, 'response': None, 'status': None}
2025-07-16 16:05:29,232 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'view.svc/MASHURA_StockChangeB1SLQuery', 'request': None, 'response': {'odata.metadata': 'https://10.0.0.100:50000/b1s/v1/view.svc/$metadata#MASHURA_StockChangeB1SLQuery', 'value': [{'ItemCode': 'FG-0000708', 'Variant_ID': '44414049222722', 'OnHand': 25.0, 'Available': 25.0, 'Location_ID': '68605345858', 'id__': 1}]}, 'status': 'success'}
2025-07-16 16:05:29,234 - sync_service - INFO - API Call: {'service': 'shopify', 'endpoint': 'rest_inventory_local', 'request': {'location_id': '68605345858', 'inventory_item_id': '44414049222722', 'available': 25}, 'response': None, 'status': None}
2025-07-16 16:05:41,196 - sync_service - INFO - API Call: {'service': 'shopify', 'endpoint': 'rest_inventory_local', 'request': None, 'response': {'inventory_level': {'inventory_item_id': 44414049222722, 'location_id': 68605345858, 'available': 25, 'updated_at': '2025-07-16T16:05:41+03:00', 'admin_graphql_api_id': 'gid://shopify/InventoryLevel/103109591106?inventory_item_id=44414049222722'}}, 'status': 'success'}
2025-07-16 16:05:42,700 - sync_service - INFO - API log added to SAP: shopify - inventory_levels - success
2025-07-16 16:05:42,811 - sync_service - INFO - Stock change sync completed: 1 processed, 1 successful, 0 errors
2025-07-16 16:05:42,811 - sync_service - INFO - ✅ stock sync completed successfully
2025-07-16 16:05:42,812 - sync_service - INFO -    - Processed: 1
2025-07-16 16:05:42,813 - sync_service - INFO -    - Successful: 1
2025-07-16 16:05:42,814 - sync_service - INFO -    - Errors: 0
2025-07-16 16:05:42,815 - sync_service - INFO - Waiting 2 minutes before next stock sync...
2025-07-16 16:07:23,998 - sync_service - INFO - Running new_items sync...
2025-07-16 16:07:24,001 - sync_service - INFO - Starting new items sync...
2025-07-16 16:07:24,003 - sync_service - INFO - Starting multi-store new items sync from SAP to Shopify
2025-07-16 16:07:24,851 - sync_service - INFO - API log added to SAP: system - /sync/new_items_multi_store - success
2025-07-16 16:07:24,852 - sync_service - INFO - Fetching new items for store: local
2025-07-16 16:07:24,853 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': "view.svc/MASHURA_New_ItemsB1SLQuery?$filter=Shopify_Store eq 'local'&$orderby=MainProduct", 'request': {'method': 'GET', 'url': "https://10.0.0.100:50000/b1s/v1/view.svc/MASHURA_New_ItemsB1SLQuery?$filter=Shopify_Store eq 'local'&$orderby=MainProduct", 'data': None, 'params': None}, 'response': None, 'status': None}
2025-07-16 16:07:25,692 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': "view.svc/MASHURA_New_ItemsB1SLQuery?$filter=Shopify_Store eq 'local'&$orderby=MainProduct", 'request': None, 'response': {'odata.metadata': 'https://10.0.0.100:50000/b1s/v1/view.svc/$metadata#MASHURA_New_ItemsB1SLQuery', 'value': [{'itemcode': 'FG-0000710', 'ItemName': 'Morsi-Earrings-Purpple', 'MainProduct': 'Morsi Earrings', 'Color': 'Purple', 'OnHand': 10.0, 'IsCommited': 0.0, 'Available': 10.0, 'Price': 2500.0, 'Status': 'existing', 'Shopify_ProductCode': '7513978830914', 'Shopify_Store': 'local', 'id__': 1}]}, 'status': 'success'}
2025-07-16 16:07:25,697 - sync_service - INFO - Product group: ('Morsi Earrings', 'local') has 1 items
2025-07-16 16:07:25,699 - sync_service - INFO - Grouped 1 items into 1 product groups for store local
2025-07-16 16:07:25,699 - sync_service - INFO - Processing product group: ('Morsi Earrings', 'local') with 1 items for store local
2025-07-16 16:07:25,700 - sync_service - INFO - Found existing Shopify product ID: 7513978830914 for Morsi Earrings
2025-07-16 16:07:25,706 - sync_service - INFO - Product Morsi Earrings already exists in store local, adding variants
2025-07-16 16:07:25,708 - sync_service - INFO - API Call: {'service': 'shopify', 'endpoint': 'graphql_local', 'request': {'query': '\n        query GetProduct($id: ID!) {\n            product(id: $id) {\n                id\n                title\n                handle\n                description\n                variants(first: 50) {\n                    edges {\n                        node {\n                            id\n                            sku\n                            price\n                            inventoryItem {\n                                id\n                            }\n                            selectedOptions {\n                                name\n                                value\n                            }\n                        }\n                    }\n                }\n            }\n        }\n        ', 'variables': {'id': 'gid://shopify/Product/7513978830914'}}, 'response': None, 'status': None}
2025-07-16 16:07:35,725 - sync_service - ERROR - GraphQL query error for store local: 
2025-07-16 16:07:35,729 - sync_service - INFO - API Call: {'service': 'shopify', 'endpoint': 'graphql_local', 'request': {'query': '\n        query GetProductByHandle($handle: String!) {\n            productByHandle(handle: $handle) {\n                id\n                title\n                handle\n                description\n                variants(first: 50) {\n                    edges {\n                        node {\n                            id\n                            sku\n                            price\n                            inventoryItem {\n                                id\n                            }\n                            selectedOptions {\n                                name\n                                value\n                            }\n                        }\n                    }\n                }\n            }\n        }\n        ', 'variables': {'handle': None}}, 'response': None, 'status': None}
2025-07-16 16:07:37,233 - sync_service - ERROR - GraphQL query error for store local: {'message': 'Variable $handle of type String! was provided invalid value', 'locations': [{'line': 1, 'column': 26}], 'extensions': {'value': None, 'problems': [{'path': [], 'explanation': 'Expected value to not be null'}]}}
GraphQL Errors: [
  {
    "message": "Variable $handle of type String! was provided invalid value",
    "locations": [
      {
        "line": 1,
        "column": 26
      }
    ],
    "extensions": {
      "value": null,
      "problems": [
        {
          "path": [],
          "explanation": "Expected value to not be null"
        }
      ]
    }
  }
]
2025-07-16 16:07:38,013 - sync_service - ERROR - Failed to add API log to SAP: HTTP 400: {
   "error" : {
      "code" : -1,
      "message" : {
         "lang" : "en-us",
         "value" : "CServiceData::SetPropertyValueString failed; Value too long in property 'U_Value' of 'U_API_LOG'"
      }
   }
}

2025-07-16 16:07:38,770 - sync_service - ERROR - Failed to add API log to SAP: HTTP 400: {
   "error" : {
      "code" : -1,
      "message" : {
         "lang" : "en-us",
         "value" : "CServiceData::SetPropertyValueString failed; Value too long in property 'U_Action' of 'U_API_LOG'"
      }
   }
}

2025-07-16 16:07:38,771 - sync_service - INFO - API Call: {'service': 'shopify', 'endpoint': 'graphql_local', 'request': {'query': '\n        mutation productVariantCreate($input: ProductVariantInput!) {\n            productVariantCreate(input: $input) {\n                productVariant {\n                    id\n                    sku\n                    price\n                    inventoryItem {\n                        id\n                    }\n                    selectedOptions {\n                        name\n                        value\n                    }\n                }\n                userErrors {\n                    field\n                    message\n                }\n            }\n        }\n        ', 'variables': {'input': {'sku': 'FG-0000710', 'price': '2500.0', 'inventoryPolicy': 'DENY', 'inventoryManagement': 'SHOPIFY', 'weight': 0.0, 'weightUnit': 'KILOGRAMS', 'options': ['Purple'], 'productId': 'gid://shopify/Product/7513978830914'}}}, 'response': None, 'status': None}
2025-07-16 16:07:42,831 - sync_service - INFO - Running stock sync...
2025-07-16 16:07:42,832 - sync_service - INFO - Starting stock change sync...
2025-07-16 16:07:42,832 - sync_service - INFO - Starting stock change sync using MASHURA_StockChangeB1SLQuery view
2025-07-16 16:07:42,833 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'view.svc/MASHURA_StockChangeB1SLQuery', 'request': {'method': 'GET', 'url': 'https://10.0.0.100:50000/b1s/v1/view.svc/MASHURA_StockChangeB1SLQuery', 'data': None, 'params': {'$top': 50}}, 'response': None, 'status': None}
2025-07-16 16:07:43,606 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'view.svc/MASHURA_StockChangeB1SLQuery', 'request': None, 'response': {'odata.metadata': 'https://10.0.0.100:50000/b1s/v1/view.svc/$metadata#MASHURA_StockChangeB1SLQuery', 'value': []}, 'status': 'success'}
2025-07-16 16:07:43,610 - sync_service - INFO - No stock changes found in the view.
2025-07-16 16:07:43,612 - sync_service - INFO - ✅ stock sync completed successfully
2025-07-16 16:07:43,612 - sync_service - INFO -    - Processed: 0
2025-07-16 16:07:43,613 - sync_service - INFO -    - Successful: 0
2025-07-16 16:07:43,614 - sync_service - INFO -    - Errors: 0
2025-07-16 16:07:43,615 - sync_service - INFO - Waiting 2 minutes before next stock sync...
2025-07-16 16:07:48,779 - sync_service - ERROR - GraphQL query error for store local: 
2025-07-16 16:07:48,782 - sync_service - ERROR - Detailed variant creation error for FG-0000710: GraphQL query error for store local: 
2025-07-16 16:07:49,591 - sync_service - ERROR - Failed to add API log to SAP: HTTP 400: {
   "error" : {
      "code" : -1,
      "message" : {
         "lang" : "en-us",
         "value" : "CServiceData::SetPropertyValueString failed; Value too long in property 'U_Action' of 'U_API_LOG'"
      }
   }
}

2025-07-16 16:07:49,593 - sync_service - ERROR - Failed to add variant FG-0000710: GraphQL query error for store local: 
2025-07-16 16:07:50,412 - sync_service - INFO - API log added to SAP: sap - /U_SHOPIFY_MAPPING - success
2025-07-16 16:07:50,415 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'U_SHOPIFY_MAPPING', 'request': {'method': 'POST', 'url': 'https://10.0.0.100:50000/b1s/v1/U_SHOPIFY_MAPPING', 'data': {'Code': '7513978830914', 'Name': '7513978830914', 'U_Shopify_Type': 'product', 'U_SAP_Code': 'Morsi Earrings', 'U_Shopify_Store': 'local', 'U_SAP_Type': 'item'}, 'params': None}, 'response': None, 'status': None}
2025-07-16 16:07:51,199 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'U_SHOPIFY_MAPPING', 'request': None, 'response': {'status_code': 400, 'text': '{\n   "error" : {\n      "code" : -2035,\n      "message" : {\n         "lang" : "en-us",\n         "value" : "This entry already exists in the following tables (ODBC -2035)"\n      }\n   }\n}\n'}, 'status': 'failure'}
2025-07-16 16:07:51,960 - sync_service - INFO - API log added to SAP: sap - /U_SHOPIFY_MAPPING - failure
2025-07-16 16:07:52,464 - sync_service - INFO - Sync Event: {'sync_type': 'multi_store_new_items_sap_to_shopify', 'items_processed': 1, 'success_count': 0, 'error_count': 1, 'details': None}
2025-07-16 16:07:53,200 - sync_service - INFO - API log added to SAP: system - /sync/new_items_multi_store - success
2025-07-16 16:07:53,200 - sync_service - INFO - Multi-store new items sync completed: 1 processed, 0 successful, 1 errors
2025-07-16 16:07:53,201 - sync_service - INFO - ✅ new_items sync completed successfully
2025-07-16 16:07:53,201 - sync_service - INFO -    - Processed: 1
2025-07-16 16:07:53,202 - sync_service - INFO -    - Successful: 0
2025-07-16 16:07:53,202 - sync_service - INFO -    - Errors: 1
2025-07-16 16:07:53,203 - sync_service - INFO - Waiting 10 minutes before next new_items sync...
2025-07-16 16:12:23,712 - sync_service - INFO - Initialized Shopify client for store: Local Store (local)
2025-07-16 16:12:23,748 - sync_service - INFO - Starting new items sync...
2025-07-16 16:12:23,749 - sync_service - INFO - Starting multi-store new items sync from SAP to Shopify
2025-07-16 16:12:25,012 - sync_service - INFO - SAP logging client login successful
2025-07-16 16:12:26,198 - sync_service - INFO - API log added to SAP: system - /sync/new_items_multi_store - success
2025-07-16 16:12:26,199 - sync_service - INFO - Fetching new items for store: local
2025-07-16 16:12:26,200 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'login', 'request': {'company': 'JudeBenHalim_Test', 'user': 'manager'}, 'response': None, 'status': None}
2025-07-16 16:12:27,283 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'login', 'request': None, 'response': {'status': 'success'}, 'status': 'success'}
2025-07-16 16:12:27,284 - sync_service - INFO - SAP login successful
2025-07-16 16:12:27,291 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': "view.svc/MASHURA_New_ItemsB1SLQuery?$filter=Shopify_Store eq 'local'&$orderby=MainProduct", 'request': {'method': 'GET', 'url': "https://10.0.0.100:50000/b1s/v1/view.svc/MASHURA_New_ItemsB1SLQuery?$filter=Shopify_Store eq 'local'&$orderby=MainProduct", 'data': None, 'params': None}, 'response': None, 'status': None}
2025-07-16 16:12:28,401 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': "view.svc/MASHURA_New_ItemsB1SLQuery?$filter=Shopify_Store eq 'local'&$orderby=MainProduct", 'request': None, 'response': {'odata.metadata': 'https://10.0.0.100:50000/b1s/v1/view.svc/$metadata#MASHURA_New_ItemsB1SLQuery', 'value': [{'itemcode': 'FG-0000710', 'ItemName': 'Morsi-Earrings-Purpple', 'MainProduct': 'Morsi Earrings', 'Color': 'Purple', 'OnHand': 10.0, 'IsCommited': 0.0, 'Available': 10.0, 'Price': 2500.0, 'Status': 'existing', 'Shopify_ProductCode': '7513978830914', 'Shopify_Store': 'local', 'id__': 1}]}, 'status': 'success'}
2025-07-16 16:12:28,407 - sync_service - INFO - Product group: ('Morsi Earrings', 'local') has 1 items
2025-07-16 16:12:28,409 - sync_service - INFO - Grouped 1 items into 1 product groups for store local
2025-07-16 16:12:28,410 - sync_service - INFO - Processing product group: ('Morsi Earrings', 'local') with 1 items for store local
2025-07-16 16:12:28,412 - sync_service - INFO - Found existing Shopify product ID: 7513978830914 for Morsi Earrings
2025-07-16 16:12:28,415 - sync_service - INFO - Product Morsi Earrings already exists in store local, adding variants
2025-07-16 16:12:28,416 - sync_service - INFO - API Call: {'service': 'shopify', 'endpoint': 'graphql_local', 'request': {'query': '\n        query GetProduct($id: ID!) {\n            product(id: $id) {\n                id\n                title\n                handle\n                description\n                variants(first: 50) {\n                    edges {\n                        node {\n                            id\n                            sku\n                            price\n                            inventoryItem {\n                                id\n                            }\n                            selectedOptions {\n                                name\n                                value\n                            }\n                        }\n                    }\n                }\n            }\n        }\n        ', 'variables': {'id': 'gid://shopify/Product/7513978830914'}}, 'response': None, 'status': None}
2025-07-16 16:12:28,964 - sync_service - INFO - API Call: {'service': 'shopify', 'endpoint': 'graphql_local', 'request': None, 'response': {'product': {'id': 'gid://shopify/Product/7513978830914', 'title': 'Morsi Earrings', 'handle': 'morsi-earrings', 'description': '', 'variants': {'edges': [{'node': {'id': 'gid://shopify/ProductVariant/42313772335170', 'sku': 'FG-0000708', 'price': '2500.00', 'inventoryItem': {'id': 'gid://shopify/InventoryItem/44414049222722'}, 'selectedOptions': [{'name': 'Color', 'value': 'Blue'}]}}, {'node': {'id': 'gid://shopify/ProductVariant/42313772367938', 'sku': 'FG-0000709', 'price': '2500.00', 'inventoryItem': {'id': 'gid://shopify/InventoryItem/44414049255490'}, 'selectedOptions': [{'name': 'Color', 'value': 'Orange'}]}}]}}}, 'status': 'success'}
2025-07-16 16:12:28,965 - sync_service - INFO - API Call: {'service': 'shopify', 'endpoint': 'graphql_local', 'request': {'query': '\n        query GetProduct($id: ID!) {\n            product(id: $id) {\n                id\n                title\n                handle\n                description\n                variants(first: 50) {\n                    edges {\n                        node {\n                            id\n                            sku\n                            price\n                            inventoryItem {\n                                id\n                            }\n                            selectedOptions {\n                                name\n                                value\n                            }\n                        }\n                    }\n                }\n            }\n        }\n        ', 'variables': {'id': 'gid://shopify/Product/7513978830914'}}, 'response': None, 'status': None}
2025-07-16 16:12:29,450 - sync_service - INFO - API Call: {'service': 'shopify', 'endpoint': 'graphql_local', 'request': None, 'response': {'product': {'id': 'gid://shopify/Product/7513978830914', 'title': 'Morsi Earrings', 'handle': 'morsi-earrings', 'description': '', 'variants': {'edges': [{'node': {'id': 'gid://shopify/ProductVariant/42313772335170', 'sku': 'FG-0000708', 'price': '2500.00', 'inventoryItem': {'id': 'gid://shopify/InventoryItem/44414049222722'}, 'selectedOptions': [{'name': 'Color', 'value': 'Blue'}]}}, {'node': {'id': 'gid://shopify/ProductVariant/42313772367938', 'sku': 'FG-0000709', 'price': '2500.00', 'inventoryItem': {'id': 'gid://shopify/InventoryItem/44414049255490'}, 'selectedOptions': [{'name': 'Color', 'value': 'Orange'}]}}]}}}, 'status': 'success'}
2025-07-16 16:12:30,171 - sync_service - ERROR - Failed to add API log to SAP: HTTP 400: {
   "error" : {
      "code" : -1,
      "message" : {
         "lang" : "en-us",
         "value" : "CServiceData::SetPropertyValueString failed; Value too long in property 'U_Action' of 'U_API_LOG'"
      }
   }
}

2025-07-16 16:12:30,174 - sync_service - INFO - API Call: {'service': 'shopify', 'endpoint': 'graphql_local', 'request': {'query': '\n        mutation productVariantCreate($input: ProductVariantInput!) {\n            productVariantCreate(input: $input) {\n                productVariant {\n                    id\n                    sku\n                    price\n                    inventoryItem {\n                        id\n                    }\n                    selectedOptions {\n                        name\n                        value\n                    }\n                }\n                userErrors {\n                    field\n                    message\n                }\n            }\n        }\n        ', 'variables': {'input': {'sku': 'FG-0000710', 'price': '2500.0', 'inventoryPolicy': 'DENY', 'inventoryManagement': 'SHOPIFY', 'weight': 0.0, 'weightUnit': 'KILOGRAMS', 'options': ['Purple'], 'productId': 'gid://shopify/Product/7513978830914'}}}, 'response': None, 'status': None}
2025-07-16 16:12:30,890 - sync_service - INFO - API Call: {'service': 'shopify', 'endpoint': 'graphql_local', 'request': None, 'response': {'productVariantCreate': {'productVariant': {'id': 'gid://shopify/ProductVariant/42316493389890', 'sku': 'FG-0000710', 'price': '2500.00', 'inventoryItem': {'id': 'gid://shopify/InventoryItem/44416857014338'}, 'selectedOptions': [{'name': 'Color', 'value': 'Purple'}]}, 'userErrors': []}}, 'status': 'success'}
2025-07-16 16:12:30,892 - sync_service - INFO - API Call: {'service': 'shopify', 'endpoint': 'graphql_local', 'request': {'query': '\n        mutation productVariantUpdate($input: ProductVariantInput!) {\n            productVariantUpdate(input: $input) {\n                productVariant {\n                    id\n                    sku\n                    title\n                    selectedOptions {\n                        name\n                        value\n                    }\n                }\n                userErrors {\n                    field\n                    message\n                }\n            }\n        }\n        ', 'variables': {'input': {'title': 'Purple', 'id': 'gid://shopify/ProductVariant/42316493389890'}}}, 'response': None, 'status': None}
2025-07-16 16:12:40,082 - sync_service - INFO - API Call: {'service': 'shopify', 'endpoint': 'graphql_local', 'request': None, 'response': {'productVariantUpdate': {'productVariant': {'id': 'gid://shopify/ProductVariant/42316493389890', 'sku': 'FG-0000710', 'title': 'Purple', 'selectedOptions': [{'name': 'Color', 'value': 'Purple'}]}, 'userErrors': []}}, 'status': 'success'}
2025-07-16 16:12:40,084 - sync_service - INFO - Updated variant FG-0000710 title to 'Purple'
2025-07-16 16:12:40,679 - sync_service - ERROR - Failed to add API log to SAP: HTTP 400: {
   "error" : {
      "code" : -1,
      "message" : {
         "lang" : "en-us",
         "value" : "CServiceData::SetPropertyValueString failed; Value too long in property 'U_Action' of 'U_API_LOG'"
      }
   }
}

2025-07-16 16:12:40,681 - sync_service - INFO - API Call: {'service': 'shopify', 'endpoint': 'graphql_local', 'request': {'query': '\n        mutation inventoryAdjustQuantity($input: InventoryAdjustQuantityInput!) {\n            inventoryAdjustQuantity(input: $input) {\n                inventoryLevel {\n                    available\n                }\n                userErrors {\n                    field\n                    message\n                }\n            }\n        }\n        ', 'variables': {'input': {'inventoryItemId': 'gid://shopify/InventoryItem/44416857014338', 'availableDelta': 10}}}, 'response': None, 'status': None}
2025-07-16 16:12:41,198 - sync_service - ERROR - GraphQL query error for store local: {'message': "Field 'inventoryAdjustQuantity' doesn't exist on type 'Mutation'", 'locations': [{'line': 2, 'column': 3}], 'path': ['mutation inventoryAdjustQuantity', 'inventoryAdjustQuantity'], 'extensions': {'code': 'undefinedField', 'typeName': 'Mutation', 'fieldName': 'inventoryAdjustQuantity'}}
GraphQL Errors: [
  {
    "message": "Field 'inventoryAdjustQuantity' doesn't exist on type 'Mutation'",
    "locations": [
      {
        "line": 2,
        "column": 3
      }
    ],
    "path": [
      "mutation inventoryAdjustQuantity",
      "inventoryAdjustQuantity"
    ],
    "extensions": {
      "code": "undefinedField",
      "typeName": "Mutation",
      "fieldName": "inventoryAdjustQuantity"
    }
  },
  {
    "message": "Variable $input is declared by inventoryAdjustQuantity but not used",
    "locations": [
      {
        "line": 1,
        "column": 1
      }
    ],
    "path": [
      "mutation inventoryAdjustQuantity"
    ],
    "extensions": {
      "code": "variableNotUsed",
      "variableName": "input"
    }
  }
]
2025-07-16 16:12:41,827 - sync_service - ERROR - Failed to add API log to SAP: HTTP 400: {
   "error" : {
      "code" : -1,
      "message" : {
         "lang" : "en-us",
         "value" : "CServiceData::SetPropertyValueString failed; Value too long in property 'U_Value' of 'U_API_LOG'"
      }
   }
}

2025-07-16 16:12:41,830 - sync_service - WARNING - Failed to set inventory for variant FG-0000710: GraphQL query error for store local: {'message': "Field 'inventoryAdjustQuantity' doesn't exist on type 'Mutation'", 'locations': [{'line': 2, 'column': 3}], 'path': ['mutation inventoryAdjustQuantity', 'inventoryAdjustQuantity'], 'extensions': {'code': 'undefinedField', 'typeName': 'Mutation', 'fieldName': 'inventoryAdjustQuantity'}}
GraphQL Errors: [
  {
    "message": "Field 'inventoryAdjustQuantity' doesn't exist on type 'Mutation'",
    "locations": [
      {
        "line": 2,
        "column": 3
      }
    ],
    "path": [
      "mutation inventoryAdjustQuantity",
      "inventoryAdjustQuantity"
    ],
    "extensions": {
      "code": "undefinedField",
      "typeName": "Mutation",
      "fieldName": "inventoryAdjustQuantity"
    }
  },
  {
    "message": "Variable $input is declared by inventoryAdjustQuantity but not used",
    "locations": [
      {
        "line": 1,
        "column": 1
      }
    ],
    "path": [
      "mutation inventoryAdjustQuantity"
    ],
    "extensions": {
      "code": "variableNotUsed",
      "variableName": "input"
    }
  }
]
2025-07-16 16:12:41,832 - sync_service - INFO - Successfully added variant FG-0000710 to existing product
2025-07-16 16:12:42,449 - sync_service - INFO - API log added to SAP: sap - /U_SHOPIFY_MAPPING - success
2025-07-16 16:12:42,449 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'U_SHOPIFY_MAPPING', 'request': {'method': 'POST', 'url': 'https://10.0.0.100:50000/b1s/v1/U_SHOPIFY_MAPPING', 'data': {'Code': '7513978830914', 'Name': '7513978830914', 'U_Shopify_Type': 'product', 'U_SAP_Code': 'Morsi Earrings', 'U_Shopify_Store': 'local', 'U_SAP_Type': 'item'}, 'params': None}, 'response': None, 'status': None}
2025-07-16 16:12:43,064 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'U_SHOPIFY_MAPPING', 'request': None, 'response': {'status_code': 400, 'text': '{\n   "error" : {\n      "code" : -2035,\n      "message" : {\n         "lang" : "en-us",\n         "value" : "This entry already exists in the following tables (ODBC -2035)"\n      }\n   }\n}\n'}, 'status': 'failure'}
2025-07-16 16:12:43,694 - sync_service - INFO - API log added to SAP: sap - /U_SHOPIFY_MAPPING - failure
2025-07-16 16:12:44,331 - sync_service - INFO - API log added to SAP: sap - /U_SHOPIFY_MAPPING - success
2025-07-16 16:12:44,332 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'U_SHOPIFY_MAPPING', 'request': {'method': 'POST', 'url': 'https://10.0.0.100:50000/b1s/v1/U_SHOPIFY_MAPPING', 'data': {'Code': '42316493389890', 'Name': '42316493389890', 'U_Shopify_Type': 'variant', 'U_SAP_Code': 'FG-0000710', 'U_Shopify_Store': 'local', 'U_SAP_Type': 'item'}, 'params': None}, 'response': None, 'status': None}
2025-07-16 16:12:44,978 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'U_SHOPIFY_MAPPING', 'request': None, 'response': {'odata.metadata': 'https://10.0.0.100:50000/b1s/v1/$metadata#U_SHOPIFY_MAPPING/@Element', 'Code': '42316493389890', 'Name': '42316493389890', 'U_Shopify_Type': 'variant', 'U_SAP_Code': 'FG-0000710', 'U_SAP_Type': 'item', 'U_Shopify_Store': 'local'}, 'status': 'success'}
2025-07-16 16:12:45,631 - sync_service - INFO - API log added to SAP: sap - /U_SHOPIFY_MAPPING - success
2025-07-16 16:12:46,267 - sync_service - ERROR - Failed to add API log to SAP: HTTP 400: {
   "error" : {
      "code" : -1,
      "message" : {
         "lang" : "en-us",
         "value" : "CServiceData::SetPropertyValueString failed; Value too long in property 'U_Action' of 'U_API_LOG'"
      }
   }
}

2025-07-16 16:12:46,267 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'U_SHOPIFY_MAPPING', 'request': {'method': 'POST', 'url': 'https://10.0.0.100:50000/b1s/v1/U_SHOPIFY_MAPPING', 'data': {'Code': '44416857014338', 'Name': '44416857014338', 'U_Shopify_Type': 'variant_inventory', 'U_SAP_Code': 'FG-0000710', 'U_Shopify_Store': 'local', 'U_SAP_Type': 'item'}, 'params': None}, 'response': None, 'status': None}
2025-07-16 16:12:46,934 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'U_SHOPIFY_MAPPING', 'request': None, 'response': {'odata.metadata': 'https://10.0.0.100:50000/b1s/v1/$metadata#U_SHOPIFY_MAPPING/@Element', 'Code': '44416857014338', 'Name': '44416857014338', 'U_Shopify_Type': 'variant_inventory', 'U_SAP_Code': 'FG-0000710', 'U_SAP_Type': 'item', 'U_Shopify_Store': 'local'}, 'status': 'success'}
2025-07-16 16:12:47,607 - sync_service - ERROR - Failed to add API log to SAP: HTTP 400: {
   "error" : {
      "code" : -1,
      "message" : {
         "lang" : "en-us",
         "value" : "CServiceData::SetPropertyValueString failed; Value too long in property 'U_Action' of 'U_API_LOG'"
      }
   }
}

2025-07-16 16:12:48,118 - sync_service - INFO - Sync Event: {'sync_type': 'multi_store_new_items_sap_to_shopify', 'items_processed': 1, 'success_count': 1, 'error_count': 0, 'details': None}
2025-07-16 16:12:48,800 - sync_service - INFO - API log added to SAP: system - /sync/new_items_multi_store - success
2025-07-16 16:12:48,801 - sync_service - INFO - Multi-store new items sync completed: 1 processed, 1 successful, 0 errors
2025-07-16 16:14:35,292 - sync_service - INFO - Initialized Shopify client for store: Local Store (local)
2025-07-16 16:14:35,331 - sync_service - INFO - Starting new items sync...
2025-07-16 16:14:35,333 - sync_service - INFO - Starting multi-store new items sync from SAP to Shopify
2025-07-16 16:14:36,567 - sync_service - INFO - SAP logging client login successful
2025-07-16 16:14:37,684 - sync_service - INFO - API log added to SAP: system - /sync/new_items_multi_store - success
2025-07-16 16:14:37,684 - sync_service - INFO - Fetching new items for store: local
2025-07-16 16:14:37,685 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'login', 'request': {'company': 'JudeBenHalim_Test', 'user': 'manager'}, 'response': None, 'status': None}
2025-07-16 16:14:38,761 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'login', 'request': None, 'response': {'status': 'success'}, 'status': 'success'}
2025-07-16 16:14:38,762 - sync_service - INFO - SAP login successful
2025-07-16 16:14:38,764 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': "view.svc/MASHURA_New_ItemsB1SLQuery?$filter=Shopify_Store eq 'local'&$orderby=MainProduct", 'request': {'method': 'GET', 'url': "https://10.0.0.100:50000/b1s/v1/view.svc/MASHURA_New_ItemsB1SLQuery?$filter=Shopify_Store eq 'local'&$orderby=MainProduct", 'data': None, 'params': None}, 'response': None, 'status': None}
2025-07-16 16:14:39,884 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': "view.svc/MASHURA_New_ItemsB1SLQuery?$filter=Shopify_Store eq 'local'&$orderby=MainProduct", 'request': None, 'response': {'odata.metadata': 'https://10.0.0.100:50000/b1s/v1/view.svc/$metadata#MASHURA_New_ItemsB1SLQuery', 'value': []}, 'status': 'success'}
2025-07-16 16:14:39,885 - sync_service - INFO - No new items found in SAP for store local
2025-07-16 16:14:39,886 - sync_service - INFO - Sync Event: {'sync_type': 'multi_store_new_items_sap_to_shopify', 'items_processed': 0, 'success_count': 0, 'error_count': 0, 'details': None}
2025-07-16 16:14:40,629 - sync_service - INFO - API log added to SAP: system - /sync/new_items_multi_store - success
2025-07-16 16:14:40,630 - sync_service - INFO - Multi-store new items sync completed: 0 processed, 0 successful, 0 errors
2025-07-16 16:14:46,792 - sync_service - INFO - Initialized Shopify client for store: Local Store (local)
2025-07-16 16:14:46,815 - sync_service - INFO - Starting stock change sync...
2025-07-16 16:14:46,816 - sync_service - INFO - Starting stock change sync using MASHURA_StockChangeB1SLQuery view
2025-07-16 16:14:46,817 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'login', 'request': {'company': 'JudeBenHalim_Test', 'user': 'manager'}, 'response': None, 'status': None}
2025-07-16 16:14:48,018 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'login', 'request': None, 'response': {'status': 'success'}, 'status': 'success'}
2025-07-16 16:14:48,019 - sync_service - INFO - SAP login successful
2025-07-16 16:14:48,024 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'view.svc/MASHURA_StockChangeB1SLQuery', 'request': {'method': 'GET', 'url': 'https://10.0.0.100:50000/b1s/v1/view.svc/MASHURA_StockChangeB1SLQuery', 'data': None, 'params': {'$top': 50}}, 'response': None, 'status': None}
2025-07-16 16:14:49,112 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'view.svc/MASHURA_StockChangeB1SLQuery', 'request': None, 'response': {'odata.metadata': 'https://10.0.0.100:50000/b1s/v1/view.svc/$metadata#MASHURA_StockChangeB1SLQuery', 'value': [{'ItemCode': 'FG-0000710', 'Variant_ID': '44416857014338', 'OnHand': 10.0, 'Available': 10.0, 'Location_ID': '68605345858', 'id__': 1}]}, 'status': 'success'}
2025-07-16 16:14:49,116 - sync_service - INFO - API Call: {'service': 'shopify', 'endpoint': 'rest_inventory_local', 'request': {'location_id': '68605345858', 'inventory_item_id': '44416857014338', 'available': 10}, 'response': None, 'status': None}
2025-07-16 16:14:49,631 - sync_service - INFO - API Call: {'service': 'shopify', 'endpoint': 'rest_inventory_local', 'request': None, 'response': {'inventory_level': {'inventory_item_id': 44416857014338, 'location_id': 68605345858, 'available': 10, 'updated_at': '2025-07-16T16:14:50+03:00', 'admin_graphql_api_id': 'gid://shopify/InventoryLevel/103109591106?inventory_item_id=44416857014338'}}, 'status': 'success'}
2025-07-16 16:14:51,384 - sync_service - INFO - SAP logging client login successful
2025-07-16 16:14:52,454 - sync_service - INFO - API log added to SAP: shopify - inventory_levels - success
2025-07-16 16:14:52,560 - sync_service - INFO - Stock change sync completed: 1 processed, 1 successful, 0 errors
2025-07-16 16:14:59,737 - sync_service - INFO - Initialized Shopify client for store: Local Store (local)
2025-07-16 16:14:59,779 - sync_service - INFO - Starting all syncs...
2025-07-16 16:14:59,781 - sync_service - INFO - Starting new items sync...
2025-07-16 16:14:59,782 - sync_service - INFO - Starting multi-store new items sync from SAP to Shopify
2025-07-16 16:15:00,917 - sync_service - INFO - SAP logging client login successful
2025-07-16 16:15:02,014 - sync_service - INFO - API log added to SAP: system - /sync/new_items_multi_store - success
2025-07-16 16:15:02,016 - sync_service - INFO - Fetching new items for store: local
2025-07-16 16:15:02,022 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'login', 'request': {'company': 'JudeBenHalim_Test', 'user': 'manager'}, 'response': None, 'status': None}
2025-07-16 16:15:03,130 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'login', 'request': None, 'response': {'status': 'success'}, 'status': 'success'}
2025-07-16 16:15:03,132 - sync_service - INFO - SAP login successful
2025-07-16 16:15:03,136 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': "view.svc/MASHURA_New_ItemsB1SLQuery?$filter=Shopify_Store eq 'local'&$orderby=MainProduct", 'request': {'method': 'GET', 'url': "https://10.0.0.100:50000/b1s/v1/view.svc/MASHURA_New_ItemsB1SLQuery?$filter=Shopify_Store eq 'local'&$orderby=MainProduct", 'data': None, 'params': None}, 'response': None, 'status': None}
2025-07-16 16:15:04,221 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': "view.svc/MASHURA_New_ItemsB1SLQuery?$filter=Shopify_Store eq 'local'&$orderby=MainProduct", 'request': None, 'response': {'odata.metadata': 'https://10.0.0.100:50000/b1s/v1/view.svc/$metadata#MASHURA_New_ItemsB1SLQuery', 'value': []}, 'status': 'success'}
2025-07-16 16:15:04,228 - sync_service - INFO - No new items found in SAP for store local
2025-07-16 16:15:04,231 - sync_service - INFO - Sync Event: {'sync_type': 'multi_store_new_items_sap_to_shopify', 'items_processed': 0, 'success_count': 0, 'error_count': 0, 'details': None}
2025-07-16 16:15:04,899 - sync_service - INFO - API log added to SAP: system - /sync/new_items_multi_store - success
2025-07-16 16:15:04,901 - sync_service - INFO - Multi-store new items sync completed: 0 processed, 0 successful, 0 errors
2025-07-16 16:15:04,903 - sync_service - INFO - Starting stock change sync...
2025-07-16 16:15:04,903 - sync_service - INFO - Starting stock change sync using MASHURA_StockChangeB1SLQuery view
2025-07-16 16:15:04,905 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'view.svc/MASHURA_StockChangeB1SLQuery', 'request': {'method': 'GET', 'url': 'https://10.0.0.100:50000/b1s/v1/view.svc/MASHURA_StockChangeB1SLQuery', 'data': None, 'params': {'$top': 50}}, 'response': None, 'status': None}
2025-07-16 16:15:05,551 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'view.svc/MASHURA_StockChangeB1SLQuery', 'request': None, 'response': {'odata.metadata': 'https://10.0.0.100:50000/b1s/v1/view.svc/$metadata#MASHURA_StockChangeB1SLQuery', 'value': []}, 'status': 'success'}
2025-07-16 16:15:05,552 - sync_service - INFO - No stock changes found in the view.
2025-07-17 08:54:36,914 - sync_service - INFO - Initialized Shopify client for store: Local Store (local)
2025-07-28 12:32:55,840 - sync_service - INFO - Initialized Shopify client for store: Local Store (local)
2025-07-28 12:33:12,498 - sync_service - INFO - Initialized Shopify client for store: Local Store (local)
2025-07-28 12:57:55,746 - sync_service - INFO - Initialized Shopify client for store: Local Store (local)
2025-07-28 12:57:55,840 - sync_service - INFO - Starting all syncs...
2025-07-28 12:57:55,842 - sync_service - INFO - Starting new items sync...
2025-07-28 12:57:55,843 - sync_service - INFO - Starting multi-store new items sync from SAP to Shopify
2025-07-28 12:57:56,782 - sync_service - INFO - SAP logging client login successful
2025-07-28 12:57:58,379 - sync_service - INFO - API log added to SAP: system - /sync/new_items_multi_store - success
2025-07-28 12:57:58,383 - sync_service - INFO - Fetching new items for store: local
2025-07-28 12:57:58,384 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'login', 'request': {'company': 'JudeBenHalim_Test', 'user': 'manager'}, 'response': None, 'status': None}
2025-07-28 12:57:59,154 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'login', 'request': None, 'response': {'status': 'success'}, 'status': 'success'}
2025-07-28 12:57:59,157 - sync_service - INFO - SAP login successful
2025-07-28 12:57:59,165 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': "view.svc/MASHURA_New_ItemsB1SLQuery?$filter=Shopify_Store eq 'local'&$orderby=MainProduct", 'request': {'method': 'GET', 'url': "https://10.0.0.100:50000/b1s/v1/view.svc/MASHURA_New_ItemsB1SLQuery?$filter=Shopify_Store eq 'local'&$orderby=MainProduct", 'data': None, 'params': None}, 'response': None, 'status': None}
2025-07-28 12:57:59,999 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': "view.svc/MASHURA_New_ItemsB1SLQuery?$filter=Shopify_Store eq 'local'&$orderby=MainProduct", 'request': None, 'response': {'odata.metadata': 'https://10.0.0.100:50000/b1s/v1/view.svc/$metadata#MASHURA_New_ItemsB1SLQuery', 'value': [{'itemcode': 'FG-0000708', 'ItemName': 'Morsi Socks', 'MainProduct': None, 'Color': None, 'Price': 200.0, 'Shopify_Store': 'local', 'Shopify_ProductCode': None, 'Status': 'new', 'id__': 1}, {'itemcode': 'FG-0000706', 'ItemName': 'Morsi-Shoes-Green', 'MainProduct': 'Morsi Shoes', 'Color': 'Green', 'Price': 1000.0, 'Shopify_Store': 'local', 'Shopify_ProductCode': None, 'Status': 'new', 'id__': 2}, {'itemcode': 'FG-0000707', 'ItemName': 'Morsi-Shoes-Beige', 'MainProduct': 'Morsi Shoes', 'Color': 'Beige', 'Price': 1000.0, 'Shopify_Store': 'local', 'Shopify_ProductCode': None, 'Status': 'new', 'id__': 3}]}, 'status': 'success'}
2025-07-28 12:58:00,006 - sync_service - INFO - Product group: ('FG-0000708', 'local') has 1 items
2025-07-28 12:58:00,009 - sync_service - INFO - Product group: ('Morsi Shoes', 'local') has 2 items
2025-07-28 12:58:00,012 - sync_service - INFO - Grouped 3 items into 2 product groups for store local
2025-07-28 12:58:00,020 - sync_service - INFO - Processing product group: ('FG-0000708', 'local') with 1 items for store local
2025-07-28 12:58:01,516 - sync_service - INFO - API log added to SAP: shopify - /admin/api/graphql_local - success
2025-07-28 12:58:01,519 - sync_service - INFO - API Call: {'service': 'shopify', 'endpoint': 'graphql_local', 'request': {'query': '\n        query GetProductByHandle($handle: String!) {\n            productByHandle(handle: $handle) {\n                id\n                title\n                handle\n                description\n                variants(first: 50) {\n                    edges {\n                        node {\n                            id\n                            sku\n                            price\n                            inventoryItem {\n                                id\n                            }\n                            selectedOptions {\n                                name\n                                value\n                            }\n                        }\n                    }\n                }\n            }\n        }\n        ', 'variables': {'handle': 'default'}}, 'response': None, 'status': None}
2025-07-28 12:58:11,675 - sync_service - ERROR - GraphQL query error for store local: 
2025-07-28 12:58:13,580 - sync_service - INFO - API log added to SAP: shopify - /admin/api/graphql_local - success
2025-07-28 12:58:13,582 - sync_service - INFO - Product None doesn't exist in store local, creating new product
2025-07-28 12:58:15,133 - sync_service - INFO - API log added to SAP: shopify - /admin/api/graphql_local - success
2025-07-28 12:58:15,134 - sync_service - INFO - API Call: {'service': 'shopify', 'endpoint': 'graphql_local', 'request': {'query': '\n        mutation productCreate($input: ProductInput!) {\n            productCreate(input: $input) {\n                product {\n                    id\n                    title\n                    handle\n                    variants(first: 50) {\n                        edges {\n                            node {\n                                id\n                                sku\n                                inventoryItem {\n                                    id\n                                }\n                                selectedOptions {\n                                    name\n                                    value\n                                }\n                            }\n                        }\n                    }\n                }\n                userErrors {\n                    field\n                    message\n                }\n            }\n        }\n        ', 'variables': {'input': {'title': 'Morsi Socks', 'descriptionHtml': '', 'vendor': '', 'productType': 'Default', 'status': 'DRAFT', 'tags': [], 'variants': [{'sku': 'FG-0000708', 'price': '200.0', 'inventoryPolicy': 'DENY', 'inventoryManagement': 'SHOPIFY', 'weight': 0.0, 'weightUnit': 'KILOGRAMS'}], 'seo': {'title': 'Morsi Socks', 'description': ''}}}}, 'response': None, 'status': None}
2025-07-28 12:58:16,076 - sync_service - INFO - API Call: {'service': 'shopify', 'endpoint': 'graphql_local', 'request': None, 'response': {'productCreate': {'product': {'id': 'gid://shopify/Product/7519752093762', 'title': 'Morsi Socks', 'handle': 'morsi-socks', 'variants': {'edges': [{'node': {'id': 'gid://shopify/ProductVariant/42346239721538', 'sku': 'FG-0000708', 'inventoryItem': {'id': 'gid://shopify/InventoryItem/44446530535490'}, 'selectedOptions': [{'name': 'Title', 'value': 'Default Title'}]}}]}}, 'userErrors': []}}, 'status': 'success'}
2025-07-28 12:58:16,079 - sync_service - ERROR - Shopify full response for store local: {'msg': 'success', 'data': {'productCreate': {'product': {'id': 'gid://shopify/Product/7519752093762', 'title': 'Morsi Socks', 'handle': 'morsi-socks', 'variants': {'edges': [{'node': {'id': 'gid://shopify/ProductVariant/42346239721538', 'sku': 'FG-0000708', 'inventoryItem': {'id': 'gid://shopify/InventoryItem/44446530535490'}, 'selectedOptions': [{'name': 'Title', 'value': 'Default Title'}]}}]}}, 'userErrors': []}}}
2025-07-28 12:58:17,654 - sync_service - INFO - API log added to SAP: shopify - /admin/api/graphql_local - success
2025-07-28 12:58:17,704 - sync_service - INFO - Successfully created product in store local
2025-07-28 12:58:19,951 - sync_service - INFO - API log added to SAP: sap - /U_SHOPIFY_MAPPING - success
2025-07-28 12:58:20,004 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'U_SHOPIFY_MAPPING', 'request': {'method': 'POST', 'url': 'https://10.0.0.100:50000/b1s/v1/U_SHOPIFY_MAPPING', 'data': {'Code': '7519752093762', 'Name': '7519752093762', 'U_Shopify_Type': 'product', 'U_SAP_Code': 'FG-0000708', 'U_Shopify_Store': 'local', 'U_SAP_Type': 'item'}, 'params': None}, 'response': None, 'status': None}
2025-07-28 12:58:21,447 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'U_SHOPIFY_MAPPING', 'request': None, 'response': {'odata.metadata': 'https://10.0.0.100:50000/b1s/v1/$metadata#U_SHOPIFY_MAPPING/@Element', 'Code': '7519752093762', 'Name': '7519752093762', 'U_SAP_Code': 'FG-0000708', 'U_SAP_Type': 'item', 'U_Shopify_Type': 'product', 'U_Shopify_Store': 'local'}, 'status': 'success'}
2025-07-28 12:58:22,551 - sync_service - INFO - API log added to SAP: sap - /U_SHOPIFY_MAPPING - success
2025-07-28 12:58:23,962 - sync_service - INFO - API log added to SAP: sap - /U_SHOPIFY_MAPPING - success
2025-07-28 12:58:23,964 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'U_SHOPIFY_MAPPING', 'request': {'method': 'POST', 'url': 'https://10.0.0.100:50000/b1s/v1/U_SHOPIFY_MAPPING', 'data': {'Code': '42346239721538', 'Name': '42346239721538', 'U_Shopify_Type': 'variant', 'U_SAP_Code': 'FG-0000708', 'U_Shopify_Store': 'local', 'U_SAP_Type': 'item'}, 'params': None}, 'response': None, 'status': None}
2025-07-28 12:58:25,170 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'U_SHOPIFY_MAPPING', 'request': None, 'response': {'odata.metadata': 'https://10.0.0.100:50000/b1s/v1/$metadata#U_SHOPIFY_MAPPING/@Element', 'Code': '42346239721538', 'Name': '42346239721538', 'U_SAP_Code': 'FG-0000708', 'U_SAP_Type': 'item', 'U_Shopify_Type': 'variant', 'U_Shopify_Store': 'local'}, 'status': 'success'}
2025-07-28 12:58:26,217 - sync_service - INFO - API log added to SAP: sap - /U_SHOPIFY_MAPPING - success
2025-07-28 12:58:27,294 - sync_service - INFO - API log added to SAP: sap - /U_SHOPIFY_MAPPING - success
2025-07-28 12:58:27,295 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'U_SHOPIFY_MAPPING', 'request': {'method': 'POST', 'url': 'https://10.0.0.100:50000/b1s/v1/U_SHOPIFY_MAPPING', 'data': {'Code': '44446530535490', 'Name': '44446530535490', 'U_Shopify_Type': 'variant_inventory', 'U_SAP_Code': 'FG-0000708', 'U_Shopify_Store': 'local', 'U_SAP_Type': 'item'}, 'params': None}, 'response': None, 'status': None}
2025-07-28 12:58:28,799 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'U_SHOPIFY_MAPPING', 'request': None, 'response': {'odata.metadata': 'https://10.0.0.100:50000/b1s/v1/$metadata#U_SHOPIFY_MAPPING/@Element', 'Code': '44446530535490', 'Name': '44446530535490', 'U_SAP_Code': 'FG-0000708', 'U_SAP_Type': 'item', 'U_Shopify_Type': 'variant_inventory', 'U_Shopify_Store': 'local'}, 'status': 'success'}
2025-07-28 12:58:29,826 - sync_service - INFO - API log added to SAP: sap - /U_SHOPIFY_MAPPING - success
2025-07-28 12:58:30,330 - sync_service - INFO - Processing product group: ('Morsi Shoes', 'local') with 2 items for store local
2025-07-28 12:58:31,404 - sync_service - INFO - API log added to SAP: shopify - /admin/api/graphql_local - success
2025-07-28 12:58:31,406 - sync_service - INFO - API Call: {'service': 'shopify', 'endpoint': 'graphql_local', 'request': {'query': '\n        query GetProductByHandle($handle: String!) {\n            productByHandle(handle: $handle) {\n                id\n                title\n                handle\n                description\n                variants(first: 50) {\n                    edges {\n                        node {\n                            id\n                            sku\n                            price\n                            inventoryItem {\n                                id\n                            }\n                            selectedOptions {\n                                name\n                                value\n                            }\n                        }\n                    }\n                }\n            }\n        }\n        ', 'variables': {'handle': 'morsi-shoes'}}, 'response': None, 'status': None}
2025-07-28 12:58:41,417 - sync_service - ERROR - GraphQL query error for store local: 
2025-07-28 12:58:42,479 - sync_service - INFO - API log added to SAP: shopify - /admin/api/graphql_local - success
2025-07-28 12:58:42,482 - sync_service - INFO - Product Morsi Shoes doesn't exist in store local, creating new product
2025-07-28 12:58:42,795 - sync_service - INFO - API log added to SAP: shopify - /admin/api/graphql_local - success
2025-07-28 12:58:42,797 - sync_service - INFO - API Call: {'service': 'shopify', 'endpoint': 'graphql_local', 'request': {'query': '\n        mutation productCreate($input: ProductInput!) {\n            productCreate(input: $input) {\n                product {\n                    id\n                    title\n                    handle\n                    variants(first: 50) {\n                        edges {\n                            node {\n                                id\n                                sku\n                                inventoryItem {\n                                    id\n                                }\n                                selectedOptions {\n                                    name\n                                    value\n                                }\n                            }\n                        }\n                    }\n                }\n                userErrors {\n                    field\n                    message\n                }\n            }\n        }\n        ', 'variables': {'input': {'title': 'Morsi Shoes', 'status': 'DRAFT', 'options': ['Color'], 'variants': [{'options': ['Green'], 'sku': 'FG-0000706', 'price': '1000.0', 'inventoryManagement': 'SHOPIFY', 'inventoryPolicy': 'DENY'}, {'options': ['Beige'], 'sku': 'FG-0000707', 'price': '1000.0', 'inventoryManagement': 'SHOPIFY', 'inventoryPolicy': 'DENY'}]}}}, 'response': None, 'status': None}
2025-07-28 12:58:43,634 - sync_service - INFO - API Call: {'service': 'shopify', 'endpoint': 'graphql_local', 'request': None, 'response': {'productCreate': {'product': {'id': 'gid://shopify/Product/7519752355906', 'title': 'Morsi Shoes', 'handle': 'morsi-shoes', 'variants': {'edges': [{'node': {'id': 'gid://shopify/ProductVariant/42346240344130', 'sku': 'FG-0000706', 'inventoryItem': {'id': 'gid://shopify/InventoryItem/44446531158082'}, 'selectedOptions': [{'name': 'Color', 'value': 'Green'}]}}, {'node': {'id': 'gid://shopify/ProductVariant/42346240376898', 'sku': 'FG-0000707', 'inventoryItem': {'id': 'gid://shopify/InventoryItem/44446531190850'}, 'selectedOptions': [{'name': 'Color', 'value': 'Beige'}]}}]}}, 'userErrors': []}}, 'status': 'success'}
2025-07-28 12:58:43,637 - sync_service - ERROR - Shopify full response for store local: {'msg': 'success', 'data': {'productCreate': {'product': {'id': 'gid://shopify/Product/7519752355906', 'title': 'Morsi Shoes', 'handle': 'morsi-shoes', 'variants': {'edges': [{'node': {'id': 'gid://shopify/ProductVariant/42346240344130', 'sku': 'FG-0000706', 'inventoryItem': {'id': 'gid://shopify/InventoryItem/44446531158082'}, 'selectedOptions': [{'name': 'Color', 'value': 'Green'}]}}, {'node': {'id': 'gid://shopify/ProductVariant/42346240376898', 'sku': 'FG-0000707', 'inventoryItem': {'id': 'gid://shopify/InventoryItem/44446531190850'}, 'selectedOptions': [{'name': 'Color', 'value': 'Beige'}]}}]}}, 'userErrors': []}}}
2025-07-28 12:58:44,509 - sync_service - INFO - API log added to SAP: shopify - /admin/api/graphql_local - success
2025-07-28 12:58:44,510 - sync_service - INFO - Successfully created product in store local
2025-07-28 12:58:45,184 - sync_service - INFO - API log added to SAP: sap - /U_SHOPIFY_MAPPING - success
2025-07-28 12:58:45,186 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'U_SHOPIFY_MAPPING', 'request': {'method': 'POST', 'url': 'https://10.0.0.100:50000/b1s/v1/U_SHOPIFY_MAPPING', 'data': {'Code': '7519752355906', 'Name': '7519752355906', 'U_Shopify_Type': 'product', 'U_SAP_Code': 'Morsi Shoes', 'U_Shopify_Store': 'local', 'U_SAP_Type': 'item'}, 'params': None}, 'response': None, 'status': None}
2025-07-28 12:58:45,793 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'U_SHOPIFY_MAPPING', 'request': None, 'response': {'odata.metadata': 'https://10.0.0.100:50000/b1s/v1/$metadata#U_SHOPIFY_MAPPING/@Element', 'Code': '7519752355906', 'Name': '7519752355906', 'U_SAP_Code': 'Morsi Shoes', 'U_SAP_Type': 'item', 'U_Shopify_Type': 'product', 'U_Shopify_Store': 'local'}, 'status': 'success'}
2025-07-28 12:58:46,060 - sync_service - INFO - API log added to SAP: sap - /U_SHOPIFY_MAPPING - success
2025-07-28 12:58:46,308 - sync_service - INFO - API log added to SAP: sap - /U_SHOPIFY_MAPPING - success
2025-07-28 12:58:46,309 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'U_SHOPIFY_MAPPING', 'request': {'method': 'POST', 'url': 'https://10.0.0.100:50000/b1s/v1/U_SHOPIFY_MAPPING', 'data': {'Code': '42346240344130', 'Name': '42346240344130', 'U_Shopify_Type': 'variant', 'U_SAP_Code': 'FG-0000706', 'U_Shopify_Store': 'local', 'U_SAP_Type': 'item'}, 'params': None}, 'response': None, 'status': None}
2025-07-28 12:58:46,924 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'U_SHOPIFY_MAPPING', 'request': None, 'response': {'odata.metadata': 'https://10.0.0.100:50000/b1s/v1/$metadata#U_SHOPIFY_MAPPING/@Element', 'Code': '42346240344130', 'Name': '42346240344130', 'U_SAP_Code': 'FG-0000706', 'U_SAP_Type': 'item', 'U_Shopify_Type': 'variant', 'U_Shopify_Store': 'local'}, 'status': 'success'}
2025-07-28 12:58:47,209 - sync_service - INFO - API log added to SAP: sap - /U_SHOPIFY_MAPPING - success
2025-07-28 12:58:47,473 - sync_service - INFO - API log added to SAP: sap - /U_SHOPIFY_MAPPING - success
2025-07-28 12:58:47,476 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'U_SHOPIFY_MAPPING', 'request': {'method': 'POST', 'url': 'https://10.0.0.100:50000/b1s/v1/U_SHOPIFY_MAPPING', 'data': {'Code': '44446531158082', 'Name': '44446531158082', 'U_Shopify_Type': 'variant_inventory', 'U_SAP_Code': 'FG-0000706', 'U_Shopify_Store': 'local', 'U_SAP_Type': 'item'}, 'params': None}, 'response': None, 'status': None}
2025-07-28 12:58:48,111 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'U_SHOPIFY_MAPPING', 'request': None, 'response': {'odata.metadata': 'https://10.0.0.100:50000/b1s/v1/$metadata#U_SHOPIFY_MAPPING/@Element', 'Code': '44446531158082', 'Name': '44446531158082', 'U_SAP_Code': 'FG-0000706', 'U_SAP_Type': 'item', 'U_Shopify_Type': 'variant_inventory', 'U_Shopify_Store': 'local'}, 'status': 'success'}
2025-07-28 12:58:48,375 - sync_service - INFO - API log added to SAP: sap - /U_SHOPIFY_MAPPING - success
2025-07-28 12:58:48,625 - sync_service - INFO - API log added to SAP: sap - /U_SHOPIFY_MAPPING - success
2025-07-28 12:58:48,626 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'U_SHOPIFY_MAPPING', 'request': {'method': 'POST', 'url': 'https://10.0.0.100:50000/b1s/v1/U_SHOPIFY_MAPPING', 'data': {'Code': '42346240376898', 'Name': '42346240376898', 'U_Shopify_Type': 'variant', 'U_SAP_Code': 'FG-0000707', 'U_Shopify_Store': 'local', 'U_SAP_Type': 'item'}, 'params': None}, 'response': None, 'status': None}
2025-07-28 12:58:48,892 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'U_SHOPIFY_MAPPING', 'request': None, 'response': {'odata.metadata': 'https://10.0.0.100:50000/b1s/v1/$metadata#U_SHOPIFY_MAPPING/@Element', 'Code': '42346240376898', 'Name': '42346240376898', 'U_SAP_Code': 'FG-0000707', 'U_SAP_Type': 'item', 'U_Shopify_Type': 'variant', 'U_Shopify_Store': 'local'}, 'status': 'success'}
2025-07-28 12:58:49,163 - sync_service - INFO - API log added to SAP: sap - /U_SHOPIFY_MAPPING - success
2025-07-28 12:58:49,425 - sync_service - INFO - API log added to SAP: sap - /U_SHOPIFY_MAPPING - success
2025-07-28 12:58:49,426 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'U_SHOPIFY_MAPPING', 'request': {'method': 'POST', 'url': 'https://10.0.0.100:50000/b1s/v1/U_SHOPIFY_MAPPING', 'data': {'Code': '44446531190850', 'Name': '44446531190850', 'U_Shopify_Type': 'variant_inventory', 'U_SAP_Code': 'FG-0000707', 'U_Shopify_Store': 'local', 'U_SAP_Type': 'item'}, 'params': None}, 'response': None, 'status': None}
2025-07-28 12:58:49,696 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'U_SHOPIFY_MAPPING', 'request': None, 'response': {'odata.metadata': 'https://10.0.0.100:50000/b1s/v1/$metadata#U_SHOPIFY_MAPPING/@Element', 'Code': '44446531190850', 'Name': '44446531190850', 'U_SAP_Code': 'FG-0000707', 'U_SAP_Type': 'item', 'U_Shopify_Type': 'variant_inventory', 'U_Shopify_Store': 'local'}, 'status': 'success'}
2025-07-28 12:58:49,972 - sync_service - INFO - API log added to SAP: sap - /U_SHOPIFY_MAPPING - success
2025-07-28 12:58:50,481 - sync_service - INFO - Sync Event: {'sync_type': 'multi_store_new_items_sap_to_shopify', 'items_processed': 2, 'success_count': 2, 'error_count': 0, 'details': None}
2025-07-28 12:58:50,770 - sync_service - INFO - API log added to SAP: system - /sync/new_items_multi_store - success
2025-07-28 12:58:50,772 - sync_service - INFO - Multi-store new items sync completed: 2 processed, 2 successful, 0 errors
2025-07-28 12:58:50,773 - sync_service - INFO - Starting stock change sync...
2025-07-28 12:58:50,774 - sync_service - INFO - Starting stock change sync using MASHURA_StockChangeB1SLQuery view
2025-07-28 12:58:50,775 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'view.svc/MASHURA_StockChangeB1SLQuery', 'request': {'method': 'GET', 'url': 'https://10.0.0.100:50000/b1s/v1/view.svc/MASHURA_StockChangeB1SLQuery', 'data': None, 'params': {'$top': 50}}, 'response': None, 'status': None}
2025-07-28 12:58:52,568 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'view.svc/MASHURA_StockChangeB1SLQuery', 'request': None, 'response': {'odata.metadata': 'https://10.0.0.100:50000/b1s/v1/view.svc/$metadata#MASHURA_StockChangeB1SLQuery', 'value': [{'ItemCode': 'FG-0000708', 'Variant_ID': '44446530535490', 'OnHand': 200.0, 'Available': 200.0, 'Location_ID': '68605345858', 'id__': 1}, {'ItemCode': 'FG-0000706', 'Variant_ID': '44446531158082', 'OnHand': 50.0, 'Available': 50.0, 'Location_ID': '68605345858', 'id__': 2}, {'ItemCode': 'FG-0000707', 'Variant_ID': '44446531190850', 'OnHand': 50.0, 'Available': 50.0, 'Location_ID': '68605345858', 'id__': 3}]}, 'status': 'success'}
2025-07-28 12:58:52,571 - sync_service - INFO - Updating inventory for item FG-0000708 (variant 44446530535490) at location 68605345858
2025-07-28 12:58:52,573 - sync_service - INFO - API Call: {'service': 'shopify', 'endpoint': 'rest_inventory_local', 'request': {'location_id': '68605345858', 'inventory_item_id': '44446530535490', 'available': 200}, 'response': None, 'status': None}
2025-07-28 12:58:53,193 - sync_service - INFO - API Call: {'service': 'shopify', 'endpoint': 'rest_inventory_local', 'request': None, 'response': {'inventory_level': {'inventory_item_id': 44446530535490, 'location_id': 68605345858, 'available': 200, 'updated_at': '2025-07-28T12:58:53+03:00', 'admin_graphql_api_id': 'gid://shopify/InventoryLevel/103109591106?inventory_item_id=44446530535490'}}, 'status': 'success'}
2025-07-28 12:59:07,083 - sync_service - INFO - API log added to SAP: shopify - inventory_levels - success
2025-07-28 12:59:07,201 - sync_service - INFO - Updating inventory for item FG-0000706 (variant 44446531158082) at location 68605345858
2025-07-28 12:59:07,205 - sync_service - INFO - API Call: {'service': 'shopify', 'endpoint': 'rest_inventory_local', 'request': {'location_id': '68605345858', 'inventory_item_id': '44446531158082', 'available': 50}, 'response': None, 'status': None}
2025-07-28 12:59:18,902 - sync_service - INFO - API Call: {'service': 'shopify', 'endpoint': 'rest_inventory_local', 'request': None, 'response': {'inventory_level': {'inventory_item_id': 44446531158082, 'location_id': 68605345858, 'available': 50, 'updated_at': '2025-07-28T12:59:18+03:00', 'admin_graphql_api_id': 'gid://shopify/InventoryLevel/103109591106?inventory_item_id=44446531158082'}}, 'status': 'success'}
2025-07-28 12:59:19,672 - sync_service - INFO - API log added to SAP: shopify - inventory_levels - success
2025-07-28 12:59:19,791 - sync_service - INFO - Updating inventory for item FG-0000707 (variant 44446531190850) at location 68605345858
2025-07-28 12:59:19,793 - sync_service - INFO - API Call: {'service': 'shopify', 'endpoint': 'rest_inventory_local', 'request': {'location_id': '68605345858', 'inventory_item_id': '44446531190850', 'available': 50}, 'response': None, 'status': None}
2025-07-28 12:59:20,292 - sync_service - INFO - API Call: {'service': 'shopify', 'endpoint': 'rest_inventory_local', 'request': None, 'response': {'inventory_level': {'inventory_item_id': 44446531190850, 'location_id': 68605345858, 'available': 50, 'updated_at': '2025-07-28T12:59:20+03:00', 'admin_graphql_api_id': 'gid://shopify/InventoryLevel/103109591106?inventory_item_id=44446531190850'}}, 'status': 'success'}
2025-07-28 12:59:21,043 - sync_service - INFO - API log added to SAP: shopify - inventory_levels - success
2025-07-28 12:59:21,145 - sync_service - INFO - Stock change sync completed: 3 processed, 3 successful, 0 errors
2025-07-28 13:27:04,564 - sync_service - INFO - Initialized Shopify client for store: Local Store (local)
2025-07-28 13:54:32,402 - sync_service - INFO - Initialized Shopify client for store: Local Store (local)
2025-07-29 16:55:40,822 - sync_service - INFO - Initialized Shopify client for store: Local Store (local)
2025-07-29 16:55:40,837 - sync_service - INFO - API Call: {'service': 'shopify', 'endpoint': 'graphql_local', 'request': {'query': '\n        query {\n            locations(first: 10) {\n                edges {\n                    node {\n                        id\n                        name\n                        address {\n                            address1\n                            city\n                            country\n                        }\n                        isActive\n                    }\n                }\n            }\n        }\n        ', 'variables': None}, 'response': None, 'status': None}
2025-07-29 16:55:50,891 - sync_service - ERROR - GraphQL query error for store local: 
2025-07-29 16:56:00,980 - sync_service - INFO - Initialized Shopify client for store: Local Store (local)
2025-07-29 16:56:00,991 - sync_service - INFO - API Call: {'service': 'shopify', 'endpoint': 'graphql_local', 'request': {'query': '\n        query {\n            locations(first: 10) {\n                edges {\n                    node {\n                        id\n                        name\n                        address {\n                            address1\n                            city\n                            country\n                        }\n                        isActive\n                    }\n                }\n            }\n        }\n        ', 'variables': None}, 'response': None, 'status': None}
2025-07-29 16:56:11,041 - sync_service - ERROR - GraphQL query error for store local: 
2025-08-03 13:11:02,004 - sync_service - INFO - Initialized Shopify client for store: Local Store (local)
2025-08-03 13:11:02,067 - sync_service - INFO - Starting all syncs...
2025-08-03 13:11:02,068 - sync_service - INFO - Starting new items sync...
2025-08-03 13:11:02,068 - sync_service - INFO - Starting multi-store new items sync from SAP to Shopify
2025-08-03 13:11:02,069 - sync_service - INFO - Fetching new items for store: local
2025-08-03 13:11:02,069 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'login', 'request': {'company': 'JudeBenHalim_Test', 'user': 'manager'}, 'response': None, 'status': None}
2025-08-03 13:11:02,963 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'login', 'request': None, 'response': {'status': 'success'}, 'status': 'success'}
2025-08-03 13:11:02,963 - sync_service - INFO - SAP login successful
2025-08-03 13:11:02,965 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': "view.svc/MASHURA_New_ItemsB1SLQuery?$filter=Shopify_Store eq 'local'&$orderby=MainProduct", 'request': {'method': 'GET', 'url': "https://10.0.0.100:50000/b1s/v1/view.svc/MASHURA_New_ItemsB1SLQuery?$filter=Shopify_Store eq 'local'&$orderby=MainProduct", 'data': None, 'params': None}, 'response': None, 'status': None}
2025-08-03 13:11:04,003 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': "view.svc/MASHURA_New_ItemsB1SLQuery?$filter=Shopify_Store eq 'local'&$orderby=MainProduct", 'request': None, 'response': {'odata.metadata': 'https://10.0.0.100:50000/b1s/v1/view.svc/$metadata#MASHURA_New_ItemsB1SLQuery', 'value': [{'itemcode': 'FG-0000704', 'ItemName': 'Morsi Bracelet', 'MainProduct': None, 'Color': None, 'Price': 3200.0, 'Shopify_Store': 'local', 'Shopify_ProductCode': None, 'Status': 'new', 'id__': 1}, {'itemcode': 'FG-0000708', 'ItemName': 'Morsi Socks', 'MainProduct': None, 'Color': None, 'Price': 200.0, 'Shopify_Store': 'local', 'Shopify_ProductCode': None, 'Status': 'new', 'id__': 2}, {'itemcode': 'FG-0000711', 'ItemName': 'Morsi Keyboard', 'MainProduct': None, 'Color': None, 'Price': 1000.0, 'Shopify_Store': 'local', 'Shopify_ProductCode': None, 'Status': 'new', 'id__': 3}, {'itemcode': 'FG-0000709', 'ItemName': 'Morsi-Laptop-Black', 'MainProduct': 'Morsi Laptop', 'Color': 'Black', 'Price': 1000.0, 'Shopify_Store': 'local', 'Shopify_ProductCode': None, 'Status': 'new', 'id__': 4}, {'itemcode': 'FG-0000710', 'ItemName': 'Morsi-Laptop-Grey', 'MainProduct': 'Morsi Laptop', 'Color': 'Grey', 'Price': 1000.0, 'Shopify_Store': 'local', 'Shopify_ProductCode': None, 'Status': 'new', 'id__': 5}, {'itemcode': 'FG-0000702', 'ItemName': 'Morsi-Necklace-Black', 'MainProduct': 'Morsi Necklace', 'Color': 'Black', 'Price': 2500.0, 'Shopify_Store': 'local', 'Shopify_ProductCode': None, 'Status': 'new', 'id__': 6}, {'itemcode': 'FG-0000703', 'ItemName': 'Morsi-Necklace-White', 'MainProduct': 'Morsi Necklace', 'Color': 'White', 'Price': 2500.0, 'Shopify_Store': 'local', 'Shopify_ProductCode': None, 'Status': 'new', 'id__': 7}, {'itemcode': 'FG-0000705', 'ItemName': 'Morsi-Necklace-Green', 'MainProduct': 'Morsi Necklace', 'Color': 'Green', 'Price': 2500.0, 'Shopify_Store': 'local', 'Shopify_ProductCode': None, 'Status': 'new', 'id__': 8}, {'itemcode': 'FG-0000706', 'ItemName': 'Morsi-Shoes-Green', 'MainProduct': 'Morsi Shoes', 'Color': 'Green', 'Price': 1000.0, 'Shopify_Store': 'local', 'Shopify_ProductCode': None, 'Status': 'new', 'id__': 9}, {'itemcode': 'FG-0000707', 'ItemName': 'Morsi-Shoes-Beige', 'MainProduct': 'Morsi Shoes', 'Color': 'Beige', 'Price': 1000.0, 'Shopify_Store': 'local', 'Shopify_ProductCode': None, 'Status': 'new', 'id__': 10}]}, 'status': 'success'}
2025-08-03 13:11:04,006 - sync_service - INFO - Product group: ('FG-0000704', 'local') has 1 items
2025-08-03 13:11:04,007 - sync_service - INFO - Product group: ('FG-0000708', 'local') has 1 items
2025-08-03 13:11:04,007 - sync_service - INFO - Product group: ('FG-0000711', 'local') has 1 items
2025-08-03 13:11:04,008 - sync_service - INFO - Product group: ('Morsi Laptop', 'local') has 2 items
2025-08-03 13:11:04,010 - sync_service - INFO - Product group: ('Morsi Necklace', 'local') has 3 items
2025-08-03 13:11:04,010 - sync_service - INFO - Product group: ('Morsi Shoes', 'local') has 2 items
2025-08-03 13:11:04,011 - sync_service - INFO - Grouped 10 items into 6 product groups for store local
2025-08-03 13:11:04,012 - sync_service - INFO - Processing product group: ('FG-0000704', 'local') with 1 items for store local
2025-08-03 13:11:04,012 - sync_service - INFO - API Call: {'service': 'shopify', 'endpoint': 'graphql_local', 'request': {'query': '\n        query GetProductByHandle($handle: String!) {\n            productByHandle(handle: $handle) {\n                id\n                title\n                handle\n                description\n                variants(first: 50) {\n                    edges {\n                        node {\n                            id\n                            sku\n                            price\n                            inventoryItem {\n                                id\n                            }\n                            selectedOptions {\n                                name\n                                value\n                            }\n                        }\n                    }\n                }\n            }\n        }\n        ', 'variables': {'handle': 'default'}}, 'response': None, 'status': None}
2025-08-03 13:11:04,607 - sync_service - INFO - API Call: {'service': 'shopify', 'endpoint': 'graphql_local', 'request': None, 'response': {'productByHandle': None}, 'status': 'success'}
2025-08-03 13:11:04,608 - sync_service - INFO - Product None doesn't exist in store local, creating new product
2025-08-03 13:11:05,389 - sync_service - INFO - SAP logging client login successful
2025-08-03 13:11:06,906 - sync_service - INFO - API log added to SAP: shopify - /admin/api/graphql_local - success
2025-08-03 13:11:06,908 - sync_service - INFO - API Call: {'service': 'shopify', 'endpoint': 'graphql_local', 'request': {'query': '\n        mutation productCreate($input: ProductInput!) {\n            productCreate(input: $input) {\n                product {\n                    id\n                    title\n                    handle\n                    variants(first: 50) {\n                        edges {\n                            node {\n                                id\n                                sku\n                                inventoryItem {\n                                    id\n                                }\n                                selectedOptions {\n                                    name\n                                    value\n                                }\n                            }\n                        }\n                    }\n                }\n                userErrors {\n                    field\n                    message\n                }\n            }\n        }\n        ', 'variables': {'input': {'title': 'Morsi Bracelet', 'descriptionHtml': '', 'vendor': '', 'productType': 'Default', 'status': 'DRAFT', 'tags': [], 'variants': [{'sku': 'FG-0000704', 'price': '3200.0', 'inventoryPolicy': 'DENY', 'inventoryManagement': 'SHOPIFY', 'weight': 0.0, 'weightUnit': 'KILOGRAMS', 'taxable': False}], 'seo': {'title': 'Morsi Bracelet', 'description': ''}}}}, 'response': None, 'status': None}
2025-08-03 13:11:15,993 - sync_service - INFO - API Call: {'service': 'shopify', 'endpoint': 'graphql_local', 'request': None, 'response': {'productCreate': {'product': {'id': 'gid://shopify/Product/7522695282754', 'title': 'Morsi Bracelet', 'handle': 'morsi-bracelet', 'variants': {'edges': [{'node': {'id': 'gid://shopify/ProductVariant/42360783994946', 'sku': 'FG-0000704', 'inventoryItem': {'id': 'gid://shopify/InventoryItem/44461150076994'}, 'selectedOptions': [{'name': 'Title', 'value': 'Default Title'}]}}]}}, 'userErrors': []}}, 'status': 'success'}
2025-08-03 13:11:15,993 - sync_service - ERROR - Shopify full response for store local: {'msg': 'success', 'data': {'productCreate': {'product': {'id': 'gid://shopify/Product/7522695282754', 'title': 'Morsi Bracelet', 'handle': 'morsi-bracelet', 'variants': {'edges': [{'node': {'id': 'gid://shopify/ProductVariant/42360783994946', 'sku': 'FG-0000704', 'inventoryItem': {'id': 'gid://shopify/InventoryItem/44461150076994'}, 'selectedOptions': [{'name': 'Title', 'value': 'Default Title'}]}}]}}, 'userErrors': []}}}
2025-08-03 13:11:17,653 - sync_service - INFO - API log added to SAP: shopify - /admin/api/graphql_local - success
2025-08-03 13:11:17,655 - sync_service - INFO - Successfully created product in store local
2025-08-03 13:11:17,656 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'U_SHOPIFY_MAPPING', 'request': {'method': 'POST', 'url': 'https://10.0.0.100:50000/b1s/v1/U_SHOPIFY_MAPPING', 'data': {'Code': '7522695282754', 'Name': '7522695282754', 'U_Shopify_Type': 'product', 'U_SAP_Code': 'FG-0000704', 'U_Shopify_Store': 'local', 'U_SAP_Type': 'item', 'U_CreateDate': '20250803'}, 'params': None}, 'response': None, 'status': None}
2025-08-03 13:11:19,209 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'U_SHOPIFY_MAPPING', 'request': None, 'response': {'odata.metadata': 'https://10.0.0.100:50000/b1s/v1/$metadata#U_SHOPIFY_MAPPING/@Element', 'Code': '7522695282754', 'Name': '7522695282754', 'U_SAP_Code': 'FG-0000704', 'U_SAP_Type': 'item', 'U_Shopify_Type': 'product', 'U_Shopify_Store': 'local', 'U_CreateDate': None}, 'status': 'success'}
2025-08-03 13:11:19,211 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'U_SHOPIFY_MAPPING', 'request': {'method': 'POST', 'url': 'https://10.0.0.100:50000/b1s/v1/U_SHOPIFY_MAPPING', 'data': {'Code': '42360783994946', 'Name': '42360783994946', 'U_Shopify_Type': 'variant', 'U_SAP_Code': 'FG-0000704', 'U_Shopify_Store': 'local', 'U_SAP_Type': 'item', 'U_CreateDate': '20250803'}, 'params': None}, 'response': None, 'status': None}
2025-08-03 13:11:20,724 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'U_SHOPIFY_MAPPING', 'request': None, 'response': {'odata.metadata': 'https://10.0.0.100:50000/b1s/v1/$metadata#U_SHOPIFY_MAPPING/@Element', 'Code': '42360783994946', 'Name': '42360783994946', 'U_SAP_Code': 'FG-0000704', 'U_SAP_Type': 'item', 'U_Shopify_Type': 'variant', 'U_Shopify_Store': 'local', 'U_CreateDate': None}, 'status': 'success'}
2025-08-03 13:11:20,726 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'U_SHOPIFY_MAPPING', 'request': {'method': 'POST', 'url': 'https://10.0.0.100:50000/b1s/v1/U_SHOPIFY_MAPPING', 'data': {'Code': '44461150076994', 'Name': '44461150076994', 'U_Shopify_Type': 'variant_inventory', 'U_SAP_Code': 'FG-0000704', 'U_Shopify_Store': 'local', 'U_SAP_Type': 'item', 'U_CreateDate': '20250803'}, 'params': None}, 'response': None, 'status': None}
2025-08-03 13:11:22,349 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'U_SHOPIFY_MAPPING', 'request': None, 'response': {'odata.metadata': 'https://10.0.0.100:50000/b1s/v1/$metadata#U_SHOPIFY_MAPPING/@Element', 'Code': '44461150076994', 'Name': '44461150076994', 'U_SAP_Code': 'FG-0000704', 'U_SAP_Type': 'item', 'U_Shopify_Type': 'variant_inventory', 'U_Shopify_Store': 'local', 'U_CreateDate': None}, 'status': 'success'}
2025-08-03 13:11:22,858 - sync_service - INFO - Processing product group: ('FG-0000708', 'local') with 1 items for store local
2025-08-03 13:11:22,859 - sync_service - INFO - API Call: {'service': 'shopify', 'endpoint': 'graphql_local', 'request': {'query': '\n        query GetProductByHandle($handle: String!) {\n            productByHandle(handle: $handle) {\n                id\n                title\n                handle\n                description\n                variants(first: 50) {\n                    edges {\n                        node {\n                            id\n                            sku\n                            price\n                            inventoryItem {\n                                id\n                            }\n                            selectedOptions {\n                                name\n                                value\n                            }\n                        }\n                    }\n                }\n            }\n        }\n        ', 'variables': {'handle': 'default'}}, 'response': None, 'status': None}
2025-08-03 13:11:32,870 - sync_service - ERROR - GraphQL query error for store local: 
2025-08-03 13:11:32,871 - sync_service - INFO - Product None doesn't exist in store local, creating new product
2025-08-03 13:11:34,480 - sync_service - INFO - API log added to SAP: shopify - /admin/api/graphql_local - success
2025-08-03 13:11:34,481 - sync_service - INFO - API Call: {'service': 'shopify', 'endpoint': 'graphql_local', 'request': {'query': '\n        mutation productCreate($input: ProductInput!) {\n            productCreate(input: $input) {\n                product {\n                    id\n                    title\n                    handle\n                    variants(first: 50) {\n                        edges {\n                            node {\n                                id\n                                sku\n                                inventoryItem {\n                                    id\n                                }\n                                selectedOptions {\n                                    name\n                                    value\n                                }\n                            }\n                        }\n                    }\n                }\n                userErrors {\n                    field\n                    message\n                }\n            }\n        }\n        ', 'variables': {'input': {'title': 'Morsi Socks', 'descriptionHtml': '', 'vendor': '', 'productType': 'Default', 'status': 'DRAFT', 'tags': [], 'variants': [{'sku': 'FG-0000708', 'price': '200.0', 'inventoryPolicy': 'DENY', 'inventoryManagement': 'SHOPIFY', 'weight': 0.0, 'weightUnit': 'KILOGRAMS', 'taxable': False}], 'seo': {'title': 'Morsi Socks', 'description': ''}}}}, 'response': None, 'status': None}
2025-08-03 13:11:35,305 - sync_service - INFO - API Call: {'service': 'shopify', 'endpoint': 'graphql_local', 'request': None, 'response': {'productCreate': {'product': {'id': 'gid://shopify/Product/7522695512130', 'title': 'Morsi Socks', 'handle': 'morsi-socks', 'variants': {'edges': [{'node': {'id': 'gid://shopify/ProductVariant/42360784388162', 'sku': 'FG-0000708', 'inventoryItem': {'id': 'gid://shopify/InventoryItem/44461150470210'}, 'selectedOptions': [{'name': 'Title', 'value': 'Default Title'}]}}]}}, 'userErrors': []}}, 'status': 'success'}
2025-08-03 13:11:35,306 - sync_service - ERROR - Shopify full response for store local: {'msg': 'success', 'data': {'productCreate': {'product': {'id': 'gid://shopify/Product/7522695512130', 'title': 'Morsi Socks', 'handle': 'morsi-socks', 'variants': {'edges': [{'node': {'id': 'gid://shopify/ProductVariant/42360784388162', 'sku': 'FG-0000708', 'inventoryItem': {'id': 'gid://shopify/InventoryItem/44461150470210'}, 'selectedOptions': [{'name': 'Title', 'value': 'Default Title'}]}}]}}, 'userErrors': []}}}
2025-08-03 13:11:36,758 - sync_service - INFO - API log added to SAP: shopify - /admin/api/graphql_local - success
2025-08-03 13:11:36,760 - sync_service - INFO - Successfully created product in store local
2025-08-03 13:11:36,762 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'U_SHOPIFY_MAPPING', 'request': {'method': 'POST', 'url': 'https://10.0.0.100:50000/b1s/v1/U_SHOPIFY_MAPPING', 'data': {'Code': '7522695512130', 'Name': '7522695512130', 'U_Shopify_Type': 'product', 'U_SAP_Code': 'FG-0000708', 'U_Shopify_Store': 'local', 'U_SAP_Type': 'item', 'U_CreateDate': '20250803'}, 'params': None}, 'response': None, 'status': None}
2025-08-03 13:11:38,340 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'U_SHOPIFY_MAPPING', 'request': None, 'response': {'odata.metadata': 'https://10.0.0.100:50000/b1s/v1/$metadata#U_SHOPIFY_MAPPING/@Element', 'Code': '7522695512130', 'Name': '7522695512130', 'U_SAP_Code': 'FG-0000708', 'U_SAP_Type': 'item', 'U_Shopify_Type': 'product', 'U_Shopify_Store': 'local', 'U_CreateDate': None}, 'status': 'success'}
2025-08-03 13:11:38,342 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'U_SHOPIFY_MAPPING', 'request': {'method': 'POST', 'url': 'https://10.0.0.100:50000/b1s/v1/U_SHOPIFY_MAPPING', 'data': {'Code': '42360784388162', 'Name': '42360784388162', 'U_Shopify_Type': 'variant', 'U_SAP_Code': 'FG-0000708', 'U_Shopify_Store': 'local', 'U_SAP_Type': 'item', 'U_CreateDate': '20250803'}, 'params': None}, 'response': None, 'status': None}
2025-08-03 13:11:39,850 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'U_SHOPIFY_MAPPING', 'request': None, 'response': {'odata.metadata': 'https://10.0.0.100:50000/b1s/v1/$metadata#U_SHOPIFY_MAPPING/@Element', 'Code': '42360784388162', 'Name': '42360784388162', 'U_SAP_Code': 'FG-0000708', 'U_SAP_Type': 'item', 'U_Shopify_Type': 'variant', 'U_Shopify_Store': 'local', 'U_CreateDate': None}, 'status': 'success'}
2025-08-03 13:11:39,854 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'U_SHOPIFY_MAPPING', 'request': {'method': 'POST', 'url': 'https://10.0.0.100:50000/b1s/v1/U_SHOPIFY_MAPPING', 'data': {'Code': '44461150470210', 'Name': '44461150470210', 'U_Shopify_Type': 'variant_inventory', 'U_SAP_Code': 'FG-0000708', 'U_Shopify_Store': 'local', 'U_SAP_Type': 'item', 'U_CreateDate': '20250803'}, 'params': None}, 'response': None, 'status': None}
2025-08-03 13:11:41,233 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'U_SHOPIFY_MAPPING', 'request': None, 'response': {'odata.metadata': 'https://10.0.0.100:50000/b1s/v1/$metadata#U_SHOPIFY_MAPPING/@Element', 'Code': '44461150470210', 'Name': '44461150470210', 'U_SAP_Code': 'FG-0000708', 'U_SAP_Type': 'item', 'U_Shopify_Type': 'variant_inventory', 'U_Shopify_Store': 'local', 'U_CreateDate': None}, 'status': 'success'}
2025-08-03 13:11:41,736 - sync_service - INFO - Processing product group: ('FG-0000711', 'local') with 1 items for store local
2025-08-03 13:11:41,741 - sync_service - INFO - API Call: {'service': 'shopify', 'endpoint': 'graphql_local', 'request': {'query': '\n        query GetProductByHandle($handle: String!) {\n            productByHandle(handle: $handle) {\n                id\n                title\n                handle\n                description\n                variants(first: 50) {\n                    edges {\n                        node {\n                            id\n                            sku\n                            price\n                            inventoryItem {\n                                id\n                            }\n                            selectedOptions {\n                                name\n                                value\n                            }\n                        }\n                    }\n                }\n            }\n        }\n        ', 'variables': {'handle': 'default'}}, 'response': None, 'status': None}
2025-08-03 13:11:51,755 - sync_service - ERROR - GraphQL query error for store local: 
2025-08-03 13:11:51,758 - sync_service - INFO - Product None doesn't exist in store local, creating new product
2025-08-03 13:11:53,234 - sync_service - INFO - API log added to SAP: shopify - /admin/api/graphql_local - success
2025-08-03 13:11:53,235 - sync_service - INFO - API Call: {'service': 'shopify', 'endpoint': 'graphql_local', 'request': {'query': '\n        mutation productCreate($input: ProductInput!) {\n            productCreate(input: $input) {\n                product {\n                    id\n                    title\n                    handle\n                    variants(first: 50) {\n                        edges {\n                            node {\n                                id\n                                sku\n                                inventoryItem {\n                                    id\n                                }\n                                selectedOptions {\n                                    name\n                                    value\n                                }\n                            }\n                        }\n                    }\n                }\n                userErrors {\n                    field\n                    message\n                }\n            }\n        }\n        ', 'variables': {'input': {'title': 'Morsi Keyboard', 'descriptionHtml': '', 'vendor': '', 'productType': 'Default', 'status': 'DRAFT', 'tags': [], 'variants': [{'sku': 'FG-0000711', 'price': '1000.0', 'inventoryPolicy': 'DENY', 'inventoryManagement': 'SHOPIFY', 'weight': 0.0, 'weightUnit': 'KILOGRAMS', 'taxable': False}], 'seo': {'title': 'Morsi Keyboard', 'description': ''}}}}, 'response': None, 'status': None}
2025-08-03 13:11:54,001 - sync_service - INFO - API Call: {'service': 'shopify', 'endpoint': 'graphql_local', 'request': None, 'response': {'productCreate': {'product': {'id': 'gid://shopify/Product/7522695708738', 'title': 'Morsi Keyboard', 'handle': 'morsi-keyboard', 'variants': {'edges': [{'node': {'id': 'gid://shopify/ProductVariant/42360784879682', 'sku': 'FG-0000711', 'inventoryItem': {'id': 'gid://shopify/InventoryItem/44461150961730'}, 'selectedOptions': [{'name': 'Title', 'value': 'Default Title'}]}}]}}, 'userErrors': []}}, 'status': 'success'}
2025-08-03 13:11:54,002 - sync_service - ERROR - Shopify full response for store local: {'msg': 'success', 'data': {'productCreate': {'product': {'id': 'gid://shopify/Product/7522695708738', 'title': 'Morsi Keyboard', 'handle': 'morsi-keyboard', 'variants': {'edges': [{'node': {'id': 'gid://shopify/ProductVariant/42360784879682', 'sku': 'FG-0000711', 'inventoryItem': {'id': 'gid://shopify/InventoryItem/44461150961730'}, 'selectedOptions': [{'name': 'Title', 'value': 'Default Title'}]}}]}}, 'userErrors': []}}}
2025-08-03 13:11:55,349 - sync_service - INFO - API log added to SAP: shopify - /admin/api/graphql_local - success
2025-08-03 13:11:55,350 - sync_service - INFO - Successfully created product in store local
2025-08-03 13:11:55,351 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'U_SHOPIFY_MAPPING', 'request': {'method': 'POST', 'url': 'https://10.0.0.100:50000/b1s/v1/U_SHOPIFY_MAPPING', 'data': {'Code': '7522695708738', 'Name': '7522695708738', 'U_Shopify_Type': 'product', 'U_SAP_Code': 'FG-0000711', 'U_Shopify_Store': 'local', 'U_SAP_Type': 'item', 'U_CreateDate': '20250803'}, 'params': None}, 'response': None, 'status': None}
2025-08-03 13:11:56,329 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'U_SHOPIFY_MAPPING', 'request': None, 'response': {'odata.metadata': 'https://10.0.0.100:50000/b1s/v1/$metadata#U_SHOPIFY_MAPPING/@Element', 'Code': '7522695708738', 'Name': '7522695708738', 'U_SAP_Code': 'FG-0000711', 'U_SAP_Type': 'item', 'U_Shopify_Type': 'product', 'U_Shopify_Store': 'local', 'U_CreateDate': None}, 'status': 'success'}
2025-08-03 13:11:56,331 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'U_SHOPIFY_MAPPING', 'request': {'method': 'POST', 'url': 'https://10.0.0.100:50000/b1s/v1/U_SHOPIFY_MAPPING', 'data': {'Code': '42360784879682', 'Name': '42360784879682', 'U_Shopify_Type': 'variant', 'U_SAP_Code': 'FG-0000711', 'U_Shopify_Store': 'local', 'U_SAP_Type': 'item', 'U_CreateDate': '20250803'}, 'params': None}, 'response': None, 'status': None}
2025-08-03 13:11:57,385 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'U_SHOPIFY_MAPPING', 'request': None, 'response': {'odata.metadata': 'https://10.0.0.100:50000/b1s/v1/$metadata#U_SHOPIFY_MAPPING/@Element', 'Code': '42360784879682', 'Name': '42360784879682', 'U_SAP_Code': 'FG-0000711', 'U_SAP_Type': 'item', 'U_Shopify_Type': 'variant', 'U_Shopify_Store': 'local', 'U_CreateDate': None}, 'status': 'success'}
2025-08-03 13:11:57,388 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'U_SHOPIFY_MAPPING', 'request': {'method': 'POST', 'url': 'https://10.0.0.100:50000/b1s/v1/U_SHOPIFY_MAPPING', 'data': {'Code': '44461150961730', 'Name': '44461150961730', 'U_Shopify_Type': 'variant_inventory', 'U_SAP_Code': 'FG-0000711', 'U_Shopify_Store': 'local', 'U_SAP_Type': 'item', 'U_CreateDate': '20250803'}, 'params': None}, 'response': None, 'status': None}
2025-08-03 13:11:57,657 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'U_SHOPIFY_MAPPING', 'request': None, 'response': {'odata.metadata': 'https://10.0.0.100:50000/b1s/v1/$metadata#U_SHOPIFY_MAPPING/@Element', 'Code': '44461150961730', 'Name': '44461150961730', 'U_SAP_Code': 'FG-0000711', 'U_SAP_Type': 'item', 'U_Shopify_Type': 'variant_inventory', 'U_Shopify_Store': 'local', 'U_CreateDate': None}, 'status': 'success'}
2025-08-03 13:11:58,163 - sync_service - INFO - Processing product group: ('Morsi Laptop', 'local') with 2 items for store local
2025-08-03 13:11:58,165 - sync_service - INFO - API Call: {'service': 'shopify', 'endpoint': 'graphql_local', 'request': {'query': '\n        query GetProductByHandle($handle: String!) {\n            productByHandle(handle: $handle) {\n                id\n                title\n                handle\n                description\n                variants(first: 50) {\n                    edges {\n                        node {\n                            id\n                            sku\n                            price\n                            inventoryItem {\n                                id\n                            }\n                            selectedOptions {\n                                name\n                                value\n                            }\n                        }\n                    }\n                }\n            }\n        }\n        ', 'variables': {'handle': 'morsi-laptop'}}, 'response': None, 'status': None}
2025-08-03 13:12:04,762 - sync_service - INFO - API Call: {'service': 'shopify', 'endpoint': 'graphql_local', 'request': None, 'response': {'productByHandle': None}, 'status': 'success'}
2025-08-03 13:12:04,766 - sync_service - INFO - Product Morsi Laptop doesn't exist in store local, creating new product
2025-08-03 13:12:05,817 - sync_service - INFO - API log added to SAP: shopify - /admin/api/graphql_local - success
2025-08-03 13:12:05,822 - sync_service - INFO - API Call: {'service': 'shopify', 'endpoint': 'graphql_local', 'request': {'query': '\n        mutation productCreate($input: ProductInput!) {\n            productCreate(input: $input) {\n                product {\n                    id\n                    title\n                    handle\n                    variants(first: 50) {\n                        edges {\n                            node {\n                                id\n                                sku\n                                inventoryItem {\n                                    id\n                                }\n                                selectedOptions {\n                                    name\n                                    value\n                                }\n                            }\n                        }\n                    }\n                }\n                userErrors {\n                    field\n                    message\n                }\n            }\n        }\n        ', 'variables': {'input': {'title': 'Morsi Laptop', 'status': 'DRAFT', 'options': [{'name': 'Color', 'values': ['Gray', 'Black']}], 'variants': [{'options': ['Black'], 'sku': 'FG-0000709', 'price': '1000.0', 'inventoryManagement': 'SHOPIFY', 'inventoryPolicy': 'DENY', 'taxable': False}, {'options': ['Gray'], 'sku': 'FG-0000710', 'price': '1000.0', 'inventoryManagement': 'SHOPIFY', 'inventoryPolicy': 'DENY', 'taxable': False}]}}}, 'response': None, 'status': None}
2025-08-03 13:12:06,307 - sync_service - ERROR - GraphQL query error for store local: {'message': 'Variable $input of type ProductInput! was provided invalid value for options.0 (Could not coerce value {name:"Color",values:["Gray","Black"]} to String)', 'locations': [{'line': 1, 'column': 24}], 'extensions': {'value': {'title': 'Morsi Laptop', 'status': 'DRAFT', 'options': [{'name': 'Color', 'values': ['Gray', 'Black']}], 'variants': [{'options': ['Black'], 'sku': 'FG-0000709', 'price': '1000.0', 'inventoryManagement': 'SHOPIFY', 'inventoryPolicy': 'DENY', 'taxable': False}, {'options': ['Gray'], 'sku': 'FG-0000710', 'price': '1000.0', 'inventoryManagement': 'SHOPIFY', 'inventoryPolicy': 'DENY', 'taxable': False}]}, 'problems': [{'path': ['options', 0], 'explanation': 'Could not coerce value {name:"Color",values:["Gray","Black"]} to String'}]}}
GraphQL Errors: [
  {
    "message": "Variable $input of type ProductInput! was provided invalid value for options.0 (Could not coerce value {name:\"Color\",values:[\"Gray\",\"Black\"]} to String)",
    "locations": [
      {
        "line": 1,
        "column": 24
      }
    ],
    "extensions": {
      "value": {
        "title": "Morsi Laptop",
        "status": "DRAFT",
        "options": [
          {
            "name": "Color",
            "values": [
              "Gray",
              "Black"
            ]
          }
        ],
        "variants": [
          {
            "options": [
              "Black"
            ],
            "sku": "FG-0000709",
            "price": "1000.0",
            "inventoryManagement": "SHOPIFY",
            "inventoryPolicy": "DENY",
            "taxable": false
          },
          {
            "options": [
              "Gray"
            ],
            "sku": "FG-0000710",
            "price": "1000.0",
            "inventoryManagement": "SHOPIFY",
            "inventoryPolicy": "DENY",
            "taxable": false
          }
        ]
      },
      "problems": [
        {
          "path": [
            "options",
            0
          ],
          "explanation": "Could not coerce value {name:\"Color\",values:[\"Gray\",\"Black\"]} to String"
        }
      ]
    }
  }
]
2025-08-03 13:12:06,588 - sync_service - INFO - API log added to SAP: shopify - /admin/api/graphql_local - failure
2025-08-03 13:12:06,589 - sync_service - ERROR - Shopify full response for store local: {'msg': 'failure', 'error': 'GraphQL query error for store local: {\'message\': \'Variable $input of type ProductInput! was provided invalid value for options.0 (Could not coerce value {name:"Color",values:["Gray","Black"]} to String)\', \'locations\': [{\'line\': 1, \'column\': 24}], \'extensions\': {\'value\': {\'title\': \'Morsi Laptop\', \'status\': \'DRAFT\', \'options\': [{\'name\': \'Color\', \'values\': [\'Gray\', \'Black\']}], \'variants\': [{\'options\': [\'Black\'], \'sku\': \'FG-0000709\', \'price\': \'1000.0\', \'inventoryManagement\': \'SHOPIFY\', \'inventoryPolicy\': \'DENY\', \'taxable\': False}, {\'options\': [\'Gray\'], \'sku\': \'FG-0000710\', \'price\': \'1000.0\', \'inventoryManagement\': \'SHOPIFY\', \'inventoryPolicy\': \'DENY\', \'taxable\': False}]}, \'problems\': [{\'path\': [\'options\', 0], \'explanation\': \'Could not coerce value {name:"Color",values:["Gray","Black"]} to String\'}]}}\nGraphQL Errors: [\n  {\n    "message": "Variable $input of type ProductInput! was provided invalid value for options.0 (Could not coerce value {name:\\"Color\\",values:[\\"Gray\\",\\"Black\\"]} to String)",\n    "locations": [\n      {\n        "line": 1,\n        "column": 24\n      }\n    ],\n    "extensions": {\n      "value": {\n        "title": "Morsi Laptop",\n        "status": "DRAFT",\n        "options": [\n          {\n            "name": "Color",\n            "values": [\n              "Gray",\n              "Black"\n            ]\n          }\n        ],\n        "variants": [\n          {\n            "options": [\n              "Black"\n            ],\n            "sku": "FG-0000709",\n            "price": "1000.0",\n            "inventoryManagement": "SHOPIFY",\n            "inventoryPolicy": "DENY",\n            "taxable": false\n          },\n          {\n            "options": [\n              "Gray"\n            ],\n            "sku": "FG-0000710",\n            "price": "1000.0",\n            "inventoryManagement": "SHOPIFY",\n            "inventoryPolicy": "DENY",\n            "taxable": false\n          }\n        ]\n      },\n      "problems": [\n        {\n          "path": [\n            "options",\n            0\n          ],\n          "explanation": "Could not coerce value {name:\\"Color\\",values:[\\"Gray\\",\\"Black\\"]} to String"\n        }\n      ]\n    }\n  }\n]'}
2025-08-03 13:12:06,868 - sync_service - INFO - API log added to SAP: shopify - /admin/api/graphql_local - failure
2025-08-03 13:12:06,875 - sync_service - ERROR - Failed to create product in store local: GraphQL query error for store local: {'message': 'Variable $input of type ProductInput! was provided invalid value for options.0 (Could not coerce value {name:"Color",values:["Gray","Black"]} to String)', 'locations': [{'line': 1, 'column': 24}], 'extensions': {'value': {'title': 'Morsi Laptop', 'status': 'DRAFT', 'options': [{'name': 'Color', 'values': ['Gray', 'Black']}], 'variants': [{'options': ['Black'], 'sku': 'FG-0000709', 'price': '1000.0', 'inventoryManagement': 'SHOPIFY', 'inventoryPolicy': 'DENY', 'taxable': False}, {'options': ['Gray'], 'sku': 'FG-0000710', 'price': '1000.0', 'inventoryManagement': 'SHOPIFY', 'inventoryPolicy': 'DENY', 'taxable': False}]}, 'problems': [{'path': ['options', 0], 'explanation': 'Could not coerce value {name:"Color",values:["Gray","Black"]} to String'}]}}
GraphQL Errors: [
  {
    "message": "Variable $input of type ProductInput! was provided invalid value for options.0 (Could not coerce value {name:\"Color\",values:[\"Gray\",\"Black\"]} to String)",
    "locations": [
      {
        "line": 1,
        "column": 24
      }
    ],
    "extensions": {
      "value": {
        "title": "Morsi Laptop",
        "status": "DRAFT",
        "options": [
          {
            "name": "Color",
            "values": [
              "Gray",
              "Black"
            ]
          }
        ],
        "variants": [
          {
            "options": [
              "Black"
            ],
            "sku": "FG-0000709",
            "price": "1000.0",
            "inventoryManagement": "SHOPIFY",
            "inventoryPolicy": "DENY",
            "taxable": false
          },
          {
            "options": [
              "Gray"
            ],
            "sku": "FG-0000710",
            "price": "1000.0",
            "inventoryManagement": "SHOPIFY",
            "inventoryPolicy": "DENY",
            "taxable": false
          }
        ]
      },
      "problems": [
        {
          "path": [
            "options",
            0
          ],
          "explanation": "Could not coerce value {name:\"Color\",values:[\"Gray\",\"Black\"]} to String"
        }
      ]
    }
  }
]
2025-08-03 13:12:06,877 - sync_service - INFO - Processing product group: ('Morsi Necklace', 'local') with 3 items for store local
2025-08-03 13:12:06,878 - sync_service - INFO - API Call: {'service': 'shopify', 'endpoint': 'graphql_local', 'request': {'query': '\n        query GetProductByHandle($handle: String!) {\n            productByHandle(handle: $handle) {\n                id\n                title\n                handle\n                description\n                variants(first: 50) {\n                    edges {\n                        node {\n                            id\n                            sku\n                            price\n                            inventoryItem {\n                                id\n                            }\n                            selectedOptions {\n                                name\n                                value\n                            }\n                        }\n                    }\n                }\n            }\n        }\n        ', 'variables': {'handle': 'morsi-necklace'}}, 'response': None, 'status': None}
2025-08-03 13:12:07,336 - sync_service - INFO - API Call: {'service': 'shopify', 'endpoint': 'graphql_local', 'request': None, 'response': {'productByHandle': None}, 'status': 'success'}
2025-08-03 13:12:07,338 - sync_service - INFO - Product Morsi Necklace doesn't exist in store local, creating new product
2025-08-03 13:12:07,618 - sync_service - INFO - API log added to SAP: shopify - /admin/api/graphql_local - success
2025-08-03 13:12:07,618 - sync_service - INFO - API Call: {'service': 'shopify', 'endpoint': 'graphql_local', 'request': {'query': '\n        mutation productCreate($input: ProductInput!) {\n            productCreate(input: $input) {\n                product {\n                    id\n                    title\n                    handle\n                    variants(first: 50) {\n                        edges {\n                            node {\n                                id\n                                sku\n                                inventoryItem {\n                                    id\n                                }\n                                selectedOptions {\n                                    name\n                                    value\n                                }\n                            }\n                        }\n                    }\n                }\n                userErrors {\n                    field\n                    message\n                }\n            }\n        }\n        ', 'variables': {'input': {'title': 'Morsi Necklace', 'status': 'DRAFT', 'options': [{'name': 'Color', 'values': ['White', 'Green', 'Black']}], 'variants': [{'options': ['Black'], 'sku': 'FG-0000702', 'price': '2500.0', 'inventoryManagement': 'SHOPIFY', 'inventoryPolicy': 'DENY', 'taxable': False}, {'options': ['White'], 'sku': 'FG-0000703', 'price': '2500.0', 'inventoryManagement': 'SHOPIFY', 'inventoryPolicy': 'DENY', 'taxable': False}, {'options': ['Green'], 'sku': 'FG-0000705', 'price': '2500.0', 'inventoryManagement': 'SHOPIFY', 'inventoryPolicy': 'DENY', 'taxable': False}]}}}, 'response': None, 'status': None}
2025-08-03 13:12:08,066 - sync_service - ERROR - GraphQL query error for store local: {'message': 'Variable $input of type ProductInput! was provided invalid value for options.0 (Could not coerce value {name:"Color",values:["White","Green","Black"]} to String)', 'locations': [{'line': 1, 'column': 24}], 'extensions': {'value': {'title': 'Morsi Necklace', 'status': 'DRAFT', 'options': [{'name': 'Color', 'values': ['White', 'Green', 'Black']}], 'variants': [{'options': ['Black'], 'sku': 'FG-0000702', 'price': '2500.0', 'inventoryManagement': 'SHOPIFY', 'inventoryPolicy': 'DENY', 'taxable': False}, {'options': ['White'], 'sku': 'FG-0000703', 'price': '2500.0', 'inventoryManagement': 'SHOPIFY', 'inventoryPolicy': 'DENY', 'taxable': False}, {'options': ['Green'], 'sku': 'FG-0000705', 'price': '2500.0', 'inventoryManagement': 'SHOPIFY', 'inventoryPolicy': 'DENY', 'taxable': False}]}, 'problems': [{'path': ['options', 0], 'explanation': 'Could not coerce value {name:"Color",values:["White","Green","Black"]} to String'}]}}
GraphQL Errors: [
  {
    "message": "Variable $input of type ProductInput! was provided invalid value for options.0 (Could not coerce value {name:\"Color\",values:[\"White\",\"Green\",\"Black\"]} to String)",
    "locations": [
      {
        "line": 1,
        "column": 24
      }
    ],
    "extensions": {
      "value": {
        "title": "Morsi Necklace",
        "status": "DRAFT",
        "options": [
          {
            "name": "Color",
            "values": [
              "White",
              "Green",
              "Black"
            ]
          }
        ],
        "variants": [
          {
            "options": [
              "Black"
            ],
            "sku": "FG-0000702",
            "price": "2500.0",
            "inventoryManagement": "SHOPIFY",
            "inventoryPolicy": "DENY",
            "taxable": false
          },
          {
            "options": [
              "White"
            ],
            "sku": "FG-0000703",
            "price": "2500.0",
            "inventoryManagement": "SHOPIFY",
            "inventoryPolicy": "DENY",
            "taxable": false
          },
          {
            "options": [
              "Green"
            ],
            "sku": "FG-0000705",
            "price": "2500.0",
            "inventoryManagement": "SHOPIFY",
            "inventoryPolicy": "DENY",
            "taxable": false
          }
        ]
      },
      "problems": [
        {
          "path": [
            "options",
            0
          ],
          "explanation": "Could not coerce value {name:\"Color\",values:[\"White\",\"Green\",\"Black\"]} to String"
        }
      ]
    }
  }
]
2025-08-03 13:12:08,352 - sync_service - INFO - API log added to SAP: shopify - /admin/api/graphql_local - failure
2025-08-03 13:12:08,355 - sync_service - ERROR - Shopify full response for store local: {'msg': 'failure', 'error': 'GraphQL query error for store local: {\'message\': \'Variable $input of type ProductInput! was provided invalid value for options.0 (Could not coerce value {name:"Color",values:["White","Green","Black"]} to String)\', \'locations\': [{\'line\': 1, \'column\': 24}], \'extensions\': {\'value\': {\'title\': \'Morsi Necklace\', \'status\': \'DRAFT\', \'options\': [{\'name\': \'Color\', \'values\': [\'White\', \'Green\', \'Black\']}], \'variants\': [{\'options\': [\'Black\'], \'sku\': \'FG-0000702\', \'price\': \'2500.0\', \'inventoryManagement\': \'SHOPIFY\', \'inventoryPolicy\': \'DENY\', \'taxable\': False}, {\'options\': [\'White\'], \'sku\': \'FG-0000703\', \'price\': \'2500.0\', \'inventoryManagement\': \'SHOPIFY\', \'inventoryPolicy\': \'DENY\', \'taxable\': False}, {\'options\': [\'Green\'], \'sku\': \'FG-0000705\', \'price\': \'2500.0\', \'inventoryManagement\': \'SHOPIFY\', \'inventoryPolicy\': \'DENY\', \'taxable\': False}]}, \'problems\': [{\'path\': [\'options\', 0], \'explanation\': \'Could not coerce value {name:"Color",values:["White","Green","Black"]} to String\'}]}}\nGraphQL Errors: [\n  {\n    "message": "Variable $input of type ProductInput! was provided invalid value for options.0 (Could not coerce value {name:\\"Color\\",values:[\\"White\\",\\"Green\\",\\"Black\\"]} to String)",\n    "locations": [\n      {\n        "line": 1,\n        "column": 24\n      }\n    ],\n    "extensions": {\n      "value": {\n        "title": "Morsi Necklace",\n        "status": "DRAFT",\n        "options": [\n          {\n            "name": "Color",\n            "values": [\n              "White",\n              "Green",\n              "Black"\n            ]\n          }\n        ],\n        "variants": [\n          {\n            "options": [\n              "Black"\n            ],\n            "sku": "FG-0000702",\n            "price": "2500.0",\n            "inventoryManagement": "SHOPIFY",\n            "inventoryPolicy": "DENY",\n            "taxable": false\n          },\n          {\n            "options": [\n              "White"\n            ],\n            "sku": "FG-0000703",\n            "price": "2500.0",\n            "inventoryManagement": "SHOPIFY",\n            "inventoryPolicy": "DENY",\n            "taxable": false\n          },\n          {\n            "options": [\n              "Green"\n            ],\n            "sku": "FG-0000705",\n            "price": "2500.0",\n            "inventoryManagement": "SHOPIFY",\n            "inventoryPolicy": "DENY",\n            "taxable": false\n          }\n        ]\n      },\n      "problems": [\n        {\n          "path": [\n            "options",\n            0\n          ],\n          "explanation": "Could not coerce value {name:\\"Color\\",values:[\\"White\\",\\"Green\\",\\"Black\\"]} to String"\n        }\n      ]\n    }\n  }\n]'}
2025-08-03 13:12:09,053 - sync_service - INFO - API log added to SAP: shopify - /admin/api/graphql_local - failure
2025-08-03 13:12:09,055 - sync_service - ERROR - Failed to create product in store local: GraphQL query error for store local: {'message': 'Variable $input of type ProductInput! was provided invalid value for options.0 (Could not coerce value {name:"Color",values:["White","Green","Black"]} to String)', 'locations': [{'line': 1, 'column': 24}], 'extensions': {'value': {'title': 'Morsi Necklace', 'status': 'DRAFT', 'options': [{'name': 'Color', 'values': ['White', 'Green', 'Black']}], 'variants': [{'options': ['Black'], 'sku': 'FG-0000702', 'price': '2500.0', 'inventoryManagement': 'SHOPIFY', 'inventoryPolicy': 'DENY', 'taxable': False}, {'options': ['White'], 'sku': 'FG-0000703', 'price': '2500.0', 'inventoryManagement': 'SHOPIFY', 'inventoryPolicy': 'DENY', 'taxable': False}, {'options': ['Green'], 'sku': 'FG-0000705', 'price': '2500.0', 'inventoryManagement': 'SHOPIFY', 'inventoryPolicy': 'DENY', 'taxable': False}]}, 'problems': [{'path': ['options', 0], 'explanation': 'Could not coerce value {name:"Color",values:["White","Green","Black"]} to String'}]}}
GraphQL Errors: [
  {
    "message": "Variable $input of type ProductInput! was provided invalid value for options.0 (Could not coerce value {name:\"Color\",values:[\"White\",\"Green\",\"Black\"]} to String)",
    "locations": [
      {
        "line": 1,
        "column": 24
      }
    ],
    "extensions": {
      "value": {
        "title": "Morsi Necklace",
        "status": "DRAFT",
        "options": [
          {
            "name": "Color",
            "values": [
              "White",
              "Green",
              "Black"
            ]
          }
        ],
        "variants": [
          {
            "options": [
              "Black"
            ],
            "sku": "FG-0000702",
            "price": "2500.0",
            "inventoryManagement": "SHOPIFY",
            "inventoryPolicy": "DENY",
            "taxable": false
          },
          {
            "options": [
              "White"
            ],
            "sku": "FG-0000703",
            "price": "2500.0",
            "inventoryManagement": "SHOPIFY",
            "inventoryPolicy": "DENY",
            "taxable": false
          },
          {
            "options": [
              "Green"
            ],
            "sku": "FG-0000705",
            "price": "2500.0",
            "inventoryManagement": "SHOPIFY",
            "inventoryPolicy": "DENY",
            "taxable": false
          }
        ]
      },
      "problems": [
        {
          "path": [
            "options",
            0
          ],
          "explanation": "Could not coerce value {name:\"Color\",values:[\"White\",\"Green\",\"Black\"]} to String"
        }
      ]
    }
  }
]
2025-08-03 13:12:09,058 - sync_service - INFO - Processing product group: ('Morsi Shoes', 'local') with 2 items for store local
2025-08-03 13:12:09,058 - sync_service - INFO - API Call: {'service': 'shopify', 'endpoint': 'graphql_local', 'request': {'query': '\n        query GetProductByHandle($handle: String!) {\n            productByHandle(handle: $handle) {\n                id\n                title\n                handle\n                description\n                variants(first: 50) {\n                    edges {\n                        node {\n                            id\n                            sku\n                            price\n                            inventoryItem {\n                                id\n                            }\n                            selectedOptions {\n                                name\n                                value\n                            }\n                        }\n                    }\n                }\n            }\n        }\n        ', 'variables': {'handle': 'morsi-shoes'}}, 'response': None, 'status': None}
2025-08-03 13:12:09,562 - sync_service - INFO - API Call: {'service': 'shopify', 'endpoint': 'graphql_local', 'request': None, 'response': {'productByHandle': None}, 'status': 'success'}
2025-08-03 13:12:09,563 - sync_service - INFO - Product Morsi Shoes doesn't exist in store local, creating new product
2025-08-03 13:12:09,835 - sync_service - INFO - API log added to SAP: shopify - /admin/api/graphql_local - success
2025-08-03 13:12:09,836 - sync_service - INFO - API Call: {'service': 'shopify', 'endpoint': 'graphql_local', 'request': {'query': '\n        mutation productCreate($input: ProductInput!) {\n            productCreate(input: $input) {\n                product {\n                    id\n                    title\n                    handle\n                    variants(first: 50) {\n                        edges {\n                            node {\n                                id\n                                sku\n                                inventoryItem {\n                                    id\n                                }\n                                selectedOptions {\n                                    name\n                                    value\n                                }\n                            }\n                        }\n                    }\n                }\n                userErrors {\n                    field\n                    message\n                }\n            }\n        }\n        ', 'variables': {'input': {'title': 'Morsi Shoes', 'status': 'DRAFT', 'options': [{'name': 'Color', 'values': ['Beige', 'Green']}], 'variants': [{'options': ['Green'], 'sku': 'FG-0000706', 'price': '1000.0', 'inventoryManagement': 'SHOPIFY', 'inventoryPolicy': 'DENY', 'taxable': False}, {'options': ['Beige'], 'sku': 'FG-0000707', 'price': '1000.0', 'inventoryManagement': 'SHOPIFY', 'inventoryPolicy': 'DENY', 'taxable': False}]}}}, 'response': None, 'status': None}
2025-08-03 13:12:17,383 - sync_service - ERROR - GraphQL query error for store local: {'message': 'Variable $input of type ProductInput! was provided invalid value for options.0 (Could not coerce value {name:"Color",values:["Beige","Green"]} to String)', 'locations': [{'line': 1, 'column': 24}], 'extensions': {'value': {'title': 'Morsi Shoes', 'status': 'DRAFT', 'options': [{'name': 'Color', 'values': ['Beige', 'Green']}], 'variants': [{'options': ['Green'], 'sku': 'FG-0000706', 'price': '1000.0', 'inventoryManagement': 'SHOPIFY', 'inventoryPolicy': 'DENY', 'taxable': False}, {'options': ['Beige'], 'sku': 'FG-0000707', 'price': '1000.0', 'inventoryManagement': 'SHOPIFY', 'inventoryPolicy': 'DENY', 'taxable': False}]}, 'problems': [{'path': ['options', 0], 'explanation': 'Could not coerce value {name:"Color",values:["Beige","Green"]} to String'}]}}
GraphQL Errors: [
  {
    "message": "Variable $input of type ProductInput! was provided invalid value for options.0 (Could not coerce value {name:\"Color\",values:[\"Beige\",\"Green\"]} to String)",
    "locations": [
      {
        "line": 1,
        "column": 24
      }
    ],
    "extensions": {
      "value": {
        "title": "Morsi Shoes",
        "status": "DRAFT",
        "options": [
          {
            "name": "Color",
            "values": [
              "Beige",
              "Green"
            ]
          }
        ],
        "variants": [
          {
            "options": [
              "Green"
            ],
            "sku": "FG-0000706",
            "price": "1000.0",
            "inventoryManagement": "SHOPIFY",
            "inventoryPolicy": "DENY",
            "taxable": false
          },
          {
            "options": [
              "Beige"
            ],
            "sku": "FG-0000707",
            "price": "1000.0",
            "inventoryManagement": "SHOPIFY",
            "inventoryPolicy": "DENY",
            "taxable": false
          }
        ]
      },
      "problems": [
        {
          "path": [
            "options",
            0
          ],
          "explanation": "Could not coerce value {name:\"Color\",values:[\"Beige\",\"Green\"]} to String"
        }
      ]
    }
  }
]
2025-08-03 13:12:17,655 - sync_service - INFO - API log added to SAP: shopify - /admin/api/graphql_local - failure
2025-08-03 13:12:17,657 - sync_service - ERROR - Shopify full response for store local: {'msg': 'failure', 'error': 'GraphQL query error for store local: {\'message\': \'Variable $input of type ProductInput! was provided invalid value for options.0 (Could not coerce value {name:"Color",values:["Beige","Green"]} to String)\', \'locations\': [{\'line\': 1, \'column\': 24}], \'extensions\': {\'value\': {\'title\': \'Morsi Shoes\', \'status\': \'DRAFT\', \'options\': [{\'name\': \'Color\', \'values\': [\'Beige\', \'Green\']}], \'variants\': [{\'options\': [\'Green\'], \'sku\': \'FG-0000706\', \'price\': \'1000.0\', \'inventoryManagement\': \'SHOPIFY\', \'inventoryPolicy\': \'DENY\', \'taxable\': False}, {\'options\': [\'Beige\'], \'sku\': \'FG-0000707\', \'price\': \'1000.0\', \'inventoryManagement\': \'SHOPIFY\', \'inventoryPolicy\': \'DENY\', \'taxable\': False}]}, \'problems\': [{\'path\': [\'options\', 0], \'explanation\': \'Could not coerce value {name:"Color",values:["Beige","Green"]} to String\'}]}}\nGraphQL Errors: [\n  {\n    "message": "Variable $input of type ProductInput! was provided invalid value for options.0 (Could not coerce value {name:\\"Color\\",values:[\\"Beige\\",\\"Green\\"]} to String)",\n    "locations": [\n      {\n        "line": 1,\n        "column": 24\n      }\n    ],\n    "extensions": {\n      "value": {\n        "title": "Morsi Shoes",\n        "status": "DRAFT",\n        "options": [\n          {\n            "name": "Color",\n            "values": [\n              "Beige",\n              "Green"\n            ]\n          }\n        ],\n        "variants": [\n          {\n            "options": [\n              "Green"\n            ],\n            "sku": "FG-0000706",\n            "price": "1000.0",\n            "inventoryManagement": "SHOPIFY",\n            "inventoryPolicy": "DENY",\n            "taxable": false\n          },\n          {\n            "options": [\n              "Beige"\n            ],\n            "sku": "FG-0000707",\n            "price": "1000.0",\n            "inventoryManagement": "SHOPIFY",\n            "inventoryPolicy": "DENY",\n            "taxable": false\n          }\n        ]\n      },\n      "problems": [\n        {\n          "path": [\n            "options",\n            0\n          ],\n          "explanation": "Could not coerce value {name:\\"Color\\",values:[\\"Beige\\",\\"Green\\"]} to String"\n        }\n      ]\n    }\n  }\n]'}
2025-08-03 13:12:17,926 - sync_service - INFO - API log added to SAP: shopify - /admin/api/graphql_local - failure
2025-08-03 13:12:17,927 - sync_service - ERROR - Failed to create product in store local: GraphQL query error for store local: {'message': 'Variable $input of type ProductInput! was provided invalid value for options.0 (Could not coerce value {name:"Color",values:["Beige","Green"]} to String)', 'locations': [{'line': 1, 'column': 24}], 'extensions': {'value': {'title': 'Morsi Shoes', 'status': 'DRAFT', 'options': [{'name': 'Color', 'values': ['Beige', 'Green']}], 'variants': [{'options': ['Green'], 'sku': 'FG-0000706', 'price': '1000.0', 'inventoryManagement': 'SHOPIFY', 'inventoryPolicy': 'DENY', 'taxable': False}, {'options': ['Beige'], 'sku': 'FG-0000707', 'price': '1000.0', 'inventoryManagement': 'SHOPIFY', 'inventoryPolicy': 'DENY', 'taxable': False}]}, 'problems': [{'path': ['options', 0], 'explanation': 'Could not coerce value {name:"Color",values:["Beige","Green"]} to String'}]}}
GraphQL Errors: [
  {
    "message": "Variable $input of type ProductInput! was provided invalid value for options.0 (Could not coerce value {name:\"Color\",values:[\"Beige\",\"Green\"]} to String)",
    "locations": [
      {
        "line": 1,
        "column": 24
      }
    ],
    "extensions": {
      "value": {
        "title": "Morsi Shoes",
        "status": "DRAFT",
        "options": [
          {
            "name": "Color",
            "values": [
              "Beige",
              "Green"
            ]
          }
        ],
        "variants": [
          {
            "options": [
              "Green"
            ],
            "sku": "FG-0000706",
            "price": "1000.0",
            "inventoryManagement": "SHOPIFY",
            "inventoryPolicy": "DENY",
            "taxable": false
          },
          {
            "options": [
              "Beige"
            ],
            "sku": "FG-0000707",
            "price": "1000.0",
            "inventoryManagement": "SHOPIFY",
            "inventoryPolicy": "DENY",
            "taxable": false
          }
        ]
      },
      "problems": [
        {
          "path": [
            "options",
            0
          ],
          "explanation": "Could not coerce value {name:\"Color\",values:[\"Beige\",\"Green\"]} to String"
        }
      ]
    }
  }
]
2025-08-03 13:12:17,928 - sync_service - INFO - Sync Event: {'sync_type': 'multi_store_new_items_sap_to_shopify', 'items_processed': 3, 'success_count': 3, 'error_count': 3, 'details': None}
2025-08-03 13:12:17,939 - sync_service - INFO - Multi-store new items sync completed: 3 processed, 3 successful, 3 errors
2025-08-03 13:12:17,939 - sync_service - INFO - Starting stock change sync...
2025-08-03 13:12:17,941 - sync_service - INFO - Starting stock change sync using MASHURA_StockChangeB1SLQuery view
2025-08-03 13:12:17,941 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'view.svc/MASHURA_StockChangeB1SLQuery', 'request': {'method': 'GET', 'url': 'https://10.0.0.100:50000/b1s/v1/view.svc/MASHURA_StockChangeB1SLQuery', 'data': None, 'params': {'$top': 50}}, 'response': None, 'status': None}
2025-08-03 13:12:18,541 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'view.svc/MASHURA_StockChangeB1SLQuery', 'request': None, 'response': {'odata.metadata': 'https://10.0.0.100:50000/b1s/v1/view.svc/$metadata#MASHURA_StockChangeB1SLQuery', 'value': [{'ItemCode': 'FG-0000711', 'Variant_ID': '44461150961730', 'OnHand': 60.0, 'Available': 60.0, 'Location_ID': '68605345858', 'id__': 1}]}, 'status': 'success'}
2025-08-03 13:12:18,542 - sync_service - INFO - Updating inventory for item FG-0000711 (variant 44461150961730) at location 68605345858
2025-08-03 13:12:18,543 - sync_service - INFO - API Call: {'service': 'shopify', 'endpoint': 'rest_inventory_local', 'request': {'location_id': '68605345858', 'inventory_item_id': '44461150961730', 'available': 60}, 'response': None, 'status': None}
2025-08-03 13:12:19,101 - sync_service - INFO - API Call: {'service': 'shopify', 'endpoint': 'rest_inventory_local', 'request': None, 'response': {'inventory_level': {'inventory_item_id': 44461150961730, 'location_id': 68605345858, 'available': 60, 'updated_at': '2025-08-03T13:12:19+03:00', 'admin_graphql_api_id': 'gid://shopify/InventoryLevel/103109591106?inventory_item_id=44461150961730'}}, 'status': 'success'}
2025-08-03 13:12:19,863 - sync_service - INFO - API log added to SAP: shopify - inventory_levels - success
2025-08-03 13:12:19,976 - sync_service - INFO - Stock change sync completed: 1 processed, 1 successful, 0 errors
2025-08-03 13:13:34,789 - sync_service - INFO - Initialized Shopify client for store: Local Store (local)
2025-08-03 13:13:34,814 - sync_service - INFO - Starting all syncs...
2025-08-03 13:13:34,815 - sync_service - INFO - Starting new items sync...
2025-08-03 13:13:34,816 - sync_service - INFO - Starting multi-store new items sync from SAP to Shopify
2025-08-03 13:13:34,817 - sync_service - INFO - Fetching new items for store: local
2025-08-03 13:13:34,818 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'login', 'request': {'company': 'JudeBenHalim_Test', 'user': 'manager'}, 'response': None, 'status': None}
2025-08-03 13:13:35,573 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'login', 'request': None, 'response': {'status': 'success'}, 'status': 'success'}
2025-08-03 13:13:35,575 - sync_service - INFO - SAP login successful
2025-08-03 13:13:35,577 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': "view.svc/MASHURA_New_ItemsB1SLQuery?$filter=Shopify_Store eq 'local'&$orderby=MainProduct", 'request': {'method': 'GET', 'url': "https://10.0.0.100:50000/b1s/v1/view.svc/MASHURA_New_ItemsB1SLQuery?$filter=Shopify_Store eq 'local'&$orderby=MainProduct", 'data': None, 'params': None}, 'response': None, 'status': None}
2025-08-03 13:13:36,276 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': "view.svc/MASHURA_New_ItemsB1SLQuery?$filter=Shopify_Store eq 'local'&$orderby=MainProduct", 'request': None, 'response': {'odata.metadata': 'https://10.0.0.100:50000/b1s/v1/view.svc/$metadata#MASHURA_New_ItemsB1SLQuery', 'value': [{'itemcode': 'FG-0000709', 'ItemName': 'Morsi-Laptop-Black', 'MainProduct': 'Morsi Laptop', 'Color': 'Black', 'Price': 1000.0, 'Shopify_Store': 'local', 'Shopify_ProductCode': None, 'Status': 'new', 'id__': 1}, {'itemcode': 'FG-0000710', 'ItemName': 'Morsi-Laptop-Grey', 'MainProduct': 'Morsi Laptop', 'Color': 'Grey', 'Price': 1000.0, 'Shopify_Store': 'local', 'Shopify_ProductCode': None, 'Status': 'new', 'id__': 2}, {'itemcode': 'FG-0000702', 'ItemName': 'Morsi-Necklace-Black', 'MainProduct': 'Morsi Necklace', 'Color': 'Black', 'Price': 2500.0, 'Shopify_Store': 'local', 'Shopify_ProductCode': None, 'Status': 'new', 'id__': 3}, {'itemcode': 'FG-0000703', 'ItemName': 'Morsi-Necklace-White', 'MainProduct': 'Morsi Necklace', 'Color': 'White', 'Price': 2500.0, 'Shopify_Store': 'local', 'Shopify_ProductCode': None, 'Status': 'new', 'id__': 4}, {'itemcode': 'FG-0000705', 'ItemName': 'Morsi-Necklace-Green', 'MainProduct': 'Morsi Necklace', 'Color': 'Green', 'Price': 2500.0, 'Shopify_Store': 'local', 'Shopify_ProductCode': None, 'Status': 'new', 'id__': 5}, {'itemcode': 'FG-0000706', 'ItemName': 'Morsi-Shoes-Green', 'MainProduct': 'Morsi Shoes', 'Color': 'Green', 'Price': 1000.0, 'Shopify_Store': 'local', 'Shopify_ProductCode': None, 'Status': 'new', 'id__': 6}, {'itemcode': 'FG-0000707', 'ItemName': 'Morsi-Shoes-Beige', 'MainProduct': 'Morsi Shoes', 'Color': 'Beige', 'Price': 1000.0, 'Shopify_Store': 'local', 'Shopify_ProductCode': None, 'Status': 'new', 'id__': 7}]}, 'status': 'success'}
2025-08-03 13:13:36,277 - sync_service - INFO - Product group: ('Morsi Laptop', 'local') has 2 items
2025-08-03 13:13:36,278 - sync_service - INFO - Product group: ('Morsi Necklace', 'local') has 3 items
2025-08-03 13:13:36,279 - sync_service - INFO - Product group: ('Morsi Shoes', 'local') has 2 items
2025-08-03 13:13:36,280 - sync_service - INFO - Grouped 7 items into 3 product groups for store local
2025-08-03 13:13:36,281 - sync_service - INFO - Processing product group: ('Morsi Laptop', 'local') with 2 items for store local
2025-08-03 13:13:36,282 - sync_service - INFO - API Call: {'service': 'shopify', 'endpoint': 'graphql_local', 'request': {'query': '\n        query GetProductByHandle($handle: String!) {\n            productByHandle(handle: $handle) {\n                id\n                title\n                handle\n                description\n                variants(first: 50) {\n                    edges {\n                        node {\n                            id\n                            sku\n                            price\n                            inventoryItem {\n                                id\n                            }\n                            selectedOptions {\n                                name\n                                value\n                            }\n                        }\n                    }\n                }\n            }\n        }\n        ', 'variables': {'handle': 'morsi-laptop'}}, 'response': None, 'status': None}
2025-08-03 13:13:46,301 - sync_service - ERROR - GraphQL query error for store local: 
2025-08-03 13:13:46,303 - sync_service - INFO - Product Morsi Laptop doesn't exist in store local, creating new product
2025-08-03 13:13:47,061 - sync_service - INFO - SAP logging client login successful
2025-08-03 13:13:47,758 - sync_service - INFO - API log added to SAP: shopify - /admin/api/graphql_local - success
2025-08-03 13:13:47,759 - sync_service - INFO - API Call: {'service': 'shopify', 'endpoint': 'graphql_local', 'request': {'query': '\n        mutation productCreate($input: ProductInput!) {\n            productCreate(input: $input) {\n                product {\n                    id\n                    title\n                    handle\n                    variants(first: 50) {\n                        edges {\n                            node {\n                                id\n                                sku\n                                inventoryItem {\n                                    id\n                                }\n                                selectedOptions {\n                                    name\n                                    value\n                                }\n                            }\n                        }\n                    }\n                }\n                userErrors {\n                    field\n                    message\n                }\n            }\n        }\n        ', 'variables': {'input': {'title': 'Morsi Laptop', 'status': 'DRAFT', 'options': ['Color'], 'variants': [{'options': ['Black'], 'sku': 'FG-0000709', 'price': '1000.0', 'inventoryManagement': 'SHOPIFY', 'inventoryPolicy': 'DENY', 'taxable': False}, {'options': ['Gray'], 'sku': 'FG-0000710', 'price': '1000.0', 'inventoryManagement': 'SHOPIFY', 'inventoryPolicy': 'DENY', 'taxable': False}]}}}, 'response': None, 'status': None}
2025-08-03 13:13:48,608 - sync_service - INFO - API Call: {'service': 'shopify', 'endpoint': 'graphql_local', 'request': None, 'response': {'productCreate': {'product': {'id': 'gid://shopify/Product/7522696822850', 'title': 'Morsi Laptop', 'handle': 'morsi-laptop', 'variants': {'edges': [{'node': {'id': 'gid://shopify/ProductVariant/42360786812994', 'sku': 'FG-0000709', 'inventoryItem': {'id': 'gid://shopify/InventoryItem/44461152895042'}, 'selectedOptions': [{'name': 'Color', 'value': 'Black'}]}}, {'node': {'id': 'gid://shopify/ProductVariant/42360786845762', 'sku': 'FG-0000710', 'inventoryItem': {'id': 'gid://shopify/InventoryItem/44461152927810'}, 'selectedOptions': [{'name': 'Color', 'value': 'Gray'}]}}]}}, 'userErrors': []}}, 'status': 'success'}
2025-08-03 13:13:48,609 - sync_service - ERROR - Shopify full response for store local: {'msg': 'success', 'data': {'productCreate': {'product': {'id': 'gid://shopify/Product/7522696822850', 'title': 'Morsi Laptop', 'handle': 'morsi-laptop', 'variants': {'edges': [{'node': {'id': 'gid://shopify/ProductVariant/42360786812994', 'sku': 'FG-0000709', 'inventoryItem': {'id': 'gid://shopify/InventoryItem/44461152895042'}, 'selectedOptions': [{'name': 'Color', 'value': 'Black'}]}}, {'node': {'id': 'gid://shopify/ProductVariant/42360786845762', 'sku': 'FG-0000710', 'inventoryItem': {'id': 'gid://shopify/InventoryItem/44461152927810'}, 'selectedOptions': [{'name': 'Color', 'value': 'Gray'}]}}]}}, 'userErrors': []}}}
2025-08-03 13:13:49,328 - sync_service - INFO - API log added to SAP: shopify - /admin/api/graphql_local - success
2025-08-03 13:13:49,330 - sync_service - INFO - Successfully created product in store local
2025-08-03 13:13:49,332 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'U_SHOPIFY_MAPPING', 'request': {'method': 'POST', 'url': 'https://10.0.0.100:50000/b1s/v1/U_SHOPIFY_MAPPING', 'data': {'Code': '7522696822850', 'Name': '7522696822850', 'U_Shopify_Type': 'product', 'U_SAP_Code': 'Morsi Laptop', 'U_Shopify_Store': 'local', 'U_SAP_Type': 'item', 'U_CreateDate': '20250803'}, 'params': None}, 'response': None, 'status': None}
2025-08-03 13:13:50,629 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'U_SHOPIFY_MAPPING', 'request': None, 'response': {'odata.metadata': 'https://10.0.0.100:50000/b1s/v1/$metadata#U_SHOPIFY_MAPPING/@Element', 'Code': '7522696822850', 'Name': '7522696822850', 'U_SAP_Code': 'Morsi Laptop', 'U_SAP_Type': 'item', 'U_Shopify_Type': 'product', 'U_Shopify_Store': 'local', 'U_CreateDate': None}, 'status': 'success'}
2025-08-03 13:13:50,639 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'U_SHOPIFY_MAPPING', 'request': {'method': 'POST', 'url': 'https://10.0.0.100:50000/b1s/v1/U_SHOPIFY_MAPPING', 'data': {'Code': '42360786812994', 'Name': '42360786812994', 'U_Shopify_Type': 'variant', 'U_SAP_Code': 'FG-0000709', 'U_Shopify_Store': 'local', 'U_SAP_Type': 'item', 'U_CreateDate': '20250803'}, 'params': None}, 'response': None, 'status': None}
2025-08-03 13:13:51,393 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'U_SHOPIFY_MAPPING', 'request': None, 'response': {'odata.metadata': 'https://10.0.0.100:50000/b1s/v1/$metadata#U_SHOPIFY_MAPPING/@Element', 'Code': '42360786812994', 'Name': '42360786812994', 'U_SAP_Code': 'FG-0000709', 'U_SAP_Type': 'item', 'U_Shopify_Type': 'variant', 'U_Shopify_Store': 'local', 'U_CreateDate': None}, 'status': 'success'}
2025-08-03 13:13:51,397 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'U_SHOPIFY_MAPPING', 'request': {'method': 'POST', 'url': 'https://10.0.0.100:50000/b1s/v1/U_SHOPIFY_MAPPING', 'data': {'Code': '44461152895042', 'Name': '44461152895042', 'U_Shopify_Type': 'variant_inventory', 'U_SAP_Code': 'FG-0000709', 'U_Shopify_Store': 'local', 'U_SAP_Type': 'item', 'U_CreateDate': '20250803'}, 'params': None}, 'response': None, 'status': None}
2025-08-03 13:13:52,132 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'U_SHOPIFY_MAPPING', 'request': None, 'response': {'odata.metadata': 'https://10.0.0.100:50000/b1s/v1/$metadata#U_SHOPIFY_MAPPING/@Element', 'Code': '44461152895042', 'Name': '44461152895042', 'U_SAP_Code': 'FG-0000709', 'U_SAP_Type': 'item', 'U_Shopify_Type': 'variant_inventory', 'U_Shopify_Store': 'local', 'U_CreateDate': None}, 'status': 'success'}
2025-08-03 13:13:52,137 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'U_SHOPIFY_MAPPING', 'request': {'method': 'POST', 'url': 'https://10.0.0.100:50000/b1s/v1/U_SHOPIFY_MAPPING', 'data': {'Code': '42360786845762', 'Name': '42360786845762', 'U_Shopify_Type': 'variant', 'U_SAP_Code': 'FG-0000710', 'U_Shopify_Store': 'local', 'U_SAP_Type': 'item', 'U_CreateDate': '20250803'}, 'params': None}, 'response': None, 'status': None}
2025-08-03 13:13:52,442 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'U_SHOPIFY_MAPPING', 'request': None, 'response': {'odata.metadata': 'https://10.0.0.100:50000/b1s/v1/$metadata#U_SHOPIFY_MAPPING/@Element', 'Code': '42360786845762', 'Name': '42360786845762', 'U_SAP_Code': 'FG-0000710', 'U_SAP_Type': 'item', 'U_Shopify_Type': 'variant', 'U_Shopify_Store': 'local', 'U_CreateDate': None}, 'status': 'success'}
2025-08-03 13:13:52,446 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'U_SHOPIFY_MAPPING', 'request': {'method': 'POST', 'url': 'https://10.0.0.100:50000/b1s/v1/U_SHOPIFY_MAPPING', 'data': {'Code': '44461152927810', 'Name': '44461152927810', 'U_Shopify_Type': 'variant_inventory', 'U_SAP_Code': 'FG-0000710', 'U_Shopify_Store': 'local', 'U_SAP_Type': 'item', 'U_CreateDate': '20250803'}, 'params': None}, 'response': None, 'status': None}
2025-08-03 13:13:52,738 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'U_SHOPIFY_MAPPING', 'request': None, 'response': {'odata.metadata': 'https://10.0.0.100:50000/b1s/v1/$metadata#U_SHOPIFY_MAPPING/@Element', 'Code': '44461152927810', 'Name': '44461152927810', 'U_SAP_Code': 'FG-0000710', 'U_SAP_Type': 'item', 'U_Shopify_Type': 'variant_inventory', 'U_Shopify_Store': 'local', 'U_CreateDate': None}, 'status': 'success'}
2025-08-03 13:13:53,253 - sync_service - INFO - Processing product group: ('Morsi Necklace', 'local') with 3 items for store local
2025-08-03 13:13:53,256 - sync_service - INFO - API Call: {'service': 'shopify', 'endpoint': 'graphql_local', 'request': {'query': '\n        query GetProductByHandle($handle: String!) {\n            productByHandle(handle: $handle) {\n                id\n                title\n                handle\n                description\n                variants(first: 50) {\n                    edges {\n                        node {\n                            id\n                            sku\n                            price\n                            inventoryItem {\n                                id\n                            }\n                            selectedOptions {\n                                name\n                                value\n                            }\n                        }\n                    }\n                }\n            }\n        }\n        ', 'variables': {'handle': 'morsi-necklace'}}, 'response': None, 'status': None}
2025-08-03 13:13:53,770 - sync_service - INFO - API Call: {'service': 'shopify', 'endpoint': 'graphql_local', 'request': None, 'response': {'productByHandle': None}, 'status': 'success'}
2025-08-03 13:13:53,772 - sync_service - INFO - Product Morsi Necklace doesn't exist in store local, creating new product
2025-08-03 13:13:54,064 - sync_service - INFO - API log added to SAP: shopify - /admin/api/graphql_local - success
2025-08-03 13:13:54,066 - sync_service - INFO - API Call: {'service': 'shopify', 'endpoint': 'graphql_local', 'request': {'query': '\n        mutation productCreate($input: ProductInput!) {\n            productCreate(input: $input) {\n                product {\n                    id\n                    title\n                    handle\n                    variants(first: 50) {\n                        edges {\n                            node {\n                                id\n                                sku\n                                inventoryItem {\n                                    id\n                                }\n                                selectedOptions {\n                                    name\n                                    value\n                                }\n                            }\n                        }\n                    }\n                }\n                userErrors {\n                    field\n                    message\n                }\n            }\n        }\n        ', 'variables': {'input': {'title': 'Morsi Necklace', 'status': 'DRAFT', 'options': ['Color'], 'variants': [{'options': ['Black'], 'sku': 'FG-0000702', 'price': '2500.0', 'inventoryManagement': 'SHOPIFY', 'inventoryPolicy': 'DENY', 'taxable': False}, {'options': ['White'], 'sku': 'FG-0000703', 'price': '2500.0', 'inventoryManagement': 'SHOPIFY', 'inventoryPolicy': 'DENY', 'taxable': False}, {'options': ['Green'], 'sku': 'FG-0000705', 'price': '2500.0', 'inventoryManagement': 'SHOPIFY', 'inventoryPolicy': 'DENY', 'taxable': False}]}}}, 'response': None, 'status': None}
2025-08-03 13:13:54,951 - sync_service - INFO - API Call: {'service': 'shopify', 'endpoint': 'graphql_local', 'request': None, 'response': {'productCreate': {'product': {'id': 'gid://shopify/Product/7522696855618', 'title': 'Morsi Necklace', 'handle': 'morsi-necklace', 'variants': {'edges': [{'node': {'id': 'gid://shopify/ProductVariant/42360787042370', 'sku': 'FG-0000702', 'inventoryItem': {'id': 'gid://shopify/InventoryItem/44461153124418'}, 'selectedOptions': [{'name': 'Color', 'value': 'Black'}]}}, {'node': {'id': 'gid://shopify/ProductVariant/42360787075138', 'sku': 'FG-0000703', 'inventoryItem': {'id': 'gid://shopify/InventoryItem/44461153157186'}, 'selectedOptions': [{'name': 'Color', 'value': 'White'}]}}, {'node': {'id': 'gid://shopify/ProductVariant/42360787107906', 'sku': 'FG-0000705', 'inventoryItem': {'id': 'gid://shopify/InventoryItem/44461153189954'}, 'selectedOptions': [{'name': 'Color', 'value': 'Green'}]}}]}}, 'userErrors': []}}, 'status': 'success'}
2025-08-03 13:13:54,953 - sync_service - ERROR - Shopify full response for store local: {'msg': 'success', 'data': {'productCreate': {'product': {'id': 'gid://shopify/Product/7522696855618', 'title': 'Morsi Necklace', 'handle': 'morsi-necklace', 'variants': {'edges': [{'node': {'id': 'gid://shopify/ProductVariant/42360787042370', 'sku': 'FG-0000702', 'inventoryItem': {'id': 'gid://shopify/InventoryItem/44461153124418'}, 'selectedOptions': [{'name': 'Color', 'value': 'Black'}]}}, {'node': {'id': 'gid://shopify/ProductVariant/42360787075138', 'sku': 'FG-0000703', 'inventoryItem': {'id': 'gid://shopify/InventoryItem/44461153157186'}, 'selectedOptions': [{'name': 'Color', 'value': 'White'}]}}, {'node': {'id': 'gid://shopify/ProductVariant/42360787107906', 'sku': 'FG-0000705', 'inventoryItem': {'id': 'gid://shopify/InventoryItem/44461153189954'}, 'selectedOptions': [{'name': 'Color', 'value': 'Green'}]}}]}}, 'userErrors': []}}}
2025-08-03 13:13:55,244 - sync_service - INFO - API log added to SAP: shopify - /admin/api/graphql_local - success
2025-08-03 13:13:55,244 - sync_service - INFO - Successfully created product in store local
2025-08-03 13:13:55,245 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'U_SHOPIFY_MAPPING', 'request': {'method': 'POST', 'url': 'https://10.0.0.100:50000/b1s/v1/U_SHOPIFY_MAPPING', 'data': {'Code': '7522696855618', 'Name': '7522696855618', 'U_Shopify_Type': 'product', 'U_SAP_Code': 'Morsi Necklace', 'U_Shopify_Store': 'local', 'U_SAP_Type': 'item', 'U_CreateDate': '20250803'}, 'params': None}, 'response': None, 'status': None}
2025-08-03 13:13:55,924 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'U_SHOPIFY_MAPPING', 'request': None, 'response': {'odata.metadata': 'https://10.0.0.100:50000/b1s/v1/$metadata#U_SHOPIFY_MAPPING/@Element', 'Code': '7522696855618', 'Name': '7522696855618', 'U_SAP_Code': 'Morsi Necklace', 'U_SAP_Type': 'item', 'U_Shopify_Type': 'product', 'U_Shopify_Store': 'local', 'U_CreateDate': None}, 'status': 'success'}
2025-08-03 13:13:55,927 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'U_SHOPIFY_MAPPING', 'request': {'method': 'POST', 'url': 'https://10.0.0.100:50000/b1s/v1/U_SHOPIFY_MAPPING', 'data': {'Code': '42360787042370', 'Name': '42360787042370', 'U_Shopify_Type': 'variant', 'U_SAP_Code': 'FG-0000702', 'U_Shopify_Store': 'local', 'U_SAP_Type': 'item', 'U_CreateDate': '20250803'}, 'params': None}, 'response': None, 'status': None}
2025-08-03 13:13:56,253 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'U_SHOPIFY_MAPPING', 'request': None, 'response': {'odata.metadata': 'https://10.0.0.100:50000/b1s/v1/$metadata#U_SHOPIFY_MAPPING/@Element', 'Code': '42360787042370', 'Name': '42360787042370', 'U_SAP_Code': 'FG-0000702', 'U_SAP_Type': 'item', 'U_Shopify_Type': 'variant', 'U_Shopify_Store': 'local', 'U_CreateDate': None}, 'status': 'success'}
2025-08-03 13:13:56,258 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'U_SHOPIFY_MAPPING', 'request': {'method': 'POST', 'url': 'https://10.0.0.100:50000/b1s/v1/U_SHOPIFY_MAPPING', 'data': {'Code': '44461153124418', 'Name': '44461153124418', 'U_Shopify_Type': 'variant_inventory', 'U_SAP_Code': 'FG-0000702', 'U_Shopify_Store': 'local', 'U_SAP_Type': 'item', 'U_CreateDate': '20250803'}, 'params': None}, 'response': None, 'status': None}
2025-08-03 13:13:56,557 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'U_SHOPIFY_MAPPING', 'request': None, 'response': {'odata.metadata': 'https://10.0.0.100:50000/b1s/v1/$metadata#U_SHOPIFY_MAPPING/@Element', 'Code': '44461153124418', 'Name': '44461153124418', 'U_SAP_Code': 'FG-0000702', 'U_SAP_Type': 'item', 'U_Shopify_Type': 'variant_inventory', 'U_Shopify_Store': 'local', 'U_CreateDate': None}, 'status': 'success'}
2025-08-03 13:13:56,563 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'U_SHOPIFY_MAPPING', 'request': {'method': 'POST', 'url': 'https://10.0.0.100:50000/b1s/v1/U_SHOPIFY_MAPPING', 'data': {'Code': '42360787075138', 'Name': '42360787075138', 'U_Shopify_Type': 'variant', 'U_SAP_Code': 'FG-0000703', 'U_Shopify_Store': 'local', 'U_SAP_Type': 'item', 'U_CreateDate': '20250803'}, 'params': None}, 'response': None, 'status': None}
2025-08-03 13:13:56,874 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'U_SHOPIFY_MAPPING', 'request': None, 'response': {'odata.metadata': 'https://10.0.0.100:50000/b1s/v1/$metadata#U_SHOPIFY_MAPPING/@Element', 'Code': '42360787075138', 'Name': '42360787075138', 'U_SAP_Code': 'FG-0000703', 'U_SAP_Type': 'item', 'U_Shopify_Type': 'variant', 'U_Shopify_Store': 'local', 'U_CreateDate': None}, 'status': 'success'}
2025-08-03 13:13:56,878 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'U_SHOPIFY_MAPPING', 'request': {'method': 'POST', 'url': 'https://10.0.0.100:50000/b1s/v1/U_SHOPIFY_MAPPING', 'data': {'Code': '44461153157186', 'Name': '44461153157186', 'U_Shopify_Type': 'variant_inventory', 'U_SAP_Code': 'FG-0000703', 'U_Shopify_Store': 'local', 'U_SAP_Type': 'item', 'U_CreateDate': '20250803'}, 'params': None}, 'response': None, 'status': None}
2025-08-03 13:13:57,173 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'U_SHOPIFY_MAPPING', 'request': None, 'response': {'odata.metadata': 'https://10.0.0.100:50000/b1s/v1/$metadata#U_SHOPIFY_MAPPING/@Element', 'Code': '44461153157186', 'Name': '44461153157186', 'U_SAP_Code': 'FG-0000703', 'U_SAP_Type': 'item', 'U_Shopify_Type': 'variant_inventory', 'U_Shopify_Store': 'local', 'U_CreateDate': None}, 'status': 'success'}
2025-08-03 13:13:57,176 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'U_SHOPIFY_MAPPING', 'request': {'method': 'POST', 'url': 'https://10.0.0.100:50000/b1s/v1/U_SHOPIFY_MAPPING', 'data': {'Code': '42360787107906', 'Name': '42360787107906', 'U_Shopify_Type': 'variant', 'U_SAP_Code': 'FG-0000705', 'U_Shopify_Store': 'local', 'U_SAP_Type': 'item', 'U_CreateDate': '20250803'}, 'params': None}, 'response': None, 'status': None}
2025-08-03 13:13:57,469 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'U_SHOPIFY_MAPPING', 'request': None, 'response': {'odata.metadata': 'https://10.0.0.100:50000/b1s/v1/$metadata#U_SHOPIFY_MAPPING/@Element', 'Code': '42360787107906', 'Name': '42360787107906', 'U_SAP_Code': 'FG-0000705', 'U_SAP_Type': 'item', 'U_Shopify_Type': 'variant', 'U_Shopify_Store': 'local', 'U_CreateDate': None}, 'status': 'success'}
2025-08-03 13:13:57,472 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'U_SHOPIFY_MAPPING', 'request': {'method': 'POST', 'url': 'https://10.0.0.100:50000/b1s/v1/U_SHOPIFY_MAPPING', 'data': {'Code': '44461153189954', 'Name': '44461153189954', 'U_Shopify_Type': 'variant_inventory', 'U_SAP_Code': 'FG-0000705', 'U_Shopify_Store': 'local', 'U_SAP_Type': 'item', 'U_CreateDate': '20250803'}, 'params': None}, 'response': None, 'status': None}
2025-08-03 13:13:58,359 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'U_SHOPIFY_MAPPING', 'request': None, 'response': {'odata.metadata': 'https://10.0.0.100:50000/b1s/v1/$metadata#U_SHOPIFY_MAPPING/@Element', 'Code': '44461153189954', 'Name': '44461153189954', 'U_SAP_Code': 'FG-0000705', 'U_SAP_Type': 'item', 'U_Shopify_Type': 'variant_inventory', 'U_Shopify_Store': 'local', 'U_CreateDate': None}, 'status': 'success'}
2025-08-03 13:13:58,874 - sync_service - INFO - Processing product group: ('Morsi Shoes', 'local') with 2 items for store local
2025-08-03 13:13:58,876 - sync_service - INFO - API Call: {'service': 'shopify', 'endpoint': 'graphql_local', 'request': {'query': '\n        query GetProductByHandle($handle: String!) {\n            productByHandle(handle: $handle) {\n                id\n                title\n                handle\n                description\n                variants(first: 50) {\n                    edges {\n                        node {\n                            id\n                            sku\n                            price\n                            inventoryItem {\n                                id\n                            }\n                            selectedOptions {\n                                name\n                                value\n                            }\n                        }\n                    }\n                }\n            }\n        }\n        ', 'variables': {'handle': 'morsi-shoes'}}, 'response': None, 'status': None}
2025-08-03 13:14:04,858 - sync_service - INFO - API Call: {'service': 'shopify', 'endpoint': 'graphql_local', 'request': None, 'response': {'productByHandle': None}, 'status': 'success'}
2025-08-03 13:14:04,859 - sync_service - INFO - Product Morsi Shoes doesn't exist in store local, creating new product
2025-08-03 13:14:05,208 - sync_service - INFO - API log added to SAP: shopify - /admin/api/graphql_local - success
2025-08-03 13:14:05,209 - sync_service - INFO - API Call: {'service': 'shopify', 'endpoint': 'graphql_local', 'request': {'query': '\n        mutation productCreate($input: ProductInput!) {\n            productCreate(input: $input) {\n                product {\n                    id\n                    title\n                    handle\n                    variants(first: 50) {\n                        edges {\n                            node {\n                                id\n                                sku\n                                inventoryItem {\n                                    id\n                                }\n                                selectedOptions {\n                                    name\n                                    value\n                                }\n                            }\n                        }\n                    }\n                }\n                userErrors {\n                    field\n                    message\n                }\n            }\n        }\n        ', 'variables': {'input': {'title': 'Morsi Shoes', 'status': 'DRAFT', 'options': ['Color'], 'variants': [{'options': ['Green'], 'sku': 'FG-0000706', 'price': '1000.0', 'inventoryManagement': 'SHOPIFY', 'inventoryPolicy': 'DENY', 'taxable': False}, {'options': ['Beige'], 'sku': 'FG-0000707', 'price': '1000.0', 'inventoryManagement': 'SHOPIFY', 'inventoryPolicy': 'DENY', 'taxable': False}]}}}, 'response': None, 'status': None}
2025-08-03 13:14:06,059 - sync_service - INFO - API Call: {'service': 'shopify', 'endpoint': 'graphql_local', 'request': None, 'response': {'productCreate': {'product': {'id': 'gid://shopify/Product/7522697117762', 'title': 'Morsi Shoes', 'handle': 'morsi-shoes', 'variants': {'edges': [{'node': {'id': 'gid://shopify/ProductVariant/42360787337282', 'sku': 'FG-0000706', 'inventoryItem': {'id': 'gid://shopify/InventoryItem/44461153419330'}, 'selectedOptions': [{'name': 'Color', 'value': 'Green'}]}}, {'node': {'id': 'gid://shopify/ProductVariant/42360787370050', 'sku': 'FG-0000707', 'inventoryItem': {'id': 'gid://shopify/InventoryItem/44461153452098'}, 'selectedOptions': [{'name': 'Color', 'value': 'Beige'}]}}]}}, 'userErrors': []}}, 'status': 'success'}
2025-08-03 13:14:06,061 - sync_service - ERROR - Shopify full response for store local: {'msg': 'success', 'data': {'productCreate': {'product': {'id': 'gid://shopify/Product/7522697117762', 'title': 'Morsi Shoes', 'handle': 'morsi-shoes', 'variants': {'edges': [{'node': {'id': 'gid://shopify/ProductVariant/42360787337282', 'sku': 'FG-0000706', 'inventoryItem': {'id': 'gid://shopify/InventoryItem/44461153419330'}, 'selectedOptions': [{'name': 'Color', 'value': 'Green'}]}}, {'node': {'id': 'gid://shopify/ProductVariant/42360787370050', 'sku': 'FG-0000707', 'inventoryItem': {'id': 'gid://shopify/InventoryItem/44461153452098'}, 'selectedOptions': [{'name': 'Color', 'value': 'Beige'}]}}]}}, 'userErrors': []}}}
2025-08-03 13:14:06,377 - sync_service - INFO - API log added to SAP: shopify - /admin/api/graphql_local - success
2025-08-03 13:14:06,379 - sync_service - INFO - Successfully created product in store local
2025-08-03 13:14:06,382 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'U_SHOPIFY_MAPPING', 'request': {'method': 'POST', 'url': 'https://10.0.0.100:50000/b1s/v1/U_SHOPIFY_MAPPING', 'data': {'Code': '7522697117762', 'Name': '7522697117762', 'U_Shopify_Type': 'product', 'U_SAP_Code': 'Morsi Shoes', 'U_Shopify_Store': 'local', 'U_SAP_Type': 'item', 'U_CreateDate': '20250803'}, 'params': None}, 'response': None, 'status': None}
2025-08-03 13:14:06,673 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'U_SHOPIFY_MAPPING', 'request': None, 'response': {'odata.metadata': 'https://10.0.0.100:50000/b1s/v1/$metadata#U_SHOPIFY_MAPPING/@Element', 'Code': '7522697117762', 'Name': '7522697117762', 'U_SAP_Code': 'Morsi Shoes', 'U_SAP_Type': 'item', 'U_Shopify_Type': 'product', 'U_Shopify_Store': 'local', 'U_CreateDate': None}, 'status': 'success'}
2025-08-03 13:14:06,677 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'U_SHOPIFY_MAPPING', 'request': {'method': 'POST', 'url': 'https://10.0.0.100:50000/b1s/v1/U_SHOPIFY_MAPPING', 'data': {'Code': '42360787337282', 'Name': '42360787337282', 'U_Shopify_Type': 'variant', 'U_SAP_Code': 'FG-0000706', 'U_Shopify_Store': 'local', 'U_SAP_Type': 'item', 'U_CreateDate': '20250803'}, 'params': None}, 'response': None, 'status': None}
2025-08-03 13:14:06,972 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'U_SHOPIFY_MAPPING', 'request': None, 'response': {'odata.metadata': 'https://10.0.0.100:50000/b1s/v1/$metadata#U_SHOPIFY_MAPPING/@Element', 'Code': '42360787337282', 'Name': '42360787337282', 'U_SAP_Code': 'FG-0000706', 'U_SAP_Type': 'item', 'U_Shopify_Type': 'variant', 'U_Shopify_Store': 'local', 'U_CreateDate': None}, 'status': 'success'}
2025-08-03 13:14:06,975 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'U_SHOPIFY_MAPPING', 'request': {'method': 'POST', 'url': 'https://10.0.0.100:50000/b1s/v1/U_SHOPIFY_MAPPING', 'data': {'Code': '44461153419330', 'Name': '44461153419330', 'U_Shopify_Type': 'variant_inventory', 'U_SAP_Code': 'FG-0000706', 'U_Shopify_Store': 'local', 'U_SAP_Type': 'item', 'U_CreateDate': '20250803'}, 'params': None}, 'response': None, 'status': None}
2025-08-03 13:14:07,265 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'U_SHOPIFY_MAPPING', 'request': None, 'response': {'odata.metadata': 'https://10.0.0.100:50000/b1s/v1/$metadata#U_SHOPIFY_MAPPING/@Element', 'Code': '44461153419330', 'Name': '44461153419330', 'U_SAP_Code': 'FG-0000706', 'U_SAP_Type': 'item', 'U_Shopify_Type': 'variant_inventory', 'U_Shopify_Store': 'local', 'U_CreateDate': None}, 'status': 'success'}
2025-08-03 13:14:07,270 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'U_SHOPIFY_MAPPING', 'request': {'method': 'POST', 'url': 'https://10.0.0.100:50000/b1s/v1/U_SHOPIFY_MAPPING', 'data': {'Code': '42360787370050', 'Name': '42360787370050', 'U_Shopify_Type': 'variant', 'U_SAP_Code': 'FG-0000707', 'U_Shopify_Store': 'local', 'U_SAP_Type': 'item', 'U_CreateDate': '20250803'}, 'params': None}, 'response': None, 'status': None}
2025-08-03 13:14:07,590 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'U_SHOPIFY_MAPPING', 'request': None, 'response': {'odata.metadata': 'https://10.0.0.100:50000/b1s/v1/$metadata#U_SHOPIFY_MAPPING/@Element', 'Code': '42360787370050', 'Name': '42360787370050', 'U_SAP_Code': 'FG-0000707', 'U_SAP_Type': 'item', 'U_Shopify_Type': 'variant', 'U_Shopify_Store': 'local', 'U_CreateDate': None}, 'status': 'success'}
2025-08-03 13:14:07,593 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'U_SHOPIFY_MAPPING', 'request': {'method': 'POST', 'url': 'https://10.0.0.100:50000/b1s/v1/U_SHOPIFY_MAPPING', 'data': {'Code': '44461153452098', 'Name': '44461153452098', 'U_Shopify_Type': 'variant_inventory', 'U_SAP_Code': 'FG-0000707', 'U_Shopify_Store': 'local', 'U_SAP_Type': 'item', 'U_CreateDate': '20250803'}, 'params': None}, 'response': None, 'status': None}
2025-08-03 13:14:07,885 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'U_SHOPIFY_MAPPING', 'request': None, 'response': {'odata.metadata': 'https://10.0.0.100:50000/b1s/v1/$metadata#U_SHOPIFY_MAPPING/@Element', 'Code': '44461153452098', 'Name': '44461153452098', 'U_SAP_Code': 'FG-0000707', 'U_SAP_Type': 'item', 'U_Shopify_Type': 'variant_inventory', 'U_Shopify_Store': 'local', 'U_CreateDate': None}, 'status': 'success'}
2025-08-03 13:14:08,388 - sync_service - INFO - Sync Event: {'sync_type': 'multi_store_new_items_sap_to_shopify', 'items_processed': 3, 'success_count': 3, 'error_count': 0, 'details': None}
2025-08-03 13:14:08,388 - sync_service - INFO - Multi-store new items sync completed: 3 processed, 3 successful, 0 errors
2025-08-03 13:14:08,389 - sync_service - INFO - Starting stock change sync...
2025-08-03 13:14:08,389 - sync_service - INFO - Starting stock change sync using MASHURA_StockChangeB1SLQuery view
2025-08-03 13:14:08,391 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'view.svc/MASHURA_StockChangeB1SLQuery', 'request': {'method': 'GET', 'url': 'https://10.0.0.100:50000/b1s/v1/view.svc/MASHURA_StockChangeB1SLQuery', 'data': None, 'params': {'$top': 50}}, 'response': None, 'status': None}
2025-08-03 13:14:08,676 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'view.svc/MASHURA_StockChangeB1SLQuery', 'request': None, 'response': {'odata.metadata': 'https://10.0.0.100:50000/b1s/v1/view.svc/$metadata#MASHURA_StockChangeB1SLQuery', 'value': [{'ItemCode': 'FG-0000709', 'Variant_ID': '44461152895042', 'OnHand': 35.0, 'Available': 35.0, 'Location_ID': '68605345858', 'id__': 1}, {'ItemCode': 'FG-0000710', 'Variant_ID': '44461152927810', 'OnHand': 40.0, 'Available': 40.0, 'Location_ID': '68605345858', 'id__': 2}]}, 'status': 'success'}
2025-08-03 13:14:08,680 - sync_service - INFO - Updating inventory for item FG-0000709 (variant 44461152895042) at location 68605345858
2025-08-03 13:14:08,682 - sync_service - INFO - API Call: {'service': 'shopify', 'endpoint': 'rest_inventory_local', 'request': {'location_id': '68605345858', 'inventory_item_id': '44461152895042', 'available': 35}, 'response': None, 'status': None}
2025-08-03 13:14:09,224 - sync_service - INFO - API Call: {'service': 'shopify', 'endpoint': 'rest_inventory_local', 'request': None, 'response': {'inventory_level': {'inventory_item_id': 44461152895042, 'location_id': 68605345858, 'available': 35, 'updated_at': '2025-08-03T13:14:10+03:00', 'admin_graphql_api_id': 'gid://shopify/InventoryLevel/103109591106?inventory_item_id=44461152895042'}}, 'status': 'success'}
2025-08-03 13:14:09,942 - sync_service - INFO - API log added to SAP: shopify - inventory_levels - success
2025-08-03 13:14:10,055 - sync_service - INFO - Updating inventory for item FG-0000710 (variant 44461152927810) at location 68605345858
2025-08-03 13:14:10,056 - sync_service - INFO - API Call: {'service': 'shopify', 'endpoint': 'rest_inventory_local', 'request': {'location_id': '68605345858', 'inventory_item_id': '44461152927810', 'available': 40}, 'response': None, 'status': None}
2025-08-03 13:14:16,833 - sync_service - INFO - API Call: {'service': 'shopify', 'endpoint': 'rest_inventory_local', 'request': None, 'response': {'inventory_level': {'inventory_item_id': 44461152927810, 'location_id': 68605345858, 'available': 40, 'updated_at': '2025-08-03T13:14:17+03:00', 'admin_graphql_api_id': 'gid://shopify/InventoryLevel/103109591106?inventory_item_id=44461152927810'}}, 'status': 'success'}
2025-08-03 13:14:17,608 - sync_service - INFO - API log added to SAP: shopify - inventory_levels - success
2025-08-03 13:14:17,712 - sync_service - INFO - Stock change sync completed: 2 processed, 2 successful, 0 errors
2025-08-03 13:17:42,960 - sync_service - INFO - Initialized Shopify client for store: Local Store (local)
2025-08-03 13:17:42,983 - sync_service - INFO - Starting all syncs...
2025-08-03 13:17:42,984 - sync_service - INFO - Starting new items sync...
2025-08-03 13:17:42,984 - sync_service - INFO - Starting multi-store new items sync from SAP to Shopify
2025-08-03 13:17:42,985 - sync_service - INFO - Fetching new items for store: local
2025-08-03 13:17:42,985 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'login', 'request': {'company': 'JudeBenHalim_Test', 'user': 'manager'}, 'response': None, 'status': None}
2025-08-03 13:17:43,753 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'login', 'request': None, 'response': {'status': 'success'}, 'status': 'success'}
2025-08-03 13:17:43,754 - sync_service - INFO - SAP login successful
2025-08-03 13:17:43,756 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': "view.svc/MASHURA_New_ItemsB1SLQuery?$filter=Shopify_Store eq 'local'&$orderby=MainProduct", 'request': {'method': 'GET', 'url': "https://10.0.0.100:50000/b1s/v1/view.svc/MASHURA_New_ItemsB1SLQuery?$filter=Shopify_Store eq 'local'&$orderby=MainProduct", 'data': None, 'params': None}, 'response': None, 'status': None}
2025-08-03 13:17:44,447 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': "view.svc/MASHURA_New_ItemsB1SLQuery?$filter=Shopify_Store eq 'local'&$orderby=MainProduct", 'request': None, 'response': {'odata.metadata': 'https://10.0.0.100:50000/b1s/v1/view.svc/$metadata#MASHURA_New_ItemsB1SLQuery', 'value': []}, 'status': 'success'}
2025-08-03 13:17:44,449 - sync_service - INFO - No new items found in SAP for store local
2025-08-03 13:17:44,452 - sync_service - INFO - Sync Event: {'sync_type': 'multi_store_new_items_sap_to_shopify', 'items_processed': 0, 'success_count': 0, 'error_count': 0, 'details': None}
2025-08-03 13:17:44,453 - sync_service - INFO - Multi-store new items sync completed: 0 processed, 0 successful, 0 errors
2025-08-03 13:17:44,454 - sync_service - INFO - Starting stock change sync...
2025-08-03 13:17:44,455 - sync_service - INFO - Starting stock change sync using MASHURA_StockChangeB1SLQuery view
2025-08-03 13:17:44,458 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'view.svc/MASHURA_StockChangeB1SLQuery', 'request': {'method': 'GET', 'url': 'https://10.0.0.100:50000/b1s/v1/view.svc/MASHURA_StockChangeB1SLQuery', 'data': None, 'params': {'$top': 50}}, 'response': None, 'status': None}
2025-08-03 13:17:45,142 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'view.svc/MASHURA_StockChangeB1SLQuery', 'request': None, 'response': {'odata.metadata': 'https://10.0.0.100:50000/b1s/v1/view.svc/$metadata#MASHURA_StockChangeB1SLQuery', 'value': [{'ItemCode': 'FG-0000708', 'Variant_ID': '44461150470210', 'OnHand': 400.0, 'Available': 400.0, 'Location_ID': '68605345858', 'id__': 1}, {'ItemCode': 'FG-0000706', 'Variant_ID': '44461153419330', 'OnHand': 100.0, 'Available': 100.0, 'Location_ID': '68605345858', 'id__': 2}, {'ItemCode': 'FG-0000707', 'Variant_ID': '44461153452098', 'OnHand': 100.0, 'Available': 100.0, 'Location_ID': '68605345858', 'id__': 3}]}, 'status': 'success'}
2025-08-03 13:17:45,146 - sync_service - INFO - Updating inventory for item FG-0000708 (variant 44461150470210) at location 68605345858
2025-08-03 13:17:45,148 - sync_service - INFO - API Call: {'service': 'shopify', 'endpoint': 'rest_inventory_local', 'request': {'location_id': '68605345858', 'inventory_item_id': '44461150470210', 'available': 400}, 'response': None, 'status': None}
2025-08-03 13:17:45,769 - sync_service - INFO - API Call: {'service': 'shopify', 'endpoint': 'rest_inventory_local', 'request': None, 'response': {'inventory_level': {'inventory_item_id': 44461150470210, 'location_id': 68605345858, 'available': 400, 'updated_at': '2025-08-03T13:17:46+03:00', 'admin_graphql_api_id': 'gid://shopify/InventoryLevel/103109591106?inventory_item_id=44461150470210'}}, 'status': 'success'}
2025-08-03 13:17:46,980 - sync_service - INFO - SAP logging client login successful
2025-08-03 13:17:47,731 - sync_service - INFO - API log added to SAP: shopify - inventory_levels - success
2025-08-03 13:17:47,847 - sync_service - INFO - Updating inventory for item FG-0000706 (variant 44461153419330) at location 68605345858
2025-08-03 13:17:47,850 - sync_service - INFO - API Call: {'service': 'shopify', 'endpoint': 'rest_inventory_local', 'request': {'location_id': '68605345858', 'inventory_item_id': '44461153419330', 'available': 100}, 'response': None, 'status': None}
2025-08-03 13:17:48,369 - sync_service - INFO - API Call: {'service': 'shopify', 'endpoint': 'rest_inventory_local', 'request': None, 'response': {'inventory_level': {'inventory_item_id': 44461153419330, 'location_id': 68605345858, 'available': 100, 'updated_at': '2025-08-03T13:17:49+03:00', 'admin_graphql_api_id': 'gid://shopify/InventoryLevel/103109591106?inventory_item_id=44461153419330'}}, 'status': 'success'}
2025-08-03 13:17:49,544 - sync_service - INFO - API log added to SAP: shopify - inventory_levels - success
2025-08-03 13:17:49,651 - sync_service - INFO - Updating inventory for item FG-0000707 (variant 44461153452098) at location 68605345858
2025-08-03 13:17:49,653 - sync_service - INFO - API Call: {'service': 'shopify', 'endpoint': 'rest_inventory_local', 'request': {'location_id': '68605345858', 'inventory_item_id': '44461153452098', 'available': 100}, 'response': None, 'status': None}
2025-08-03 13:17:50,194 - sync_service - INFO - API Call: {'service': 'shopify', 'endpoint': 'rest_inventory_local', 'request': None, 'response': {'inventory_level': {'inventory_item_id': 44461153452098, 'location_id': 68605345858, 'available': 100, 'updated_at': '2025-08-03T13:17:51+03:00', 'admin_graphql_api_id': 'gid://shopify/InventoryLevel/103109591106?inventory_item_id=44461153452098'}}, 'status': 'success'}
2025-08-03 13:18:02,488 - sync_service - INFO - API log added to SAP: shopify - inventory_levels - success
2025-08-03 13:18:02,597 - sync_service - INFO - Stock change sync completed: 3 processed, 3 successful, 0 errors
2025-08-03 13:26:14,815 - sync_service - INFO - Initialized Shopify client for store: Local Store (local)
2025-08-03 13:26:14,863 - sync_service - INFO - Starting all syncs...
2025-08-03 13:26:14,866 - sync_service - INFO - Starting new items sync...
2025-08-03 13:26:14,868 - sync_service - INFO - Starting multi-store new items sync from SAP to Shopify
2025-08-03 13:26:14,869 - sync_service - INFO - Fetching new items for store: local
2025-08-03 13:26:14,871 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'login', 'request': {'company': 'JudeBenHalim_Test', 'user': 'manager'}, 'response': None, 'status': None}
2025-08-03 13:26:15,706 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'login', 'request': None, 'response': {'status': 'success'}, 'status': 'success'}
2025-08-03 13:26:15,708 - sync_service - INFO - SAP login successful
2025-08-03 13:26:15,713 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': "view.svc/MASHURA_New_ItemsB1SLQuery?$filter=Shopify_Store eq 'local'&$orderby=MainProduct", 'request': {'method': 'GET', 'url': "https://10.0.0.100:50000/b1s/v1/view.svc/MASHURA_New_ItemsB1SLQuery?$filter=Shopify_Store eq 'local'&$orderby=MainProduct", 'data': None, 'params': None}, 'response': None, 'status': None}
2025-08-03 13:26:16,524 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': "view.svc/MASHURA_New_ItemsB1SLQuery?$filter=Shopify_Store eq 'local'&$orderby=MainProduct", 'request': None, 'response': {'odata.metadata': 'https://10.0.0.100:50000/b1s/v1/view.svc/$metadata#MASHURA_New_ItemsB1SLQuery', 'value': []}, 'status': 'success'}
2025-08-03 13:26:16,527 - sync_service - INFO - No new items found in SAP for store local
2025-08-03 13:26:16,529 - sync_service - INFO - Sync Event: {'sync_type': 'multi_store_new_items_sap_to_shopify', 'items_processed': 0, 'success_count': 0, 'error_count': 0, 'details': None}
2025-08-03 13:26:16,531 - sync_service - INFO - Multi-store new items sync completed: 0 processed, 0 successful, 0 errors
2025-08-03 13:26:16,536 - sync_service - INFO - Starting stock change sync...
2025-08-03 13:26:16,539 - sync_service - INFO - Starting stock change sync using MASHURA_StockChangeB1SLQuery view
2025-08-03 13:26:16,541 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'view.svc/MASHURA_StockChangeB1SLQuery', 'request': {'method': 'GET', 'url': 'https://10.0.0.100:50000/b1s/v1/view.svc/MASHURA_StockChangeB1SLQuery', 'data': None, 'params': {'$top': 50}}, 'response': None, 'status': None}
2025-08-03 13:26:17,755 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'view.svc/MASHURA_StockChangeB1SLQuery', 'request': None, 'response': {'odata.metadata': 'https://10.0.0.100:50000/b1s/v1/view.svc/$metadata#MASHURA_StockChangeB1SLQuery', 'value': []}, 'status': 'success'}
2025-08-03 13:26:17,758 - sync_service - INFO - No stock changes found in the view.
2025-08-03 13:28:41,179 - sync_service - INFO - Initialized Shopify client for store: Local Store (local)
2025-08-03 13:28:41,204 - sync_service - INFO - Starting all syncs...
2025-08-03 13:28:41,205 - sync_service - INFO - Starting new items sync...
2025-08-03 13:28:41,205 - sync_service - INFO - Starting multi-store new items sync from SAP to Shopify
2025-08-03 13:28:41,206 - sync_service - INFO - Fetching new items for store: local
2025-08-03 13:28:41,206 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'login', 'request': {'company': 'JudeBenHalim_Test', 'user': 'manager'}, 'response': None, 'status': None}
2025-08-03 13:28:41,895 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'login', 'request': None, 'response': {'status': 'success'}, 'status': 'success'}
2025-08-03 13:28:41,895 - sync_service - INFO - SAP login successful
2025-08-03 13:28:41,897 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': "view.svc/MASHURA_New_ItemsB1SLQuery?$filter=Shopify_Store eq 'local'&$orderby=MainProduct", 'request': {'method': 'GET', 'url': "https://10.0.0.100:50000/b1s/v1/view.svc/MASHURA_New_ItemsB1SLQuery?$filter=Shopify_Store eq 'local'&$orderby=MainProduct", 'data': None, 'params': None}, 'response': None, 'status': None}
2025-08-03 13:28:42,562 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': "view.svc/MASHURA_New_ItemsB1SLQuery?$filter=Shopify_Store eq 'local'&$orderby=MainProduct", 'request': None, 'response': {'odata.metadata': 'https://10.0.0.100:50000/b1s/v1/view.svc/$metadata#MASHURA_New_ItemsB1SLQuery', 'value': []}, 'status': 'success'}
2025-08-03 13:28:42,565 - sync_service - INFO - No new items found in SAP for store local
2025-08-03 13:28:42,566 - sync_service - INFO - Sync Event: {'sync_type': 'multi_store_new_items_sap_to_shopify', 'items_processed': 0, 'success_count': 0, 'error_count': 0, 'details': None}
2025-08-03 13:28:42,567 - sync_service - INFO - Multi-store new items sync completed: 0 processed, 0 successful, 0 errors
2025-08-03 13:28:42,568 - sync_service - INFO - Starting stock change sync...
2025-08-03 13:28:42,569 - sync_service - INFO - Starting stock change sync using MASHURA_StockChangeB1SLQuery view
2025-08-03 13:28:42,570 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'view.svc/MASHURA_StockChangeB1SLQuery', 'request': {'method': 'GET', 'url': 'https://10.0.0.100:50000/b1s/v1/view.svc/MASHURA_StockChangeB1SLQuery', 'data': None, 'params': {'$top': 50}}, 'response': None, 'status': None}
2025-08-03 13:28:43,245 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'view.svc/MASHURA_StockChangeB1SLQuery', 'request': None, 'response': {'odata.metadata': 'https://10.0.0.100:50000/b1s/v1/view.svc/$metadata#MASHURA_StockChangeB1SLQuery', 'value': []}, 'status': 'success'}
2025-08-03 13:28:43,249 - sync_service - INFO - No stock changes found in the view.
2025-08-03 13:38:18,091 - sync_service - INFO - Initialized Shopify client for store: Local Store (local)
2025-08-03 13:38:18,114 - sync_service - INFO - Starting all syncs...
2025-08-03 13:38:18,115 - sync_service - INFO - Starting new items sync...
2025-08-03 13:38:18,115 - sync_service - INFO - Starting multi-store new items sync from SAP to Shopify
2025-08-03 13:38:18,116 - sync_service - INFO - Fetching new items for store: local
2025-08-03 13:38:18,117 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'login', 'request': {'company': 'JudeBenHalim_Test', 'user': 'manager'}, 'response': None, 'status': None}
2025-08-03 13:38:19,132 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'login', 'request': None, 'response': {'status': 'success'}, 'status': 'success'}
2025-08-03 13:38:19,133 - sync_service - INFO - SAP login successful
2025-08-03 13:38:19,136 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': "view.svc/MASHURA_New_ItemsB1SLQuery?$filter=Shopify_Store eq 'local'&$orderby=MainProduct", 'request': {'method': 'GET', 'url': "https://10.0.0.100:50000/b1s/v1/view.svc/MASHURA_New_ItemsB1SLQuery?$filter=Shopify_Store eq 'local'&$orderby=MainProduct", 'data': None, 'params': None}, 'response': None, 'status': None}
2025-08-03 13:38:20,081 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': "view.svc/MASHURA_New_ItemsB1SLQuery?$filter=Shopify_Store eq 'local'&$orderby=MainProduct", 'request': None, 'response': {'odata.metadata': 'https://10.0.0.100:50000/b1s/v1/view.svc/$metadata#MASHURA_New_ItemsB1SLQuery', 'value': []}, 'status': 'success'}
2025-08-03 13:38:20,083 - sync_service - INFO - No new items found in SAP for store local
2025-08-03 13:38:20,085 - sync_service - INFO - Sync Event: {'sync_type': 'multi_store_new_items_sap_to_shopify', 'items_processed': 0, 'success_count': 0, 'error_count': 0, 'details': None}
2025-08-03 13:38:20,086 - sync_service - INFO - Multi-store new items sync completed: 0 processed, 0 successful, 0 errors
2025-08-03 13:38:20,088 - sync_service - INFO - Starting stock change sync...
2025-08-03 13:38:20,090 - sync_service - INFO - Starting stock change sync using MASHURA_StockChangeB1SLQuery view
2025-08-03 13:38:20,092 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'view.svc/MASHURA_StockChangeB1SLQuery', 'request': {'method': 'GET', 'url': 'https://10.0.0.100:50000/b1s/v1/view.svc/MASHURA_StockChangeB1SLQuery', 'data': None, 'params': {'$top': 50}}, 'response': None, 'status': None}
2025-08-03 13:38:21,005 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'view.svc/MASHURA_StockChangeB1SLQuery', 'request': None, 'response': {'odata.metadata': 'https://10.0.0.100:50000/b1s/v1/view.svc/$metadata#MASHURA_StockChangeB1SLQuery', 'value': []}, 'status': 'success'}
2025-08-03 13:38:21,007 - sync_service - INFO - No stock changes found in the view.
2025-08-03 13:40:02,934 - sync_service - INFO - Initialized Shopify client for store: Local Store (local)
2025-08-03 13:40:02,950 - sync_service - INFO - Starting all syncs...
2025-08-03 13:40:02,951 - sync_service - INFO - Starting new items sync...
2025-08-03 13:40:02,952 - sync_service - INFO - Starting multi-store new items sync from SAP to Shopify
2025-08-03 13:40:02,953 - sync_service - INFO - Fetching new items for store: local
2025-08-03 13:40:02,954 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'login', 'request': {'company': 'JudeBenHalim_Test', 'user': 'manager'}, 'response': None, 'status': None}
2025-08-03 13:40:03,707 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'login', 'request': None, 'response': {'status': 'success'}, 'status': 'success'}
2025-08-03 13:40:03,709 - sync_service - INFO - SAP login successful
2025-08-03 13:40:03,711 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': "view.svc/MASHURA_New_ItemsB1SLQuery?$filter=Shopify_Store eq 'local'&$orderby=MainProduct", 'request': {'method': 'GET', 'url': "https://10.0.0.100:50000/b1s/v1/view.svc/MASHURA_New_ItemsB1SLQuery?$filter=Shopify_Store eq 'local'&$orderby=MainProduct", 'data': None, 'params': None}, 'response': None, 'status': None}
2025-08-03 13:40:04,450 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': "view.svc/MASHURA_New_ItemsB1SLQuery?$filter=Shopify_Store eq 'local'&$orderby=MainProduct", 'request': None, 'response': {'odata.metadata': 'https://10.0.0.100:50000/b1s/v1/view.svc/$metadata#MASHURA_New_ItemsB1SLQuery', 'value': [{'itemcode': 'FG-0000704', 'ItemName': 'Morsi Bracelet', 'MainProduct': None, 'Color': None, 'Price': 3200.0, 'Shopify_Store': 'local', 'Shopify_ProductCode': None, 'Status': 'new', 'Barcode': '645464644', 'id__': 1}, {'itemcode': 'FG-0000708', 'ItemName': 'Morsi Socks', 'MainProduct': None, 'Color': None, 'Price': 200.0, 'Shopify_Store': 'local', 'Shopify_ProductCode': None, 'Status': 'new', 'Barcode': None, 'id__': 2}, {'itemcode': 'FG-0000711', 'ItemName': 'Morsi Keyboard', 'MainProduct': None, 'Color': None, 'Price': 1000.0, 'Shopify_Store': 'local', 'Shopify_ProductCode': None, 'Status': 'new', 'Barcode': None, 'id__': 3}, {'itemcode': 'FG-0000709', 'ItemName': 'Morsi-Laptop-Black', 'MainProduct': 'Morsi Laptop', 'Color': 'Black', 'Price': 1000.0, 'Shopify_Store': 'local', 'Shopify_ProductCode': None, 'Status': 'new', 'Barcode': None, 'id__': 4}, {'itemcode': 'FG-0000710', 'ItemName': 'Morsi-Laptop-Grey', 'MainProduct': 'Morsi Laptop', 'Color': 'Grey', 'Price': 1000.0, 'Shopify_Store': 'local', 'Shopify_ProductCode': None, 'Status': 'new', 'Barcode': None, 'id__': 5}, {'itemcode': 'FG-0000702', 'ItemName': 'Morsi-Necklace-Black', 'MainProduct': 'Morsi Necklace', 'Color': 'Black', 'Price': 2500.0, 'Shopify_Store': 'local', 'Shopify_ProductCode': None, 'Status': 'new', 'Barcode': '2123243245', 'id__': 6}, {'itemcode': 'FG-0000703', 'ItemName': 'Morsi-Necklace-White', 'MainProduct': 'Morsi Necklace', 'Color': 'White', 'Price': 2500.0, 'Shopify_Store': 'local', 'Shopify_ProductCode': None, 'Status': 'new', 'Barcode': '242342342', 'id__': 7}, {'itemcode': 'FG-0000705', 'ItemName': 'Morsi-Necklace-Green', 'MainProduct': 'Morsi Necklace', 'Color': 'Green', 'Price': 2500.0, 'Shopify_Store': 'local', 'Shopify_ProductCode': None, 'Status': 'new', 'Barcode': None, 'id__': 8}, {'itemcode': 'FG-0000706', 'ItemName': 'Morsi-Shoes-Green', 'MainProduct': 'Morsi Shoes', 'Color': 'Green', 'Price': 1000.0, 'Shopify_Store': 'local', 'Shopify_ProductCode': None, 'Status': 'new', 'Barcode': None, 'id__': 9}, {'itemcode': 'FG-0000707', 'ItemName': 'Morsi-Shoes-Beige', 'MainProduct': 'Morsi Shoes', 'Color': 'Beige', 'Price': 1000.0, 'Shopify_Store': 'local', 'Shopify_ProductCode': None, 'Status': 'new', 'Barcode': None, 'id__': 10}]}, 'status': 'success'}
2025-08-03 13:40:04,453 - sync_service - INFO - Product group: ('FG-0000704', 'local') has 1 items
2025-08-03 13:40:04,455 - sync_service - INFO - Product group: ('FG-0000708', 'local') has 1 items
2025-08-03 13:40:04,455 - sync_service - INFO - Product group: ('FG-0000711', 'local') has 1 items
2025-08-03 13:40:04,455 - sync_service - INFO - Product group: ('Morsi Laptop', 'local') has 2 items
2025-08-03 13:40:04,455 - sync_service - INFO - Product group: ('Morsi Necklace', 'local') has 3 items
2025-08-03 13:40:04,456 - sync_service - INFO - Product group: ('Morsi Shoes', 'local') has 2 items
2025-08-03 13:40:04,456 - sync_service - INFO - Grouped 10 items into 6 product groups for store local
2025-08-03 13:40:04,458 - sync_service - INFO - Processing product group: ('FG-0000704', 'local') with 1 items for store local
2025-08-03 13:40:04,458 - sync_service - INFO - API Call: {'service': 'shopify', 'endpoint': 'graphql_local', 'request': {'query': '\n        query GetProductByHandle($handle: String!) {\n            productByHandle(handle: $handle) {\n                id\n                title\n                handle\n                description\n                variants(first: 50) {\n                    edges {\n                        node {\n                            id\n                            sku\n                            price\n                            inventoryItem {\n                                id\n                            }\n                            selectedOptions {\n                                name\n                                value\n                            }\n                        }\n                    }\n                }\n            }\n        }\n        ', 'variables': {'handle': 'default'}}, 'response': None, 'status': None}
2025-08-03 13:40:14,469 - sync_service - ERROR - GraphQL query error for store local: 
2025-08-03 13:40:14,470 - sync_service - INFO - Product None doesn't exist in store local, creating new product
2025-08-03 13:40:15,217 - sync_service - INFO - SAP logging client login successful
2025-08-03 13:40:15,903 - sync_service - INFO - API log added to SAP: shopify - /admin/api/graphql_local - success
2025-08-03 13:40:15,904 - sync_service - INFO - API Call: {'service': 'shopify', 'endpoint': 'graphql_local', 'request': {'query': '\n        mutation productCreate($input: ProductInput!) {\n            productCreate(input: $input) {\n                product {\n                    id\n                    title\n                    handle\n                    variants(first: 50) {\n                        edges {\n                            node {\n                                id\n                                sku\n                                inventoryItem {\n                                    id\n                                }\n                                selectedOptions {\n                                    name\n                                    value\n                                }\n                            }\n                        }\n                    }\n                }\n                userErrors {\n                    field\n                    message\n                }\n            }\n        }\n        ', 'variables': {'input': {'title': 'Morsi Bracelet', 'descriptionHtml': '', 'vendor': '', 'productType': 'Default', 'status': 'DRAFT', 'tags': [], 'variants': [{'sku': 'FG-0000704', 'price': '3200.0', 'inventoryPolicy': 'DENY', 'inventoryManagement': 'SHOPIFY', 'weight': 0.0, 'weightUnit': 'KILOGRAMS', 'taxable': False, 'barcode': '645464644'}], 'seo': {'title': 'Morsi Bracelet', 'description': ''}}}}, 'response': None, 'status': None}
2025-08-03 13:40:16,830 - sync_service - INFO - API Call: {'service': 'shopify', 'endpoint': 'graphql_local', 'request': None, 'response': {'productCreate': {'product': {'id': 'gid://shopify/Product/7522714124354', 'title': 'Morsi Bracelet', 'handle': 'morsi-bracelet', 'variants': {'edges': [{'node': {'id': 'gid://shopify/ProductVariant/42360831803458', 'sku': 'FG-0000704', 'inventoryItem': {'id': 'gid://shopify/InventoryItem/44461197885506'}, 'selectedOptions': [{'name': 'Title', 'value': 'Default Title'}]}}]}}, 'userErrors': []}}, 'status': 'success'}
2025-08-03 13:40:16,832 - sync_service - ERROR - Shopify full response for store local: {'msg': 'success', 'data': {'productCreate': {'product': {'id': 'gid://shopify/Product/7522714124354', 'title': 'Morsi Bracelet', 'handle': 'morsi-bracelet', 'variants': {'edges': [{'node': {'id': 'gid://shopify/ProductVariant/42360831803458', 'sku': 'FG-0000704', 'inventoryItem': {'id': 'gid://shopify/InventoryItem/44461197885506'}, 'selectedOptions': [{'name': 'Title', 'value': 'Default Title'}]}}]}}, 'userErrors': []}}}
2025-08-03 13:40:17,616 - sync_service - INFO - API log added to SAP: shopify - /admin/api/graphql_local - success
2025-08-03 13:40:17,617 - sync_service - INFO - Successfully created product in store local
2025-08-03 13:40:17,618 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'U_SHOPIFY_MAPPING', 'request': {'method': 'POST', 'url': 'https://10.0.0.100:50000/b1s/v1/U_SHOPIFY_MAPPING', 'data': {'Code': '7522714124354', 'Name': '7522714124354', 'U_Shopify_Type': 'product', 'U_SAP_Code': 'FG-0000704', 'U_Shopify_Store': 'local', 'U_SAP_Type': 'item', 'CreateDate': '20250803'}, 'params': None}, 'response': None, 'status': None}
2025-08-03 13:40:18,292 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'U_SHOPIFY_MAPPING', 'request': None, 'response': {'status_code': 400, 'text': '{\n   "error" : {\n      "code" : -1000,\n      "message" : {\n         "lang" : "en-us",\n         "value" : "Property \'CreateDate\' of \'U_SHOPIFY_MAPPING\' is invalid"\n      }\n   }\n}\n'}, 'status': 'failure'}
2025-08-03 13:40:18,296 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'U_SHOPIFY_MAPPING', 'request': {'method': 'POST', 'url': 'https://10.0.0.100:50000/b1s/v1/U_SHOPIFY_MAPPING', 'data': {'Code': '42360831803458', 'Name': '42360831803458', 'U_Shopify_Type': 'variant', 'U_SAP_Code': 'FG-0000704', 'U_Shopify_Store': 'local', 'U_SAP_Type': 'item', 'CreateDate': '20250803'}, 'params': None}, 'response': None, 'status': None}
2025-08-03 13:40:18,980 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'U_SHOPIFY_MAPPING', 'request': None, 'response': {'status_code': 400, 'text': '{\n   "error" : {\n      "code" : -1000,\n      "message" : {\n         "lang" : "en-us",\n         "value" : "Property \'CreateDate\' of \'U_SHOPIFY_MAPPING\' is invalid"\n      }\n   }\n}\n'}, 'status': 'failure'}
2025-08-03 13:40:18,982 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'U_SHOPIFY_MAPPING', 'request': {'method': 'POST', 'url': 'https://10.0.0.100:50000/b1s/v1/U_SHOPIFY_MAPPING', 'data': {'Code': '44461197885506', 'Name': '44461197885506', 'U_Shopify_Type': 'variant_inventory', 'U_SAP_Code': 'FG-0000704', 'U_Shopify_Store': 'local', 'U_SAP_Type': 'item', 'CreateDate': '20250803'}, 'params': None}, 'response': None, 'status': None}
2025-08-03 13:40:19,251 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'U_SHOPIFY_MAPPING', 'request': None, 'response': {'status_code': 400, 'text': '{\n   "error" : {\n      "code" : -1000,\n      "message" : {\n         "lang" : "en-us",\n         "value" : "Property \'CreateDate\' of \'U_SHOPIFY_MAPPING\' is invalid"\n      }\n   }\n}\n'}, 'status': 'failure'}
2025-08-03 13:40:19,756 - sync_service - INFO - Processing product group: ('FG-0000708', 'local') with 1 items for store local
2025-08-03 13:40:19,757 - sync_service - INFO - API Call: {'service': 'shopify', 'endpoint': 'graphql_local', 'request': {'query': '\n        query GetProductByHandle($handle: String!) {\n            productByHandle(handle: $handle) {\n                id\n                title\n                handle\n                description\n                variants(first: 50) {\n                    edges {\n                        node {\n                            id\n                            sku\n                            price\n                            inventoryItem {\n                                id\n                            }\n                            selectedOptions {\n                                name\n                                value\n                            }\n                        }\n                    }\n                }\n            }\n        }\n        ', 'variables': {'handle': 'default'}}, 'response': None, 'status': None}
2025-08-03 13:40:20,218 - sync_service - INFO - API Call: {'service': 'shopify', 'endpoint': 'graphql_local', 'request': None, 'response': {'productByHandle': None}, 'status': 'success'}
2025-08-03 13:40:20,219 - sync_service - INFO - Product None doesn't exist in store local, creating new product
2025-08-03 13:40:20,885 - sync_service - INFO - API log added to SAP: shopify - /admin/api/graphql_local - success
2025-08-03 13:40:20,886 - sync_service - INFO - API Call: {'service': 'shopify', 'endpoint': 'graphql_local', 'request': {'query': '\n        mutation productCreate($input: ProductInput!) {\n            productCreate(input: $input) {\n                product {\n                    id\n                    title\n                    handle\n                    variants(first: 50) {\n                        edges {\n                            node {\n                                id\n                                sku\n                                inventoryItem {\n                                    id\n                                }\n                                selectedOptions {\n                                    name\n                                    value\n                                }\n                            }\n                        }\n                    }\n                }\n                userErrors {\n                    field\n                    message\n                }\n            }\n        }\n        ', 'variables': {'input': {'title': 'Morsi Socks', 'descriptionHtml': '', 'vendor': '', 'productType': 'Default', 'status': 'DRAFT', 'tags': [], 'variants': [{'sku': 'FG-0000708', 'price': '200.0', 'inventoryPolicy': 'DENY', 'inventoryManagement': 'SHOPIFY', 'weight': 0.0, 'weightUnit': 'KILOGRAMS', 'taxable': False}], 'seo': {'title': 'Morsi Socks', 'description': ''}}}}, 'response': None, 'status': None}
2025-08-03 13:40:30,885 - sync_service - ERROR - GraphQL query error for store local: 
2025-08-03 13:40:30,886 - sync_service - ERROR - Shopify full response for store local: {'msg': 'failure', 'error': 'GraphQL query error for store local: '}
2025-08-03 13:40:31,165 - sync_service - INFO - API log added to SAP: shopify - /admin/api/graphql_local - failure
2025-08-03 13:40:31,166 - sync_service - ERROR - Failed to create product in store local: GraphQL query error for store local: 
2025-08-03 13:40:31,167 - sync_service - INFO - Processing product group: ('FG-0000711', 'local') with 1 items for store local
2025-08-03 13:40:31,168 - sync_service - INFO - API Call: {'service': 'shopify', 'endpoint': 'graphql_local', 'request': {'query': '\n        query GetProductByHandle($handle: String!) {\n            productByHandle(handle: $handle) {\n                id\n                title\n                handle\n                description\n                variants(first: 50) {\n                    edges {\n                        node {\n                            id\n                            sku\n                            price\n                            inventoryItem {\n                                id\n                            }\n                            selectedOptions {\n                                name\n                                value\n                            }\n                        }\n                    }\n                }\n            }\n        }\n        ', 'variables': {'handle': 'default'}}, 'response': None, 'status': None}
2025-08-03 13:40:31,635 - sync_service - INFO - API Call: {'service': 'shopify', 'endpoint': 'graphql_local', 'request': None, 'response': {'productByHandle': None}, 'status': 'success'}
2025-08-03 13:40:31,637 - sync_service - INFO - Product None doesn't exist in store local, creating new product
2025-08-03 13:40:31,919 - sync_service - INFO - API log added to SAP: shopify - /admin/api/graphql_local - success
2025-08-03 13:40:31,920 - sync_service - INFO - API Call: {'service': 'shopify', 'endpoint': 'graphql_local', 'request': {'query': '\n        mutation productCreate($input: ProductInput!) {\n            productCreate(input: $input) {\n                product {\n                    id\n                    title\n                    handle\n                    variants(first: 50) {\n                        edges {\n                            node {\n                                id\n                                sku\n                                inventoryItem {\n                                    id\n                                }\n                                selectedOptions {\n                                    name\n                                    value\n                                }\n                            }\n                        }\n                    }\n                }\n                userErrors {\n                    field\n                    message\n                }\n            }\n        }\n        ', 'variables': {'input': {'title': 'Morsi Keyboard', 'descriptionHtml': '', 'vendor': '', 'productType': 'Default', 'status': 'DRAFT', 'tags': [], 'variants': [{'sku': 'FG-0000711', 'price': '1000.0', 'inventoryPolicy': 'DENY', 'inventoryManagement': 'SHOPIFY', 'weight': 0.0, 'weightUnit': 'KILOGRAMS', 'taxable': False}], 'seo': {'title': 'Morsi Keyboard', 'description': ''}}}}, 'response': None, 'status': None}
2025-08-03 13:40:32,752 - sync_service - INFO - API Call: {'service': 'shopify', 'endpoint': 'graphql_local', 'request': None, 'response': {'productCreate': {'product': {'id': 'gid://shopify/Product/7522714189890', 'title': 'Morsi Keyboard', 'handle': 'morsi-keyboard', 'variants': {'edges': [{'node': {'id': 'gid://shopify/ProductVariant/42360832032834', 'sku': 'FG-0000711', 'inventoryItem': {'id': 'gid://shopify/InventoryItem/44461198114882'}, 'selectedOptions': [{'name': 'Title', 'value': 'Default Title'}]}}]}}, 'userErrors': []}}, 'status': 'success'}
2025-08-03 13:40:32,754 - sync_service - ERROR - Shopify full response for store local: {'msg': 'success', 'data': {'productCreate': {'product': {'id': 'gid://shopify/Product/7522714189890', 'title': 'Morsi Keyboard', 'handle': 'morsi-keyboard', 'variants': {'edges': [{'node': {'id': 'gid://shopify/ProductVariant/42360832032834', 'sku': 'FG-0000711', 'inventoryItem': {'id': 'gid://shopify/InventoryItem/44461198114882'}, 'selectedOptions': [{'name': 'Title', 'value': 'Default Title'}]}}]}}, 'userErrors': []}}}
2025-08-03 13:40:33,033 - sync_service - INFO - API log added to SAP: shopify - /admin/api/graphql_local - success
2025-08-03 13:40:33,034 - sync_service - INFO - Successfully created product in store local
2025-08-03 13:40:33,035 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'U_SHOPIFY_MAPPING', 'request': {'method': 'POST', 'url': 'https://10.0.0.100:50000/b1s/v1/U_SHOPIFY_MAPPING', 'data': {'Code': '7522714189890', 'Name': '7522714189890', 'U_Shopify_Type': 'product', 'U_SAP_Code': 'FG-0000711', 'U_Shopify_Store': 'local', 'U_SAP_Type': 'item', 'CreateDate': '20250803'}, 'params': None}, 'response': None, 'status': None}
2025-08-03 13:40:33,735 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'U_SHOPIFY_MAPPING', 'request': None, 'response': {'status_code': 400, 'text': '{\n   "error" : {\n      "code" : -1000,\n      "message" : {\n         "lang" : "en-us",\n         "value" : "Property \'CreateDate\' of \'U_SHOPIFY_MAPPING\' is invalid"\n      }\n   }\n}\n'}, 'status': 'failure'}
2025-08-03 13:40:33,736 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'U_SHOPIFY_MAPPING', 'request': {'method': 'POST', 'url': 'https://10.0.0.100:50000/b1s/v1/U_SHOPIFY_MAPPING', 'data': {'Code': '42360832032834', 'Name': '42360832032834', 'U_Shopify_Type': 'variant', 'U_SAP_Code': 'FG-0000711', 'U_Shopify_Store': 'local', 'U_SAP_Type': 'item', 'CreateDate': '20250803'}, 'params': None}, 'response': None, 'status': None}
2025-08-03 13:40:34,016 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'U_SHOPIFY_MAPPING', 'request': None, 'response': {'status_code': 400, 'text': '{\n   "error" : {\n      "code" : -1000,\n      "message" : {\n         "lang" : "en-us",\n         "value" : "Property \'CreateDate\' of \'U_SHOPIFY_MAPPING\' is invalid"\n      }\n   }\n}\n'}, 'status': 'failure'}
2025-08-03 13:40:34,019 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'U_SHOPIFY_MAPPING', 'request': {'method': 'POST', 'url': 'https://10.0.0.100:50000/b1s/v1/U_SHOPIFY_MAPPING', 'data': {'Code': '44461198114882', 'Name': '44461198114882', 'U_Shopify_Type': 'variant_inventory', 'U_SAP_Code': 'FG-0000711', 'U_Shopify_Store': 'local', 'U_SAP_Type': 'item', 'CreateDate': '20250803'}, 'params': None}, 'response': None, 'status': None}
2025-08-03 13:40:34,300 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'U_SHOPIFY_MAPPING', 'request': None, 'response': {'status_code': 400, 'text': '{\n   "error" : {\n      "code" : -1000,\n      "message" : {\n         "lang" : "en-us",\n         "value" : "Property \'CreateDate\' of \'U_SHOPIFY_MAPPING\' is invalid"\n      }\n   }\n}\n'}, 'status': 'failure'}
2025-08-03 13:40:34,815 - sync_service - INFO - Processing product group: ('Morsi Laptop', 'local') with 2 items for store local
2025-08-03 13:40:34,817 - sync_service - INFO - API Call: {'service': 'shopify', 'endpoint': 'graphql_local', 'request': {'query': '\n        query GetProductByHandle($handle: String!) {\n            productByHandle(handle: $handle) {\n                id\n                title\n                handle\n                description\n                variants(first: 50) {\n                    edges {\n                        node {\n                            id\n                            sku\n                            price\n                            inventoryItem {\n                                id\n                            }\n                            selectedOptions {\n                                name\n                                value\n                            }\n                        }\n                    }\n                }\n            }\n        }\n        ', 'variables': {'handle': 'morsi-laptop'}}, 'response': None, 'status': None}
2025-08-03 13:40:35,310 - sync_service - INFO - API Call: {'service': 'shopify', 'endpoint': 'graphql_local', 'request': None, 'response': {'productByHandle': None}, 'status': 'success'}
2025-08-03 13:40:35,312 - sync_service - INFO - Product Morsi Laptop doesn't exist in store local, creating new product
2025-08-03 13:40:35,962 - sync_service - INFO - API log added to SAP: shopify - /admin/api/graphql_local - success
2025-08-03 13:40:35,964 - sync_service - INFO - API Call: {'service': 'shopify', 'endpoint': 'graphql_local', 'request': {'query': '\n        mutation productCreate($input: ProductInput!) {\n            productCreate(input: $input) {\n                product {\n                    id\n                    title\n                    handle\n                    variants(first: 50) {\n                        edges {\n                            node {\n                                id\n                                sku\n                                inventoryItem {\n                                    id\n                                }\n                                selectedOptions {\n                                    name\n                                    value\n                                }\n                            }\n                        }\n                    }\n                }\n                userErrors {\n                    field\n                    message\n                }\n            }\n        }\n        ', 'variables': {'input': {'title': 'Morsi Laptop', 'status': 'DRAFT', 'options': ['Color'], 'variants': [{'options': ['Black'], 'sku': 'FG-0000709', 'price': '1000.0', 'inventoryManagement': 'SHOPIFY', 'inventoryPolicy': 'DENY', 'taxable': False}, {'options': ['Gray'], 'sku': 'FG-0000710', 'price': '1000.0', 'inventoryManagement': 'SHOPIFY', 'inventoryPolicy': 'DENY', 'taxable': False}]}}}, 'response': None, 'status': None}
2025-08-03 13:40:36,801 - sync_service - INFO - API Call: {'service': 'shopify', 'endpoint': 'graphql_local', 'request': None, 'response': {'productCreate': {'product': {'id': 'gid://shopify/Product/7522714386498', 'title': 'Morsi Laptop', 'handle': 'morsi-laptop', 'variants': {'edges': [{'node': {'id': 'gid://shopify/ProductVariant/42360832229442', 'sku': 'FG-0000709', 'inventoryItem': {'id': 'gid://shopify/InventoryItem/44461198311490'}, 'selectedOptions': [{'name': 'Color', 'value': 'Black'}]}}, {'node': {'id': 'gid://shopify/ProductVariant/42360832262210', 'sku': 'FG-0000710', 'inventoryItem': {'id': 'gid://shopify/InventoryItem/44461198344258'}, 'selectedOptions': [{'name': 'Color', 'value': 'Gray'}]}}]}}, 'userErrors': []}}, 'status': 'success'}
2025-08-03 13:40:36,803 - sync_service - ERROR - Shopify full response for store local: {'msg': 'success', 'data': {'productCreate': {'product': {'id': 'gid://shopify/Product/7522714386498', 'title': 'Morsi Laptop', 'handle': 'morsi-laptop', 'variants': {'edges': [{'node': {'id': 'gid://shopify/ProductVariant/42360832229442', 'sku': 'FG-0000709', 'inventoryItem': {'id': 'gid://shopify/InventoryItem/44461198311490'}, 'selectedOptions': [{'name': 'Color', 'value': 'Black'}]}}, {'node': {'id': 'gid://shopify/ProductVariant/42360832262210', 'sku': 'FG-0000710', 'inventoryItem': {'id': 'gid://shopify/InventoryItem/44461198344258'}, 'selectedOptions': [{'name': 'Color', 'value': 'Gray'}]}}]}}, 'userErrors': []}}}
2025-08-03 13:40:37,090 - sync_service - INFO - API log added to SAP: shopify - /admin/api/graphql_local - success
2025-08-03 13:40:37,092 - sync_service - INFO - Successfully created product in store local
2025-08-03 13:40:37,094 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'U_SHOPIFY_MAPPING', 'request': {'method': 'POST', 'url': 'https://10.0.0.100:50000/b1s/v1/U_SHOPIFY_MAPPING', 'data': {'Code': '7522714386498', 'Name': '7522714386498', 'U_Shopify_Type': 'product', 'U_SAP_Code': 'Morsi Laptop', 'U_Shopify_Store': 'local', 'U_SAP_Type': 'item', 'CreateDate': '20250803'}, 'params': None}, 'response': None, 'status': None}
2025-08-03 13:40:37,783 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'U_SHOPIFY_MAPPING', 'request': None, 'response': {'status_code': 400, 'text': '{\n   "error" : {\n      "code" : -1000,\n      "message" : {\n         "lang" : "en-us",\n         "value" : "Property \'CreateDate\' of \'U_SHOPIFY_MAPPING\' is invalid"\n      }\n   }\n}\n'}, 'status': 'failure'}
2025-08-03 13:40:37,785 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'U_SHOPIFY_MAPPING', 'request': {'method': 'POST', 'url': 'https://10.0.0.100:50000/b1s/v1/U_SHOPIFY_MAPPING', 'data': {'Code': '42360832229442', 'Name': '42360832229442', 'U_Shopify_Type': 'variant', 'U_SAP_Code': 'FG-0000709', 'U_Shopify_Store': 'local', 'U_SAP_Type': 'item', 'CreateDate': '20250803'}, 'params': None}, 'response': None, 'status': None}
2025-08-03 13:40:38,431 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'U_SHOPIFY_MAPPING', 'request': None, 'response': {'status_code': 400, 'text': '{\n   "error" : {\n      "code" : -1000,\n      "message" : {\n         "lang" : "en-us",\n         "value" : "Property \'CreateDate\' of \'U_SHOPIFY_MAPPING\' is invalid"\n      }\n   }\n}\n'}, 'status': 'failure'}
2025-08-03 13:40:38,432 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'U_SHOPIFY_MAPPING', 'request': {'method': 'POST', 'url': 'https://10.0.0.100:50000/b1s/v1/U_SHOPIFY_MAPPING', 'data': {'Code': '44461198311490', 'Name': '44461198311490', 'U_Shopify_Type': 'variant_inventory', 'U_SAP_Code': 'FG-0000709', 'U_Shopify_Store': 'local', 'U_SAP_Type': 'item', 'CreateDate': '20250803'}, 'params': None}, 'response': None, 'status': None}
2025-08-03 13:40:39,043 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'U_SHOPIFY_MAPPING', 'request': None, 'response': {'status_code': 400, 'text': '{\n   "error" : {\n      "code" : -1000,\n      "message" : {\n         "lang" : "en-us",\n         "value" : "Property \'CreateDate\' of \'U_SHOPIFY_MAPPING\' is invalid"\n      }\n   }\n}\n'}, 'status': 'failure'}
2025-08-03 13:40:39,047 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'U_SHOPIFY_MAPPING', 'request': {'method': 'POST', 'url': 'https://10.0.0.100:50000/b1s/v1/U_SHOPIFY_MAPPING', 'data': {'Code': '42360832262210', 'Name': '42360832262210', 'U_Shopify_Type': 'variant', 'U_SAP_Code': 'FG-0000710', 'U_Shopify_Store': 'local', 'U_SAP_Type': 'item', 'CreateDate': '20250803'}, 'params': None}, 'response': None, 'status': None}
2025-08-03 13:40:39,348 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'U_SHOPIFY_MAPPING', 'request': None, 'response': {'status_code': 400, 'text': '{\n   "error" : {\n      "code" : -1000,\n      "message" : {\n         "lang" : "en-us",\n         "value" : "Property \'CreateDate\' of \'U_SHOPIFY_MAPPING\' is invalid"\n      }\n   }\n}\n'}, 'status': 'failure'}
2025-08-03 13:40:39,351 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'U_SHOPIFY_MAPPING', 'request': {'method': 'POST', 'url': 'https://10.0.0.100:50000/b1s/v1/U_SHOPIFY_MAPPING', 'data': {'Code': '44461198344258', 'Name': '44461198344258', 'U_Shopify_Type': 'variant_inventory', 'U_SAP_Code': 'FG-0000710', 'U_Shopify_Store': 'local', 'U_SAP_Type': 'item', 'CreateDate': '20250803'}, 'params': None}, 'response': None, 'status': None}
2025-08-03 13:40:39,625 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'U_SHOPIFY_MAPPING', 'request': None, 'response': {'status_code': 400, 'text': '{\n   "error" : {\n      "code" : -1000,\n      "message" : {\n         "lang" : "en-us",\n         "value" : "Property \'CreateDate\' of \'U_SHOPIFY_MAPPING\' is invalid"\n      }\n   }\n}\n'}, 'status': 'failure'}
2025-08-03 13:40:40,142 - sync_service - INFO - Processing product group: ('Morsi Necklace', 'local') with 3 items for store local
2025-08-03 13:40:40,143 - sync_service - INFO - API Call: {'service': 'shopify', 'endpoint': 'graphql_local', 'request': {'query': '\n        query GetProductByHandle($handle: String!) {\n            productByHandle(handle: $handle) {\n                id\n                title\n                handle\n                description\n                variants(first: 50) {\n                    edges {\n                        node {\n                            id\n                            sku\n                            price\n                            inventoryItem {\n                                id\n                            }\n                            selectedOptions {\n                                name\n                                value\n                            }\n                        }\n                    }\n                }\n            }\n        }\n        ', 'variables': {'handle': 'morsi-necklace'}}, 'response': None, 'status': None}
2025-08-03 13:40:46,362 - sync_service - INFO - API Call: {'service': 'shopify', 'endpoint': 'graphql_local', 'request': None, 'response': {'productByHandle': None}, 'status': 'success'}
2025-08-03 13:40:46,364 - sync_service - INFO - Product Morsi Necklace doesn't exist in store local, creating new product
2025-08-03 13:40:47,046 - sync_service - INFO - API log added to SAP: shopify - /admin/api/graphql_local - success
2025-08-03 13:40:47,053 - sync_service - INFO - API Call: {'service': 'shopify', 'endpoint': 'graphql_local', 'request': {'query': '\n        mutation productCreate($input: ProductInput!) {\n            productCreate(input: $input) {\n                product {\n                    id\n                    title\n                    handle\n                    variants(first: 50) {\n                        edges {\n                            node {\n                                id\n                                sku\n                                inventoryItem {\n                                    id\n                                }\n                                selectedOptions {\n                                    name\n                                    value\n                                }\n                            }\n                        }\n                    }\n                }\n                userErrors {\n                    field\n                    message\n                }\n            }\n        }\n        ', 'variables': {'input': {'title': 'Morsi Necklace', 'status': 'DRAFT', 'options': ['Color'], 'variants': [{'options': ['Black'], 'sku': 'FG-0000702', 'price': '2500.0', 'inventoryManagement': 'SHOPIFY', 'inventoryPolicy': 'DENY', 'taxable': False, 'barcode': '2123243245'}, {'options': ['White'], 'sku': 'FG-0000703', 'price': '2500.0', 'inventoryManagement': 'SHOPIFY', 'inventoryPolicy': 'DENY', 'taxable': False, 'barcode': '242342342'}, {'options': ['Green'], 'sku': 'FG-0000705', 'price': '2500.0', 'inventoryManagement': 'SHOPIFY', 'inventoryPolicy': 'DENY', 'taxable': False}]}}}, 'response': None, 'status': None}
2025-08-03 13:40:47,975 - sync_service - INFO - API Call: {'service': 'shopify', 'endpoint': 'graphql_local', 'request': None, 'response': {'productCreate': {'product': {'id': 'gid://shopify/Product/7522714419266', 'title': 'Morsi Necklace', 'handle': 'morsi-necklace', 'variants': {'edges': [{'node': {'id': 'gid://shopify/ProductVariant/42360832458818', 'sku': 'FG-0000702', 'inventoryItem': {'id': 'gid://shopify/InventoryItem/44461198540866'}, 'selectedOptions': [{'name': 'Color', 'value': 'Black'}]}}, {'node': {'id': 'gid://shopify/ProductVariant/42360832491586', 'sku': 'FG-0000703', 'inventoryItem': {'id': 'gid://shopify/InventoryItem/44461198573634'}, 'selectedOptions': [{'name': 'Color', 'value': 'White'}]}}, {'node': {'id': 'gid://shopify/ProductVariant/42360832524354', 'sku': 'FG-0000705', 'inventoryItem': {'id': 'gid://shopify/InventoryItem/44461198606402'}, 'selectedOptions': [{'name': 'Color', 'value': 'Green'}]}}]}}, 'userErrors': []}}, 'status': 'success'}
2025-08-03 13:40:47,976 - sync_service - ERROR - Shopify full response for store local: {'msg': 'success', 'data': {'productCreate': {'product': {'id': 'gid://shopify/Product/7522714419266', 'title': 'Morsi Necklace', 'handle': 'morsi-necklace', 'variants': {'edges': [{'node': {'id': 'gid://shopify/ProductVariant/42360832458818', 'sku': 'FG-0000702', 'inventoryItem': {'id': 'gid://shopify/InventoryItem/44461198540866'}, 'selectedOptions': [{'name': 'Color', 'value': 'Black'}]}}, {'node': {'id': 'gid://shopify/ProductVariant/42360832491586', 'sku': 'FG-0000703', 'inventoryItem': {'id': 'gid://shopify/InventoryItem/44461198573634'}, 'selectedOptions': [{'name': 'Color', 'value': 'White'}]}}, {'node': {'id': 'gid://shopify/ProductVariant/42360832524354', 'sku': 'FG-0000705', 'inventoryItem': {'id': 'gid://shopify/InventoryItem/44461198606402'}, 'selectedOptions': [{'name': 'Color', 'value': 'Green'}]}}]}}, 'userErrors': []}}}
2025-08-03 13:40:48,266 - sync_service - INFO - API log added to SAP: shopify - /admin/api/graphql_local - success
2025-08-03 13:40:48,269 - sync_service - INFO - Successfully created product in store local
2025-08-03 13:40:48,271 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'U_SHOPIFY_MAPPING', 'request': {'method': 'POST', 'url': 'https://10.0.0.100:50000/b1s/v1/U_SHOPIFY_MAPPING', 'data': {'Code': '7522714419266', 'Name': '7522714419266', 'U_Shopify_Type': 'product', 'U_SAP_Code': 'Morsi Necklace', 'U_Shopify_Store': 'local', 'U_SAP_Type': 'item', 'CreateDate': '20250803'}, 'params': None}, 'response': None, 'status': None}
2025-08-03 13:40:48,565 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'U_SHOPIFY_MAPPING', 'request': None, 'response': {'status_code': 400, 'text': '{\n   "error" : {\n      "code" : -1000,\n      "message" : {\n         "lang" : "en-us",\n         "value" : "Property \'CreateDate\' of \'U_SHOPIFY_MAPPING\' is invalid"\n      }\n   }\n}\n'}, 'status': 'failure'}
2025-08-03 13:40:48,567 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'U_SHOPIFY_MAPPING', 'request': {'method': 'POST', 'url': 'https://10.0.0.100:50000/b1s/v1/U_SHOPIFY_MAPPING', 'data': {'Code': '42360832458818', 'Name': '42360832458818', 'U_Shopify_Type': 'variant', 'U_SAP_Code': 'FG-0000702', 'U_Shopify_Store': 'local', 'U_SAP_Type': 'item', 'CreateDate': '20250803'}, 'params': None}, 'response': None, 'status': None}
2025-08-03 13:40:48,854 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'U_SHOPIFY_MAPPING', 'request': None, 'response': {'status_code': 400, 'text': '{\n   "error" : {\n      "code" : -1000,\n      "message" : {\n         "lang" : "en-us",\n         "value" : "Property \'CreateDate\' of \'U_SHOPIFY_MAPPING\' is invalid"\n      }\n   }\n}\n'}, 'status': 'failure'}
2025-08-03 13:40:48,857 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'U_SHOPIFY_MAPPING', 'request': {'method': 'POST', 'url': 'https://10.0.0.100:50000/b1s/v1/U_SHOPIFY_MAPPING', 'data': {'Code': '44461198540866', 'Name': '44461198540866', 'U_Shopify_Type': 'variant_inventory', 'U_SAP_Code': 'FG-0000702', 'U_Shopify_Store': 'local', 'U_SAP_Type': 'item', 'CreateDate': '20250803'}, 'params': None}, 'response': None, 'status': None}
2025-08-03 13:40:49,145 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'U_SHOPIFY_MAPPING', 'request': None, 'response': {'status_code': 400, 'text': '{\n   "error" : {\n      "code" : -1000,\n      "message" : {\n         "lang" : "en-us",\n         "value" : "Property \'CreateDate\' of \'U_SHOPIFY_MAPPING\' is invalid"\n      }\n   }\n}\n'}, 'status': 'failure'}
2025-08-03 13:40:49,148 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'U_SHOPIFY_MAPPING', 'request': {'method': 'POST', 'url': 'https://10.0.0.100:50000/b1s/v1/U_SHOPIFY_MAPPING', 'data': {'Code': '42360832491586', 'Name': '42360832491586', 'U_Shopify_Type': 'variant', 'U_SAP_Code': 'FG-0000703', 'U_Shopify_Store': 'local', 'U_SAP_Type': 'item', 'CreateDate': '20250803'}, 'params': None}, 'response': None, 'status': None}
2025-08-03 13:40:49,442 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'U_SHOPIFY_MAPPING', 'request': None, 'response': {'status_code': 400, 'text': '{\n   "error" : {\n      "code" : -1000,\n      "message" : {\n         "lang" : "en-us",\n         "value" : "Property \'CreateDate\' of \'U_SHOPIFY_MAPPING\' is invalid"\n      }\n   }\n}\n'}, 'status': 'failure'}
2025-08-03 13:40:49,445 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'U_SHOPIFY_MAPPING', 'request': {'method': 'POST', 'url': 'https://10.0.0.100:50000/b1s/v1/U_SHOPIFY_MAPPING', 'data': {'Code': '44461198573634', 'Name': '44461198573634', 'U_Shopify_Type': 'variant_inventory', 'U_SAP_Code': 'FG-0000703', 'U_Shopify_Store': 'local', 'U_SAP_Type': 'item', 'CreateDate': '20250803'}, 'params': None}, 'response': None, 'status': None}
2025-08-03 13:40:49,729 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'U_SHOPIFY_MAPPING', 'request': None, 'response': {'status_code': 400, 'text': '{\n   "error" : {\n      "code" : -1000,\n      "message" : {\n         "lang" : "en-us",\n         "value" : "Property \'CreateDate\' of \'U_SHOPIFY_MAPPING\' is invalid"\n      }\n   }\n}\n'}, 'status': 'failure'}
2025-08-03 13:40:49,731 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'U_SHOPIFY_MAPPING', 'request': {'method': 'POST', 'url': 'https://10.0.0.100:50000/b1s/v1/U_SHOPIFY_MAPPING', 'data': {'Code': '42360832524354', 'Name': '42360832524354', 'U_Shopify_Type': 'variant', 'U_SAP_Code': 'FG-0000705', 'U_Shopify_Store': 'local', 'U_SAP_Type': 'item', 'CreateDate': '20250803'}, 'params': None}, 'response': None, 'status': None}
2025-08-03 13:40:50,024 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'U_SHOPIFY_MAPPING', 'request': None, 'response': {'status_code': 400, 'text': '{\n   "error" : {\n      "code" : -1000,\n      "message" : {\n         "lang" : "en-us",\n         "value" : "Property \'CreateDate\' of \'U_SHOPIFY_MAPPING\' is invalid"\n      }\n   }\n}\n'}, 'status': 'failure'}
2025-08-03 13:40:50,025 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'U_SHOPIFY_MAPPING', 'request': {'method': 'POST', 'url': 'https://10.0.0.100:50000/b1s/v1/U_SHOPIFY_MAPPING', 'data': {'Code': '44461198606402', 'Name': '44461198606402', 'U_Shopify_Type': 'variant_inventory', 'U_SAP_Code': 'FG-0000705', 'U_Shopify_Store': 'local', 'U_SAP_Type': 'item', 'CreateDate': '20250803'}, 'params': None}, 'response': None, 'status': None}
2025-08-03 13:40:50,320 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'U_SHOPIFY_MAPPING', 'request': None, 'response': {'status_code': 400, 'text': '{\n   "error" : {\n      "code" : -1000,\n      "message" : {\n         "lang" : "en-us",\n         "value" : "Property \'CreateDate\' of \'U_SHOPIFY_MAPPING\' is invalid"\n      }\n   }\n}\n'}, 'status': 'failure'}
2025-08-03 13:40:50,829 - sync_service - INFO - Processing product group: ('Morsi Shoes', 'local') with 2 items for store local
2025-08-03 13:40:50,832 - sync_service - INFO - API Call: {'service': 'shopify', 'endpoint': 'graphql_local', 'request': {'query': '\n        query GetProductByHandle($handle: String!) {\n            productByHandle(handle: $handle) {\n                id\n                title\n                handle\n                description\n                variants(first: 50) {\n                    edges {\n                        node {\n                            id\n                            sku\n                            price\n                            inventoryItem {\n                                id\n                            }\n                            selectedOptions {\n                                name\n                                value\n                            }\n                        }\n                    }\n                }\n            }\n        }\n        ', 'variables': {'handle': 'morsi-shoes'}}, 'response': None, 'status': None}
2025-08-03 13:40:51,358 - sync_service - INFO - API Call: {'service': 'shopify', 'endpoint': 'graphql_local', 'request': None, 'response': {'productByHandle': None}, 'status': 'success'}
2025-08-03 13:40:51,359 - sync_service - INFO - Product Morsi Shoes doesn't exist in store local, creating new product
2025-08-03 13:40:51,663 - sync_service - INFO - API log added to SAP: shopify - /admin/api/graphql_local - success
2025-08-03 13:40:51,666 - sync_service - INFO - API Call: {'service': 'shopify', 'endpoint': 'graphql_local', 'request': {'query': '\n        mutation productCreate($input: ProductInput!) {\n            productCreate(input: $input) {\n                product {\n                    id\n                    title\n                    handle\n                    variants(first: 50) {\n                        edges {\n                            node {\n                                id\n                                sku\n                                inventoryItem {\n                                    id\n                                }\n                                selectedOptions {\n                                    name\n                                    value\n                                }\n                            }\n                        }\n                    }\n                }\n                userErrors {\n                    field\n                    message\n                }\n            }\n        }\n        ', 'variables': {'input': {'title': 'Morsi Shoes', 'status': 'DRAFT', 'options': ['Color'], 'variants': [{'options': ['Green'], 'sku': 'FG-0000706', 'price': '1000.0', 'inventoryManagement': 'SHOPIFY', 'inventoryPolicy': 'DENY', 'taxable': False}, {'options': ['Beige'], 'sku': 'FG-0000707', 'price': '1000.0', 'inventoryManagement': 'SHOPIFY', 'inventoryPolicy': 'DENY', 'taxable': False}]}}}, 'response': None, 'status': None}
2025-08-03 13:40:52,503 - sync_service - INFO - API Call: {'service': 'shopify', 'endpoint': 'graphql_local', 'request': None, 'response': {'productCreate': {'product': {'id': 'gid://shopify/Product/7522714452034', 'title': 'Morsi Shoes', 'handle': 'morsi-shoes', 'variants': {'edges': [{'node': {'id': 'gid://shopify/ProductVariant/42360832557122', 'sku': 'FG-0000706', 'inventoryItem': {'id': 'gid://shopify/InventoryItem/44461198639170'}, 'selectedOptions': [{'name': 'Color', 'value': 'Green'}]}}, {'node': {'id': 'gid://shopify/ProductVariant/42360832589890', 'sku': 'FG-0000707', 'inventoryItem': {'id': 'gid://shopify/InventoryItem/44461198671938'}, 'selectedOptions': [{'name': 'Color', 'value': 'Beige'}]}}]}}, 'userErrors': []}}, 'status': 'success'}
2025-08-03 13:40:52,506 - sync_service - ERROR - Shopify full response for store local: {'msg': 'success', 'data': {'productCreate': {'product': {'id': 'gid://shopify/Product/7522714452034', 'title': 'Morsi Shoes', 'handle': 'morsi-shoes', 'variants': {'edges': [{'node': {'id': 'gid://shopify/ProductVariant/42360832557122', 'sku': 'FG-0000706', 'inventoryItem': {'id': 'gid://shopify/InventoryItem/44461198639170'}, 'selectedOptions': [{'name': 'Color', 'value': 'Green'}]}}, {'node': {'id': 'gid://shopify/ProductVariant/42360832589890', 'sku': 'FG-0000707', 'inventoryItem': {'id': 'gid://shopify/InventoryItem/44461198671938'}, 'selectedOptions': [{'name': 'Color', 'value': 'Beige'}]}}]}}, 'userErrors': []}}}
2025-08-03 13:40:52,806 - sync_service - INFO - API log added to SAP: shopify - /admin/api/graphql_local - success
2025-08-03 13:40:52,807 - sync_service - INFO - Successfully created product in store local
2025-08-03 13:40:52,808 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'U_SHOPIFY_MAPPING', 'request': {'method': 'POST', 'url': 'https://10.0.0.100:50000/b1s/v1/U_SHOPIFY_MAPPING', 'data': {'Code': '7522714452034', 'Name': '7522714452034', 'U_Shopify_Type': 'product', 'U_SAP_Code': 'Morsi Shoes', 'U_Shopify_Store': 'local', 'U_SAP_Type': 'item', 'CreateDate': '20250803'}, 'params': None}, 'response': None, 'status': None}
2025-08-03 13:40:53,094 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'U_SHOPIFY_MAPPING', 'request': None, 'response': {'status_code': 400, 'text': '{\n   "error" : {\n      "code" : -1000,\n      "message" : {\n         "lang" : "en-us",\n         "value" : "Property \'CreateDate\' of \'U_SHOPIFY_MAPPING\' is invalid"\n      }\n   }\n}\n'}, 'status': 'failure'}
2025-08-03 13:40:53,098 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'U_SHOPIFY_MAPPING', 'request': {'method': 'POST', 'url': 'https://10.0.0.100:50000/b1s/v1/U_SHOPIFY_MAPPING', 'data': {'Code': '42360832557122', 'Name': '42360832557122', 'U_Shopify_Type': 'variant', 'U_SAP_Code': 'FG-0000706', 'U_Shopify_Store': 'local', 'U_SAP_Type': 'item', 'CreateDate': '20250803'}, 'params': None}, 'response': None, 'status': None}
2025-08-03 13:40:53,387 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'U_SHOPIFY_MAPPING', 'request': None, 'response': {'status_code': 400, 'text': '{\n   "error" : {\n      "code" : -1000,\n      "message" : {\n         "lang" : "en-us",\n         "value" : "Property \'CreateDate\' of \'U_SHOPIFY_MAPPING\' is invalid"\n      }\n   }\n}\n'}, 'status': 'failure'}
2025-08-03 13:40:53,389 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'U_SHOPIFY_MAPPING', 'request': {'method': 'POST', 'url': 'https://10.0.0.100:50000/b1s/v1/U_SHOPIFY_MAPPING', 'data': {'Code': '44461198639170', 'Name': '44461198639170', 'U_Shopify_Type': 'variant_inventory', 'U_SAP_Code': 'FG-0000706', 'U_Shopify_Store': 'local', 'U_SAP_Type': 'item', 'CreateDate': '20250803'}, 'params': None}, 'response': None, 'status': None}
2025-08-03 13:40:53,698 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'U_SHOPIFY_MAPPING', 'request': None, 'response': {'status_code': 400, 'text': '{\n   "error" : {\n      "code" : -1000,\n      "message" : {\n         "lang" : "en-us",\n         "value" : "Property \'CreateDate\' of \'U_SHOPIFY_MAPPING\' is invalid"\n      }\n   }\n}\n'}, 'status': 'failure'}
2025-08-03 13:40:53,701 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'U_SHOPIFY_MAPPING', 'request': {'method': 'POST', 'url': 'https://10.0.0.100:50000/b1s/v1/U_SHOPIFY_MAPPING', 'data': {'Code': '42360832589890', 'Name': '42360832589890', 'U_Shopify_Type': 'variant', 'U_SAP_Code': 'FG-0000707', 'U_Shopify_Store': 'local', 'U_SAP_Type': 'item', 'CreateDate': '20250803'}, 'params': None}, 'response': None, 'status': None}
2025-08-03 13:40:53,989 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'U_SHOPIFY_MAPPING', 'request': None, 'response': {'status_code': 400, 'text': '{\n   "error" : {\n      "code" : -1000,\n      "message" : {\n         "lang" : "en-us",\n         "value" : "Property \'CreateDate\' of \'U_SHOPIFY_MAPPING\' is invalid"\n      }\n   }\n}\n'}, 'status': 'failure'}
2025-08-03 13:40:53,991 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'U_SHOPIFY_MAPPING', 'request': {'method': 'POST', 'url': 'https://10.0.0.100:50000/b1s/v1/U_SHOPIFY_MAPPING', 'data': {'Code': '44461198671938', 'Name': '44461198671938', 'U_Shopify_Type': 'variant_inventory', 'U_SAP_Code': 'FG-0000707', 'U_Shopify_Store': 'local', 'U_SAP_Type': 'item', 'CreateDate': '20250803'}, 'params': None}, 'response': None, 'status': None}
2025-08-03 13:40:54,294 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'U_SHOPIFY_MAPPING', 'request': None, 'response': {'status_code': 400, 'text': '{\n   "error" : {\n      "code" : -1000,\n      "message" : {\n         "lang" : "en-us",\n         "value" : "Property \'CreateDate\' of \'U_SHOPIFY_MAPPING\' is invalid"\n      }\n   }\n}\n'}, 'status': 'failure'}
2025-08-03 13:40:54,800 - sync_service - INFO - Sync Event: {'sync_type': 'multi_store_new_items_sap_to_shopify', 'items_processed': 5, 'success_count': 5, 'error_count': 1, 'details': None}
2025-08-03 13:40:54,803 - sync_service - INFO - Multi-store new items sync completed: 5 processed, 5 successful, 1 errors
2025-08-03 13:40:54,806 - sync_service - INFO - Starting stock change sync...
2025-08-03 13:40:54,808 - sync_service - INFO - Starting stock change sync using MASHURA_StockChangeB1SLQuery view
2025-08-03 13:40:54,809 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'view.svc/MASHURA_StockChangeB1SLQuery', 'request': {'method': 'GET', 'url': 'https://10.0.0.100:50000/b1s/v1/view.svc/MASHURA_StockChangeB1SLQuery', 'data': None, 'params': {'$top': 50}}, 'response': None, 'status': None}
2025-08-03 13:40:55,118 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'view.svc/MASHURA_StockChangeB1SLQuery', 'request': None, 'response': {'odata.metadata': 'https://10.0.0.100:50000/b1s/v1/view.svc/$metadata#MASHURA_StockChangeB1SLQuery', 'value': []}, 'status': 'success'}
2025-08-03 13:40:55,122 - sync_service - INFO - No stock changes found in the view.
2025-08-03 13:43:17,531 - sync_service - INFO - Initialized Shopify client for store: Local Store (local)
2025-08-03 13:43:17,563 - sync_service - INFO - Starting all syncs...
2025-08-03 13:43:17,565 - sync_service - INFO - Starting new items sync...
2025-08-03 13:43:17,566 - sync_service - INFO - Starting multi-store new items sync from SAP to Shopify
2025-08-03 13:43:17,567 - sync_service - INFO - Fetching new items for store: local
2025-08-03 13:43:17,567 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'login', 'request': {'company': 'JudeBenHalim_Test', 'user': 'manager'}, 'response': None, 'status': None}
2025-08-03 13:43:18,340 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'login', 'request': None, 'response': {'status': 'success'}, 'status': 'success'}
2025-08-03 13:43:18,341 - sync_service - INFO - SAP login successful
2025-08-03 13:43:18,341 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': "view.svc/MASHURA_New_ItemsB1SLQuery?$filter=Shopify_Store eq 'local'&$orderby=MainProduct", 'request': {'method': 'GET', 'url': "https://10.0.0.100:50000/b1s/v1/view.svc/MASHURA_New_ItemsB1SLQuery?$filter=Shopify_Store eq 'local'&$orderby=MainProduct", 'data': None, 'params': None}, 'response': None, 'status': None}
2025-08-03 13:43:19,032 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': "view.svc/MASHURA_New_ItemsB1SLQuery?$filter=Shopify_Store eq 'local'&$orderby=MainProduct", 'request': None, 'response': {'odata.metadata': 'https://10.0.0.100:50000/b1s/v1/view.svc/$metadata#MASHURA_New_ItemsB1SLQuery', 'value': [{'itemcode': 'FG-0000704', 'ItemName': 'Morsi Bracelet', 'MainProduct': None, 'Color': None, 'Price': 3200.0, 'Shopify_Store': 'local', 'Shopify_ProductCode': None, 'Status': 'new', 'Barcode': '645464644', 'id__': 1}, {'itemcode': 'FG-0000708', 'ItemName': 'Morsi Socks', 'MainProduct': None, 'Color': None, 'Price': 200.0, 'Shopify_Store': 'local', 'Shopify_ProductCode': None, 'Status': 'new', 'Barcode': None, 'id__': 2}, {'itemcode': 'FG-0000711', 'ItemName': 'Morsi Keyboard', 'MainProduct': None, 'Color': None, 'Price': 1000.0, 'Shopify_Store': 'local', 'Shopify_ProductCode': None, 'Status': 'new', 'Barcode': None, 'id__': 3}, {'itemcode': 'FG-0000709', 'ItemName': 'Morsi-Laptop-Black', 'MainProduct': 'Morsi Laptop', 'Color': 'Black', 'Price': 1000.0, 'Shopify_Store': 'local', 'Shopify_ProductCode': None, 'Status': 'new', 'Barcode': None, 'id__': 4}, {'itemcode': 'FG-0000710', 'ItemName': 'Morsi-Laptop-Grey', 'MainProduct': 'Morsi Laptop', 'Color': 'Grey', 'Price': 1000.0, 'Shopify_Store': 'local', 'Shopify_ProductCode': None, 'Status': 'new', 'Barcode': None, 'id__': 5}, {'itemcode': 'FG-0000702', 'ItemName': 'Morsi-Necklace-Black', 'MainProduct': 'Morsi Necklace', 'Color': 'Black', 'Price': 2500.0, 'Shopify_Store': 'local', 'Shopify_ProductCode': None, 'Status': 'new', 'Barcode': '2123243245', 'id__': 6}, {'itemcode': 'FG-0000703', 'ItemName': 'Morsi-Necklace-White', 'MainProduct': 'Morsi Necklace', 'Color': 'White', 'Price': 2500.0, 'Shopify_Store': 'local', 'Shopify_ProductCode': None, 'Status': 'new', 'Barcode': '242342342', 'id__': 7}, {'itemcode': 'FG-0000705', 'ItemName': 'Morsi-Necklace-Green', 'MainProduct': 'Morsi Necklace', 'Color': 'Green', 'Price': 2500.0, 'Shopify_Store': 'local', 'Shopify_ProductCode': None, 'Status': 'new', 'Barcode': None, 'id__': 8}, {'itemcode': 'FG-0000706', 'ItemName': 'Morsi-Shoes-Green', 'MainProduct': 'Morsi Shoes', 'Color': 'Green', 'Price': 1000.0, 'Shopify_Store': 'local', 'Shopify_ProductCode': None, 'Status': 'new', 'Barcode': None, 'id__': 9}, {'itemcode': 'FG-0000707', 'ItemName': 'Morsi-Shoes-Beige', 'MainProduct': 'Morsi Shoes', 'Color': 'Beige', 'Price': 1000.0, 'Shopify_Store': 'local', 'Shopify_ProductCode': None, 'Status': 'new', 'Barcode': None, 'id__': 10}]}, 'status': 'success'}
2025-08-03 13:43:19,035 - sync_service - INFO - Product group: ('FG-0000704', 'local') has 1 items
2025-08-03 13:43:19,037 - sync_service - INFO - Product group: ('FG-0000708', 'local') has 1 items
2025-08-03 13:43:19,039 - sync_service - INFO - Product group: ('FG-0000711', 'local') has 1 items
2025-08-03 13:43:19,040 - sync_service - INFO - Product group: ('Morsi Laptop', 'local') has 2 items
2025-08-03 13:43:19,040 - sync_service - INFO - Product group: ('Morsi Necklace', 'local') has 3 items
2025-08-03 13:43:19,041 - sync_service - INFO - Product group: ('Morsi Shoes', 'local') has 2 items
2025-08-03 13:43:19,041 - sync_service - INFO - Grouped 10 items into 6 product groups for store local
2025-08-03 13:43:19,041 - sync_service - INFO - Processing product group: ('FG-0000704', 'local') with 1 items for store local
2025-08-03 13:43:19,042 - sync_service - INFO - API Call: {'service': 'shopify', 'endpoint': 'graphql_local', 'request': {'query': '\n        query GetProductByHandle($handle: String!) {\n            productByHandle(handle: $handle) {\n                id\n                title\n                handle\n                description\n                variants(first: 50) {\n                    edges {\n                        node {\n                            id\n                            sku\n                            price\n                            inventoryItem {\n                                id\n                            }\n                            selectedOptions {\n                                name\n                                value\n                            }\n                        }\n                    }\n                }\n            }\n        }\n        ', 'variables': {'handle': 'default'}}, 'response': None, 'status': None}
2025-08-03 13:43:19,521 - sync_service - INFO - API Call: {'service': 'shopify', 'endpoint': 'graphql_local', 'request': None, 'response': {'productByHandle': None}, 'status': 'success'}
2025-08-03 13:43:19,522 - sync_service - INFO - Product None doesn't exist in store local, creating new product
2025-08-03 13:43:20,239 - sync_service - INFO - SAP logging client login successful
2025-08-03 13:43:20,936 - sync_service - INFO - API log added to SAP: shopify - /admin/api/graphql_local - success
2025-08-03 13:43:20,939 - sync_service - INFO - API Call: {'service': 'shopify', 'endpoint': 'graphql_local', 'request': {'query': '\n        mutation productCreate($input: ProductInput!) {\n            productCreate(input: $input) {\n                product {\n                    id\n                    title\n                    handle\n                    variants(first: 50) {\n                        edges {\n                            node {\n                                id\n                                sku\n                                inventoryItem {\n                                    id\n                                }\n                                selectedOptions {\n                                    name\n                                    value\n                                }\n                            }\n                        }\n                    }\n                }\n                userErrors {\n                    field\n                    message\n                }\n            }\n        }\n        ', 'variables': {'input': {'title': 'Morsi Bracelet', 'descriptionHtml': '', 'vendor': '', 'productType': 'Default', 'status': 'DRAFT', 'tags': [], 'variants': [{'sku': 'FG-0000704', 'price': '3200.0', 'inventoryPolicy': 'DENY', 'inventoryManagement': 'SHOPIFY', 'weight': 0.0, 'weightUnit': 'KILOGRAMS', 'taxable': False, 'barcode': '645464644'}], 'seo': {'title': 'Morsi Bracelet', 'description': ''}}}}, 'response': None, 'status': None}
2025-08-03 13:43:21,749 - sync_service - INFO - API Call: {'service': 'shopify', 'endpoint': 'graphql_local', 'request': None, 'response': {'productCreate': {'product': {'id': 'gid://shopify/Product/7522715926594', 'title': 'Morsi Bracelet', 'handle': 'morsi-bracelet', 'variants': {'edges': [{'node': {'id': 'gid://shopify/ProductVariant/42360835342402', 'sku': 'FG-0000704', 'inventoryItem': {'id': 'gid://shopify/InventoryItem/44461201424450'}, 'selectedOptions': [{'name': 'Title', 'value': 'Default Title'}]}}]}}, 'userErrors': []}}, 'status': 'success'}
2025-08-03 13:43:21,750 - sync_service - ERROR - Shopify full response for store local: {'msg': 'success', 'data': {'productCreate': {'product': {'id': 'gid://shopify/Product/7522715926594', 'title': 'Morsi Bracelet', 'handle': 'morsi-bracelet', 'variants': {'edges': [{'node': {'id': 'gid://shopify/ProductVariant/42360835342402', 'sku': 'FG-0000704', 'inventoryItem': {'id': 'gid://shopify/InventoryItem/44461201424450'}, 'selectedOptions': [{'name': 'Title', 'value': 'Default Title'}]}}]}}, 'userErrors': []}}}
2025-08-03 13:43:22,451 - sync_service - INFO - API log added to SAP: shopify - /admin/api/graphql_local - success
2025-08-03 13:43:22,453 - sync_service - INFO - Successfully created product in store local
2025-08-03 13:43:22,456 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'U_SHOPIFY_MAPPING', 'request': {'method': 'POST', 'url': 'https://10.0.0.100:50000/b1s/v1/U_SHOPIFY_MAPPING', 'data': {'Code': '7522715926594', 'Name': '7522715926594', 'U_Shopify_Type': 'product', 'U_SAP_Code': 'FG-0000704', 'U_Shopify_Store': 'local', 'U_SAP_Type': 'item', 'U_CreateDate': '20250803'}, 'params': None}, 'response': None, 'status': None}
2025-08-03 13:43:23,171 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'U_SHOPIFY_MAPPING', 'request': None, 'response': {'odata.metadata': 'https://10.0.0.100:50000/b1s/v1/$metadata#U_SHOPIFY_MAPPING/@Element', 'Code': '7522715926594', 'Name': '7522715926594', 'U_SAP_Code': 'FG-0000704', 'U_SAP_Type': 'item', 'U_Shopify_Type': 'product', 'U_Shopify_Store': 'local', 'U_CreateDate': None}, 'status': 'success'}
2025-08-03 13:43:23,175 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'U_SHOPIFY_MAPPING', 'request': {'method': 'POST', 'url': 'https://10.0.0.100:50000/b1s/v1/U_SHOPIFY_MAPPING', 'data': {'Code': '42360835342402', 'Name': '42360835342402', 'U_Shopify_Type': 'variant', 'U_SAP_Code': 'FG-0000704', 'U_Shopify_Store': 'local', 'U_SAP_Type': 'item', 'U_CreateDate': '20250803'}, 'params': None}, 'response': None, 'status': None}
2025-08-03 13:43:23,888 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'U_SHOPIFY_MAPPING', 'request': None, 'response': {'odata.metadata': 'https://10.0.0.100:50000/b1s/v1/$metadata#U_SHOPIFY_MAPPING/@Element', 'Code': '42360835342402', 'Name': '42360835342402', 'U_SAP_Code': 'FG-0000704', 'U_SAP_Type': 'item', 'U_Shopify_Type': 'variant', 'U_Shopify_Store': 'local', 'U_CreateDate': None}, 'status': 'success'}
2025-08-03 13:43:23,889 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'U_SHOPIFY_MAPPING', 'request': {'method': 'POST', 'url': 'https://10.0.0.100:50000/b1s/v1/U_SHOPIFY_MAPPING', 'data': {'Code': '44461201424450', 'Name': '44461201424450', 'U_Shopify_Type': 'variant_inventory', 'U_SAP_Code': 'FG-0000704', 'U_Shopify_Store': 'local', 'U_SAP_Type': 'item', 'U_CreateDate': '20250803'}, 'params': None}, 'response': None, 'status': None}
2025-08-03 13:43:24,568 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'U_SHOPIFY_MAPPING', 'request': None, 'response': {'odata.metadata': 'https://10.0.0.100:50000/b1s/v1/$metadata#U_SHOPIFY_MAPPING/@Element', 'Code': '44461201424450', 'Name': '44461201424450', 'U_SAP_Code': 'FG-0000704', 'U_SAP_Type': 'item', 'U_Shopify_Type': 'variant_inventory', 'U_Shopify_Store': 'local', 'U_CreateDate': None}, 'status': 'success'}
2025-08-03 13:43:25,076 - sync_service - INFO - Processing product group: ('FG-0000708', 'local') with 1 items for store local
2025-08-03 13:43:25,081 - sync_service - INFO - API Call: {'service': 'shopify', 'endpoint': 'graphql_local', 'request': {'query': '\n        query GetProductByHandle($handle: String!) {\n            productByHandle(handle: $handle) {\n                id\n                title\n                handle\n                description\n                variants(first: 50) {\n                    edges {\n                        node {\n                            id\n                            sku\n                            price\n                            inventoryItem {\n                                id\n                            }\n                            selectedOptions {\n                                name\n                                value\n                            }\n                        }\n                    }\n                }\n            }\n        }\n        ', 'variables': {'handle': 'default'}}, 'response': None, 'status': None}
2025-08-03 13:43:25,572 - sync_service - INFO - API Call: {'service': 'shopify', 'endpoint': 'graphql_local', 'request': None, 'response': {'productByHandle': None}, 'status': 'success'}
2025-08-03 13:43:25,573 - sync_service - INFO - Product None doesn't exist in store local, creating new product
2025-08-03 13:43:26,238 - sync_service - INFO - API log added to SAP: shopify - /admin/api/graphql_local - success
2025-08-03 13:43:26,238 - sync_service - INFO - API Call: {'service': 'shopify', 'endpoint': 'graphql_local', 'request': {'query': '\n        mutation productCreate($input: ProductInput!) {\n            productCreate(input: $input) {\n                product {\n                    id\n                    title\n                    handle\n                    variants(first: 50) {\n                        edges {\n                            node {\n                                id\n                                sku\n                                inventoryItem {\n                                    id\n                                }\n                                selectedOptions {\n                                    name\n                                    value\n                                }\n                            }\n                        }\n                    }\n                }\n                userErrors {\n                    field\n                    message\n                }\n            }\n        }\n        ', 'variables': {'input': {'title': 'Morsi Socks', 'descriptionHtml': '', 'vendor': '', 'productType': 'Default', 'status': 'DRAFT', 'tags': [], 'variants': [{'sku': 'FG-0000708', 'price': '200.0', 'inventoryPolicy': 'DENY', 'inventoryManagement': 'SHOPIFY', 'weight': 0.0, 'weightUnit': 'KILOGRAMS', 'taxable': False}], 'seo': {'title': 'Morsi Socks', 'description': ''}}}}, 'response': None, 'status': None}
2025-08-03 13:43:30,944 - sync_service - INFO - API Call: {'service': 'shopify', 'endpoint': 'graphql_local', 'request': None, 'response': {'productCreate': {'product': {'id': 'gid://shopify/Product/7522715959362', 'title': 'Morsi Socks', 'handle': 'morsi-socks', 'variants': {'edges': [{'node': {'id': 'gid://shopify/ProductVariant/42360835375170', 'sku': 'FG-0000708', 'inventoryItem': {'id': 'gid://shopify/InventoryItem/44461201457218'}, 'selectedOptions': [{'name': 'Title', 'value': 'Default Title'}]}}]}}, 'userErrors': []}}, 'status': 'success'}
2025-08-03 13:43:30,947 - sync_service - ERROR - Shopify full response for store local: {'msg': 'success', 'data': {'productCreate': {'product': {'id': 'gid://shopify/Product/7522715959362', 'title': 'Morsi Socks', 'handle': 'morsi-socks', 'variants': {'edges': [{'node': {'id': 'gid://shopify/ProductVariant/42360835375170', 'sku': 'FG-0000708', 'inventoryItem': {'id': 'gid://shopify/InventoryItem/44461201457218'}, 'selectedOptions': [{'name': 'Title', 'value': 'Default Title'}]}}]}}, 'userErrors': []}}}
2025-08-03 13:43:31,658 - sync_service - INFO - API log added to SAP: shopify - /admin/api/graphql_local - success
2025-08-03 13:43:31,658 - sync_service - INFO - Successfully created product in store local
2025-08-03 13:43:31,659 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'U_SHOPIFY_MAPPING', 'request': {'method': 'POST', 'url': 'https://10.0.0.100:50000/b1s/v1/U_SHOPIFY_MAPPING', 'data': {'Code': '7522715959362', 'Name': '7522715959362', 'U_Shopify_Type': 'product', 'U_SAP_Code': 'FG-0000708', 'U_Shopify_Store': 'local', 'U_SAP_Type': 'item', 'U_CreateDate': '20250803'}, 'params': None}, 'response': None, 'status': None}
2025-08-03 13:43:32,330 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'U_SHOPIFY_MAPPING', 'request': None, 'response': {'odata.metadata': 'https://10.0.0.100:50000/b1s/v1/$metadata#U_SHOPIFY_MAPPING/@Element', 'Code': '7522715959362', 'Name': '7522715959362', 'U_SAP_Code': 'FG-0000708', 'U_SAP_Type': 'item', 'U_Shopify_Type': 'product', 'U_Shopify_Store': 'local', 'U_CreateDate': None}, 'status': 'success'}
2025-08-03 13:43:32,334 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'U_SHOPIFY_MAPPING', 'request': {'method': 'POST', 'url': 'https://10.0.0.100:50000/b1s/v1/U_SHOPIFY_MAPPING', 'data': {'Code': '42360835375170', 'Name': '42360835375170', 'U_Shopify_Type': 'variant', 'U_SAP_Code': 'FG-0000708', 'U_Shopify_Store': 'local', 'U_SAP_Type': 'item', 'U_CreateDate': '20250803'}, 'params': None}, 'response': None, 'status': None}
2025-08-03 13:43:33,001 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'U_SHOPIFY_MAPPING', 'request': None, 'response': {'odata.metadata': 'https://10.0.0.100:50000/b1s/v1/$metadata#U_SHOPIFY_MAPPING/@Element', 'Code': '42360835375170', 'Name': '42360835375170', 'U_SAP_Code': 'FG-0000708', 'U_SAP_Type': 'item', 'U_Shopify_Type': 'variant', 'U_Shopify_Store': 'local', 'U_CreateDate': None}, 'status': 'success'}
2025-08-03 13:43:33,005 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'U_SHOPIFY_MAPPING', 'request': {'method': 'POST', 'url': 'https://10.0.0.100:50000/b1s/v1/U_SHOPIFY_MAPPING', 'data': {'Code': '44461201457218', 'Name': '44461201457218', 'U_Shopify_Type': 'variant_inventory', 'U_SAP_Code': 'FG-0000708', 'U_Shopify_Store': 'local', 'U_SAP_Type': 'item', 'U_CreateDate': '20250803'}, 'params': None}, 'response': None, 'status': None}
2025-08-03 13:43:33,673 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'U_SHOPIFY_MAPPING', 'request': None, 'response': {'odata.metadata': 'https://10.0.0.100:50000/b1s/v1/$metadata#U_SHOPIFY_MAPPING/@Element', 'Code': '44461201457218', 'Name': '44461201457218', 'U_SAP_Code': 'FG-0000708', 'U_SAP_Type': 'item', 'U_Shopify_Type': 'variant_inventory', 'U_Shopify_Store': 'local', 'U_CreateDate': None}, 'status': 'success'}
2025-08-03 13:43:34,180 - sync_service - INFO - Processing product group: ('FG-0000711', 'local') with 1 items for store local
2025-08-03 13:43:34,182 - sync_service - INFO - API Call: {'service': 'shopify', 'endpoint': 'graphql_local', 'request': {'query': '\n        query GetProductByHandle($handle: String!) {\n            productByHandle(handle: $handle) {\n                id\n                title\n                handle\n                description\n                variants(first: 50) {\n                    edges {\n                        node {\n                            id\n                            sku\n                            price\n                            inventoryItem {\n                                id\n                            }\n                            selectedOptions {\n                                name\n                                value\n                            }\n                        }\n                    }\n                }\n            }\n        }\n        ', 'variables': {'handle': 'default'}}, 'response': None, 'status': None}
2025-08-03 13:43:34,637 - sync_service - INFO - API Call: {'service': 'shopify', 'endpoint': 'graphql_local', 'request': None, 'response': {'productByHandle': None}, 'status': 'success'}
2025-08-03 13:43:34,639 - sync_service - INFO - Product None doesn't exist in store local, creating new product
2025-08-03 13:43:35,301 - sync_service - INFO - API log added to SAP: shopify - /admin/api/graphql_local - success
2025-08-03 13:43:35,302 - sync_service - INFO - API Call: {'service': 'shopify', 'endpoint': 'graphql_local', 'request': {'query': '\n        mutation productCreate($input: ProductInput!) {\n            productCreate(input: $input) {\n                product {\n                    id\n                    title\n                    handle\n                    variants(first: 50) {\n                        edges {\n                            node {\n                                id\n                                sku\n                                inventoryItem {\n                                    id\n                                }\n                                selectedOptions {\n                                    name\n                                    value\n                                }\n                            }\n                        }\n                    }\n                }\n                userErrors {\n                    field\n                    message\n                }\n            }\n        }\n        ', 'variables': {'input': {'title': 'Morsi Keyboard', 'descriptionHtml': '', 'vendor': '', 'productType': 'Default', 'status': 'DRAFT', 'tags': [], 'variants': [{'sku': 'FG-0000711', 'price': '1000.0', 'inventoryPolicy': 'DENY', 'inventoryManagement': 'SHOPIFY', 'weight': 0.0, 'weightUnit': 'KILOGRAMS', 'taxable': False}], 'seo': {'title': 'Morsi Keyboard', 'description': ''}}}}, 'response': None, 'status': None}
2025-08-03 13:43:45,309 - sync_service - ERROR - GraphQL query error for store local: 
2025-08-03 13:43:45,310 - sync_service - ERROR - Shopify full response for store local: {'msg': 'failure', 'error': 'GraphQL query error for store local: '}
2025-08-03 13:43:45,975 - sync_service - INFO - API log added to SAP: shopify - /admin/api/graphql_local - failure
2025-08-03 13:43:45,976 - sync_service - ERROR - Failed to create product in store local: GraphQL query error for store local: 
2025-08-03 13:43:45,978 - sync_service - INFO - Processing product group: ('Morsi Laptop', 'local') with 2 items for store local
2025-08-03 13:43:45,980 - sync_service - INFO - API Call: {'service': 'shopify', 'endpoint': 'graphql_local', 'request': {'query': '\n        query GetProductByHandle($handle: String!) {\n            productByHandle(handle: $handle) {\n                id\n                title\n                handle\n                description\n                variants(first: 50) {\n                    edges {\n                        node {\n                            id\n                            sku\n                            price\n                            inventoryItem {\n                                id\n                            }\n                            selectedOptions {\n                                name\n                                value\n                            }\n                        }\n                    }\n                }\n            }\n        }\n        ', 'variables': {'handle': 'morsi-laptop'}}, 'response': None, 'status': None}
2025-08-03 13:43:46,452 - sync_service - INFO - API Call: {'service': 'shopify', 'endpoint': 'graphql_local', 'request': None, 'response': {'productByHandle': None}, 'status': 'success'}
2025-08-03 13:43:46,454 - sync_service - INFO - Product Morsi Laptop doesn't exist in store local, creating new product
2025-08-03 13:43:47,077 - sync_service - INFO - API log added to SAP: shopify - /admin/api/graphql_local - success
2025-08-03 13:43:47,079 - sync_service - INFO - API Call: {'service': 'shopify', 'endpoint': 'graphql_local', 'request': {'query': '\n        mutation productCreate($input: ProductInput!) {\n            productCreate(input: $input) {\n                product {\n                    id\n                    title\n                    handle\n                    variants(first: 50) {\n                        edges {\n                            node {\n                                id\n                                sku\n                                inventoryItem {\n                                    id\n                                }\n                                selectedOptions {\n                                    name\n                                    value\n                                }\n                            }\n                        }\n                    }\n                }\n                userErrors {\n                    field\n                    message\n                }\n            }\n        }\n        ', 'variables': {'input': {'title': 'Morsi Laptop', 'status': 'DRAFT', 'options': ['Color'], 'variants': [{'options': ['Black'], 'sku': 'FG-0000709', 'price': '1000.0', 'inventoryManagement': 'SHOPIFY', 'inventoryPolicy': 'DENY', 'taxable': False}, {'options': ['Gray'], 'sku': 'FG-0000710', 'price': '1000.0', 'inventoryManagement': 'SHOPIFY', 'inventoryPolicy': 'DENY', 'taxable': False}]}}}, 'response': None, 'status': None}
2025-08-03 13:43:47,884 - sync_service - INFO - API Call: {'service': 'shopify', 'endpoint': 'graphql_local', 'request': None, 'response': {'productCreate': {'product': {'id': 'gid://shopify/Product/7522716254274', 'title': 'Morsi Laptop', 'handle': 'morsi-laptop', 'variants': {'edges': [{'node': {'id': 'gid://shopify/ProductVariant/42360835833922', 'sku': 'FG-0000709', 'inventoryItem': {'id': 'gid://shopify/InventoryItem/44461201915970'}, 'selectedOptions': [{'name': 'Color', 'value': 'Black'}]}}, {'node': {'id': 'gid://shopify/ProductVariant/42360835866690', 'sku': 'FG-0000710', 'inventoryItem': {'id': 'gid://shopify/InventoryItem/44461201948738'}, 'selectedOptions': [{'name': 'Color', 'value': 'Gray'}]}}]}}, 'userErrors': []}}, 'status': 'success'}
2025-08-03 13:43:47,885 - sync_service - ERROR - Shopify full response for store local: {'msg': 'success', 'data': {'productCreate': {'product': {'id': 'gid://shopify/Product/7522716254274', 'title': 'Morsi Laptop', 'handle': 'morsi-laptop', 'variants': {'edges': [{'node': {'id': 'gid://shopify/ProductVariant/42360835833922', 'sku': 'FG-0000709', 'inventoryItem': {'id': 'gid://shopify/InventoryItem/44461201915970'}, 'selectedOptions': [{'name': 'Color', 'value': 'Black'}]}}, {'node': {'id': 'gid://shopify/ProductVariant/42360835866690', 'sku': 'FG-0000710', 'inventoryItem': {'id': 'gid://shopify/InventoryItem/44461201948738'}, 'selectedOptions': [{'name': 'Color', 'value': 'Gray'}]}}]}}, 'userErrors': []}}}
2025-08-03 13:43:48,166 - sync_service - INFO - API log added to SAP: shopify - /admin/api/graphql_local - success
2025-08-03 13:43:48,167 - sync_service - INFO - Successfully created product in store local
2025-08-03 13:43:48,168 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'U_SHOPIFY_MAPPING', 'request': {'method': 'POST', 'url': 'https://10.0.0.100:50000/b1s/v1/U_SHOPIFY_MAPPING', 'data': {'Code': '7522716254274', 'Name': '7522716254274', 'U_Shopify_Type': 'product', 'U_SAP_Code': 'Morsi Laptop', 'U_Shopify_Store': 'local', 'U_SAP_Type': 'item', 'U_CreateDate': '20250803'}, 'params': None}, 'response': None, 'status': None}
2025-08-03 13:43:48,457 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'U_SHOPIFY_MAPPING', 'request': None, 'response': {'odata.metadata': 'https://10.0.0.100:50000/b1s/v1/$metadata#U_SHOPIFY_MAPPING/@Element', 'Code': '7522716254274', 'Name': '7522716254274', 'U_SAP_Code': 'Morsi Laptop', 'U_SAP_Type': 'item', 'U_Shopify_Type': 'product', 'U_Shopify_Store': 'local', 'U_CreateDate': None}, 'status': 'success'}
2025-08-03 13:43:48,458 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'U_SHOPIFY_MAPPING', 'request': {'method': 'POST', 'url': 'https://10.0.0.100:50000/b1s/v1/U_SHOPIFY_MAPPING', 'data': {'Code': '42360835833922', 'Name': '42360835833922', 'U_Shopify_Type': 'variant', 'U_SAP_Code': 'FG-0000709', 'U_Shopify_Store': 'local', 'U_SAP_Type': 'item', 'U_CreateDate': '20250803'}, 'params': None}, 'response': None, 'status': None}
2025-08-03 13:43:48,740 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'U_SHOPIFY_MAPPING', 'request': None, 'response': {'odata.metadata': 'https://10.0.0.100:50000/b1s/v1/$metadata#U_SHOPIFY_MAPPING/@Element', 'Code': '42360835833922', 'Name': '42360835833922', 'U_SAP_Code': 'FG-0000709', 'U_SAP_Type': 'item', 'U_Shopify_Type': 'variant', 'U_Shopify_Store': 'local', 'U_CreateDate': None}, 'status': 'success'}
2025-08-03 13:43:48,741 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'U_SHOPIFY_MAPPING', 'request': {'method': 'POST', 'url': 'https://10.0.0.100:50000/b1s/v1/U_SHOPIFY_MAPPING', 'data': {'Code': '44461201915970', 'Name': '44461201915970', 'U_Shopify_Type': 'variant_inventory', 'U_SAP_Code': 'FG-0000709', 'U_Shopify_Store': 'local', 'U_SAP_Type': 'item', 'U_CreateDate': '20250803'}, 'params': None}, 'response': None, 'status': None}
2025-08-03 13:44:07,630 - sync_service - INFO - Initialized Shopify client for store: Local Store (local)
2025-08-03 13:44:07,651 - sync_service - INFO - Starting all syncs...
2025-08-03 13:44:07,653 - sync_service - INFO - Starting new items sync...
2025-08-03 13:44:07,655 - sync_service - INFO - Starting multi-store new items sync from SAP to Shopify
2025-08-03 13:44:07,655 - sync_service - INFO - Fetching new items for store: local
2025-08-03 13:44:07,656 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'login', 'request': {'company': 'JudeBenHalim_Test', 'user': 'manager'}, 'response': None, 'status': None}
2025-08-03 13:44:08,381 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'login', 'request': None, 'response': {'status': 'success'}, 'status': 'success'}
2025-08-03 13:44:08,382 - sync_service - INFO - SAP login successful
2025-08-03 13:44:08,386 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': "view.svc/MASHURA_New_ItemsB1SLQuery?$filter=Shopify_Store eq 'local'&$orderby=MainProduct", 'request': {'method': 'GET', 'url': "https://10.0.0.100:50000/b1s/v1/view.svc/MASHURA_New_ItemsB1SLQuery?$filter=Shopify_Store eq 'local'&$orderby=MainProduct", 'data': None, 'params': None}, 'response': None, 'status': None}
2025-08-03 13:44:09,071 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': "view.svc/MASHURA_New_ItemsB1SLQuery?$filter=Shopify_Store eq 'local'&$orderby=MainProduct", 'request': None, 'response': {'odata.metadata': 'https://10.0.0.100:50000/b1s/v1/view.svc/$metadata#MASHURA_New_ItemsB1SLQuery', 'value': [{'itemcode': 'FG-0000711', 'ItemName': 'Morsi Keyboard', 'MainProduct': None, 'Color': None, 'Price': 1000.0, 'Shopify_Store': 'local', 'Shopify_ProductCode': None, 'Status': 'new', 'Barcode': None, 'id__': 1}, {'itemcode': 'FG-0000710', 'ItemName': 'Morsi-Laptop-Grey', 'MainProduct': 'Morsi Laptop', 'Color': 'Grey', 'Price': 1000.0, 'Shopify_Store': 'local', 'Shopify_ProductCode': '7522716254274', 'Status': 'existing', 'Barcode': None, 'id__': 2}, {'itemcode': 'FG-0000702', 'ItemName': 'Morsi-Necklace-Black', 'MainProduct': 'Morsi Necklace', 'Color': 'Black', 'Price': 2500.0, 'Shopify_Store': 'local', 'Shopify_ProductCode': None, 'Status': 'new', 'Barcode': '2123243245', 'id__': 3}, {'itemcode': 'FG-0000703', 'ItemName': 'Morsi-Necklace-White', 'MainProduct': 'Morsi Necklace', 'Color': 'White', 'Price': 2500.0, 'Shopify_Store': 'local', 'Shopify_ProductCode': None, 'Status': 'new', 'Barcode': '242342342', 'id__': 4}, {'itemcode': 'FG-0000705', 'ItemName': 'Morsi-Necklace-Green', 'MainProduct': 'Morsi Necklace', 'Color': 'Green', 'Price': 2500.0, 'Shopify_Store': 'local', 'Shopify_ProductCode': None, 'Status': 'new', 'Barcode': None, 'id__': 5}, {'itemcode': 'FG-0000706', 'ItemName': 'Morsi-Shoes-Green', 'MainProduct': 'Morsi Shoes', 'Color': 'Green', 'Price': 1000.0, 'Shopify_Store': 'local', 'Shopify_ProductCode': None, 'Status': 'new', 'Barcode': None, 'id__': 6}, {'itemcode': 'FG-0000707', 'ItemName': 'Morsi-Shoes-Beige', 'MainProduct': 'Morsi Shoes', 'Color': 'Beige', 'Price': 1000.0, 'Shopify_Store': 'local', 'Shopify_ProductCode': None, 'Status': 'new', 'Barcode': None, 'id__': 7}]}, 'status': 'success'}
2025-08-03 13:44:09,074 - sync_service - INFO - Product group: ('FG-0000711', 'local') has 1 items
2025-08-03 13:44:09,076 - sync_service - INFO - Product group: ('Morsi Laptop', 'local') has 1 items
2025-08-03 13:44:09,076 - sync_service - INFO - Product group: ('Morsi Necklace', 'local') has 3 items
2025-08-03 13:44:09,077 - sync_service - INFO - Product group: ('Morsi Shoes', 'local') has 2 items
2025-08-03 13:44:09,077 - sync_service - INFO - Grouped 7 items into 4 product groups for store local
2025-08-03 13:44:09,078 - sync_service - INFO - Processing product group: ('FG-0000711', 'local') with 1 items for store local
2025-08-03 13:44:09,078 - sync_service - INFO - API Call: {'service': 'shopify', 'endpoint': 'graphql_local', 'request': {'query': '\n        query GetProductByHandle($handle: String!) {\n            productByHandle(handle: $handle) {\n                id\n                title\n                handle\n                description\n                variants(first: 50) {\n                    edges {\n                        node {\n                            id\n                            sku\n                            price\n                            inventoryItem {\n                                id\n                            }\n                            selectedOptions {\n                                name\n                                value\n                            }\n                        }\n                    }\n                }\n            }\n        }\n        ', 'variables': {'handle': 'default'}}, 'response': None, 'status': None}
2025-08-03 13:44:19,095 - sync_service - ERROR - GraphQL query error for store local: 
2025-08-03 13:44:19,096 - sync_service - INFO - Product None doesn't exist in store local, creating new product
2025-08-03 13:44:19,890 - sync_service - INFO - SAP logging client login successful
2025-08-03 13:44:20,564 - sync_service - INFO - API log added to SAP: shopify - /admin/api/graphql_local - success
2025-08-03 13:44:20,566 - sync_service - INFO - API Call: {'service': 'shopify', 'endpoint': 'graphql_local', 'request': {'query': '\n        mutation productCreate($input: ProductInput!) {\n            productCreate(input: $input) {\n                product {\n                    id\n                    title\n                    handle\n                    variants(first: 50) {\n                        edges {\n                            node {\n                                id\n                                sku\n                                inventoryItem {\n                                    id\n                                }\n                                selectedOptions {\n                                    name\n                                    value\n                                }\n                            }\n                        }\n                    }\n                }\n                userErrors {\n                    field\n                    message\n                }\n            }\n        }\n        ', 'variables': {'input': {'title': 'Morsi Keyboard', 'descriptionHtml': '', 'vendor': '', 'productType': 'Default', 'status': 'DRAFT', 'tags': [], 'variants': [{'sku': 'FG-0000711', 'price': '1000.0', 'inventoryPolicy': 'DENY', 'inventoryManagement': 'SHOPIFY', 'weight': 0.0, 'weightUnit': 'KILOGRAMS', 'taxable': False}], 'seo': {'title': 'Morsi Keyboard', 'description': ''}}}}, 'response': None, 'status': None}
2025-08-03 13:44:21,390 - sync_service - INFO - API Call: {'service': 'shopify', 'endpoint': 'graphql_local', 'request': None, 'response': {'productCreate': {'product': {'id': 'gid://shopify/Product/7522716713026', 'title': 'Morsi Keyboard', 'handle': 'morsi-keyboard', 'variants': {'edges': [{'node': {'id': 'gid://shopify/ProductVariant/42360836685890', 'sku': 'FG-0000711', 'inventoryItem': {'id': 'gid://shopify/InventoryItem/44461202767938'}, 'selectedOptions': [{'name': 'Title', 'value': 'Default Title'}]}}]}}, 'userErrors': []}}, 'status': 'success'}
2025-08-03 13:44:21,393 - sync_service - ERROR - Shopify full response for store local: {'msg': 'success', 'data': {'productCreate': {'product': {'id': 'gid://shopify/Product/7522716713026', 'title': 'Morsi Keyboard', 'handle': 'morsi-keyboard', 'variants': {'edges': [{'node': {'id': 'gid://shopify/ProductVariant/42360836685890', 'sku': 'FG-0000711', 'inventoryItem': {'id': 'gid://shopify/InventoryItem/44461202767938'}, 'selectedOptions': [{'name': 'Title', 'value': 'Default Title'}]}}]}}, 'userErrors': []}}}
2025-08-03 13:44:22,056 - sync_service - INFO - API log added to SAP: shopify - /admin/api/graphql_local - success
2025-08-03 13:44:22,058 - sync_service - INFO - Successfully created product in store local
2025-08-03 13:44:22,060 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'U_SHOPIFY_MAPPING', 'request': {'method': 'POST', 'url': 'https://10.0.0.100:50000/b1s/v1/U_SHOPIFY_MAPPING', 'data': {'Code': '7522716713026', 'Name': '7522716713026', 'U_Shopify_Type': 'product', 'U_SAP_Code': 'FG-0000711', 'U_Shopify_Store': 'local', 'U_SAP_Type': 'item', 'U_CreateDate': '20250803'}, 'params': None}, 'response': None, 'status': None}
2025-08-03 13:44:22,741 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'U_SHOPIFY_MAPPING', 'request': None, 'response': {'odata.metadata': 'https://10.0.0.100:50000/b1s/v1/$metadata#U_SHOPIFY_MAPPING/@Element', 'Code': '7522716713026', 'Name': '7522716713026', 'U_SAP_Code': 'FG-0000711', 'U_SAP_Type': 'item', 'U_Shopify_Type': 'product', 'U_Shopify_Store': 'local', 'U_CreateDate': None}, 'status': 'success'}
2025-08-03 13:44:22,749 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'U_SHOPIFY_MAPPING', 'request': {'method': 'POST', 'url': 'https://10.0.0.100:50000/b1s/v1/U_SHOPIFY_MAPPING', 'data': {'Code': '42360836685890', 'Name': '42360836685890', 'U_Shopify_Type': 'variant', 'U_SAP_Code': 'FG-0000711', 'U_Shopify_Store': 'local', 'U_SAP_Type': 'item', 'U_CreateDate': '20250803'}, 'params': None}, 'response': None, 'status': None}
2025-08-03 13:44:23,418 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'U_SHOPIFY_MAPPING', 'request': None, 'response': {'odata.metadata': 'https://10.0.0.100:50000/b1s/v1/$metadata#U_SHOPIFY_MAPPING/@Element', 'Code': '42360836685890', 'Name': '42360836685890', 'U_SAP_Code': 'FG-0000711', 'U_SAP_Type': 'item', 'U_Shopify_Type': 'variant', 'U_Shopify_Store': 'local', 'U_CreateDate': None}, 'status': 'success'}
2025-08-03 13:44:23,421 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'U_SHOPIFY_MAPPING', 'request': {'method': 'POST', 'url': 'https://10.0.0.100:50000/b1s/v1/U_SHOPIFY_MAPPING', 'data': {'Code': '44461202767938', 'Name': '44461202767938', 'U_Shopify_Type': 'variant_inventory', 'U_SAP_Code': 'FG-0000711', 'U_Shopify_Store': 'local', 'U_SAP_Type': 'item', 'U_CreateDate': '20250803'}, 'params': None}, 'response': None, 'status': None}
2025-08-03 13:44:24,089 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'U_SHOPIFY_MAPPING', 'request': None, 'response': {'odata.metadata': 'https://10.0.0.100:50000/b1s/v1/$metadata#U_SHOPIFY_MAPPING/@Element', 'Code': '44461202767938', 'Name': '44461202767938', 'U_SAP_Code': 'FG-0000711', 'U_SAP_Type': 'item', 'U_Shopify_Type': 'variant_inventory', 'U_Shopify_Store': 'local', 'U_CreateDate': None}, 'status': 'success'}
2025-08-03 13:44:24,595 - sync_service - INFO - Processing product group: ('Morsi Laptop', 'local') with 1 items for store local
2025-08-03 13:44:24,597 - sync_service - INFO - Found existing Shopify product ID: 7522716254274 for Morsi Laptop
2025-08-03 13:44:24,598 - sync_service - INFO - Product Morsi Laptop already exists in store local, adding variants
2025-08-03 13:44:24,600 - sync_service - INFO - API Call: {'service': 'shopify', 'endpoint': 'graphql_local', 'request': {'query': '\n        query GetProduct($id: ID!) {\n            product(id: $id) {\n                id\n                title\n                handle\n                description\n                variants(first: 50) {\n                    edges {\n                        node {\n                            id\n                            sku\n                            price\n                            inventoryItem {\n                                id\n                            }\n                            selectedOptions {\n                                name\n                                value\n                            }\n                        }\n                    }\n                }\n            }\n        }\n        ', 'variables': {'id': 'gid://shopify/Product/7522716254274'}}, 'response': None, 'status': None}
2025-08-03 13:44:25,078 - sync_service - INFO - API Call: {'service': 'shopify', 'endpoint': 'graphql_local', 'request': None, 'response': {'product': {'id': 'gid://shopify/Product/7522716254274', 'title': 'Morsi Laptop', 'handle': 'morsi-laptop', 'description': '', 'variants': {'edges': [{'node': {'id': 'gid://shopify/ProductVariant/42360835833922', 'sku': 'FG-0000709', 'price': '1000.00', 'inventoryItem': {'id': 'gid://shopify/InventoryItem/44461201915970'}, 'selectedOptions': [{'name': 'Color', 'value': 'Black'}]}}, {'node': {'id': 'gid://shopify/ProductVariant/42360835866690', 'sku': 'FG-0000710', 'price': '1000.00', 'inventoryItem': {'id': 'gid://shopify/InventoryItem/44461201948738'}, 'selectedOptions': [{'name': 'Color', 'value': 'Gray'}]}}]}}}, 'status': 'success'}
2025-08-03 13:44:25,080 - sync_service - INFO - Variant FG-0000710 already exists, skipping
2025-08-03 13:44:25,084 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'U_SHOPIFY_MAPPING', 'request': {'method': 'POST', 'url': 'https://10.0.0.100:50000/b1s/v1/U_SHOPIFY_MAPPING', 'data': {'Code': '7522716254274', 'Name': '7522716254274', 'U_Shopify_Type': 'product', 'U_SAP_Code': 'Morsi Laptop', 'U_Shopify_Store': 'local', 'U_SAP_Type': 'item', 'U_CreateDate': '20250803'}, 'params': None}, 'response': None, 'status': None}
2025-08-03 13:44:25,371 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'U_SHOPIFY_MAPPING', 'request': None, 'response': {'status_code': 400, 'text': '{\n   "error" : {\n      "code" : -2035,\n      "message" : {\n         "lang" : "en-us",\n         "value" : "This entry already exists in the following tables (ODBC -2035)"\n      }\n   }\n}\n'}, 'status': 'failure'}
2025-08-03 13:44:25,885 - sync_service - INFO - Processing product group: ('Morsi Necklace', 'local') with 3 items for store local
2025-08-03 13:44:25,887 - sync_service - INFO - API Call: {'service': 'shopify', 'endpoint': 'graphql_local', 'request': {'query': '\n        query GetProductByHandle($handle: String!) {\n            productByHandle(handle: $handle) {\n                id\n                title\n                handle\n                description\n                variants(first: 50) {\n                    edges {\n                        node {\n                            id\n                            sku\n                            price\n                            inventoryItem {\n                                id\n                            }\n                            selectedOptions {\n                                name\n                                value\n                            }\n                        }\n                    }\n                }\n            }\n        }\n        ', 'variables': {'handle': 'morsi-necklace'}}, 'response': None, 'status': None}
2025-08-03 13:44:35,893 - sync_service - ERROR - GraphQL query error for store local: 
2025-08-03 13:44:35,894 - sync_service - INFO - Product Morsi Necklace doesn't exist in store local, creating new product
2025-08-03 13:44:36,591 - sync_service - INFO - API log added to SAP: shopify - /admin/api/graphql_local - success
2025-08-03 13:44:36,593 - sync_service - INFO - API Call: {'service': 'shopify', 'endpoint': 'graphql_local', 'request': {'query': '\n        mutation productCreate($input: ProductInput!) {\n            productCreate(input: $input) {\n                product {\n                    id\n                    title\n                    handle\n                    variants(first: 50) {\n                        edges {\n                            node {\n                                id\n                                sku\n                                inventoryItem {\n                                    id\n                                }\n                                selectedOptions {\n                                    name\n                                    value\n                                }\n                            }\n                        }\n                    }\n                }\n                userErrors {\n                    field\n                    message\n                }\n            }\n        }\n        ', 'variables': {'input': {'title': 'Morsi Necklace', 'status': 'DRAFT', 'options': ['Color'], 'variants': [{'options': ['Black'], 'sku': 'FG-0000702', 'price': '2500.0', 'inventoryManagement': 'SHOPIFY', 'inventoryPolicy': 'DENY', 'taxable': False, 'barcode': '2123243245'}, {'options': ['White'], 'sku': 'FG-0000703', 'price': '2500.0', 'inventoryManagement': 'SHOPIFY', 'inventoryPolicy': 'DENY', 'taxable': False, 'barcode': '242342342'}, {'options': ['Green'], 'sku': 'FG-0000705', 'price': '2500.0', 'inventoryManagement': 'SHOPIFY', 'inventoryPolicy': 'DENY', 'taxable': False}]}}}, 'response': None, 'status': None}
2025-08-03 13:44:37,755 - sync_service - INFO - API Call: {'service': 'shopify', 'endpoint': 'graphql_local', 'request': None, 'response': {'productCreate': {'product': {'id': 'gid://shopify/Product/7522716778562', 'title': 'Morsi Necklace', 'handle': 'morsi-necklace', 'variants': {'edges': [{'node': {'id': 'gid://shopify/ProductVariant/42360836915266', 'sku': 'FG-0000702', 'inventoryItem': {'id': 'gid://shopify/InventoryItem/44461202997314'}, 'selectedOptions': [{'name': 'Color', 'value': 'Black'}]}}, {'node': {'id': 'gid://shopify/ProductVariant/42360836948034', 'sku': 'FG-0000703', 'inventoryItem': {'id': 'gid://shopify/InventoryItem/44461203030082'}, 'selectedOptions': [{'name': 'Color', 'value': 'White'}]}}, {'node': {'id': 'gid://shopify/ProductVariant/42360836980802', 'sku': 'FG-0000705', 'inventoryItem': {'id': 'gid://shopify/InventoryItem/44461203062850'}, 'selectedOptions': [{'name': 'Color', 'value': 'Green'}]}}]}}, 'userErrors': []}}, 'status': 'success'}
2025-08-03 13:44:37,757 - sync_service - ERROR - Shopify full response for store local: {'msg': 'success', 'data': {'productCreate': {'product': {'id': 'gid://shopify/Product/7522716778562', 'title': 'Morsi Necklace', 'handle': 'morsi-necklace', 'variants': {'edges': [{'node': {'id': 'gid://shopify/ProductVariant/42360836915266', 'sku': 'FG-0000702', 'inventoryItem': {'id': 'gid://shopify/InventoryItem/44461202997314'}, 'selectedOptions': [{'name': 'Color', 'value': 'Black'}]}}, {'node': {'id': 'gid://shopify/ProductVariant/42360836948034', 'sku': 'FG-0000703', 'inventoryItem': {'id': 'gid://shopify/InventoryItem/44461203030082'}, 'selectedOptions': [{'name': 'Color', 'value': 'White'}]}}, {'node': {'id': 'gid://shopify/ProductVariant/42360836980802', 'sku': 'FG-0000705', 'inventoryItem': {'id': 'gid://shopify/InventoryItem/44461203062850'}, 'selectedOptions': [{'name': 'Color', 'value': 'Green'}]}}]}}, 'userErrors': []}}}
2025-08-03 13:44:38,034 - sync_service - INFO - API log added to SAP: shopify - /admin/api/graphql_local - success
2025-08-03 13:44:38,037 - sync_service - INFO - Successfully created product in store local
2025-08-03 13:44:38,038 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'U_SHOPIFY_MAPPING', 'request': {'method': 'POST', 'url': 'https://10.0.0.100:50000/b1s/v1/U_SHOPIFY_MAPPING', 'data': {'Code': '7522716778562', 'Name': '7522716778562', 'U_Shopify_Type': 'product', 'U_SAP_Code': 'Morsi Necklace', 'U_Shopify_Store': 'local', 'U_SAP_Type': 'item', 'U_CreateDate': '20250803'}, 'params': None}, 'response': None, 'status': None}
2025-08-03 13:44:46,881 - sync_service - INFO - Initialized Shopify client for store: Local Store (local)
2025-08-03 13:44:46,889 - sync_service - INFO - Starting all syncs...
2025-08-03 13:44:46,889 - sync_service - INFO - Starting new items sync...
2025-08-03 13:44:46,890 - sync_service - INFO - Starting multi-store new items sync from SAP to Shopify
2025-08-03 13:44:46,890 - sync_service - INFO - Fetching new items for store: local
2025-08-03 13:44:46,891 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'login', 'request': {'company': 'JudeBenHalim_Test', 'user': 'manager'}, 'response': None, 'status': None}
2025-08-03 13:44:47,623 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'login', 'request': None, 'response': {'status': 'success'}, 'status': 'success'}
2025-08-03 13:44:47,624 - sync_service - INFO - SAP login successful
2025-08-03 13:44:47,626 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': "view.svc/MASHURA_New_ItemsB1SLQuery?$filter=Shopify_Store eq 'local'&$orderby=MainProduct", 'request': {'method': 'GET', 'url': "https://10.0.0.100:50000/b1s/v1/view.svc/MASHURA_New_ItemsB1SLQuery?$filter=Shopify_Store eq 'local'&$orderby=MainProduct", 'data': None, 'params': None}, 'response': None, 'status': None}
2025-08-03 13:44:48,266 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': "view.svc/MASHURA_New_ItemsB1SLQuery?$filter=Shopify_Store eq 'local'&$orderby=MainProduct", 'request': None, 'response': {'odata.metadata': 'https://10.0.0.100:50000/b1s/v1/view.svc/$metadata#MASHURA_New_ItemsB1SLQuery', 'value': []}, 'status': 'success'}
2025-08-03 13:44:48,267 - sync_service - INFO - No new items found in SAP for store local
2025-08-03 13:44:48,268 - sync_service - INFO - Sync Event: {'sync_type': 'multi_store_new_items_sap_to_shopify', 'items_processed': 0, 'success_count': 0, 'error_count': 0, 'details': None}
2025-08-03 13:44:48,268 - sync_service - INFO - Multi-store new items sync completed: 0 processed, 0 successful, 0 errors
2025-08-03 13:44:48,269 - sync_service - INFO - Starting stock change sync...
2025-08-03 13:44:48,270 - sync_service - INFO - Starting stock change sync using MASHURA_StockChangeB1SLQuery view
2025-08-03 13:44:48,271 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'view.svc/MASHURA_StockChangeB1SLQuery', 'request': {'method': 'GET', 'url': 'https://10.0.0.100:50000/b1s/v1/view.svc/MASHURA_StockChangeB1SLQuery', 'data': None, 'params': {'$top': 50}}, 'response': None, 'status': None}
2025-08-03 13:44:48,971 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'view.svc/MASHURA_StockChangeB1SLQuery', 'request': None, 'response': {'odata.metadata': 'https://10.0.0.100:50000/b1s/v1/view.svc/$metadata#MASHURA_StockChangeB1SLQuery', 'value': [{'ItemCode': 'FG-0000708', 'Variant_ID': '44461201457218', 'OnHand': 400.0, 'Available': 200.0, 'Location_ID': '68605345858', 'id__': 1}, {'ItemCode': 'FG-0000711', 'Variant_ID': '44461202767938', 'OnHand': 60.0, 'Available': 30.0, 'Location_ID': '68605345858', 'id__': 2}]}, 'status': 'success'}
2025-08-03 13:44:48,972 - sync_service - INFO - Updating inventory for item FG-0000708 (variant 44461201457218) at location 68605345858
2025-08-03 13:44:48,973 - sync_service - INFO - API Call: {'service': 'shopify', 'endpoint': 'rest_inventory_local', 'request': {'location_id': '68605345858', 'inventory_item_id': '44461201457218', 'available': 200}, 'response': None, 'status': None}
2025-08-03 13:45:00,623 - sync_service - INFO - API Call: {'service': 'shopify', 'endpoint': 'rest_inventory_local', 'request': None, 'response': {'inventory_level': {'inventory_item_id': 44461201457218, 'location_id': 68605345858, 'available': 200, 'updated_at': '2025-08-03T13:45:01+03:00', 'admin_graphql_api_id': 'gid://shopify/InventoryLevel/103109591106?inventory_item_id=44461201457218'}}, 'status': 'success'}
2025-08-03 13:45:01,811 - sync_service - INFO - SAP logging client login successful
2025-08-03 13:45:02,465 - sync_service - INFO - API log added to SAP: shopify - inventory_levels - success
2025-08-03 13:45:02,572 - sync_service - INFO - Updating inventory for item FG-0000711 (variant 44461202767938) at location 68605345858
2025-08-03 13:45:02,576 - sync_service - INFO - API Call: {'service': 'shopify', 'endpoint': 'rest_inventory_local', 'request': {'location_id': '68605345858', 'inventory_item_id': '44461202767938', 'available': 30}, 'response': None, 'status': None}
2025-08-03 13:45:14,227 - sync_service - INFO - API Call: {'service': 'shopify', 'endpoint': 'rest_inventory_local', 'request': None, 'response': {'inventory_level': {'inventory_item_id': 44461202767938, 'location_id': 68605345858, 'available': 30, 'updated_at': '2025-08-03T13:45:15+03:00', 'admin_graphql_api_id': 'gid://shopify/InventoryLevel/103109591106?inventory_item_id=44461202767938'}}, 'status': 'success'}
2025-08-03 13:45:26,525 - sync_service - INFO - API log added to SAP: shopify - inventory_levels - success
2025-08-03 13:45:26,638 - sync_service - INFO - Stock change sync completed: 2 processed, 2 successful, 0 errors
2025-08-03 13:48:43,167 - sync_service - INFO - Initialized Shopify client for store: Local Store (local)
2025-08-03 13:48:43,182 - sync_service - INFO - Starting all syncs...
2025-08-03 13:48:43,183 - sync_service - INFO - Starting new items sync...
2025-08-03 13:48:43,183 - sync_service - INFO - Starting multi-store new items sync from SAP to Shopify
2025-08-03 13:48:43,184 - sync_service - INFO - Fetching new items for store: local
2025-08-03 13:48:43,184 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'login', 'request': {'company': 'JudeBenHalim_Test', 'user': 'manager'}, 'response': None, 'status': None}
2025-08-03 13:48:43,906 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'login', 'request': None, 'response': {'status': 'success'}, 'status': 'success'}
2025-08-03 13:48:43,908 - sync_service - INFO - SAP login successful
2025-08-03 13:48:43,912 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': "view.svc/MASHURA_New_ItemsB1SLQuery?$filter=Shopify_Store eq 'local'&$orderby=MainProduct", 'request': {'method': 'GET', 'url': "https://10.0.0.100:50000/b1s/v1/view.svc/MASHURA_New_ItemsB1SLQuery?$filter=Shopify_Store eq 'local'&$orderby=MainProduct", 'data': None, 'params': None}, 'response': None, 'status': None}
2025-08-03 13:48:44,590 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': "view.svc/MASHURA_New_ItemsB1SLQuery?$filter=Shopify_Store eq 'local'&$orderby=MainProduct", 'request': None, 'response': {'odata.metadata': 'https://10.0.0.100:50000/b1s/v1/view.svc/$metadata#MASHURA_New_ItemsB1SLQuery', 'value': []}, 'status': 'success'}
2025-08-03 13:48:44,593 - sync_service - INFO - No new items found in SAP for store local
2025-08-03 13:48:44,596 - sync_service - INFO - Sync Event: {'sync_type': 'multi_store_new_items_sap_to_shopify', 'items_processed': 0, 'success_count': 0, 'error_count': 0, 'details': None}
2025-08-03 13:48:44,598 - sync_service - INFO - Multi-store new items sync completed: 0 processed, 0 successful, 0 errors
2025-08-03 13:48:44,599 - sync_service - INFO - Starting stock change sync...
2025-08-03 13:48:44,600 - sync_service - INFO - Starting stock change sync using MASHURA_StockChangeB1SLQuery view
2025-08-03 13:48:44,602 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'view.svc/MASHURA_StockChangeB1SLQuery', 'request': {'method': 'GET', 'url': 'https://10.0.0.100:50000/b1s/v1/view.svc/MASHURA_StockChangeB1SLQuery', 'data': None, 'params': {'$top': 50}}, 'response': None, 'status': None}
2025-08-03 14:00:11,192 - sync_service - INFO - Initialized Shopify client for store: Local Store (local)
2025-08-03 14:00:11,206 - sync_service - INFO - Starting all syncs...
2025-08-03 14:00:11,206 - sync_service - INFO - Starting new items sync...
2025-08-03 14:00:11,207 - sync_service - INFO - Starting multi-store new items sync from SAP to Shopify
2025-08-03 14:00:11,207 - sync_service - INFO - Fetching new items for store: local
2025-08-03 14:00:11,207 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'login', 'request': {'company': 'JudeBenHalim_Test', 'user': 'manager'}, 'response': None, 'status': None}
2025-08-03 14:00:12,009 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'login', 'request': None, 'response': {'status': 'success'}, 'status': 'success'}
2025-08-03 14:00:12,010 - sync_service - INFO - SAP login successful
2025-08-03 14:00:12,011 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': "view.svc/MASHURA_New_ItemsB1SLQuery?$filter=Shopify_Store eq 'local'&$orderby=MainProduct", 'request': {'method': 'GET', 'url': "https://10.0.0.100:50000/b1s/v1/view.svc/MASHURA_New_ItemsB1SLQuery?$filter=Shopify_Store eq 'local'&$orderby=MainProduct", 'data': None, 'params': None}, 'response': None, 'status': None}
2025-08-03 14:00:12,718 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': "view.svc/MASHURA_New_ItemsB1SLQuery?$filter=Shopify_Store eq 'local'&$orderby=MainProduct", 'request': None, 'response': {'odata.metadata': 'https://10.0.0.100:50000/b1s/v1/view.svc/$metadata#MASHURA_New_ItemsB1SLQuery', 'value': [{'itemcode': 'FG-0000704', 'ItemName': 'Morsi Bracelet', 'MainProduct': None, 'Color': None, 'Price': 3200.0, 'Shopify_Store': 'local', 'Shopify_ProductCode': None, 'Status': 'new', 'Barcode': '645464644', 'id__': 1}, {'itemcode': 'FG-0000708', 'ItemName': 'Morsi Socks', 'MainProduct': None, 'Color': None, 'Price': 200.0, 'Shopify_Store': 'local', 'Shopify_ProductCode': None, 'Status': 'new', 'Barcode': None, 'id__': 2}, {'itemcode': 'FG-0000711', 'ItemName': 'Morsi Keyboard', 'MainProduct': None, 'Color': None, 'Price': 1000.0, 'Shopify_Store': 'local', 'Shopify_ProductCode': None, 'Status': 'new', 'Barcode': None, 'id__': 3}, {'itemcode': 'FG-0000709', 'ItemName': 'Morsi-Laptop-Black', 'MainProduct': 'Morsi Laptop', 'Color': 'Black', 'Price': 1000.0, 'Shopify_Store': 'local', 'Shopify_ProductCode': None, 'Status': 'new', 'Barcode': None, 'id__': 4}, {'itemcode': 'FG-0000710', 'ItemName': 'Morsi-Laptop-Grey', 'MainProduct': 'Morsi Laptop', 'Color': 'Grey', 'Price': 1000.0, 'Shopify_Store': 'local', 'Shopify_ProductCode': None, 'Status': 'new', 'Barcode': None, 'id__': 5}, {'itemcode': 'FG-0000702', 'ItemName': 'Morsi-Necklace-Black', 'MainProduct': 'Morsi Necklace', 'Color': 'Black', 'Price': 2500.0, 'Shopify_Store': 'local', 'Shopify_ProductCode': None, 'Status': 'new', 'Barcode': '2123243245', 'id__': 6}, {'itemcode': 'FG-0000703', 'ItemName': 'Morsi-Necklace-White', 'MainProduct': 'Morsi Necklace', 'Color': 'White', 'Price': 2500.0, 'Shopify_Store': 'local', 'Shopify_ProductCode': None, 'Status': 'new', 'Barcode': '242342342', 'id__': 7}, {'itemcode': 'FG-0000705', 'ItemName': 'Morsi-Necklace-Green', 'MainProduct': 'Morsi Necklace', 'Color': 'Green', 'Price': 2500.0, 'Shopify_Store': 'local', 'Shopify_ProductCode': None, 'Status': 'new', 'Barcode': None, 'id__': 8}, {'itemcode': 'FG-0000706', 'ItemName': 'Morsi-Shoes-Green', 'MainProduct': 'Morsi Shoes', 'Color': 'Green', 'Price': 1000.0, 'Shopify_Store': 'local', 'Shopify_ProductCode': None, 'Status': 'new', 'Barcode': None, 'id__': 9}, {'itemcode': 'FG-0000707', 'ItemName': 'Morsi-Shoes-Beige', 'MainProduct': 'Morsi Shoes', 'Color': 'Beige', 'Price': 1000.0, 'Shopify_Store': 'local', 'Shopify_ProductCode': None, 'Status': 'new', 'Barcode': None, 'id__': 10}]}, 'status': 'success'}
2025-08-03 14:00:12,720 - sync_service - INFO - Product group: ('FG-0000704', 'local') has 1 items
2025-08-03 14:00:12,720 - sync_service - INFO - Product group: ('FG-0000708', 'local') has 1 items
2025-08-03 14:00:12,721 - sync_service - INFO - Product group: ('FG-0000711', 'local') has 1 items
2025-08-03 14:00:12,722 - sync_service - INFO - Product group: ('Morsi Laptop', 'local') has 2 items
2025-08-03 14:00:12,722 - sync_service - INFO - Product group: ('Morsi Necklace', 'local') has 3 items
2025-08-03 14:00:12,723 - sync_service - INFO - Product group: ('Morsi Shoes', 'local') has 2 items
2025-08-03 14:00:12,723 - sync_service - INFO - Grouped 10 items into 6 product groups for store local
2025-08-03 14:00:12,724 - sync_service - INFO - Processing product group: ('FG-0000704', 'local') with 1 items for store local
2025-08-03 14:00:12,725 - sync_service - INFO - API Call: {'service': 'shopify', 'endpoint': 'graphql_local', 'request': {'query': '\n        query GetProductByHandle($handle: String!) {\n            productByHandle(handle: $handle) {\n                id\n                title\n                handle\n                description\n                variants(first: 50) {\n                    edges {\n                        node {\n                            id\n                            sku\n                            price\n                            inventoryItem {\n                                id\n                            }\n                            selectedOptions {\n                                name\n                                value\n                            }\n                        }\n                    }\n                }\n            }\n        }\n        ', 'variables': {'handle': 'default'}}, 'response': None, 'status': None}
2025-08-03 14:00:22,733 - sync_service - ERROR - GraphQL query error for store local: 
2025-08-03 14:00:22,734 - sync_service - INFO - Product None doesn't exist in store local, creating new product
2025-08-03 14:00:23,452 - sync_service - INFO - SAP logging client login successful
2025-08-03 14:00:24,160 - sync_service - INFO - API log added to SAP: shopify - /admin/api/graphql_local - success
2025-08-03 14:00:24,161 - sync_service - INFO - API Call: {'service': 'shopify', 'endpoint': 'graphql_local', 'request': {'query': '\n        mutation productCreate($input: ProductInput!) {\n            productCreate(input: $input) {\n                product {\n                    id\n                    title\n                    handle\n                    variants(first: 50) {\n                        edges {\n                            node {\n                                id\n                                sku\n                                inventoryItem {\n                                    id\n                                }\n                                selectedOptions {\n                                    name\n                                    value\n                                }\n                            }\n                        }\n                    }\n                }\n                userErrors {\n                    field\n                    message\n                }\n            }\n        }\n        ', 'variables': {'input': {'title': 'Morsi Bracelet', 'descriptionHtml': '', 'vendor': '', 'productType': 'Default', 'status': 'DRAFT', 'tags': [], 'variants': [{'sku': 'FG-0000704', 'price': '3200.0', 'inventoryPolicy': 'DENY', 'inventoryManagement': 'SHOPIFY', 'weight': 0.0, 'weightUnit': 'KILOGRAMS', 'taxable': False, 'barcode': '645464644'}], 'seo': {'title': 'Morsi Bracelet', 'description': ''}}}}, 'response': None, 'status': None}
2025-08-03 14:00:25,025 - sync_service - INFO - API Call: {'service': 'shopify', 'endpoint': 'graphql_local', 'request': None, 'response': {'productCreate': {'product': {'id': 'gid://shopify/Product/7522725691458', 'title': 'Morsi Bracelet', 'handle': 'morsi-bracelet', 'variants': {'edges': [{'node': {'id': 'gid://shopify/ProductVariant/42360861589570', 'sku': 'FG-0000704', 'inventoryItem': {'id': 'gid://shopify/InventoryItem/44461227671618'}, 'selectedOptions': [{'name': 'Title', 'value': 'Default Title'}]}}]}}, 'userErrors': []}}, 'status': 'success'}
2025-08-03 14:00:25,026 - sync_service - ERROR - Shopify full response for store local: {'msg': 'success', 'data': {'productCreate': {'product': {'id': 'gid://shopify/Product/7522725691458', 'title': 'Morsi Bracelet', 'handle': 'morsi-bracelet', 'variants': {'edges': [{'node': {'id': 'gid://shopify/ProductVariant/42360861589570', 'sku': 'FG-0000704', 'inventoryItem': {'id': 'gid://shopify/InventoryItem/44461227671618'}, 'selectedOptions': [{'name': 'Title', 'value': 'Default Title'}]}}]}}, 'userErrors': []}}}
2025-08-03 14:00:25,727 - sync_service - INFO - API log added to SAP: shopify - /admin/api/graphql_local - success
2025-08-03 14:00:25,728 - sync_service - INFO - Successfully created product in store local
2025-08-03 14:00:25,730 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'U_SHOPIFY_MAPPING', 'request': {'method': 'POST', 'url': 'https://10.0.0.100:50000/b1s/v1/U_SHOPIFY_MAPPING', 'data': {'Code': '7522725691458', 'Name': '7522725691458', 'U_Shopify_Type': 'product', 'U_SAP_Code': 'FG-0000704', 'U_Shopify_Store': 'local', 'U_SAP_Type': 'item', 'U_CreateDate': '2025-08-03'}, 'params': None}, 'response': None, 'status': None}
2025-08-03 14:00:26,428 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'U_SHOPIFY_MAPPING', 'request': None, 'response': {'odata.metadata': 'https://10.0.0.100:50000/b1s/v1/$metadata#U_SHOPIFY_MAPPING/@Element', 'Code': '7522725691458', 'Name': '7522725691458', 'U_SAP_Code': 'FG-0000704', 'U_SAP_Type': 'item', 'U_Shopify_Type': 'product', 'U_Shopify_Store': 'local', 'U_CreateDate': None}, 'status': 'success'}
2025-08-03 14:00:26,430 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'U_SHOPIFY_MAPPING', 'request': {'method': 'POST', 'url': 'https://10.0.0.100:50000/b1s/v1/U_SHOPIFY_MAPPING', 'data': {'Code': '42360861589570', 'Name': '42360861589570', 'U_Shopify_Type': 'variant', 'U_SAP_Code': 'FG-0000704', 'U_Shopify_Store': 'local', 'U_SAP_Type': 'item', 'U_CreateDate': '2025-08-03'}, 'params': None}, 'response': None, 'status': None}
2025-08-03 14:00:27,129 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'U_SHOPIFY_MAPPING', 'request': None, 'response': {'odata.metadata': 'https://10.0.0.100:50000/b1s/v1/$metadata#U_SHOPIFY_MAPPING/@Element', 'Code': '42360861589570', 'Name': '42360861589570', 'U_SAP_Code': 'FG-0000704', 'U_SAP_Type': 'item', 'U_Shopify_Type': 'variant', 'U_Shopify_Store': 'local', 'U_CreateDate': None}, 'status': 'success'}
2025-08-03 14:00:27,131 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'U_SHOPIFY_MAPPING', 'request': {'method': 'POST', 'url': 'https://10.0.0.100:50000/b1s/v1/U_SHOPIFY_MAPPING', 'data': {'Code': '44461227671618', 'Name': '44461227671618', 'U_Shopify_Type': 'variant_inventory', 'U_SAP_Code': 'FG-0000704', 'U_Shopify_Store': 'local', 'U_SAP_Type': 'item', 'U_CreateDate': '2025-08-03'}, 'params': None}, 'response': None, 'status': None}
2025-08-03 14:00:27,418 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'U_SHOPIFY_MAPPING', 'request': None, 'response': {'odata.metadata': 'https://10.0.0.100:50000/b1s/v1/$metadata#U_SHOPIFY_MAPPING/@Element', 'Code': '44461227671618', 'Name': '44461227671618', 'U_SAP_Code': 'FG-0000704', 'U_SAP_Type': 'item', 'U_Shopify_Type': 'variant_inventory', 'U_Shopify_Store': 'local', 'U_CreateDate': None}, 'status': 'success'}
2025-08-03 14:00:27,924 - sync_service - INFO - Processing product group: ('FG-0000708', 'local') with 1 items for store local
2025-08-03 14:00:27,925 - sync_service - INFO - API Call: {'service': 'shopify', 'endpoint': 'graphql_local', 'request': {'query': '\n        query GetProductByHandle($handle: String!) {\n            productByHandle(handle: $handle) {\n                id\n                title\n                handle\n                description\n                variants(first: 50) {\n                    edges {\n                        node {\n                            id\n                            sku\n                            price\n                            inventoryItem {\n                                id\n                            }\n                            selectedOptions {\n                                name\n                                value\n                            }\n                        }\n                    }\n                }\n            }\n        }\n        ', 'variables': {'handle': 'default'}}, 'response': None, 'status': None}
2025-08-03 14:00:28,389 - sync_service - INFO - API Call: {'service': 'shopify', 'endpoint': 'graphql_local', 'request': None, 'response': {'productByHandle': None}, 'status': 'success'}
2025-08-03 14:00:28,390 - sync_service - INFO - Product None doesn't exist in store local, creating new product
2025-08-03 14:00:29,084 - sync_service - INFO - API log added to SAP: shopify - /admin/api/graphql_local - success
2025-08-03 14:00:29,084 - sync_service - INFO - API Call: {'service': 'shopify', 'endpoint': 'graphql_local', 'request': {'query': '\n        mutation productCreate($input: ProductInput!) {\n            productCreate(input: $input) {\n                product {\n                    id\n                    title\n                    handle\n                    variants(first: 50) {\n                        edges {\n                            node {\n                                id\n                                sku\n                                inventoryItem {\n                                    id\n                                }\n                                selectedOptions {\n                                    name\n                                    value\n                                }\n                            }\n                        }\n                    }\n                }\n                userErrors {\n                    field\n                    message\n                }\n            }\n        }\n        ', 'variables': {'input': {'title': 'Morsi Socks', 'descriptionHtml': '', 'vendor': '', 'productType': 'Default', 'status': 'DRAFT', 'tags': [], 'variants': [{'sku': 'FG-0000708', 'price': '200.0', 'inventoryPolicy': 'DENY', 'inventoryManagement': 'SHOPIFY', 'weight': 0.0, 'weightUnit': 'KILOGRAMS', 'taxable': False}], 'seo': {'title': 'Morsi Socks', 'description': ''}}}}, 'response': None, 'status': None}
2025-08-03 14:00:36,074 - sync_service - INFO - API Call: {'service': 'shopify', 'endpoint': 'graphql_local', 'request': None, 'response': {'productCreate': {'product': {'id': 'gid://shopify/Product/7522725920834', 'title': 'Morsi Socks', 'handle': 'morsi-socks', 'variants': {'edges': [{'node': {'id': 'gid://shopify/ProductVariant/42360861982786', 'sku': 'FG-0000708', 'inventoryItem': {'id': 'gid://shopify/InventoryItem/44461228064834'}, 'selectedOptions': [{'name': 'Title', 'value': 'Default Title'}]}}]}}, 'userErrors': []}}, 'status': 'success'}
2025-08-03 14:00:36,076 - sync_service - ERROR - Shopify full response for store local: {'msg': 'success', 'data': {'productCreate': {'product': {'id': 'gid://shopify/Product/7522725920834', 'title': 'Morsi Socks', 'handle': 'morsi-socks', 'variants': {'edges': [{'node': {'id': 'gid://shopify/ProductVariant/42360861982786', 'sku': 'FG-0000708', 'inventoryItem': {'id': 'gid://shopify/InventoryItem/44461228064834'}, 'selectedOptions': [{'name': 'Title', 'value': 'Default Title'}]}}]}}, 'userErrors': []}}}
2025-08-03 14:00:36,540 - sync_service - INFO - API log added to SAP: shopify - /admin/api/graphql_local - success
2025-08-03 14:00:36,542 - sync_service - INFO - Successfully created product in store local
2025-08-03 14:00:36,545 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'U_SHOPIFY_MAPPING', 'request': {'method': 'POST', 'url': 'https://10.0.0.100:50000/b1s/v1/U_SHOPIFY_MAPPING', 'data': {'Code': '7522725920834', 'Name': '7522725920834', 'U_Shopify_Type': 'product', 'U_SAP_Code': 'FG-0000708', 'U_Shopify_Store': 'local', 'U_SAP_Type': 'item', 'U_CreateDate': '2025-08-03'}, 'params': None}, 'response': None, 'status': None}
2025-08-03 14:00:37,287 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'U_SHOPIFY_MAPPING', 'request': None, 'response': {'odata.metadata': 'https://10.0.0.100:50000/b1s/v1/$metadata#U_SHOPIFY_MAPPING/@Element', 'Code': '7522725920834', 'Name': '7522725920834', 'U_SAP_Code': 'FG-0000708', 'U_SAP_Type': 'item', 'U_Shopify_Type': 'product', 'U_Shopify_Store': 'local', 'U_CreateDate': None}, 'status': 'success'}
2025-08-03 14:00:37,289 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'U_SHOPIFY_MAPPING', 'request': {'method': 'POST', 'url': 'https://10.0.0.100:50000/b1s/v1/U_SHOPIFY_MAPPING', 'data': {'Code': '42360861982786', 'Name': '42360861982786', 'U_Shopify_Type': 'variant', 'U_SAP_Code': 'FG-0000708', 'U_Shopify_Store': 'local', 'U_SAP_Type': 'item', 'U_CreateDate': '2025-08-03'}, 'params': None}, 'response': None, 'status': None}
2025-08-03 14:00:37,970 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'U_SHOPIFY_MAPPING', 'request': None, 'response': {'odata.metadata': 'https://10.0.0.100:50000/b1s/v1/$metadata#U_SHOPIFY_MAPPING/@Element', 'Code': '42360861982786', 'Name': '42360861982786', 'U_SAP_Code': 'FG-0000708', 'U_SAP_Type': 'item', 'U_Shopify_Type': 'variant', 'U_Shopify_Store': 'local', 'U_CreateDate': None}, 'status': 'success'}
2025-08-03 14:00:37,973 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'U_SHOPIFY_MAPPING', 'request': {'method': 'POST', 'url': 'https://10.0.0.100:50000/b1s/v1/U_SHOPIFY_MAPPING', 'data': {'Code': '44461228064834', 'Name': '44461228064834', 'U_Shopify_Type': 'variant_inventory', 'U_SAP_Code': 'FG-0000708', 'U_Shopify_Store': 'local', 'U_SAP_Type': 'item', 'U_CreateDate': '2025-08-03'}, 'params': None}, 'response': None, 'status': None}
2025-08-03 14:00:38,685 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'U_SHOPIFY_MAPPING', 'request': None, 'response': {'odata.metadata': 'https://10.0.0.100:50000/b1s/v1/$metadata#U_SHOPIFY_MAPPING/@Element', 'Code': '44461228064834', 'Name': '44461228064834', 'U_SAP_Code': 'FG-0000708', 'U_SAP_Type': 'item', 'U_Shopify_Type': 'variant_inventory', 'U_Shopify_Store': 'local', 'U_CreateDate': None}, 'status': 'success'}
2025-08-03 14:00:39,195 - sync_service - INFO - Processing product group: ('FG-0000711', 'local') with 1 items for store local
2025-08-03 14:00:39,196 - sync_service - INFO - API Call: {'service': 'shopify', 'endpoint': 'graphql_local', 'request': {'query': '\n        query GetProductByHandle($handle: String!) {\n            productByHandle(handle: $handle) {\n                id\n                title\n                handle\n                description\n                variants(first: 50) {\n                    edges {\n                        node {\n                            id\n                            sku\n                            price\n                            inventoryItem {\n                                id\n                            }\n                            selectedOptions {\n                                name\n                                value\n                            }\n                        }\n                    }\n                }\n            }\n        }\n        ', 'variables': {'handle': 'default'}}, 'response': None, 'status': None}
2025-08-03 14:00:39,654 - sync_service - INFO - API Call: {'service': 'shopify', 'endpoint': 'graphql_local', 'request': None, 'response': {'productByHandle': None}, 'status': 'success'}
2025-08-03 14:00:39,656 - sync_service - INFO - Product None doesn't exist in store local, creating new product
2025-08-03 14:00:40,296 - sync_service - INFO - API log added to SAP: shopify - /admin/api/graphql_local - success
2025-08-03 14:00:40,297 - sync_service - INFO - API Call: {'service': 'shopify', 'endpoint': 'graphql_local', 'request': {'query': '\n        mutation productCreate($input: ProductInput!) {\n            productCreate(input: $input) {\n                product {\n                    id\n                    title\n                    handle\n                    variants(first: 50) {\n                        edges {\n                            node {\n                                id\n                                sku\n                                inventoryItem {\n                                    id\n                                }\n                                selectedOptions {\n                                    name\n                                    value\n                                }\n                            }\n                        }\n                    }\n                }\n                userErrors {\n                    field\n                    message\n                }\n            }\n        }\n        ', 'variables': {'input': {'title': 'Morsi Keyboard', 'descriptionHtml': '', 'vendor': '', 'productType': 'Default', 'status': 'DRAFT', 'tags': [], 'variants': [{'sku': 'FG-0000711', 'price': '1000.0', 'inventoryPolicy': 'DENY', 'inventoryManagement': 'SHOPIFY', 'weight': 0.0, 'weightUnit': 'KILOGRAMS', 'taxable': False}], 'seo': {'title': 'Morsi Keyboard', 'description': ''}}}}, 'response': None, 'status': None}
2025-08-03 14:00:50,312 - sync_service - ERROR - GraphQL query error for store local: 
2025-08-03 14:00:50,312 - sync_service - ERROR - Shopify full response for store local: {'msg': 'failure', 'error': 'GraphQL query error for store local: '}
2025-08-03 14:00:50,990 - sync_service - INFO - API log added to SAP: shopify - /admin/api/graphql_local - failure
2025-08-03 14:00:50,991 - sync_service - ERROR - Failed to create product in store local: GraphQL query error for store local: 
2025-08-03 14:00:50,993 - sync_service - INFO - Processing product group: ('Morsi Laptop', 'local') with 2 items for store local
2025-08-03 14:00:50,994 - sync_service - INFO - API Call: {'service': 'shopify', 'endpoint': 'graphql_local', 'request': {'query': '\n        query GetProductByHandle($handle: String!) {\n            productByHandle(handle: $handle) {\n                id\n                title\n                handle\n                description\n                variants(first: 50) {\n                    edges {\n                        node {\n                            id\n                            sku\n                            price\n                            inventoryItem {\n                                id\n                            }\n                            selectedOptions {\n                                name\n                                value\n                            }\n                        }\n                    }\n                }\n            }\n        }\n        ', 'variables': {'handle': 'morsi-laptop'}}, 'response': None, 'status': None}
2025-08-03 14:00:51,453 - sync_service - INFO - API Call: {'service': 'shopify', 'endpoint': 'graphql_local', 'request': None, 'response': {'productByHandle': None}, 'status': 'success'}
2025-08-03 14:00:51,454 - sync_service - INFO - Product Morsi Laptop doesn't exist in store local, creating new product
2025-08-03 14:00:52,080 - sync_service - INFO - API log added to SAP: shopify - /admin/api/graphql_local - success
2025-08-03 14:00:52,081 - sync_service - INFO - API Call: {'service': 'shopify', 'endpoint': 'graphql_local', 'request': {'query': '\n        mutation productCreate($input: ProductInput!) {\n            productCreate(input: $input) {\n                product {\n                    id\n                    title\n                    handle\n                    variants(first: 50) {\n                        edges {\n                            node {\n                                id\n                                sku\n                                inventoryItem {\n                                    id\n                                }\n                                selectedOptions {\n                                    name\n                                    value\n                                }\n                            }\n                        }\n                    }\n                }\n                userErrors {\n                    field\n                    message\n                }\n            }\n        }\n        ', 'variables': {'input': {'title': 'Morsi Laptop', 'status': 'DRAFT', 'options': ['Color'], 'variants': [{'options': ['Black'], 'sku': 'FG-0000709', 'price': '1000.0', 'inventoryManagement': 'SHOPIFY', 'inventoryPolicy': 'DENY', 'taxable': False}, {'options': ['Gray'], 'sku': 'FG-0000710', 'price': '1000.0', 'inventoryManagement': 'SHOPIFY', 'inventoryPolicy': 'DENY', 'taxable': False}]}}}, 'response': None, 'status': None}
2025-08-03 14:00:52,936 - sync_service - INFO - API Call: {'service': 'shopify', 'endpoint': 'graphql_local', 'request': None, 'response': {'productCreate': {'product': {'id': 'gid://shopify/Product/7522725953602', 'title': 'Morsi Laptop', 'handle': 'morsi-laptop', 'variants': {'edges': [{'node': {'id': 'gid://shopify/ProductVariant/42360862015554', 'sku': 'FG-0000709', 'inventoryItem': {'id': 'gid://shopify/InventoryItem/44461228097602'}, 'selectedOptions': [{'name': 'Color', 'value': 'Black'}]}}, {'node': {'id': 'gid://shopify/ProductVariant/42360862048322', 'sku': 'FG-0000710', 'inventoryItem': {'id': 'gid://shopify/InventoryItem/44461228130370'}, 'selectedOptions': [{'name': 'Color', 'value': 'Gray'}]}}]}}, 'userErrors': []}}, 'status': 'success'}
2025-08-03 14:00:52,937 - sync_service - ERROR - Shopify full response for store local: {'msg': 'success', 'data': {'productCreate': {'product': {'id': 'gid://shopify/Product/7522725953602', 'title': 'Morsi Laptop', 'handle': 'morsi-laptop', 'variants': {'edges': [{'node': {'id': 'gid://shopify/ProductVariant/42360862015554', 'sku': 'FG-0000709', 'inventoryItem': {'id': 'gid://shopify/InventoryItem/44461228097602'}, 'selectedOptions': [{'name': 'Color', 'value': 'Black'}]}}, {'node': {'id': 'gid://shopify/ProductVariant/42360862048322', 'sku': 'FG-0000710', 'inventoryItem': {'id': 'gid://shopify/InventoryItem/44461228130370'}, 'selectedOptions': [{'name': 'Color', 'value': 'Gray'}]}}]}}, 'userErrors': []}}}
2025-08-03 14:00:53,233 - sync_service - INFO - API log added to SAP: shopify - /admin/api/graphql_local - success
2025-08-03 14:00:53,234 - sync_service - INFO - Successfully created product in store local
2025-08-03 14:00:53,235 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'U_SHOPIFY_MAPPING', 'request': {'method': 'POST', 'url': 'https://10.0.0.100:50000/b1s/v1/U_SHOPIFY_MAPPING', 'data': {'Code': '7522725953602', 'Name': '7522725953602', 'U_Shopify_Type': 'product', 'U_SAP_Code': 'Morsi Laptop', 'U_Shopify_Store': 'local', 'U_SAP_Type': 'item', 'U_CreateDate': '2025-08-03'}, 'params': None}, 'response': None, 'status': None}
2025-08-03 14:00:53,913 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'U_SHOPIFY_MAPPING', 'request': None, 'response': {'odata.metadata': 'https://10.0.0.100:50000/b1s/v1/$metadata#U_SHOPIFY_MAPPING/@Element', 'Code': '7522725953602', 'Name': '7522725953602', 'U_SAP_Code': 'Morsi Laptop', 'U_SAP_Type': 'item', 'U_Shopify_Type': 'product', 'U_Shopify_Store': 'local', 'U_CreateDate': None}, 'status': 'success'}
2025-08-03 14:00:53,914 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'U_SHOPIFY_MAPPING', 'request': {'method': 'POST', 'url': 'https://10.0.0.100:50000/b1s/v1/U_SHOPIFY_MAPPING', 'data': {'Code': '42360862015554', 'Name': '42360862015554', 'U_Shopify_Type': 'variant', 'U_SAP_Code': 'FG-0000709', 'U_Shopify_Store': 'local', 'U_SAP_Type': 'item', 'U_CreateDate': '2025-08-03'}, 'params': None}, 'response': None, 'status': None}
2025-08-03 14:00:54,199 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'U_SHOPIFY_MAPPING', 'request': None, 'response': {'odata.metadata': 'https://10.0.0.100:50000/b1s/v1/$metadata#U_SHOPIFY_MAPPING/@Element', 'Code': '42360862015554', 'Name': '42360862015554', 'U_SAP_Code': 'FG-0000709', 'U_SAP_Type': 'item', 'U_Shopify_Type': 'variant', 'U_Shopify_Store': 'local', 'U_CreateDate': None}, 'status': 'success'}
2025-08-03 14:00:54,202 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'U_SHOPIFY_MAPPING', 'request': {'method': 'POST', 'url': 'https://10.0.0.100:50000/b1s/v1/U_SHOPIFY_MAPPING', 'data': {'Code': '44461228097602', 'Name': '44461228097602', 'U_Shopify_Type': 'variant_inventory', 'U_SAP_Code': 'FG-0000709', 'U_Shopify_Store': 'local', 'U_SAP_Type': 'item', 'U_CreateDate': '2025-08-03'}, 'params': None}, 'response': None, 'status': None}
2025-08-03 14:00:54,487 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'U_SHOPIFY_MAPPING', 'request': None, 'response': {'odata.metadata': 'https://10.0.0.100:50000/b1s/v1/$metadata#U_SHOPIFY_MAPPING/@Element', 'Code': '44461228097602', 'Name': '44461228097602', 'U_SAP_Code': 'FG-0000709', 'U_SAP_Type': 'item', 'U_Shopify_Type': 'variant_inventory', 'U_Shopify_Store': 'local', 'U_CreateDate': None}, 'status': 'success'}
2025-08-03 14:00:54,488 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'U_SHOPIFY_MAPPING', 'request': {'method': 'POST', 'url': 'https://10.0.0.100:50000/b1s/v1/U_SHOPIFY_MAPPING', 'data': {'Code': '42360862048322', 'Name': '42360862048322', 'U_Shopify_Type': 'variant', 'U_SAP_Code': 'FG-0000710', 'U_Shopify_Store': 'local', 'U_SAP_Type': 'item', 'U_CreateDate': '2025-08-03'}, 'params': None}, 'response': None, 'status': None}
2025-08-03 14:00:54,768 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'U_SHOPIFY_MAPPING', 'request': None, 'response': {'odata.metadata': 'https://10.0.0.100:50000/b1s/v1/$metadata#U_SHOPIFY_MAPPING/@Element', 'Code': '42360862048322', 'Name': '42360862048322', 'U_SAP_Code': 'FG-0000710', 'U_SAP_Type': 'item', 'U_Shopify_Type': 'variant', 'U_Shopify_Store': 'local', 'U_CreateDate': None}, 'status': 'success'}
2025-08-03 14:00:54,769 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'U_SHOPIFY_MAPPING', 'request': {'method': 'POST', 'url': 'https://10.0.0.100:50000/b1s/v1/U_SHOPIFY_MAPPING', 'data': {'Code': '44461228130370', 'Name': '44461228130370', 'U_Shopify_Type': 'variant_inventory', 'U_SAP_Code': 'FG-0000710', 'U_Shopify_Store': 'local', 'U_SAP_Type': 'item', 'U_CreateDate': '2025-08-03'}, 'params': None}, 'response': None, 'status': None}
2025-08-03 14:00:55,127 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'U_SHOPIFY_MAPPING', 'request': None, 'response': {'odata.metadata': 'https://10.0.0.100:50000/b1s/v1/$metadata#U_SHOPIFY_MAPPING/@Element', 'Code': '44461228130370', 'Name': '44461228130370', 'U_SAP_Code': 'FG-0000710', 'U_SAP_Type': 'item', 'U_Shopify_Type': 'variant_inventory', 'U_Shopify_Store': 'local', 'U_CreateDate': None}, 'status': 'success'}
2025-08-03 14:00:55,644 - sync_service - INFO - Processing product group: ('Morsi Necklace', 'local') with 3 items for store local
2025-08-03 14:00:55,646 - sync_service - INFO - API Call: {'service': 'shopify', 'endpoint': 'graphql_local', 'request': {'query': '\n        query GetProductByHandle($handle: String!) {\n            productByHandle(handle: $handle) {\n                id\n                title\n                handle\n                description\n                variants(first: 50) {\n                    edges {\n                        node {\n                            id\n                            sku\n                            price\n                            inventoryItem {\n                                id\n                            }\n                            selectedOptions {\n                                name\n                                value\n                            }\n                        }\n                    }\n                }\n            }\n        }\n        ', 'variables': {'handle': 'morsi-necklace'}}, 'response': None, 'status': None}
2025-08-03 14:00:56,121 - sync_service - INFO - API Call: {'service': 'shopify', 'endpoint': 'graphql_local', 'request': None, 'response': {'productByHandle': None}, 'status': 'success'}
2025-08-03 14:00:56,122 - sync_service - INFO - Product Morsi Necklace doesn't exist in store local, creating new product
2025-08-03 14:00:56,410 - sync_service - INFO - API log added to SAP: shopify - /admin/api/graphql_local - success
2025-08-03 14:00:56,412 - sync_service - INFO - API Call: {'service': 'shopify', 'endpoint': 'graphql_local', 'request': {'query': '\n        mutation productCreate($input: ProductInput!) {\n            productCreate(input: $input) {\n                product {\n                    id\n                    title\n                    handle\n                    variants(first: 50) {\n                        edges {\n                            node {\n                                id\n                                sku\n                                inventoryItem {\n                                    id\n                                }\n                                selectedOptions {\n                                    name\n                                    value\n                                }\n                            }\n                        }\n                    }\n                }\n                userErrors {\n                    field\n                    message\n                }\n            }\n        }\n        ', 'variables': {'input': {'title': 'Morsi Necklace', 'status': 'DRAFT', 'options': ['Color'], 'variants': [{'options': ['Black'], 'sku': 'FG-0000702', 'price': '2500.0', 'inventoryManagement': 'SHOPIFY', 'inventoryPolicy': 'DENY', 'taxable': False, 'barcode': '2123243245'}, {'options': ['White'], 'sku': 'FG-0000703', 'price': '2500.0', 'inventoryManagement': 'SHOPIFY', 'inventoryPolicy': 'DENY', 'taxable': False, 'barcode': '242342342'}, {'options': ['Green'], 'sku': 'FG-0000705', 'price': '2500.0', 'inventoryManagement': 'SHOPIFY', 'inventoryPolicy': 'DENY', 'taxable': False}]}}}, 'response': None, 'status': None}
2025-08-03 14:01:04,035 - sync_service - INFO - API Call: {'service': 'shopify', 'endpoint': 'graphql_local', 'request': None, 'response': {'productCreate': {'product': {'id': 'gid://shopify/Product/7522726150210', 'title': 'Morsi Necklace', 'handle': 'morsi-necklace', 'variants': {'edges': [{'node': {'id': 'gid://shopify/ProductVariant/42360862408770', 'sku': 'FG-0000702', 'inventoryItem': {'id': 'gid://shopify/InventoryItem/44461228490818'}, 'selectedOptions': [{'name': 'Color', 'value': 'Black'}]}}, {'node': {'id': 'gid://shopify/ProductVariant/42360862441538', 'sku': 'FG-0000703', 'inventoryItem': {'id': 'gid://shopify/InventoryItem/44461228523586'}, 'selectedOptions': [{'name': 'Color', 'value': 'White'}]}}, {'node': {'id': 'gid://shopify/ProductVariant/42360862474306', 'sku': 'FG-0000705', 'inventoryItem': {'id': 'gid://shopify/InventoryItem/44461228556354'}, 'selectedOptions': [{'name': 'Color', 'value': 'Green'}]}}]}}, 'userErrors': []}}, 'status': 'success'}
2025-08-03 14:01:04,036 - sync_service - ERROR - Shopify full response for store local: {'msg': 'success', 'data': {'productCreate': {'product': {'id': 'gid://shopify/Product/7522726150210', 'title': 'Morsi Necklace', 'handle': 'morsi-necklace', 'variants': {'edges': [{'node': {'id': 'gid://shopify/ProductVariant/42360862408770', 'sku': 'FG-0000702', 'inventoryItem': {'id': 'gid://shopify/InventoryItem/44461228490818'}, 'selectedOptions': [{'name': 'Color', 'value': 'Black'}]}}, {'node': {'id': 'gid://shopify/ProductVariant/42360862441538', 'sku': 'FG-0000703', 'inventoryItem': {'id': 'gid://shopify/InventoryItem/44461228523586'}, 'selectedOptions': [{'name': 'Color', 'value': 'White'}]}}, {'node': {'id': 'gid://shopify/ProductVariant/42360862474306', 'sku': 'FG-0000705', 'inventoryItem': {'id': 'gid://shopify/InventoryItem/44461228556354'}, 'selectedOptions': [{'name': 'Color', 'value': 'Green'}]}}]}}, 'userErrors': []}}}
2025-08-03 14:01:04,319 - sync_service - INFO - API log added to SAP: shopify - /admin/api/graphql_local - success
2025-08-03 14:01:04,320 - sync_service - INFO - Successfully created product in store local
2025-08-03 14:01:04,321 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'U_SHOPIFY_MAPPING', 'request': {'method': 'POST', 'url': 'https://10.0.0.100:50000/b1s/v1/U_SHOPIFY_MAPPING', 'data': {'Code': '7522726150210', 'Name': '7522726150210', 'U_Shopify_Type': 'product', 'U_SAP_Code': 'Morsi Necklace', 'U_Shopify_Store': 'local', 'U_SAP_Type': 'item', 'U_CreateDate': '2025-08-03'}, 'params': None}, 'response': None, 'status': None}
2025-08-03 14:01:04,598 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'U_SHOPIFY_MAPPING', 'request': None, 'response': {'odata.metadata': 'https://10.0.0.100:50000/b1s/v1/$metadata#U_SHOPIFY_MAPPING/@Element', 'Code': '7522726150210', 'Name': '7522726150210', 'U_SAP_Code': 'Morsi Necklace', 'U_SAP_Type': 'item', 'U_Shopify_Type': 'product', 'U_Shopify_Store': 'local', 'U_CreateDate': None}, 'status': 'success'}
2025-08-03 14:01:04,599 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'U_SHOPIFY_MAPPING', 'request': {'method': 'POST', 'url': 'https://10.0.0.100:50000/b1s/v1/U_SHOPIFY_MAPPING', 'data': {'Code': '42360862408770', 'Name': '42360862408770', 'U_Shopify_Type': 'variant', 'U_SAP_Code': 'FG-0000702', 'U_Shopify_Store': 'local', 'U_SAP_Type': 'item', 'U_CreateDate': '2025-08-03'}, 'params': None}, 'response': None, 'status': None}
2025-08-03 14:01:04,931 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'U_SHOPIFY_MAPPING', 'request': None, 'response': {'odata.metadata': 'https://10.0.0.100:50000/b1s/v1/$metadata#U_SHOPIFY_MAPPING/@Element', 'Code': '42360862408770', 'Name': '42360862408770', 'U_SAP_Code': 'FG-0000702', 'U_SAP_Type': 'item', 'U_Shopify_Type': 'variant', 'U_Shopify_Store': 'local', 'U_CreateDate': None}, 'status': 'success'}
2025-08-03 14:01:04,933 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'U_SHOPIFY_MAPPING', 'request': {'method': 'POST', 'url': 'https://10.0.0.100:50000/b1s/v1/U_SHOPIFY_MAPPING', 'data': {'Code': '44461228490818', 'Name': '44461228490818', 'U_Shopify_Type': 'variant_inventory', 'U_SAP_Code': 'FG-0000702', 'U_Shopify_Store': 'local', 'U_SAP_Type': 'item', 'U_CreateDate': '2025-08-03'}, 'params': None}, 'response': None, 'status': None}
2025-08-03 14:01:05,217 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'U_SHOPIFY_MAPPING', 'request': None, 'response': {'odata.metadata': 'https://10.0.0.100:50000/b1s/v1/$metadata#U_SHOPIFY_MAPPING/@Element', 'Code': '44461228490818', 'Name': '44461228490818', 'U_SAP_Code': 'FG-0000702', 'U_SAP_Type': 'item', 'U_Shopify_Type': 'variant_inventory', 'U_Shopify_Store': 'local', 'U_CreateDate': None}, 'status': 'success'}
2025-08-03 14:01:05,219 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'U_SHOPIFY_MAPPING', 'request': {'method': 'POST', 'url': 'https://10.0.0.100:50000/b1s/v1/U_SHOPIFY_MAPPING', 'data': {'Code': '42360862441538', 'Name': '42360862441538', 'U_Shopify_Type': 'variant', 'U_SAP_Code': 'FG-0000703', 'U_Shopify_Store': 'local', 'U_SAP_Type': 'item', 'U_CreateDate': '2025-08-03'}, 'params': None}, 'response': None, 'status': None}
2025-08-03 14:01:05,498 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'U_SHOPIFY_MAPPING', 'request': None, 'response': {'odata.metadata': 'https://10.0.0.100:50000/b1s/v1/$metadata#U_SHOPIFY_MAPPING/@Element', 'Code': '42360862441538', 'Name': '42360862441538', 'U_SAP_Code': 'FG-0000703', 'U_SAP_Type': 'item', 'U_Shopify_Type': 'variant', 'U_Shopify_Store': 'local', 'U_CreateDate': None}, 'status': 'success'}
2025-08-03 14:01:05,499 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'U_SHOPIFY_MAPPING', 'request': {'method': 'POST', 'url': 'https://10.0.0.100:50000/b1s/v1/U_SHOPIFY_MAPPING', 'data': {'Code': '44461228523586', 'Name': '44461228523586', 'U_Shopify_Type': 'variant_inventory', 'U_SAP_Code': 'FG-0000703', 'U_Shopify_Store': 'local', 'U_SAP_Type': 'item', 'U_CreateDate': '2025-08-03'}, 'params': None}, 'response': None, 'status': None}
2025-08-03 14:01:05,839 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'U_SHOPIFY_MAPPING', 'request': None, 'response': {'odata.metadata': 'https://10.0.0.100:50000/b1s/v1/$metadata#U_SHOPIFY_MAPPING/@Element', 'Code': '44461228523586', 'Name': '44461228523586', 'U_SAP_Code': 'FG-0000703', 'U_SAP_Type': 'item', 'U_Shopify_Type': 'variant_inventory', 'U_Shopify_Store': 'local', 'U_CreateDate': None}, 'status': 'success'}
2025-08-03 14:01:05,840 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'U_SHOPIFY_MAPPING', 'request': {'method': 'POST', 'url': 'https://10.0.0.100:50000/b1s/v1/U_SHOPIFY_MAPPING', 'data': {'Code': '42360862474306', 'Name': '42360862474306', 'U_Shopify_Type': 'variant', 'U_SAP_Code': 'FG-0000705', 'U_Shopify_Store': 'local', 'U_SAP_Type': 'item', 'U_CreateDate': '2025-08-03'}, 'params': None}, 'response': None, 'status': None}
2025-08-03 14:01:06,126 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'U_SHOPIFY_MAPPING', 'request': None, 'response': {'odata.metadata': 'https://10.0.0.100:50000/b1s/v1/$metadata#U_SHOPIFY_MAPPING/@Element', 'Code': '42360862474306', 'Name': '42360862474306', 'U_SAP_Code': 'FG-0000705', 'U_SAP_Type': 'item', 'U_Shopify_Type': 'variant', 'U_Shopify_Store': 'local', 'U_CreateDate': None}, 'status': 'success'}
2025-08-03 14:01:06,129 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'U_SHOPIFY_MAPPING', 'request': {'method': 'POST', 'url': 'https://10.0.0.100:50000/b1s/v1/U_SHOPIFY_MAPPING', 'data': {'Code': '44461228556354', 'Name': '44461228556354', 'U_Shopify_Type': 'variant_inventory', 'U_SAP_Code': 'FG-0000705', 'U_Shopify_Store': 'local', 'U_SAP_Type': 'item', 'U_CreateDate': '2025-08-03'}, 'params': None}, 'response': None, 'status': None}
2025-08-03 14:01:06,468 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'U_SHOPIFY_MAPPING', 'request': None, 'response': {'odata.metadata': 'https://10.0.0.100:50000/b1s/v1/$metadata#U_SHOPIFY_MAPPING/@Element', 'Code': '44461228556354', 'Name': '44461228556354', 'U_SAP_Code': 'FG-0000705', 'U_SAP_Type': 'item', 'U_Shopify_Type': 'variant_inventory', 'U_Shopify_Store': 'local', 'U_CreateDate': None}, 'status': 'success'}
2025-08-03 14:01:06,974 - sync_service - INFO - Processing product group: ('Morsi Shoes', 'local') with 2 items for store local
2025-08-03 14:01:06,975 - sync_service - INFO - API Call: {'service': 'shopify', 'endpoint': 'graphql_local', 'request': {'query': '\n        query GetProductByHandle($handle: String!) {\n            productByHandle(handle: $handle) {\n                id\n                title\n                handle\n                description\n                variants(first: 50) {\n                    edges {\n                        node {\n                            id\n                            sku\n                            price\n                            inventoryItem {\n                                id\n                            }\n                            selectedOptions {\n                                name\n                                value\n                            }\n                        }\n                    }\n                }\n            }\n        }\n        ', 'variables': {'handle': 'morsi-shoes'}}, 'response': None, 'status': None}
2025-08-03 14:01:07,437 - sync_service - INFO - API Call: {'service': 'shopify', 'endpoint': 'graphql_local', 'request': None, 'response': {'productByHandle': None}, 'status': 'success'}
2025-08-03 14:01:07,437 - sync_service - INFO - Product Morsi Shoes doesn't exist in store local, creating new product
2025-08-03 14:01:07,722 - sync_service - INFO - API log added to SAP: shopify - /admin/api/graphql_local - success
2025-08-03 14:01:07,723 - sync_service - INFO - API Call: {'service': 'shopify', 'endpoint': 'graphql_local', 'request': {'query': '\n        mutation productCreate($input: ProductInput!) {\n            productCreate(input: $input) {\n                product {\n                    id\n                    title\n                    handle\n                    variants(first: 50) {\n                        edges {\n                            node {\n                                id\n                                sku\n                                inventoryItem {\n                                    id\n                                }\n                                selectedOptions {\n                                    name\n                                    value\n                                }\n                            }\n                        }\n                    }\n                }\n                userErrors {\n                    field\n                    message\n                }\n            }\n        }\n        ', 'variables': {'input': {'title': 'Morsi Shoes', 'status': 'DRAFT', 'options': ['Color'], 'variants': [{'options': ['Green'], 'sku': 'FG-0000706', 'price': '1000.0', 'inventoryManagement': 'SHOPIFY', 'inventoryPolicy': 'DENY', 'taxable': False}, {'options': ['Beige'], 'sku': 'FG-0000707', 'price': '1000.0', 'inventoryManagement': 'SHOPIFY', 'inventoryPolicy': 'DENY', 'taxable': False}]}}}, 'response': None, 'status': None}
2025-08-03 14:01:08,526 - sync_service - INFO - API Call: {'service': 'shopify', 'endpoint': 'graphql_local', 'request': None, 'response': {'productCreate': {'product': {'id': 'gid://shopify/Product/7522726182978', 'title': 'Morsi Shoes', 'handle': 'morsi-shoes', 'variants': {'edges': [{'node': {'id': 'gid://shopify/ProductVariant/42360862507074', 'sku': 'FG-0000706', 'inventoryItem': {'id': 'gid://shopify/InventoryItem/44461228589122'}, 'selectedOptions': [{'name': 'Color', 'value': 'Green'}]}}, {'node': {'id': 'gid://shopify/ProductVariant/42360862539842', 'sku': 'FG-0000707', 'inventoryItem': {'id': 'gid://shopify/InventoryItem/44461228621890'}, 'selectedOptions': [{'name': 'Color', 'value': 'Beige'}]}}]}}, 'userErrors': []}}, 'status': 'success'}
2025-08-03 14:01:08,527 - sync_service - ERROR - Shopify full response for store local: {'msg': 'success', 'data': {'productCreate': {'product': {'id': 'gid://shopify/Product/7522726182978', 'title': 'Morsi Shoes', 'handle': 'morsi-shoes', 'variants': {'edges': [{'node': {'id': 'gid://shopify/ProductVariant/42360862507074', 'sku': 'FG-0000706', 'inventoryItem': {'id': 'gid://shopify/InventoryItem/44461228589122'}, 'selectedOptions': [{'name': 'Color', 'value': 'Green'}]}}, {'node': {'id': 'gid://shopify/ProductVariant/42360862539842', 'sku': 'FG-0000707', 'inventoryItem': {'id': 'gid://shopify/InventoryItem/44461228621890'}, 'selectedOptions': [{'name': 'Color', 'value': 'Beige'}]}}]}}, 'userErrors': []}}}
2025-08-03 14:01:08,806 - sync_service - INFO - API log added to SAP: shopify - /admin/api/graphql_local - success
2025-08-03 14:01:08,807 - sync_service - INFO - Successfully created product in store local
2025-08-03 14:01:08,808 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'U_SHOPIFY_MAPPING', 'request': {'method': 'POST', 'url': 'https://10.0.0.100:50000/b1s/v1/U_SHOPIFY_MAPPING', 'data': {'Code': '7522726182978', 'Name': '7522726182978', 'U_Shopify_Type': 'product', 'U_SAP_Code': 'Morsi Shoes', 'U_Shopify_Store': 'local', 'U_SAP_Type': 'item', 'U_CreateDate': '2025-08-03'}, 'params': None}, 'response': None, 'status': None}
2025-08-03 14:01:09,113 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'U_SHOPIFY_MAPPING', 'request': None, 'response': {'odata.metadata': 'https://10.0.0.100:50000/b1s/v1/$metadata#U_SHOPIFY_MAPPING/@Element', 'Code': '7522726182978', 'Name': '7522726182978', 'U_SAP_Code': 'Morsi Shoes', 'U_SAP_Type': 'item', 'U_Shopify_Type': 'product', 'U_Shopify_Store': 'local', 'U_CreateDate': None}, 'status': 'success'}
2025-08-03 14:01:09,114 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'U_SHOPIFY_MAPPING', 'request': {'method': 'POST', 'url': 'https://10.0.0.100:50000/b1s/v1/U_SHOPIFY_MAPPING', 'data': {'Code': '42360862507074', 'Name': '42360862507074', 'U_Shopify_Type': 'variant', 'U_SAP_Code': 'FG-0000706', 'U_Shopify_Store': 'local', 'U_SAP_Type': 'item', 'U_CreateDate': '2025-08-03'}, 'params': None}, 'response': None, 'status': None}
2025-08-03 14:01:09,395 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'U_SHOPIFY_MAPPING', 'request': None, 'response': {'odata.metadata': 'https://10.0.0.100:50000/b1s/v1/$metadata#U_SHOPIFY_MAPPING/@Element', 'Code': '42360862507074', 'Name': '42360862507074', 'U_SAP_Code': 'FG-0000706', 'U_SAP_Type': 'item', 'U_Shopify_Type': 'variant', 'U_Shopify_Store': 'local', 'U_CreateDate': None}, 'status': 'success'}
2025-08-03 14:01:09,396 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'U_SHOPIFY_MAPPING', 'request': {'method': 'POST', 'url': 'https://10.0.0.100:50000/b1s/v1/U_SHOPIFY_MAPPING', 'data': {'Code': '44461228589122', 'Name': '44461228589122', 'U_Shopify_Type': 'variant_inventory', 'U_SAP_Code': 'FG-0000706', 'U_Shopify_Store': 'local', 'U_SAP_Type': 'item', 'U_CreateDate': '2025-08-03'}, 'params': None}, 'response': None, 'status': None}
2025-08-03 14:01:09,727 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'U_SHOPIFY_MAPPING', 'request': None, 'response': {'odata.metadata': 'https://10.0.0.100:50000/b1s/v1/$metadata#U_SHOPIFY_MAPPING/@Element', 'Code': '44461228589122', 'Name': '44461228589122', 'U_SAP_Code': 'FG-0000706', 'U_SAP_Type': 'item', 'U_Shopify_Type': 'variant_inventory', 'U_Shopify_Store': 'local', 'U_CreateDate': None}, 'status': 'success'}
2025-08-03 14:01:09,728 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'U_SHOPIFY_MAPPING', 'request': {'method': 'POST', 'url': 'https://10.0.0.100:50000/b1s/v1/U_SHOPIFY_MAPPING', 'data': {'Code': '42360862539842', 'Name': '42360862539842', 'U_Shopify_Type': 'variant', 'U_SAP_Code': 'FG-0000707', 'U_Shopify_Store': 'local', 'U_SAP_Type': 'item', 'U_CreateDate': '2025-08-03'}, 'params': None}, 'response': None, 'status': None}
2025-08-03 14:01:10,018 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'U_SHOPIFY_MAPPING', 'request': None, 'response': {'odata.metadata': 'https://10.0.0.100:50000/b1s/v1/$metadata#U_SHOPIFY_MAPPING/@Element', 'Code': '42360862539842', 'Name': '42360862539842', 'U_SAP_Code': 'FG-0000707', 'U_SAP_Type': 'item', 'U_Shopify_Type': 'variant', 'U_Shopify_Store': 'local', 'U_CreateDate': None}, 'status': 'success'}
2025-08-03 14:01:10,020 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'U_SHOPIFY_MAPPING', 'request': {'method': 'POST', 'url': 'https://10.0.0.100:50000/b1s/v1/U_SHOPIFY_MAPPING', 'data': {'Code': '44461228621890', 'Name': '44461228621890', 'U_Shopify_Type': 'variant_inventory', 'U_SAP_Code': 'FG-0000707', 'U_Shopify_Store': 'local', 'U_SAP_Type': 'item', 'U_CreateDate': '2025-08-03'}, 'params': None}, 'response': None, 'status': None}
2025-08-03 14:01:10,304 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'U_SHOPIFY_MAPPING', 'request': None, 'response': {'odata.metadata': 'https://10.0.0.100:50000/b1s/v1/$metadata#U_SHOPIFY_MAPPING/@Element', 'Code': '44461228621890', 'Name': '44461228621890', 'U_SAP_Code': 'FG-0000707', 'U_SAP_Type': 'item', 'U_Shopify_Type': 'variant_inventory', 'U_Shopify_Store': 'local', 'U_CreateDate': None}, 'status': 'success'}
2025-08-03 14:01:10,811 - sync_service - INFO - Sync Event: {'sync_type': 'multi_store_new_items_sap_to_shopify', 'items_processed': 5, 'success_count': 5, 'error_count': 1, 'details': None}
2025-08-03 14:01:10,814 - sync_service - INFO - Multi-store new items sync completed: 5 processed, 5 successful, 1 errors
2025-08-03 14:01:10,816 - sync_service - INFO - Starting stock change sync...
2025-08-03 14:01:10,817 - sync_service - INFO - Starting stock change sync using MASHURA_StockChangeB1SLQuery view
2025-08-03 14:01:10,818 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'view.svc/MASHURA_StockChangeB1SLQuery', 'request': {'method': 'GET', 'url': 'https://10.0.0.100:50000/b1s/v1/view.svc/MASHURA_StockChangeB1SLQuery', 'data': None, 'params': {'$top': 50}}, 'response': None, 'status': None}
2025-08-03 14:01:11,135 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'view.svc/MASHURA_StockChangeB1SLQuery', 'request': None, 'response': {'odata.metadata': 'https://10.0.0.100:50000/b1s/v1/view.svc/$metadata#MASHURA_StockChangeB1SLQuery', 'value': [{'ItemCode': 'FG-0000708', 'Variant_ID': '44461228064834', 'OnHand': 400.0, 'Available': 200.0, 'Location_ID': '68605345858', 'id__': 1}, {'ItemCode': 'FG-0000709', 'Variant_ID': '44461228097602', 'OnHand': 35.0, 'Available': 10.0, 'Location_ID': '68605345858', 'id__': 2}, {'ItemCode': 'FG-0000710', 'Variant_ID': '44461228130370', 'OnHand': 40.0, 'Available': 20.0, 'Location_ID': '68605345858', 'id__': 3}, {'ItemCode': 'FG-0000706', 'Variant_ID': '44461228589122', 'OnHand': 100.0, 'Available': 100.0, 'Location_ID': '68605345858', 'id__': 4}, {'ItemCode': 'FG-0000707', 'Variant_ID': '44461228621890', 'OnHand': 100.0, 'Available': 100.0, 'Location_ID': '68605345858', 'id__': 5}]}, 'status': 'success'}
2025-08-03 14:01:11,136 - sync_service - INFO - Updating inventory for item FG-0000708 (variant 44461228064834) at location 68605345858
2025-08-03 14:01:11,137 - sync_service - INFO - API Call: {'service': 'shopify', 'endpoint': 'rest_inventory_local', 'request': {'location_id': '68605345858', 'inventory_item_id': '44461228064834', 'available': 200}, 'response': None, 'status': None}
2025-08-03 14:01:22,749 - sync_service - INFO - API Call: {'service': 'shopify', 'endpoint': 'rest_inventory_local', 'request': None, 'response': {'inventory_level': {'inventory_item_id': 44461228064834, 'location_id': 68605345858, 'available': 200, 'updated_at': '2025-08-03T14:01:22+03:00', 'admin_graphql_api_id': 'gid://shopify/InventoryLevel/103109591106?inventory_item_id=44461228064834'}}, 'status': 'success'}
2025-08-03 14:01:23,459 - sync_service - INFO - API log added to SAP: shopify - inventory_levels - success
2025-08-03 14:01:23,566 - sync_service - INFO - Updating inventory for item FG-0000709 (variant 44461228097602) at location 68605345858
2025-08-03 14:01:23,567 - sync_service - INFO - API Call: {'service': 'shopify', 'endpoint': 'rest_inventory_local', 'request': {'location_id': '68605345858', 'inventory_item_id': '44461228097602', 'available': 10}, 'response': None, 'status': None}
2025-08-03 14:01:24,127 - sync_service - INFO - API Call: {'service': 'shopify', 'endpoint': 'rest_inventory_local', 'request': None, 'response': {'inventory_level': {'inventory_item_id': 44461228097602, 'location_id': 68605345858, 'available': 10, 'updated_at': '2025-08-03T14:01:23+03:00', 'admin_graphql_api_id': 'gid://shopify/InventoryLevel/103109591106?inventory_item_id=44461228097602'}}, 'status': 'success'}
2025-08-03 14:01:24,861 - sync_service - INFO - API log added to SAP: shopify - inventory_levels - success
2025-08-03 14:01:24,970 - sync_service - INFO - Updating inventory for item FG-0000710 (variant 44461228130370) at location 68605345858
2025-08-03 14:01:24,970 - sync_service - INFO - API Call: {'service': 'shopify', 'endpoint': 'rest_inventory_local', 'request': {'location_id': '68605345858', 'inventory_item_id': '44461228130370', 'available': 20}, 'response': None, 'status': None}
2025-08-03 14:01:25,514 - sync_service - INFO - API Call: {'service': 'shopify', 'endpoint': 'rest_inventory_local', 'request': None, 'response': {'inventory_level': {'inventory_item_id': 44461228130370, 'location_id': 68605345858, 'available': 20, 'updated_at': '2025-08-03T14:01:25+03:00', 'admin_graphql_api_id': 'gid://shopify/InventoryLevel/103109591106?inventory_item_id=44461228130370'}}, 'status': 'success'}
2025-08-03 14:01:26,264 - sync_service - INFO - API log added to SAP: shopify - inventory_levels - success
2025-08-03 14:01:26,374 - sync_service - INFO - Updating inventory for item FG-0000706 (variant 44461228589122) at location 68605345858
2025-08-03 14:01:26,376 - sync_service - INFO - API Call: {'service': 'shopify', 'endpoint': 'rest_inventory_local', 'request': {'location_id': '68605345858', 'inventory_item_id': '44461228589122', 'available': 100}, 'response': None, 'status': None}
2025-08-03 14:01:26,907 - sync_service - INFO - API Call: {'service': 'shopify', 'endpoint': 'rest_inventory_local', 'request': None, 'response': {'inventory_level': {'inventory_item_id': 44461228589122, 'location_id': 68605345858, 'available': 100, 'updated_at': '2025-08-03T14:01:26+03:00', 'admin_graphql_api_id': 'gid://shopify/InventoryLevel/103109591106?inventory_item_id=44461228589122'}}, 'status': 'success'}
2025-08-03 14:01:27,664 - sync_service - INFO - API log added to SAP: shopify - inventory_levels - success
2025-08-03 14:01:27,779 - sync_service - INFO - Updating inventory for item FG-0000707 (variant 44461228621890) at location 68605345858
2025-08-03 14:01:27,780 - sync_service - INFO - API Call: {'service': 'shopify', 'endpoint': 'rest_inventory_local', 'request': {'location_id': '68605345858', 'inventory_item_id': '44461228621890', 'available': 100}, 'response': None, 'status': None}
2025-08-03 14:01:28,329 - sync_service - INFO - API Call: {'service': 'shopify', 'endpoint': 'rest_inventory_local', 'request': None, 'response': {'inventory_level': {'inventory_item_id': 44461228621890, 'location_id': 68605345858, 'available': 100, 'updated_at': '2025-08-03T14:01:28+03:00', 'admin_graphql_api_id': 'gid://shopify/InventoryLevel/103109591106?inventory_item_id=44461228621890'}}, 'status': 'success'}
2025-08-03 14:01:29,219 - sync_service - INFO - API log added to SAP: shopify - inventory_levels - success
2025-08-03 14:01:29,323 - sync_service - INFO - Stock change sync completed: 5 processed, 5 successful, 0 errors
2025-08-03 14:03:15,848 - sync_service - INFO - Initialized Shopify client for store: Local Store (local)
2025-08-03 14:03:15,906 - sync_service - INFO - Starting all syncs...
2025-08-03 14:03:15,907 - sync_service - INFO - Starting new items sync...
2025-08-03 14:03:15,909 - sync_service - INFO - Starting multi-store new items sync from SAP to Shopify
2025-08-03 14:03:15,911 - sync_service - INFO - Fetching new items for store: local
2025-08-03 14:03:15,913 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'login', 'request': {'company': 'JudeBenHalim_Test', 'user': 'manager'}, 'response': None, 'status': None}
2025-08-03 14:03:16,729 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'login', 'request': None, 'response': {'status': 'success'}, 'status': 'success'}
2025-08-03 14:03:16,730 - sync_service - INFO - SAP login successful
2025-08-03 14:03:16,736 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': "view.svc/MASHURA_New_ItemsB1SLQuery?$filter=Shopify_Store eq 'local'&$orderby=MainProduct", 'request': {'method': 'GET', 'url': "https://10.0.0.100:50000/b1s/v1/view.svc/MASHURA_New_ItemsB1SLQuery?$filter=Shopify_Store eq 'local'&$orderby=MainProduct", 'data': None, 'params': None}, 'response': None, 'status': None}
2025-08-03 14:03:17,458 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': "view.svc/MASHURA_New_ItemsB1SLQuery?$filter=Shopify_Store eq 'local'&$orderby=MainProduct", 'request': None, 'response': {'odata.metadata': 'https://10.0.0.100:50000/b1s/v1/view.svc/$metadata#MASHURA_New_ItemsB1SLQuery', 'value': []}, 'status': 'success'}
2025-08-03 14:03:17,472 - sync_service - INFO - No new items found in SAP for store local
2025-08-03 14:03:17,474 - sync_service - INFO - Sync Event: {'sync_type': 'multi_store_new_items_sap_to_shopify', 'items_processed': 0, 'success_count': 0, 'error_count': 0, 'details': None}
2025-08-03 14:03:17,475 - sync_service - INFO - Multi-store new items sync completed: 0 processed, 0 successful, 0 errors
2025-08-03 14:03:17,475 - sync_service - INFO - Starting stock change sync...
2025-08-03 14:03:17,476 - sync_service - INFO - Starting stock change sync using MASHURA_StockChangeB1SLQuery view
2025-08-03 14:03:17,477 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'view.svc/MASHURA_StockChangeB1SLQuery', 'request': {'method': 'GET', 'url': 'https://10.0.0.100:50000/b1s/v1/view.svc/MASHURA_StockChangeB1SLQuery', 'data': None, 'params': {'$top': 50}}, 'response': None, 'status': None}
2025-08-03 14:03:18,198 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'view.svc/MASHURA_StockChangeB1SLQuery', 'request': None, 'response': {'odata.metadata': 'https://10.0.0.100:50000/b1s/v1/view.svc/$metadata#MASHURA_StockChangeB1SLQuery', 'value': [{'ItemCode': 'FG-0000708', 'Variant_ID': '44461228064834', 'OnHand': 400.0, 'Available': 200.0, 'Location_ID': '68605345858', 'id__': 1}, {'ItemCode': 'FG-0000709', 'Variant_ID': '44461228097602', 'OnHand': 35.0, 'Available': 10.0, 'Location_ID': '68605345858', 'id__': 2}, {'ItemCode': 'FG-0000710', 'Variant_ID': '44461228130370', 'OnHand': 40.0, 'Available': 20.0, 'Location_ID': '68605345858', 'id__': 3}]}, 'status': 'success'}
2025-08-03 14:03:18,201 - sync_service - INFO - Updating inventory for item FG-0000708 (variant 44461228064834) at location 68605345858
2025-08-03 14:03:18,204 - sync_service - INFO - API Call: {'service': 'shopify', 'endpoint': 'rest_inventory_local', 'request': {'location_id': '68605345858', 'inventory_item_id': '44461228064834', 'available': 200}, 'response': None, 'status': None}
2025-08-03 14:03:29,828 - sync_service - INFO - API Call: {'service': 'shopify', 'endpoint': 'rest_inventory_local', 'request': None, 'response': {'inventory_level': {'inventory_item_id': 44461228064834, 'location_id': 68605345858, 'available': 200, 'updated_at': '2025-08-03T14:01:25+03:00', 'admin_graphql_api_id': 'gid://shopify/InventoryLevel/103109591106?inventory_item_id=44461228064834'}}, 'status': 'success'}
2025-08-03 14:03:42,102 - sync_service - INFO - SAP logging client login successful
2025-08-03 14:03:42,769 - sync_service - INFO - API log added to SAP: shopify - inventory_levels - success
2025-08-03 14:03:42,871 - sync_service - INFO - Updating inventory for item FG-0000709 (variant 44461228097602) at location 68605345858
2025-08-03 14:03:42,874 - sync_service - INFO - API Call: {'service': 'shopify', 'endpoint': 'rest_inventory_local', 'request': {'location_id': '68605345858', 'inventory_item_id': '44461228097602', 'available': 10}, 'response': None, 'status': None}
2025-08-03 14:03:43,376 - sync_service - INFO - API Call: {'service': 'shopify', 'endpoint': 'rest_inventory_local', 'request': None, 'response': {'inventory_level': {'inventory_item_id': 44461228097602, 'location_id': 68605345858, 'available': 10, 'updated_at': '2025-08-03T14:01:27+03:00', 'admin_graphql_api_id': 'gid://shopify/InventoryLevel/103109591106?inventory_item_id=44461228097602'}}, 'status': 'success'}
2025-08-03 14:03:44,559 - sync_service - INFO - API log added to SAP: shopify - inventory_levels - success
2025-08-03 14:03:44,668 - sync_service - INFO - Updating inventory for item FG-0000710 (variant 44461228130370) at location 68605345858
2025-08-03 14:03:44,670 - sync_service - INFO - API Call: {'service': 'shopify', 'endpoint': 'rest_inventory_local', 'request': {'location_id': '68605345858', 'inventory_item_id': '44461228130370', 'available': 20}, 'response': None, 'status': None}
2025-08-03 14:03:45,168 - sync_service - INFO - API Call: {'service': 'shopify', 'endpoint': 'rest_inventory_local', 'request': None, 'response': {'inventory_level': {'inventory_item_id': 44461228130370, 'location_id': 68605345858, 'available': 20, 'updated_at': '2025-08-03T14:01:27+03:00', 'admin_graphql_api_id': 'gid://shopify/InventoryLevel/103109591106?inventory_item_id=44461228130370'}}, 'status': 'success'}
2025-08-03 14:03:46,317 - sync_service - INFO - API log added to SAP: shopify - inventory_levels - success
2025-08-03 14:03:46,424 - sync_service - INFO - Stock change sync completed: 3 processed, 3 successful, 0 errors
2025-08-03 14:09:27,637 - sync_service - INFO - Initialized Shopify client for store: Local Store (local)
2025-08-03 14:09:27,661 - sync_service - INFO - Starting all syncs...
2025-08-03 14:09:27,663 - sync_service - INFO - Starting new items sync...
2025-08-03 14:09:27,663 - sync_service - INFO - Starting multi-store new items sync from SAP to Shopify
2025-08-03 14:09:27,666 - sync_service - INFO - Fetching new items for store: local
2025-08-03 14:09:27,667 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'login', 'request': {'company': 'JudeBenHalim_Test', 'user': 'manager'}, 'response': None, 'status': None}
2025-08-03 14:09:28,681 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'login', 'request': None, 'response': {'status': 'success'}, 'status': 'success'}
2025-08-03 14:09:28,684 - sync_service - INFO - SAP login successful
2025-08-03 14:09:28,686 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': "view.svc/MASHURA_New_ItemsB1SLQuery?$filter=Shopify_Store eq 'local'&$orderby=MainProduct", 'request': {'method': 'GET', 'url': "https://10.0.0.100:50000/b1s/v1/view.svc/MASHURA_New_ItemsB1SLQuery?$filter=Shopify_Store eq 'local'&$orderby=MainProduct", 'data': None, 'params': None}, 'response': None, 'status': None}
2025-08-03 14:09:29,492 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': "view.svc/MASHURA_New_ItemsB1SLQuery?$filter=Shopify_Store eq 'local'&$orderby=MainProduct", 'request': None, 'response': {'odata.metadata': 'https://10.0.0.100:50000/b1s/v1/view.svc/$metadata#MASHURA_New_ItemsB1SLQuery', 'value': [{'itemcode': 'FG-0000711', 'ItemName': 'Morsi Keyboard', 'MainProduct': None, 'Color': None, 'Price': 1000.0, 'Shopify_Store': 'local', 'Shopify_ProductCode': None, 'Status': 'new', 'Barcode': None, 'id__': 1}]}, 'status': 'success'}
2025-08-03 14:09:29,497 - sync_service - INFO - Product group: ('FG-0000711', 'local') has 1 items
2025-08-03 14:09:29,500 - sync_service - INFO - Grouped 1 items into 1 product groups for store local
2025-08-03 14:09:29,501 - sync_service - INFO - Processing product group: ('FG-0000711', 'local') with 1 items for store local
2025-08-03 14:09:29,502 - sync_service - INFO - API Call: {'service': 'shopify', 'endpoint': 'graphql_local', 'request': {'query': '\n        query GetProductByHandle($handle: String!) {\n            productByHandle(handle: $handle) {\n                id\n                title\n                handle\n                description\n                variants(first: 50) {\n                    edges {\n                        node {\n                            id\n                            sku\n                            price\n                            inventoryItem {\n                                id\n                            }\n                            selectedOptions {\n                                name\n                                value\n                            }\n                        }\n                    }\n                }\n            }\n        }\n        ', 'variables': {'handle': 'default'}}, 'response': None, 'status': None}
2025-08-03 14:09:30,008 - sync_service - INFO - API Call: {'service': 'shopify', 'endpoint': 'graphql_local', 'request': None, 'response': {'productByHandle': None}, 'status': 'success'}
2025-08-03 14:09:30,009 - sync_service - INFO - Product None doesn't exist in store local, creating new product
2025-08-03 14:09:31,031 - sync_service - INFO - SAP logging client login successful
2025-08-03 14:09:31,889 - sync_service - INFO - API log added to SAP: shopify - /admin/api/graphql_local - success
2025-08-03 14:09:31,893 - sync_service - INFO - API Call: {'service': 'shopify', 'endpoint': 'graphql_local', 'request': {'query': '\n        mutation productCreate($input: ProductInput!) {\n            productCreate(input: $input) {\n                product {\n                    id\n                    title\n                    handle\n                    variants(first: 50) {\n                        edges {\n                            node {\n                                id\n                                sku\n                                inventoryItem {\n                                    id\n                                }\n                                selectedOptions {\n                                    name\n                                    value\n                                }\n                            }\n                        }\n                    }\n                }\n                userErrors {\n                    field\n                    message\n                }\n            }\n        }\n        ', 'variables': {'input': {'title': 'Morsi Keyboard', 'descriptionHtml': '', 'vendor': '', 'productType': 'Default', 'status': 'DRAFT', 'tags': [], 'variants': [{'sku': 'FG-0000711', 'price': '1000.0', 'inventoryPolicy': 'DENY', 'inventoryManagement': 'SHOPIFY', 'weight': 0.0, 'weightUnit': 'KILOGRAMS', 'taxable': False}], 'seo': {'title': 'Morsi Keyboard', 'description': ''}}}}, 'response': None, 'status': None}
2025-08-03 14:09:32,824 - sync_service - INFO - API Call: {'service': 'shopify', 'endpoint': 'graphql_local', 'request': None, 'response': {'productCreate': {'product': {'id': 'gid://shopify/Product/7522730344514', 'title': 'Morsi Keyboard', 'handle': 'morsi-keyboard', 'variants': {'edges': [{'node': {'id': 'gid://shopify/ProductVariant/42360874500162', 'sku': 'FG-0000711', 'inventoryItem': {'id': 'gid://shopify/InventoryItem/44461240680514'}, 'selectedOptions': [{'name': 'Title', 'value': 'Default Title'}]}}]}}, 'userErrors': []}}, 'status': 'success'}
2025-08-03 14:09:32,824 - sync_service - ERROR - Shopify full response for store local: {'msg': 'success', 'data': {'productCreate': {'product': {'id': 'gid://shopify/Product/7522730344514', 'title': 'Morsi Keyboard', 'handle': 'morsi-keyboard', 'variants': {'edges': [{'node': {'id': 'gid://shopify/ProductVariant/42360874500162', 'sku': 'FG-0000711', 'inventoryItem': {'id': 'gid://shopify/InventoryItem/44461240680514'}, 'selectedOptions': [{'name': 'Title', 'value': 'Default Title'}]}}]}}, 'userErrors': []}}}
2025-08-03 14:09:33,691 - sync_service - INFO - API log added to SAP: shopify - /admin/api/graphql_local - success
2025-08-03 14:09:33,692 - sync_service - INFO - Successfully created product in store local
2025-08-03 14:09:33,693 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'U_SHOPIFY_MAPPING', 'request': {'method': 'POST', 'url': 'https://10.0.0.100:50000/b1s/v1/U_SHOPIFY_MAPPING', 'data': {'Code': '7522730344514', 'Name': '7522730344514', 'U_Shopify_Type': 'product', 'U_SAP_Code': 'FG-0000711', 'U_Shopify_Store': 'local', 'U_SAP_Type': 'item', 'U_CreateDate': '2025-08-03'}, 'params': None}, 'response': None, 'status': None}
2025-08-03 14:09:34,717 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'U_SHOPIFY_MAPPING', 'request': None, 'response': {'odata.metadata': 'https://10.0.0.100:50000/b1s/v1/$metadata#U_SHOPIFY_MAPPING/@Element', 'Code': '7522730344514', 'Name': '7522730344514', 'U_SAP_Code': 'FG-0000711', 'U_SAP_Type': 'item', 'U_Shopify_Type': 'product', 'U_Shopify_Store': 'local', 'U_CreateDate': None}, 'status': 'success'}
2025-08-03 14:09:34,720 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'U_SHOPIFY_MAPPING', 'request': {'method': 'POST', 'url': 'https://10.0.0.100:50000/b1s/v1/U_SHOPIFY_MAPPING', 'data': {'Code': '42360874500162', 'Name': '42360874500162', 'U_Shopify_Type': 'variant', 'U_SAP_Code': 'FG-0000711', 'U_Shopify_Store': 'local', 'U_SAP_Type': 'item', 'U_CreateDate': '2025-08-03'}, 'params': None}, 'response': None, 'status': None}
2025-08-03 14:09:35,653 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'U_SHOPIFY_MAPPING', 'request': None, 'response': {'odata.metadata': 'https://10.0.0.100:50000/b1s/v1/$metadata#U_SHOPIFY_MAPPING/@Element', 'Code': '42360874500162', 'Name': '42360874500162', 'U_SAP_Code': 'FG-0000711', 'U_SAP_Type': 'item', 'U_Shopify_Type': 'variant', 'U_Shopify_Store': 'local', 'U_CreateDate': None}, 'status': 'success'}
2025-08-03 14:09:35,657 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'U_SHOPIFY_MAPPING', 'request': {'method': 'POST', 'url': 'https://10.0.0.100:50000/b1s/v1/U_SHOPIFY_MAPPING', 'data': {'Code': '44461240680514', 'Name': '44461240680514', 'U_Shopify_Type': 'variant_inventory', 'U_SAP_Code': 'FG-0000711', 'U_Shopify_Store': 'local', 'U_SAP_Type': 'item', 'U_CreateDate': '2025-08-03'}, 'params': None}, 'response': None, 'status': None}
2025-08-03 14:09:36,368 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'U_SHOPIFY_MAPPING', 'request': None, 'response': {'odata.metadata': 'https://10.0.0.100:50000/b1s/v1/$metadata#U_SHOPIFY_MAPPING/@Element', 'Code': '44461240680514', 'Name': '44461240680514', 'U_SAP_Code': 'FG-0000711', 'U_SAP_Type': 'item', 'U_Shopify_Type': 'variant_inventory', 'U_Shopify_Store': 'local', 'U_CreateDate': None}, 'status': 'success'}
2025-08-03 14:09:36,873 - sync_service - INFO - Sync Event: {'sync_type': 'multi_store_new_items_sap_to_shopify', 'items_processed': 1, 'success_count': 1, 'error_count': 0, 'details': None}
2025-08-03 14:09:36,875 - sync_service - INFO - Multi-store new items sync completed: 1 processed, 1 successful, 0 errors
2025-08-03 14:09:36,876 - sync_service - INFO - Starting stock change sync...
2025-08-03 14:09:36,877 - sync_service - INFO - Starting stock change sync using MASHURA_StockChangeB1SLQuery view
2025-08-03 14:09:36,879 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'view.svc/MASHURA_StockChangeB1SLQuery', 'request': {'method': 'GET', 'url': 'https://10.0.0.100:50000/b1s/v1/view.svc/MASHURA_StockChangeB1SLQuery', 'data': None, 'params': {'$top': 50}}, 'response': None, 'status': None}
2025-08-03 14:09:37,210 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'view.svc/MASHURA_StockChangeB1SLQuery', 'request': None, 'response': {'odata.metadata': 'https://10.0.0.100:50000/b1s/v1/view.svc/$metadata#MASHURA_StockChangeB1SLQuery', 'value': [{'ItemCode': 'FG-0000711', 'Variant_ID': '44461240680514', 'OnHand': 60.0, 'Available': 30.0, 'Location_ID': '68605345858', 'id__': 1}, {'ItemCode': 'FG-0000708', 'Variant_ID': '44461228064834', 'OnHand': 400.0, 'Available': 200.0, 'Location_ID': '68605345858', 'id__': 2}, {'ItemCode': 'FG-0000709', 'Variant_ID': '44461228097602', 'OnHand': 35.0, 'Available': 10.0, 'Location_ID': '68605345858', 'id__': 3}, {'ItemCode': 'FG-0000710', 'Variant_ID': '44461228130370', 'OnHand': 40.0, 'Available': 20.0, 'Location_ID': '68605345858', 'id__': 4}]}, 'status': 'success'}
2025-08-03 14:09:37,214 - sync_service - INFO - Updating inventory for item FG-0000711 (variant 44461240680514) at location 68605345858
2025-08-03 14:09:37,215 - sync_service - INFO - API Call: {'service': 'shopify', 'endpoint': 'rest_inventory_local', 'request': {'location_id': '68605345858', 'inventory_item_id': '44461240680514', 'available': 30}, 'response': None, 'status': None}
2025-08-03 14:09:41,108 - sync_service - INFO - API Call: {'service': 'shopify', 'endpoint': 'rest_inventory_local', 'request': None, 'response': {'inventory_level': {'inventory_item_id': 44461240680514, 'location_id': 68605345858, 'available': 30, 'updated_at': '2025-08-03T14:09:40+03:00', 'admin_graphql_api_id': 'gid://shopify/InventoryLevel/103109591106?inventory_item_id=44461240680514'}}, 'status': 'success'}
2025-08-03 14:09:42,391 - sync_service - INFO - API log added to SAP: shopify - inventory_levels - success
2025-08-03 14:09:42,497 - sync_service - INFO - Updating inventory for item FG-0000708 (variant 44461228064834) at location 68605345858
2025-08-03 14:09:42,500 - sync_service - INFO - API Call: {'service': 'shopify', 'endpoint': 'rest_inventory_local', 'request': {'location_id': '68605345858', 'inventory_item_id': '44461228064834', 'available': 200}, 'response': None, 'status': None}
2025-08-03 14:09:43,107 - sync_service - INFO - API Call: {'service': 'shopify', 'endpoint': 'rest_inventory_local', 'request': None, 'response': {'inventory_level': {'inventory_item_id': 44461228064834, 'location_id': 68605345858, 'available': 200, 'updated_at': '2025-08-03T14:01:25+03:00', 'admin_graphql_api_id': 'gid://shopify/InventoryLevel/103109591106?inventory_item_id=44461228064834'}}, 'status': 'success'}
2025-08-03 14:09:43,927 - sync_service - INFO - API log added to SAP: shopify - inventory_levels - success
2025-08-03 14:09:44,041 - sync_service - INFO - Updating inventory for item FG-0000709 (variant 44461228097602) at location 68605345858
2025-08-03 14:09:44,042 - sync_service - INFO - API Call: {'service': 'shopify', 'endpoint': 'rest_inventory_local', 'request': {'location_id': '68605345858', 'inventory_item_id': '44461228097602', 'available': 10}, 'response': None, 'status': None}
2025-08-03 14:09:44,642 - sync_service - INFO - API Call: {'service': 'shopify', 'endpoint': 'rest_inventory_local', 'request': None, 'response': {'inventory_level': {'inventory_item_id': 44461228097602, 'location_id': 68605345858, 'available': 10, 'updated_at': '2025-08-03T14:01:27+03:00', 'admin_graphql_api_id': 'gid://shopify/InventoryLevel/103109591106?inventory_item_id=44461228097602'}}, 'status': 'success'}
2025-08-03 14:09:45,443 - sync_service - INFO - API log added to SAP: shopify - inventory_levels - success
2025-08-03 14:09:45,551 - sync_service - INFO - Updating inventory for item FG-0000710 (variant 44461228130370) at location 68605345858
2025-08-03 14:09:45,553 - sync_service - INFO - API Call: {'service': 'shopify', 'endpoint': 'rest_inventory_local', 'request': {'location_id': '68605345858', 'inventory_item_id': '44461228130370', 'available': 20}, 'response': None, 'status': None}
2025-08-03 14:09:46,075 - sync_service - INFO - API Call: {'service': 'shopify', 'endpoint': 'rest_inventory_local', 'request': None, 'response': {'inventory_level': {'inventory_item_id': 44461228130370, 'location_id': 68605345858, 'available': 20, 'updated_at': '2025-08-03T14:01:27+03:00', 'admin_graphql_api_id': 'gid://shopify/InventoryLevel/103109591106?inventory_item_id=44461228130370'}}, 'status': 'success'}
2025-08-03 14:09:57,986 - sync_service - INFO - API log added to SAP: shopify - inventory_levels - success
2025-08-03 14:09:58,096 - sync_service - INFO - Stock change sync completed: 4 processed, 4 successful, 0 errors
2025-08-03 15:14:33,901 - sync_service - INFO - Initialized Shopify client for store: Local Store (local)
2025-08-03 15:14:33,970 - sync_service - INFO - Starting all syncs...
2025-08-03 15:14:33,972 - sync_service - INFO - Starting new items sync...
2025-08-03 15:14:33,973 - sync_service - INFO - Starting multi-store new items sync from SAP to Shopify
2025-08-03 15:14:33,974 - sync_service - INFO - Fetching new items for store: local
2025-08-03 15:14:33,974 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'login', 'request': {'company': 'JudeBenHalim_Test', 'user': 'manager'}, 'response': None, 'status': None}
2025-08-03 15:14:35,224 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'login', 'request': None, 'response': {'status': 'success'}, 'status': 'success'}
2025-08-03 15:14:35,226 - sync_service - INFO - SAP login successful
2025-08-03 15:14:35,229 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': "view.svc/MASHURA_New_ItemsB1SLQuery?$filter=Shopify_Store eq 'local'&$orderby=MainProduct", 'request': {'method': 'GET', 'url': "https://10.0.0.100:50000/b1s/v1/view.svc/MASHURA_New_ItemsB1SLQuery?$filter=Shopify_Store eq 'local'&$orderby=MainProduct", 'data': None, 'params': None}, 'response': None, 'status': None}
2025-08-03 15:14:36,361 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': "view.svc/MASHURA_New_ItemsB1SLQuery?$filter=Shopify_Store eq 'local'&$orderby=MainProduct", 'request': None, 'response': {'odata.metadata': 'https://10.0.0.100:50000/b1s/v1/view.svc/$metadata#MASHURA_New_ItemsB1SLQuery', 'value': []}, 'status': 'success'}
2025-08-03 15:14:36,363 - sync_service - INFO - No new items found in SAP for store local
2025-08-03 15:14:36,365 - sync_service - INFO - Sync Event: {'sync_type': 'multi_store_new_items_sap_to_shopify', 'items_processed': 0, 'success_count': 0, 'error_count': 0, 'details': None}
2025-08-03 15:14:36,367 - sync_service - INFO - Multi-store new items sync completed: 0 processed, 0 successful, 0 errors
2025-08-03 15:14:36,368 - sync_service - INFO - Starting stock change sync...
2025-08-03 15:14:36,368 - sync_service - INFO - Starting stock change sync using MASHURA_StockChangeB1SLQuery view
2025-08-03 15:14:36,369 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'view.svc/MASHURA_StockChangeB1SLQuery', 'request': {'method': 'GET', 'url': 'https://10.0.0.100:50000/b1s/v1/view.svc/MASHURA_StockChangeB1SLQuery', 'data': None, 'params': {'$top': 50}}, 'response': None, 'status': None}
2025-08-03 15:14:37,874 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'view.svc/MASHURA_StockChangeB1SLQuery', 'request': None, 'response': {'odata.metadata': 'https://10.0.0.100:50000/b1s/v1/view.svc/$metadata#MASHURA_StockChangeB1SLQuery', 'value': [{'ItemCode': 'FG-0000711', 'Variant_ID': '44461240680514', 'OnHand': 60.0, 'Available': 30.0, 'Location_ID': '68605345858', 'id__': 1}, {'ItemCode': 'FG-0000708', 'Variant_ID': '44461228064834', 'OnHand': 400.0, 'Available': 200.0, 'Location_ID': '68605345858', 'id__': 2}, {'ItemCode': 'FG-0000709', 'Variant_ID': '44461228097602', 'OnHand': 35.0, 'Available': 10.0, 'Location_ID': '68605345858', 'id__': 3}, {'ItemCode': 'FG-0000710', 'Variant_ID': '44461228130370', 'OnHand': 40.0, 'Available': 20.0, 'Location_ID': '68605345858', 'id__': 4}]}, 'status': 'success'}
2025-08-03 15:14:37,878 - sync_service - INFO - Updating inventory for item FG-0000711 (variant 44461240680514) at location 68605345858
2025-08-03 15:14:37,880 - sync_service - INFO - API Call: {'service': 'shopify', 'endpoint': 'rest_inventory_local', 'request': {'location_id': '68605345858', 'inventory_item_id': '44461240680514', 'available': 30}, 'response': None, 'status': None}
2025-08-03 15:14:38,600 - sync_service - INFO - API Call: {'service': 'shopify', 'endpoint': 'rest_inventory_local', 'request': None, 'response': {'inventory_level': {'inventory_item_id': 44461240680514, 'location_id': 68605345858, 'available': 30, 'updated_at': '2025-08-03T14:09:41+03:00', 'admin_graphql_api_id': 'gid://shopify/InventoryLevel/103109591106?inventory_item_id=44461240680514'}}, 'status': 'success'}
2025-08-03 15:14:40,145 - sync_service - INFO - SAP logging client login successful
2025-08-03 15:14:41,767 - sync_service - INFO - API log added to SAP: shopify - inventory_levels - success
2025-08-03 15:14:41,873 - sync_service - INFO - Updating inventory for item FG-0000708 (variant 44461228064834) at location 68605345858
2025-08-03 15:14:41,875 - sync_service - INFO - API Call: {'service': 'shopify', 'endpoint': 'rest_inventory_local', 'request': {'location_id': '68605345858', 'inventory_item_id': '44461228064834', 'available': 200}, 'response': None, 'status': None}
2025-08-03 15:14:53,542 - sync_service - INFO - API Call: {'service': 'shopify', 'endpoint': 'rest_inventory_local', 'request': None, 'response': {'inventory_level': {'inventory_item_id': 44461228064834, 'location_id': 68605345858, 'available': 200, 'updated_at': '2025-08-03T14:01:25+03:00', 'admin_graphql_api_id': 'gid://shopify/InventoryLevel/103109591106?inventory_item_id=44461228064834'}}, 'status': 'success'}
2025-08-03 15:14:55,999 - sync_service - INFO - API log added to SAP: shopify - inventory_levels - success
2025-08-03 15:14:56,111 - sync_service - INFO - Updating inventory for item FG-0000709 (variant 44461228097602) at location 68605345858
2025-08-03 15:14:56,112 - sync_service - INFO - API Call: {'service': 'shopify', 'endpoint': 'rest_inventory_local', 'request': {'location_id': '68605345858', 'inventory_item_id': '44461228097602', 'available': 10}, 'response': None, 'status': None}
2025-08-03 15:14:57,016 - sync_service - INFO - API Call: {'service': 'shopify', 'endpoint': 'rest_inventory_local', 'request': None, 'response': {'inventory_level': {'inventory_item_id': 44461228097602, 'location_id': 68605345858, 'available': 10, 'updated_at': '2025-08-03T14:01:27+03:00', 'admin_graphql_api_id': 'gid://shopify/InventoryLevel/103109591106?inventory_item_id=44461228097602'}}, 'status': 'success'}
2025-08-03 15:14:59,000 - sync_service - INFO - API log added to SAP: shopify - inventory_levels - success
2025-08-03 15:14:59,104 - sync_service - INFO - Updating inventory for item FG-0000710 (variant 44461228130370) at location 68605345858
2025-08-03 15:14:59,104 - sync_service - INFO - API Call: {'service': 'shopify', 'endpoint': 'rest_inventory_local', 'request': {'location_id': '68605345858', 'inventory_item_id': '44461228130370', 'available': 20}, 'response': None, 'status': None}
2025-08-03 15:15:05,204 - sync_service - INFO - API Call: {'service': 'shopify', 'endpoint': 'rest_inventory_local', 'request': None, 'response': {'inventory_level': {'inventory_item_id': 44461228130370, 'location_id': 68605345858, 'available': 20, 'updated_at': '2025-08-03T14:01:27+03:00', 'admin_graphql_api_id': 'gid://shopify/InventoryLevel/103109591106?inventory_item_id=44461228130370'}}, 'status': 'success'}
2025-08-03 15:15:08,181 - sync_service - INFO - API log added to SAP: shopify - inventory_levels - success
2025-08-03 15:15:08,285 - sync_service - INFO - Stock change sync completed: 4 processed, 4 successful, 0 errors
2025-08-03 15:15:08,286 - sync_service - INFO - Starting item changes sync...
2025-08-03 15:15:08,287 - sync_service - INFO - Starting item changes sync from SAP to Shopify
2025-08-03 15:15:08,287 - sync_service - INFO - Processing item changes for store: local
2025-08-03 15:15:08,288 - sync_service - ERROR - Error getting item changes for store local: 'SAPClient' object has no attribute 'execute_query'
2025-08-03 15:15:08,289 - sync_service - ERROR - Failed to get item changes for store local: 'SAPClient' object has no attribute 'execute_query'
2025-08-03 15:15:08,289 - sync_service - INFO - Sync Event: {'sync_type': 'item_changes_sap_to_shopify', 'items_processed': 0, 'success_count': 0, 'error_count': 0, 'details': None}
2025-08-03 15:15:08,290 - sync_service - INFO - Item changes sync completed: 0 processed, 0 successful, 0 errors
2025-08-03 15:15:43,883 - sync_service - INFO - Initialized Shopify client for store: Local Store (local)
2025-08-03 15:15:43,955 - sync_service - INFO - Starting all syncs...
2025-08-03 15:15:43,959 - sync_service - INFO - Starting new items sync...
2025-08-03 15:15:43,961 - sync_service - INFO - Starting multi-store new items sync from SAP to Shopify
2025-08-03 15:15:43,963 - sync_service - INFO - Fetching new items for store: local
2025-08-03 15:15:43,964 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'login', 'request': {'company': 'JudeBenHalim_Test', 'user': 'manager'}, 'response': None, 'status': None}
2025-08-03 15:15:45,012 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'login', 'request': None, 'response': {'status': 'success'}, 'status': 'success'}
2025-08-03 15:15:45,014 - sync_service - INFO - SAP login successful
2025-08-03 15:15:45,017 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': "view.svc/MASHURA_New_ItemsB1SLQuery?$filter=Shopify_Store eq 'local'&$orderby=MainProduct", 'request': {'method': 'GET', 'url': "https://10.0.0.100:50000/b1s/v1/view.svc/MASHURA_New_ItemsB1SLQuery?$filter=Shopify_Store eq 'local'&$orderby=MainProduct", 'data': None, 'params': None}, 'response': None, 'status': None}
2025-08-03 15:15:45,774 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': "view.svc/MASHURA_New_ItemsB1SLQuery?$filter=Shopify_Store eq 'local'&$orderby=MainProduct", 'request': None, 'response': {'odata.metadata': 'https://10.0.0.100:50000/b1s/v1/view.svc/$metadata#MASHURA_New_ItemsB1SLQuery', 'value': []}, 'status': 'success'}
2025-08-03 15:15:45,780 - sync_service - INFO - No new items found in SAP for store local
2025-08-03 15:15:45,781 - sync_service - INFO - Sync Event: {'sync_type': 'multi_store_new_items_sap_to_shopify', 'items_processed': 0, 'success_count': 0, 'error_count': 0, 'details': None}
2025-08-03 15:15:45,782 - sync_service - INFO - Multi-store new items sync completed: 0 processed, 0 successful, 0 errors
2025-08-03 15:15:45,784 - sync_service - INFO - Starting stock change sync...
2025-08-03 15:15:45,784 - sync_service - INFO - Starting stock change sync using MASHURA_StockChangeB1SLQuery view
2025-08-03 15:15:45,788 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'view.svc/MASHURA_StockChangeB1SLQuery', 'request': {'method': 'GET', 'url': 'https://10.0.0.100:50000/b1s/v1/view.svc/MASHURA_StockChangeB1SLQuery', 'data': None, 'params': {'$top': 50}}, 'response': None, 'status': None}
2025-08-03 15:15:46,645 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'view.svc/MASHURA_StockChangeB1SLQuery', 'request': None, 'response': {'odata.metadata': 'https://10.0.0.100:50000/b1s/v1/view.svc/$metadata#MASHURA_StockChangeB1SLQuery', 'value': [{'ItemCode': 'FG-0000711', 'Variant_ID': '44461240680514', 'OnHand': 60.0, 'Available': 30.0, 'Location_ID': '68605345858', 'id__': 1}, {'ItemCode': 'FG-0000708', 'Variant_ID': '44461228064834', 'OnHand': 400.0, 'Available': 200.0, 'Location_ID': '68605345858', 'id__': 2}, {'ItemCode': 'FG-0000709', 'Variant_ID': '44461228097602', 'OnHand': 35.0, 'Available': 10.0, 'Location_ID': '68605345858', 'id__': 3}, {'ItemCode': 'FG-0000710', 'Variant_ID': '44461228130370', 'OnHand': 40.0, 'Available': 20.0, 'Location_ID': '68605345858', 'id__': 4}]}, 'status': 'success'}
2025-08-03 15:15:46,648 - sync_service - INFO - Updating inventory for item FG-0000711 (variant 44461240680514) at location 68605345858
2025-08-03 15:15:46,650 - sync_service - INFO - API Call: {'service': 'shopify', 'endpoint': 'rest_inventory_local', 'request': {'location_id': '68605345858', 'inventory_item_id': '44461240680514', 'available': 30}, 'response': None, 'status': None}
2025-08-03 15:15:58,725 - sync_service - INFO - API Call: {'service': 'shopify', 'endpoint': 'rest_inventory_local', 'request': None, 'response': {'inventory_level': {'inventory_item_id': 44461240680514, 'location_id': 68605345858, 'available': 30, 'updated_at': '2025-08-03T14:09:41+03:00', 'admin_graphql_api_id': 'gid://shopify/InventoryLevel/103109591106?inventory_item_id=44461240680514'}}, 'status': 'success'}
2025-08-03 15:16:00,476 - sync_service - INFO - SAP logging client login successful
2025-08-03 15:16:01,891 - sync_service - INFO - API log added to SAP: shopify - inventory_levels - success
2025-08-03 15:16:02,009 - sync_service - INFO - Updating inventory for item FG-0000708 (variant 44461228064834) at location 68605345858
2025-08-03 15:16:02,012 - sync_service - INFO - API Call: {'service': 'shopify', 'endpoint': 'rest_inventory_local', 'request': {'location_id': '68605345858', 'inventory_item_id': '44461228064834', 'available': 200}, 'response': None, 'status': None}
2025-08-03 15:16:02,613 - sync_service - INFO - API Call: {'service': 'shopify', 'endpoint': 'rest_inventory_local', 'request': None, 'response': {'inventory_level': {'inventory_item_id': 44461228064834, 'location_id': 68605345858, 'available': 200, 'updated_at': '2025-08-03T14:01:25+03:00', 'admin_graphql_api_id': 'gid://shopify/InventoryLevel/103109591106?inventory_item_id=44461228064834'}}, 'status': 'success'}
2025-08-03 15:16:04,147 - sync_service - INFO - API log added to SAP: shopify - inventory_levels - success
2025-08-03 15:16:04,249 - sync_service - INFO - Updating inventory for item FG-0000709 (variant 44461228097602) at location 68605345858
2025-08-03 15:16:04,251 - sync_service - INFO - API Call: {'service': 'shopify', 'endpoint': 'rest_inventory_local', 'request': {'location_id': '68605345858', 'inventory_item_id': '44461228097602', 'available': 10}, 'response': None, 'status': None}
2025-08-03 15:16:10,390 - sync_service - INFO - API Call: {'service': 'shopify', 'endpoint': 'rest_inventory_local', 'request': None, 'response': {'inventory_level': {'inventory_item_id': 44461228097602, 'location_id': 68605345858, 'available': 10, 'updated_at': '2025-08-03T14:01:27+03:00', 'admin_graphql_api_id': 'gid://shopify/InventoryLevel/103109591106?inventory_item_id=44461228097602'}}, 'status': 'success'}
2025-08-03 15:16:11,935 - sync_service - INFO - API log added to SAP: shopify - inventory_levels - success
2025-08-03 15:16:12,047 - sync_service - INFO - Updating inventory for item FG-0000710 (variant 44461228130370) at location 68605345858
2025-08-03 15:16:12,050 - sync_service - INFO - API Call: {'service': 'shopify', 'endpoint': 'rest_inventory_local', 'request': {'location_id': '68605345858', 'inventory_item_id': '44461228130370', 'available': 20}, 'response': None, 'status': None}
2025-08-03 15:16:12,539 - sync_service - INFO - API Call: {'service': 'shopify', 'endpoint': 'rest_inventory_local', 'request': None, 'response': {'inventory_level': {'inventory_item_id': 44461228130370, 'location_id': 68605345858, 'available': 20, 'updated_at': '2025-08-03T14:01:27+03:00', 'admin_graphql_api_id': 'gid://shopify/InventoryLevel/103109591106?inventory_item_id=44461228130370'}}, 'status': 'success'}
2025-08-03 15:16:14,038 - sync_service - INFO - API log added to SAP: shopify - inventory_levels - success
2025-08-03 15:16:14,144 - sync_service - INFO - Stock change sync completed: 4 processed, 4 successful, 0 errors
2025-08-03 15:16:14,148 - sync_service - INFO - Starting item changes sync...
2025-08-03 15:16:14,148 - sync_service - INFO - Starting item changes sync from SAP to Shopify
2025-08-03 15:16:14,149 - sync_service - INFO - Processing item changes for store: local
2025-08-03 15:16:14,150 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': "view.svc/MASHURA_ItemChangeB1SLQuery?$filter=Shopify_Store eq 'local'", 'request': {'method': 'GET', 'url': "https://10.0.0.100:50000/b1s/v1/view.svc/MASHURA_ItemChangeB1SLQuery?$filter=Shopify_Store eq 'local'", 'data': None, 'params': None}, 'response': None, 'status': None}
2025-08-03 15:16:14,917 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': "view.svc/MASHURA_ItemChangeB1SLQuery?$filter=Shopify_Store eq 'local'", 'request': None, 'response': {'odata.metadata': 'https://10.0.0.100:50000/b1s/v1/view.svc/$metadata#MASHURA_ItemChangeB1SLQuery', 'value': [{'ItemCode': 'FG-0000704', 'ItemName': 'Morsi Bracelet', 'Color': None, 'MainProduct': None, 'Barcode': '645464644', 'IsActive': 'Y', 'Shopify_ProductCode': '7522725691458', 'Shopify_VariantId': '42360861589570', 'Shopify_Store': 'local', 'UpdateDate': '20250803', 'UpdateTS': 133538, 'id__': 1}, {'ItemCode': 'FG-0000703', 'ItemName': 'Morsi-Necklace-White', 'Color': 'White', 'MainProduct': 'Morsi Necklace', 'Barcode': '242342342', 'IsActive': 'Y', 'Shopify_ProductCode': None, 'Shopify_VariantId': '42360862441538', 'Shopify_Store': 'local', 'UpdateDate': '20250803', 'UpdateTS': 133527, 'id__': 2}]}, 'status': 'success'}
2025-08-03 15:16:14,921 - sync_service - INFO - Found 2 item changes for store local
2025-08-03 15:16:14,922 - sync_service - INFO - Processing 2 item changes for store local
2025-08-03 15:16:14,923 - sync_service - INFO - Processing product change for FG-0000704 (product ID: 7522725691458)
2025-08-03 15:16:15,917 - sync_service - INFO - API log added to SAP: shopify - /admin/api/graphql_local - success
2025-08-03 15:16:15,920 - sync_service - INFO - API Call: {'service': 'shopify', 'endpoint': 'graphql_local', 'request': {'query': '\n        mutation productUpdate($input: ProductInput!) {\n            productUpdate(input: $input) {\n                product {\n                    id\n                    title\n                    status\n                    vendor\n                    descriptionHtml\n                }\n                userErrors {\n                    field\n                    message\n                }\n            }\n        }\n        ', 'variables': {'input': {'title': 'Morsi Bracelet', 'id': '7522725691458'}}}, 'response': None, 'status': None}
2025-08-03 15:16:22,030 - sync_service - ERROR - GraphQL query error for store local: {'message': "Variable $input of type ProductInput! was provided invalid value for id (Invalid global id '7522725691458')", 'locations': [{'line': 1, 'column': 24}], 'extensions': {'value': {'title': 'Morsi Bracelet', 'id': '7522725691458'}, 'problems': [{'path': ['id'], 'explanation': "Invalid global id '7522725691458'", 'message': "Invalid global id '7522725691458'"}]}}
GraphQL Errors: [
  {
    "message": "Variable $input of type ProductInput! was provided invalid value for id (Invalid global id '7522725691458')",
    "locations": [
      {
        "line": 1,
        "column": 24
      }
    ],
    "extensions": {
      "value": {
        "title": "Morsi Bracelet",
        "id": "7522725691458"
      },
      "problems": [
        {
          "path": [
            "id"
          ],
          "explanation": "Invalid global id '7522725691458'",
          "message": "Invalid global id '7522725691458'"
        }
      ]
    }
  }
]
GraphQL Data: null
GraphQL Extensions: null
2025-08-03 15:16:22,691 - sync_service - INFO - API log added to SAP: shopify - /admin/api/graphql_local - failure
2025-08-03 15:16:23,438 - sync_service - INFO - API log added to SAP: shopify - /admin/api/graphql_local - failure
2025-08-03 15:16:23,439 - sync_service - ERROR - Failed to update product 7522725691458 details in store local: GraphQL query error for store local: {'message': "Variable $input of type ProductInput! was provided invalid value for id (Invalid global id '7522725691458')", 'locations': [{'line': 1, 'column': 24}], 'extensions': {'value': {'title': 'Morsi Bracelet', 'id': '7522725691458'}, 'problems': [{'path': ['id'], 'explanation': "Invalid global id '7522725691458'", 'message': "Invalid global id '7522725691458'"}]}}
GraphQL Errors: [
  {
    "message": "Variable $input of type ProductInput! was provided invalid value for id (Invalid global id '7522725691458')",
    "locations": [
      {
        "line": 1,
        "column": 24
      }
    ],
    "extensions": {
      "value": {
        "title": "Morsi Bracelet",
        "id": "7522725691458"
      },
      "problems": [
        {
          "path": [
            "id"
          ],
          "explanation": "Invalid global id '7522725691458'",
          "message": "Invalid global id '7522725691458'"
        }
      ]
    }
  }
]
GraphQL Data: null
GraphQL Extensions: null
2025-08-03 15:16:24,099 - sync_service - INFO - API log added to SAP: shopify - /admin/api/graphql_local - success
2025-08-03 15:16:24,100 - sync_service - INFO - API Call: {'service': 'shopify', 'endpoint': 'graphql_local', 'request': {'query': '\n        mutation productUpdate($input: ProductInput!) {\n            productUpdate(input: $input) {\n                product {\n                    id\n                    title\n                    status\n                    vendor\n                    descriptionHtml\n                }\n                userErrors {\n                    field\n                    message\n                }\n            }\n        }\n        ', 'variables': {'input': {'status': 'ACTIVE', 'id': '7522725691458'}}}, 'response': None, 'status': None}
2025-08-03 15:16:24,619 - sync_service - ERROR - GraphQL query error for store local: {'message': "Variable $input of type ProductInput! was provided invalid value for id (Invalid global id '7522725691458')", 'locations': [{'line': 1, 'column': 24}], 'extensions': {'value': {'status': 'ACTIVE', 'id': '7522725691458'}, 'problems': [{'path': ['id'], 'explanation': "Invalid global id '7522725691458'", 'message': "Invalid global id '7522725691458'"}]}}
GraphQL Errors: [
  {
    "message": "Variable $input of type ProductInput! was provided invalid value for id (Invalid global id '7522725691458')",
    "locations": [
      {
        "line": 1,
        "column": 24
      }
    ],
    "extensions": {
      "value": {
        "status": "ACTIVE",
        "id": "7522725691458"
      },
      "problems": [
        {
          "path": [
            "id"
          ],
          "explanation": "Invalid global id '7522725691458'",
          "message": "Invalid global id '7522725691458'"
        }
      ]
    }
  }
]
GraphQL Data: null
GraphQL Extensions: null
2025-08-03 15:16:25,327 - sync_service - INFO - API log added to SAP: shopify - /admin/api/graphql_local - failure
2025-08-03 15:16:25,868 - sync_service - INFO - API log added to SAP: shopify - /admin/api/graphql_local - failure
2025-08-03 15:16:25,870 - sync_service - ERROR - Failed to update product 7522725691458 status in store local: GraphQL query error for store local: {'message': "Variable $input of type ProductInput! was provided invalid value for id (Invalid global id '7522725691458')", 'locations': [{'line': 1, 'column': 24}], 'extensions': {'value': {'status': 'ACTIVE', 'id': '7522725691458'}, 'problems': [{'path': ['id'], 'explanation': "Invalid global id '7522725691458'", 'message': "Invalid global id '7522725691458'"}]}}
GraphQL Errors: [
  {
    "message": "Variable $input of type ProductInput! was provided invalid value for id (Invalid global id '7522725691458')",
    "locations": [
      {
        "line": 1,
        "column": 24
      }
    ],
    "extensions": {
      "value": {
        "status": "ACTIVE",
        "id": "7522725691458"
      },
      "problems": [
        {
          "path": [
            "id"
          ],
          "explanation": "Invalid global id '7522725691458'",
          "message": "Invalid global id '7522725691458'"
        }
      ]
    }
  }
]
GraphQL Data: null
GraphQL Extensions: null
2025-08-03 15:16:25,872 - sync_service - ERROR - Error updating item change record for FG-0000704: 'int' object is not subscriptable
2025-08-03 15:16:25,873 - sync_service - INFO - Successfully processed item change for FG-0000704
2025-08-03 15:16:26,383 - sync_service - INFO - Processing variant change for FG-0000703 (variant ID: 42360862441538)
2025-08-03 15:16:27,476 - sync_service - INFO - API log added to SAP: shopify - /admin/api/graphql_local - success
2025-08-03 15:16:27,478 - sync_service - INFO - API Call: {'service': 'shopify', 'endpoint': 'graphql_local', 'request': {'query': '\n        mutation productVariantUpdate($input: ProductVariantInput!) {\n            productVariantUpdate(input: $input) {\n                productVariant {\n                    id\n                    sku\n                    title\n                    selectedOptions {\n                        name\n                        value\n                    }\n                }\n                userErrors {\n                    field\n                    message\n                }\n            }\n        }\n        ', 'variables': {'input': {'sku': 'FG-0000703', 'barcode': '242342342', 'id': '42360862441538'}}}, 'response': None, 'status': None}
2025-08-03 15:16:35,666 - sync_service - ERROR - GraphQL query error for store local: {'message': "Variable $input of type ProductVariantInput! was provided invalid value for id (Invalid global id '42360862441538')", 'locations': [{'line': 1, 'column': 31}], 'extensions': {'value': {'sku': 'FG-0000703', 'barcode': '242342342', 'id': '42360862441538'}, 'problems': [{'path': ['id'], 'explanation': "Invalid global id '42360862441538'", 'message': "Invalid global id '42360862441538'"}]}}
GraphQL Errors: [
  {
    "message": "Variable $input of type ProductVariantInput! was provided invalid value for id (Invalid global id '42360862441538')",
    "locations": [
      {
        "line": 1,
        "column": 31
      }
    ],
    "extensions": {
      "value": {
        "sku": "FG-0000703",
        "barcode": "242342342",
        "id": "42360862441538"
      },
      "problems": [
        {
          "path": [
            "id"
          ],
          "explanation": "Invalid global id '42360862441538'",
          "message": "Invalid global id '42360862441538'"
        }
      ]
    }
  }
]
GraphQL Data: null
GraphQL Extensions: null
2025-08-03 15:16:36,346 - sync_service - INFO - API log added to SAP: shopify - /admin/api/graphql_local - failure
2025-08-03 15:16:37,101 - sync_service - INFO - API log added to SAP: shopify - /admin/api/graphql_local - failure
2025-08-03 15:16:37,106 - sync_service - ERROR - Failed to update variant 42360862441538 details in store local: GraphQL query error for store local: {'message': "Variable $input of type ProductVariantInput! was provided invalid value for id (Invalid global id '42360862441538')", 'locations': [{'line': 1, 'column': 31}], 'extensions': {'value': {'sku': 'FG-0000703', 'barcode': '242342342', 'id': '42360862441538'}, 'problems': [{'path': ['id'], 'explanation': "Invalid global id '42360862441538'", 'message': "Invalid global id '42360862441538'"}]}}
GraphQL Errors: [
  {
    "message": "Variable $input of type ProductVariantInput! was provided invalid value for id (Invalid global id '42360862441538')",
    "locations": [
      {
        "line": 1,
        "column": 31
      }
    ],
    "extensions": {
      "value": {
        "sku": "FG-0000703",
        "barcode": "242342342",
        "id": "42360862441538"
      },
      "problems": [
        {
          "path": [
            "id"
          ],
          "explanation": "Invalid global id '42360862441538'",
          "message": "Invalid global id '42360862441538'"
        }
      ]
    }
  }
]
GraphQL Data: null
GraphQL Extensions: null
2025-08-03 15:16:37,108 - sync_service - INFO - API Call: {'service': 'shopify', 'endpoint': 'graphql_local', 'request': {'query': '\n        query GetVariant($id: ID!) {\n            productVariant(id: $id) {\n                id\n                sku\n                price\n                product {\n                    id\n                    title\n                    status\n                }\n                selectedOptions {\n                    name\n                    value\n                }\n            }\n        }\n        ', 'variables': {'id': '42360862441538'}}, 'response': None, 'status': None}
2025-08-03 15:16:37,564 - sync_service - ERROR - GraphQL query error for store local: {'message': 'Variable $id of type ID! was provided invalid value', 'locations': [{'line': 1, 'column': 18}], 'extensions': {'value': '42360862441538', 'problems': [{'path': [], 'explanation': "Invalid global id '42360862441538'", 'message': "Invalid global id '42360862441538'"}]}}
GraphQL Errors: [
  {
    "message": "Variable $id of type ID! was provided invalid value",
    "locations": [
      {
        "line": 1,
        "column": 18
      }
    ],
    "extensions": {
      "value": "42360862441538",
      "problems": [
        {
          "path": [],
          "explanation": "Invalid global id '42360862441538'",
          "message": "Invalid global id '42360862441538'"
        }
      ]
    }
  }
]
GraphQL Data: null
GraphQL Extensions: null
2025-08-03 15:16:38,280 - sync_service - INFO - API log added to SAP: shopify - /admin/api/graphql_local - failure
2025-08-03 15:16:38,281 - sync_service - ERROR - Failed to get variant info for 42360862441538: GraphQL query error for store local: {'message': 'Variable $id of type ID! was provided invalid value', 'locations': [{'line': 1, 'column': 18}], 'extensions': {'value': '42360862441538', 'problems': [{'path': [], 'explanation': "Invalid global id '42360862441538'", 'message': "Invalid global id '42360862441538'"}]}}
GraphQL Errors: [
  {
    "message": "Variable $id of type ID! was provided invalid value",
    "locations": [
      {
        "line": 1,
        "column": 18
      }
    ],
    "extensions": {
      "value": "42360862441538",
      "problems": [
        {
          "path": [],
          "explanation": "Invalid global id '42360862441538'",
          "message": "Invalid global id '42360862441538'"
        }
      ]
    }
  }
]
GraphQL Data: null
GraphQL Extensions: null
2025-08-03 15:16:38,284 - sync_service - ERROR - Error updating item change record for FG-0000703: 'int' object is not subscriptable
2025-08-03 15:16:38,284 - sync_service - INFO - Successfully processed item change for FG-0000703
2025-08-03 15:16:38,794 - sync_service - INFO - Sync Event: {'sync_type': 'item_changes_sap_to_shopify', 'items_processed': 2, 'success_count': 2, 'error_count': 0, 'details': None}
2025-08-03 15:16:38,796 - sync_service - INFO - Item changes sync completed: 2 processed, 2 successful, 0 errors
2025-08-03 15:17:19,386 - sync_service - INFO - Initialized Shopify client for store: Local Store (local)
2025-08-03 15:17:19,462 - sync_service - INFO - Starting all syncs...
2025-08-03 15:17:19,464 - sync_service - INFO - Starting new items sync...
2025-08-03 15:17:19,465 - sync_service - INFO - Starting multi-store new items sync from SAP to Shopify
2025-08-03 15:17:19,466 - sync_service - INFO - Fetching new items for store: local
2025-08-03 15:17:19,466 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'login', 'request': {'company': 'JudeBenHalim_Test', 'user': 'manager'}, 'response': None, 'status': None}
2025-08-03 15:17:20,450 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'login', 'request': None, 'response': {'status': 'success'}, 'status': 'success'}
2025-08-03 15:17:20,451 - sync_service - INFO - SAP login successful
2025-08-03 15:17:20,455 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': "view.svc/MASHURA_New_ItemsB1SLQuery?$filter=Shopify_Store eq 'local'&$orderby=MainProduct", 'request': {'method': 'GET', 'url': "https://10.0.0.100:50000/b1s/v1/view.svc/MASHURA_New_ItemsB1SLQuery?$filter=Shopify_Store eq 'local'&$orderby=MainProduct", 'data': None, 'params': None}, 'response': None, 'status': None}
2025-08-03 15:17:21,306 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': "view.svc/MASHURA_New_ItemsB1SLQuery?$filter=Shopify_Store eq 'local'&$orderby=MainProduct", 'request': None, 'response': {'odata.metadata': 'https://10.0.0.100:50000/b1s/v1/view.svc/$metadata#MASHURA_New_ItemsB1SLQuery', 'value': []}, 'status': 'success'}
2025-08-03 15:17:21,312 - sync_service - INFO - No new items found in SAP for store local
2025-08-03 15:17:21,315 - sync_service - INFO - Sync Event: {'sync_type': 'multi_store_new_items_sap_to_shopify', 'items_processed': 0, 'success_count': 0, 'error_count': 0, 'details': None}
2025-08-03 15:17:21,315 - sync_service - INFO - Multi-store new items sync completed: 0 processed, 0 successful, 0 errors
2025-08-03 15:17:21,316 - sync_service - INFO - Starting stock change sync...
2025-08-03 15:17:21,317 - sync_service - INFO - Starting stock change sync using MASHURA_StockChangeB1SLQuery view
2025-08-03 15:17:21,322 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'view.svc/MASHURA_StockChangeB1SLQuery', 'request': {'method': 'GET', 'url': 'https://10.0.0.100:50000/b1s/v1/view.svc/MASHURA_StockChangeB1SLQuery', 'data': None, 'params': {'$top': 50}}, 'response': None, 'status': None}
2025-08-03 15:17:22,555 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'view.svc/MASHURA_StockChangeB1SLQuery', 'request': None, 'response': {'odata.metadata': 'https://10.0.0.100:50000/b1s/v1/view.svc/$metadata#MASHURA_StockChangeB1SLQuery', 'value': [{'ItemCode': 'FG-0000711', 'Variant_ID': '44461240680514', 'OnHand': 60.0, 'Available': 30.0, 'Location_ID': '68605345858', 'id__': 1}, {'ItemCode': 'FG-0000708', 'Variant_ID': '44461228064834', 'OnHand': 400.0, 'Available': 200.0, 'Location_ID': '68605345858', 'id__': 2}, {'ItemCode': 'FG-0000709', 'Variant_ID': '44461228097602', 'OnHand': 35.0, 'Available': 10.0, 'Location_ID': '68605345858', 'id__': 3}, {'ItemCode': 'FG-0000710', 'Variant_ID': '44461228130370', 'OnHand': 40.0, 'Available': 20.0, 'Location_ID': '68605345858', 'id__': 4}]}, 'status': 'success'}
2025-08-03 15:17:22,557 - sync_service - INFO - Updating inventory for item FG-0000711 (variant 44461240680514) at location 68605345858
2025-08-03 15:17:22,559 - sync_service - INFO - API Call: {'service': 'shopify', 'endpoint': 'rest_inventory_local', 'request': {'location_id': '68605345858', 'inventory_item_id': '44461240680514', 'available': 30}, 'response': None, 'status': None}
2025-08-03 15:17:23,171 - sync_service - INFO - API Call: {'service': 'shopify', 'endpoint': 'rest_inventory_local', 'request': None, 'response': {'inventory_level': {'inventory_item_id': 44461240680514, 'location_id': 68605345858, 'available': 30, 'updated_at': '2025-08-03T14:09:41+03:00', 'admin_graphql_api_id': 'gid://shopify/InventoryLevel/103109591106?inventory_item_id=44461240680514'}}, 'status': 'success'}
2025-08-03 15:17:25,200 - sync_service - INFO - SAP logging client login successful
2025-08-03 15:17:26,427 - sync_service - INFO - API log added to SAP: shopify - inventory_levels - success
2025-08-03 15:17:26,532 - sync_service - INFO - Updating inventory for item FG-0000708 (variant 44461228064834) at location 68605345858
2025-08-03 15:17:26,533 - sync_service - INFO - API Call: {'service': 'shopify', 'endpoint': 'rest_inventory_local', 'request': {'location_id': '68605345858', 'inventory_item_id': '44461228064834', 'available': 200}, 'response': None, 'status': None}
2025-08-03 15:17:38,198 - sync_service - INFO - API Call: {'service': 'shopify', 'endpoint': 'rest_inventory_local', 'request': None, 'response': {'inventory_level': {'inventory_item_id': 44461228064834, 'location_id': 68605345858, 'available': 200, 'updated_at': '2025-08-03T14:01:25+03:00', 'admin_graphql_api_id': 'gid://shopify/InventoryLevel/103109591106?inventory_item_id=44461228064834'}}, 'status': 'success'}
2025-08-03 15:17:39,824 - sync_service - INFO - API log added to SAP: shopify - inventory_levels - success
2025-08-03 15:17:39,929 - sync_service - INFO - Updating inventory for item FG-0000709 (variant 44461228097602) at location 68605345858
2025-08-03 15:17:39,931 - sync_service - INFO - API Call: {'service': 'shopify', 'endpoint': 'rest_inventory_local', 'request': {'location_id': '68605345858', 'inventory_item_id': '44461228097602', 'available': 10}, 'response': None, 'status': None}
2025-08-03 15:17:40,430 - sync_service - INFO - API Call: {'service': 'shopify', 'endpoint': 'rest_inventory_local', 'request': None, 'response': {'inventory_level': {'inventory_item_id': 44461228097602, 'location_id': 68605345858, 'available': 10, 'updated_at': '2025-08-03T14:01:27+03:00', 'admin_graphql_api_id': 'gid://shopify/InventoryLevel/103109591106?inventory_item_id=44461228097602'}}, 'status': 'success'}
2025-08-03 15:17:42,033 - sync_service - INFO - API log added to SAP: shopify - inventory_levels - success
2025-08-03 15:17:42,138 - sync_service - INFO - Updating inventory for item FG-0000710 (variant 44461228130370) at location 68605345858
2025-08-03 15:17:42,141 - sync_service - INFO - API Call: {'service': 'shopify', 'endpoint': 'rest_inventory_local', 'request': {'location_id': '68605345858', 'inventory_item_id': '44461228130370', 'available': 20}, 'response': None, 'status': None}
2025-08-03 15:17:42,655 - sync_service - INFO - API Call: {'service': 'shopify', 'endpoint': 'rest_inventory_local', 'request': None, 'response': {'inventory_level': {'inventory_item_id': 44461228130370, 'location_id': 68605345858, 'available': 20, 'updated_at': '2025-08-03T14:01:27+03:00', 'admin_graphql_api_id': 'gid://shopify/InventoryLevel/103109591106?inventory_item_id=44461228130370'}}, 'status': 'success'}
2025-08-03 15:17:44,636 - sync_service - INFO - API log added to SAP: shopify - inventory_levels - success
2025-08-03 15:17:44,744 - sync_service - INFO - Stock change sync completed: 4 processed, 4 successful, 0 errors
2025-08-03 15:17:44,746 - sync_service - INFO - Starting item changes sync...
2025-08-03 15:17:44,746 - sync_service - INFO - Starting item changes sync from SAP to Shopify
2025-08-03 15:17:44,747 - sync_service - INFO - Processing item changes for store: local
2025-08-03 15:17:44,748 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': "view.svc/MASHURA_ItemChangeB1SLQuery?$filter=Shopify_Store eq 'local'", 'request': {'method': 'GET', 'url': "https://10.0.0.100:50000/b1s/v1/view.svc/MASHURA_ItemChangeB1SLQuery?$filter=Shopify_Store eq 'local'", 'data': None, 'params': None}, 'response': None, 'status': None}
2025-08-03 15:17:45,353 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': "view.svc/MASHURA_ItemChangeB1SLQuery?$filter=Shopify_Store eq 'local'", 'request': None, 'response': {'odata.metadata': 'https://10.0.0.100:50000/b1s/v1/view.svc/$metadata#MASHURA_ItemChangeB1SLQuery', 'value': [{'ItemCode': 'FG-0000704', 'ItemName': 'Morsi Bracelet', 'Color': None, 'MainProduct': None, 'Barcode': '645464644', 'IsActive': 'Y', 'Shopify_ProductCode': '7522725691458', 'Shopify_VariantId': '42360861589570', 'Shopify_Store': 'local', 'UpdateDate': '20250803', 'UpdateTS': 133538, 'id__': 1}, {'ItemCode': 'FG-0000703', 'ItemName': 'Morsi-Necklace-White', 'Color': 'White', 'MainProduct': 'Morsi Necklace', 'Barcode': '242342342', 'IsActive': 'Y', 'Shopify_ProductCode': None, 'Shopify_VariantId': '42360862441538', 'Shopify_Store': 'local', 'UpdateDate': '20250803', 'UpdateTS': 133527, 'id__': 2}]}, 'status': 'success'}
2025-08-03 15:17:45,354 - sync_service - INFO - Found 2 item changes for store local
2025-08-03 15:17:45,355 - sync_service - INFO - Processing 2 item changes for store local
2025-08-03 15:17:45,356 - sync_service - INFO - Processing product change for FG-0000704 (product ID: gid://shopify/Product/7522725691458)
2025-08-03 15:17:46,403 - sync_service - INFO - API log added to SAP: shopify - /admin/api/graphql_local - success
2025-08-03 15:17:46,404 - sync_service - INFO - API Call: {'service': 'shopify', 'endpoint': 'graphql_local', 'request': {'query': '\n        mutation productUpdate($input: ProductInput!) {\n            productUpdate(input: $input) {\n                product {\n                    id\n                    title\n                    status\n                    vendor\n                    descriptionHtml\n                }\n                userErrors {\n                    field\n                    message\n                }\n            }\n        }\n        ', 'variables': {'input': {'title': 'Morsi Bracelet', 'id': 'gid://shopify/Product/7522725691458'}}}, 'response': None, 'status': None}
2025-08-03 15:17:56,399 - sync_service - ERROR - GraphQL query error for store local: 
2025-08-03 15:17:56,800 - sync_service - INFO - API log added to SAP: shopify - /admin/api/graphql_local - failure
2025-08-03 15:17:57,350 - sync_service - INFO - API log added to SAP: shopify - /admin/api/graphql_local - failure
2025-08-03 15:17:57,353 - sync_service - ERROR - Failed to update product gid://shopify/Product/7522725691458 details in store local: GraphQL query error for store local: 
2025-08-03 15:17:57,738 - sync_service - INFO - API log added to SAP: shopify - /admin/api/graphql_local - success
2025-08-03 15:17:57,738 - sync_service - INFO - API Call: {'service': 'shopify', 'endpoint': 'graphql_local', 'request': {'query': '\n        mutation productUpdate($input: ProductInput!) {\n            productUpdate(input: $input) {\n                product {\n                    id\n                    title\n                    status\n                    vendor\n                    descriptionHtml\n                }\n                userErrors {\n                    field\n                    message\n                }\n            }\n        }\n        ', 'variables': {'input': {'status': 'ACTIVE', 'id': 'gid://shopify/Product/7522725691458'}}}, 'response': None, 'status': None}
2025-08-03 15:17:58,655 - sync_service - INFO - API Call: {'service': 'shopify', 'endpoint': 'graphql_local', 'request': None, 'response': {'productUpdate': {'product': {'id': 'gid://shopify/Product/7522725691458', 'title': 'Morsi Bracelet', 'status': 'ACTIVE', 'vendor': 'JUDE BENHALIM', 'descriptionHtml': ''}, 'userErrors': []}}, 'status': 'success'}
2025-08-03 15:17:59,176 - sync_service - INFO - API log added to SAP: shopify - /admin/api/graphql_local - success
2025-08-03 15:17:59,179 - sync_service - INFO - Successfully updated product gid://shopify/Product/7522725691458 status to ACTIVE in store local
2025-08-03 15:17:59,180 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': "U_ITEM_CHANGE('FG-0000704')", 'request': {'method': 'PATCH', 'url': "https://10.0.0.100:50000/b1s/v1/U_ITEM_CHANGE('FG-0000704')", 'data': {'U_LastChangeDate': '2025-08-03', 'U_LastChangeTime': '13:35:38'}, 'params': None}, 'response': None, 'status': None}
2025-08-03 15:17:59,749 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': "U_ITEM_CHANGE('FG-0000704')", 'request': None, 'response': {'status_code': 404, 'text': '{\n   "error" : {\n      "code" : -2028,\n      "message" : {\n         "lang" : "en-us",\n         "value" : "Entity with value(\'FG-0000704\') does not exist"\n      }\n   }\n}\n'}, 'status': 'failure'}
2025-08-03 15:17:59,753 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'U_ITEM_CHANGE', 'request': {'method': 'POST', 'url': 'https://10.0.0.100:50000/b1s/v1/U_ITEM_CHANGE', 'data': {'Code': 'FG-0000704', 'Name': 'FG-0000704', 'U_LastChangeDate': '2025-08-03', 'U_LastChangeTime': '13:35:38'}, 'params': None}, 'response': None, 'status': None}
2025-08-03 15:18:00,216 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'U_ITEM_CHANGE', 'request': None, 'response': {'odata.metadata': 'https://10.0.0.100:50000/b1s/v1/$metadata#U_ITEM_CHANGE/@Element', 'Code': 'FG-0000704', 'Name': 'FG-0000704', 'U_LastChangeDate': '2025-08-03', 'U_LastChangeTime': '13:35:00'}, 'status': 'success'}
2025-08-03 15:18:00,220 - sync_service - INFO - Successfully created item change record for FG-0000704
2025-08-03 15:18:00,221 - sync_service - INFO - Successfully processed item change for FG-0000704
2025-08-03 15:18:00,728 - sync_service - INFO - Processing variant change for FG-0000703 (variant ID: gid://shopify/ProductVariant/42360862441538)
2025-08-03 15:18:01,287 - sync_service - INFO - API log added to SAP: shopify - /admin/api/graphql_local - success
2025-08-03 15:18:01,288 - sync_service - INFO - API Call: {'service': 'shopify', 'endpoint': 'graphql_local', 'request': {'query': '\n        mutation productVariantUpdate($input: ProductVariantInput!) {\n            productVariantUpdate(input: $input) {\n                productVariant {\n                    id\n                    sku\n                    title\n                    selectedOptions {\n                        name\n                        value\n                    }\n                }\n                userErrors {\n                    field\n                    message\n                }\n            }\n        }\n        ', 'variables': {'input': {'sku': 'FG-0000703', 'barcode': '242342342', 'id': 'gid://shopify/ProductVariant/42360862441538'}}}, 'response': None, 'status': None}
2025-08-03 15:18:01,833 - sync_service - INFO - API Call: {'service': 'shopify', 'endpoint': 'graphql_local', 'request': None, 'response': {'productVariantUpdate': {'productVariant': {'id': 'gid://shopify/ProductVariant/42360862441538', 'sku': 'FG-0000703', 'title': 'White', 'selectedOptions': [{'name': 'Color', 'value': 'White'}]}, 'userErrors': []}}, 'status': 'success'}
2025-08-03 15:18:02,371 - sync_service - INFO - API log added to SAP: shopify - /admin/api/graphql_local - success
2025-08-03 15:18:02,373 - sync_service - INFO - Successfully updated variant gid://shopify/ProductVariant/42360862441538 details in store local
2025-08-03 15:18:02,376 - sync_service - INFO - API Call: {'service': 'shopify', 'endpoint': 'graphql_local', 'request': {'query': '\n        query GetVariant($id: ID!) {\n            productVariant(id: $id) {\n                id\n                sku\n                price\n                product {\n                    id\n                    title\n                    status\n                }\n                selectedOptions {\n                    name\n                    value\n                }\n            }\n        }\n        ', 'variables': {'id': 'gid://shopify/ProductVariant/42360862441538'}}, 'response': None, 'status': None}
2025-08-03 15:18:02,871 - sync_service - INFO - API Call: {'service': 'shopify', 'endpoint': 'graphql_local', 'request': None, 'response': {'productVariant': {'id': 'gid://shopify/ProductVariant/42360862441538', 'sku': 'FG-0000703', 'price': '2500.00', 'product': {'id': 'gid://shopify/Product/7522726150210', 'title': 'Morsi Necklace', 'status': 'DRAFT'}, 'selectedOptions': [{'name': 'Color', 'value': 'White'}]}}, 'status': 'success'}
2025-08-03 15:18:03,414 - sync_service - INFO - API log added to SAP: shopify - /admin/api/graphql_local - success
2025-08-03 15:18:03,416 - sync_service - INFO - API Call: {'service': 'shopify', 'endpoint': 'graphql_local', 'request': {'query': '\n        mutation productUpdate($input: ProductInput!) {\n            productUpdate(input: $input) {\n                product {\n                    id\n                    title\n                    status\n                    vendor\n                    descriptionHtml\n                }\n                userErrors {\n                    field\n                    message\n                }\n            }\n        }\n        ', 'variables': {'input': {'status': 'ACTIVE', 'id': 'gid://shopify/Product/7522726150210'}}}, 'response': None, 'status': None}
2025-08-03 15:18:09,604 - sync_service - INFO - API Call: {'service': 'shopify', 'endpoint': 'graphql_local', 'request': None, 'response': {'productUpdate': {'product': {'id': 'gid://shopify/Product/7522726150210', 'title': 'Morsi Necklace', 'status': 'ACTIVE', 'vendor': 'JUDE BENHALIM', 'descriptionHtml': ''}, 'userErrors': []}}, 'status': 'success'}
2025-08-03 15:18:09,970 - sync_service - INFO - API log added to SAP: shopify - /admin/api/graphql_local - success
2025-08-03 15:18:09,971 - sync_service - INFO - Successfully updated product gid://shopify/Product/7522726150210 status to ACTIVE in store local
2025-08-03 15:18:09,973 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': "U_ITEM_CHANGE('FG-0000703')", 'request': {'method': 'PATCH', 'url': "https://10.0.0.100:50000/b1s/v1/U_ITEM_CHANGE('FG-0000703')", 'data': {'U_LastChangeDate': '2025-08-03', 'U_LastChangeTime': '13:35:27'}, 'params': None}, 'response': None, 'status': None}
2025-08-03 15:18:10,735 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': "U_ITEM_CHANGE('FG-0000703')", 'request': None, 'response': {'status_code': 404, 'text': '{\n   "error" : {\n      "code" : -2028,\n      "message" : {\n         "lang" : "en-us",\n         "value" : "Entity with value(\'FG-0000703\') does not exist"\n      }\n   }\n}\n'}, 'status': 'failure'}
2025-08-03 15:18:10,737 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'U_ITEM_CHANGE', 'request': {'method': 'POST', 'url': 'https://10.0.0.100:50000/b1s/v1/U_ITEM_CHANGE', 'data': {'Code': 'FG-0000703', 'Name': 'FG-0000703', 'U_LastChangeDate': '2025-08-03', 'U_LastChangeTime': '13:35:27'}, 'params': None}, 'response': None, 'status': None}
2025-08-03 15:18:11,168 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'U_ITEM_CHANGE', 'request': None, 'response': {'odata.metadata': 'https://10.0.0.100:50000/b1s/v1/$metadata#U_ITEM_CHANGE/@Element', 'Code': 'FG-0000703', 'Name': 'FG-0000703', 'U_LastChangeDate': '2025-08-03', 'U_LastChangeTime': '13:35:00'}, 'status': 'success'}
2025-08-03 15:18:11,172 - sync_service - INFO - Successfully created item change record for FG-0000703
2025-08-03 15:18:11,178 - sync_service - INFO - Successfully processed item change for FG-0000703
2025-08-03 15:18:11,693 - sync_service - INFO - Sync Event: {'sync_type': 'item_changes_sap_to_shopify', 'items_processed': 2, 'success_count': 2, 'error_count': 0, 'details': None}
2025-08-03 15:18:11,695 - sync_service - INFO - Item changes sync completed: 2 processed, 2 successful, 0 errors
2025-08-03 15:22:14,154 - sync_service - INFO - Initialized Shopify client for store: Local Store (local)
2025-08-03 15:22:14,199 - sync_service - INFO - Starting all syncs...
2025-08-03 15:22:14,201 - sync_service - INFO - Starting new items sync...
2025-08-03 15:22:14,202 - sync_service - INFO - Starting multi-store new items sync from SAP to Shopify
2025-08-03 15:22:14,203 - sync_service - INFO - Fetching new items for store: local
2025-08-03 15:22:14,204 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'login', 'request': {'company': 'JudeBenHalim_Test', 'user': 'manager'}, 'response': None, 'status': None}
2025-08-03 15:22:15,070 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'login', 'request': None, 'response': {'status': 'success'}, 'status': 'success'}
2025-08-03 15:22:15,070 - sync_service - INFO - SAP login successful
2025-08-03 15:22:15,071 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': "view.svc/MASHURA_New_ItemsB1SLQuery?$filter=Shopify_Store eq 'local'&$orderby=MainProduct", 'request': {'method': 'GET', 'url': "https://10.0.0.100:50000/b1s/v1/view.svc/MASHURA_New_ItemsB1SLQuery?$filter=Shopify_Store eq 'local'&$orderby=MainProduct", 'data': None, 'params': None}, 'response': None, 'status': None}
2025-08-03 15:22:16,221 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': "view.svc/MASHURA_New_ItemsB1SLQuery?$filter=Shopify_Store eq 'local'&$orderby=MainProduct", 'request': None, 'response': {'odata.metadata': 'https://10.0.0.100:50000/b1s/v1/view.svc/$metadata#MASHURA_New_ItemsB1SLQuery', 'value': []}, 'status': 'success'}
2025-08-03 15:22:16,224 - sync_service - INFO - No new items found in SAP for store local
2025-08-03 15:22:16,226 - sync_service - INFO - Sync Event: {'sync_type': 'multi_store_new_items_sap_to_shopify', 'items_processed': 0, 'success_count': 0, 'error_count': 0, 'details': None}
2025-08-03 15:22:16,227 - sync_service - INFO - Multi-store new items sync completed: 0 processed, 0 successful, 0 errors
2025-08-03 15:22:16,228 - sync_service - INFO - Starting stock change sync...
2025-08-03 15:22:16,228 - sync_service - INFO - Starting stock change sync using MASHURA_StockChangeB1SLQuery view
2025-08-03 15:22:16,229 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'view.svc/MASHURA_StockChangeB1SLQuery', 'request': {'method': 'GET', 'url': 'https://10.0.0.100:50000/b1s/v1/view.svc/MASHURA_StockChangeB1SLQuery', 'data': None, 'params': {'$top': 50}}, 'response': None, 'status': None}
2025-08-03 15:22:17,154 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'view.svc/MASHURA_StockChangeB1SLQuery', 'request': None, 'response': {'odata.metadata': 'https://10.0.0.100:50000/b1s/v1/view.svc/$metadata#MASHURA_StockChangeB1SLQuery', 'value': [{'ItemCode': 'FG-0000711', 'Variant_ID': '44461240680514', 'OnHand': 60.0, 'Available': 30.0, 'Location_ID': '68605345858', 'id__': 1}, {'ItemCode': 'FG-0000708', 'Variant_ID': '44461228064834', 'OnHand': 400.0, 'Available': 200.0, 'Location_ID': '68605345858', 'id__': 2}, {'ItemCode': 'FG-0000709', 'Variant_ID': '44461228097602', 'OnHand': 35.0, 'Available': 10.0, 'Location_ID': '68605345858', 'id__': 3}, {'ItemCode': 'FG-0000710', 'Variant_ID': '44461228130370', 'OnHand': 40.0, 'Available': 20.0, 'Location_ID': '68605345858', 'id__': 4}]}, 'status': 'success'}
2025-08-03 15:22:17,155 - sync_service - INFO - Updating inventory for item FG-0000711 (variant 44461240680514) at location 68605345858
2025-08-03 15:22:17,156 - sync_service - INFO - API Call: {'service': 'shopify', 'endpoint': 'rest_inventory_local', 'request': {'location_id': '68605345858', 'inventory_item_id': '44461240680514', 'available': 30}, 'response': None, 'status': None}
2025-08-03 15:22:17,692 - sync_service - INFO - API Call: {'service': 'shopify', 'endpoint': 'rest_inventory_local', 'request': None, 'response': {'inventory_level': {'inventory_item_id': 44461240680514, 'location_id': 68605345858, 'available': 30, 'updated_at': '2025-08-03T14:09:41+03:00', 'admin_graphql_api_id': 'gid://shopify/InventoryLevel/103109591106?inventory_item_id=44461240680514'}}, 'status': 'success'}
2025-08-03 15:22:19,104 - sync_service - INFO - SAP logging client login successful
2025-08-03 15:22:19,853 - sync_service - INFO - API log added to SAP: shopify - inventory_levels - success
2025-08-03 15:22:19,970 - sync_service - INFO - Updating inventory for item FG-0000708 (variant 44461228064834) at location 68605345858
2025-08-03 15:22:19,971 - sync_service - INFO - API Call: {'service': 'shopify', 'endpoint': 'rest_inventory_local', 'request': {'location_id': '68605345858', 'inventory_item_id': '44461228064834', 'available': 200}, 'response': None, 'status': None}
2025-08-03 15:22:31,573 - sync_service - INFO - API Call: {'service': 'shopify', 'endpoint': 'rest_inventory_local', 'request': None, 'response': {'inventory_level': {'inventory_item_id': 44461228064834, 'location_id': 68605345858, 'available': 200, 'updated_at': '2025-08-03T14:01:25+03:00', 'admin_graphql_api_id': 'gid://shopify/InventoryLevel/103109591106?inventory_item_id=44461228064834'}}, 'status': 'success'}
2025-08-03 15:22:32,812 - sync_service - INFO - API log added to SAP: shopify - inventory_levels - success
2025-08-03 15:22:32,924 - sync_service - INFO - Updating inventory for item FG-0000709 (variant 44461228097602) at location 68605345858
2025-08-03 15:22:32,929 - sync_service - INFO - API Call: {'service': 'shopify', 'endpoint': 'rest_inventory_local', 'request': {'location_id': '68605345858', 'inventory_item_id': '44461228097602', 'available': 10}, 'response': None, 'status': None}
2025-08-03 15:22:33,449 - sync_service - INFO - API Call: {'service': 'shopify', 'endpoint': 'rest_inventory_local', 'request': None, 'response': {'inventory_level': {'inventory_item_id': 44461228097602, 'location_id': 68605345858, 'available': 10, 'updated_at': '2025-08-03T14:01:27+03:00', 'admin_graphql_api_id': 'gid://shopify/InventoryLevel/103109591106?inventory_item_id=44461228097602'}}, 'status': 'success'}
2025-08-03 15:22:34,953 - sync_service - INFO - API log added to SAP: shopify - inventory_levels - success
2025-08-03 15:22:35,070 - sync_service - INFO - Updating inventory for item FG-0000710 (variant 44461228130370) at location 68605345858
2025-08-03 15:22:35,075 - sync_service - INFO - API Call: {'service': 'shopify', 'endpoint': 'rest_inventory_local', 'request': {'location_id': '68605345858', 'inventory_item_id': '44461228130370', 'available': 20}, 'response': None, 'status': None}
2025-08-03 15:22:35,668 - sync_service - INFO - API Call: {'service': 'shopify', 'endpoint': 'rest_inventory_local', 'request': None, 'response': {'inventory_level': {'inventory_item_id': 44461228130370, 'location_id': 68605345858, 'available': 20, 'updated_at': '2025-08-03T14:01:27+03:00', 'admin_graphql_api_id': 'gid://shopify/InventoryLevel/103109591106?inventory_item_id=44461228130370'}}, 'status': 'success'}
2025-08-03 15:22:36,999 - sync_service - INFO - API log added to SAP: shopify - inventory_levels - success
2025-08-03 15:22:37,110 - sync_service - INFO - Stock change sync completed: 4 processed, 4 successful, 0 errors
2025-08-03 15:22:37,112 - sync_service - INFO - Starting item changes sync...
2025-08-03 15:22:37,112 - sync_service - INFO - Starting item changes sync from SAP to Shopify
2025-08-03 15:22:37,112 - sync_service - INFO - Processing item changes for store: local
2025-08-03 15:22:37,113 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': "view.svc/MASHURA_ItemChangeB1SLQuery?$filter=Shopify_Store eq 'local'", 'request': {'method': 'GET', 'url': "https://10.0.0.100:50000/b1s/v1/view.svc/MASHURA_ItemChangeB1SLQuery?$filter=Shopify_Store eq 'local'", 'data': None, 'params': None}, 'response': None, 'status': None}
2025-08-03 15:22:37,412 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': "view.svc/MASHURA_ItemChangeB1SLQuery?$filter=Shopify_Store eq 'local'", 'request': None, 'response': {'odata.metadata': 'https://10.0.0.100:50000/b1s/v1/view.svc/$metadata#MASHURA_ItemChangeB1SLQuery', 'value': []}, 'status': 'success'}
2025-08-03 15:22:37,415 - sync_service - INFO - Found 0 item changes for store local
2025-08-03 15:22:37,417 - sync_service - INFO - No item changes found for store local
2025-08-03 15:22:37,419 - sync_service - INFO - Sync Event: {'sync_type': 'item_changes_sap_to_shopify', 'items_processed': 0, 'success_count': 0, 'error_count': 0, 'details': None}
2025-08-03 15:22:37,420 - sync_service - INFO - Item changes sync completed: 0 processed, 0 successful, 0 errors
2025-08-03 15:22:43,991 - sync_service - INFO - Initialized Shopify client for store: Local Store (local)
2025-08-03 15:22:44,021 - sync_service - INFO - Starting all syncs...
2025-08-03 15:22:44,021 - sync_service - INFO - Starting new items sync...
2025-08-03 15:22:44,022 - sync_service - INFO - Starting multi-store new items sync from SAP to Shopify
2025-08-03 15:22:44,023 - sync_service - INFO - Fetching new items for store: local
2025-08-03 15:22:44,023 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'login', 'request': {'company': 'JudeBenHalim_Test', 'user': 'manager'}, 'response': None, 'status': None}
2025-08-03 15:22:44,969 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'login', 'request': None, 'response': {'status': 'success'}, 'status': 'success'}
2025-08-03 15:22:44,970 - sync_service - INFO - SAP login successful
2025-08-03 15:22:44,971 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': "view.svc/MASHURA_New_ItemsB1SLQuery?$filter=Shopify_Store eq 'local'&$orderby=MainProduct", 'request': {'method': 'GET', 'url': "https://10.0.0.100:50000/b1s/v1/view.svc/MASHURA_New_ItemsB1SLQuery?$filter=Shopify_Store eq 'local'&$orderby=MainProduct", 'data': None, 'params': None}, 'response': None, 'status': None}
2025-08-03 15:22:45,699 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': "view.svc/MASHURA_New_ItemsB1SLQuery?$filter=Shopify_Store eq 'local'&$orderby=MainProduct", 'request': None, 'response': {'odata.metadata': 'https://10.0.0.100:50000/b1s/v1/view.svc/$metadata#MASHURA_New_ItemsB1SLQuery', 'value': []}, 'status': 'success'}
2025-08-03 15:22:45,702 - sync_service - INFO - No new items found in SAP for store local
2025-08-03 15:22:45,703 - sync_service - INFO - Sync Event: {'sync_type': 'multi_store_new_items_sap_to_shopify', 'items_processed': 0, 'success_count': 0, 'error_count': 0, 'details': None}
2025-08-03 15:22:45,704 - sync_service - INFO - Multi-store new items sync completed: 0 processed, 0 successful, 0 errors
2025-08-03 15:22:45,704 - sync_service - INFO - Starting stock change sync...
2025-08-03 15:22:45,705 - sync_service - INFO - Starting stock change sync using MASHURA_StockChangeB1SLQuery view
2025-08-03 15:22:45,705 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'view.svc/MASHURA_StockChangeB1SLQuery', 'request': {'method': 'GET', 'url': 'https://10.0.0.100:50000/b1s/v1/view.svc/MASHURA_StockChangeB1SLQuery', 'data': None, 'params': {'$top': 50}}, 'response': None, 'status': None}
2025-08-03 15:22:46,516 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'view.svc/MASHURA_StockChangeB1SLQuery', 'request': None, 'response': {'odata.metadata': 'https://10.0.0.100:50000/b1s/v1/view.svc/$metadata#MASHURA_StockChangeB1SLQuery', 'value': [{'ItemCode': 'FG-0000711', 'Variant_ID': '44461240680514', 'OnHand': 60.0, 'Available': 30.0, 'Location_ID': '68605345858', 'id__': 1}, {'ItemCode': 'FG-0000708', 'Variant_ID': '44461228064834', 'OnHand': 400.0, 'Available': 200.0, 'Location_ID': '68605345858', 'id__': 2}, {'ItemCode': 'FG-0000709', 'Variant_ID': '44461228097602', 'OnHand': 35.0, 'Available': 10.0, 'Location_ID': '68605345858', 'id__': 3}, {'ItemCode': 'FG-0000710', 'Variant_ID': '44461228130370', 'OnHand': 40.0, 'Available': 20.0, 'Location_ID': '68605345858', 'id__': 4}]}, 'status': 'success'}
2025-08-03 15:22:46,520 - sync_service - INFO - Updating inventory for item FG-0000711 (variant 44461240680514) at location 68605345858
2025-08-03 15:22:46,520 - sync_service - INFO - API Call: {'service': 'shopify', 'endpoint': 'rest_inventory_local', 'request': {'location_id': '68605345858', 'inventory_item_id': '44461240680514', 'available': 30}, 'response': None, 'status': None}
2025-08-03 15:22:47,105 - sync_service - INFO - API Call: {'service': 'shopify', 'endpoint': 'rest_inventory_local', 'request': None, 'response': {'inventory_level': {'inventory_item_id': 44461240680514, 'location_id': 68605345858, 'available': 30, 'updated_at': '2025-08-03T14:09:41+03:00', 'admin_graphql_api_id': 'gid://shopify/InventoryLevel/103109591106?inventory_item_id=44461240680514'}}, 'status': 'success'}
2025-08-03 15:22:48,660 - sync_service - INFO - SAP logging client login successful
2025-08-03 15:22:49,352 - sync_service - INFO - API log added to SAP: shopify - inventory_levels - success
2025-08-03 15:22:49,456 - sync_service - INFO - Updating inventory for item FG-0000708 (variant 44461228064834) at location 68605345858
2025-08-03 15:22:49,457 - sync_service - INFO - API Call: {'service': 'shopify', 'endpoint': 'rest_inventory_local', 'request': {'location_id': '68605345858', 'inventory_item_id': '44461228064834', 'available': 200}, 'response': None, 'status': None}
2025-08-03 15:23:01,044 - sync_service - INFO - API Call: {'service': 'shopify', 'endpoint': 'rest_inventory_local', 'request': None, 'response': {'inventory_level': {'inventory_item_id': 44461228064834, 'location_id': 68605345858, 'available': 200, 'updated_at': '2025-08-03T14:01:25+03:00', 'admin_graphql_api_id': 'gid://shopify/InventoryLevel/103109591106?inventory_item_id=44461228064834'}}, 'status': 'success'}
2025-08-03 15:23:02,533 - sync_service - INFO - API log added to SAP: shopify - inventory_levels - success
2025-08-03 15:23:02,637 - sync_service - INFO - Updating inventory for item FG-0000709 (variant 44461228097602) at location 68605345858
2025-08-03 15:23:02,639 - sync_service - INFO - API Call: {'service': 'shopify', 'endpoint': 'rest_inventory_local', 'request': {'location_id': '68605345858', 'inventory_item_id': '44461228097602', 'available': 10}, 'response': None, 'status': None}
2025-08-03 15:23:03,200 - sync_service - INFO - API Call: {'service': 'shopify', 'endpoint': 'rest_inventory_local', 'request': None, 'response': {'inventory_level': {'inventory_item_id': 44461228097602, 'location_id': 68605345858, 'available': 10, 'updated_at': '2025-08-03T14:01:27+03:00', 'admin_graphql_api_id': 'gid://shopify/InventoryLevel/103109591106?inventory_item_id=44461228097602'}}, 'status': 'success'}
2025-08-03 15:23:05,037 - sync_service - INFO - API log added to SAP: shopify - inventory_levels - success
2025-08-03 15:23:05,149 - sync_service - INFO - Updating inventory for item FG-0000710 (variant 44461228130370) at location 68605345858
2025-08-03 15:23:05,152 - sync_service - INFO - API Call: {'service': 'shopify', 'endpoint': 'rest_inventory_local', 'request': {'location_id': '68605345858', 'inventory_item_id': '44461228130370', 'available': 20}, 'response': None, 'status': None}
2025-08-03 15:23:06,063 - sync_service - INFO - API Call: {'service': 'shopify', 'endpoint': 'rest_inventory_local', 'request': None, 'response': {'inventory_level': {'inventory_item_id': 44461228130370, 'location_id': 68605345858, 'available': 20, 'updated_at': '2025-08-03T14:01:27+03:00', 'admin_graphql_api_id': 'gid://shopify/InventoryLevel/103109591106?inventory_item_id=44461228130370'}}, 'status': 'success'}
2025-08-03 15:23:13,586 - sync_service - INFO - API log added to SAP: shopify - inventory_levels - success
2025-08-03 15:23:13,688 - sync_service - INFO - Stock change sync completed: 4 processed, 4 successful, 0 errors
2025-08-03 15:23:13,690 - sync_service - INFO - Starting item changes sync...
2025-08-03 15:23:13,691 - sync_service - INFO - Starting item changes sync from SAP to Shopify
2025-08-03 15:23:13,692 - sync_service - INFO - Processing item changes for store: local
2025-08-03 15:23:13,693 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': "view.svc/MASHURA_ItemChangeB1SLQuery?$filter=Shopify_Store eq 'local'", 'request': {'method': 'GET', 'url': "https://10.0.0.100:50000/b1s/v1/view.svc/MASHURA_ItemChangeB1SLQuery?$filter=Shopify_Store eq 'local'", 'data': None, 'params': None}, 'response': None, 'status': None}
2025-08-03 15:23:14,554 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': "view.svc/MASHURA_ItemChangeB1SLQuery?$filter=Shopify_Store eq 'local'", 'request': None, 'response': {'odata.metadata': 'https://10.0.0.100:50000/b1s/v1/view.svc/$metadata#MASHURA_ItemChangeB1SLQuery', 'value': []}, 'status': 'success'}
2025-08-03 15:23:14,556 - sync_service - INFO - Found 0 item changes for store local
2025-08-03 15:23:14,557 - sync_service - INFO - No item changes found for store local
2025-08-03 15:23:14,557 - sync_service - INFO - Sync Event: {'sync_type': 'item_changes_sap_to_shopify', 'items_processed': 0, 'success_count': 0, 'error_count': 0, 'details': None}
2025-08-03 15:23:14,559 - sync_service - INFO - Item changes sync completed: 0 processed, 0 successful, 0 errors
2025-08-03 15:23:23,160 - sync_service - INFO - Initialized Shopify client for store: Local Store (local)
2025-08-03 15:23:23,186 - sync_service - INFO - Starting all syncs...
2025-08-03 15:23:23,186 - sync_service - INFO - Starting new items sync...
2025-08-03 15:23:23,187 - sync_service - INFO - Starting multi-store new items sync from SAP to Shopify
2025-08-03 15:23:23,187 - sync_service - INFO - Fetching new items for store: local
2025-08-03 15:23:23,194 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'login', 'request': {'company': 'JudeBenHalim_Test', 'user': 'manager'}, 'response': None, 'status': None}
2025-08-03 15:23:24,109 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'login', 'request': None, 'response': {'status': 'success'}, 'status': 'success'}
2025-08-03 15:23:24,111 - sync_service - INFO - SAP login successful
2025-08-03 15:23:24,114 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': "view.svc/MASHURA_New_ItemsB1SLQuery?$filter=Shopify_Store eq 'local'&$orderby=MainProduct", 'request': {'method': 'GET', 'url': "https://10.0.0.100:50000/b1s/v1/view.svc/MASHURA_New_ItemsB1SLQuery?$filter=Shopify_Store eq 'local'&$orderby=MainProduct", 'data': None, 'params': None}, 'response': None, 'status': None}
2025-08-03 15:23:24,888 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': "view.svc/MASHURA_New_ItemsB1SLQuery?$filter=Shopify_Store eq 'local'&$orderby=MainProduct", 'request': None, 'response': {'odata.metadata': 'https://10.0.0.100:50000/b1s/v1/view.svc/$metadata#MASHURA_New_ItemsB1SLQuery', 'value': []}, 'status': 'success'}
2025-08-03 15:23:24,896 - sync_service - INFO - No new items found in SAP for store local
2025-08-03 15:23:24,897 - sync_service - INFO - Sync Event: {'sync_type': 'multi_store_new_items_sap_to_shopify', 'items_processed': 0, 'success_count': 0, 'error_count': 0, 'details': None}
2025-08-03 15:23:24,898 - sync_service - INFO - Multi-store new items sync completed: 0 processed, 0 successful, 0 errors
2025-08-03 15:23:24,901 - sync_service - INFO - Starting stock change sync...
2025-08-03 15:23:24,902 - sync_service - INFO - Starting stock change sync using MASHURA_StockChangeB1SLQuery view
2025-08-03 15:23:24,903 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'view.svc/MASHURA_StockChangeB1SLQuery', 'request': {'method': 'GET', 'url': 'https://10.0.0.100:50000/b1s/v1/view.svc/MASHURA_StockChangeB1SLQuery', 'data': None, 'params': {'$top': 50}}, 'response': None, 'status': None}
2025-08-03 15:23:26,020 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'view.svc/MASHURA_StockChangeB1SLQuery', 'request': None, 'response': {'odata.metadata': 'https://10.0.0.100:50000/b1s/v1/view.svc/$metadata#MASHURA_StockChangeB1SLQuery', 'value': [{'ItemCode': 'FG-0000711', 'Variant_ID': '44461240680514', 'OnHand': 60.0, 'Available': 30.0, 'Location_ID': '68605345858', 'id__': 1}, {'ItemCode': 'FG-0000708', 'Variant_ID': '44461228064834', 'OnHand': 400.0, 'Available': 200.0, 'Location_ID': '68605345858', 'id__': 2}, {'ItemCode': 'FG-0000709', 'Variant_ID': '44461228097602', 'OnHand': 35.0, 'Available': 10.0, 'Location_ID': '68605345858', 'id__': 3}, {'ItemCode': 'FG-0000710', 'Variant_ID': '44461228130370', 'OnHand': 40.0, 'Available': 20.0, 'Location_ID': '68605345858', 'id__': 4}]}, 'status': 'success'}
2025-08-03 15:23:26,023 - sync_service - INFO - Updating inventory for item FG-0000711 (variant 44461240680514) at location 68605345858
2025-08-03 15:23:26,026 - sync_service - INFO - API Call: {'service': 'shopify', 'endpoint': 'rest_inventory_local', 'request': {'location_id': '68605345858', 'inventory_item_id': '44461240680514', 'available': 30}, 'response': None, 'status': None}
2025-08-03 15:23:26,635 - sync_service - INFO - API Call: {'service': 'shopify', 'endpoint': 'rest_inventory_local', 'request': None, 'response': {'inventory_level': {'inventory_item_id': 44461240680514, 'location_id': 68605345858, 'available': 30, 'updated_at': '2025-08-03T14:09:41+03:00', 'admin_graphql_api_id': 'gid://shopify/InventoryLevel/103109591106?inventory_item_id=44461240680514'}}, 'status': 'success'}
2025-08-03 15:23:28,006 - sync_service - INFO - SAP logging client login successful
2025-08-03 15:23:28,985 - sync_service - INFO - API log added to SAP: shopify - inventory_levels - success
2025-08-03 15:23:29,099 - sync_service - INFO - Updating inventory for item FG-0000708 (variant 44461228064834) at location 68605345858
2025-08-03 15:23:29,102 - sync_service - INFO - API Call: {'service': 'shopify', 'endpoint': 'rest_inventory_local', 'request': {'location_id': '68605345858', 'inventory_item_id': '44461228064834', 'available': 200}, 'response': None, 'status': None}
2025-08-03 15:23:39,231 - sync_service - INFO - API log added to SAP: shopify - inventory_levels - success
2025-08-03 20:39:12,927 - sync_service - INFO - Initialized Shopify client for store: Local Store (local)
2025-08-03 20:39:12,979 - sync_service - INFO - Starting all syncs...
2025-08-03 20:39:12,980 - sync_service - INFO - Starting new items sync...
2025-08-03 20:39:12,981 - sync_service - INFO - Starting multi-store new items sync from SAP to Shopify
2025-08-03 20:39:12,981 - sync_service - INFO - Fetching new items for store: local
2025-08-03 20:39:12,982 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'login', 'request': {'company': 'JudeBenHalim_Test', 'user': 'manager'}, 'response': None, 'status': None}
2025-08-03 20:39:13,869 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'login', 'request': None, 'response': {'status': 'success'}, 'status': 'success'}
2025-08-03 20:39:13,871 - sync_service - INFO - SAP login successful
2025-08-03 20:39:13,874 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': "view.svc/MASHURA_New_ItemsB1SLQuery?$filter=Shopify_Store eq 'local'&$orderby=MainProduct", 'request': {'method': 'GET', 'url': "https://10.0.0.100:50000/b1s/v1/view.svc/MASHURA_New_ItemsB1SLQuery?$filter=Shopify_Store eq 'local'&$orderby=MainProduct", 'data': None, 'params': None}, 'response': None, 'status': None}
2025-08-03 20:39:14,638 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': "view.svc/MASHURA_New_ItemsB1SLQuery?$filter=Shopify_Store eq 'local'&$orderby=MainProduct", 'request': None, 'response': {'odata.metadata': 'https://10.0.0.100:50000/b1s/v1/view.svc/$metadata#MASHURA_New_ItemsB1SLQuery', 'value': []}, 'status': 'success'}
2025-08-03 20:39:14,642 - sync_service - INFO - No new items found in SAP for store local
2025-08-03 20:39:14,644 - sync_service - INFO - Sync Event: {'sync_type': 'multi_store_new_items_sap_to_shopify', 'items_processed': 0, 'success_count': 0, 'error_count': 0, 'details': None}
2025-08-03 20:39:14,682 - sync_service - INFO - Multi-store new items sync completed: 0 processed, 0 successful, 0 errors
2025-08-03 20:39:14,684 - sync_service - INFO - Starting stock change sync...
2025-08-03 20:39:14,685 - sync_service - INFO - Starting stock change sync using MASHURA_StockChangeB1SLQuery view
2025-08-03 20:39:14,686 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'view.svc/MASHURA_StockChangeB1SLQuery', 'request': {'method': 'GET', 'url': 'https://10.0.0.100:50000/b1s/v1/view.svc/MASHURA_StockChangeB1SLQuery', 'data': None, 'params': {'$top': 50}}, 'response': None, 'status': None}
2025-08-03 20:39:15,570 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'view.svc/MASHURA_StockChangeB1SLQuery', 'request': None, 'response': {'odata.metadata': 'https://10.0.0.100:50000/b1s/v1/view.svc/$metadata#MASHURA_StockChangeB1SLQuery', 'value': [{'ItemCode': 'FG-0000711', 'Variant_ID': '44461240680514', 'OnHand': 60.0, 'Available': 30.0, 'Location_ID': '68605345858', 'id__': 1}, {'ItemCode': 'FG-0000708', 'Variant_ID': '44461228064834', 'OnHand': 400.0, 'Available': 200.0, 'Location_ID': '68605345858', 'id__': 2}, {'ItemCode': 'FG-0000709', 'Variant_ID': '44461228097602', 'OnHand': 35.0, 'Available': 10.0, 'Location_ID': '68605345858', 'id__': 3}, {'ItemCode': 'FG-0000710', 'Variant_ID': '44461228130370', 'OnHand': 40.0, 'Available': 20.0, 'Location_ID': '68605345858', 'id__': 4}]}, 'status': 'success'}
2025-08-03 20:39:15,575 - sync_service - INFO - Updating inventory for item FG-0000711 (variant 44461240680514) at location 68605345858
2025-08-03 20:39:15,577 - sync_service - INFO - API Call: {'service': 'shopify', 'endpoint': 'rest_inventory_local', 'request': {'location_id': '68605345858', 'inventory_item_id': '44461240680514', 'available': 30}, 'response': None, 'status': None}
2025-08-03 20:39:27,286 - sync_service - INFO - API Call: {'service': 'shopify', 'endpoint': 'rest_inventory_local', 'request': None, 'response': {'inventory_level': {'inventory_item_id': 44461240680514, 'location_id': 68605345858, 'available': 30, 'updated_at': '2025-08-03T14:09:41+03:00', 'admin_graphql_api_id': 'gid://shopify/InventoryLevel/103109591106?inventory_item_id=44461240680514'}}, 'status': 'success'}
2025-08-03 20:39:28,765 - sync_service - INFO - SAP logging client login successful
2025-08-03 20:39:29,682 - sync_service - INFO - API log added to SAP: shopify - inventory_levels - success
2025-08-03 20:39:29,789 - sync_service - INFO - Updating inventory for item FG-0000708 (variant 44461228064834) at location 68605345858
2025-08-03 20:39:29,792 - sync_service - INFO - API Call: {'service': 'shopify', 'endpoint': 'rest_inventory_local', 'request': {'location_id': '68605345858', 'inventory_item_id': '44461228064834', 'available': 200}, 'response': None, 'status': None}
2025-08-03 20:39:30,397 - sync_service - INFO - API Call: {'service': 'shopify', 'endpoint': 'rest_inventory_local', 'request': None, 'response': {'inventory_level': {'inventory_item_id': 44461228064834, 'location_id': 68605345858, 'available': 200, 'updated_at': '2025-08-03T14:01:25+03:00', 'admin_graphql_api_id': 'gid://shopify/InventoryLevel/103109591106?inventory_item_id=44461228064834'}}, 'status': 'success'}
2025-08-03 20:39:31,830 - sync_service - INFO - API log added to SAP: shopify - inventory_levels - success
2025-08-03 20:39:31,937 - sync_service - INFO - Updating inventory for item FG-0000709 (variant 44461228097602) at location 68605345858
2025-08-03 20:39:31,940 - sync_service - INFO - API Call: {'service': 'shopify', 'endpoint': 'rest_inventory_local', 'request': {'location_id': '68605345858', 'inventory_item_id': '44461228097602', 'available': 10}, 'response': None, 'status': None}
2025-08-03 20:39:32,527 - sync_service - INFO - API Call: {'service': 'shopify', 'endpoint': 'rest_inventory_local', 'request': None, 'response': {'inventory_level': {'inventory_item_id': 44461228097602, 'location_id': 68605345858, 'available': 10, 'updated_at': '2025-08-03T14:01:27+03:00', 'admin_graphql_api_id': 'gid://shopify/InventoryLevel/103109591106?inventory_item_id=44461228097602'}}, 'status': 'success'}
2025-08-03 20:39:33,844 - sync_service - INFO - API log added to SAP: shopify - inventory_levels - success
2025-08-03 20:39:33,948 - sync_service - INFO - Updating inventory for item FG-0000710 (variant 44461228130370) at location 68605345858
2025-08-03 20:39:33,950 - sync_service - INFO - API Call: {'service': 'shopify', 'endpoint': 'rest_inventory_local', 'request': {'location_id': '68605345858', 'inventory_item_id': '44461228130370', 'available': 20}, 'response': None, 'status': None}
2025-08-03 20:39:34,493 - sync_service - INFO - API Call: {'service': 'shopify', 'endpoint': 'rest_inventory_local', 'request': None, 'response': {'inventory_level': {'inventory_item_id': 44461228130370, 'location_id': 68605345858, 'available': 20, 'updated_at': '2025-08-03T14:01:27+03:00', 'admin_graphql_api_id': 'gid://shopify/InventoryLevel/103109591106?inventory_item_id=44461228130370'}}, 'status': 'success'}
2025-08-03 20:39:42,576 - sync_service - INFO - API log added to SAP: shopify - inventory_levels - success
2025-08-03 20:39:42,687 - sync_service - INFO - Stock change sync completed: 4 processed, 4 successful, 0 errors
2025-08-03 20:39:42,689 - sync_service - INFO - Starting item changes sync...
2025-08-03 20:39:42,690 - sync_service - INFO - Starting item changes sync from SAP to Shopify
2025-08-03 20:39:42,690 - sync_service - INFO - Processing item changes for store: local
2025-08-03 20:39:42,691 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': "view.svc/MASHURA_ItemChangeB1SLQuery?$filter=Shopify_Store eq 'local'", 'request': {'method': 'GET', 'url': "https://10.0.0.100:50000/b1s/v1/view.svc/MASHURA_ItemChangeB1SLQuery?$filter=Shopify_Store eq 'local'", 'data': None, 'params': None}, 'response': None, 'status': None}
2025-08-03 20:39:43,092 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': "view.svc/MASHURA_ItemChangeB1SLQuery?$filter=Shopify_Store eq 'local'", 'request': None, 'response': {'odata.metadata': 'https://10.0.0.100:50000/b1s/v1/view.svc/$metadata#MASHURA_ItemChangeB1SLQuery', 'value': []}, 'status': 'success'}
2025-08-03 20:39:43,095 - sync_service - INFO - Found 0 item changes for store local
2025-08-03 20:39:43,097 - sync_service - INFO - No item changes found for store local
2025-08-03 20:39:43,098 - sync_service - INFO - Sync Event: {'sync_type': 'item_changes_sap_to_shopify', 'items_processed': 0, 'success_count': 0, 'error_count': 0, 'details': None}
2025-08-03 20:39:43,099 - sync_service - INFO - Item changes sync completed: 0 processed, 0 successful, 0 errors
2025-08-03 20:39:43,101 - sync_service - INFO - Starting price changes sync...
2025-08-03 20:39:43,103 - sync_service - INFO - Starting price changes sync from SAP to Shopify
2025-08-03 20:39:43,103 - sync_service - INFO - Processing price changes for store: local
2025-08-03 20:39:43,104 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': "view.svc/MASHURA_PriceChangeB1SLQuery?$filter=Shopify_Store eq 'local'", 'request': {'method': 'GET', 'url': "https://10.0.0.100:50000/b1s/v1/view.svc/MASHURA_PriceChangeB1SLQuery?$filter=Shopify_Store eq 'local'", 'data': None, 'params': None}, 'response': None, 'status': None}
2025-08-03 20:39:44,007 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': "view.svc/MASHURA_PriceChangeB1SLQuery?$filter=Shopify_Store eq 'local'", 'request': None, 'response': {'odata.metadata': 'https://10.0.0.100:50000/b1s/v1/view.svc/$metadata#MASHURA_PriceChangeB1SLQuery', 'value': [{'ItemCode': 'FG-0000702', 'Shopify_ProductCode': None, 'Shopify_VariantId': '42360862408770', 'Price': 2500.0, 'Shopify_Store': 'local', 'id__': 1}, {'ItemCode': 'FG-0000703', 'Shopify_ProductCode': None, 'Shopify_VariantId': '42360862441538', 'Price': 2500.0, 'Shopify_Store': 'local', 'id__': 2}, {'ItemCode': 'FG-0000704', 'Shopify_ProductCode': '7522725691458', 'Shopify_VariantId': '42360861589570', 'Price': 3200.0, 'Shopify_Store': 'local', 'id__': 3}]}, 'status': 'success'}
2025-08-03 20:39:44,008 - sync_service - INFO - Found 3 price changes for store local
2025-08-03 20:39:44,008 - sync_service - INFO - Processing 3 price changes for store local
2025-08-03 20:39:44,009 - sync_service - INFO - Processing variant price change for FG-0000702 (variant ID: gid://shopify/ProductVariant/42360862408770)
2025-08-03 20:39:44,351 - sync_service - INFO - API log added to SAP: shopify - /admin/api/graphql_local - success
2025-08-03 20:39:44,354 - sync_service - INFO - API Call: {'service': 'shopify', 'endpoint': 'graphql_local', 'request': {'query': '\n        mutation productVariantUpdate($input: ProductVariantInput!) {\n            productVariantUpdate(input: $input) {\n                productVariant {\n                    id\n                    sku\n                    title\n                    selectedOptions {\n                        name\n                        value\n                    }\n                }\n                userErrors {\n                    field\n                    message\n                }\n            }\n        }\n        ', 'variables': {'input': {'price': '2500.0', 'id': 'gid://shopify/ProductVariant/42360862408770'}}}, 'response': None, 'status': None}
2025-08-03 20:39:45,034 - sync_service - INFO - API Call: {'service': 'shopify', 'endpoint': 'graphql_local', 'request': None, 'response': {'productVariantUpdate': {'productVariant': {'id': 'gid://shopify/ProductVariant/42360862408770', 'sku': 'FG-0000702', 'title': 'Black', 'selectedOptions': [{'name': 'Color', 'value': 'Black'}]}, 'userErrors': []}}, 'status': 'success'}
2025-08-03 20:39:45,522 - sync_service - INFO - API log added to SAP: shopify - /admin/api/graphql_local - success
2025-08-03 20:39:45,526 - sync_service - INFO - Successfully updated variant gid://shopify/ProductVariant/42360862408770 price to 2500.0 in store local
2025-08-03 20:39:45,982 - sync_service - INFO - API log added to SAP: sap - price_change - success
2025-08-03 20:39:45,984 - sync_service - INFO - Successfully logged price change for FG-0000702-local: 2500.0
2025-08-03 20:39:45,986 - sync_service - INFO - Successfully processed price change for FG-0000702 (price: 2500.0)
2025-08-03 20:39:46,496 - sync_service - INFO - Processing variant price change for FG-0000703 (variant ID: gid://shopify/ProductVariant/42360862441538)
2025-08-03 20:39:46,826 - sync_service - INFO - API log added to SAP: shopify - /admin/api/graphql_local - success
2025-08-03 20:39:46,829 - sync_service - INFO - API Call: {'service': 'shopify', 'endpoint': 'graphql_local', 'request': {'query': '\n        mutation productVariantUpdate($input: ProductVariantInput!) {\n            productVariantUpdate(input: $input) {\n                productVariant {\n                    id\n                    sku\n                    title\n                    selectedOptions {\n                        name\n                        value\n                    }\n                }\n                userErrors {\n                    field\n                    message\n                }\n            }\n        }\n        ', 'variables': {'input': {'price': '2500.0', 'id': 'gid://shopify/ProductVariant/42360862441538'}}}, 'response': None, 'status': None}
2025-08-03 20:39:56,700 - sync_service - INFO - API Call: {'service': 'shopify', 'endpoint': 'graphql_local', 'request': None, 'response': {'productVariantUpdate': {'productVariant': {'id': 'gid://shopify/ProductVariant/42360862441538', 'sku': 'FG-0000703', 'title': 'White', 'selectedOptions': [{'name': 'Color', 'value': 'White'}]}, 'userErrors': []}}, 'status': 'success'}
2025-08-03 20:39:57,163 - sync_service - INFO - API log added to SAP: shopify - /admin/api/graphql_local - success
2025-08-03 20:39:57,164 - sync_service - INFO - Successfully updated variant gid://shopify/ProductVariant/42360862441538 price to 2500.0 in store local
2025-08-03 20:39:57,974 - sync_service - INFO - API log added to SAP: sap - price_change - success
2025-08-03 20:39:57,976 - sync_service - INFO - Successfully logged price change for FG-0000703-local: 2500.0
2025-08-03 20:39:57,977 - sync_service - INFO - Successfully processed price change for FG-0000703 (price: 2500.0)
2025-08-03 20:39:58,491 - sync_service - INFO - Processing product price change for FG-0000704 (product ID: gid://shopify/Product/7522725691458)
2025-08-03 20:39:59,543 - sync_service - INFO - API log added to SAP: shopify - /admin/api/graphql_local - success
2025-08-03 20:39:59,544 - sync_service - INFO - API Call: {'service': 'shopify', 'endpoint': 'graphql_local', 'request': {'query': '\n        mutation productUpdate($input: ProductInput!) {\n            productUpdate(input: $input) {\n                product {\n                    id\n                    title\n                    status\n                    vendor\n                    descriptionHtml\n                }\n                userErrors {\n                    field\n                    message\n                }\n            }\n        }\n        ', 'variables': {'input': {'price': '3200.0', 'id': 'gid://shopify/Product/7522725691458'}}}, 'response': None, 'status': None}
2025-08-03 20:40:00,488 - sync_service - ERROR - GraphQL query error for store local: {'message': 'Variable $input of type ProductInput! was provided invalid value for price (Field is not defined on ProductInput)', 'locations': [{'line': 1, 'column': 24}], 'extensions': {'value': {'price': '3200.0', 'id': 'gid://shopify/Product/7522725691458'}, 'problems': [{'path': ['price'], 'explanation': 'Field is not defined on ProductInput'}]}}
GraphQL Errors: [
  {
    "message": "Variable $input of type ProductInput! was provided invalid value for price (Field is not defined on ProductInput)",
    "locations": [
      {
        "line": 1,
        "column": 24
      }
    ],
    "extensions": {
      "value": {
        "price": "3200.0",
        "id": "gid://shopify/Product/7522725691458"
      },
      "problems": [
        {
          "path": [
            "price"
          ],
          "explanation": "Field is not defined on ProductInput"
        }
      ]
    }
  }
]
GraphQL Data: null
GraphQL Extensions: null
2025-08-03 20:40:00,929 - sync_service - INFO - API log added to SAP: shopify - /admin/api/graphql_local - failure
2025-08-03 20:40:01,340 - sync_service - INFO - API log added to SAP: shopify - /admin/api/graphql_local - failure
2025-08-03 20:40:01,341 - sync_service - ERROR - Failed to update product gid://shopify/Product/7522725691458 price in store local: GraphQL query error for store local: {'message': 'Variable $input of type ProductInput! was provided invalid value for price (Field is not defined on ProductInput)', 'locations': [{'line': 1, 'column': 24}], 'extensions': {'value': {'price': '3200.0', 'id': 'gid://shopify/Product/7522725691458'}, 'problems': [{'path': ['price'], 'explanation': 'Field is not defined on ProductInput'}]}}
GraphQL Errors: [
  {
    "message": "Variable $input of type ProductInput! was provided invalid value for price (Field is not defined on ProductInput)",
    "locations": [
      {
        "line": 1,
        "column": 24
      }
    ],
    "extensions": {
      "value": {
        "price": "3200.0",
        "id": "gid://shopify/Product/7522725691458"
      },
      "problems": [
        {
          "path": [
            "price"
          ],
          "explanation": "Field is not defined on ProductInput"
        }
      ]
    }
  }
]
GraphQL Data: null
GraphQL Extensions: null
2025-08-03 20:40:01,711 - sync_service - INFO - API log added to SAP: sap - price_change - success
2025-08-03 20:40:01,712 - sync_service - INFO - Successfully logged price change for FG-0000704-local: 3200.0
2025-08-03 20:40:01,713 - sync_service - INFO - Successfully processed price change for FG-0000704 (price: 3200.0)
2025-08-03 20:40:02,225 - sync_service - INFO - Sync Event: {'sync_type': 'price_changes_sap_to_shopify', 'items_processed': 3, 'success_count': 3, 'error_count': 0, 'details': None}
2025-08-03 20:40:02,227 - sync_service - INFO - Price changes sync completed: 3 processed, 3 successful, 0 errors
2025-08-03 21:02:13,564 - sync_service - INFO - Initialized Shopify client for store: Local Store (local)
2025-08-03 21:02:13,655 - sync_service - INFO - Starting all syncs...
2025-08-03 21:02:13,657 - sync_service - INFO - Starting new items sync...
2025-08-03 21:02:13,657 - sync_service - INFO - Starting multi-store new items sync from SAP to Shopify
2025-08-03 21:02:13,658 - sync_service - INFO - Fetching new items for store: local
2025-08-03 21:02:13,660 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'login', 'request': {'company': 'JudeBenHalim_Test', 'user': 'manager'}, 'response': None, 'status': None}
2025-08-03 21:02:15,248 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'login', 'request': None, 'response': {'status': 'success'}, 'status': 'success'}
2025-08-03 21:02:15,249 - sync_service - INFO - SAP login successful
2025-08-03 21:02:15,256 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': "view.svc/MASHURA_New_ItemsB1SLQuery?$filter=Shopify_Store eq 'local'&$orderby=MainProduct", 'request': {'method': 'GET', 'url': "https://10.0.0.100:50000/b1s/v1/view.svc/MASHURA_New_ItemsB1SLQuery?$filter=Shopify_Store eq 'local'&$orderby=MainProduct", 'data': None, 'params': None}, 'response': None, 'status': None}
2025-08-03 21:02:16,506 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': "view.svc/MASHURA_New_ItemsB1SLQuery?$filter=Shopify_Store eq 'local'&$orderby=MainProduct", 'request': None, 'response': {'odata.metadata': 'https://10.0.0.100:50000/b1s/v1/view.svc/$metadata#MASHURA_New_ItemsB1SLQuery', 'value': []}, 'status': 'success'}
2025-08-03 21:02:16,509 - sync_service - INFO - No new items found in SAP for store local
2025-08-03 21:02:16,511 - sync_service - INFO - Sync Event: {'sync_type': 'multi_store_new_items_sap_to_shopify', 'items_processed': 0, 'success_count': 0, 'error_count': 0, 'details': None}
2025-08-03 21:02:16,512 - sync_service - INFO - Multi-store new items sync completed: 0 processed, 0 successful, 0 errors
2025-08-03 21:02:16,512 - sync_service - INFO - Starting stock change sync...
2025-08-03 21:02:16,513 - sync_service - INFO - Starting stock change sync using MASHURA_StockChangeB1SLQuery view
2025-08-03 21:02:16,513 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'view.svc/MASHURA_StockChangeB1SLQuery', 'request': {'method': 'GET', 'url': 'https://10.0.0.100:50000/b1s/v1/view.svc/MASHURA_StockChangeB1SLQuery', 'data': None, 'params': {'$top': 50}}, 'response': None, 'status': None}
2025-08-03 21:02:17,650 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'view.svc/MASHURA_StockChangeB1SLQuery', 'request': None, 'response': {'odata.metadata': 'https://10.0.0.100:50000/b1s/v1/view.svc/$metadata#MASHURA_StockChangeB1SLQuery', 'value': [{'ItemCode': 'FG-0000711', 'Variant_ID': '44461240680514', 'OnHand': 60.0, 'Available': 30.0, 'Location_ID': '68605345858', 'id__': 1}, {'ItemCode': 'FG-0000708', 'Variant_ID': '44461228064834', 'OnHand': 400.0, 'Available': 200.0, 'Location_ID': '68605345858', 'id__': 2}, {'ItemCode': 'FG-0000709', 'Variant_ID': '44461228097602', 'OnHand': 35.0, 'Available': 10.0, 'Location_ID': '68605345858', 'id__': 3}, {'ItemCode': 'FG-0000710', 'Variant_ID': '44461228130370', 'OnHand': 40.0, 'Available': 20.0, 'Location_ID': '68605345858', 'id__': 4}]}, 'status': 'success'}
2025-08-03 21:02:17,655 - sync_service - INFO - Updating inventory for item FG-0000711 (variant 44461240680514) at location 68605345858
2025-08-03 21:02:17,656 - sync_service - INFO - API Call: {'service': 'shopify', 'endpoint': 'rest_inventory_local', 'request': {'location_id': '68605345858', 'inventory_item_id': '44461240680514', 'available': 30}, 'response': None, 'status': None}
2025-08-03 21:02:30,371 - sync_service - INFO - API Call: {'service': 'shopify', 'endpoint': 'rest_inventory_local', 'request': None, 'response': {'inventory_level': {'inventory_item_id': 44461240680514, 'location_id': 68605345858, 'available': 30, 'updated_at': '2025-08-03T14:09:41+03:00', 'admin_graphql_api_id': 'gid://shopify/InventoryLevel/103109591106?inventory_item_id=44461240680514'}}, 'status': 'success'}
2025-08-03 21:02:32,091 - sync_service - INFO - SAP logging client login successful
2025-08-03 21:02:33,156 - sync_service - INFO - API log added to SAP: shopify - inventory_levels - success
2025-08-03 21:02:33,259 - sync_service - INFO - Updating inventory for item FG-0000708 (variant 44461228064834) at location 68605345858
2025-08-03 21:02:33,259 - sync_service - INFO - API Call: {'service': 'shopify', 'endpoint': 'rest_inventory_local', 'request': {'location_id': '68605345858', 'inventory_item_id': '44461228064834', 'available': 200}, 'response': None, 'status': None}
2025-08-03 21:02:33,933 - sync_service - INFO - API Call: {'service': 'shopify', 'endpoint': 'rest_inventory_local', 'request': None, 'response': {'inventory_level': {'inventory_item_id': 44461228064834, 'location_id': 68605345858, 'available': 200, 'updated_at': '2025-08-03T14:01:25+03:00', 'admin_graphql_api_id': 'gid://shopify/InventoryLevel/103109591106?inventory_item_id=44461228064834'}}, 'status': 'success'}
2025-08-03 21:02:35,714 - sync_service - INFO - API log added to SAP: shopify - inventory_levels - success
2025-08-03 21:02:35,820 - sync_service - INFO - Updating inventory for item FG-0000709 (variant 44461228097602) at location 68605345858
2025-08-03 21:02:35,823 - sync_service - INFO - API Call: {'service': 'shopify', 'endpoint': 'rest_inventory_local', 'request': {'location_id': '68605345858', 'inventory_item_id': '44461228097602', 'available': 10}, 'response': None, 'status': None}
2025-08-03 21:02:36,412 - sync_service - INFO - API Call: {'service': 'shopify', 'endpoint': 'rest_inventory_local', 'request': None, 'response': {'inventory_level': {'inventory_item_id': 44461228097602, 'location_id': 68605345858, 'available': 10, 'updated_at': '2025-08-03T14:01:27+03:00', 'admin_graphql_api_id': 'gid://shopify/InventoryLevel/103109591106?inventory_item_id=44461228097602'}}, 'status': 'success'}
2025-08-03 21:02:37,763 - sync_service - INFO - API log added to SAP: shopify - inventory_levels - success
2025-08-03 21:02:37,891 - sync_service - INFO - Updating inventory for item FG-0000710 (variant 44461228130370) at location 68605345858
2025-08-03 21:02:37,894 - sync_service - INFO - API Call: {'service': 'shopify', 'endpoint': 'rest_inventory_local', 'request': {'location_id': '68605345858', 'inventory_item_id': '44461228130370', 'available': 20}, 'response': None, 'status': None}
2025-08-03 21:02:45,890 - sync_service - INFO - API Call: {'service': 'shopify', 'endpoint': 'rest_inventory_local', 'request': None, 'response': {'inventory_level': {'inventory_item_id': 44461228130370, 'location_id': 68605345858, 'available': 20, 'updated_at': '2025-08-03T14:01:27+03:00', 'admin_graphql_api_id': 'gid://shopify/InventoryLevel/103109591106?inventory_item_id=44461228130370'}}, 'status': 'success'}
2025-08-03 21:02:47,238 - sync_service - INFO - API log added to SAP: shopify - inventory_levels - success
2025-08-03 21:02:47,356 - sync_service - INFO - Stock change sync completed: 4 processed, 4 successful, 0 errors
2025-08-03 21:02:47,358 - sync_service - INFO - Starting item changes sync...
2025-08-03 21:02:47,361 - sync_service - INFO - Starting item changes sync from SAP to Shopify
2025-08-03 21:02:47,362 - sync_service - INFO - Processing item changes for store: local
2025-08-03 21:02:47,363 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': "view.svc/MASHURA_ItemChangeB1SLQuery?$filter=Shopify_Store eq 'local'", 'request': {'method': 'GET', 'url': "https://10.0.0.100:50000/b1s/v1/view.svc/MASHURA_ItemChangeB1SLQuery?$filter=Shopify_Store eq 'local'", 'data': None, 'params': None}, 'response': None, 'status': None}
2025-08-03 21:02:47,747 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': "view.svc/MASHURA_ItemChangeB1SLQuery?$filter=Shopify_Store eq 'local'", 'request': None, 'response': {'odata.metadata': 'https://10.0.0.100:50000/b1s/v1/view.svc/$metadata#MASHURA_ItemChangeB1SLQuery', 'value': []}, 'status': 'success'}
2025-08-03 21:02:47,749 - sync_service - INFO - Found 0 item changes for store local
2025-08-03 21:02:47,751 - sync_service - INFO - No item changes found for store local
2025-08-03 21:02:47,751 - sync_service - INFO - Sync Event: {'sync_type': 'item_changes_sap_to_shopify', 'items_processed': 0, 'success_count': 0, 'error_count': 0, 'details': None}
2025-08-03 21:02:47,752 - sync_service - INFO - Item changes sync completed: 0 processed, 0 successful, 0 errors
2025-08-03 21:02:47,753 - sync_service - INFO - Starting price changes sync...
2025-08-03 21:02:47,755 - sync_service - INFO - Starting price changes sync from SAP to Shopify
2025-08-03 21:02:47,755 - sync_service - INFO - Processing price changes for store: local
2025-08-03 21:02:47,757 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': "view.svc/MASHURA_PriceChangeB1SLQuery?$filter=Shopify_Store eq 'local'", 'request': {'method': 'GET', 'url': "https://10.0.0.100:50000/b1s/v1/view.svc/MASHURA_PriceChangeB1SLQuery?$filter=Shopify_Store eq 'local'", 'data': None, 'params': None}, 'response': None, 'status': None}
2025-08-03 21:02:48,380 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': "view.svc/MASHURA_PriceChangeB1SLQuery?$filter=Shopify_Store eq 'local'", 'request': None, 'response': {'odata.metadata': 'https://10.0.0.100:50000/b1s/v1/view.svc/$metadata#MASHURA_PriceChangeB1SLQuery', 'value': [{'ItemCode': 'FG-0000702', 'Shopify_ProductCode': None, 'Shopify_VariantId': '42360862408770', 'Price': 2500.0, 'Shopify_Store': 'local', 'id__': 1}, {'ItemCode': 'FG-0000703', 'Shopify_ProductCode': None, 'Shopify_VariantId': '42360862441538', 'Price': 2500.0, 'Shopify_Store': 'local', 'id__': 2}, {'ItemCode': 'FG-0000704', 'Shopify_ProductCode': '7522725691458', 'Shopify_VariantId': '42360861589570', 'Price': 3200.0, 'Shopify_Store': 'local', 'id__': 3}]}, 'status': 'success'}
2025-08-03 21:02:48,382 - sync_service - INFO - Found 3 price changes for store local
2025-08-03 21:02:48,384 - sync_service - INFO - Processing 3 price changes for store local
2025-08-03 21:02:48,386 - sync_service - INFO - Processing variant price change for FG-0000702 (variant ID: gid://shopify/ProductVariant/42360862408770)
2025-08-03 21:02:48,891 - sync_service - INFO - API log added to SAP: shopify - /admin/api/graphql_local - success
2025-08-03 21:02:48,892 - sync_service - INFO - API Call: {'service': 'shopify', 'endpoint': 'graphql_local', 'request': {'query': '\n        mutation productVariantUpdate($input: ProductVariantInput!) {\n            productVariantUpdate(input: $input) {\n                productVariant {\n                    id\n                    sku\n                    title\n                    selectedOptions {\n                        name\n                        value\n                    }\n                }\n                userErrors {\n                    field\n                    message\n                }\n            }\n        }\n        ', 'variables': {'input': {'price': '2500.0', 'id': 'gid://shopify/ProductVariant/42360862408770'}}}, 'response': None, 'status': None}
2025-08-03 21:02:49,490 - sync_service - INFO - API Call: {'service': 'shopify', 'endpoint': 'graphql_local', 'request': None, 'response': {'productVariantUpdate': {'productVariant': {'id': 'gid://shopify/ProductVariant/42360862408770', 'sku': 'FG-0000702', 'title': 'Black', 'selectedOptions': [{'name': 'Color', 'value': 'Black'}]}, 'userErrors': []}}, 'status': 'success'}
2025-08-03 21:02:50,044 - sync_service - INFO - API log added to SAP: shopify - /admin/api/graphql_local - success
2025-08-03 21:02:50,057 - sync_service - INFO - Successfully updated variant gid://shopify/ProductVariant/42360862408770 price to 2500.0 in store local
2025-08-03 21:02:50,674 - sync_service - INFO - API log added to SAP: sap - price_change - success
2025-08-03 21:02:50,677 - sync_service - INFO - Successfully logged price change for FG-0000702-local: 2500.0
2025-08-03 21:02:50,679 - sync_service - INFO - Successfully processed price change for FG-0000702 (price: 2500.0)
2025-08-03 21:02:51,190 - sync_service - INFO - Processing variant price change for FG-0000703 (variant ID: gid://shopify/ProductVariant/42360862441538)
2025-08-03 21:02:51,659 - sync_service - INFO - API log added to SAP: shopify - /admin/api/graphql_local - success
2025-08-03 21:02:51,661 - sync_service - INFO - API Call: {'service': 'shopify', 'endpoint': 'graphql_local', 'request': {'query': '\n        mutation productVariantUpdate($input: ProductVariantInput!) {\n            productVariantUpdate(input: $input) {\n                productVariant {\n                    id\n                    sku\n                    title\n                    selectedOptions {\n                        name\n                        value\n                    }\n                }\n                userErrors {\n                    field\n                    message\n                }\n            }\n        }\n        ', 'variables': {'input': {'price': '2500.0', 'id': 'gid://shopify/ProductVariant/42360862441538'}}}, 'response': None, 'status': None}
2025-08-03 21:02:58,496 - sync_service - INFO - API Call: {'service': 'shopify', 'endpoint': 'graphql_local', 'request': None, 'response': {'productVariantUpdate': {'productVariant': {'id': 'gid://shopify/ProductVariant/42360862441538', 'sku': 'FG-0000703', 'title': 'White', 'selectedOptions': [{'name': 'Color', 'value': 'White'}]}, 'userErrors': []}}, 'status': 'success'}
2025-08-03 21:02:59,011 - sync_service - INFO - API log added to SAP: shopify - /admin/api/graphql_local - success
2025-08-03 21:02:59,012 - sync_service - INFO - Successfully updated variant gid://shopify/ProductVariant/42360862441538 price to 2500.0 in store local
2025-08-03 21:02:59,927 - sync_service - INFO - API log added to SAP: sap - price_change - success
2025-08-03 21:02:59,928 - sync_service - INFO - Successfully logged price change for FG-0000703-local: 2500.0
2025-08-03 21:02:59,929 - sync_service - INFO - Successfully processed price change for FG-0000703 (price: 2500.0)
2025-08-03 21:03:00,431 - sync_service - INFO - Processing product price change for FG-0000704 (product ID: gid://shopify/Product/7522725691458)
2025-08-03 21:03:00,436 - sync_service - INFO - API Call: {'service': 'shopify', 'endpoint': 'graphql_local', 'request': {'query': '\n        query GetProduct($id: ID!) {\n            product(id: $id) {\n                id\n                title\n                handle\n                description\n                variants(first: 50) {\n                    edges {\n                        node {\n                            id\n                            sku\n                            price\n                            inventoryItem {\n                                id\n                            }\n                            selectedOptions {\n                                name\n                                value\n                            }\n                        }\n                    }\n                }\n            }\n        }\n        ', 'variables': {'id': 'gid://shopify/Product/7522725691458'}}, 'response': None, 'status': None}
2025-08-03 21:03:01,049 - sync_service - INFO - API Call: {'service': 'shopify', 'endpoint': 'graphql_local', 'request': None, 'response': {'product': {'id': 'gid://shopify/Product/7522725691458', 'title': 'Morsi Bracelet', 'handle': 'morsi-bracelet', 'description': '', 'variants': {'edges': [{'node': {'id': 'gid://shopify/ProductVariant/42360861589570', 'sku': 'FG-0000704', 'price': '3200.00', 'inventoryItem': {'id': 'gid://shopify/InventoryItem/44461227671618'}, 'selectedOptions': [{'name': 'Title', 'value': 'Default Title'}]}}]}}}, 'status': 'success'}
2025-08-03 21:03:01,053 - sync_service - INFO - Updating default variant gid://shopify/ProductVariant/42360861589570 price for product gid://shopify/Product/7522725691458
2025-08-03 21:03:02,112 - sync_service - INFO - API log added to SAP: shopify - /admin/api/graphql_local - success
2025-08-03 21:03:02,113 - sync_service - INFO - API Call: {'service': 'shopify', 'endpoint': 'graphql_local', 'request': {'query': '\n        mutation productVariantUpdate($input: ProductVariantInput!) {\n            productVariantUpdate(input: $input) {\n                productVariant {\n                    id\n                    sku\n                    title\n                    selectedOptions {\n                        name\n                        value\n                    }\n                }\n                userErrors {\n                    field\n                    message\n                }\n            }\n        }\n        ', 'variables': {'input': {'price': '3200.0', 'id': 'gid://shopify/ProductVariant/42360861589570'}}}, 'response': None, 'status': None}
2025-08-03 21:03:02,709 - sync_service - INFO - API Call: {'service': 'shopify', 'endpoint': 'graphql_local', 'request': None, 'response': {'productVariantUpdate': {'productVariant': {'id': 'gid://shopify/ProductVariant/42360861589570', 'sku': 'FG-0000704', 'title': 'Default Title', 'selectedOptions': [{'name': 'Title', 'value': 'Default Title'}]}, 'userErrors': []}}, 'status': 'success'}
2025-08-03 21:03:03,446 - sync_service - INFO - API log added to SAP: shopify - /admin/api/graphql_local - success
2025-08-03 21:03:03,446 - sync_service - INFO - Successfully updated product gid://shopify/Product/7522725691458 default variant price to 3200.0 in store local
2025-08-03 21:03:04,227 - sync_service - INFO - API log added to SAP: sap - price_change - success
2025-08-03 21:03:04,229 - sync_service - INFO - Successfully logged price change for FG-0000704-local: 3200.0
2025-08-03 21:03:04,230 - sync_service - INFO - Successfully processed price change for FG-0000704 (price: 3200.0)
2025-08-03 21:03:04,745 - sync_service - INFO - Sync Event: {'sync_type': 'price_changes_sap_to_shopify', 'items_processed': 3, 'success_count': 3, 'error_count': 0, 'details': None}
2025-08-03 21:03:04,746 - sync_service - INFO - Price changes sync completed: 3 processed, 3 successful, 0 errors
2025-08-03 21:08:22,973 - sync_service - INFO - Initialized Shopify client for store: Local Store (local)
2025-08-03 21:08:23,048 - sync_service - INFO - Starting all syncs...
2025-08-03 21:08:23,049 - sync_service - INFO - Starting new items sync...
2025-08-03 21:08:23,050 - sync_service - INFO - Starting multi-store new items sync from SAP to Shopify
2025-08-03 21:08:23,051 - sync_service - INFO - Fetching new items for store: local
2025-08-03 21:08:23,052 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'login', 'request': {'company': 'JudeBenHalim_Test', 'user': 'manager'}, 'response': None, 'status': None}
2025-08-03 21:08:24,068 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'login', 'request': None, 'response': {'status': 'success'}, 'status': 'success'}
2025-08-03 21:08:24,070 - sync_service - INFO - SAP login successful
2025-08-03 21:08:24,072 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': "view.svc/MASHURA_New_ItemsB1SLQuery?$filter=Shopify_Store eq 'local'&$orderby=MainProduct", 'request': {'method': 'GET', 'url': "https://10.0.0.100:50000/b1s/v1/view.svc/MASHURA_New_ItemsB1SLQuery?$filter=Shopify_Store eq 'local'&$orderby=MainProduct", 'data': None, 'params': None}, 'response': None, 'status': None}
2025-08-03 21:08:24,994 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': "view.svc/MASHURA_New_ItemsB1SLQuery?$filter=Shopify_Store eq 'local'&$orderby=MainProduct", 'request': None, 'response': {'odata.metadata': 'https://10.0.0.100:50000/b1s/v1/view.svc/$metadata#MASHURA_New_ItemsB1SLQuery', 'value': []}, 'status': 'success'}
2025-08-03 21:08:24,996 - sync_service - INFO - No new items found in SAP for store local
2025-08-03 21:08:24,996 - sync_service - INFO - Sync Event: {'sync_type': 'multi_store_new_items_sap_to_shopify', 'items_processed': 0, 'success_count': 0, 'error_count': 0, 'details': None}
2025-08-03 21:08:24,997 - sync_service - INFO - Multi-store new items sync completed: 0 processed, 0 successful, 0 errors
2025-08-03 21:08:24,999 - sync_service - INFO - Starting stock change sync...
2025-08-03 21:08:25,000 - sync_service - INFO - Starting stock change sync using MASHURA_StockChangeB1SLQuery view
2025-08-03 21:08:25,001 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'view.svc/MASHURA_StockChangeB1SLQuery', 'request': {'method': 'GET', 'url': 'https://10.0.0.100:50000/b1s/v1/view.svc/MASHURA_StockChangeB1SLQuery', 'data': None, 'params': {'$top': 50}}, 'response': None, 'status': None}
2025-08-03 21:08:25,928 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'view.svc/MASHURA_StockChangeB1SLQuery', 'request': None, 'response': {'odata.metadata': 'https://10.0.0.100:50000/b1s/v1/view.svc/$metadata#MASHURA_StockChangeB1SLQuery', 'value': [{'ItemCode': 'FG-0000711', 'Variant_ID': '44461240680514', 'OnHand': 60.0, 'Available': 30.0, 'Location_ID': '68605345858', 'id__': 1}, {'ItemCode': 'FG-0000708', 'Variant_ID': '44461228064834', 'OnHand': 400.0, 'Available': 200.0, 'Location_ID': '68605345858', 'id__': 2}, {'ItemCode': 'FG-0000709', 'Variant_ID': '44461228097602', 'OnHand': 35.0, 'Available': 10.0, 'Location_ID': '68605345858', 'id__': 3}, {'ItemCode': 'FG-0000710', 'Variant_ID': '44461228130370', 'OnHand': 40.0, 'Available': 20.0, 'Location_ID': '68605345858', 'id__': 4}]}, 'status': 'success'}
2025-08-03 21:08:25,929 - sync_service - INFO - Updating inventory for item FG-0000711 (variant 44461240680514) at location 68605345858
2025-08-03 21:08:25,930 - sync_service - INFO - API Call: {'service': 'shopify', 'endpoint': 'rest_inventory_local', 'request': {'location_id': '68605345858', 'inventory_item_id': '44461240680514', 'available': 30}, 'response': None, 'status': None}
2025-08-03 21:08:26,489 - sync_service - INFO - API Call: {'service': 'shopify', 'endpoint': 'rest_inventory_local', 'request': None, 'response': {'inventory_level': {'inventory_item_id': 44461240680514, 'location_id': 68605345858, 'available': 30, 'updated_at': '2025-08-03T14:09:41+03:00', 'admin_graphql_api_id': 'gid://shopify/InventoryLevel/103109591106?inventory_item_id=44461240680514'}}, 'status': 'success'}
2025-08-03 21:08:28,060 - sync_service - INFO - SAP logging client login successful
2025-08-03 21:08:29,080 - sync_service - INFO - API log added to SAP: shopify - inventory_levels - success
2025-08-03 21:08:29,184 - sync_service - INFO - Updating inventory for item FG-0000708 (variant 44461228064834) at location 68605345858
2025-08-03 21:08:29,189 - sync_service - INFO - API Call: {'service': 'shopify', 'endpoint': 'rest_inventory_local', 'request': {'location_id': '68605345858', 'inventory_item_id': '44461228064834', 'available': 200}, 'response': None, 'status': None}
2025-08-03 21:08:29,768 - sync_service - INFO - API Call: {'service': 'shopify', 'endpoint': 'rest_inventory_local', 'request': None, 'response': {'inventory_level': {'inventory_item_id': 44461228064834, 'location_id': 68605345858, 'available': 200, 'updated_at': '2025-08-03T14:01:25+03:00', 'admin_graphql_api_id': 'gid://shopify/InventoryLevel/103109591106?inventory_item_id=44461228064834'}}, 'status': 'success'}
2025-08-03 21:08:31,157 - sync_service - INFO - API log added to SAP: shopify - inventory_levels - success
2025-08-03 21:08:31,270 - sync_service - INFO - Updating inventory for item FG-0000709 (variant 44461228097602) at location 68605345858
2025-08-03 21:08:31,272 - sync_service - INFO - API Call: {'service': 'shopify', 'endpoint': 'rest_inventory_local', 'request': {'location_id': '68605345858', 'inventory_item_id': '44461228097602', 'available': 10}, 'response': None, 'status': None}
2025-08-03 21:08:31,867 - sync_service - INFO - API Call: {'service': 'shopify', 'endpoint': 'rest_inventory_local', 'request': None, 'response': {'inventory_level': {'inventory_item_id': 44461228097602, 'location_id': 68605345858, 'available': 10, 'updated_at': '2025-08-03T14:01:27+03:00', 'admin_graphql_api_id': 'gid://shopify/InventoryLevel/103109591106?inventory_item_id=44461228097602'}}, 'status': 'success'}
2025-08-03 21:08:33,339 - sync_service - INFO - API log added to SAP: shopify - inventory_levels - success
2025-08-03 21:08:33,454 - sync_service - INFO - Updating inventory for item FG-0000710 (variant 44461228130370) at location 68605345858
2025-08-03 21:08:33,456 - sync_service - INFO - API Call: {'service': 'shopify', 'endpoint': 'rest_inventory_local', 'request': {'location_id': '68605345858', 'inventory_item_id': '44461228130370', 'available': 20}, 'response': None, 'status': None}
2025-08-03 21:08:41,106 - sync_service - INFO - API Call: {'service': 'shopify', 'endpoint': 'rest_inventory_local', 'request': None, 'response': {'inventory_level': {'inventory_item_id': 44461228130370, 'location_id': 68605345858, 'available': 20, 'updated_at': '2025-08-03T14:01:27+03:00', 'admin_graphql_api_id': 'gid://shopify/InventoryLevel/103109591106?inventory_item_id=44461228130370'}}, 'status': 'success'}
2025-08-03 21:08:42,539 - sync_service - INFO - API log added to SAP: shopify - inventory_levels - success
2025-08-03 21:08:42,647 - sync_service - INFO - Stock change sync completed: 4 processed, 4 successful, 0 errors
2025-08-03 21:08:42,650 - sync_service - INFO - Starting item changes sync...
2025-08-03 21:08:42,654 - sync_service - INFO - Starting item changes sync from SAP to Shopify
2025-08-03 21:08:42,655 - sync_service - INFO - Processing item changes for store: local
2025-08-03 21:08:42,657 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': "view.svc/MASHURA_ItemChangeB1SLQuery?$filter=Shopify_Store eq 'local'", 'request': {'method': 'GET', 'url': "https://10.0.0.100:50000/b1s/v1/view.svc/MASHURA_ItemChangeB1SLQuery?$filter=Shopify_Store eq 'local'", 'data': None, 'params': None}, 'response': None, 'status': None}
2025-08-03 21:08:43,125 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': "view.svc/MASHURA_ItemChangeB1SLQuery?$filter=Shopify_Store eq 'local'", 'request': None, 'response': {'odata.metadata': 'https://10.0.0.100:50000/b1s/v1/view.svc/$metadata#MASHURA_ItemChangeB1SLQuery', 'value': []}, 'status': 'success'}
2025-08-03 21:08:43,128 - sync_service - INFO - Found 0 item changes for store local
2025-08-03 21:08:43,128 - sync_service - INFO - No item changes found for store local
2025-08-03 21:08:43,129 - sync_service - INFO - Sync Event: {'sync_type': 'item_changes_sap_to_shopify', 'items_processed': 0, 'success_count': 0, 'error_count': 0, 'details': None}
2025-08-03 21:08:43,129 - sync_service - INFO - Item changes sync completed: 0 processed, 0 successful, 0 errors
2025-08-03 21:08:43,130 - sync_service - INFO - Starting price changes sync...
2025-08-03 21:08:43,130 - sync_service - INFO - Starting price changes sync from SAP to Shopify
2025-08-03 21:08:43,130 - sync_service - INFO - Processing price changes for store: local
2025-08-03 21:08:43,131 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': "view.svc/MASHURA_PriceChangeB1SLQuery?$filter=Shopify_Store eq 'local'", 'request': {'method': 'GET', 'url': "https://10.0.0.100:50000/b1s/v1/view.svc/MASHURA_PriceChangeB1SLQuery?$filter=Shopify_Store eq 'local'", 'data': None, 'params': None}, 'response': None, 'status': None}
2025-08-03 21:08:43,874 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': "view.svc/MASHURA_PriceChangeB1SLQuery?$filter=Shopify_Store eq 'local'", 'request': None, 'response': {'odata.metadata': 'https://10.0.0.100:50000/b1s/v1/view.svc/$metadata#MASHURA_PriceChangeB1SLQuery', 'value': [{'ItemCode': 'FG-0000702', 'Shopify_ProductCode': None, 'Shopify_VariantId': '42360862408770', 'Price': 2500.0, 'Shopify_Store': 'local', 'id__': 1}, {'ItemCode': 'FG-0000703', 'Shopify_ProductCode': None, 'Shopify_VariantId': '42360862441538', 'Price': 2500.0, 'Shopify_Store': 'local', 'id__': 2}, {'ItemCode': 'FG-0000704', 'Shopify_ProductCode': '7522725691458', 'Shopify_VariantId': '42360861589570', 'Price': 3200.0, 'Shopify_Store': 'local', 'id__': 3}]}, 'status': 'success'}
2025-08-03 21:08:43,877 - sync_service - INFO - Found 3 price changes for store local
2025-08-03 21:08:43,877 - sync_service - INFO - Processing 3 price changes for store local
2025-08-03 21:08:43,878 - sync_service - INFO - Processing variant price change for FG-0000702 (variant ID: gid://shopify/ProductVariant/42360862408770)
2025-08-03 21:08:44,389 - sync_service - INFO - API log added to SAP: shopify - /admin/api/graphql_local - success
2025-08-03 21:08:44,390 - sync_service - INFO - API Call: {'service': 'shopify', 'endpoint': 'graphql_local', 'request': {'query': '\n        mutation productVariantUpdate($input: ProductVariantInput!) {\n            productVariantUpdate(input: $input) {\n                productVariant {\n                    id\n                    sku\n                    title\n                    selectedOptions {\n                        name\n                        value\n                    }\n                }\n                userErrors {\n                    field\n                    message\n                }\n            }\n        }\n        ', 'variables': {'input': {'price': '2500.0', 'id': 'gid://shopify/ProductVariant/42360862408770'}}}, 'response': None, 'status': None}
2025-08-03 21:08:44,913 - sync_service - INFO - API Call: {'service': 'shopify', 'endpoint': 'graphql_local', 'request': None, 'response': {'productVariantUpdate': {'productVariant': {'id': 'gid://shopify/ProductVariant/42360862408770', 'sku': 'FG-0000702', 'title': 'Black', 'selectedOptions': [{'name': 'Color', 'value': 'Black'}]}, 'userErrors': []}}, 'status': 'success'}
2025-08-03 21:08:45,563 - sync_service - INFO - API log added to SAP: shopify - /admin/api/graphql_local - success
2025-08-03 21:08:45,564 - sync_service - INFO - Successfully updated variant gid://shopify/ProductVariant/42360862408770 price to 2500.0 in store local
2025-08-03 21:08:46,200 - sync_service - INFO - API log added to SAP: sap - price_change - success
2025-08-03 21:08:46,203 - sync_service - INFO - Successfully logged price change for FG-0000702-local: 2500.0
2025-08-03 21:08:46,206 - sync_service - INFO - Successfully processed price change for FG-0000702 (price: 2500.0)
2025-08-03 21:08:46,718 - sync_service - INFO - Processing variant price change for FG-0000703 (variant ID: gid://shopify/ProductVariant/42360862441538)
2025-08-03 21:08:47,359 - sync_service - INFO - API log added to SAP: shopify - /admin/api/graphql_local - success
2025-08-03 21:08:47,362 - sync_service - INFO - API Call: {'service': 'shopify', 'endpoint': 'graphql_local', 'request': {'query': '\n        mutation productVariantUpdate($input: ProductVariantInput!) {\n            productVariantUpdate(input: $input) {\n                productVariant {\n                    id\n                    sku\n                    title\n                    selectedOptions {\n                        name\n                        value\n                    }\n                }\n                userErrors {\n                    field\n                    message\n                }\n            }\n        }\n        ', 'variables': {'input': {'price': '2500.0', 'id': 'gid://shopify/ProductVariant/42360862441538'}}}, 'response': None, 'status': None}
2025-08-03 21:08:52,993 - sync_service - INFO - API Call: {'service': 'shopify', 'endpoint': 'graphql_local', 'request': None, 'response': {'productVariantUpdate': {'productVariant': {'id': 'gid://shopify/ProductVariant/42360862441538', 'sku': 'FG-0000703', 'title': 'White', 'selectedOptions': [{'name': 'Color', 'value': 'White'}]}, 'userErrors': []}}, 'status': 'success'}
2025-08-03 21:08:53,595 - sync_service - INFO - API log added to SAP: shopify - /admin/api/graphql_local - success
2025-08-03 21:08:53,596 - sync_service - INFO - Successfully updated variant gid://shopify/ProductVariant/42360862441538 price to 2500.0 in store local
2025-08-03 21:08:55,071 - sync_service - INFO - API log added to SAP: sap - price_change - success
2025-08-03 21:08:55,073 - sync_service - INFO - Successfully logged price change for FG-0000703-local: 2500.0
2025-08-03 21:08:55,074 - sync_service - INFO - Successfully processed price change for FG-0000703 (price: 2500.0)
2025-08-03 21:08:55,586 - sync_service - INFO - Processing product price change for FG-0000704 (product ID: gid://shopify/Product/7522725691458)
2025-08-03 21:08:55,589 - sync_service - INFO - API Call: {'service': 'shopify', 'endpoint': 'graphql_local', 'request': {'query': '\n        query GetProduct($id: ID!) {\n            product(id: $id) {\n                id\n                title\n                handle\n                description\n                variants(first: 50) {\n                    edges {\n                        node {\n                            id\n                            sku\n                            price\n                            inventoryItem {\n                                id\n                            }\n                            selectedOptions {\n                                name\n                                value\n                            }\n                        }\n                    }\n                }\n            }\n        }\n        ', 'variables': {'id': 'gid://shopify/Product/7522725691458'}}, 'response': None, 'status': None}
2025-08-03 21:08:56,105 - sync_service - INFO - API Call: {'service': 'shopify', 'endpoint': 'graphql_local', 'request': None, 'response': {'product': {'id': 'gid://shopify/Product/7522725691458', 'title': 'Morsi Bracelet', 'handle': 'morsi-bracelet', 'description': '', 'variants': {'edges': [{'node': {'id': 'gid://shopify/ProductVariant/42360861589570', 'sku': 'FG-0000704', 'price': '3200.00', 'inventoryItem': {'id': 'gid://shopify/InventoryItem/44461227671618'}, 'selectedOptions': [{'name': 'Title', 'value': 'Default Title'}]}}]}}}, 'status': 'success'}
2025-08-03 21:08:56,108 - sync_service - INFO - Updating default variant gid://shopify/ProductVariant/42360861589570 price for product gid://shopify/Product/7522725691458
2025-08-03 21:08:57,139 - sync_service - INFO - API log added to SAP: shopify - /admin/api/graphql_local - success
2025-08-03 21:08:57,140 - sync_service - INFO - API Call: {'service': 'shopify', 'endpoint': 'graphql_local', 'request': {'query': '\n        mutation productVariantUpdate($input: ProductVariantInput!) {\n            productVariantUpdate(input: $input) {\n                productVariant {\n                    id\n                    sku\n                    title\n                    selectedOptions {\n                        name\n                        value\n                    }\n                }\n                userErrors {\n                    field\n                    message\n                }\n            }\n        }\n        ', 'variables': {'input': {'price': '3200.0', 'id': 'gid://shopify/ProductVariant/42360861589570'}}}, 'response': None, 'status': None}
2025-08-03 21:08:57,707 - sync_service - INFO - API Call: {'service': 'shopify', 'endpoint': 'graphql_local', 'request': None, 'response': {'productVariantUpdate': {'productVariant': {'id': 'gid://shopify/ProductVariant/42360861589570', 'sku': 'FG-0000704', 'title': 'Default Title', 'selectedOptions': [{'name': 'Title', 'value': 'Default Title'}]}, 'userErrors': []}}, 'status': 'success'}
2025-08-03 21:08:58,329 - sync_service - INFO - API log added to SAP: shopify - /admin/api/graphql_local - success
2025-08-03 21:08:58,330 - sync_service - INFO - Successfully updated product gid://shopify/Product/7522725691458 default variant price to 3200.0 in store local
2025-08-03 21:08:59,023 - sync_service - INFO - API log added to SAP: sap - price_change - success
2025-08-03 21:08:59,025 - sync_service - INFO - Successfully logged price change for FG-0000704-local: 3200.0
2025-08-03 21:08:59,026 - sync_service - INFO - Successfully processed price change for FG-0000704 (price: 3200.0)
2025-08-03 21:08:59,541 - sync_service - INFO - Sync Event: {'sync_type': 'price_changes_sap_to_shopify', 'items_processed': 3, 'success_count': 3, 'error_count': 0, 'details': None}
2025-08-03 21:08:59,544 - sync_service - INFO - Price changes sync completed: 3 processed, 3 successful, 0 errors
2025-08-03 21:09:10,910 - sync_service - INFO - Initialized Shopify client for store: Local Store (local)
2025-08-03 21:09:10,946 - sync_service - INFO - Starting all syncs...
2025-08-03 21:09:10,947 - sync_service - INFO - Starting new items sync...
2025-08-03 21:09:10,948 - sync_service - INFO - Starting multi-store new items sync from SAP to Shopify
2025-08-03 21:09:10,949 - sync_service - INFO - Fetching new items for store: local
2025-08-03 21:09:10,950 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'login', 'request': {'company': 'JudeBenHalim_Test', 'user': 'manager'}, 'response': None, 'status': None}
2025-08-03 21:09:12,111 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'login', 'request': None, 'response': {'status': 'success'}, 'status': 'success'}
2025-08-03 21:09:12,112 - sync_service - INFO - SAP login successful
2025-08-03 21:09:12,114 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': "view.svc/MASHURA_New_ItemsB1SLQuery?$filter=Shopify_Store eq 'local'&$orderby=MainProduct", 'request': {'method': 'GET', 'url': "https://10.0.0.100:50000/b1s/v1/view.svc/MASHURA_New_ItemsB1SLQuery?$filter=Shopify_Store eq 'local'&$orderby=MainProduct", 'data': None, 'params': None}, 'response': None, 'status': None}
2025-08-03 21:09:13,169 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': "view.svc/MASHURA_New_ItemsB1SLQuery?$filter=Shopify_Store eq 'local'&$orderby=MainProduct", 'request': None, 'response': {'odata.metadata': 'https://10.0.0.100:50000/b1s/v1/view.svc/$metadata#MASHURA_New_ItemsB1SLQuery', 'value': []}, 'status': 'success'}
2025-08-03 21:09:13,173 - sync_service - INFO - No new items found in SAP for store local
2025-08-03 21:09:13,174 - sync_service - INFO - Sync Event: {'sync_type': 'multi_store_new_items_sap_to_shopify', 'items_processed': 0, 'success_count': 0, 'error_count': 0, 'details': None}
2025-08-03 21:09:13,176 - sync_service - INFO - Multi-store new items sync completed: 0 processed, 0 successful, 0 errors
2025-08-03 21:09:13,177 - sync_service - INFO - Starting stock change sync...
2025-08-03 21:09:13,178 - sync_service - INFO - Starting stock change sync using MASHURA_StockChangeB1SLQuery view
2025-08-03 21:09:13,179 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'view.svc/MASHURA_StockChangeB1SLQuery', 'request': {'method': 'GET', 'url': 'https://10.0.0.100:50000/b1s/v1/view.svc/MASHURA_StockChangeB1SLQuery', 'data': None, 'params': {'$top': 50}}, 'response': None, 'status': None}
2025-08-03 21:09:14,261 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'view.svc/MASHURA_StockChangeB1SLQuery', 'request': None, 'response': {'odata.metadata': 'https://10.0.0.100:50000/b1s/v1/view.svc/$metadata#MASHURA_StockChangeB1SLQuery', 'value': [{'ItemCode': 'FG-0000711', 'Variant_ID': '44461240680514', 'OnHand': 60.0, 'Available': 30.0, 'Location_ID': '68605345858', 'id__': 1}, {'ItemCode': 'FG-0000708', 'Variant_ID': '44461228064834', 'OnHand': 400.0, 'Available': 200.0, 'Location_ID': '68605345858', 'id__': 2}, {'ItemCode': 'FG-0000709', 'Variant_ID': '44461228097602', 'OnHand': 35.0, 'Available': 10.0, 'Location_ID': '68605345858', 'id__': 3}, {'ItemCode': 'FG-0000710', 'Variant_ID': '44461228130370', 'OnHand': 40.0, 'Available': 20.0, 'Location_ID': '68605345858', 'id__': 4}]}, 'status': 'success'}
2025-08-03 21:09:14,262 - sync_service - INFO - Updating inventory for item FG-0000711 (variant 44461240680514) at location 68605345858
2025-08-03 21:09:14,263 - sync_service - INFO - API Call: {'service': 'shopify', 'endpoint': 'rest_inventory_local', 'request': {'location_id': '68605345858', 'inventory_item_id': '44461240680514', 'available': 30}, 'response': None, 'status': None}
2025-08-03 21:09:25,940 - sync_service - INFO - API Call: {'service': 'shopify', 'endpoint': 'rest_inventory_local', 'request': None, 'response': {'inventory_level': {'inventory_item_id': 44461240680514, 'location_id': 68605345858, 'available': 30, 'updated_at': '2025-08-03T14:09:41+03:00', 'admin_graphql_api_id': 'gid://shopify/InventoryLevel/103109591106?inventory_item_id=44461240680514'}}, 'status': 'success'}
2025-08-03 21:09:58,620 - sync_service - ERROR - SAP logging client login error: All connection attempts failed
2025-08-03 21:09:58,623 - sync_service - ERROR - Failed to add API log to SAP: Failed to login to SAP
2025-08-03 21:09:58,726 - sync_service - INFO - Updating inventory for item FG-0000708 (variant 44461228064834) at location 68605345858
2025-08-03 21:09:58,730 - sync_service - INFO - API Call: {'service': 'shopify', 'endpoint': 'rest_inventory_local', 'request': {'location_id': '68605345858', 'inventory_item_id': '44461228064834', 'available': 200}, 'response': None, 'status': None}
2025-08-03 21:10:10,347 - sync_service - INFO - API Call: {'service': 'shopify', 'endpoint': 'rest_inventory_local', 'request': None, 'response': {'inventory_level': {'inventory_item_id': 44461228064834, 'location_id': 68605345858, 'available': 200, 'updated_at': '2025-08-03T14:01:25+03:00', 'admin_graphql_api_id': 'gid://shopify/InventoryLevel/103109591106?inventory_item_id=44461228064834'}}, 'status': 'success'}
2025-08-03 21:11:43,412 - sync_service - INFO - Initialized Shopify client for store: Local Store (local)
2025-08-03 21:11:43,501 - sync_service - INFO - Starting all syncs...
2025-08-03 21:11:43,503 - sync_service - INFO - Starting new items sync...
2025-08-03 21:11:43,504 - sync_service - INFO - Starting multi-store new items sync from SAP to Shopify
2025-08-03 21:11:43,505 - sync_service - INFO - Fetching new items for store: local
2025-08-03 21:11:43,506 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'login', 'request': {'company': 'JudeBenHalim_Test', 'user': 'manager'}, 'response': None, 'status': None}
2025-08-03 21:11:44,367 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'login', 'request': None, 'response': {'status': 'success'}, 'status': 'success'}
2025-08-03 21:11:44,368 - sync_service - INFO - SAP login successful
2025-08-03 21:11:44,371 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': "view.svc/MASHURA_New_ItemsB1SLQuery?$filter=Shopify_Store eq 'local'&$orderby=MainProduct", 'request': {'method': 'GET', 'url': "https://10.0.0.100:50000/b1s/v1/view.svc/MASHURA_New_ItemsB1SLQuery?$filter=Shopify_Store eq 'local'&$orderby=MainProduct", 'data': None, 'params': None}, 'response': None, 'status': None}
2025-08-03 21:11:45,092 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': "view.svc/MASHURA_New_ItemsB1SLQuery?$filter=Shopify_Store eq 'local'&$orderby=MainProduct", 'request': None, 'response': {'odata.metadata': 'https://10.0.0.100:50000/b1s/v1/view.svc/$metadata#MASHURA_New_ItemsB1SLQuery', 'value': []}, 'status': 'success'}
2025-08-03 21:11:45,093 - sync_service - INFO - No new items found in SAP for store local
2025-08-03 21:11:45,094 - sync_service - INFO - Sync Event: {'sync_type': 'multi_store_new_items_sap_to_shopify', 'items_processed': 0, 'success_count': 0, 'error_count': 0, 'details': None}
2025-08-03 21:11:45,095 - sync_service - INFO - Multi-store new items sync completed: 0 processed, 0 successful, 0 errors
2025-08-03 21:11:45,096 - sync_service - INFO - Starting stock change sync...
2025-08-03 21:11:45,099 - sync_service - INFO - Starting stock change sync using MASHURA_StockChangeB1SLQuery view
2025-08-03 21:11:45,101 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'view.svc/MASHURA_StockChangeB1SLQuery', 'request': {'method': 'GET', 'url': 'https://10.0.0.100:50000/b1s/v1/view.svc/MASHURA_StockChangeB1SLQuery', 'data': None, 'params': {'$top': 50}}, 'response': None, 'status': None}
2025-08-03 21:11:45,907 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'view.svc/MASHURA_StockChangeB1SLQuery', 'request': None, 'response': {'odata.metadata': 'https://10.0.0.100:50000/b1s/v1/view.svc/$metadata#MASHURA_StockChangeB1SLQuery', 'value': [{'ItemCode': 'FG-0000711', 'Variant_ID': '44461240680514', 'OnHand': 60.0, 'Available': 30.0, 'Location_ID': '68605345858', 'id__': 1}, {'ItemCode': 'FG-0000708', 'Variant_ID': '44461228064834', 'OnHand': 400.0, 'Available': 200.0, 'Location_ID': '68605345858', 'id__': 2}, {'ItemCode': 'FG-0000709', 'Variant_ID': '44461228097602', 'OnHand': 35.0, 'Available': 10.0, 'Location_ID': '68605345858', 'id__': 3}, {'ItemCode': 'FG-0000710', 'Variant_ID': '44461228130370', 'OnHand': 40.0, 'Available': 20.0, 'Location_ID': '68605345858', 'id__': 4}]}, 'status': 'success'}
2025-08-03 21:11:45,910 - sync_service - INFO - Updating inventory for item FG-0000711 (variant 44461240680514) at location 68605345858
2025-08-03 21:11:45,912 - sync_service - INFO - API Call: {'service': 'shopify', 'endpoint': 'rest_inventory_local', 'request': {'location_id': '68605345858', 'inventory_item_id': '44461240680514', 'available': 30}, 'response': None, 'status': None}
2025-08-03 21:11:46,492 - sync_service - INFO - API Call: {'service': 'shopify', 'endpoint': 'rest_inventory_local', 'request': None, 'response': {'inventory_level': {'inventory_item_id': 44461240680514, 'location_id': 68605345858, 'available': 30, 'updated_at': '2025-08-03T14:09:41+03:00', 'admin_graphql_api_id': 'gid://shopify/InventoryLevel/103109591106?inventory_item_id=44461240680514'}}, 'status': 'success'}
2025-08-03 21:11:47,955 - sync_service - INFO - SAP logging client login successful
2025-08-03 21:11:48,674 - sync_service - INFO - API log added to SAP: shopify - inventory_levels - success
2025-08-03 21:11:48,779 - sync_service - INFO - Updating inventory for item FG-0000708 (variant 44461228064834) at location 68605345858
2025-08-03 21:11:48,785 - sync_service - INFO - API Call: {'service': 'shopify', 'endpoint': 'rest_inventory_local', 'request': {'location_id': '68605345858', 'inventory_item_id': '44461228064834', 'available': 200}, 'response': None, 'status': None}
2025-08-03 21:11:49,345 - sync_service - INFO - API Call: {'service': 'shopify', 'endpoint': 'rest_inventory_local', 'request': None, 'response': {'inventory_level': {'inventory_item_id': 44461228064834, 'location_id': 68605345858, 'available': 200, 'updated_at': '2025-08-03T14:01:25+03:00', 'admin_graphql_api_id': 'gid://shopify/InventoryLevel/103109591106?inventory_item_id=44461228064834'}}, 'status': 'success'}
2025-08-03 21:11:50,594 - sync_service - INFO - API log added to SAP: shopify - inventory_levels - success
2025-08-03 21:11:50,710 - sync_service - INFO - Updating inventory for item FG-0000709 (variant 44461228097602) at location 68605345858
2025-08-03 21:11:50,713 - sync_service - INFO - API Call: {'service': 'shopify', 'endpoint': 'rest_inventory_local', 'request': {'location_id': '68605345858', 'inventory_item_id': '44461228097602', 'available': 10}, 'response': None, 'status': None}
2025-08-03 21:12:02,357 - sync_service - INFO - API Call: {'service': 'shopify', 'endpoint': 'rest_inventory_local', 'request': None, 'response': {'inventory_level': {'inventory_item_id': 44461228097602, 'location_id': 68605345858, 'available': 10, 'updated_at': '2025-08-03T14:01:27+03:00', 'admin_graphql_api_id': 'gid://shopify/InventoryLevel/103109591106?inventory_item_id=44461228097602'}}, 'status': 'success'}
2025-08-03 21:12:03,715 - sync_service - INFO - API log added to SAP: shopify - inventory_levels - success
2025-08-03 21:12:03,819 - sync_service - INFO - Updating inventory for item FG-0000710 (variant 44461228130370) at location 68605345858
2025-08-03 21:12:03,822 - sync_service - INFO - API Call: {'service': 'shopify', 'endpoint': 'rest_inventory_local', 'request': {'location_id': '68605345858', 'inventory_item_id': '44461228130370', 'available': 20}, 'response': None, 'status': None}
2025-08-03 21:12:04,417 - sync_service - INFO - API Call: {'service': 'shopify', 'endpoint': 'rest_inventory_local', 'request': None, 'response': {'inventory_level': {'inventory_item_id': 44461228130370, 'location_id': 68605345858, 'available': 20, 'updated_at': '2025-08-03T14:01:27+03:00', 'admin_graphql_api_id': 'gid://shopify/InventoryLevel/103109591106?inventory_item_id=44461228130370'}}, 'status': 'success'}
2025-08-03 21:12:08,637 - sync_service - INFO - API log added to SAP: shopify - inventory_levels - success
2025-08-03 21:12:08,744 - sync_service - INFO - Stock change sync completed: 4 processed, 4 successful, 0 errors
2025-08-03 21:12:08,746 - sync_service - INFO - Starting item changes sync...
2025-08-03 21:12:08,747 - sync_service - INFO - Starting item changes sync from SAP to Shopify
2025-08-03 21:12:08,749 - sync_service - INFO - Processing item changes for store: local
2025-08-03 21:12:08,750 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': "view.svc/MASHURA_ItemChangeB1SLQuery?$filter=Shopify_Store eq 'local'", 'request': {'method': 'GET', 'url': "https://10.0.0.100:50000/b1s/v1/view.svc/MASHURA_ItemChangeB1SLQuery?$filter=Shopify_Store eq 'local'", 'data': None, 'params': None}, 'response': None, 'status': None}
2025-08-03 21:12:09,180 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': "view.svc/MASHURA_ItemChangeB1SLQuery?$filter=Shopify_Store eq 'local'", 'request': None, 'response': {'odata.metadata': 'https://10.0.0.100:50000/b1s/v1/view.svc/$metadata#MASHURA_ItemChangeB1SLQuery', 'value': []}, 'status': 'success'}
2025-08-03 21:12:09,184 - sync_service - INFO - Found 0 item changes for store local
2025-08-03 21:12:09,186 - sync_service - INFO - No item changes found for store local
2025-08-03 21:12:09,189 - sync_service - INFO - Sync Event: {'sync_type': 'item_changes_sap_to_shopify', 'items_processed': 0, 'success_count': 0, 'error_count': 0, 'details': None}
2025-08-03 21:12:09,190 - sync_service - INFO - Item changes sync completed: 0 processed, 0 successful, 0 errors
2025-08-03 21:12:09,192 - sync_service - INFO - Starting price changes sync...
2025-08-03 21:12:09,193 - sync_service - INFO - Starting price changes sync from SAP to Shopify
2025-08-03 21:12:09,194 - sync_service - INFO - Processing price changes for store: local
2025-08-03 21:12:09,195 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': "view.svc/MASHURA_PriceChangeB1SLQuery?$filter=Shopify_Store eq 'local'", 'request': {'method': 'GET', 'url': "https://10.0.0.100:50000/b1s/v1/view.svc/MASHURA_PriceChangeB1SLQuery?$filter=Shopify_Store eq 'local'", 'data': None, 'params': None}, 'response': None, 'status': None}
2025-08-03 21:12:09,849 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': "view.svc/MASHURA_PriceChangeB1SLQuery?$filter=Shopify_Store eq 'local'", 'request': None, 'response': {'odata.metadata': 'https://10.0.0.100:50000/b1s/v1/view.svc/$metadata#MASHURA_PriceChangeB1SLQuery', 'value': [{'ItemCode': 'FG-0000702', 'Shopify_ProductCode': None, 'Shopify_VariantId': '42360862408770', 'Price': 2500.0, 'Shopify_Store': 'local', 'id__': 1}, {'ItemCode': 'FG-0000703', 'Shopify_ProductCode': None, 'Shopify_VariantId': '42360862441538', 'Price': 2500.0, 'Shopify_Store': 'local', 'id__': 2}, {'ItemCode': 'FG-0000704', 'Shopify_ProductCode': '7522725691458', 'Shopify_VariantId': '42360861589570', 'Price': 3200.0, 'Shopify_Store': 'local', 'id__': 3}]}, 'status': 'success'}
2025-08-03 21:12:09,851 - sync_service - INFO - Found 3 price changes for store local
2025-08-03 21:12:09,851 - sync_service - INFO - Processing 3 price changes for store local
2025-08-03 21:12:09,852 - sync_service - INFO - Processing variant price change for FG-0000702 (variant ID: gid://shopify/ProductVariant/42360862408770)
2025-08-03 21:12:10,699 - sync_service - INFO - API log added to SAP: shopify - /admin/api/graphql_local - success
2025-08-03 21:12:10,701 - sync_service - INFO - API Call: {'service': 'shopify', 'endpoint': 'graphql_local', 'request': {'query': '\n        mutation productVariantUpdate($input: ProductVariantInput!) {\n            productVariantUpdate(input: $input) {\n                productVariant {\n                    id\n                    sku\n                    title\n                    selectedOptions {\n                        name\n                        value\n                    }\n                }\n                userErrors {\n                    field\n                    message\n                }\n            }\n        }\n        ', 'variables': {'input': {'price': '2500.0', 'id': 'gid://shopify/ProductVariant/42360862408770'}}}, 'response': None, 'status': None}
2025-08-03 21:12:11,193 - sync_service - INFO - API Call: {'service': 'shopify', 'endpoint': 'graphql_local', 'request': None, 'response': {'productVariantUpdate': {'productVariant': {'id': 'gid://shopify/ProductVariant/42360862408770', 'sku': 'FG-0000702', 'title': 'Black', 'selectedOptions': [{'name': 'Color', 'value': 'Black'}]}, 'userErrors': []}}, 'status': 'success'}
2025-08-03 21:12:11,608 - sync_service - INFO - API log added to SAP: shopify - /admin/api/graphql_local - success
2025-08-03 21:12:11,610 - sync_service - INFO - Successfully updated variant gid://shopify/ProductVariant/42360862408770 price to 2500.0 in store local
2025-08-03 21:12:11,995 - sync_service - INFO - API log added to SAP: sap - price_change - success
2025-08-03 21:12:11,997 - sync_service - INFO - Successfully logged price change for FG-0000702-local: 2500.0
2025-08-03 21:12:12,000 - sync_service - INFO - Successfully processed price change for FG-0000702 (price: 2500.0)
2025-08-03 21:12:12,508 - sync_service - INFO - Processing variant price change for FG-0000703 (variant ID: gid://shopify/ProductVariant/42360862441538)
2025-08-03 21:12:12,861 - sync_service - INFO - API log added to SAP: shopify - /admin/api/graphql_local - success
2025-08-03 21:12:12,863 - sync_service - INFO - API Call: {'service': 'shopify', 'endpoint': 'graphql_local', 'request': {'query': '\n        mutation productVariantUpdate($input: ProductVariantInput!) {\n            productVariantUpdate(input: $input) {\n                productVariant {\n                    id\n                    sku\n                    title\n                    selectedOptions {\n                        name\n                        value\n                    }\n                }\n                userErrors {\n                    field\n                    message\n                }\n            }\n        }\n        ', 'variables': {'input': {'price': '2500.0', 'id': 'gid://shopify/ProductVariant/42360862441538'}}}, 'response': None, 'status': None}
2025-08-03 21:12:13,384 - sync_service - INFO - API Call: {'service': 'shopify', 'endpoint': 'graphql_local', 'request': None, 'response': {'productVariantUpdate': {'productVariant': {'id': 'gid://shopify/ProductVariant/42360862441538', 'sku': 'FG-0000703', 'title': 'White', 'selectedOptions': [{'name': 'Color', 'value': 'White'}]}, 'userErrors': []}}, 'status': 'success'}
2025-08-03 21:12:13,692 - sync_service - INFO - API log added to SAP: shopify - /admin/api/graphql_local - success
2025-08-03 21:12:13,695 - sync_service - INFO - Successfully updated variant gid://shopify/ProductVariant/42360862441538 price to 2500.0 in store local
2025-08-03 21:12:14,081 - sync_service - INFO - API log added to SAP: sap - price_change - success
2025-08-03 21:12:14,083 - sync_service - INFO - Successfully logged price change for FG-0000703-local: 2500.0
2025-08-03 21:12:14,085 - sync_service - INFO - Successfully processed price change for FG-0000703 (price: 2500.0)
2025-08-03 21:12:14,599 - sync_service - INFO - Processing product price change for FG-0000704 (product ID: gid://shopify/Product/7522725691458)
2025-08-03 21:12:14,602 - sync_service - INFO - API Call: {'service': 'shopify', 'endpoint': 'graphql_local', 'request': {'query': '\n        query GetProduct($id: ID!) {\n            product(id: $id) {\n                id\n                title\n                handle\n                description\n                variants(first: 50) {\n                    edges {\n                        node {\n                            id\n                            sku\n                            price\n                            inventoryItem {\n                                id\n                            }\n                            selectedOptions {\n                                name\n                                value\n                            }\n                        }\n                    }\n                }\n            }\n        }\n        ', 'variables': {'id': 'gid://shopify/Product/7522725691458'}}, 'response': None, 'status': None}
2025-08-03 21:12:22,300 - sync_service - INFO - API Call: {'service': 'shopify', 'endpoint': 'graphql_local', 'request': None, 'response': {'product': {'id': 'gid://shopify/Product/7522725691458', 'title': 'Morsi Bracelet', 'handle': 'morsi-bracelet', 'description': '', 'variants': {'edges': [{'node': {'id': 'gid://shopify/ProductVariant/42360861589570', 'sku': 'FG-0000704', 'price': '3200.00', 'inventoryItem': {'id': 'gid://shopify/InventoryItem/44461227671618'}, 'selectedOptions': [{'name': 'Title', 'value': 'Default Title'}]}}]}}}, 'status': 'success'}
2025-08-03 21:12:22,302 - sync_service - INFO - Updating default variant gid://shopify/ProductVariant/42360861589570 price for product gid://shopify/Product/7522725691458
2025-08-03 21:12:23,071 - sync_service - INFO - API log added to SAP: shopify - /admin/api/graphql_local - success
2025-08-03 21:12:23,072 - sync_service - INFO - API Call: {'service': 'shopify', 'endpoint': 'graphql_local', 'request': {'query': '\n        mutation productVariantUpdate($input: ProductVariantInput!) {\n            productVariantUpdate(input: $input) {\n                productVariant {\n                    id\n                    sku\n                    title\n                    selectedOptions {\n                        name\n                        value\n                    }\n                }\n                userErrors {\n                    field\n                    message\n                }\n            }\n        }\n        ', 'variables': {'input': {'price': '3200.0', 'id': 'gid://shopify/ProductVariant/42360861589570'}}}, 'response': None, 'status': None}
2025-08-03 21:12:23,635 - sync_service - INFO - API Call: {'service': 'shopify', 'endpoint': 'graphql_local', 'request': None, 'response': {'productVariantUpdate': {'productVariant': {'id': 'gid://shopify/ProductVariant/42360861589570', 'sku': 'FG-0000704', 'title': 'Default Title', 'selectedOptions': [{'name': 'Title', 'value': 'Default Title'}]}, 'userErrors': []}}, 'status': 'success'}
2025-08-03 21:12:24,492 - sync_service - INFO - API log added to SAP: shopify - /admin/api/graphql_local - success
2025-08-03 21:12:24,495 - sync_service - INFO - Successfully updated product gid://shopify/Product/7522725691458 default variant price to 3200.0 in store local
2025-08-03 21:12:24,877 - sync_service - INFO - API log added to SAP: sap - price_change - success
2025-08-03 21:12:24,878 - sync_service - INFO - Successfully logged price change for FG-0000704-local: 3200.0
2025-08-03 21:12:24,881 - sync_service - INFO - Successfully processed price change for FG-0000704 (price: 3200.0)
2025-08-03 21:12:25,392 - sync_service - INFO - Sync Event: {'sync_type': 'price_changes_sap_to_shopify', 'items_processed': 3, 'success_count': 3, 'error_count': 0, 'details': None}
2025-08-03 21:12:25,394 - sync_service - INFO - Price changes sync completed: 3 processed, 3 successful, 0 errors
2025-08-05 14:04:12,910 - sync_service - INFO - Initialized Shopify client for store: Local Store (local)
2025-08-05 14:04:12,927 - sync_service - INFO - API Call: {'service': 'shopify', 'endpoint': 'graphql_local', 'request': {'query': '\n            query getSingleOrder($first: Int!) {\n                orders(first: $first, sortKey: CREATED_AT, reverse: true) {\n                    edges {\n                        node {\n                            id\n                            name\n                            createdAt\n                            metafields(first: 50) {\n                                edges {\n                                    node {\n                                        id\n                                        namespace\n                                        key\n                                        value\n                                        type\n                                    }\n                                }\n                            }\n                            totalPriceSet {\n                                shopMoney {\n                                    amount\n                                    currencyCode\n                                }\n                            }\n                            customer {\n                                id\n                                firstName\n                                lastName\n                                email\n                            }\n                            lineItems(first: 5) {\n                                edges {\n                                    node {\n                                        id\n                                        quantity\n                                        sku\n                                        title\n                                        variant {\n                                            id\n                                            sku\n                                            price\n                                        }\n                                        discountedTotalSet {\n                                            shopMoney {\n                                                amount\n                                                currencyCode\n                                            }\n                                        }\n                                    }\n                                }\n                            }\n                            tags\n                        }\n                    }\n                }\n            }\n            ', 'variables': {'first': 1}}, 'response': None, 'status': None}
2025-08-05 14:04:13,606 - sync_service - INFO - API Call: {'service': 'shopify', 'endpoint': 'graphql_local', 'request': None, 'response': {'orders': {'edges': [{'node': {'id': 'gid://shopify/Order/6318310686786', 'name': '#1480', 'createdAt': '2025-08-05T09:59:13Z', 'metafields': {'edges': []}, 'totalPriceSet': {'shopMoney': {'amount': '5200.0', 'currencyCode': 'EGP'}}, 'customer': {'id': 'gid://shopify/Customer/8037256233026', 'firstName': 'Omnia', 'lastName': 'Ezz Elarab', 'email': 'nezzelarab@ezz-elarab.com'}, 'lineItems': {'edges': [{'node': {'id': 'gid://shopify/LineItem/15830693707842', 'quantity': 1, 'sku': 'FG-0000632', 'title': 'Ember Earrings', 'variant': {'id': 'gid://shopify/ProductVariant/42194952650818', 'sku': 'FG-0000632', 'price': '5000.00'}, 'discountedTotalSet': {'shopMoney': {'amount': '5000.0', 'currencyCode': 'EGP'}}}}]}, 'tags': []}}]}}, 'status': 'success'}
2025-08-05 14:04:13,608 - sync_service - INFO - === SINGLE ORDER TEST ===
2025-08-05 14:04:13,608 - sync_service - INFO - Order ID: gid://shopify/Order/6318310686786
2025-08-05 14:04:13,609 - sync_service - INFO - Order Name: #1480
2025-08-05 14:04:13,610 - sync_service - INFO - Created At: 2025-08-05T09:59:13Z
2025-08-05 14:04:13,610 - sync_service - INFO - Total Price: 5200.0 EGP
2025-08-05 14:04:13,610 - sync_service - INFO - Number of metafields: 0
2025-08-05 14:04:13,611 - sync_service - INFO - Customer: Omnia Ezz Elarab (nezzelarab@ezz-elarab.com)
2025-08-05 14:04:13,611 - sync_service - INFO - Number of line items: 1
2025-08-05 14:04:13,612 - sync_service - INFO - Line Item: Ember Earrings (SKU: FG-0000632, Qty: 1, Price: 5000.0)
2025-08-05 14:04:13,612 - sync_service - INFO - === END SINGLE ORDER TEST ===
2025-08-05 14:46:47,550 - sync_service - INFO - Initialized Shopify client for store: Local Store (local)
2025-08-05 14:46:47,582 - sync_service - INFO - API Call: {'service': 'shopify', 'endpoint': 'graphql_local', 'request': {'query': '\n            query getOrders($first: Int!, $after: String) {\n                orders(first: $first, after: $after, query: "status:any -tag:synced") {\n                    edges {\n                        node {\n                            id\n                            name\n                            createdAt\n                            totalPriceSet {\n                                shopMoney {\n                                    amount\n                                    currencyCode\n                                }\n                            }\n                            subtotalPriceSet {\n                                shopMoney {\n                                    amount\n                                    currencyCode\n                                }\n                            }\n                            totalTaxSet {\n                                shopMoney {\n                                    amount\n                                    currencyCode\n                                }\n                            }\n                            totalShippingPriceSet {\n                                shopMoney {\n                                    amount\n                                    currencyCode\n                                }\n                            }\n                            customer {\n                                id\n                                firstName\n                                lastName\n                                email\n                                phone\n                                addresses {\n                                    address1\n                                    address2\n                                    city\n                                    province\n                                    zip\n                                    country\n                                    phone\n                                }\n                            }\n                            shippingAddress {\n                                address1\n                                address2\n                                city\n                                province\n                                zip\n                                country\n                                phone\n                            }\n                            billingAddress {\n                                address1\n                                address2\n                                city\n                                province\n                                zip\n                                country\n                                phone\n                            }\n                            lineItems(first: 50) {\n                                edges {\n                                    node {\n                                        id\n                                        quantity\n                                        sku\n                                        title\n                                        variant {\n                                            id\n                                            sku\n                                            price\n                                            product {\n                                                id\n                                                title\n                                            }\n                                        }\n                                        discountedTotalSet {\n                                            shopMoney {\n                                                amount\n                                                currencyCode\n                                            }\n                                        }\n                                    }\n                                }\n                            }\n                            discountApplications(first: 10) {\n                                edges {\n                                    node {\n                                        type\n                                        value {\n                                            ... on MoneyV2 {\n                                                amount\n                                                currencyCode\n                                            }\n                                            ... on PricingPercentageValue {\n                                                percentage\n                                            }\n                                        }\n                                        target {\n                                            ... on OrderLineItem {\n                                                id\n                                            }\n                                        }\n                                    }\n                                }\n                            }\n                            tags\n                            note\n                        }\n                    }\n                    pageInfo {\n                        hasNextPage\n                        endCursor\n                    }\n                }\n            }\n            ', 'variables': {'first': 20, 'after': None}}, 'response': None, 'status': None}
2025-08-05 14:46:57,631 - sync_service - ERROR - GraphQL query error for store local: 
2025-08-05 14:46:58,504 - sync_service - INFO - SAP logging client login successful
2025-08-05 14:46:59,278 - sync_service - INFO - API log added to SAP: shopify - /admin/api/graphql_local - failure
2025-08-05 14:47:45,273 - sync_service - INFO - Initialized Shopify client for store: Local Store (local)
2025-08-05 14:47:45,310 - sync_service - INFO - API Call: {'service': 'shopify', 'endpoint': 'graphql_local', 'request': {'query': '\n            query getOrders($first: Int!, $after: String) {\n                orders(first: $first, after: $after, sortKey: CREATED_AT, reverse: true) {\n                    edges {\n                        node {\n                            id\n                            name\n                            createdAt\n                            tags\n                            totalPriceSet {\n                                shopMoney {\n                                    amount\n                                    currencyCode\n                                }\n                            }\n                            subtotalPriceSet {\n                                shopMoney {\n                                    amount\n                                    currencyCode\n                                }\n                            }\n                            totalTaxSet {\n                                shopMoney {\n                                    amount\n                                    currencyCode\n                                }\n                            }\n                            totalShippingPriceSet {\n                                shopMoney {\n                                    amount\n                                    currencyCode\n                                }\n                            }\n                            customer {\n                                id\n                                firstName\n                                lastName\n                                email\n                                phone\n                                addresses {\n                                    address1\n                                    address2\n                                    city\n                                    province\n                                    zip\n                                    country\n                                    phone\n                                }\n                            }\n                            shippingAddress {\n                                address1\n                                address2\n                                city\n                                province\n                                zip\n                                country\n                                phone\n                            }\n                            billingAddress {\n                                address1\n                                address2\n                                city\n                                province\n                                zip\n                                country\n                                phone\n                            }\n                            lineItems(first: 50) {\n                                edges {\n                                    node {\n                                        id\n                                        quantity\n                                        sku\n                                        title\n                                        variant {\n                                            id\n                                            sku\n                                            price\n                                            product {\n                                                id\n                                                title\n                                            }\n                                        }\n                                        discountedTotalSet {\n                                            shopMoney {\n                                                amount\n                                                currencyCode\n                                            }\n                                        }\n                                    }\n                                }\n                            }\n                            discountApplications(first: 10) {\n                                edges {\n                                    node {\n                                        type\n                                        value {\n                                            ... on MoneyV2 {\n                                                amount\n                                                currencyCode\n                                            }\n                                            ... on PricingPercentageValue {\n                                                percentage\n                                            }\n                                        }\n                                        target {\n                                            ... on OrderLineItem {\n                                                id\n                                            }\n                                        }\n                                    }\n                                }\n                            }\n                            note\n                        }\n                    }\n                    pageInfo {\n                        hasNextPage\n                        endCursor\n                    }\n                }\n            }\n            ', 'variables': {'first': 20, 'after': None}}, 'response': None, 'status': None}
2025-08-05 14:47:55,349 - sync_service - ERROR - GraphQL query error for store local: 
2025-08-05 14:47:56,245 - sync_service - INFO - SAP logging client login successful
2025-08-05 14:47:57,018 - sync_service - INFO - API log added to SAP: shopify - /admin/api/graphql_local - failure
2025-08-05 14:48:54,165 - sync_service - INFO - Initialized Shopify client for store: Local Store (local)
2025-08-05 14:48:54,177 - sync_service - INFO - API Call: {'service': 'shopify', 'endpoint': 'graphql_local', 'request': {'query': '\n        query getOrders($first: Int!) {\n            orders(first: $first) {\n                edges {\n                    node {\n                        id\n                        name\n                        createdAt\n                    }\n                }\n            }\n        }\n        ', 'variables': {'first': 1}}, 'response': None, 'status': None}
2025-08-05 14:49:04,192 - sync_service - ERROR - GraphQL query error for store local: 
2025-08-05 14:49:05,146 - sync_service - INFO - SAP logging client login successful
2025-08-05 14:49:06,085 - sync_service - INFO - API log added to SAP: shopify - /admin/api/graphql_local - failure
2025-08-05 14:49:06,103 - sync_service - INFO - API Call: {'service': 'shopify', 'endpoint': 'graphql_local', 'request': {'query': '\n            query getOrders($first: Int!, $after: String) {\n                orders(first: $first, after: $after, sortKey: CREATED_AT, reverse: true) {\n                    edges {\n                        node {\n                            id\n                            name\n                            createdAt\n                            tags\n                            totalPriceSet {\n                                shopMoney {\n                                    amount\n                                    currencyCode\n                                }\n                            }\n                            subtotalPriceSet {\n                                shopMoney {\n                                    amount\n                                    currencyCode\n                                }\n                            }\n                            totalTaxSet {\n                                shopMoney {\n                                    amount\n                                    currencyCode\n                                }\n                            }\n                            totalShippingPriceSet {\n                                shopMoney {\n                                    amount\n                                    currencyCode\n                                }\n                            }\n                            customer {\n                                id\n                                firstName\n                                lastName\n                                email\n                                phone\n                                addresses {\n                                    address1\n                                    address2\n                                    city\n                                    province\n                                    zip\n                                    country\n                                    phone\n                                }\n                            }\n                            shippingAddress {\n                                address1\n                                address2\n                                city\n                                province\n                                zip\n                                country\n                                phone\n                            }\n                            billingAddress {\n                                address1\n                                address2\n                                city\n                                province\n                                zip\n                                country\n                                phone\n                            }\n                            lineItems(first: 50) {\n                                edges {\n                                    node {\n                                        id\n                                        quantity\n                                        sku\n                                        title\n                                        variant {\n                                            id\n                                            sku\n                                            price\n                                            product {\n                                                id\n                                                title\n                                            }\n                                        }\n                                        discountedTotalSet {\n                                            shopMoney {\n                                                amount\n                                                currencyCode\n                                            }\n                                        }\n                                    }\n                                }\n                            }\n                            discountApplications(first: 10) {\n                                edges {\n                                    node {\n                                        type\n                                        value {\n                                            ... on MoneyV2 {\n                                                amount\n                                                currencyCode\n                                            }\n                                            ... on PricingPercentageValue {\n                                                percentage\n                                            }\n                                        }\n                                        target {\n                                            ... on OrderLineItem {\n                                                id\n                                            }\n                                        }\n                                    }\n                                }\n                            }\n                            note\n                        }\n                    }\n                    pageInfo {\n                        hasNextPage\n                        endCursor\n                    }\n                }\n            }\n            ', 'variables': {'first': 20, 'after': None}}, 'response': None, 'status': None}
2025-08-05 14:49:06,707 - sync_service - ERROR - GraphQL query error for store local: {'message': "Field 'type' doesn't exist on type 'DiscountApplication'", 'locations': [{'line': 95, 'column': 15}], 'path': ['query getOrders', 'orders', 'edges', 'node', 'discountApplications', 'edges', 'node', 'type'], 'extensions': {'code': 'undefinedField', 'typeName': 'DiscountApplication', 'fieldName': 'type'}}
GraphQL Errors: [
  {
    "message": "Field 'type' doesn't exist on type 'DiscountApplication'",
    "locations": [
      {
        "line": 95,
        "column": 15
      }
    ],
    "path": [
      "query getOrders",
      "orders",
      "edges",
      "node",
      "discountApplications",
      "edges",
      "node",
      "type"
    ],
    "extensions": {
      "code": "undefinedField",
      "typeName": "DiscountApplication",
      "fieldName": "type"
    }
  },
  {
    "message": "Field 'target' doesn't exist on type 'DiscountApplication'",
    "locations": [
      {
        "line": 105,
        "column": 15
      }
    ],
    "path": [
      "query getOrders",
      "orders",
      "edges",
      "node",
      "discountApplications",
      "edges",
      "node",
      "target"
    ],
    "extensions": {
      "code": "undefinedField",
      "typeName": "DiscountApplication",
      "fieldName": "target"
    }
  }
]
GraphQL Data: null
GraphQL Extensions: null
2025-08-05 14:49:07,636 - sync_service - INFO - API log added to SAP: shopify - /admin/api/graphql_local - failure
2025-08-05 14:49:45,814 - sync_service - INFO - Initialized Shopify client for store: Local Store (local)
2025-08-05 14:49:45,830 - sync_service - INFO - API Call: {'service': 'shopify', 'endpoint': 'graphql_local', 'request': {'query': '\n        query getOrders($first: Int!) {\n            orders(first: $first) {\n                edges {\n                    node {\n                        id\n                        name\n                        createdAt\n                    }\n                }\n            }\n        }\n        ', 'variables': {'first': 1}}, 'response': None, 'status': None}
2025-08-05 14:49:46,614 - sync_service - INFO - API Call: {'service': 'shopify', 'endpoint': 'graphql_local', 'request': None, 'response': {'orders': {'edges': [{'node': {'id': 'gid://shopify/Order/6170973569090', 'name': '#1001', 'createdAt': '2025-05-15T08:35:47Z'}}]}}, 'status': 'success'}
2025-08-05 14:49:46,624 - sync_service - INFO - API Call: {'service': 'shopify', 'endpoint': 'graphql_local', 'request': {'query': '\n            query getOrders($first: Int!, $after: String) {\n                orders(first: $first, after: $after, sortKey: CREATED_AT, reverse: true) {\n                    edges {\n                        node {\n                            id\n                            name\n                            createdAt\n                            tags\n                            totalPriceSet {\n                                shopMoney {\n                                    amount\n                                    currencyCode\n                                }\n                            }\n                            subtotalPriceSet {\n                                shopMoney {\n                                    amount\n                                    currencyCode\n                                }\n                            }\n                            totalTaxSet {\n                                shopMoney {\n                                    amount\n                                    currencyCode\n                                }\n                            }\n                            totalShippingPriceSet {\n                                shopMoney {\n                                    amount\n                                    currencyCode\n                                }\n                            }\n                            customer {\n                                id\n                                firstName\n                                lastName\n                                email\n                                phone\n                                addresses {\n                                    address1\n                                    address2\n                                    city\n                                    province\n                                    zip\n                                    country\n                                    phone\n                                }\n                            }\n                            shippingAddress {\n                                address1\n                                address2\n                                city\n                                province\n                                zip\n                                country\n                                phone\n                            }\n                            billingAddress {\n                                address1\n                                address2\n                                city\n                                province\n                                zip\n                                country\n                                phone\n                            }\n                            lineItems(first: 50) {\n                                edges {\n                                    node {\n                                        id\n                                        quantity\n                                        sku\n                                        title\n                                        variant {\n                                            id\n                                            sku\n                                            price\n                                            product {\n                                                id\n                                                title\n                                            }\n                                        }\n                                        discountedTotalSet {\n                                            shopMoney {\n                                                amount\n                                                currencyCode\n                                            }\n                                        }\n                                    }\n                                }\n                            }\n                            note\n                        }\n                    }\n                    pageInfo {\n                        hasNextPage\n                        endCursor\n                    }\n                }\n            }\n            ', 'variables': {'first': 20, 'after': None}}, 'response': None, 'status': None}
2025-08-05 14:49:47,678 - sync_service - INFO - API Call: {'service': 'shopify', 'endpoint': 'graphql_local', 'request': None, 'response': {'orders': {'edges': [{'node': {'id': 'gid://shopify/Order/6318310686786', 'name': '#1480', 'createdAt': '2025-08-05T09:59:13Z', 'tags': [], 'totalPriceSet': {'shopMoney': {'amount': '5200.0', 'currencyCode': 'EGP'}}, 'subtotalPriceSet': {'shopMoney': {'amount': '5000.0', 'currencyCode': 'EGP'}}, 'totalTaxSet': {'shopMoney': {'amount': '0.0', 'currencyCode': 'EGP'}}, 'totalShippingPriceSet': {'shopMoney': {'amount': '200.0', 'currencyCode': 'EGP'}}, 'customer': {'id': 'gid://shopify/Customer/8037256233026', 'firstName': 'Omnia', 'lastName': 'Ezz Elarab', 'email': 'nezzelarab@ezz-elarab.com', 'phone': None, 'addresses': [{'address1': 'Palm hills 6th october, phase 1', 'address2': 'Villa b53', 'city': 'Giza', 'province': '6th of October', 'zip': '00000', 'country': 'Egypt', 'phone': '00201003370743'}]}, 'shippingAddress': {'address1': 'Palm hills 6th october, phase 1', 'address2': 'Villa b53', 'city': 'Giza', 'province': '6th of October', 'zip': '00000', 'country': 'Egypt', 'phone': '00201003370743'}, 'billingAddress': {'address1': 'Palm hills 6th october, phase 1', 'address2': 'Villa b53', 'city': 'Giza', 'province': '6th of October', 'zip': '00000', 'country': 'Egypt', 'phone': '00201003370743'}, 'lineItems': {'edges': [{'node': {'id': 'gid://shopify/LineItem/15830693707842', 'quantity': 1, 'sku': 'FG-0000632', 'title': 'Ember Earrings', 'variant': {'id': 'gid://shopify/ProductVariant/42194952650818', 'sku': 'FG-0000632', 'price': '5000.00', 'product': {'id': 'gid://shopify/Product/7490852847682', 'title': 'Ember Earrings'}}, 'discountedTotalSet': {'shopMoney': {'amount': '5000.0', 'currencyCode': 'EGP'}}}}]}, 'note': None}}, {'node': {'id': 'gid://shopify/Order/6318078263362', 'name': '#1479', 'createdAt': '2025-08-05T04:44:47Z', 'tags': [], 'totalPriceSet': {'shopMoney': {'amount': '7460.0', 'currencyCode': 'EGP'}}, 'subtotalPriceSet': {'shopMoney': {'amount': '7300.0', 'currencyCode': 'EGP'}}, 'totalTaxSet': {'shopMoney': {'amount': '0.0', 'currencyCode': 'EGP'}}, 'totalShippingPriceSet': {'shopMoney': {'amount': '160.0', 'currencyCode': 'EGP'}}, 'customer': {'id': 'gid://shopify/Customer/8035661905986', 'firstName': 'Ziad', 'lastName': 'Fawi', 'email': 'ziadfawi6@gmail.com', 'phone': None, 'addresses': [{'address1': None, 'address2': None, 'city': None, 'province': None, 'zip': None, 'country': 'Egypt', 'phone': None}, {'address1': '46 soultan street behind ices hospital', 'address2': 'Number of the apartment 17', 'city': 'Alexandria', 'province': 'Alexandria', 'zip': None, 'country': 'Egypt', 'phone': '01271088966'}]}, 'shippingAddress': {'address1': '46 soultan street behind ices hospital', 'address2': 'Number of the apartment 17', 'city': 'Alexandria', 'province': 'Alexandria', 'zip': None, 'country': 'Egypt', 'phone': '01271088966'}, 'billingAddress': {'address1': '46 soultan street behind ices hospital', 'address2': 'Number of the apartment 17', 'city': 'Alexandria', 'province': 'Alexandria', 'zip': None, 'country': 'Egypt', 'phone': '01271088966'}, 'lineItems': {'edges': [{'node': {'id': 'gid://shopify/LineItem/15830286434370', 'quantity': 1, 'sku': 'FG-0000077', 'title': 'Sulla Luna Mix Earrings', 'variant': {'id': 'gid://shopify/ProductVariant/42003146276930', 'sku': 'FG-0000077', 'price': '7300.00', 'product': {'id': 'gid://shopify/Product/7442022203458', 'title': 'Sulla Luna Mix Earrings'}}, 'discountedTotalSet': {'shopMoney': {'amount': '7300.0', 'currencyCode': 'EGP'}}}}]}, 'note': None}}, {'node': {'id': 'gid://shopify/Order/6317218398274', 'name': '#1478', 'createdAt': '2025-08-04T18:33:12Z', 'tags': [], 'totalPriceSet': {'shopMoney': {'amount': '2880.0', 'currencyCode': 'EGP'}}, 'subtotalPriceSet': {'shopMoney': {'amount': '2880.0', 'currencyCode': 'EGP'}}, 'totalTaxSet': {'shopMoney': {'amount': '0.0', 'currencyCode': 'EGP'}}, 'totalShippingPriceSet': {'shopMoney': {'amount': '0.0', 'currencyCode': 'EGP'}}, 'customer': {'id': 'gid://shopify/Customer/8032449527874', 'firstName': 'Mahmoud', 'lastName': 'Ayman', 'email': 'mahmoudayman80@yahoo.com', 'phone': None, 'addresses': [{'address1': None, 'address2': None, 'city': None, 'province': None, 'zip': None, 'country': 'Egypt', 'phone': None}, {'address1': '5370 el mokattam', 'address2': None, 'city': 'Cairo', 'province': 'Cairo', 'zip': None, 'country': 'Egypt', 'phone': '01111346333'}]}, 'shippingAddress': None, 'billingAddress': {'address1': '5370 el mokattam', 'address2': None, 'city': 'Cairo', 'province': 'Cairo', 'zip': None, 'country': 'Egypt', 'phone': '01111346333'}, 'lineItems': {'edges': [{'node': {'id': 'gid://shopify/LineItem/15828170047554', 'quantity': 1, 'sku': 'FG-0000589', 'title': 'Una Ring', 'variant': {'id': 'gid://shopify/ProductVariant/42003153518658', 'sku': 'FG-0000589', 'price': '3200.00', 'product': {'id': 'gid://shopify/Product/7442026070082', 'title': 'Una Ring'}}, 'discountedTotalSet': {'shopMoney': {'amount': '3200.0', 'currencyCode': 'EGP'}}}}]}, 'note': None}}, {'node': {'id': 'gid://shopify/Order/6317035520066', 'name': '#1477', 'createdAt': '2025-08-04T16:50:11Z', 'tags': [], 'totalPriceSet': {'shopMoney': {'amount': '5060.0', 'currencyCode': 'EGP'}}, 'subtotalPriceSet': {'shopMoney': {'amount': '4900.0', 'currencyCode': 'EGP'}}, 'totalTaxSet': {'shopMoney': {'amount': '0.0', 'currencyCode': 'EGP'}}, 'totalShippingPriceSet': {'shopMoney': {'amount': '160.0', 'currencyCode': 'EGP'}}, 'customer': {'id': 'gid://shopify/Customer/8031975374914', 'firstName': 'Passant', 'lastName': 'Dawood', 'email': 'passantdawood@gmail.com', 'phone': None, 'addresses': [{'address1': '399 elguish road san stefano grand plaza', 'address2': '1', 'city': 'Alexandria', 'province': 'Alexandria', 'zip': None, 'country': 'Egypt', 'phone': '01223100564'}]}, 'shippingAddress': {'address1': '399 elguish road san stefano grand plaza', 'address2': '1', 'city': 'Alexandria', 'province': 'Alexandria', 'zip': None, 'country': 'Egypt', 'phone': '01223100564'}, 'billingAddress': {'address1': '399 elguish road san stefano grand plaza', 'address2': '1', 'city': 'Alexandria', 'province': 'Alexandria', 'zip': None, 'country': 'Egypt', 'phone': '01223100564'}, 'lineItems': {'edges': [{'node': {'id': 'gid://shopify/LineItem/15827708805186', 'quantity': 1, 'sku': 'FG-0000688', 'title': 'Multi-way Halo Ring', 'variant': {'id': 'gid://shopify/ProductVariant/42194980896834', 'sku': 'FG-0000688', 'price': '4900.00', 'product': {'id': 'gid://shopify/Product/7490853339202', 'title': 'Multi-way Halo Ring'}}, 'discountedTotalSet': {'shopMoney': {'amount': '4900.0', 'currencyCode': 'EGP'}}}}]}, 'note': None}}, {'node': {'id': 'gid://shopify/Order/6317030244418', 'name': '#1476', 'createdAt': '2025-08-04T16:47:03Z', 'tags': [], 'totalPriceSet': {'shopMoney': {'amount': '5320.0', 'currencyCode': 'EGP'}}, 'subtotalPriceSet': {'shopMoney': {'amount': '5200.0', 'currencyCode': 'EGP'}}, 'totalTaxSet': {'shopMoney': {'amount': '0.0', 'currencyCode': 'EGP'}}, 'totalShippingPriceSet': {'shopMoney': {'amount': '120.0', 'currencyCode': 'EGP'}}, 'customer': {'id': 'gid://shopify/Customer/8031970918466', 'firstName': 'Noha', 'lastName': 'Emad', 'email': 'noha@kitshe-eg.com', 'phone': None, 'addresses': [{'address1': 'التجمع الخامس االدور الاول شقه ٤جنوب الأكاديمية أ شارع ان', 'address2': 'التجمع الخامس- جنوب الاكادميه أ شارع انس ابن مالك فيلا ٢٨٦', 'city': 'Cairo', 'province': 'Cairo', 'zip': '11865', 'country': 'Egypt', 'phone': '01200008517'}]}, 'shippingAddress': {'address1': 'التجمع الخامس االدور الاول شقه ٤جنوب الأكاديمية أ شارع ان', 'address2': 'التجمع الخامس- جنوب الاكادميه أ شارع انس ابن مالك فيلا ٢٨٦', 'city': 'Cairo', 'province': 'Cairo', 'zip': '11865', 'country': 'Egypt', 'phone': '01200008517'}, 'billingAddress': {'address1': 'التجمع الخامس االدور الاول شقه ٤جنوب الأكاديمية أ شارع ان', 'address2': 'التجمع الخامس- جنوب الاكادميه أ شارع انس ابن مالك فيلا ٢٨٦', 'city': 'Cairo', 'province': 'Cairo', 'zip': '11865', 'country': 'Egypt', 'phone': '01200008517'}, 'lineItems': {'edges': [{'node': {'id': 'gid://shopify/LineItem/15827697336386', 'quantity': 1, 'sku': 'FG-0000640', 'title': 'Essence Earrings', 'variant': {'id': 'gid://shopify/ProductVariant/42194952945730', 'sku': 'FG-0000640', 'price': '5200.00', 'product': {'id': 'gid://shopify/Product/7490852945986', 'title': 'Essence Earrings'}}, 'discountedTotalSet': {'shopMoney': {'amount': '5200.0', 'currencyCode': 'EGP'}}}}]}, 'note': None}}, {'node': {'id': 'gid://shopify/Order/6316680347714', 'name': '#1475', 'createdAt': '2025-08-04T12:56:00Z', 'tags': [], 'totalPriceSet': {'shopMoney': {'amount': '5120.0', 'currencyCode': 'EGP'}}, 'subtotalPriceSet': {'shopMoney': {'amount': '5000.0', 'currencyCode': 'EGP'}}, 'totalTaxSet': {'shopMoney': {'amount': '0.0', 'currencyCode': 'EGP'}}, 'totalShippingPriceSet': {'shopMoney': {'amount': '120.0', 'currencyCode': 'EGP'}}, 'customer': {'id': 'gid://shopify/Customer/8031264636994', 'firstName': 'Hanan', 'lastName': 'HASSAN', 'email': 'hananhassan1204@gmail.com', 'phone': None, 'addresses': [{'address1': 'القاهرة الجديدة / كمبوند سوديك ڤيليت عمارة واحد إف شقة أرضي زيرو أربعة', 'address2': '04 الدور الارضي', 'city': 'القاهرة', 'province': 'Cairo', 'zip': '11511', 'country': 'Egypt', 'phone': '01000340138'}]}, 'shippingAddress': {'address1': 'القاهرة الجديدة / كمبوند سوديك ڤيليت عمارة واحد إف شقة أرضي زيرو أربعة', 'address2': '04 الدور الارضي', 'city': 'القاهرة', 'province': 'Cairo', 'zip': '11511', 'country': 'Egypt', 'phone': '01000340138'}, 'billingAddress': {'address1': 'القاهرة الجديدة / كمبوند سوديك ڤيليت عمارة واحد إف شقة أرضي زيرو أربعة', 'address2': '04 الدور الارضي', 'city': 'القاهرة', 'province': 'Cairo', 'zip': '11511', 'country': 'Egypt', 'phone': '01000340138'}, 'lineItems': {'edges': [{'node': {'id': 'gid://shopify/LineItem/15826901237826', 'quantity': 1, 'sku': 'FG-0000632', 'title': 'Ember Earrings', 'variant': {'id': 'gid://shopify/ProductVariant/42194952650818', 'sku': 'FG-0000632', 'price': '5000.00', 'product': {'id': 'gid://shopify/Product/7490852847682', 'title': 'Ember Earrings'}}, 'discountedTotalSet': {'shopMoney': {'amount': '5000.0', 'currencyCode': 'EGP'}}}}]}, 'note': None}}, {'node': {'id': 'gid://shopify/Order/6316580536386', 'name': '#1474', 'createdAt': '2025-08-04T11:08:05Z', 'tags': [], 'totalPriceSet': {'shopMoney': {'amount': '6020.0', 'currencyCode': 'EGP'}}, 'subtotalPriceSet': {'shopMoney': {'amount': '5900.0', 'currencyCode': 'EGP'}}, 'totalTaxSet': {'shopMoney': {'amount': '0.0', 'currencyCode': 'EGP'}}, 'totalShippingPriceSet': {'shopMoney': {'amount': '120.0', 'currencyCode': 'EGP'}}, 'customer': {'id': 'gid://shopify/Customer/8031120457794', 'firstName': 'Nourhan', 'lastName': 'Swellam', 'email': 'swellam@aucegypt.edu', 'phone': None, 'addresses': [{'address1': '144 el banafseg 11 ', 'address2': 'Villa 144', 'city': 'Cairo', 'province': 'Cairo', 'zip': '11341', 'country': 'Egypt', 'phone': '+201003928976'}]}, 'shippingAddress': {'address1': '144 el banafseg 11', 'address2': 'Villa 144', 'city': 'Cairo', 'province': 'Cairo', 'zip': '11341', 'country': 'Egypt', 'phone': '+201003928976'}, 'billingAddress': {'address1': '144 el banafseg 11', 'address2': 'Villa 144', 'city': 'Cairo', 'province': 'Cairo', 'zip': '11341', 'country': 'Egypt', 'phone': '+201003928976'}, 'lineItems': {'edges': [{'node': {'id': 'gid://shopify/LineItem/15826707382338', 'quantity': 1, 'sku': 'FG-0000369', 'title': 'Mini Sahara Mix Hoop', 'variant': {'id': 'gid://shopify/ProductVariant/42003146997826', 'sku': 'FG-0000369', 'price': '5900.00', 'product': {'id': 'gid://shopify/Product/7442022989890', 'title': 'Mini Sahara Mix Hoop'}}, 'discountedTotalSet': {'shopMoney': {'amount': '5900.0', 'currencyCode': 'EGP'}}}}]}, 'note': None}}, {'node': {'id': 'gid://shopify/Order/6315006394434', 'name': '#1473', 'createdAt': '2025-08-03T15:21:25Z', 'tags': [], 'totalPriceSet': {'shopMoney': {'amount': '4420.0', 'currencyCode': 'EGP'}}, 'subtotalPriceSet': {'shopMoney': {'amount': '4300.0', 'currencyCode': 'EGP'}}, 'totalTaxSet': {'shopMoney': {'amount': '0.0', 'currencyCode': 'EGP'}}, 'totalShippingPriceSet': {'shopMoney': {'amount': '120.0', 'currencyCode': 'EGP'}}, 'customer': {'id': 'gid://shopify/Customer/8015867478082', 'firstName': 'Yomna', 'lastName': 'Sherif', 'email': 'yomna.sherif.nawal@gmail.com', 'phone': None, 'addresses': [{'address1': 'Group 15 , building 5 , apartment 22', 'address2': 'Group 15 , building 5 , apartment 22', 'city': 'Rehab City', 'province': 'Cairo', 'zip': '0000', 'country': 'Egypt', 'phone': '+201003988787'}, {'address1': None, 'address2': None, 'city': None, 'province': None, 'zip': None, 'country': 'Egypt', 'phone': None}]}, 'shippingAddress': {'address1': 'Group 15 , building 5 , apartment 22', 'address2': 'Group 15 , building 5 , apartment 22', 'city': 'Rehab City', 'province': 'Cairo', 'zip': '0000', 'country': 'Egypt', 'phone': '+201003988787'}, 'billingAddress': {'address1': 'Group 15 , building 5 , apartment 22', 'address2': 'Group 15 , building 5 , apartment 22', 'city': 'Rehab City', 'province': 'Cairo', 'zip': '0000', 'country': 'Egypt', 'phone': '+201003988787'}, 'lineItems': {'edges': [{'node': {'id': 'gid://shopify/LineItem/15822752055362', 'quantity': 1, 'sku': 'FG-0000499', 'title': 'Cassandra Mix Pinky Ring', 'variant': {'id': 'gid://shopify/ProductVariant/42003149815874', 'sku': 'FG-0000499', 'price': '4300.00', 'product': {'id': 'gid://shopify/Product/7442024235074', 'title': 'Cassandra Mix Pinky Ring'}}, 'discountedTotalSet': {'shopMoney': {'amount': '4300.0', 'currencyCode': 'EGP'}}}}]}, 'note': None}}, {'node': {'id': 'gid://shopify/Order/6314877780034', 'name': '#1472', 'createdAt': '2025-08-03T13:47:12Z', 'tags': [], 'totalPriceSet': {'shopMoney': {'amount': '121.0', 'currencyCode': 'EGP'}}, 'subtotalPriceSet': {'shopMoney': {'amount': '1.0', 'currencyCode': 'EGP'}}, 'totalTaxSet': {'shopMoney': {'amount': '0.0', 'currencyCode': 'EGP'}}, 'totalShippingPriceSet': {'shopMoney': {'amount': '120.0', 'currencyCode': 'EGP'}}, 'customer': {'id': 'gid://shopify/Customer/7539785334850', 'firstName': 'Karim', 'lastName': 'Wafik', 'email': 'karimwafik.kw@gmail.com', 'phone': None, 'addresses': [{'address1': '97 Marghany st., Heliopolis, Cairo, Egypt', 'address2': None, 'city': 'Cairo', 'province': 'Cairo', 'zip': '21113', 'country': 'Egypt', 'phone': '+201005527292'}, {'address1': 'Stone Residence Compound 306, Third Settlement', 'address2': '9', 'city': 'Cairo', 'province': 'Cairo', 'zip': None, 'country': 'Egypt', 'phone': '01005527292'}]}, 'shippingAddress': {'address1': 'Stone Residence Compound 306, Third Settlement', 'address2': '9', 'city': 'Cairo', 'province': 'Cairo', 'zip': None, 'country': 'Egypt', 'phone': '01005527292'}, 'billingAddress': {'address1': 'Stone Residence Compound 306, Third Settlement', 'address2': '9', 'city': 'Cairo', 'province': 'Cairo', 'zip': None, 'country': 'Egypt', 'phone': '01005527292'}, 'lineItems': {'edges': [{'node': {'id': 'gid://shopify/LineItem/15822411366466', 'quantity': 1, 'sku': None, 'title': 'karim test', 'variant': {'id': 'gid://shopify/ProductVariant/42361056985154', 'sku': None, 'price': '1.00', 'product': {'id': 'gid://shopify/Product/7522803515458', 'title': 'karim test'}}, 'discountedTotalSet': {'shopMoney': {'amount': '1.0', 'currencyCode': 'EGP'}}}}]}, 'note': None}}, {'node': {'id': 'gid://shopify/Order/6314801463362', 'name': '#1471', 'createdAt': '2025-08-03T12:37:41Z', 'tags': [], 'totalPriceSet': {'shopMoney': {'amount': '4620.0', 'currencyCode': 'EGP'}}, 'subtotalPriceSet': {'shopMoney': {'amount': '4500.0', 'currencyCode': 'EGP'}}, 'totalTaxSet': {'shopMoney': {'amount': '0.0', 'currencyCode': 'EGP'}}, 'totalShippingPriceSet': {'shopMoney': {'amount': '120.0', 'currencyCode': 'EGP'}}, 'customer': {'id': 'gid://shopify/Customer/8028986572866', 'firstName': 'Manal', 'lastName': 'Dorgham', 'email': 'manaldorgham4@gmail.com', 'phone': None, 'addresses': [{'address1': 'Moon valley compound. New Cairo', 'address2': '45 D', 'city': 'Cairo', 'province': 'Cairo', 'zip': None, 'country': 'Egypt', 'phone': '01222455309'}]}, 'shippingAddress': {'address1': 'Moon valley compound. New Cairo', 'address2': '45 D', 'city': 'Cairo', 'province': 'Cairo', 'zip': None, 'country': 'Egypt', 'phone': '01222455309'}, 'billingAddress': {'address1': 'Moon valley compound. New Cairo', 'address2': '45 D', 'city': 'Cairo', 'province': 'Cairo', 'zip': None, 'country': 'Egypt', 'phone': '01222455309'}, 'lineItems': {'edges': [{'node': {'id': 'gid://shopify/LineItem/15822235631682', 'quantity': 1, 'sku': 'FG-0000544', 'title': 'Floway ring set', 'variant': {'id': 'gid://shopify/ProductVariant/42003150602306', 'sku': 'FG-0000544', 'price': '4500.00', 'product': {'id': 'gid://shopify/Product/7442024890434', 'title': 'Floway ring set'}}, 'discountedTotalSet': {'shopMoney': {'amount': '4500.0', 'currencyCode': 'EGP'}}}}]}, 'note': None}}, {'node': {'id': 'gid://shopify/Order/6314790420546', 'name': '#1470', 'createdAt': '2025-08-03T12:26:20Z', 'tags': [], 'totalPriceSet': {'shopMoney': {'amount': '7600.0', 'currencyCode': 'EGP'}}, 'subtotalPriceSet': {'shopMoney': {'amount': '7600.0', 'currencyCode': 'EGP'}}, 'totalTaxSet': {'shopMoney': {'amount': '0.0', 'currencyCode': 'EGP'}}, 'totalShippingPriceSet': {'shopMoney': {'amount': '0.0', 'currencyCode': 'EGP'}}, 'customer': {'id': 'gid://shopify/Customer/7539785334850', 'firstName': 'Karim', 'lastName': 'Wafik', 'email': 'karimwafik.kw@gmail.com', 'phone': None, 'addresses': [{'address1': '97 Marghany st., Heliopolis, Cairo, Egypt', 'address2': None, 'city': 'Cairo', 'province': 'Cairo', 'zip': '21113', 'country': 'Egypt', 'phone': '+201005527292'}, {'address1': 'Stone Residence Compound 306, Third Settlement', 'address2': '9', 'city': 'Cairo', 'province': 'Cairo', 'zip': None, 'country': 'Egypt', 'phone': '01005527292'}]}, 'shippingAddress': None, 'billingAddress': None, 'lineItems': {'edges': [{'node': {'id': 'gid://shopify/LineItem/15822212661314', 'quantity': 1, 'sku': 'FG-0000645', 'title': 'Flare Earrings', 'variant': {'id': 'gid://shopify/ProductVariant/42277872271426', 'sku': 'FG-0000645', 'price': '3800.00', 'product': {'id': 'gid://shopify/Product/7506409586754', 'title': 'Flare Earrings'}}, 'discountedTotalSet': {'shopMoney': {'amount': '3800.0', 'currencyCode': 'EGP'}}}}, {'node': {'id': 'gid://shopify/LineItem/15822221770818', 'quantity': 1, 'sku': None, 'title': 'Gift Card', 'variant': None, 'discountedTotalSet': {'shopMoney': {'amount': '3800.0', 'currencyCode': 'EGP'}}}}]}, 'note': None}}, {'node': {'id': 'gid://shopify/Order/6314786357314', 'name': '#1469', 'createdAt': '2025-08-03T12:21:46Z', 'tags': [], 'totalPriceSet': {'shopMoney': {'amount': '6900.0', 'currencyCode': 'EGP'}}, 'subtotalPriceSet': {'shopMoney': {'amount': '6900.0', 'currencyCode': 'EGP'}}, 'totalTaxSet': {'shopMoney': {'amount': '0.0', 'currencyCode': 'EGP'}}, 'totalShippingPriceSet': {'shopMoney': {'amount': '0.0', 'currencyCode': 'EGP'}}, 'customer': None, 'shippingAddress': None, 'billingAddress': None, 'lineItems': {'edges': [{'node': {'id': 'gid://shopify/LineItem/15822205321282', 'quantity': 1, 'sku': 'FG-0000345', 'title': 'Mini Harmonia Earrings', 'variant': {'id': 'gid://shopify/ProductVariant/42003146801218', 'sku': 'FG-0000345', 'price': '6900.00', 'product': {'id': 'gid://shopify/Product/7442022793282', 'title': 'Mini Harmonia Earrings'}}, 'discountedTotalSet': {'shopMoney': {'amount': '6900.0', 'currencyCode': 'EGP'}}}}]}, 'note': None}}, {'node': {'id': 'gid://shopify/Order/6314775969858', 'name': '#1468', 'createdAt': '2025-08-03T12:12:09Z', 'tags': [], 'totalPriceSet': {'shopMoney': {'amount': '2920.0', 'currencyCode': 'EGP'}}, 'subtotalPriceSet': {'shopMoney': {'amount': '2800.0', 'currencyCode': 'EGP'}}, 'totalTaxSet': {'shopMoney': {'amount': '0.0', 'currencyCode': 'EGP'}}, 'totalShippingPriceSet': {'shopMoney': {'amount': '120.0', 'currencyCode': 'EGP'}}, 'customer': {'id': 'gid://shopify/Customer/8028955639874', 'firstName': 'Mariam', 'lastName': 'Mackawy', 'email': 'mariammackawy5@gmail.com', 'phone': None, 'addresses': [{'address1': 'الرحاب ٢، مجموعة ١٣١، عمارة ٢٠، شقة ٤١', 'address2': '41 El Rehab2, Group 131, Building 20, Apartment', 'city': 'Cairo', 'province': 'Cairo', 'zip': '11511', 'country': 'Egypt', 'phone': '01285358540'}]}, 'shippingAddress': {'address1': 'الرحاب ٢، مجموعة ١٣١، عمارة ٢٠، شقة ٤١', 'address2': '41 El Rehab2, Group 131, Building 20, Apartment', 'city': 'Cairo', 'province': 'Cairo', 'zip': '11511', 'country': 'Egypt', 'phone': '01285358540'}, 'billingAddress': {'address1': 'الرحاب ٢، مجموعة ١٣١، عمارة ٢٠، شقة ٤١', 'address2': '41 El Rehab2, Group 131, Building 20, Apartment', 'city': 'Cairo', 'province': 'Cairo', 'zip': '11511', 'country': 'Egypt', 'phone': '01285358540'}, 'lineItems': {'edges': [{'node': {'id': 'gid://shopify/LineItem/15822184742978', 'quantity': 1, 'sku': 'FG-0000498', 'title': 'Cassandra Pinky Ring', 'variant': {'id': 'gid://shopify/ProductVariant/42003149881410', 'sku': 'FG-0000498', 'price': '2800.00', 'product': {'id': 'gid://shopify/Product/7442024300610', 'title': 'Cassandra Pinky Ring'}}, 'discountedTotalSet': {'shopMoney': {'amount': '2800.0', 'currencyCode': 'EGP'}}}}]}, 'note': None}}, {'node': {'id': 'gid://shopify/Order/6314438000706', 'name': '#1467', 'createdAt': '2025-08-03T04:32:29Z', 'tags': [], 'totalPriceSet': {'shopMoney': {'amount': '3200.0', 'currencyCode': 'EGP'}}, 'subtotalPriceSet': {'shopMoney': {'amount': '3200.0', 'currencyCode': 'EGP'}}, 'totalTaxSet': {'shopMoney': {'amount': '0.0', 'currencyCode': 'EGP'}}, 'totalShippingPriceSet': {'shopMoney': {'amount': '0.0', 'currencyCode': 'EGP'}}, 'customer': {'id': 'gid://shopify/Customer/8026031751234', 'firstName': 'sally', 'lastName': 'monir', 'email': 'sallymonir@yahoo.com', 'phone': None, 'addresses': [{'address1': '113, st. 17, First Area, fifth zone, fifth settlement', 'address2': '2', 'city': 'New Cairo', 'province': 'Cairo', 'zip': None, 'country': 'Egypt', 'phone': '+201273099926'}]}, 'shippingAddress': None, 'billingAddress': {'address1': '113, st. 17, First Area, fifth zone, fifth settlement', 'address2': '2', 'city': 'New Cairo', 'province': 'Cairo', 'zip': None, 'country': 'Egypt', 'phone': '+201273099926'}, 'lineItems': {'edges': [{'node': {'id': 'gid://shopify/LineItem/15821581156418', 'quantity': 1, 'sku': 'FG-0000468', 'title': 'Frost Ring', 'variant': {'id': 'gid://shopify/ProductVariant/42003151618114', 'sku': 'FG-0000468', 'price': '3200.00', 'product': {'id': 'gid://shopify/Product/7442025381954', 'title': 'Frost Ring'}}, 'discountedTotalSet': {'shopMoney': {'amount': '3200.0', 'currencyCode': 'EGP'}}}}]}, 'note': None}}, {'node': {'id': 'gid://shopify/Order/6312813002818', 'name': '#1466', 'createdAt': '2025-08-02T11:04:39Z', 'tags': [], 'totalPriceSet': {'shopMoney': {'amount': '4420.0', 'currencyCode': 'EGP'}}, 'subtotalPriceSet': {'shopMoney': {'amount': '4300.0', 'currencyCode': 'EGP'}}, 'totalTaxSet': {'shopMoney': {'amount': '0.0', 'currencyCode': 'EGP'}}, 'totalShippingPriceSet': {'shopMoney': {'amount': '120.0', 'currencyCode': 'EGP'}}, 'customer': {'id': 'gid://shopify/Customer/8026480607298', 'firstName': 'Nadine', 'lastName': 'GALAL', 'email': 'nadinegalal09@gmail.com', 'phone': None, 'addresses': [{'address1': 'امام ٣١ شارع ابراهيم حلمي الدور ٣ شقة ١١', 'address2': 'الدور ٣ شقة ١١', 'city': 'Alexandria', 'province': 'Alexandria', 'zip': None, 'country': 'Egypt', 'phone': '01284444565'}]}, 'shippingAddress': {'address1': 'امام ٣١ شارع ابراهيم حلمي الدور ٣ شقة ١١', 'address2': 'الدور ٣ شقة ١١', 'city': 'Alexandria', 'province': 'Alexandria', 'zip': None, 'country': 'Egypt', 'phone': '01284444565'}, 'billingAddress': {'address1': 'امام ٣١ شارع ابراهيم حلمي الدور ٣ شقة ١١', 'address2': 'الدور ٣ شقة ١١', 'city': 'Alexandria', 'province': 'Alexandria', 'zip': None, 'country': 'Egypt', 'phone': '01284444565'}, 'lineItems': {'edges': [{'node': {'id': 'gid://shopify/LineItem/15817138307138', 'quantity': 1, 'sku': 'FG-0000499', 'title': 'Cassandra Mix Pinky Ring', 'variant': {'id': 'gid://shopify/ProductVariant/42003149815874', 'sku': 'FG-0000499', 'price': '4300.00', 'product': {'id': 'gid://shopify/Product/7442024235074', 'title': 'Cassandra Mix Pinky Ring'}}, 'discountedTotalSet': {'shopMoney': {'amount': '4300.0', 'currencyCode': 'EGP'}}}}]}, 'note': None}}, {'node': {'id': 'gid://shopify/Order/6312140603458', 'name': '#1465', 'createdAt': '2025-08-01T23:27:00Z', 'tags': [], 'totalPriceSet': {'shopMoney': {'amount': '8860.0', 'currencyCode': 'EGP'}}, 'subtotalPriceSet': {'shopMoney': {'amount': '8700.0', 'currencyCode': 'EGP'}}, 'totalTaxSet': {'shopMoney': {'amount': '0.0', 'currencyCode': 'EGP'}}, 'totalShippingPriceSet': {'shopMoney': {'amount': '160.0', 'currencyCode': 'EGP'}}, 'customer': {'id': 'gid://shopify/Customer/8024664145986', 'firstName': 'Mai', 'lastName': 'Aladdin', 'email': 'mayyo69@gmail.com', 'phone': None, 'addresses': [{'address1': 'Sohag - shar2', 'address2': None, 'city': 'Sohag', 'province': 'Sohag', 'zip': None, 'country': 'Egypt', 'phone': '01027733614'}]}, 'shippingAddress': {'address1': 'Sohag - shar2', 'address2': None, 'city': 'Sohag', 'province': 'Sohag', 'zip': None, 'country': 'Egypt', 'phone': '01027733614'}, 'billingAddress': {'address1': 'Sohag - shar2', 'address2': None, 'city': 'Sohag', 'province': 'Sohag', 'zip': None, 'country': 'Egypt', 'phone': '01027733614'}, 'lineItems': {'edges': [{'node': {'id': 'gid://shopify/LineItem/15815787151426', 'quantity': 1, 'sku': 'FG-0000498', 'title': 'Cassandra Pinky Ring', 'variant': {'id': 'gid://shopify/ProductVariant/42003149881410', 'sku': 'FG-0000498', 'price': '2800.00', 'product': {'id': 'gid://shopify/Product/7442024300610', 'title': 'Cassandra Pinky Ring'}}, 'discountedTotalSet': {'shopMoney': {'amount': '2800.0', 'currencyCode': 'EGP'}}}}, {'node': {'id': 'gid://shopify/LineItem/15815787184194', 'quantity': 1, 'sku': 'FG-0000575', 'title': 'Janus Cuff', 'variant': {'id': 'gid://shopify/ProductVariant/42003153256514', 'sku': 'FG-0000575', 'price': '5900.00', 'product': {'id': 'gid://shopify/Product/7442025906242', 'title': 'Janus Cuff'}}, 'discountedTotalSet': {'shopMoney': {'amount': '5900.0', 'currencyCode': 'EGP'}}}}]}, 'note': None}}, {'node': {'id': 'gid://shopify/Order/6311861026882', 'name': '#1464', 'createdAt': '2025-08-01T20:45:45Z', 'tags': [], 'totalPriceSet': {'shopMoney': {'amount': '4800.0', 'currencyCode': 'EGP'}}, 'subtotalPriceSet': {'shopMoney': {'amount': '4800.0', 'currencyCode': 'EGP'}}, 'totalTaxSet': {'shopMoney': {'amount': '0.0', 'currencyCode': 'EGP'}}, 'totalShippingPriceSet': {'shopMoney': {'amount': '0.0', 'currencyCode': 'EGP'}}, 'customer': {'id': 'gid://shopify/Customer/8024130191426', 'firstName': 'Ibrahim', 'lastName': 'ElGohary', 'email': 'hima22may@hotmail.com', 'phone': None, 'addresses': [{'address1': 'Wady compound', 'address2': 'Home', 'city': 'Cairo', 'province': 'Cairo', 'zip': None, 'country': 'Egypt', 'phone': '01007217010'}]}, 'shippingAddress': None, 'billingAddress': {'address1': 'Wady compound', 'address2': 'Home', 'city': 'Cairo', 'province': 'Cairo', 'zip': None, 'country': 'Egypt', 'phone': '01007217010'}, 'lineItems': {'edges': [{'node': {'id': 'gid://shopify/LineItem/15815036600386', 'quantity': 1, 'sku': 'FG-0000075', 'title': 'Sulla Luna Earrings', 'variant': {'id': 'gid://shopify/ProductVariant/42003146211394', 'sku': 'FG-0000075', 'price': '4800.00', 'product': {'id': 'gid://shopify/Product/7442022170690', 'title': 'Sulla Luna Earrings'}}, 'discountedTotalSet': {'shopMoney': {'amount': '4800.0', 'currencyCode': 'EGP'}}}}]}, 'note': None}}, {'node': {'id': 'gid://shopify/Order/6311162380354', 'name': '#1463', 'createdAt': '2025-08-01T15:19:07Z', 'tags': [], 'totalPriceSet': {'shopMoney': {'amount': '7460.0', 'currencyCode': 'EGP'}}, 'subtotalPriceSet': {'shopMoney': {'amount': '7300.0', 'currencyCode': 'EGP'}}, 'totalTaxSet': {'shopMoney': {'amount': '0.0', 'currencyCode': 'EGP'}}, 'totalShippingPriceSet': {'shopMoney': {'amount': '160.0', 'currencyCode': 'EGP'}}, 'customer': {'id': 'gid://shopify/Customer/8022959784002', 'firstName': 'Nahed', 'lastName': 'Mohamed', 'email': 'nahedmohamed714@gmail.com', 'phone': None, 'addresses': [{'address1': 'العصافره بحرى الاسكندريه شارع اطلس عماره ١١ مكرر بجوار سوبر ناركت تسالى جاد امام مايوركا كافيه', 'address2': 'الدور التامن شقه ١٥', 'city': 'alexandria', 'province': 'Alexandria', 'zip': None, 'country': 'Egypt', 'phone': '+201284002489'}]}, 'shippingAddress': {'address1': 'العصافره بحرى الاسكندريه شارع اطلس عماره ١١ مكرر بجوار سوبر ناركت تسالى جاد امام مايوركا كافيه', 'address2': 'الدور التامن شقه ١٥', 'city': 'alexandria', 'province': 'Alexandria', 'zip': None, 'country': 'Egypt', 'phone': '+201284002489'}, 'billingAddress': {'address1': 'العصافره بحرى الاسكندريه شارع اطلس عماره ١١ مكرر بجوار سوبر ناركت تسالى جاد امام مايوركا كافيه', 'address2': 'الدور التامن شقه ١٥', 'city': 'alexandria', 'province': 'Alexandria', 'zip': None, 'country': 'Egypt', 'phone': '+201284002489'}, 'lineItems': {'edges': [{'node': {'id': 'gid://shopify/LineItem/15813349867586', 'quantity': 1, 'sku': 'FG-0000077', 'title': 'Sulla Luna Mix Earrings', 'variant': {'id': 'gid://shopify/ProductVariant/42003146276930', 'sku': 'FG-0000077', 'price': '7300.00', 'product': {'id': 'gid://shopify/Product/7442022203458', 'title': 'Sulla Luna Mix Earrings'}}, 'discountedTotalSet': {'shopMoney': {'amount': '7300.0', 'currencyCode': 'EGP'}}}}]}, 'note': None}}, {'node': {'id': 'gid://shopify/Order/6308680728642', 'name': '#1462', 'createdAt': '2025-07-31T09:58:23Z', 'tags': [], 'totalPriceSet': {'shopMoney': {'amount': '25900.0', 'currencyCode': 'EGP'}}, 'subtotalPriceSet': {'shopMoney': {'amount': '25700.0', 'currencyCode': 'EGP'}}, 'totalTaxSet': {'shopMoney': {'amount': '0.0', 'currencyCode': 'EGP'}}, 'totalShippingPriceSet': {'shopMoney': {'amount': '200.0', 'currencyCode': 'EGP'}}, 'customer': {'id': 'gid://shopify/Customer/8016631660610', 'firstName': 'Mohamed', 'lastName': 'Maher', 'email': 'm.maher525@gmail.com', 'phone': None, 'addresses': [{'address1': None, 'address2': None, 'city': None, 'province': None, 'zip': None, 'country': 'Egypt', 'phone': None}, {'address1': 'الهضبة الوسطى الحي الثالث كمباوند ديار سيتي 3 خلف مدرسة ريماس', 'address2': 'عمارة 2 شقة 20 بوابة 3', 'city': 'Al Mokkatam', 'province': 'Cairo', 'zip': None, 'country': 'Egypt', 'phone': '01069987443'}]}, 'shippingAddress': {'address1': 'الهضبة الوسطى الحي الثالث كمباوند ديار سيتي 3 خلف مدرسة ريماس', 'address2': 'عمارة 2 شقة 20 بوابة 3', 'city': 'Al Mokkatam', 'province': 'Cairo', 'zip': None, 'country': 'Egypt', 'phone': '01069987443'}, 'billingAddress': {'address1': 'الهضبة الوسطى الحي الثالث كمباوند ديار سيتي 3 خلف مدرسة ريماس', 'address2': 'عمارة 2 شقة 20 بوابة 3', 'city': 'Al Mokkatam', 'province': 'Cairo', 'zip': None, 'country': 'Egypt', 'phone': '01069987443'}, 'lineItems': {'edges': [{'node': {'id': 'gid://shopify/LineItem/15807895044162', 'quantity': 1, 'sku': 'FG-0000512', 'title': 'Riverstone Bracelet', 'variant': {'id': 'gid://shopify/ProductVariant/42003152404546', 'sku': 'FG-0000512', 'price': '5000.00', 'product': {'id': 'gid://shopify/Product/7442025611330', 'title': 'Riverstone Bracelet'}}, 'discountedTotalSet': {'shopMoney': {'amount': '5000.0', 'currencyCode': 'EGP'}}}}, {'node': {'id': 'gid://shopify/LineItem/15807895076930', 'quantity': 1, 'sku': 'FG-0000571', 'title': 'Riverstone Ring Mix', 'variant': {'id': 'gid://shopify/ProductVariant/42003150995522', 'sku': 'FG-0000571', 'price': '3900.00', 'product': {'id': 'gid://shopify/Product/7442025152578', 'title': 'Riverstone Ring Mix'}}, 'discountedTotalSet': {'shopMoney': {'amount': '3900.0', 'currencyCode': 'EGP'}}}}, {'node': {'id': 'gid://shopify/LineItem/15807895109698', 'quantity': 1, 'sku': 'FG-0000568', 'title': 'Riverstone Necklace Mix', 'variant': {'id': 'gid://shopify/ProductVariant/42003150962754', 'sku': 'FG-0000568', 'price': '16800.00', 'product': {'id': 'gid://shopify/Product/7442025119810', 'title': 'Riverstone Necklace Mix'}}, 'discountedTotalSet': {'shopMoney': {'amount': '16800.0', 'currencyCode': 'EGP'}}}}]}, 'note': None}}, {'node': {'id': 'gid://shopify/Order/6308073570370', 'name': '#1461', 'createdAt': '2025-07-30T23:37:58Z', 'tags': [], 'totalPriceSet': {'shopMoney': {'amount': '6700.0', 'currencyCode': 'EGP'}}, 'subtotalPriceSet': {'shopMoney': {'amount': '6500.0', 'currencyCode': 'EGP'}}, 'totalTaxSet': {'shopMoney': {'amount': '0.0', 'currencyCode': 'EGP'}}, 'totalShippingPriceSet': {'shopMoney': {'amount': '200.0', 'currencyCode': 'EGP'}}, 'customer': {'id': 'gid://shopify/Customer/8015808462914', 'firstName': 'farouk', 'lastName': 'yehia', 'email': 'farouky01@gmail.com', 'phone': None, 'addresses': [{'address1': 'mesaha sq', 'address2': '5 mesaha sq, 15th floor', 'city': 'giza', 'province': 'Cairo', 'zip': '12611', 'country': 'Egypt', 'phone': '+201060520013'}]}, 'shippingAddress': {'address1': 'mesaha sq', 'address2': '5 mesaha sq, 15th floor', 'city': 'giza', 'province': 'Cairo', 'zip': '12611', 'country': 'Egypt', 'phone': '+201060520013'}, 'billingAddress': {'address1': 'mesaha sq', 'address2': '5 mesaha sq, 15th floor', 'city': 'giza', 'province': 'Cairo', 'zip': '12611', 'country': 'Egypt', 'phone': '+201060520013'}, 'lineItems': {'edges': [{'node': {'id': 'gid://shopify/LineItem/15806636818498', 'quantity': 1, 'sku': 'FG-0000408', 'title': 'Nightfall Earrings', 'variant': {'id': 'gid://shopify/ProductVariant/42003148996674', 'sku': 'FG-0000408', 'price': '6500.00', 'product': {'id': 'gid://shopify/Product/7442023841858', 'title': 'Nightfall Earrings'}}, 'discountedTotalSet': {'shopMoney': {'amount': '6500.0', 'currencyCode': 'EGP'}}}}]}, 'note': None}}], 'pageInfo': {'hasNextPage': True, 'endCursor': 'eyJsYXN0X2lkIjo2MzA4MDczNTcwMzcwLCJsYXN0X3ZhbHVlIjoiMjAyNS0wNy0zMCAyMzozNzo1OC45MDkxNTcifQ=='}}}, 'status': 'success'}
2025-08-05 14:49:47,684 - sync_service - INFO - Retrieved 20 total orders, 20 unsynced orders from Shopify store local
2025-08-05 14:49:47,687 - sync_service - INFO - Processing order: #1480
2025-08-05 14:49:47,688 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'login', 'request': {'company': 'JudeBenHalim_Test', 'user': 'manager'}, 'response': None, 'status': None}
2025-08-05 14:49:48,592 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'login', 'request': None, 'response': {'status': 'success'}, 'status': 'success'}
2025-08-05 14:49:48,593 - sync_service - INFO - SAP login successful
2025-08-05 14:49:48,595 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'BusinessPartners', 'request': {'method': 'GET', 'url': 'https://10.0.0.100:50000/b1s/v1/BusinessPartners', 'data': None, 'params': {'$filter': "Phone1 eq '00201003370743' or Phone2 eq '00201003370743' or Cellular eq '00201003370743'", '$top': 1}}, 'response': None, 'status': None}
2025-08-05 14:49:49,538 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'BusinessPartners', 'request': None, 'response': {'odata.metadata': 'https://10.0.0.100:50000/b1s/v1/$metadata#BusinessPartners', 'value': []}, 'status': 'success'}
2025-08-05 14:49:49,542 - sync_service - INFO - Creating new customer in SAP
2025-08-05 14:49:49,544 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'BusinessPartners', 'request': {'method': 'POST', 'url': 'https://10.0.0.100:50000/b1s/v1/BusinessPartners', 'data': {'CardName': 'Omnia Ezz Elarab', 'CardType': 'C', 'Series': 121, 'Phone1': '00201003370743', 'Currency': 'EGP', 'BPAddresses': [{'AddressName': 'Omnia Ezz Elarab Address 1', 'Street': 'Palm hills 6th october, phase 1 Villa b53', 'City': 'Giza', 'AddressType': 'bo_ShipTo', 'Country': 'Egypt', 'State': '6th of October', 'ZipCode': '00000'}]}, 'params': None}, 'response': None, 'status': None}
2025-08-05 14:49:50,393 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'BusinessPartners', 'request': None, 'response': {'status_code': 400, 'text': '{\n   "error" : {\n      "code" : -1,\n      "message" : {\n         "lang" : "en-us",\n         "value" : "CServiceData::SetPropertyValueString failed; Value too long in property \'Country\' of \'BPAddress\'"\n      }\n   }\n}\n'}, 'status': 'failure'}
2025-08-05 14:49:50,396 - sync_service - ERROR - Failed to create customer in SAP: HTTP 400: {
   "error" : {
      "code" : -1,
      "message" : {
         "lang" : "en-us",
         "value" : "CServiceData::SetPropertyValueString failed; Value too long in property 'Country' of 'BPAddress'"
      }
   }
}

2025-08-05 14:49:50,397 - sync_service - ERROR - Failed to create customer for order #1480
2025-08-05 14:50:18,267 - sync_service - INFO - Initialized Shopify client for store: Local Store (local)
2025-08-05 14:50:18,283 - sync_service - INFO - API Call: {'service': 'shopify', 'endpoint': 'graphql_local', 'request': {'query': '\n        query getOrders($first: Int!) {\n            orders(first: $first) {\n                edges {\n                    node {\n                        id\n                        name\n                        createdAt\n                    }\n                }\n            }\n        }\n        ', 'variables': {'first': 1}}, 'response': None, 'status': None}
2025-08-05 14:50:28,293 - sync_service - ERROR - GraphQL query error for store local: 
2025-08-05 14:50:29,090 - sync_service - INFO - SAP logging client login successful
2025-08-05 14:50:29,834 - sync_service - INFO - API log added to SAP: shopify - /admin/api/graphql_local - failure
2025-08-05 14:50:29,846 - sync_service - INFO - API Call: {'service': 'shopify', 'endpoint': 'graphql_local', 'request': {'query': '\n            query getOrders($first: Int!, $after: String) {\n                orders(first: $first, after: $after, sortKey: CREATED_AT, reverse: true) {\n                    edges {\n                        node {\n                            id\n                            name\n                            createdAt\n                            tags\n                            totalPriceSet {\n                                shopMoney {\n                                    amount\n                                    currencyCode\n                                }\n                            }\n                            subtotalPriceSet {\n                                shopMoney {\n                                    amount\n                                    currencyCode\n                                }\n                            }\n                            totalTaxSet {\n                                shopMoney {\n                                    amount\n                                    currencyCode\n                                }\n                            }\n                            totalShippingPriceSet {\n                                shopMoney {\n                                    amount\n                                    currencyCode\n                                }\n                            }\n                            customer {\n                                id\n                                firstName\n                                lastName\n                                email\n                                phone\n                                addresses {\n                                    address1\n                                    address2\n                                    city\n                                    province\n                                    zip\n                                    country\n                                    phone\n                                }\n                            }\n                            shippingAddress {\n                                address1\n                                address2\n                                city\n                                province\n                                zip\n                                country\n                                phone\n                            }\n                            billingAddress {\n                                address1\n                                address2\n                                city\n                                province\n                                zip\n                                country\n                                phone\n                            }\n                            lineItems(first: 50) {\n                                edges {\n                                    node {\n                                        id\n                                        quantity\n                                        sku\n                                        title\n                                        variant {\n                                            id\n                                            sku\n                                            price\n                                            product {\n                                                id\n                                                title\n                                            }\n                                        }\n                                        discountedTotalSet {\n                                            shopMoney {\n                                                amount\n                                                currencyCode\n                                            }\n                                        }\n                                    }\n                                }\n                            }\n                            note\n                        }\n                    }\n                    pageInfo {\n                        hasNextPage\n                        endCursor\n                    }\n                }\n            }\n            ', 'variables': {'first': 20, 'after': None}}, 'response': None, 'status': None}
2025-08-05 14:50:30,650 - sync_service - INFO - API Call: {'service': 'shopify', 'endpoint': 'graphql_local', 'request': None, 'response': {'orders': {'edges': [{'node': {'id': 'gid://shopify/Order/6318310686786', 'name': '#1480', 'createdAt': '2025-08-05T09:59:13Z', 'tags': [], 'totalPriceSet': {'shopMoney': {'amount': '5200.0', 'currencyCode': 'EGP'}}, 'subtotalPriceSet': {'shopMoney': {'amount': '5000.0', 'currencyCode': 'EGP'}}, 'totalTaxSet': {'shopMoney': {'amount': '0.0', 'currencyCode': 'EGP'}}, 'totalShippingPriceSet': {'shopMoney': {'amount': '200.0', 'currencyCode': 'EGP'}}, 'customer': {'id': 'gid://shopify/Customer/8037256233026', 'firstName': 'Omnia', 'lastName': 'Ezz Elarab', 'email': 'nezzelarab@ezz-elarab.com', 'phone': None, 'addresses': [{'address1': 'Palm hills 6th october, phase 1', 'address2': 'Villa b53', 'city': 'Giza', 'province': '6th of October', 'zip': '00000', 'country': 'Egypt', 'phone': '00201003370743'}]}, 'shippingAddress': {'address1': 'Palm hills 6th october, phase 1', 'address2': 'Villa b53', 'city': 'Giza', 'province': '6th of October', 'zip': '00000', 'country': 'Egypt', 'phone': '00201003370743'}, 'billingAddress': {'address1': 'Palm hills 6th october, phase 1', 'address2': 'Villa b53', 'city': 'Giza', 'province': '6th of October', 'zip': '00000', 'country': 'Egypt', 'phone': '00201003370743'}, 'lineItems': {'edges': [{'node': {'id': 'gid://shopify/LineItem/15830693707842', 'quantity': 1, 'sku': 'FG-0000632', 'title': 'Ember Earrings', 'variant': {'id': 'gid://shopify/ProductVariant/42194952650818', 'sku': 'FG-0000632', 'price': '5000.00', 'product': {'id': 'gid://shopify/Product/7490852847682', 'title': 'Ember Earrings'}}, 'discountedTotalSet': {'shopMoney': {'amount': '5000.0', 'currencyCode': 'EGP'}}}}]}, 'note': None}}, {'node': {'id': 'gid://shopify/Order/6318078263362', 'name': '#1479', 'createdAt': '2025-08-05T04:44:47Z', 'tags': [], 'totalPriceSet': {'shopMoney': {'amount': '7460.0', 'currencyCode': 'EGP'}}, 'subtotalPriceSet': {'shopMoney': {'amount': '7300.0', 'currencyCode': 'EGP'}}, 'totalTaxSet': {'shopMoney': {'amount': '0.0', 'currencyCode': 'EGP'}}, 'totalShippingPriceSet': {'shopMoney': {'amount': '160.0', 'currencyCode': 'EGP'}}, 'customer': {'id': 'gid://shopify/Customer/8035661905986', 'firstName': 'Ziad', 'lastName': 'Fawi', 'email': 'ziadfawi6@gmail.com', 'phone': None, 'addresses': [{'address1': None, 'address2': None, 'city': None, 'province': None, 'zip': None, 'country': 'Egypt', 'phone': None}, {'address1': '46 soultan street behind ices hospital', 'address2': 'Number of the apartment 17', 'city': 'Alexandria', 'province': 'Alexandria', 'zip': None, 'country': 'Egypt', 'phone': '01271088966'}]}, 'shippingAddress': {'address1': '46 soultan street behind ices hospital', 'address2': 'Number of the apartment 17', 'city': 'Alexandria', 'province': 'Alexandria', 'zip': None, 'country': 'Egypt', 'phone': '01271088966'}, 'billingAddress': {'address1': '46 soultan street behind ices hospital', 'address2': 'Number of the apartment 17', 'city': 'Alexandria', 'province': 'Alexandria', 'zip': None, 'country': 'Egypt', 'phone': '01271088966'}, 'lineItems': {'edges': [{'node': {'id': 'gid://shopify/LineItem/15830286434370', 'quantity': 1, 'sku': 'FG-0000077', 'title': 'Sulla Luna Mix Earrings', 'variant': {'id': 'gid://shopify/ProductVariant/42003146276930', 'sku': 'FG-0000077', 'price': '7300.00', 'product': {'id': 'gid://shopify/Product/7442022203458', 'title': 'Sulla Luna Mix Earrings'}}, 'discountedTotalSet': {'shopMoney': {'amount': '7300.0', 'currencyCode': 'EGP'}}}}]}, 'note': None}}, {'node': {'id': 'gid://shopify/Order/6317218398274', 'name': '#1478', 'createdAt': '2025-08-04T18:33:12Z', 'tags': [], 'totalPriceSet': {'shopMoney': {'amount': '2880.0', 'currencyCode': 'EGP'}}, 'subtotalPriceSet': {'shopMoney': {'amount': '2880.0', 'currencyCode': 'EGP'}}, 'totalTaxSet': {'shopMoney': {'amount': '0.0', 'currencyCode': 'EGP'}}, 'totalShippingPriceSet': {'shopMoney': {'amount': '0.0', 'currencyCode': 'EGP'}}, 'customer': {'id': 'gid://shopify/Customer/8032449527874', 'firstName': 'Mahmoud', 'lastName': 'Ayman', 'email': 'mahmoudayman80@yahoo.com', 'phone': None, 'addresses': [{'address1': None, 'address2': None, 'city': None, 'province': None, 'zip': None, 'country': 'Egypt', 'phone': None}, {'address1': '5370 el mokattam', 'address2': None, 'city': 'Cairo', 'province': 'Cairo', 'zip': None, 'country': 'Egypt', 'phone': '01111346333'}]}, 'shippingAddress': None, 'billingAddress': {'address1': '5370 el mokattam', 'address2': None, 'city': 'Cairo', 'province': 'Cairo', 'zip': None, 'country': 'Egypt', 'phone': '01111346333'}, 'lineItems': {'edges': [{'node': {'id': 'gid://shopify/LineItem/15828170047554', 'quantity': 1, 'sku': 'FG-0000589', 'title': 'Una Ring', 'variant': {'id': 'gid://shopify/ProductVariant/42003153518658', 'sku': 'FG-0000589', 'price': '3200.00', 'product': {'id': 'gid://shopify/Product/7442026070082', 'title': 'Una Ring'}}, 'discountedTotalSet': {'shopMoney': {'amount': '3200.0', 'currencyCode': 'EGP'}}}}]}, 'note': None}}, {'node': {'id': 'gid://shopify/Order/6317035520066', 'name': '#1477', 'createdAt': '2025-08-04T16:50:11Z', 'tags': [], 'totalPriceSet': {'shopMoney': {'amount': '5060.0', 'currencyCode': 'EGP'}}, 'subtotalPriceSet': {'shopMoney': {'amount': '4900.0', 'currencyCode': 'EGP'}}, 'totalTaxSet': {'shopMoney': {'amount': '0.0', 'currencyCode': 'EGP'}}, 'totalShippingPriceSet': {'shopMoney': {'amount': '160.0', 'currencyCode': 'EGP'}}, 'customer': {'id': 'gid://shopify/Customer/8031975374914', 'firstName': 'Passant', 'lastName': 'Dawood', 'email': 'passantdawood@gmail.com', 'phone': None, 'addresses': [{'address1': '399 elguish road san stefano grand plaza', 'address2': '1', 'city': 'Alexandria', 'province': 'Alexandria', 'zip': None, 'country': 'Egypt', 'phone': '01223100564'}]}, 'shippingAddress': {'address1': '399 elguish road san stefano grand plaza', 'address2': '1', 'city': 'Alexandria', 'province': 'Alexandria', 'zip': None, 'country': 'Egypt', 'phone': '01223100564'}, 'billingAddress': {'address1': '399 elguish road san stefano grand plaza', 'address2': '1', 'city': 'Alexandria', 'province': 'Alexandria', 'zip': None, 'country': 'Egypt', 'phone': '01223100564'}, 'lineItems': {'edges': [{'node': {'id': 'gid://shopify/LineItem/15827708805186', 'quantity': 1, 'sku': 'FG-0000688', 'title': 'Multi-way Halo Ring', 'variant': {'id': 'gid://shopify/ProductVariant/42194980896834', 'sku': 'FG-0000688', 'price': '4900.00', 'product': {'id': 'gid://shopify/Product/7490853339202', 'title': 'Multi-way Halo Ring'}}, 'discountedTotalSet': {'shopMoney': {'amount': '4900.0', 'currencyCode': 'EGP'}}}}]}, 'note': None}}, {'node': {'id': 'gid://shopify/Order/6317030244418', 'name': '#1476', 'createdAt': '2025-08-04T16:47:03Z', 'tags': [], 'totalPriceSet': {'shopMoney': {'amount': '5320.0', 'currencyCode': 'EGP'}}, 'subtotalPriceSet': {'shopMoney': {'amount': '5200.0', 'currencyCode': 'EGP'}}, 'totalTaxSet': {'shopMoney': {'amount': '0.0', 'currencyCode': 'EGP'}}, 'totalShippingPriceSet': {'shopMoney': {'amount': '120.0', 'currencyCode': 'EGP'}}, 'customer': {'id': 'gid://shopify/Customer/8031970918466', 'firstName': 'Noha', 'lastName': 'Emad', 'email': 'noha@kitshe-eg.com', 'phone': None, 'addresses': [{'address1': 'التجمع الخامس االدور الاول شقه ٤جنوب الأكاديمية أ شارع ان', 'address2': 'التجمع الخامس- جنوب الاكادميه أ شارع انس ابن مالك فيلا ٢٨٦', 'city': 'Cairo', 'province': 'Cairo', 'zip': '11865', 'country': 'Egypt', 'phone': '01200008517'}]}, 'shippingAddress': {'address1': 'التجمع الخامس االدور الاول شقه ٤جنوب الأكاديمية أ شارع ان', 'address2': 'التجمع الخامس- جنوب الاكادميه أ شارع انس ابن مالك فيلا ٢٨٦', 'city': 'Cairo', 'province': 'Cairo', 'zip': '11865', 'country': 'Egypt', 'phone': '01200008517'}, 'billingAddress': {'address1': 'التجمع الخامس االدور الاول شقه ٤جنوب الأكاديمية أ شارع ان', 'address2': 'التجمع الخامس- جنوب الاكادميه أ شارع انس ابن مالك فيلا ٢٨٦', 'city': 'Cairo', 'province': 'Cairo', 'zip': '11865', 'country': 'Egypt', 'phone': '01200008517'}, 'lineItems': {'edges': [{'node': {'id': 'gid://shopify/LineItem/15827697336386', 'quantity': 1, 'sku': 'FG-0000640', 'title': 'Essence Earrings', 'variant': {'id': 'gid://shopify/ProductVariant/42194952945730', 'sku': 'FG-0000640', 'price': '5200.00', 'product': {'id': 'gid://shopify/Product/7490852945986', 'title': 'Essence Earrings'}}, 'discountedTotalSet': {'shopMoney': {'amount': '5200.0', 'currencyCode': 'EGP'}}}}]}, 'note': None}}, {'node': {'id': 'gid://shopify/Order/6316680347714', 'name': '#1475', 'createdAt': '2025-08-04T12:56:00Z', 'tags': [], 'totalPriceSet': {'shopMoney': {'amount': '5120.0', 'currencyCode': 'EGP'}}, 'subtotalPriceSet': {'shopMoney': {'amount': '5000.0', 'currencyCode': 'EGP'}}, 'totalTaxSet': {'shopMoney': {'amount': '0.0', 'currencyCode': 'EGP'}}, 'totalShippingPriceSet': {'shopMoney': {'amount': '120.0', 'currencyCode': 'EGP'}}, 'customer': {'id': 'gid://shopify/Customer/8031264636994', 'firstName': 'Hanan', 'lastName': 'HASSAN', 'email': 'hananhassan1204@gmail.com', 'phone': None, 'addresses': [{'address1': 'القاهرة الجديدة / كمبوند سوديك ڤيليت عمارة واحد إف شقة أرضي زيرو أربعة', 'address2': '04 الدور الارضي', 'city': 'القاهرة', 'province': 'Cairo', 'zip': '11511', 'country': 'Egypt', 'phone': '01000340138'}]}, 'shippingAddress': {'address1': 'القاهرة الجديدة / كمبوند سوديك ڤيليت عمارة واحد إف شقة أرضي زيرو أربعة', 'address2': '04 الدور الارضي', 'city': 'القاهرة', 'province': 'Cairo', 'zip': '11511', 'country': 'Egypt', 'phone': '01000340138'}, 'billingAddress': {'address1': 'القاهرة الجديدة / كمبوند سوديك ڤيليت عمارة واحد إف شقة أرضي زيرو أربعة', 'address2': '04 الدور الارضي', 'city': 'القاهرة', 'province': 'Cairo', 'zip': '11511', 'country': 'Egypt', 'phone': '01000340138'}, 'lineItems': {'edges': [{'node': {'id': 'gid://shopify/LineItem/15826901237826', 'quantity': 1, 'sku': 'FG-0000632', 'title': 'Ember Earrings', 'variant': {'id': 'gid://shopify/ProductVariant/42194952650818', 'sku': 'FG-0000632', 'price': '5000.00', 'product': {'id': 'gid://shopify/Product/7490852847682', 'title': 'Ember Earrings'}}, 'discountedTotalSet': {'shopMoney': {'amount': '5000.0', 'currencyCode': 'EGP'}}}}]}, 'note': None}}, {'node': {'id': 'gid://shopify/Order/6316580536386', 'name': '#1474', 'createdAt': '2025-08-04T11:08:05Z', 'tags': [], 'totalPriceSet': {'shopMoney': {'amount': '6020.0', 'currencyCode': 'EGP'}}, 'subtotalPriceSet': {'shopMoney': {'amount': '5900.0', 'currencyCode': 'EGP'}}, 'totalTaxSet': {'shopMoney': {'amount': '0.0', 'currencyCode': 'EGP'}}, 'totalShippingPriceSet': {'shopMoney': {'amount': '120.0', 'currencyCode': 'EGP'}}, 'customer': {'id': 'gid://shopify/Customer/8031120457794', 'firstName': 'Nourhan', 'lastName': 'Swellam', 'email': 'swellam@aucegypt.edu', 'phone': None, 'addresses': [{'address1': '144 el banafseg 11 ', 'address2': 'Villa 144', 'city': 'Cairo', 'province': 'Cairo', 'zip': '11341', 'country': 'Egypt', 'phone': '+201003928976'}]}, 'shippingAddress': {'address1': '144 el banafseg 11', 'address2': 'Villa 144', 'city': 'Cairo', 'province': 'Cairo', 'zip': '11341', 'country': 'Egypt', 'phone': '+201003928976'}, 'billingAddress': {'address1': '144 el banafseg 11', 'address2': 'Villa 144', 'city': 'Cairo', 'province': 'Cairo', 'zip': '11341', 'country': 'Egypt', 'phone': '+201003928976'}, 'lineItems': {'edges': [{'node': {'id': 'gid://shopify/LineItem/15826707382338', 'quantity': 1, 'sku': 'FG-0000369', 'title': 'Mini Sahara Mix Hoop', 'variant': {'id': 'gid://shopify/ProductVariant/42003146997826', 'sku': 'FG-0000369', 'price': '5900.00', 'product': {'id': 'gid://shopify/Product/7442022989890', 'title': 'Mini Sahara Mix Hoop'}}, 'discountedTotalSet': {'shopMoney': {'amount': '5900.0', 'currencyCode': 'EGP'}}}}]}, 'note': None}}, {'node': {'id': 'gid://shopify/Order/6315006394434', 'name': '#1473', 'createdAt': '2025-08-03T15:21:25Z', 'tags': [], 'totalPriceSet': {'shopMoney': {'amount': '4420.0', 'currencyCode': 'EGP'}}, 'subtotalPriceSet': {'shopMoney': {'amount': '4300.0', 'currencyCode': 'EGP'}}, 'totalTaxSet': {'shopMoney': {'amount': '0.0', 'currencyCode': 'EGP'}}, 'totalShippingPriceSet': {'shopMoney': {'amount': '120.0', 'currencyCode': 'EGP'}}, 'customer': {'id': 'gid://shopify/Customer/8015867478082', 'firstName': 'Yomna', 'lastName': 'Sherif', 'email': 'yomna.sherif.nawal@gmail.com', 'phone': None, 'addresses': [{'address1': 'Group 15 , building 5 , apartment 22', 'address2': 'Group 15 , building 5 , apartment 22', 'city': 'Rehab City', 'province': 'Cairo', 'zip': '0000', 'country': 'Egypt', 'phone': '+201003988787'}, {'address1': None, 'address2': None, 'city': None, 'province': None, 'zip': None, 'country': 'Egypt', 'phone': None}]}, 'shippingAddress': {'address1': 'Group 15 , building 5 , apartment 22', 'address2': 'Group 15 , building 5 , apartment 22', 'city': 'Rehab City', 'province': 'Cairo', 'zip': '0000', 'country': 'Egypt', 'phone': '+201003988787'}, 'billingAddress': {'address1': 'Group 15 , building 5 , apartment 22', 'address2': 'Group 15 , building 5 , apartment 22', 'city': 'Rehab City', 'province': 'Cairo', 'zip': '0000', 'country': 'Egypt', 'phone': '+201003988787'}, 'lineItems': {'edges': [{'node': {'id': 'gid://shopify/LineItem/15822752055362', 'quantity': 1, 'sku': 'FG-0000499', 'title': 'Cassandra Mix Pinky Ring', 'variant': {'id': 'gid://shopify/ProductVariant/42003149815874', 'sku': 'FG-0000499', 'price': '4300.00', 'product': {'id': 'gid://shopify/Product/7442024235074', 'title': 'Cassandra Mix Pinky Ring'}}, 'discountedTotalSet': {'shopMoney': {'amount': '4300.0', 'currencyCode': 'EGP'}}}}]}, 'note': None}}, {'node': {'id': 'gid://shopify/Order/6314877780034', 'name': '#1472', 'createdAt': '2025-08-03T13:47:12Z', 'tags': [], 'totalPriceSet': {'shopMoney': {'amount': '121.0', 'currencyCode': 'EGP'}}, 'subtotalPriceSet': {'shopMoney': {'amount': '1.0', 'currencyCode': 'EGP'}}, 'totalTaxSet': {'shopMoney': {'amount': '0.0', 'currencyCode': 'EGP'}}, 'totalShippingPriceSet': {'shopMoney': {'amount': '120.0', 'currencyCode': 'EGP'}}, 'customer': {'id': 'gid://shopify/Customer/7539785334850', 'firstName': 'Karim', 'lastName': 'Wafik', 'email': 'karimwafik.kw@gmail.com', 'phone': None, 'addresses': [{'address1': '97 Marghany st., Heliopolis, Cairo, Egypt', 'address2': None, 'city': 'Cairo', 'province': 'Cairo', 'zip': '21113', 'country': 'Egypt', 'phone': '+201005527292'}, {'address1': 'Stone Residence Compound 306, Third Settlement', 'address2': '9', 'city': 'Cairo', 'province': 'Cairo', 'zip': None, 'country': 'Egypt', 'phone': '01005527292'}]}, 'shippingAddress': {'address1': 'Stone Residence Compound 306, Third Settlement', 'address2': '9', 'city': 'Cairo', 'province': 'Cairo', 'zip': None, 'country': 'Egypt', 'phone': '01005527292'}, 'billingAddress': {'address1': 'Stone Residence Compound 306, Third Settlement', 'address2': '9', 'city': 'Cairo', 'province': 'Cairo', 'zip': None, 'country': 'Egypt', 'phone': '01005527292'}, 'lineItems': {'edges': [{'node': {'id': 'gid://shopify/LineItem/15822411366466', 'quantity': 1, 'sku': None, 'title': 'karim test', 'variant': {'id': 'gid://shopify/ProductVariant/42361056985154', 'sku': None, 'price': '1.00', 'product': {'id': 'gid://shopify/Product/7522803515458', 'title': 'karim test'}}, 'discountedTotalSet': {'shopMoney': {'amount': '1.0', 'currencyCode': 'EGP'}}}}]}, 'note': None}}, {'node': {'id': 'gid://shopify/Order/6314801463362', 'name': '#1471', 'createdAt': '2025-08-03T12:37:41Z', 'tags': [], 'totalPriceSet': {'shopMoney': {'amount': '4620.0', 'currencyCode': 'EGP'}}, 'subtotalPriceSet': {'shopMoney': {'amount': '4500.0', 'currencyCode': 'EGP'}}, 'totalTaxSet': {'shopMoney': {'amount': '0.0', 'currencyCode': 'EGP'}}, 'totalShippingPriceSet': {'shopMoney': {'amount': '120.0', 'currencyCode': 'EGP'}}, 'customer': {'id': 'gid://shopify/Customer/8028986572866', 'firstName': 'Manal', 'lastName': 'Dorgham', 'email': 'manaldorgham4@gmail.com', 'phone': None, 'addresses': [{'address1': 'Moon valley compound. New Cairo', 'address2': '45 D', 'city': 'Cairo', 'province': 'Cairo', 'zip': None, 'country': 'Egypt', 'phone': '01222455309'}]}, 'shippingAddress': {'address1': 'Moon valley compound. New Cairo', 'address2': '45 D', 'city': 'Cairo', 'province': 'Cairo', 'zip': None, 'country': 'Egypt', 'phone': '01222455309'}, 'billingAddress': {'address1': 'Moon valley compound. New Cairo', 'address2': '45 D', 'city': 'Cairo', 'province': 'Cairo', 'zip': None, 'country': 'Egypt', 'phone': '01222455309'}, 'lineItems': {'edges': [{'node': {'id': 'gid://shopify/LineItem/15822235631682', 'quantity': 1, 'sku': 'FG-0000544', 'title': 'Floway ring set', 'variant': {'id': 'gid://shopify/ProductVariant/42003150602306', 'sku': 'FG-0000544', 'price': '4500.00', 'product': {'id': 'gid://shopify/Product/7442024890434', 'title': 'Floway ring set'}}, 'discountedTotalSet': {'shopMoney': {'amount': '4500.0', 'currencyCode': 'EGP'}}}}]}, 'note': None}}, {'node': {'id': 'gid://shopify/Order/6314790420546', 'name': '#1470', 'createdAt': '2025-08-03T12:26:20Z', 'tags': [], 'totalPriceSet': {'shopMoney': {'amount': '7600.0', 'currencyCode': 'EGP'}}, 'subtotalPriceSet': {'shopMoney': {'amount': '7600.0', 'currencyCode': 'EGP'}}, 'totalTaxSet': {'shopMoney': {'amount': '0.0', 'currencyCode': 'EGP'}}, 'totalShippingPriceSet': {'shopMoney': {'amount': '0.0', 'currencyCode': 'EGP'}}, 'customer': {'id': 'gid://shopify/Customer/7539785334850', 'firstName': 'Karim', 'lastName': 'Wafik', 'email': 'karimwafik.kw@gmail.com', 'phone': None, 'addresses': [{'address1': '97 Marghany st., Heliopolis, Cairo, Egypt', 'address2': None, 'city': 'Cairo', 'province': 'Cairo', 'zip': '21113', 'country': 'Egypt', 'phone': '+201005527292'}, {'address1': 'Stone Residence Compound 306, Third Settlement', 'address2': '9', 'city': 'Cairo', 'province': 'Cairo', 'zip': None, 'country': 'Egypt', 'phone': '01005527292'}]}, 'shippingAddress': None, 'billingAddress': None, 'lineItems': {'edges': [{'node': {'id': 'gid://shopify/LineItem/15822212661314', 'quantity': 1, 'sku': 'FG-0000645', 'title': 'Flare Earrings', 'variant': {'id': 'gid://shopify/ProductVariant/42277872271426', 'sku': 'FG-0000645', 'price': '3800.00', 'product': {'id': 'gid://shopify/Product/7506409586754', 'title': 'Flare Earrings'}}, 'discountedTotalSet': {'shopMoney': {'amount': '3800.0', 'currencyCode': 'EGP'}}}}, {'node': {'id': 'gid://shopify/LineItem/15822221770818', 'quantity': 1, 'sku': None, 'title': 'Gift Card', 'variant': None, 'discountedTotalSet': {'shopMoney': {'amount': '3800.0', 'currencyCode': 'EGP'}}}}]}, 'note': None}}, {'node': {'id': 'gid://shopify/Order/6314786357314', 'name': '#1469', 'createdAt': '2025-08-03T12:21:46Z', 'tags': [], 'totalPriceSet': {'shopMoney': {'amount': '6900.0', 'currencyCode': 'EGP'}}, 'subtotalPriceSet': {'shopMoney': {'amount': '6900.0', 'currencyCode': 'EGP'}}, 'totalTaxSet': {'shopMoney': {'amount': '0.0', 'currencyCode': 'EGP'}}, 'totalShippingPriceSet': {'shopMoney': {'amount': '0.0', 'currencyCode': 'EGP'}}, 'customer': None, 'shippingAddress': None, 'billingAddress': None, 'lineItems': {'edges': [{'node': {'id': 'gid://shopify/LineItem/15822205321282', 'quantity': 1, 'sku': 'FG-0000345', 'title': 'Mini Harmonia Earrings', 'variant': {'id': 'gid://shopify/ProductVariant/42003146801218', 'sku': 'FG-0000345', 'price': '6900.00', 'product': {'id': 'gid://shopify/Product/7442022793282', 'title': 'Mini Harmonia Earrings'}}, 'discountedTotalSet': {'shopMoney': {'amount': '6900.0', 'currencyCode': 'EGP'}}}}]}, 'note': None}}, {'node': {'id': 'gid://shopify/Order/6314775969858', 'name': '#1468', 'createdAt': '2025-08-03T12:12:09Z', 'tags': [], 'totalPriceSet': {'shopMoney': {'amount': '2920.0', 'currencyCode': 'EGP'}}, 'subtotalPriceSet': {'shopMoney': {'amount': '2800.0', 'currencyCode': 'EGP'}}, 'totalTaxSet': {'shopMoney': {'amount': '0.0', 'currencyCode': 'EGP'}}, 'totalShippingPriceSet': {'shopMoney': {'amount': '120.0', 'currencyCode': 'EGP'}}, 'customer': {'id': 'gid://shopify/Customer/8028955639874', 'firstName': 'Mariam', 'lastName': 'Mackawy', 'email': 'mariammackawy5@gmail.com', 'phone': None, 'addresses': [{'address1': 'الرحاب ٢، مجموعة ١٣١، عمارة ٢٠، شقة ٤١', 'address2': '41 El Rehab2, Group 131, Building 20, Apartment', 'city': 'Cairo', 'province': 'Cairo', 'zip': '11511', 'country': 'Egypt', 'phone': '01285358540'}]}, 'shippingAddress': {'address1': 'الرحاب ٢، مجموعة ١٣١، عمارة ٢٠، شقة ٤١', 'address2': '41 El Rehab2, Group 131, Building 20, Apartment', 'city': 'Cairo', 'province': 'Cairo', 'zip': '11511', 'country': 'Egypt', 'phone': '01285358540'}, 'billingAddress': {'address1': 'الرحاب ٢، مجموعة ١٣١، عمارة ٢٠، شقة ٤١', 'address2': '41 El Rehab2, Group 131, Building 20, Apartment', 'city': 'Cairo', 'province': 'Cairo', 'zip': '11511', 'country': 'Egypt', 'phone': '01285358540'}, 'lineItems': {'edges': [{'node': {'id': 'gid://shopify/LineItem/15822184742978', 'quantity': 1, 'sku': 'FG-0000498', 'title': 'Cassandra Pinky Ring', 'variant': {'id': 'gid://shopify/ProductVariant/42003149881410', 'sku': 'FG-0000498', 'price': '2800.00', 'product': {'id': 'gid://shopify/Product/7442024300610', 'title': 'Cassandra Pinky Ring'}}, 'discountedTotalSet': {'shopMoney': {'amount': '2800.0', 'currencyCode': 'EGP'}}}}]}, 'note': None}}, {'node': {'id': 'gid://shopify/Order/6314438000706', 'name': '#1467', 'createdAt': '2025-08-03T04:32:29Z', 'tags': [], 'totalPriceSet': {'shopMoney': {'amount': '3200.0', 'currencyCode': 'EGP'}}, 'subtotalPriceSet': {'shopMoney': {'amount': '3200.0', 'currencyCode': 'EGP'}}, 'totalTaxSet': {'shopMoney': {'amount': '0.0', 'currencyCode': 'EGP'}}, 'totalShippingPriceSet': {'shopMoney': {'amount': '0.0', 'currencyCode': 'EGP'}}, 'customer': {'id': 'gid://shopify/Customer/8026031751234', 'firstName': 'sally', 'lastName': 'monir', 'email': 'sallymonir@yahoo.com', 'phone': None, 'addresses': [{'address1': '113, st. 17, First Area, fifth zone, fifth settlement', 'address2': '2', 'city': 'New Cairo', 'province': 'Cairo', 'zip': None, 'country': 'Egypt', 'phone': '+201273099926'}]}, 'shippingAddress': None, 'billingAddress': {'address1': '113, st. 17, First Area, fifth zone, fifth settlement', 'address2': '2', 'city': 'New Cairo', 'province': 'Cairo', 'zip': None, 'country': 'Egypt', 'phone': '+201273099926'}, 'lineItems': {'edges': [{'node': {'id': 'gid://shopify/LineItem/15821581156418', 'quantity': 1, 'sku': 'FG-0000468', 'title': 'Frost Ring', 'variant': {'id': 'gid://shopify/ProductVariant/42003151618114', 'sku': 'FG-0000468', 'price': '3200.00', 'product': {'id': 'gid://shopify/Product/7442025381954', 'title': 'Frost Ring'}}, 'discountedTotalSet': {'shopMoney': {'amount': '3200.0', 'currencyCode': 'EGP'}}}}]}, 'note': None}}, {'node': {'id': 'gid://shopify/Order/6312813002818', 'name': '#1466', 'createdAt': '2025-08-02T11:04:39Z', 'tags': [], 'totalPriceSet': {'shopMoney': {'amount': '4420.0', 'currencyCode': 'EGP'}}, 'subtotalPriceSet': {'shopMoney': {'amount': '4300.0', 'currencyCode': 'EGP'}}, 'totalTaxSet': {'shopMoney': {'amount': '0.0', 'currencyCode': 'EGP'}}, 'totalShippingPriceSet': {'shopMoney': {'amount': '120.0', 'currencyCode': 'EGP'}}, 'customer': {'id': 'gid://shopify/Customer/8026480607298', 'firstName': 'Nadine', 'lastName': 'GALAL', 'email': 'nadinegalal09@gmail.com', 'phone': None, 'addresses': [{'address1': 'امام ٣١ شارع ابراهيم حلمي الدور ٣ شقة ١١', 'address2': 'الدور ٣ شقة ١١', 'city': 'Alexandria', 'province': 'Alexandria', 'zip': None, 'country': 'Egypt', 'phone': '01284444565'}]}, 'shippingAddress': {'address1': 'امام ٣١ شارع ابراهيم حلمي الدور ٣ شقة ١١', 'address2': 'الدور ٣ شقة ١١', 'city': 'Alexandria', 'province': 'Alexandria', 'zip': None, 'country': 'Egypt', 'phone': '01284444565'}, 'billingAddress': {'address1': 'امام ٣١ شارع ابراهيم حلمي الدور ٣ شقة ١١', 'address2': 'الدور ٣ شقة ١١', 'city': 'Alexandria', 'province': 'Alexandria', 'zip': None, 'country': 'Egypt', 'phone': '01284444565'}, 'lineItems': {'edges': [{'node': {'id': 'gid://shopify/LineItem/15817138307138', 'quantity': 1, 'sku': 'FG-0000499', 'title': 'Cassandra Mix Pinky Ring', 'variant': {'id': 'gid://shopify/ProductVariant/42003149815874', 'sku': 'FG-0000499', 'price': '4300.00', 'product': {'id': 'gid://shopify/Product/7442024235074', 'title': 'Cassandra Mix Pinky Ring'}}, 'discountedTotalSet': {'shopMoney': {'amount': '4300.0', 'currencyCode': 'EGP'}}}}]}, 'note': None}}, {'node': {'id': 'gid://shopify/Order/6312140603458', 'name': '#1465', 'createdAt': '2025-08-01T23:27:00Z', 'tags': [], 'totalPriceSet': {'shopMoney': {'amount': '8860.0', 'currencyCode': 'EGP'}}, 'subtotalPriceSet': {'shopMoney': {'amount': '8700.0', 'currencyCode': 'EGP'}}, 'totalTaxSet': {'shopMoney': {'amount': '0.0', 'currencyCode': 'EGP'}}, 'totalShippingPriceSet': {'shopMoney': {'amount': '160.0', 'currencyCode': 'EGP'}}, 'customer': {'id': 'gid://shopify/Customer/8024664145986', 'firstName': 'Mai', 'lastName': 'Aladdin', 'email': 'mayyo69@gmail.com', 'phone': None, 'addresses': [{'address1': 'Sohag - shar2', 'address2': None, 'city': 'Sohag', 'province': 'Sohag', 'zip': None, 'country': 'Egypt', 'phone': '01027733614'}]}, 'shippingAddress': {'address1': 'Sohag - shar2', 'address2': None, 'city': 'Sohag', 'province': 'Sohag', 'zip': None, 'country': 'Egypt', 'phone': '01027733614'}, 'billingAddress': {'address1': 'Sohag - shar2', 'address2': None, 'city': 'Sohag', 'province': 'Sohag', 'zip': None, 'country': 'Egypt', 'phone': '01027733614'}, 'lineItems': {'edges': [{'node': {'id': 'gid://shopify/LineItem/15815787151426', 'quantity': 1, 'sku': 'FG-0000498', 'title': 'Cassandra Pinky Ring', 'variant': {'id': 'gid://shopify/ProductVariant/42003149881410', 'sku': 'FG-0000498', 'price': '2800.00', 'product': {'id': 'gid://shopify/Product/7442024300610', 'title': 'Cassandra Pinky Ring'}}, 'discountedTotalSet': {'shopMoney': {'amount': '2800.0', 'currencyCode': 'EGP'}}}}, {'node': {'id': 'gid://shopify/LineItem/15815787184194', 'quantity': 1, 'sku': 'FG-0000575', 'title': 'Janus Cuff', 'variant': {'id': 'gid://shopify/ProductVariant/42003153256514', 'sku': 'FG-0000575', 'price': '5900.00', 'product': {'id': 'gid://shopify/Product/7442025906242', 'title': 'Janus Cuff'}}, 'discountedTotalSet': {'shopMoney': {'amount': '5900.0', 'currencyCode': 'EGP'}}}}]}, 'note': None}}, {'node': {'id': 'gid://shopify/Order/6311861026882', 'name': '#1464', 'createdAt': '2025-08-01T20:45:45Z', 'tags': [], 'totalPriceSet': {'shopMoney': {'amount': '4800.0', 'currencyCode': 'EGP'}}, 'subtotalPriceSet': {'shopMoney': {'amount': '4800.0', 'currencyCode': 'EGP'}}, 'totalTaxSet': {'shopMoney': {'amount': '0.0', 'currencyCode': 'EGP'}}, 'totalShippingPriceSet': {'shopMoney': {'amount': '0.0', 'currencyCode': 'EGP'}}, 'customer': {'id': 'gid://shopify/Customer/8024130191426', 'firstName': 'Ibrahim', 'lastName': 'ElGohary', 'email': 'hima22may@hotmail.com', 'phone': None, 'addresses': [{'address1': 'Wady compound', 'address2': 'Home', 'city': 'Cairo', 'province': 'Cairo', 'zip': None, 'country': 'Egypt', 'phone': '01007217010'}]}, 'shippingAddress': None, 'billingAddress': {'address1': 'Wady compound', 'address2': 'Home', 'city': 'Cairo', 'province': 'Cairo', 'zip': None, 'country': 'Egypt', 'phone': '01007217010'}, 'lineItems': {'edges': [{'node': {'id': 'gid://shopify/LineItem/15815036600386', 'quantity': 1, 'sku': 'FG-0000075', 'title': 'Sulla Luna Earrings', 'variant': {'id': 'gid://shopify/ProductVariant/42003146211394', 'sku': 'FG-0000075', 'price': '4800.00', 'product': {'id': 'gid://shopify/Product/7442022170690', 'title': 'Sulla Luna Earrings'}}, 'discountedTotalSet': {'shopMoney': {'amount': '4800.0', 'currencyCode': 'EGP'}}}}]}, 'note': None}}, {'node': {'id': 'gid://shopify/Order/6311162380354', 'name': '#1463', 'createdAt': '2025-08-01T15:19:07Z', 'tags': [], 'totalPriceSet': {'shopMoney': {'amount': '7460.0', 'currencyCode': 'EGP'}}, 'subtotalPriceSet': {'shopMoney': {'amount': '7300.0', 'currencyCode': 'EGP'}}, 'totalTaxSet': {'shopMoney': {'amount': '0.0', 'currencyCode': 'EGP'}}, 'totalShippingPriceSet': {'shopMoney': {'amount': '160.0', 'currencyCode': 'EGP'}}, 'customer': {'id': 'gid://shopify/Customer/8022959784002', 'firstName': 'Nahed', 'lastName': 'Mohamed', 'email': 'nahedmohamed714@gmail.com', 'phone': None, 'addresses': [{'address1': 'العصافره بحرى الاسكندريه شارع اطلس عماره ١١ مكرر بجوار سوبر ناركت تسالى جاد امام مايوركا كافيه', 'address2': 'الدور التامن شقه ١٥', 'city': 'alexandria', 'province': 'Alexandria', 'zip': None, 'country': 'Egypt', 'phone': '+201284002489'}]}, 'shippingAddress': {'address1': 'العصافره بحرى الاسكندريه شارع اطلس عماره ١١ مكرر بجوار سوبر ناركت تسالى جاد امام مايوركا كافيه', 'address2': 'الدور التامن شقه ١٥', 'city': 'alexandria', 'province': 'Alexandria', 'zip': None, 'country': 'Egypt', 'phone': '+201284002489'}, 'billingAddress': {'address1': 'العصافره بحرى الاسكندريه شارع اطلس عماره ١١ مكرر بجوار سوبر ناركت تسالى جاد امام مايوركا كافيه', 'address2': 'الدور التامن شقه ١٥', 'city': 'alexandria', 'province': 'Alexandria', 'zip': None, 'country': 'Egypt', 'phone': '+201284002489'}, 'lineItems': {'edges': [{'node': {'id': 'gid://shopify/LineItem/15813349867586', 'quantity': 1, 'sku': 'FG-0000077', 'title': 'Sulla Luna Mix Earrings', 'variant': {'id': 'gid://shopify/ProductVariant/42003146276930', 'sku': 'FG-0000077', 'price': '7300.00', 'product': {'id': 'gid://shopify/Product/7442022203458', 'title': 'Sulla Luna Mix Earrings'}}, 'discountedTotalSet': {'shopMoney': {'amount': '7300.0', 'currencyCode': 'EGP'}}}}]}, 'note': None}}, {'node': {'id': 'gid://shopify/Order/6308680728642', 'name': '#1462', 'createdAt': '2025-07-31T09:58:23Z', 'tags': [], 'totalPriceSet': {'shopMoney': {'amount': '25900.0', 'currencyCode': 'EGP'}}, 'subtotalPriceSet': {'shopMoney': {'amount': '25700.0', 'currencyCode': 'EGP'}}, 'totalTaxSet': {'shopMoney': {'amount': '0.0', 'currencyCode': 'EGP'}}, 'totalShippingPriceSet': {'shopMoney': {'amount': '200.0', 'currencyCode': 'EGP'}}, 'customer': {'id': 'gid://shopify/Customer/8016631660610', 'firstName': 'Mohamed', 'lastName': 'Maher', 'email': 'm.maher525@gmail.com', 'phone': None, 'addresses': [{'address1': None, 'address2': None, 'city': None, 'province': None, 'zip': None, 'country': 'Egypt', 'phone': None}, {'address1': 'الهضبة الوسطى الحي الثالث كمباوند ديار سيتي 3 خلف مدرسة ريماس', 'address2': 'عمارة 2 شقة 20 بوابة 3', 'city': 'Al Mokkatam', 'province': 'Cairo', 'zip': None, 'country': 'Egypt', 'phone': '01069987443'}]}, 'shippingAddress': {'address1': 'الهضبة الوسطى الحي الثالث كمباوند ديار سيتي 3 خلف مدرسة ريماس', 'address2': 'عمارة 2 شقة 20 بوابة 3', 'city': 'Al Mokkatam', 'province': 'Cairo', 'zip': None, 'country': 'Egypt', 'phone': '01069987443'}, 'billingAddress': {'address1': 'الهضبة الوسطى الحي الثالث كمباوند ديار سيتي 3 خلف مدرسة ريماس', 'address2': 'عمارة 2 شقة 20 بوابة 3', 'city': 'Al Mokkatam', 'province': 'Cairo', 'zip': None, 'country': 'Egypt', 'phone': '01069987443'}, 'lineItems': {'edges': [{'node': {'id': 'gid://shopify/LineItem/15807895044162', 'quantity': 1, 'sku': 'FG-0000512', 'title': 'Riverstone Bracelet', 'variant': {'id': 'gid://shopify/ProductVariant/42003152404546', 'sku': 'FG-0000512', 'price': '5000.00', 'product': {'id': 'gid://shopify/Product/7442025611330', 'title': 'Riverstone Bracelet'}}, 'discountedTotalSet': {'shopMoney': {'amount': '5000.0', 'currencyCode': 'EGP'}}}}, {'node': {'id': 'gid://shopify/LineItem/15807895076930', 'quantity': 1, 'sku': 'FG-0000571', 'title': 'Riverstone Ring Mix', 'variant': {'id': 'gid://shopify/ProductVariant/42003150995522', 'sku': 'FG-0000571', 'price': '3900.00', 'product': {'id': 'gid://shopify/Product/7442025152578', 'title': 'Riverstone Ring Mix'}}, 'discountedTotalSet': {'shopMoney': {'amount': '3900.0', 'currencyCode': 'EGP'}}}}, {'node': {'id': 'gid://shopify/LineItem/15807895109698', 'quantity': 1, 'sku': 'FG-0000568', 'title': 'Riverstone Necklace Mix', 'variant': {'id': 'gid://shopify/ProductVariant/42003150962754', 'sku': 'FG-0000568', 'price': '16800.00', 'product': {'id': 'gid://shopify/Product/7442025119810', 'title': 'Riverstone Necklace Mix'}}, 'discountedTotalSet': {'shopMoney': {'amount': '16800.0', 'currencyCode': 'EGP'}}}}]}, 'note': None}}, {'node': {'id': 'gid://shopify/Order/6308073570370', 'name': '#1461', 'createdAt': '2025-07-30T23:37:58Z', 'tags': [], 'totalPriceSet': {'shopMoney': {'amount': '6700.0', 'currencyCode': 'EGP'}}, 'subtotalPriceSet': {'shopMoney': {'amount': '6500.0', 'currencyCode': 'EGP'}}, 'totalTaxSet': {'shopMoney': {'amount': '0.0', 'currencyCode': 'EGP'}}, 'totalShippingPriceSet': {'shopMoney': {'amount': '200.0', 'currencyCode': 'EGP'}}, 'customer': {'id': 'gid://shopify/Customer/8015808462914', 'firstName': 'farouk', 'lastName': 'yehia', 'email': 'farouky01@gmail.com', 'phone': None, 'addresses': [{'address1': 'mesaha sq', 'address2': '5 mesaha sq, 15th floor', 'city': 'giza', 'province': 'Cairo', 'zip': '12611', 'country': 'Egypt', 'phone': '+201060520013'}]}, 'shippingAddress': {'address1': 'mesaha sq', 'address2': '5 mesaha sq, 15th floor', 'city': 'giza', 'province': 'Cairo', 'zip': '12611', 'country': 'Egypt', 'phone': '+201060520013'}, 'billingAddress': {'address1': 'mesaha sq', 'address2': '5 mesaha sq, 15th floor', 'city': 'giza', 'province': 'Cairo', 'zip': '12611', 'country': 'Egypt', 'phone': '+201060520013'}, 'lineItems': {'edges': [{'node': {'id': 'gid://shopify/LineItem/15806636818498', 'quantity': 1, 'sku': 'FG-0000408', 'title': 'Nightfall Earrings', 'variant': {'id': 'gid://shopify/ProductVariant/42003148996674', 'sku': 'FG-0000408', 'price': '6500.00', 'product': {'id': 'gid://shopify/Product/7442023841858', 'title': 'Nightfall Earrings'}}, 'discountedTotalSet': {'shopMoney': {'amount': '6500.0', 'currencyCode': 'EGP'}}}}]}, 'note': None}}], 'pageInfo': {'hasNextPage': True, 'endCursor': 'eyJsYXN0X2lkIjo2MzA4MDczNTcwMzcwLCJsYXN0X3ZhbHVlIjoiMjAyNS0wNy0zMCAyMzozNzo1OC45MDkxNTcifQ=='}}}, 'status': 'success'}
2025-08-05 14:50:30,654 - sync_service - INFO - Retrieved 20 total orders, 20 unsynced orders from Shopify store local
2025-08-05 14:50:30,655 - sync_service - INFO - Processing order: #1480
2025-08-05 14:50:30,656 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'login', 'request': {'company': 'JudeBenHalim_Test', 'user': 'manager'}, 'response': None, 'status': None}
2025-08-05 14:50:31,428 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'login', 'request': None, 'response': {'status': 'success'}, 'status': 'success'}
2025-08-05 14:50:31,429 - sync_service - INFO - SAP login successful
2025-08-05 14:50:31,434 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'BusinessPartners', 'request': {'method': 'GET', 'url': 'https://10.0.0.100:50000/b1s/v1/BusinessPartners', 'data': None, 'params': {'$filter': "Phone1 eq '00201003370743' or Phone2 eq '00201003370743' or Cellular eq '00201003370743'", '$top': 1}}, 'response': None, 'status': None}
2025-08-05 14:50:32,279 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'BusinessPartners', 'request': None, 'response': {'odata.metadata': 'https://10.0.0.100:50000/b1s/v1/$metadata#BusinessPartners', 'value': []}, 'status': 'success'}
2025-08-05 14:50:32,282 - sync_service - INFO - Creating new customer in SAP
2025-08-05 14:50:32,283 - sync_service - ERROR - Error creating customer in SAP: 'CustomerManager' object has no attribute '_map_country_to_code'
2025-08-05 14:50:32,284 - sync_service - ERROR - Failed to create customer for order #1480
2025-08-05 14:50:53,463 - sync_service - INFO - Initialized Shopify client for store: Local Store (local)
2025-08-05 14:50:53,498 - sync_service - INFO - API Call: {'service': 'shopify', 'endpoint': 'graphql_local', 'request': {'query': '\n        query getOrders($first: Int!) {\n            orders(first: $first) {\n                edges {\n                    node {\n                        id\n                        name\n                        createdAt\n                    }\n                }\n            }\n        }\n        ', 'variables': {'first': 1}}, 'response': None, 'status': None}
2025-08-05 14:50:54,011 - sync_service - INFO - API Call: {'service': 'shopify', 'endpoint': 'graphql_local', 'request': None, 'response': {'orders': {'edges': [{'node': {'id': 'gid://shopify/Order/6170973569090', 'name': '#1001', 'createdAt': '2025-05-15T08:35:47Z'}}]}}, 'status': 'success'}
2025-08-05 14:50:54,020 - sync_service - INFO - API Call: {'service': 'shopify', 'endpoint': 'graphql_local', 'request': {'query': '\n            query getOrders($first: Int!, $after: String) {\n                orders(first: $first, after: $after, sortKey: CREATED_AT, reverse: true) {\n                    edges {\n                        node {\n                            id\n                            name\n                            createdAt\n                            tags\n                            totalPriceSet {\n                                shopMoney {\n                                    amount\n                                    currencyCode\n                                }\n                            }\n                            subtotalPriceSet {\n                                shopMoney {\n                                    amount\n                                    currencyCode\n                                }\n                            }\n                            totalTaxSet {\n                                shopMoney {\n                                    amount\n                                    currencyCode\n                                }\n                            }\n                            totalShippingPriceSet {\n                                shopMoney {\n                                    amount\n                                    currencyCode\n                                }\n                            }\n                            customer {\n                                id\n                                firstName\n                                lastName\n                                email\n                                phone\n                                addresses {\n                                    address1\n                                    address2\n                                    city\n                                    province\n                                    zip\n                                    country\n                                    phone\n                                }\n                            }\n                            shippingAddress {\n                                address1\n                                address2\n                                city\n                                province\n                                zip\n                                country\n                                phone\n                            }\n                            billingAddress {\n                                address1\n                                address2\n                                city\n                                province\n                                zip\n                                country\n                                phone\n                            }\n                            lineItems(first: 50) {\n                                edges {\n                                    node {\n                                        id\n                                        quantity\n                                        sku\n                                        title\n                                        variant {\n                                            id\n                                            sku\n                                            price\n                                            product {\n                                                id\n                                                title\n                                            }\n                                        }\n                                        discountedTotalSet {\n                                            shopMoney {\n                                                amount\n                                                currencyCode\n                                            }\n                                        }\n                                    }\n                                }\n                            }\n                            note\n                        }\n                    }\n                    pageInfo {\n                        hasNextPage\n                        endCursor\n                    }\n                }\n            }\n            ', 'variables': {'first': 20, 'after': None}}, 'response': None, 'status': None}
2025-08-05 14:50:54,773 - sync_service - INFO - API Call: {'service': 'shopify', 'endpoint': 'graphql_local', 'request': None, 'response': {'orders': {'edges': [{'node': {'id': 'gid://shopify/Order/6318310686786', 'name': '#1480', 'createdAt': '2025-08-05T09:59:13Z', 'tags': [], 'totalPriceSet': {'shopMoney': {'amount': '5200.0', 'currencyCode': 'EGP'}}, 'subtotalPriceSet': {'shopMoney': {'amount': '5000.0', 'currencyCode': 'EGP'}}, 'totalTaxSet': {'shopMoney': {'amount': '0.0', 'currencyCode': 'EGP'}}, 'totalShippingPriceSet': {'shopMoney': {'amount': '200.0', 'currencyCode': 'EGP'}}, 'customer': {'id': 'gid://shopify/Customer/8037256233026', 'firstName': 'Omnia', 'lastName': 'Ezz Elarab', 'email': 'nezzelarab@ezz-elarab.com', 'phone': None, 'addresses': [{'address1': 'Palm hills 6th october, phase 1', 'address2': 'Villa b53', 'city': 'Giza', 'province': '6th of October', 'zip': '00000', 'country': 'Egypt', 'phone': '00201003370743'}]}, 'shippingAddress': {'address1': 'Palm hills 6th october, phase 1', 'address2': 'Villa b53', 'city': 'Giza', 'province': '6th of October', 'zip': '00000', 'country': 'Egypt', 'phone': '00201003370743'}, 'billingAddress': {'address1': 'Palm hills 6th october, phase 1', 'address2': 'Villa b53', 'city': 'Giza', 'province': '6th of October', 'zip': '00000', 'country': 'Egypt', 'phone': '00201003370743'}, 'lineItems': {'edges': [{'node': {'id': 'gid://shopify/LineItem/15830693707842', 'quantity': 1, 'sku': 'FG-0000632', 'title': 'Ember Earrings', 'variant': {'id': 'gid://shopify/ProductVariant/42194952650818', 'sku': 'FG-0000632', 'price': '5000.00', 'product': {'id': 'gid://shopify/Product/7490852847682', 'title': 'Ember Earrings'}}, 'discountedTotalSet': {'shopMoney': {'amount': '5000.0', 'currencyCode': 'EGP'}}}}]}, 'note': None}}, {'node': {'id': 'gid://shopify/Order/6318078263362', 'name': '#1479', 'createdAt': '2025-08-05T04:44:47Z', 'tags': [], 'totalPriceSet': {'shopMoney': {'amount': '7460.0', 'currencyCode': 'EGP'}}, 'subtotalPriceSet': {'shopMoney': {'amount': '7300.0', 'currencyCode': 'EGP'}}, 'totalTaxSet': {'shopMoney': {'amount': '0.0', 'currencyCode': 'EGP'}}, 'totalShippingPriceSet': {'shopMoney': {'amount': '160.0', 'currencyCode': 'EGP'}}, 'customer': {'id': 'gid://shopify/Customer/8035661905986', 'firstName': 'Ziad', 'lastName': 'Fawi', 'email': 'ziadfawi6@gmail.com', 'phone': None, 'addresses': [{'address1': None, 'address2': None, 'city': None, 'province': None, 'zip': None, 'country': 'Egypt', 'phone': None}, {'address1': '46 soultan street behind ices hospital', 'address2': 'Number of the apartment 17', 'city': 'Alexandria', 'province': 'Alexandria', 'zip': None, 'country': 'Egypt', 'phone': '01271088966'}]}, 'shippingAddress': {'address1': '46 soultan street behind ices hospital', 'address2': 'Number of the apartment 17', 'city': 'Alexandria', 'province': 'Alexandria', 'zip': None, 'country': 'Egypt', 'phone': '01271088966'}, 'billingAddress': {'address1': '46 soultan street behind ices hospital', 'address2': 'Number of the apartment 17', 'city': 'Alexandria', 'province': 'Alexandria', 'zip': None, 'country': 'Egypt', 'phone': '01271088966'}, 'lineItems': {'edges': [{'node': {'id': 'gid://shopify/LineItem/15830286434370', 'quantity': 1, 'sku': 'FG-0000077', 'title': 'Sulla Luna Mix Earrings', 'variant': {'id': 'gid://shopify/ProductVariant/42003146276930', 'sku': 'FG-0000077', 'price': '7300.00', 'product': {'id': 'gid://shopify/Product/7442022203458', 'title': 'Sulla Luna Mix Earrings'}}, 'discountedTotalSet': {'shopMoney': {'amount': '7300.0', 'currencyCode': 'EGP'}}}}]}, 'note': None}}, {'node': {'id': 'gid://shopify/Order/6317218398274', 'name': '#1478', 'createdAt': '2025-08-04T18:33:12Z', 'tags': [], 'totalPriceSet': {'shopMoney': {'amount': '2880.0', 'currencyCode': 'EGP'}}, 'subtotalPriceSet': {'shopMoney': {'amount': '2880.0', 'currencyCode': 'EGP'}}, 'totalTaxSet': {'shopMoney': {'amount': '0.0', 'currencyCode': 'EGP'}}, 'totalShippingPriceSet': {'shopMoney': {'amount': '0.0', 'currencyCode': 'EGP'}}, 'customer': {'id': 'gid://shopify/Customer/8032449527874', 'firstName': 'Mahmoud', 'lastName': 'Ayman', 'email': 'mahmoudayman80@yahoo.com', 'phone': None, 'addresses': [{'address1': None, 'address2': None, 'city': None, 'province': None, 'zip': None, 'country': 'Egypt', 'phone': None}, {'address1': '5370 el mokattam', 'address2': None, 'city': 'Cairo', 'province': 'Cairo', 'zip': None, 'country': 'Egypt', 'phone': '01111346333'}]}, 'shippingAddress': None, 'billingAddress': {'address1': '5370 el mokattam', 'address2': None, 'city': 'Cairo', 'province': 'Cairo', 'zip': None, 'country': 'Egypt', 'phone': '01111346333'}, 'lineItems': {'edges': [{'node': {'id': 'gid://shopify/LineItem/15828170047554', 'quantity': 1, 'sku': 'FG-0000589', 'title': 'Una Ring', 'variant': {'id': 'gid://shopify/ProductVariant/42003153518658', 'sku': 'FG-0000589', 'price': '3200.00', 'product': {'id': 'gid://shopify/Product/7442026070082', 'title': 'Una Ring'}}, 'discountedTotalSet': {'shopMoney': {'amount': '3200.0', 'currencyCode': 'EGP'}}}}]}, 'note': None}}, {'node': {'id': 'gid://shopify/Order/6317035520066', 'name': '#1477', 'createdAt': '2025-08-04T16:50:11Z', 'tags': [], 'totalPriceSet': {'shopMoney': {'amount': '5060.0', 'currencyCode': 'EGP'}}, 'subtotalPriceSet': {'shopMoney': {'amount': '4900.0', 'currencyCode': 'EGP'}}, 'totalTaxSet': {'shopMoney': {'amount': '0.0', 'currencyCode': 'EGP'}}, 'totalShippingPriceSet': {'shopMoney': {'amount': '160.0', 'currencyCode': 'EGP'}}, 'customer': {'id': 'gid://shopify/Customer/8031975374914', 'firstName': 'Passant', 'lastName': 'Dawood', 'email': 'passantdawood@gmail.com', 'phone': None, 'addresses': [{'address1': '399 elguish road san stefano grand plaza', 'address2': '1', 'city': 'Alexandria', 'province': 'Alexandria', 'zip': None, 'country': 'Egypt', 'phone': '01223100564'}]}, 'shippingAddress': {'address1': '399 elguish road san stefano grand plaza', 'address2': '1', 'city': 'Alexandria', 'province': 'Alexandria', 'zip': None, 'country': 'Egypt', 'phone': '01223100564'}, 'billingAddress': {'address1': '399 elguish road san stefano grand plaza', 'address2': '1', 'city': 'Alexandria', 'province': 'Alexandria', 'zip': None, 'country': 'Egypt', 'phone': '01223100564'}, 'lineItems': {'edges': [{'node': {'id': 'gid://shopify/LineItem/15827708805186', 'quantity': 1, 'sku': 'FG-0000688', 'title': 'Multi-way Halo Ring', 'variant': {'id': 'gid://shopify/ProductVariant/42194980896834', 'sku': 'FG-0000688', 'price': '4900.00', 'product': {'id': 'gid://shopify/Product/7490853339202', 'title': 'Multi-way Halo Ring'}}, 'discountedTotalSet': {'shopMoney': {'amount': '4900.0', 'currencyCode': 'EGP'}}}}]}, 'note': None}}, {'node': {'id': 'gid://shopify/Order/6317030244418', 'name': '#1476', 'createdAt': '2025-08-04T16:47:03Z', 'tags': [], 'totalPriceSet': {'shopMoney': {'amount': '5320.0', 'currencyCode': 'EGP'}}, 'subtotalPriceSet': {'shopMoney': {'amount': '5200.0', 'currencyCode': 'EGP'}}, 'totalTaxSet': {'shopMoney': {'amount': '0.0', 'currencyCode': 'EGP'}}, 'totalShippingPriceSet': {'shopMoney': {'amount': '120.0', 'currencyCode': 'EGP'}}, 'customer': {'id': 'gid://shopify/Customer/8031970918466', 'firstName': 'Noha', 'lastName': 'Emad', 'email': 'noha@kitshe-eg.com', 'phone': None, 'addresses': [{'address1': 'التجمع الخامس االدور الاول شقه ٤جنوب الأكاديمية أ شارع ان', 'address2': 'التجمع الخامس- جنوب الاكادميه أ شارع انس ابن مالك فيلا ٢٨٦', 'city': 'Cairo', 'province': 'Cairo', 'zip': '11865', 'country': 'Egypt', 'phone': '01200008517'}]}, 'shippingAddress': {'address1': 'التجمع الخامس االدور الاول شقه ٤جنوب الأكاديمية أ شارع ان', 'address2': 'التجمع الخامس- جنوب الاكادميه أ شارع انس ابن مالك فيلا ٢٨٦', 'city': 'Cairo', 'province': 'Cairo', 'zip': '11865', 'country': 'Egypt', 'phone': '01200008517'}, 'billingAddress': {'address1': 'التجمع الخامس االدور الاول شقه ٤جنوب الأكاديمية أ شارع ان', 'address2': 'التجمع الخامس- جنوب الاكادميه أ شارع انس ابن مالك فيلا ٢٨٦', 'city': 'Cairo', 'province': 'Cairo', 'zip': '11865', 'country': 'Egypt', 'phone': '01200008517'}, 'lineItems': {'edges': [{'node': {'id': 'gid://shopify/LineItem/15827697336386', 'quantity': 1, 'sku': 'FG-0000640', 'title': 'Essence Earrings', 'variant': {'id': 'gid://shopify/ProductVariant/42194952945730', 'sku': 'FG-0000640', 'price': '5200.00', 'product': {'id': 'gid://shopify/Product/7490852945986', 'title': 'Essence Earrings'}}, 'discountedTotalSet': {'shopMoney': {'amount': '5200.0', 'currencyCode': 'EGP'}}}}]}, 'note': None}}, {'node': {'id': 'gid://shopify/Order/6316680347714', 'name': '#1475', 'createdAt': '2025-08-04T12:56:00Z', 'tags': [], 'totalPriceSet': {'shopMoney': {'amount': '5120.0', 'currencyCode': 'EGP'}}, 'subtotalPriceSet': {'shopMoney': {'amount': '5000.0', 'currencyCode': 'EGP'}}, 'totalTaxSet': {'shopMoney': {'amount': '0.0', 'currencyCode': 'EGP'}}, 'totalShippingPriceSet': {'shopMoney': {'amount': '120.0', 'currencyCode': 'EGP'}}, 'customer': {'id': 'gid://shopify/Customer/8031264636994', 'firstName': 'Hanan', 'lastName': 'HASSAN', 'email': 'hananhassan1204@gmail.com', 'phone': None, 'addresses': [{'address1': 'القاهرة الجديدة / كمبوند سوديك ڤيليت عمارة واحد إف شقة أرضي زيرو أربعة', 'address2': '04 الدور الارضي', 'city': 'القاهرة', 'province': 'Cairo', 'zip': '11511', 'country': 'Egypt', 'phone': '01000340138'}]}, 'shippingAddress': {'address1': 'القاهرة الجديدة / كمبوند سوديك ڤيليت عمارة واحد إف شقة أرضي زيرو أربعة', 'address2': '04 الدور الارضي', 'city': 'القاهرة', 'province': 'Cairo', 'zip': '11511', 'country': 'Egypt', 'phone': '01000340138'}, 'billingAddress': {'address1': 'القاهرة الجديدة / كمبوند سوديك ڤيليت عمارة واحد إف شقة أرضي زيرو أربعة', 'address2': '04 الدور الارضي', 'city': 'القاهرة', 'province': 'Cairo', 'zip': '11511', 'country': 'Egypt', 'phone': '01000340138'}, 'lineItems': {'edges': [{'node': {'id': 'gid://shopify/LineItem/15826901237826', 'quantity': 1, 'sku': 'FG-0000632', 'title': 'Ember Earrings', 'variant': {'id': 'gid://shopify/ProductVariant/42194952650818', 'sku': 'FG-0000632', 'price': '5000.00', 'product': {'id': 'gid://shopify/Product/7490852847682', 'title': 'Ember Earrings'}}, 'discountedTotalSet': {'shopMoney': {'amount': '5000.0', 'currencyCode': 'EGP'}}}}]}, 'note': None}}, {'node': {'id': 'gid://shopify/Order/6316580536386', 'name': '#1474', 'createdAt': '2025-08-04T11:08:05Z', 'tags': [], 'totalPriceSet': {'shopMoney': {'amount': '6020.0', 'currencyCode': 'EGP'}}, 'subtotalPriceSet': {'shopMoney': {'amount': '5900.0', 'currencyCode': 'EGP'}}, 'totalTaxSet': {'shopMoney': {'amount': '0.0', 'currencyCode': 'EGP'}}, 'totalShippingPriceSet': {'shopMoney': {'amount': '120.0', 'currencyCode': 'EGP'}}, 'customer': {'id': 'gid://shopify/Customer/8031120457794', 'firstName': 'Nourhan', 'lastName': 'Swellam', 'email': 'swellam@aucegypt.edu', 'phone': None, 'addresses': [{'address1': '144 el banafseg 11 ', 'address2': 'Villa 144', 'city': 'Cairo', 'province': 'Cairo', 'zip': '11341', 'country': 'Egypt', 'phone': '+201003928976'}]}, 'shippingAddress': {'address1': '144 el banafseg 11', 'address2': 'Villa 144', 'city': 'Cairo', 'province': 'Cairo', 'zip': '11341', 'country': 'Egypt', 'phone': '+201003928976'}, 'billingAddress': {'address1': '144 el banafseg 11', 'address2': 'Villa 144', 'city': 'Cairo', 'province': 'Cairo', 'zip': '11341', 'country': 'Egypt', 'phone': '+201003928976'}, 'lineItems': {'edges': [{'node': {'id': 'gid://shopify/LineItem/15826707382338', 'quantity': 1, 'sku': 'FG-0000369', 'title': 'Mini Sahara Mix Hoop', 'variant': {'id': 'gid://shopify/ProductVariant/42003146997826', 'sku': 'FG-0000369', 'price': '5900.00', 'product': {'id': 'gid://shopify/Product/7442022989890', 'title': 'Mini Sahara Mix Hoop'}}, 'discountedTotalSet': {'shopMoney': {'amount': '5900.0', 'currencyCode': 'EGP'}}}}]}, 'note': None}}, {'node': {'id': 'gid://shopify/Order/6315006394434', 'name': '#1473', 'createdAt': '2025-08-03T15:21:25Z', 'tags': [], 'totalPriceSet': {'shopMoney': {'amount': '4420.0', 'currencyCode': 'EGP'}}, 'subtotalPriceSet': {'shopMoney': {'amount': '4300.0', 'currencyCode': 'EGP'}}, 'totalTaxSet': {'shopMoney': {'amount': '0.0', 'currencyCode': 'EGP'}}, 'totalShippingPriceSet': {'shopMoney': {'amount': '120.0', 'currencyCode': 'EGP'}}, 'customer': {'id': 'gid://shopify/Customer/8015867478082', 'firstName': 'Yomna', 'lastName': 'Sherif', 'email': 'yomna.sherif.nawal@gmail.com', 'phone': None, 'addresses': [{'address1': 'Group 15 , building 5 , apartment 22', 'address2': 'Group 15 , building 5 , apartment 22', 'city': 'Rehab City', 'province': 'Cairo', 'zip': '0000', 'country': 'Egypt', 'phone': '+201003988787'}, {'address1': None, 'address2': None, 'city': None, 'province': None, 'zip': None, 'country': 'Egypt', 'phone': None}]}, 'shippingAddress': {'address1': 'Group 15 , building 5 , apartment 22', 'address2': 'Group 15 , building 5 , apartment 22', 'city': 'Rehab City', 'province': 'Cairo', 'zip': '0000', 'country': 'Egypt', 'phone': '+201003988787'}, 'billingAddress': {'address1': 'Group 15 , building 5 , apartment 22', 'address2': 'Group 15 , building 5 , apartment 22', 'city': 'Rehab City', 'province': 'Cairo', 'zip': '0000', 'country': 'Egypt', 'phone': '+201003988787'}, 'lineItems': {'edges': [{'node': {'id': 'gid://shopify/LineItem/15822752055362', 'quantity': 1, 'sku': 'FG-0000499', 'title': 'Cassandra Mix Pinky Ring', 'variant': {'id': 'gid://shopify/ProductVariant/42003149815874', 'sku': 'FG-0000499', 'price': '4300.00', 'product': {'id': 'gid://shopify/Product/7442024235074', 'title': 'Cassandra Mix Pinky Ring'}}, 'discountedTotalSet': {'shopMoney': {'amount': '4300.0', 'currencyCode': 'EGP'}}}}]}, 'note': None}}, {'node': {'id': 'gid://shopify/Order/6314877780034', 'name': '#1472', 'createdAt': '2025-08-03T13:47:12Z', 'tags': [], 'totalPriceSet': {'shopMoney': {'amount': '121.0', 'currencyCode': 'EGP'}}, 'subtotalPriceSet': {'shopMoney': {'amount': '1.0', 'currencyCode': 'EGP'}}, 'totalTaxSet': {'shopMoney': {'amount': '0.0', 'currencyCode': 'EGP'}}, 'totalShippingPriceSet': {'shopMoney': {'amount': '120.0', 'currencyCode': 'EGP'}}, 'customer': {'id': 'gid://shopify/Customer/7539785334850', 'firstName': 'Karim', 'lastName': 'Wafik', 'email': 'karimwafik.kw@gmail.com', 'phone': None, 'addresses': [{'address1': '97 Marghany st., Heliopolis, Cairo, Egypt', 'address2': None, 'city': 'Cairo', 'province': 'Cairo', 'zip': '21113', 'country': 'Egypt', 'phone': '+201005527292'}, {'address1': 'Stone Residence Compound 306, Third Settlement', 'address2': '9', 'city': 'Cairo', 'province': 'Cairo', 'zip': None, 'country': 'Egypt', 'phone': '01005527292'}]}, 'shippingAddress': {'address1': 'Stone Residence Compound 306, Third Settlement', 'address2': '9', 'city': 'Cairo', 'province': 'Cairo', 'zip': None, 'country': 'Egypt', 'phone': '01005527292'}, 'billingAddress': {'address1': 'Stone Residence Compound 306, Third Settlement', 'address2': '9', 'city': 'Cairo', 'province': 'Cairo', 'zip': None, 'country': 'Egypt', 'phone': '01005527292'}, 'lineItems': {'edges': [{'node': {'id': 'gid://shopify/LineItem/15822411366466', 'quantity': 1, 'sku': None, 'title': 'karim test', 'variant': {'id': 'gid://shopify/ProductVariant/42361056985154', 'sku': None, 'price': '1.00', 'product': {'id': 'gid://shopify/Product/7522803515458', 'title': 'karim test'}}, 'discountedTotalSet': {'shopMoney': {'amount': '1.0', 'currencyCode': 'EGP'}}}}]}, 'note': None}}, {'node': {'id': 'gid://shopify/Order/6314801463362', 'name': '#1471', 'createdAt': '2025-08-03T12:37:41Z', 'tags': [], 'totalPriceSet': {'shopMoney': {'amount': '4620.0', 'currencyCode': 'EGP'}}, 'subtotalPriceSet': {'shopMoney': {'amount': '4500.0', 'currencyCode': 'EGP'}}, 'totalTaxSet': {'shopMoney': {'amount': '0.0', 'currencyCode': 'EGP'}}, 'totalShippingPriceSet': {'shopMoney': {'amount': '120.0', 'currencyCode': 'EGP'}}, 'customer': {'id': 'gid://shopify/Customer/8028986572866', 'firstName': 'Manal', 'lastName': 'Dorgham', 'email': 'manaldorgham4@gmail.com', 'phone': None, 'addresses': [{'address1': 'Moon valley compound. New Cairo', 'address2': '45 D', 'city': 'Cairo', 'province': 'Cairo', 'zip': None, 'country': 'Egypt', 'phone': '01222455309'}]}, 'shippingAddress': {'address1': 'Moon valley compound. New Cairo', 'address2': '45 D', 'city': 'Cairo', 'province': 'Cairo', 'zip': None, 'country': 'Egypt', 'phone': '01222455309'}, 'billingAddress': {'address1': 'Moon valley compound. New Cairo', 'address2': '45 D', 'city': 'Cairo', 'province': 'Cairo', 'zip': None, 'country': 'Egypt', 'phone': '01222455309'}, 'lineItems': {'edges': [{'node': {'id': 'gid://shopify/LineItem/15822235631682', 'quantity': 1, 'sku': 'FG-0000544', 'title': 'Floway ring set', 'variant': {'id': 'gid://shopify/ProductVariant/42003150602306', 'sku': 'FG-0000544', 'price': '4500.00', 'product': {'id': 'gid://shopify/Product/7442024890434', 'title': 'Floway ring set'}}, 'discountedTotalSet': {'shopMoney': {'amount': '4500.0', 'currencyCode': 'EGP'}}}}]}, 'note': None}}, {'node': {'id': 'gid://shopify/Order/6314790420546', 'name': '#1470', 'createdAt': '2025-08-03T12:26:20Z', 'tags': [], 'totalPriceSet': {'shopMoney': {'amount': '7600.0', 'currencyCode': 'EGP'}}, 'subtotalPriceSet': {'shopMoney': {'amount': '7600.0', 'currencyCode': 'EGP'}}, 'totalTaxSet': {'shopMoney': {'amount': '0.0', 'currencyCode': 'EGP'}}, 'totalShippingPriceSet': {'shopMoney': {'amount': '0.0', 'currencyCode': 'EGP'}}, 'customer': {'id': 'gid://shopify/Customer/7539785334850', 'firstName': 'Karim', 'lastName': 'Wafik', 'email': 'karimwafik.kw@gmail.com', 'phone': None, 'addresses': [{'address1': '97 Marghany st., Heliopolis, Cairo, Egypt', 'address2': None, 'city': 'Cairo', 'province': 'Cairo', 'zip': '21113', 'country': 'Egypt', 'phone': '+201005527292'}, {'address1': 'Stone Residence Compound 306, Third Settlement', 'address2': '9', 'city': 'Cairo', 'province': 'Cairo', 'zip': None, 'country': 'Egypt', 'phone': '01005527292'}]}, 'shippingAddress': None, 'billingAddress': None, 'lineItems': {'edges': [{'node': {'id': 'gid://shopify/LineItem/15822212661314', 'quantity': 1, 'sku': 'FG-0000645', 'title': 'Flare Earrings', 'variant': {'id': 'gid://shopify/ProductVariant/42277872271426', 'sku': 'FG-0000645', 'price': '3800.00', 'product': {'id': 'gid://shopify/Product/7506409586754', 'title': 'Flare Earrings'}}, 'discountedTotalSet': {'shopMoney': {'amount': '3800.0', 'currencyCode': 'EGP'}}}}, {'node': {'id': 'gid://shopify/LineItem/15822221770818', 'quantity': 1, 'sku': None, 'title': 'Gift Card', 'variant': None, 'discountedTotalSet': {'shopMoney': {'amount': '3800.0', 'currencyCode': 'EGP'}}}}]}, 'note': None}}, {'node': {'id': 'gid://shopify/Order/6314786357314', 'name': '#1469', 'createdAt': '2025-08-03T12:21:46Z', 'tags': [], 'totalPriceSet': {'shopMoney': {'amount': '6900.0', 'currencyCode': 'EGP'}}, 'subtotalPriceSet': {'shopMoney': {'amount': '6900.0', 'currencyCode': 'EGP'}}, 'totalTaxSet': {'shopMoney': {'amount': '0.0', 'currencyCode': 'EGP'}}, 'totalShippingPriceSet': {'shopMoney': {'amount': '0.0', 'currencyCode': 'EGP'}}, 'customer': None, 'shippingAddress': None, 'billingAddress': None, 'lineItems': {'edges': [{'node': {'id': 'gid://shopify/LineItem/15822205321282', 'quantity': 1, 'sku': 'FG-0000345', 'title': 'Mini Harmonia Earrings', 'variant': {'id': 'gid://shopify/ProductVariant/42003146801218', 'sku': 'FG-0000345', 'price': '6900.00', 'product': {'id': 'gid://shopify/Product/7442022793282', 'title': 'Mini Harmonia Earrings'}}, 'discountedTotalSet': {'shopMoney': {'amount': '6900.0', 'currencyCode': 'EGP'}}}}]}, 'note': None}}, {'node': {'id': 'gid://shopify/Order/6314775969858', 'name': '#1468', 'createdAt': '2025-08-03T12:12:09Z', 'tags': [], 'totalPriceSet': {'shopMoney': {'amount': '2920.0', 'currencyCode': 'EGP'}}, 'subtotalPriceSet': {'shopMoney': {'amount': '2800.0', 'currencyCode': 'EGP'}}, 'totalTaxSet': {'shopMoney': {'amount': '0.0', 'currencyCode': 'EGP'}}, 'totalShippingPriceSet': {'shopMoney': {'amount': '120.0', 'currencyCode': 'EGP'}}, 'customer': {'id': 'gid://shopify/Customer/8028955639874', 'firstName': 'Mariam', 'lastName': 'Mackawy', 'email': 'mariammackawy5@gmail.com', 'phone': None, 'addresses': [{'address1': 'الرحاب ٢، مجموعة ١٣١، عمارة ٢٠، شقة ٤١', 'address2': '41 El Rehab2, Group 131, Building 20, Apartment', 'city': 'Cairo', 'province': 'Cairo', 'zip': '11511', 'country': 'Egypt', 'phone': '01285358540'}]}, 'shippingAddress': {'address1': 'الرحاب ٢، مجموعة ١٣١، عمارة ٢٠، شقة ٤١', 'address2': '41 El Rehab2, Group 131, Building 20, Apartment', 'city': 'Cairo', 'province': 'Cairo', 'zip': '11511', 'country': 'Egypt', 'phone': '01285358540'}, 'billingAddress': {'address1': 'الرحاب ٢، مجموعة ١٣١، عمارة ٢٠، شقة ٤١', 'address2': '41 El Rehab2, Group 131, Building 20, Apartment', 'city': 'Cairo', 'province': 'Cairo', 'zip': '11511', 'country': 'Egypt', 'phone': '01285358540'}, 'lineItems': {'edges': [{'node': {'id': 'gid://shopify/LineItem/15822184742978', 'quantity': 1, 'sku': 'FG-0000498', 'title': 'Cassandra Pinky Ring', 'variant': {'id': 'gid://shopify/ProductVariant/42003149881410', 'sku': 'FG-0000498', 'price': '2800.00', 'product': {'id': 'gid://shopify/Product/7442024300610', 'title': 'Cassandra Pinky Ring'}}, 'discountedTotalSet': {'shopMoney': {'amount': '2800.0', 'currencyCode': 'EGP'}}}}]}, 'note': None}}, {'node': {'id': 'gid://shopify/Order/6314438000706', 'name': '#1467', 'createdAt': '2025-08-03T04:32:29Z', 'tags': [], 'totalPriceSet': {'shopMoney': {'amount': '3200.0', 'currencyCode': 'EGP'}}, 'subtotalPriceSet': {'shopMoney': {'amount': '3200.0', 'currencyCode': 'EGP'}}, 'totalTaxSet': {'shopMoney': {'amount': '0.0', 'currencyCode': 'EGP'}}, 'totalShippingPriceSet': {'shopMoney': {'amount': '0.0', 'currencyCode': 'EGP'}}, 'customer': {'id': 'gid://shopify/Customer/8026031751234', 'firstName': 'sally', 'lastName': 'monir', 'email': 'sallymonir@yahoo.com', 'phone': None, 'addresses': [{'address1': '113, st. 17, First Area, fifth zone, fifth settlement', 'address2': '2', 'city': 'New Cairo', 'province': 'Cairo', 'zip': None, 'country': 'Egypt', 'phone': '+201273099926'}]}, 'shippingAddress': None, 'billingAddress': {'address1': '113, st. 17, First Area, fifth zone, fifth settlement', 'address2': '2', 'city': 'New Cairo', 'province': 'Cairo', 'zip': None, 'country': 'Egypt', 'phone': '+201273099926'}, 'lineItems': {'edges': [{'node': {'id': 'gid://shopify/LineItem/15821581156418', 'quantity': 1, 'sku': 'FG-0000468', 'title': 'Frost Ring', 'variant': {'id': 'gid://shopify/ProductVariant/42003151618114', 'sku': 'FG-0000468', 'price': '3200.00', 'product': {'id': 'gid://shopify/Product/7442025381954', 'title': 'Frost Ring'}}, 'discountedTotalSet': {'shopMoney': {'amount': '3200.0', 'currencyCode': 'EGP'}}}}]}, 'note': None}}, {'node': {'id': 'gid://shopify/Order/6312813002818', 'name': '#1466', 'createdAt': '2025-08-02T11:04:39Z', 'tags': [], 'totalPriceSet': {'shopMoney': {'amount': '4420.0', 'currencyCode': 'EGP'}}, 'subtotalPriceSet': {'shopMoney': {'amount': '4300.0', 'currencyCode': 'EGP'}}, 'totalTaxSet': {'shopMoney': {'amount': '0.0', 'currencyCode': 'EGP'}}, 'totalShippingPriceSet': {'shopMoney': {'amount': '120.0', 'currencyCode': 'EGP'}}, 'customer': {'id': 'gid://shopify/Customer/8026480607298', 'firstName': 'Nadine', 'lastName': 'GALAL', 'email': 'nadinegalal09@gmail.com', 'phone': None, 'addresses': [{'address1': 'امام ٣١ شارع ابراهيم حلمي الدور ٣ شقة ١١', 'address2': 'الدور ٣ شقة ١١', 'city': 'Alexandria', 'province': 'Alexandria', 'zip': None, 'country': 'Egypt', 'phone': '01284444565'}]}, 'shippingAddress': {'address1': 'امام ٣١ شارع ابراهيم حلمي الدور ٣ شقة ١١', 'address2': 'الدور ٣ شقة ١١', 'city': 'Alexandria', 'province': 'Alexandria', 'zip': None, 'country': 'Egypt', 'phone': '01284444565'}, 'billingAddress': {'address1': 'امام ٣١ شارع ابراهيم حلمي الدور ٣ شقة ١١', 'address2': 'الدور ٣ شقة ١١', 'city': 'Alexandria', 'province': 'Alexandria', 'zip': None, 'country': 'Egypt', 'phone': '01284444565'}, 'lineItems': {'edges': [{'node': {'id': 'gid://shopify/LineItem/15817138307138', 'quantity': 1, 'sku': 'FG-0000499', 'title': 'Cassandra Mix Pinky Ring', 'variant': {'id': 'gid://shopify/ProductVariant/42003149815874', 'sku': 'FG-0000499', 'price': '4300.00', 'product': {'id': 'gid://shopify/Product/7442024235074', 'title': 'Cassandra Mix Pinky Ring'}}, 'discountedTotalSet': {'shopMoney': {'amount': '4300.0', 'currencyCode': 'EGP'}}}}]}, 'note': None}}, {'node': {'id': 'gid://shopify/Order/6312140603458', 'name': '#1465', 'createdAt': '2025-08-01T23:27:00Z', 'tags': [], 'totalPriceSet': {'shopMoney': {'amount': '8860.0', 'currencyCode': 'EGP'}}, 'subtotalPriceSet': {'shopMoney': {'amount': '8700.0', 'currencyCode': 'EGP'}}, 'totalTaxSet': {'shopMoney': {'amount': '0.0', 'currencyCode': 'EGP'}}, 'totalShippingPriceSet': {'shopMoney': {'amount': '160.0', 'currencyCode': 'EGP'}}, 'customer': {'id': 'gid://shopify/Customer/8024664145986', 'firstName': 'Mai', 'lastName': 'Aladdin', 'email': 'mayyo69@gmail.com', 'phone': None, 'addresses': [{'address1': 'Sohag - shar2', 'address2': None, 'city': 'Sohag', 'province': 'Sohag', 'zip': None, 'country': 'Egypt', 'phone': '01027733614'}]}, 'shippingAddress': {'address1': 'Sohag - shar2', 'address2': None, 'city': 'Sohag', 'province': 'Sohag', 'zip': None, 'country': 'Egypt', 'phone': '01027733614'}, 'billingAddress': {'address1': 'Sohag - shar2', 'address2': None, 'city': 'Sohag', 'province': 'Sohag', 'zip': None, 'country': 'Egypt', 'phone': '01027733614'}, 'lineItems': {'edges': [{'node': {'id': 'gid://shopify/LineItem/15815787151426', 'quantity': 1, 'sku': 'FG-0000498', 'title': 'Cassandra Pinky Ring', 'variant': {'id': 'gid://shopify/ProductVariant/42003149881410', 'sku': 'FG-0000498', 'price': '2800.00', 'product': {'id': 'gid://shopify/Product/7442024300610', 'title': 'Cassandra Pinky Ring'}}, 'discountedTotalSet': {'shopMoney': {'amount': '2800.0', 'currencyCode': 'EGP'}}}}, {'node': {'id': 'gid://shopify/LineItem/15815787184194', 'quantity': 1, 'sku': 'FG-0000575', 'title': 'Janus Cuff', 'variant': {'id': 'gid://shopify/ProductVariant/42003153256514', 'sku': 'FG-0000575', 'price': '5900.00', 'product': {'id': 'gid://shopify/Product/7442025906242', 'title': 'Janus Cuff'}}, 'discountedTotalSet': {'shopMoney': {'amount': '5900.0', 'currencyCode': 'EGP'}}}}]}, 'note': None}}, {'node': {'id': 'gid://shopify/Order/6311861026882', 'name': '#1464', 'createdAt': '2025-08-01T20:45:45Z', 'tags': [], 'totalPriceSet': {'shopMoney': {'amount': '4800.0', 'currencyCode': 'EGP'}}, 'subtotalPriceSet': {'shopMoney': {'amount': '4800.0', 'currencyCode': 'EGP'}}, 'totalTaxSet': {'shopMoney': {'amount': '0.0', 'currencyCode': 'EGP'}}, 'totalShippingPriceSet': {'shopMoney': {'amount': '0.0', 'currencyCode': 'EGP'}}, 'customer': {'id': 'gid://shopify/Customer/8024130191426', 'firstName': 'Ibrahim', 'lastName': 'ElGohary', 'email': 'hima22may@hotmail.com', 'phone': None, 'addresses': [{'address1': 'Wady compound', 'address2': 'Home', 'city': 'Cairo', 'province': 'Cairo', 'zip': None, 'country': 'Egypt', 'phone': '01007217010'}]}, 'shippingAddress': None, 'billingAddress': {'address1': 'Wady compound', 'address2': 'Home', 'city': 'Cairo', 'province': 'Cairo', 'zip': None, 'country': 'Egypt', 'phone': '01007217010'}, 'lineItems': {'edges': [{'node': {'id': 'gid://shopify/LineItem/15815036600386', 'quantity': 1, 'sku': 'FG-0000075', 'title': 'Sulla Luna Earrings', 'variant': {'id': 'gid://shopify/ProductVariant/42003146211394', 'sku': 'FG-0000075', 'price': '4800.00', 'product': {'id': 'gid://shopify/Product/7442022170690', 'title': 'Sulla Luna Earrings'}}, 'discountedTotalSet': {'shopMoney': {'amount': '4800.0', 'currencyCode': 'EGP'}}}}]}, 'note': None}}, {'node': {'id': 'gid://shopify/Order/6311162380354', 'name': '#1463', 'createdAt': '2025-08-01T15:19:07Z', 'tags': [], 'totalPriceSet': {'shopMoney': {'amount': '7460.0', 'currencyCode': 'EGP'}}, 'subtotalPriceSet': {'shopMoney': {'amount': '7300.0', 'currencyCode': 'EGP'}}, 'totalTaxSet': {'shopMoney': {'amount': '0.0', 'currencyCode': 'EGP'}}, 'totalShippingPriceSet': {'shopMoney': {'amount': '160.0', 'currencyCode': 'EGP'}}, 'customer': {'id': 'gid://shopify/Customer/8022959784002', 'firstName': 'Nahed', 'lastName': 'Mohamed', 'email': 'nahedmohamed714@gmail.com', 'phone': None, 'addresses': [{'address1': 'العصافره بحرى الاسكندريه شارع اطلس عماره ١١ مكرر بجوار سوبر ناركت تسالى جاد امام مايوركا كافيه', 'address2': 'الدور التامن شقه ١٥', 'city': 'alexandria', 'province': 'Alexandria', 'zip': None, 'country': 'Egypt', 'phone': '+201284002489'}]}, 'shippingAddress': {'address1': 'العصافره بحرى الاسكندريه شارع اطلس عماره ١١ مكرر بجوار سوبر ناركت تسالى جاد امام مايوركا كافيه', 'address2': 'الدور التامن شقه ١٥', 'city': 'alexandria', 'province': 'Alexandria', 'zip': None, 'country': 'Egypt', 'phone': '+201284002489'}, 'billingAddress': {'address1': 'العصافره بحرى الاسكندريه شارع اطلس عماره ١١ مكرر بجوار سوبر ناركت تسالى جاد امام مايوركا كافيه', 'address2': 'الدور التامن شقه ١٥', 'city': 'alexandria', 'province': 'Alexandria', 'zip': None, 'country': 'Egypt', 'phone': '+201284002489'}, 'lineItems': {'edges': [{'node': {'id': 'gid://shopify/LineItem/15813349867586', 'quantity': 1, 'sku': 'FG-0000077', 'title': 'Sulla Luna Mix Earrings', 'variant': {'id': 'gid://shopify/ProductVariant/42003146276930', 'sku': 'FG-0000077', 'price': '7300.00', 'product': {'id': 'gid://shopify/Product/7442022203458', 'title': 'Sulla Luna Mix Earrings'}}, 'discountedTotalSet': {'shopMoney': {'amount': '7300.0', 'currencyCode': 'EGP'}}}}]}, 'note': None}}, {'node': {'id': 'gid://shopify/Order/6308680728642', 'name': '#1462', 'createdAt': '2025-07-31T09:58:23Z', 'tags': [], 'totalPriceSet': {'shopMoney': {'amount': '25900.0', 'currencyCode': 'EGP'}}, 'subtotalPriceSet': {'shopMoney': {'amount': '25700.0', 'currencyCode': 'EGP'}}, 'totalTaxSet': {'shopMoney': {'amount': '0.0', 'currencyCode': 'EGP'}}, 'totalShippingPriceSet': {'shopMoney': {'amount': '200.0', 'currencyCode': 'EGP'}}, 'customer': {'id': 'gid://shopify/Customer/8016631660610', 'firstName': 'Mohamed', 'lastName': 'Maher', 'email': 'm.maher525@gmail.com', 'phone': None, 'addresses': [{'address1': None, 'address2': None, 'city': None, 'province': None, 'zip': None, 'country': 'Egypt', 'phone': None}, {'address1': 'الهضبة الوسطى الحي الثالث كمباوند ديار سيتي 3 خلف مدرسة ريماس', 'address2': 'عمارة 2 شقة 20 بوابة 3', 'city': 'Al Mokkatam', 'province': 'Cairo', 'zip': None, 'country': 'Egypt', 'phone': '01069987443'}]}, 'shippingAddress': {'address1': 'الهضبة الوسطى الحي الثالث كمباوند ديار سيتي 3 خلف مدرسة ريماس', 'address2': 'عمارة 2 شقة 20 بوابة 3', 'city': 'Al Mokkatam', 'province': 'Cairo', 'zip': None, 'country': 'Egypt', 'phone': '01069987443'}, 'billingAddress': {'address1': 'الهضبة الوسطى الحي الثالث كمباوند ديار سيتي 3 خلف مدرسة ريماس', 'address2': 'عمارة 2 شقة 20 بوابة 3', 'city': 'Al Mokkatam', 'province': 'Cairo', 'zip': None, 'country': 'Egypt', 'phone': '01069987443'}, 'lineItems': {'edges': [{'node': {'id': 'gid://shopify/LineItem/15807895044162', 'quantity': 1, 'sku': 'FG-0000512', 'title': 'Riverstone Bracelet', 'variant': {'id': 'gid://shopify/ProductVariant/42003152404546', 'sku': 'FG-0000512', 'price': '5000.00', 'product': {'id': 'gid://shopify/Product/7442025611330', 'title': 'Riverstone Bracelet'}}, 'discountedTotalSet': {'shopMoney': {'amount': '5000.0', 'currencyCode': 'EGP'}}}}, {'node': {'id': 'gid://shopify/LineItem/15807895076930', 'quantity': 1, 'sku': 'FG-0000571', 'title': 'Riverstone Ring Mix', 'variant': {'id': 'gid://shopify/ProductVariant/42003150995522', 'sku': 'FG-0000571', 'price': '3900.00', 'product': {'id': 'gid://shopify/Product/7442025152578', 'title': 'Riverstone Ring Mix'}}, 'discountedTotalSet': {'shopMoney': {'amount': '3900.0', 'currencyCode': 'EGP'}}}}, {'node': {'id': 'gid://shopify/LineItem/15807895109698', 'quantity': 1, 'sku': 'FG-0000568', 'title': 'Riverstone Necklace Mix', 'variant': {'id': 'gid://shopify/ProductVariant/42003150962754', 'sku': 'FG-0000568', 'price': '16800.00', 'product': {'id': 'gid://shopify/Product/7442025119810', 'title': 'Riverstone Necklace Mix'}}, 'discountedTotalSet': {'shopMoney': {'amount': '16800.0', 'currencyCode': 'EGP'}}}}]}, 'note': None}}, {'node': {'id': 'gid://shopify/Order/6308073570370', 'name': '#1461', 'createdAt': '2025-07-30T23:37:58Z', 'tags': [], 'totalPriceSet': {'shopMoney': {'amount': '6700.0', 'currencyCode': 'EGP'}}, 'subtotalPriceSet': {'shopMoney': {'amount': '6500.0', 'currencyCode': 'EGP'}}, 'totalTaxSet': {'shopMoney': {'amount': '0.0', 'currencyCode': 'EGP'}}, 'totalShippingPriceSet': {'shopMoney': {'amount': '200.0', 'currencyCode': 'EGP'}}, 'customer': {'id': 'gid://shopify/Customer/8015808462914', 'firstName': 'farouk', 'lastName': 'yehia', 'email': 'farouky01@gmail.com', 'phone': None, 'addresses': [{'address1': 'mesaha sq', 'address2': '5 mesaha sq, 15th floor', 'city': 'giza', 'province': 'Cairo', 'zip': '12611', 'country': 'Egypt', 'phone': '+201060520013'}]}, 'shippingAddress': {'address1': 'mesaha sq', 'address2': '5 mesaha sq, 15th floor', 'city': 'giza', 'province': 'Cairo', 'zip': '12611', 'country': 'Egypt', 'phone': '+201060520013'}, 'billingAddress': {'address1': 'mesaha sq', 'address2': '5 mesaha sq, 15th floor', 'city': 'giza', 'province': 'Cairo', 'zip': '12611', 'country': 'Egypt', 'phone': '+201060520013'}, 'lineItems': {'edges': [{'node': {'id': 'gid://shopify/LineItem/15806636818498', 'quantity': 1, 'sku': 'FG-0000408', 'title': 'Nightfall Earrings', 'variant': {'id': 'gid://shopify/ProductVariant/42003148996674', 'sku': 'FG-0000408', 'price': '6500.00', 'product': {'id': 'gid://shopify/Product/7442023841858', 'title': 'Nightfall Earrings'}}, 'discountedTotalSet': {'shopMoney': {'amount': '6500.0', 'currencyCode': 'EGP'}}}}]}, 'note': None}}], 'pageInfo': {'hasNextPage': True, 'endCursor': 'eyJsYXN0X2lkIjo2MzA4MDczNTcwMzcwLCJsYXN0X3ZhbHVlIjoiMjAyNS0wNy0zMCAyMzozNzo1OC45MDkxNTcifQ=='}}}, 'status': 'success'}
2025-08-05 14:50:54,778 - sync_service - INFO - Retrieved 20 total orders, 20 unsynced orders from Shopify store local
2025-08-05 14:50:54,779 - sync_service - INFO - Processing order: #1480
2025-08-05 14:50:54,779 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'login', 'request': {'company': 'JudeBenHalim_Test', 'user': 'manager'}, 'response': None, 'status': None}
2025-08-05 14:50:55,545 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'login', 'request': None, 'response': {'status': 'success'}, 'status': 'success'}
2025-08-05 14:50:55,546 - sync_service - INFO - SAP login successful
2025-08-05 14:50:55,546 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'BusinessPartners', 'request': {'method': 'GET', 'url': 'https://10.0.0.100:50000/b1s/v1/BusinessPartners', 'data': None, 'params': {'$filter': "Phone1 eq '00201003370743' or Phone2 eq '00201003370743' or Cellular eq '00201003370743'", '$top': 1}}, 'response': None, 'status': None}
2025-08-05 14:50:56,326 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'BusinessPartners', 'request': None, 'response': {'odata.metadata': 'https://10.0.0.100:50000/b1s/v1/$metadata#BusinessPartners', 'value': []}, 'status': 'success'}
2025-08-05 14:50:56,328 - sync_service - INFO - Creating new customer in SAP
2025-08-05 14:50:56,328 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'BusinessPartners', 'request': {'method': 'POST', 'url': 'https://10.0.0.100:50000/b1s/v1/BusinessPartners', 'data': {'CardName': 'Omnia Ezz Elarab', 'CardType': 'C', 'Series': 121, 'Phone1': '00201003370743', 'Currency': 'EGP', 'BPAddresses': [{'AddressName': 'Omnia Ezz Elarab Address 1', 'Street': 'Palm hills 6th october, phase 1 Villa b53', 'City': 'Giza', 'AddressType': 'bo_ShipTo', 'Country': 'EG', 'State': '6th of October', 'ZipCode': '00000'}]}, 'params': None}, 'response': None, 'status': None}
2025-08-05 14:50:57,041 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'BusinessPartners', 'request': None, 'response': {'status_code': 400, 'text': '{\n   "error" : {\n      "code" : -1,\n      "message" : {\n         "lang" : "en-us",\n         "value" : "CServiceData::SetPropertyValueString failed; Value too long in property \'State\' of \'BPAddress\'"\n      }\n   }\n}\n'}, 'status': 'failure'}
2025-08-05 14:50:57,044 - sync_service - ERROR - Failed to create customer in SAP: HTTP 400: {
   "error" : {
      "code" : -1,
      "message" : {
         "lang" : "en-us",
         "value" : "CServiceData::SetPropertyValueString failed; Value too long in property 'State' of 'BPAddress'"
      }
   }
}

2025-08-05 14:50:57,045 - sync_service - ERROR - Failed to create customer for order #1480
2025-08-05 15:19:15,177 - sync_service - INFO - Initialized Shopify client for store: Local Store (local)
2025-08-05 15:19:15,215 - sync_service - INFO - API Call: {'service': 'shopify', 'endpoint': 'graphql_local', 'request': {'query': '\n        query getOrders($first: Int!) {\n            orders(first: $first) {\n                edges {\n                    node {\n                        id\n                        name\n                        createdAt\n                    }\n                }\n            }\n        }\n        ', 'variables': {'first': 1}}, 'response': None, 'status': None}
2025-08-05 15:19:15,865 - sync_service - INFO - API Call: {'service': 'shopify', 'endpoint': 'graphql_local', 'request': None, 'response': {'orders': {'edges': [{'node': {'id': 'gid://shopify/Order/6170973569090', 'name': '#1001', 'createdAt': '2025-05-15T08:35:47Z'}}]}}, 'status': 'success'}
2025-08-05 15:19:15,877 - sync_service - INFO - API Call: {'service': 'shopify', 'endpoint': 'graphql_local', 'request': {'query': '\n            query getOrders($first: Int!, $after: String) {\n                orders(first: $first, after: $after, sortKey: CREATED_AT, reverse: true) {\n                    edges {\n                        node {\n                            id\n                            name\n                            createdAt\n                            tags\n                            totalPriceSet {\n                                shopMoney {\n                                    amount\n                                    currencyCode\n                                }\n                            }\n                            subtotalPriceSet {\n                                shopMoney {\n                                    amount\n                                    currencyCode\n                                }\n                            }\n                            totalTaxSet {\n                                shopMoney {\n                                    amount\n                                    currencyCode\n                                }\n                            }\n                            totalShippingPriceSet {\n                                shopMoney {\n                                    amount\n                                    currencyCode\n                                }\n                            }\n                            customer {\n                                id\n                                firstName\n                                lastName\n                                email\n                                phone\n                                addresses {\n                                    address1\n                                    address2\n                                    city\n                                    province\n                                    zip\n                                    country\n                                    phone\n                                }\n                            }\n                            shippingAddress {\n                                address1\n                                address2\n                                city\n                                province\n                                zip\n                                country\n                                phone\n                            }\n                            billingAddress {\n                                address1\n                                address2\n                                city\n                                province\n                                zip\n                                country\n                                phone\n                            }\n                            lineItems(first: 50) {\n                                edges {\n                                    node {\n                                        id\n                                        quantity\n                                        sku\n                                        title\n                                        variant {\n                                            id\n                                            sku\n                                            price\n                                            product {\n                                                id\n                                                title\n                                            }\n                                        }\n                                        discountedTotalSet {\n                                            shopMoney {\n                                                amount\n                                                currencyCode\n                                            }\n                                        }\n                                    }\n                                }\n                            }\n                            note\n                        }\n                    }\n                    pageInfo {\n                        hasNextPage\n                        endCursor\n                    }\n                }\n            }\n            ', 'variables': {'first': 20, 'after': None}}, 'response': None, 'status': None}
2025-08-05 15:19:16,841 - sync_service - INFO - API Call: {'service': 'shopify', 'endpoint': 'graphql_local', 'request': None, 'response': {'orders': {'edges': [{'node': {'id': 'gid://shopify/Order/6318310686786', 'name': '#1480', 'createdAt': '2025-08-05T09:59:13Z', 'tags': [], 'totalPriceSet': {'shopMoney': {'amount': '5200.0', 'currencyCode': 'EGP'}}, 'subtotalPriceSet': {'shopMoney': {'amount': '5000.0', 'currencyCode': 'EGP'}}, 'totalTaxSet': {'shopMoney': {'amount': '0.0', 'currencyCode': 'EGP'}}, 'totalShippingPriceSet': {'shopMoney': {'amount': '200.0', 'currencyCode': 'EGP'}}, 'customer': {'id': 'gid://shopify/Customer/8037256233026', 'firstName': 'Omnia', 'lastName': 'Ezz Elarab', 'email': 'nezzelarab@ezz-elarab.com', 'phone': None, 'addresses': [{'address1': 'Palm hills 6th october, phase 1', 'address2': 'Villa b53', 'city': 'Giza', 'province': '6th of October', 'zip': '00000', 'country': 'Egypt', 'phone': '00201003370743'}]}, 'shippingAddress': {'address1': 'Palm hills 6th october, phase 1', 'address2': 'Villa b53', 'city': 'Giza', 'province': '6th of October', 'zip': '00000', 'country': 'Egypt', 'phone': '00201003370743'}, 'billingAddress': {'address1': 'Palm hills 6th october, phase 1', 'address2': 'Villa b53', 'city': 'Giza', 'province': '6th of October', 'zip': '00000', 'country': 'Egypt', 'phone': '00201003370743'}, 'lineItems': {'edges': [{'node': {'id': 'gid://shopify/LineItem/15830693707842', 'quantity': 1, 'sku': 'FG-0000632', 'title': 'Ember Earrings', 'variant': {'id': 'gid://shopify/ProductVariant/42194952650818', 'sku': 'FG-0000632', 'price': '5000.00', 'product': {'id': 'gid://shopify/Product/7490852847682', 'title': 'Ember Earrings'}}, 'discountedTotalSet': {'shopMoney': {'amount': '5000.0', 'currencyCode': 'EGP'}}}}]}, 'note': None}}, {'node': {'id': 'gid://shopify/Order/6318078263362', 'name': '#1479', 'createdAt': '2025-08-05T04:44:47Z', 'tags': [], 'totalPriceSet': {'shopMoney': {'amount': '7460.0', 'currencyCode': 'EGP'}}, 'subtotalPriceSet': {'shopMoney': {'amount': '7300.0', 'currencyCode': 'EGP'}}, 'totalTaxSet': {'shopMoney': {'amount': '0.0', 'currencyCode': 'EGP'}}, 'totalShippingPriceSet': {'shopMoney': {'amount': '160.0', 'currencyCode': 'EGP'}}, 'customer': {'id': 'gid://shopify/Customer/8035661905986', 'firstName': 'Ziad', 'lastName': 'Fawi', 'email': 'ziadfawi6@gmail.com', 'phone': None, 'addresses': [{'address1': None, 'address2': None, 'city': None, 'province': None, 'zip': None, 'country': 'Egypt', 'phone': None}, {'address1': '46 soultan street behind ices hospital', 'address2': 'Number of the apartment 17', 'city': 'Alexandria', 'province': 'Alexandria', 'zip': None, 'country': 'Egypt', 'phone': '01271088966'}]}, 'shippingAddress': {'address1': '46 soultan street behind ices hospital', 'address2': 'Number of the apartment 17', 'city': 'Alexandria', 'province': 'Alexandria', 'zip': None, 'country': 'Egypt', 'phone': '01271088966'}, 'billingAddress': {'address1': '46 soultan street behind ices hospital', 'address2': 'Number of the apartment 17', 'city': 'Alexandria', 'province': 'Alexandria', 'zip': None, 'country': 'Egypt', 'phone': '01271088966'}, 'lineItems': {'edges': [{'node': {'id': 'gid://shopify/LineItem/15830286434370', 'quantity': 1, 'sku': 'FG-0000077', 'title': 'Sulla Luna Mix Earrings', 'variant': {'id': 'gid://shopify/ProductVariant/42003146276930', 'sku': 'FG-0000077', 'price': '7300.00', 'product': {'id': 'gid://shopify/Product/7442022203458', 'title': 'Sulla Luna Mix Earrings'}}, 'discountedTotalSet': {'shopMoney': {'amount': '7300.0', 'currencyCode': 'EGP'}}}}]}, 'note': None}}, {'node': {'id': 'gid://shopify/Order/6317218398274', 'name': '#1478', 'createdAt': '2025-08-04T18:33:12Z', 'tags': [], 'totalPriceSet': {'shopMoney': {'amount': '2880.0', 'currencyCode': 'EGP'}}, 'subtotalPriceSet': {'shopMoney': {'amount': '2880.0', 'currencyCode': 'EGP'}}, 'totalTaxSet': {'shopMoney': {'amount': '0.0', 'currencyCode': 'EGP'}}, 'totalShippingPriceSet': {'shopMoney': {'amount': '0.0', 'currencyCode': 'EGP'}}, 'customer': {'id': 'gid://shopify/Customer/8032449527874', 'firstName': 'Mahmoud', 'lastName': 'Ayman', 'email': 'mahmoudayman80@yahoo.com', 'phone': None, 'addresses': [{'address1': None, 'address2': None, 'city': None, 'province': None, 'zip': None, 'country': 'Egypt', 'phone': None}, {'address1': '5370 el mokattam', 'address2': None, 'city': 'Cairo', 'province': 'Cairo', 'zip': None, 'country': 'Egypt', 'phone': '01111346333'}]}, 'shippingAddress': None, 'billingAddress': {'address1': '5370 el mokattam', 'address2': None, 'city': 'Cairo', 'province': 'Cairo', 'zip': None, 'country': 'Egypt', 'phone': '01111346333'}, 'lineItems': {'edges': [{'node': {'id': 'gid://shopify/LineItem/15828170047554', 'quantity': 1, 'sku': 'FG-0000589', 'title': 'Una Ring', 'variant': {'id': 'gid://shopify/ProductVariant/42003153518658', 'sku': 'FG-0000589', 'price': '3200.00', 'product': {'id': 'gid://shopify/Product/7442026070082', 'title': 'Una Ring'}}, 'discountedTotalSet': {'shopMoney': {'amount': '3200.0', 'currencyCode': 'EGP'}}}}]}, 'note': None}}, {'node': {'id': 'gid://shopify/Order/6317035520066', 'name': '#1477', 'createdAt': '2025-08-04T16:50:11Z', 'tags': [], 'totalPriceSet': {'shopMoney': {'amount': '5060.0', 'currencyCode': 'EGP'}}, 'subtotalPriceSet': {'shopMoney': {'amount': '4900.0', 'currencyCode': 'EGP'}}, 'totalTaxSet': {'shopMoney': {'amount': '0.0', 'currencyCode': 'EGP'}}, 'totalShippingPriceSet': {'shopMoney': {'amount': '160.0', 'currencyCode': 'EGP'}}, 'customer': {'id': 'gid://shopify/Customer/8031975374914', 'firstName': 'Passant', 'lastName': 'Dawood', 'email': 'passantdawood@gmail.com', 'phone': None, 'addresses': [{'address1': '399 elguish road san stefano grand plaza', 'address2': '1', 'city': 'Alexandria', 'province': 'Alexandria', 'zip': None, 'country': 'Egypt', 'phone': '01223100564'}]}, 'shippingAddress': {'address1': '399 elguish road san stefano grand plaza', 'address2': '1', 'city': 'Alexandria', 'province': 'Alexandria', 'zip': None, 'country': 'Egypt', 'phone': '01223100564'}, 'billingAddress': {'address1': '399 elguish road san stefano grand plaza', 'address2': '1', 'city': 'Alexandria', 'province': 'Alexandria', 'zip': None, 'country': 'Egypt', 'phone': '01223100564'}, 'lineItems': {'edges': [{'node': {'id': 'gid://shopify/LineItem/15827708805186', 'quantity': 1, 'sku': 'FG-0000688', 'title': 'Multi-way Halo Ring', 'variant': {'id': 'gid://shopify/ProductVariant/42194980896834', 'sku': 'FG-0000688', 'price': '4900.00', 'product': {'id': 'gid://shopify/Product/7490853339202', 'title': 'Multi-way Halo Ring'}}, 'discountedTotalSet': {'shopMoney': {'amount': '4900.0', 'currencyCode': 'EGP'}}}}]}, 'note': None}}, {'node': {'id': 'gid://shopify/Order/6317030244418', 'name': '#1476', 'createdAt': '2025-08-04T16:47:03Z', 'tags': [], 'totalPriceSet': {'shopMoney': {'amount': '5320.0', 'currencyCode': 'EGP'}}, 'subtotalPriceSet': {'shopMoney': {'amount': '5200.0', 'currencyCode': 'EGP'}}, 'totalTaxSet': {'shopMoney': {'amount': '0.0', 'currencyCode': 'EGP'}}, 'totalShippingPriceSet': {'shopMoney': {'amount': '120.0', 'currencyCode': 'EGP'}}, 'customer': {'id': 'gid://shopify/Customer/8031970918466', 'firstName': 'Noha', 'lastName': 'Emad', 'email': 'noha@kitshe-eg.com', 'phone': None, 'addresses': [{'address1': 'التجمع الخامس االدور الاول شقه ٤جنوب الأكاديمية أ شارع ان', 'address2': 'التجمع الخامس- جنوب الاكادميه أ شارع انس ابن مالك فيلا ٢٨٦', 'city': 'Cairo', 'province': 'Cairo', 'zip': '11865', 'country': 'Egypt', 'phone': '01200008517'}]}, 'shippingAddress': {'address1': 'التجمع الخامس االدور الاول شقه ٤جنوب الأكاديمية أ شارع ان', 'address2': 'التجمع الخامس- جنوب الاكادميه أ شارع انس ابن مالك فيلا ٢٨٦', 'city': 'Cairo', 'province': 'Cairo', 'zip': '11865', 'country': 'Egypt', 'phone': '01200008517'}, 'billingAddress': {'address1': 'التجمع الخامس االدور الاول شقه ٤جنوب الأكاديمية أ شارع ان', 'address2': 'التجمع الخامس- جنوب الاكادميه أ شارع انس ابن مالك فيلا ٢٨٦', 'city': 'Cairo', 'province': 'Cairo', 'zip': '11865', 'country': 'Egypt', 'phone': '01200008517'}, 'lineItems': {'edges': [{'node': {'id': 'gid://shopify/LineItem/15827697336386', 'quantity': 1, 'sku': 'FG-0000640', 'title': 'Essence Earrings', 'variant': {'id': 'gid://shopify/ProductVariant/42194952945730', 'sku': 'FG-0000640', 'price': '5200.00', 'product': {'id': 'gid://shopify/Product/7490852945986', 'title': 'Essence Earrings'}}, 'discountedTotalSet': {'shopMoney': {'amount': '5200.0', 'currencyCode': 'EGP'}}}}]}, 'note': None}}, {'node': {'id': 'gid://shopify/Order/6316680347714', 'name': '#1475', 'createdAt': '2025-08-04T12:56:00Z', 'tags': [], 'totalPriceSet': {'shopMoney': {'amount': '5120.0', 'currencyCode': 'EGP'}}, 'subtotalPriceSet': {'shopMoney': {'amount': '5000.0', 'currencyCode': 'EGP'}}, 'totalTaxSet': {'shopMoney': {'amount': '0.0', 'currencyCode': 'EGP'}}, 'totalShippingPriceSet': {'shopMoney': {'amount': '120.0', 'currencyCode': 'EGP'}}, 'customer': {'id': 'gid://shopify/Customer/8031264636994', 'firstName': 'Hanan', 'lastName': 'HASSAN', 'email': 'hananhassan1204@gmail.com', 'phone': None, 'addresses': [{'address1': 'القاهرة الجديدة / كمبوند سوديك ڤيليت عمارة واحد إف شقة أرضي زيرو أربعة', 'address2': '04 الدور الارضي', 'city': 'القاهرة', 'province': 'Cairo', 'zip': '11511', 'country': 'Egypt', 'phone': '01000340138'}]}, 'shippingAddress': {'address1': 'القاهرة الجديدة / كمبوند سوديك ڤيليت عمارة واحد إف شقة أرضي زيرو أربعة', 'address2': '04 الدور الارضي', 'city': 'القاهرة', 'province': 'Cairo', 'zip': '11511', 'country': 'Egypt', 'phone': '01000340138'}, 'billingAddress': {'address1': 'القاهرة الجديدة / كمبوند سوديك ڤيليت عمارة واحد إف شقة أرضي زيرو أربعة', 'address2': '04 الدور الارضي', 'city': 'القاهرة', 'province': 'Cairo', 'zip': '11511', 'country': 'Egypt', 'phone': '01000340138'}, 'lineItems': {'edges': [{'node': {'id': 'gid://shopify/LineItem/15826901237826', 'quantity': 1, 'sku': 'FG-0000632', 'title': 'Ember Earrings', 'variant': {'id': 'gid://shopify/ProductVariant/42194952650818', 'sku': 'FG-0000632', 'price': '5000.00', 'product': {'id': 'gid://shopify/Product/7490852847682', 'title': 'Ember Earrings'}}, 'discountedTotalSet': {'shopMoney': {'amount': '5000.0', 'currencyCode': 'EGP'}}}}]}, 'note': None}}, {'node': {'id': 'gid://shopify/Order/6316580536386', 'name': '#1474', 'createdAt': '2025-08-04T11:08:05Z', 'tags': [], 'totalPriceSet': {'shopMoney': {'amount': '6020.0', 'currencyCode': 'EGP'}}, 'subtotalPriceSet': {'shopMoney': {'amount': '5900.0', 'currencyCode': 'EGP'}}, 'totalTaxSet': {'shopMoney': {'amount': '0.0', 'currencyCode': 'EGP'}}, 'totalShippingPriceSet': {'shopMoney': {'amount': '120.0', 'currencyCode': 'EGP'}}, 'customer': {'id': 'gid://shopify/Customer/8031120457794', 'firstName': 'Nourhan', 'lastName': 'Swellam', 'email': 'swellam@aucegypt.edu', 'phone': None, 'addresses': [{'address1': '144 el banafseg 11 ', 'address2': 'Villa 144', 'city': 'Cairo', 'province': 'Cairo', 'zip': '11341', 'country': 'Egypt', 'phone': '+201003928976'}]}, 'shippingAddress': {'address1': '144 el banafseg 11', 'address2': 'Villa 144', 'city': 'Cairo', 'province': 'Cairo', 'zip': '11341', 'country': 'Egypt', 'phone': '+201003928976'}, 'billingAddress': {'address1': '144 el banafseg 11', 'address2': 'Villa 144', 'city': 'Cairo', 'province': 'Cairo', 'zip': '11341', 'country': 'Egypt', 'phone': '+201003928976'}, 'lineItems': {'edges': [{'node': {'id': 'gid://shopify/LineItem/15826707382338', 'quantity': 1, 'sku': 'FG-0000369', 'title': 'Mini Sahara Mix Hoop', 'variant': {'id': 'gid://shopify/ProductVariant/42003146997826', 'sku': 'FG-0000369', 'price': '5900.00', 'product': {'id': 'gid://shopify/Product/7442022989890', 'title': 'Mini Sahara Mix Hoop'}}, 'discountedTotalSet': {'shopMoney': {'amount': '5900.0', 'currencyCode': 'EGP'}}}}]}, 'note': None}}, {'node': {'id': 'gid://shopify/Order/6315006394434', 'name': '#1473', 'createdAt': '2025-08-03T15:21:25Z', 'tags': [], 'totalPriceSet': {'shopMoney': {'amount': '4420.0', 'currencyCode': 'EGP'}}, 'subtotalPriceSet': {'shopMoney': {'amount': '4300.0', 'currencyCode': 'EGP'}}, 'totalTaxSet': {'shopMoney': {'amount': '0.0', 'currencyCode': 'EGP'}}, 'totalShippingPriceSet': {'shopMoney': {'amount': '120.0', 'currencyCode': 'EGP'}}, 'customer': {'id': 'gid://shopify/Customer/8015867478082', 'firstName': 'Yomna', 'lastName': 'Sherif', 'email': 'yomna.sherif.nawal@gmail.com', 'phone': None, 'addresses': [{'address1': 'Group 15 , building 5 , apartment 22', 'address2': 'Group 15 , building 5 , apartment 22', 'city': 'Rehab City', 'province': 'Cairo', 'zip': '0000', 'country': 'Egypt', 'phone': '+201003988787'}, {'address1': None, 'address2': None, 'city': None, 'province': None, 'zip': None, 'country': 'Egypt', 'phone': None}]}, 'shippingAddress': {'address1': 'Group 15 , building 5 , apartment 22', 'address2': 'Group 15 , building 5 , apartment 22', 'city': 'Rehab City', 'province': 'Cairo', 'zip': '0000', 'country': 'Egypt', 'phone': '+201003988787'}, 'billingAddress': {'address1': 'Group 15 , building 5 , apartment 22', 'address2': 'Group 15 , building 5 , apartment 22', 'city': 'Rehab City', 'province': 'Cairo', 'zip': '0000', 'country': 'Egypt', 'phone': '+201003988787'}, 'lineItems': {'edges': [{'node': {'id': 'gid://shopify/LineItem/15822752055362', 'quantity': 1, 'sku': 'FG-0000499', 'title': 'Cassandra Mix Pinky Ring', 'variant': {'id': 'gid://shopify/ProductVariant/42003149815874', 'sku': 'FG-0000499', 'price': '4300.00', 'product': {'id': 'gid://shopify/Product/7442024235074', 'title': 'Cassandra Mix Pinky Ring'}}, 'discountedTotalSet': {'shopMoney': {'amount': '4300.0', 'currencyCode': 'EGP'}}}}]}, 'note': None}}, {'node': {'id': 'gid://shopify/Order/6314877780034', 'name': '#1472', 'createdAt': '2025-08-03T13:47:12Z', 'tags': [], 'totalPriceSet': {'shopMoney': {'amount': '121.0', 'currencyCode': 'EGP'}}, 'subtotalPriceSet': {'shopMoney': {'amount': '1.0', 'currencyCode': 'EGP'}}, 'totalTaxSet': {'shopMoney': {'amount': '0.0', 'currencyCode': 'EGP'}}, 'totalShippingPriceSet': {'shopMoney': {'amount': '120.0', 'currencyCode': 'EGP'}}, 'customer': {'id': 'gid://shopify/Customer/7539785334850', 'firstName': 'Karim', 'lastName': 'Wafik', 'email': 'karimwafik.kw@gmail.com', 'phone': None, 'addresses': [{'address1': '97 Marghany st., Heliopolis, Cairo, Egypt', 'address2': None, 'city': 'Cairo', 'province': 'Cairo', 'zip': '21113', 'country': 'Egypt', 'phone': '+201005527292'}, {'address1': 'Stone Residence Compound 306, Third Settlement', 'address2': '9', 'city': 'Cairo', 'province': 'Cairo', 'zip': None, 'country': 'Egypt', 'phone': '01005527292'}]}, 'shippingAddress': {'address1': 'Stone Residence Compound 306, Third Settlement', 'address2': '9', 'city': 'Cairo', 'province': 'Cairo', 'zip': None, 'country': 'Egypt', 'phone': '01005527292'}, 'billingAddress': {'address1': 'Stone Residence Compound 306, Third Settlement', 'address2': '9', 'city': 'Cairo', 'province': 'Cairo', 'zip': None, 'country': 'Egypt', 'phone': '01005527292'}, 'lineItems': {'edges': [{'node': {'id': 'gid://shopify/LineItem/15822411366466', 'quantity': 1, 'sku': None, 'title': 'karim test', 'variant': {'id': 'gid://shopify/ProductVariant/42361056985154', 'sku': None, 'price': '1.00', 'product': {'id': 'gid://shopify/Product/7522803515458', 'title': 'karim test'}}, 'discountedTotalSet': {'shopMoney': {'amount': '1.0', 'currencyCode': 'EGP'}}}}]}, 'note': None}}, {'node': {'id': 'gid://shopify/Order/6314801463362', 'name': '#1471', 'createdAt': '2025-08-03T12:37:41Z', 'tags': [], 'totalPriceSet': {'shopMoney': {'amount': '4620.0', 'currencyCode': 'EGP'}}, 'subtotalPriceSet': {'shopMoney': {'amount': '4500.0', 'currencyCode': 'EGP'}}, 'totalTaxSet': {'shopMoney': {'amount': '0.0', 'currencyCode': 'EGP'}}, 'totalShippingPriceSet': {'shopMoney': {'amount': '120.0', 'currencyCode': 'EGP'}}, 'customer': {'id': 'gid://shopify/Customer/8028986572866', 'firstName': 'Manal', 'lastName': 'Dorgham', 'email': 'manaldorgham4@gmail.com', 'phone': None, 'addresses': [{'address1': 'Moon valley compound. New Cairo', 'address2': '45 D', 'city': 'Cairo', 'province': 'Cairo', 'zip': None, 'country': 'Egypt', 'phone': '01222455309'}]}, 'shippingAddress': {'address1': 'Moon valley compound. New Cairo', 'address2': '45 D', 'city': 'Cairo', 'province': 'Cairo', 'zip': None, 'country': 'Egypt', 'phone': '01222455309'}, 'billingAddress': {'address1': 'Moon valley compound. New Cairo', 'address2': '45 D', 'city': 'Cairo', 'province': 'Cairo', 'zip': None, 'country': 'Egypt', 'phone': '01222455309'}, 'lineItems': {'edges': [{'node': {'id': 'gid://shopify/LineItem/15822235631682', 'quantity': 1, 'sku': 'FG-0000544', 'title': 'Floway ring set', 'variant': {'id': 'gid://shopify/ProductVariant/42003150602306', 'sku': 'FG-0000544', 'price': '4500.00', 'product': {'id': 'gid://shopify/Product/7442024890434', 'title': 'Floway ring set'}}, 'discountedTotalSet': {'shopMoney': {'amount': '4500.0', 'currencyCode': 'EGP'}}}}]}, 'note': None}}, {'node': {'id': 'gid://shopify/Order/6314790420546', 'name': '#1470', 'createdAt': '2025-08-03T12:26:20Z', 'tags': [], 'totalPriceSet': {'shopMoney': {'amount': '7600.0', 'currencyCode': 'EGP'}}, 'subtotalPriceSet': {'shopMoney': {'amount': '7600.0', 'currencyCode': 'EGP'}}, 'totalTaxSet': {'shopMoney': {'amount': '0.0', 'currencyCode': 'EGP'}}, 'totalShippingPriceSet': {'shopMoney': {'amount': '0.0', 'currencyCode': 'EGP'}}, 'customer': {'id': 'gid://shopify/Customer/7539785334850', 'firstName': 'Karim', 'lastName': 'Wafik', 'email': 'karimwafik.kw@gmail.com', 'phone': None, 'addresses': [{'address1': '97 Marghany st., Heliopolis, Cairo, Egypt', 'address2': None, 'city': 'Cairo', 'province': 'Cairo', 'zip': '21113', 'country': 'Egypt', 'phone': '+201005527292'}, {'address1': 'Stone Residence Compound 306, Third Settlement', 'address2': '9', 'city': 'Cairo', 'province': 'Cairo', 'zip': None, 'country': 'Egypt', 'phone': '01005527292'}]}, 'shippingAddress': None, 'billingAddress': None, 'lineItems': {'edges': [{'node': {'id': 'gid://shopify/LineItem/15822212661314', 'quantity': 1, 'sku': 'FG-0000645', 'title': 'Flare Earrings', 'variant': {'id': 'gid://shopify/ProductVariant/42277872271426', 'sku': 'FG-0000645', 'price': '3800.00', 'product': {'id': 'gid://shopify/Product/7506409586754', 'title': 'Flare Earrings'}}, 'discountedTotalSet': {'shopMoney': {'amount': '3800.0', 'currencyCode': 'EGP'}}}}, {'node': {'id': 'gid://shopify/LineItem/15822221770818', 'quantity': 1, 'sku': None, 'title': 'Gift Card', 'variant': None, 'discountedTotalSet': {'shopMoney': {'amount': '3800.0', 'currencyCode': 'EGP'}}}}]}, 'note': None}}, {'node': {'id': 'gid://shopify/Order/6314786357314', 'name': '#1469', 'createdAt': '2025-08-03T12:21:46Z', 'tags': [], 'totalPriceSet': {'shopMoney': {'amount': '6900.0', 'currencyCode': 'EGP'}}, 'subtotalPriceSet': {'shopMoney': {'amount': '6900.0', 'currencyCode': 'EGP'}}, 'totalTaxSet': {'shopMoney': {'amount': '0.0', 'currencyCode': 'EGP'}}, 'totalShippingPriceSet': {'shopMoney': {'amount': '0.0', 'currencyCode': 'EGP'}}, 'customer': None, 'shippingAddress': None, 'billingAddress': None, 'lineItems': {'edges': [{'node': {'id': 'gid://shopify/LineItem/15822205321282', 'quantity': 1, 'sku': 'FG-0000345', 'title': 'Mini Harmonia Earrings', 'variant': {'id': 'gid://shopify/ProductVariant/42003146801218', 'sku': 'FG-0000345', 'price': '6900.00', 'product': {'id': 'gid://shopify/Product/7442022793282', 'title': 'Mini Harmonia Earrings'}}, 'discountedTotalSet': {'shopMoney': {'amount': '6900.0', 'currencyCode': 'EGP'}}}}]}, 'note': None}}, {'node': {'id': 'gid://shopify/Order/6314775969858', 'name': '#1468', 'createdAt': '2025-08-03T12:12:09Z', 'tags': [], 'totalPriceSet': {'shopMoney': {'amount': '2920.0', 'currencyCode': 'EGP'}}, 'subtotalPriceSet': {'shopMoney': {'amount': '2800.0', 'currencyCode': 'EGP'}}, 'totalTaxSet': {'shopMoney': {'amount': '0.0', 'currencyCode': 'EGP'}}, 'totalShippingPriceSet': {'shopMoney': {'amount': '120.0', 'currencyCode': 'EGP'}}, 'customer': {'id': 'gid://shopify/Customer/8028955639874', 'firstName': 'Mariam', 'lastName': 'Mackawy', 'email': 'mariammackawy5@gmail.com', 'phone': None, 'addresses': [{'address1': 'الرحاب ٢، مجموعة ١٣١، عمارة ٢٠، شقة ٤١', 'address2': '41 El Rehab2, Group 131, Building 20, Apartment', 'city': 'Cairo', 'province': 'Cairo', 'zip': '11511', 'country': 'Egypt', 'phone': '01285358540'}]}, 'shippingAddress': {'address1': 'الرحاب ٢، مجموعة ١٣١، عمارة ٢٠، شقة ٤١', 'address2': '41 El Rehab2, Group 131, Building 20, Apartment', 'city': 'Cairo', 'province': 'Cairo', 'zip': '11511', 'country': 'Egypt', 'phone': '01285358540'}, 'billingAddress': {'address1': 'الرحاب ٢، مجموعة ١٣١، عمارة ٢٠، شقة ٤١', 'address2': '41 El Rehab2, Group 131, Building 20, Apartment', 'city': 'Cairo', 'province': 'Cairo', 'zip': '11511', 'country': 'Egypt', 'phone': '01285358540'}, 'lineItems': {'edges': [{'node': {'id': 'gid://shopify/LineItem/15822184742978', 'quantity': 1, 'sku': 'FG-0000498', 'title': 'Cassandra Pinky Ring', 'variant': {'id': 'gid://shopify/ProductVariant/42003149881410', 'sku': 'FG-0000498', 'price': '2800.00', 'product': {'id': 'gid://shopify/Product/7442024300610', 'title': 'Cassandra Pinky Ring'}}, 'discountedTotalSet': {'shopMoney': {'amount': '2800.0', 'currencyCode': 'EGP'}}}}]}, 'note': None}}, {'node': {'id': 'gid://shopify/Order/6314438000706', 'name': '#1467', 'createdAt': '2025-08-03T04:32:29Z', 'tags': [], 'totalPriceSet': {'shopMoney': {'amount': '3200.0', 'currencyCode': 'EGP'}}, 'subtotalPriceSet': {'shopMoney': {'amount': '3200.0', 'currencyCode': 'EGP'}}, 'totalTaxSet': {'shopMoney': {'amount': '0.0', 'currencyCode': 'EGP'}}, 'totalShippingPriceSet': {'shopMoney': {'amount': '0.0', 'currencyCode': 'EGP'}}, 'customer': {'id': 'gid://shopify/Customer/8026031751234', 'firstName': 'sally', 'lastName': 'monir', 'email': 'sallymonir@yahoo.com', 'phone': None, 'addresses': [{'address1': '113, st. 17, First Area, fifth zone, fifth settlement', 'address2': '2', 'city': 'New Cairo', 'province': 'Cairo', 'zip': None, 'country': 'Egypt', 'phone': '+201273099926'}]}, 'shippingAddress': None, 'billingAddress': {'address1': '113, st. 17, First Area, fifth zone, fifth settlement', 'address2': '2', 'city': 'New Cairo', 'province': 'Cairo', 'zip': None, 'country': 'Egypt', 'phone': '+201273099926'}, 'lineItems': {'edges': [{'node': {'id': 'gid://shopify/LineItem/15821581156418', 'quantity': 1, 'sku': 'FG-0000468', 'title': 'Frost Ring', 'variant': {'id': 'gid://shopify/ProductVariant/42003151618114', 'sku': 'FG-0000468', 'price': '3200.00', 'product': {'id': 'gid://shopify/Product/7442025381954', 'title': 'Frost Ring'}}, 'discountedTotalSet': {'shopMoney': {'amount': '3200.0', 'currencyCode': 'EGP'}}}}]}, 'note': None}}, {'node': {'id': 'gid://shopify/Order/6312813002818', 'name': '#1466', 'createdAt': '2025-08-02T11:04:39Z', 'tags': [], 'totalPriceSet': {'shopMoney': {'amount': '4420.0', 'currencyCode': 'EGP'}}, 'subtotalPriceSet': {'shopMoney': {'amount': '4300.0', 'currencyCode': 'EGP'}}, 'totalTaxSet': {'shopMoney': {'amount': '0.0', 'currencyCode': 'EGP'}}, 'totalShippingPriceSet': {'shopMoney': {'amount': '120.0', 'currencyCode': 'EGP'}}, 'customer': {'id': 'gid://shopify/Customer/8026480607298', 'firstName': 'Nadine', 'lastName': 'GALAL', 'email': 'nadinegalal09@gmail.com', 'phone': None, 'addresses': [{'address1': 'امام ٣١ شارع ابراهيم حلمي الدور ٣ شقة ١١', 'address2': 'الدور ٣ شقة ١١', 'city': 'Alexandria', 'province': 'Alexandria', 'zip': None, 'country': 'Egypt', 'phone': '01284444565'}]}, 'shippingAddress': {'address1': 'امام ٣١ شارع ابراهيم حلمي الدور ٣ شقة ١١', 'address2': 'الدور ٣ شقة ١١', 'city': 'Alexandria', 'province': 'Alexandria', 'zip': None, 'country': 'Egypt', 'phone': '01284444565'}, 'billingAddress': {'address1': 'امام ٣١ شارع ابراهيم حلمي الدور ٣ شقة ١١', 'address2': 'الدور ٣ شقة ١١', 'city': 'Alexandria', 'province': 'Alexandria', 'zip': None, 'country': 'Egypt', 'phone': '01284444565'}, 'lineItems': {'edges': [{'node': {'id': 'gid://shopify/LineItem/15817138307138', 'quantity': 1, 'sku': 'FG-0000499', 'title': 'Cassandra Mix Pinky Ring', 'variant': {'id': 'gid://shopify/ProductVariant/42003149815874', 'sku': 'FG-0000499', 'price': '4300.00', 'product': {'id': 'gid://shopify/Product/7442024235074', 'title': 'Cassandra Mix Pinky Ring'}}, 'discountedTotalSet': {'shopMoney': {'amount': '4300.0', 'currencyCode': 'EGP'}}}}]}, 'note': None}}, {'node': {'id': 'gid://shopify/Order/6312140603458', 'name': '#1465', 'createdAt': '2025-08-01T23:27:00Z', 'tags': [], 'totalPriceSet': {'shopMoney': {'amount': '8860.0', 'currencyCode': 'EGP'}}, 'subtotalPriceSet': {'shopMoney': {'amount': '8700.0', 'currencyCode': 'EGP'}}, 'totalTaxSet': {'shopMoney': {'amount': '0.0', 'currencyCode': 'EGP'}}, 'totalShippingPriceSet': {'shopMoney': {'amount': '160.0', 'currencyCode': 'EGP'}}, 'customer': {'id': 'gid://shopify/Customer/8024664145986', 'firstName': 'Mai', 'lastName': 'Aladdin', 'email': 'mayyo69@gmail.com', 'phone': None, 'addresses': [{'address1': 'Sohag - shar2', 'address2': None, 'city': 'Sohag', 'province': 'Sohag', 'zip': None, 'country': 'Egypt', 'phone': '01027733614'}]}, 'shippingAddress': {'address1': 'Sohag - shar2', 'address2': None, 'city': 'Sohag', 'province': 'Sohag', 'zip': None, 'country': 'Egypt', 'phone': '01027733614'}, 'billingAddress': {'address1': 'Sohag - shar2', 'address2': None, 'city': 'Sohag', 'province': 'Sohag', 'zip': None, 'country': 'Egypt', 'phone': '01027733614'}, 'lineItems': {'edges': [{'node': {'id': 'gid://shopify/LineItem/15815787151426', 'quantity': 1, 'sku': 'FG-0000498', 'title': 'Cassandra Pinky Ring', 'variant': {'id': 'gid://shopify/ProductVariant/42003149881410', 'sku': 'FG-0000498', 'price': '2800.00', 'product': {'id': 'gid://shopify/Product/7442024300610', 'title': 'Cassandra Pinky Ring'}}, 'discountedTotalSet': {'shopMoney': {'amount': '2800.0', 'currencyCode': 'EGP'}}}}, {'node': {'id': 'gid://shopify/LineItem/15815787184194', 'quantity': 1, 'sku': 'FG-0000575', 'title': 'Janus Cuff', 'variant': {'id': 'gid://shopify/ProductVariant/42003153256514', 'sku': 'FG-0000575', 'price': '5900.00', 'product': {'id': 'gid://shopify/Product/7442025906242', 'title': 'Janus Cuff'}}, 'discountedTotalSet': {'shopMoney': {'amount': '5900.0', 'currencyCode': 'EGP'}}}}]}, 'note': None}}, {'node': {'id': 'gid://shopify/Order/6311861026882', 'name': '#1464', 'createdAt': '2025-08-01T20:45:45Z', 'tags': [], 'totalPriceSet': {'shopMoney': {'amount': '4800.0', 'currencyCode': 'EGP'}}, 'subtotalPriceSet': {'shopMoney': {'amount': '4800.0', 'currencyCode': 'EGP'}}, 'totalTaxSet': {'shopMoney': {'amount': '0.0', 'currencyCode': 'EGP'}}, 'totalShippingPriceSet': {'shopMoney': {'amount': '0.0', 'currencyCode': 'EGP'}}, 'customer': {'id': 'gid://shopify/Customer/8024130191426', 'firstName': 'Ibrahim', 'lastName': 'ElGohary', 'email': 'hima22may@hotmail.com', 'phone': None, 'addresses': [{'address1': 'Wady compound', 'address2': 'Home', 'city': 'Cairo', 'province': 'Cairo', 'zip': None, 'country': 'Egypt', 'phone': '01007217010'}]}, 'shippingAddress': None, 'billingAddress': {'address1': 'Wady compound', 'address2': 'Home', 'city': 'Cairo', 'province': 'Cairo', 'zip': None, 'country': 'Egypt', 'phone': '01007217010'}, 'lineItems': {'edges': [{'node': {'id': 'gid://shopify/LineItem/15815036600386', 'quantity': 1, 'sku': 'FG-0000075', 'title': 'Sulla Luna Earrings', 'variant': {'id': 'gid://shopify/ProductVariant/42003146211394', 'sku': 'FG-0000075', 'price': '4800.00', 'product': {'id': 'gid://shopify/Product/7442022170690', 'title': 'Sulla Luna Earrings'}}, 'discountedTotalSet': {'shopMoney': {'amount': '4800.0', 'currencyCode': 'EGP'}}}}]}, 'note': None}}, {'node': {'id': 'gid://shopify/Order/6311162380354', 'name': '#1463', 'createdAt': '2025-08-01T15:19:07Z', 'tags': [], 'totalPriceSet': {'shopMoney': {'amount': '7460.0', 'currencyCode': 'EGP'}}, 'subtotalPriceSet': {'shopMoney': {'amount': '7300.0', 'currencyCode': 'EGP'}}, 'totalTaxSet': {'shopMoney': {'amount': '0.0', 'currencyCode': 'EGP'}}, 'totalShippingPriceSet': {'shopMoney': {'amount': '160.0', 'currencyCode': 'EGP'}}, 'customer': {'id': 'gid://shopify/Customer/8022959784002', 'firstName': 'Nahed', 'lastName': 'Mohamed', 'email': 'nahedmohamed714@gmail.com', 'phone': None, 'addresses': [{'address1': 'العصافره بحرى الاسكندريه شارع اطلس عماره ١١ مكرر بجوار سوبر ناركت تسالى جاد امام مايوركا كافيه', 'address2': 'الدور التامن شقه ١٥', 'city': 'alexandria', 'province': 'Alexandria', 'zip': None, 'country': 'Egypt', 'phone': '+201284002489'}]}, 'shippingAddress': {'address1': 'العصافره بحرى الاسكندريه شارع اطلس عماره ١١ مكرر بجوار سوبر ناركت تسالى جاد امام مايوركا كافيه', 'address2': 'الدور التامن شقه ١٥', 'city': 'alexandria', 'province': 'Alexandria', 'zip': None, 'country': 'Egypt', 'phone': '+201284002489'}, 'billingAddress': {'address1': 'العصافره بحرى الاسكندريه شارع اطلس عماره ١١ مكرر بجوار سوبر ناركت تسالى جاد امام مايوركا كافيه', 'address2': 'الدور التامن شقه ١٥', 'city': 'alexandria', 'province': 'Alexandria', 'zip': None, 'country': 'Egypt', 'phone': '+201284002489'}, 'lineItems': {'edges': [{'node': {'id': 'gid://shopify/LineItem/15813349867586', 'quantity': 1, 'sku': 'FG-0000077', 'title': 'Sulla Luna Mix Earrings', 'variant': {'id': 'gid://shopify/ProductVariant/42003146276930', 'sku': 'FG-0000077', 'price': '7300.00', 'product': {'id': 'gid://shopify/Product/7442022203458', 'title': 'Sulla Luna Mix Earrings'}}, 'discountedTotalSet': {'shopMoney': {'amount': '7300.0', 'currencyCode': 'EGP'}}}}]}, 'note': None}}, {'node': {'id': 'gid://shopify/Order/6308680728642', 'name': '#1462', 'createdAt': '2025-07-31T09:58:23Z', 'tags': [], 'totalPriceSet': {'shopMoney': {'amount': '25900.0', 'currencyCode': 'EGP'}}, 'subtotalPriceSet': {'shopMoney': {'amount': '25700.0', 'currencyCode': 'EGP'}}, 'totalTaxSet': {'shopMoney': {'amount': '0.0', 'currencyCode': 'EGP'}}, 'totalShippingPriceSet': {'shopMoney': {'amount': '200.0', 'currencyCode': 'EGP'}}, 'customer': {'id': 'gid://shopify/Customer/8016631660610', 'firstName': 'Mohamed', 'lastName': 'Maher', 'email': 'm.maher525@gmail.com', 'phone': None, 'addresses': [{'address1': None, 'address2': None, 'city': None, 'province': None, 'zip': None, 'country': 'Egypt', 'phone': None}, {'address1': 'الهضبة الوسطى الحي الثالث كمباوند ديار سيتي 3 خلف مدرسة ريماس', 'address2': 'عمارة 2 شقة 20 بوابة 3', 'city': 'Al Mokkatam', 'province': 'Cairo', 'zip': None, 'country': 'Egypt', 'phone': '01069987443'}]}, 'shippingAddress': {'address1': 'الهضبة الوسطى الحي الثالث كمباوند ديار سيتي 3 خلف مدرسة ريماس', 'address2': 'عمارة 2 شقة 20 بوابة 3', 'city': 'Al Mokkatam', 'province': 'Cairo', 'zip': None, 'country': 'Egypt', 'phone': '01069987443'}, 'billingAddress': {'address1': 'الهضبة الوسطى الحي الثالث كمباوند ديار سيتي 3 خلف مدرسة ريماس', 'address2': 'عمارة 2 شقة 20 بوابة 3', 'city': 'Al Mokkatam', 'province': 'Cairo', 'zip': None, 'country': 'Egypt', 'phone': '01069987443'}, 'lineItems': {'edges': [{'node': {'id': 'gid://shopify/LineItem/15807895044162', 'quantity': 1, 'sku': 'FG-0000512', 'title': 'Riverstone Bracelet', 'variant': {'id': 'gid://shopify/ProductVariant/42003152404546', 'sku': 'FG-0000512', 'price': '5000.00', 'product': {'id': 'gid://shopify/Product/7442025611330', 'title': 'Riverstone Bracelet'}}, 'discountedTotalSet': {'shopMoney': {'amount': '5000.0', 'currencyCode': 'EGP'}}}}, {'node': {'id': 'gid://shopify/LineItem/15807895076930', 'quantity': 1, 'sku': 'FG-0000571', 'title': 'Riverstone Ring Mix', 'variant': {'id': 'gid://shopify/ProductVariant/42003150995522', 'sku': 'FG-0000571', 'price': '3900.00', 'product': {'id': 'gid://shopify/Product/7442025152578', 'title': 'Riverstone Ring Mix'}}, 'discountedTotalSet': {'shopMoney': {'amount': '3900.0', 'currencyCode': 'EGP'}}}}, {'node': {'id': 'gid://shopify/LineItem/15807895109698', 'quantity': 1, 'sku': 'FG-0000568', 'title': 'Riverstone Necklace Mix', 'variant': {'id': 'gid://shopify/ProductVariant/42003150962754', 'sku': 'FG-0000568', 'price': '16800.00', 'product': {'id': 'gid://shopify/Product/7442025119810', 'title': 'Riverstone Necklace Mix'}}, 'discountedTotalSet': {'shopMoney': {'amount': '16800.0', 'currencyCode': 'EGP'}}}}]}, 'note': None}}, {'node': {'id': 'gid://shopify/Order/6308073570370', 'name': '#1461', 'createdAt': '2025-07-30T23:37:58Z', 'tags': [], 'totalPriceSet': {'shopMoney': {'amount': '6700.0', 'currencyCode': 'EGP'}}, 'subtotalPriceSet': {'shopMoney': {'amount': '6500.0', 'currencyCode': 'EGP'}}, 'totalTaxSet': {'shopMoney': {'amount': '0.0', 'currencyCode': 'EGP'}}, 'totalShippingPriceSet': {'shopMoney': {'amount': '200.0', 'currencyCode': 'EGP'}}, 'customer': {'id': 'gid://shopify/Customer/8015808462914', 'firstName': 'farouk', 'lastName': 'yehia', 'email': 'farouky01@gmail.com', 'phone': None, 'addresses': [{'address1': 'mesaha sq', 'address2': '5 mesaha sq, 15th floor', 'city': 'giza', 'province': 'Cairo', 'zip': '12611', 'country': 'Egypt', 'phone': '+201060520013'}]}, 'shippingAddress': {'address1': 'mesaha sq', 'address2': '5 mesaha sq, 15th floor', 'city': 'giza', 'province': 'Cairo', 'zip': '12611', 'country': 'Egypt', 'phone': '+201060520013'}, 'billingAddress': {'address1': 'mesaha sq', 'address2': '5 mesaha sq, 15th floor', 'city': 'giza', 'province': 'Cairo', 'zip': '12611', 'country': 'Egypt', 'phone': '+201060520013'}, 'lineItems': {'edges': [{'node': {'id': 'gid://shopify/LineItem/15806636818498', 'quantity': 1, 'sku': 'FG-0000408', 'title': 'Nightfall Earrings', 'variant': {'id': 'gid://shopify/ProductVariant/42003148996674', 'sku': 'FG-0000408', 'price': '6500.00', 'product': {'id': 'gid://shopify/Product/7442023841858', 'title': 'Nightfall Earrings'}}, 'discountedTotalSet': {'shopMoney': {'amount': '6500.0', 'currencyCode': 'EGP'}}}}]}, 'note': None}}], 'pageInfo': {'hasNextPage': True, 'endCursor': 'eyJsYXN0X2lkIjo2MzA4MDczNTcwMzcwLCJsYXN0X3ZhbHVlIjoiMjAyNS0wNy0zMCAyMzozNzo1OC45MDkxNTcifQ=='}}}, 'status': 'success'}
2025-08-05 15:19:16,845 - sync_service - INFO - Retrieved 20 total orders, 20 unsynced orders from Shopify store local
2025-08-05 15:19:16,848 - sync_service - INFO - Processing order: #1480
2025-08-05 15:19:16,849 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'login', 'request': {'company': 'JudeBenHalim_Test', 'user': 'manager'}, 'response': None, 'status': None}
2025-08-05 15:19:37,922 - sync_service - ERROR - SAP login error: All connection attempts failed
2025-08-05 15:19:37,924 - sync_service - ERROR - Failed to search customer by phone: Failed to login to SAP
2025-08-05 15:19:37,926 - sync_service - INFO - Creating new customer in SAP
2025-08-05 15:19:37,929 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'login', 'request': {'company': 'JudeBenHalim_Test', 'user': 'manager'}, 'response': None, 'status': None}
2025-08-05 15:19:58,965 - sync_service - ERROR - SAP login error: All connection attempts failed
2025-08-05 15:19:58,965 - sync_service - ERROR - Failed to create customer in SAP: Failed to login to SAP
2025-08-05 15:19:58,974 - sync_service - ERROR - Failed to create customer for order #1480
2025-08-05 18:05:00,715 - sync_service - INFO - Initialized Shopify client for store: Local Store (local)
2025-08-05 18:05:00,739 - sync_service - INFO - API Call: {'service': 'shopify', 'endpoint': 'graphql_local', 'request': {'query': '\n        query getOrders($first: Int!) {\n            orders(first: $first) {\n                edges {\n                    node {\n                        id\n                        name\n                        createdAt\n                    }\n                }\n            }\n        }\n        ', 'variables': {'first': 1}}, 'response': None, 'status': None}
2025-08-05 18:05:01,391 - sync_service - INFO - API Call: {'service': 'shopify', 'endpoint': 'graphql_local', 'request': None, 'response': {'orders': {'edges': [{'node': {'id': 'gid://shopify/Order/6170973569090', 'name': '#1001', 'createdAt': '2025-05-15T08:35:47Z'}}]}}, 'status': 'success'}
2025-08-05 18:05:01,400 - sync_service - INFO - API Call: {'service': 'shopify', 'endpoint': 'graphql_local', 'request': {'query': '\n            query getOrders($first: Int!, $after: String) {\n                orders(first: $first, after: $after, sortKey: CREATED_AT, reverse: true) {\n                    edges {\n                        node {\n                            id\n                            name\n                            createdAt\n                            tags\n                            totalPriceSet {\n                                shopMoney {\n                                    amount\n                                    currencyCode\n                                }\n                            }\n                            subtotalPriceSet {\n                                shopMoney {\n                                    amount\n                                    currencyCode\n                                }\n                            }\n                            totalTaxSet {\n                                shopMoney {\n                                    amount\n                                    currencyCode\n                                }\n                            }\n                            totalShippingPriceSet {\n                                shopMoney {\n                                    amount\n                                    currencyCode\n                                }\n                            }\n                            customer {\n                                id\n                                firstName\n                                lastName\n                                email\n                                phone\n                                addresses {\n                                    address1\n                                    address2\n                                    city\n                                    province\n                                    zip\n                                    country\n                                    phone\n                                }\n                            }\n                            shippingAddress {\n                                address1\n                                address2\n                                city\n                                province\n                                zip\n                                country\n                                phone\n                            }\n                            billingAddress {\n                                address1\n                                address2\n                                city\n                                province\n                                zip\n                                country\n                                phone\n                            }\n                            lineItems(first: 50) {\n                                edges {\n                                    node {\n                                        id\n                                        quantity\n                                        sku\n                                        title\n                                        variant {\n                                            id\n                                            sku\n                                            price\n                                            product {\n                                                id\n                                                title\n                                            }\n                                        }\n                                        discountedTotalSet {\n                                            shopMoney {\n                                                amount\n                                                currencyCode\n                                            }\n                                        }\n                                    }\n                                }\n                            }\n                            note\n                        }\n                    }\n                    pageInfo {\n                        hasNextPage\n                        endCursor\n                    }\n                }\n            }\n            ', 'variables': {'first': 20, 'after': None}}, 'response': None, 'status': None}
2025-08-05 18:05:02,244 - sync_service - INFO - API Call: {'service': 'shopify', 'endpoint': 'graphql_local', 'request': None, 'response': {'orders': {'edges': [{'node': {'id': 'gid://shopify/Order/6318310686786', 'name': '#1480', 'createdAt': '2025-08-05T09:59:13Z', 'tags': [], 'totalPriceSet': {'shopMoney': {'amount': '5200.0', 'currencyCode': 'EGP'}}, 'subtotalPriceSet': {'shopMoney': {'amount': '5000.0', 'currencyCode': 'EGP'}}, 'totalTaxSet': {'shopMoney': {'amount': '0.0', 'currencyCode': 'EGP'}}, 'totalShippingPriceSet': {'shopMoney': {'amount': '200.0', 'currencyCode': 'EGP'}}, 'customer': {'id': 'gid://shopify/Customer/8037256233026', 'firstName': 'Omnia', 'lastName': 'Ezz Elarab', 'email': 'nezzelarab@ezz-elarab.com', 'phone': None, 'addresses': [{'address1': 'Palm hills 6th october, phase 1', 'address2': 'Villa b53', 'city': 'Giza', 'province': '6th of October', 'zip': '00000', 'country': 'Egypt', 'phone': '00201003370743'}]}, 'shippingAddress': {'address1': 'Palm hills 6th october, phase 1', 'address2': 'Villa b53', 'city': 'Giza', 'province': '6th of October', 'zip': '00000', 'country': 'Egypt', 'phone': '00201003370743'}, 'billingAddress': {'address1': 'Palm hills 6th october, phase 1', 'address2': 'Villa b53', 'city': 'Giza', 'province': '6th of October', 'zip': '00000', 'country': 'Egypt', 'phone': '00201003370743'}, 'lineItems': {'edges': [{'node': {'id': 'gid://shopify/LineItem/15830693707842', 'quantity': 1, 'sku': 'FG-0000632', 'title': 'Ember Earrings', 'variant': {'id': 'gid://shopify/ProductVariant/42194952650818', 'sku': 'FG-0000632', 'price': '5000.00', 'product': {'id': 'gid://shopify/Product/7490852847682', 'title': 'Ember Earrings'}}, 'discountedTotalSet': {'shopMoney': {'amount': '5000.0', 'currencyCode': 'EGP'}}}}]}, 'note': None}}, {'node': {'id': 'gid://shopify/Order/6318078263362', 'name': '#1479', 'createdAt': '2025-08-05T04:44:47Z', 'tags': [], 'totalPriceSet': {'shopMoney': {'amount': '7460.0', 'currencyCode': 'EGP'}}, 'subtotalPriceSet': {'shopMoney': {'amount': '7300.0', 'currencyCode': 'EGP'}}, 'totalTaxSet': {'shopMoney': {'amount': '0.0', 'currencyCode': 'EGP'}}, 'totalShippingPriceSet': {'shopMoney': {'amount': '160.0', 'currencyCode': 'EGP'}}, 'customer': {'id': 'gid://shopify/Customer/8035661905986', 'firstName': 'Ziad', 'lastName': 'Fawi', 'email': 'ziadfawi6@gmail.com', 'phone': None, 'addresses': [{'address1': None, 'address2': None, 'city': None, 'province': None, 'zip': None, 'country': 'Egypt', 'phone': None}, {'address1': '46 soultan street behind ices hospital', 'address2': 'Number of the apartment 17', 'city': 'Alexandria', 'province': 'Alexandria', 'zip': None, 'country': 'Egypt', 'phone': '01271088966'}]}, 'shippingAddress': {'address1': '46 soultan street behind ices hospital', 'address2': 'Number of the apartment 17', 'city': 'Alexandria', 'province': 'Alexandria', 'zip': None, 'country': 'Egypt', 'phone': '01271088966'}, 'billingAddress': {'address1': '46 soultan street behind ices hospital', 'address2': 'Number of the apartment 17', 'city': 'Alexandria', 'province': 'Alexandria', 'zip': None, 'country': 'Egypt', 'phone': '01271088966'}, 'lineItems': {'edges': [{'node': {'id': 'gid://shopify/LineItem/15830286434370', 'quantity': 1, 'sku': 'FG-0000077', 'title': 'Sulla Luna Mix Earrings', 'variant': {'id': 'gid://shopify/ProductVariant/42003146276930', 'sku': 'FG-0000077', 'price': '7300.00', 'product': {'id': 'gid://shopify/Product/7442022203458', 'title': 'Sulla Luna Mix Earrings'}}, 'discountedTotalSet': {'shopMoney': {'amount': '7300.0', 'currencyCode': 'EGP'}}}}]}, 'note': None}}, {'node': {'id': 'gid://shopify/Order/6317218398274', 'name': '#1478', 'createdAt': '2025-08-04T18:33:12Z', 'tags': [], 'totalPriceSet': {'shopMoney': {'amount': '2880.0', 'currencyCode': 'EGP'}}, 'subtotalPriceSet': {'shopMoney': {'amount': '2880.0', 'currencyCode': 'EGP'}}, 'totalTaxSet': {'shopMoney': {'amount': '0.0', 'currencyCode': 'EGP'}}, 'totalShippingPriceSet': {'shopMoney': {'amount': '0.0', 'currencyCode': 'EGP'}}, 'customer': {'id': 'gid://shopify/Customer/8032449527874', 'firstName': 'Mahmoud', 'lastName': 'Ayman', 'email': 'mahmoudayman80@yahoo.com', 'phone': None, 'addresses': [{'address1': None, 'address2': None, 'city': None, 'province': None, 'zip': None, 'country': 'Egypt', 'phone': None}, {'address1': '5370 el mokattam', 'address2': None, 'city': 'Cairo', 'province': 'Cairo', 'zip': None, 'country': 'Egypt', 'phone': '01111346333'}]}, 'shippingAddress': None, 'billingAddress': {'address1': '5370 el mokattam', 'address2': None, 'city': 'Cairo', 'province': 'Cairo', 'zip': None, 'country': 'Egypt', 'phone': '01111346333'}, 'lineItems': {'edges': [{'node': {'id': 'gid://shopify/LineItem/15828170047554', 'quantity': 1, 'sku': 'FG-0000589', 'title': 'Una Ring', 'variant': {'id': 'gid://shopify/ProductVariant/42003153518658', 'sku': 'FG-0000589', 'price': '3200.00', 'product': {'id': 'gid://shopify/Product/7442026070082', 'title': 'Una Ring'}}, 'discountedTotalSet': {'shopMoney': {'amount': '3200.0', 'currencyCode': 'EGP'}}}}]}, 'note': None}}, {'node': {'id': 'gid://shopify/Order/6317035520066', 'name': '#1477', 'createdAt': '2025-08-04T16:50:11Z', 'tags': [], 'totalPriceSet': {'shopMoney': {'amount': '5060.0', 'currencyCode': 'EGP'}}, 'subtotalPriceSet': {'shopMoney': {'amount': '4900.0', 'currencyCode': 'EGP'}}, 'totalTaxSet': {'shopMoney': {'amount': '0.0', 'currencyCode': 'EGP'}}, 'totalShippingPriceSet': {'shopMoney': {'amount': '160.0', 'currencyCode': 'EGP'}}, 'customer': {'id': 'gid://shopify/Customer/8031975374914', 'firstName': 'Passant', 'lastName': 'Dawood', 'email': 'passantdawood@gmail.com', 'phone': None, 'addresses': [{'address1': '399 elguish road san stefano grand plaza', 'address2': '1', 'city': 'Alexandria', 'province': 'Alexandria', 'zip': None, 'country': 'Egypt', 'phone': '01223100564'}]}, 'shippingAddress': {'address1': '399 elguish road san stefano grand plaza', 'address2': '1', 'city': 'Alexandria', 'province': 'Alexandria', 'zip': None, 'country': 'Egypt', 'phone': '01223100564'}, 'billingAddress': {'address1': '399 elguish road san stefano grand plaza', 'address2': '1', 'city': 'Alexandria', 'province': 'Alexandria', 'zip': None, 'country': 'Egypt', 'phone': '01223100564'}, 'lineItems': {'edges': [{'node': {'id': 'gid://shopify/LineItem/15827708805186', 'quantity': 1, 'sku': 'FG-0000688', 'title': 'Multi-way Halo Ring', 'variant': {'id': 'gid://shopify/ProductVariant/42194980896834', 'sku': 'FG-0000688', 'price': '4900.00', 'product': {'id': 'gid://shopify/Product/7490853339202', 'title': 'Multi-way Halo Ring'}}, 'discountedTotalSet': {'shopMoney': {'amount': '4900.0', 'currencyCode': 'EGP'}}}}]}, 'note': None}}, {'node': {'id': 'gid://shopify/Order/6317030244418', 'name': '#1476', 'createdAt': '2025-08-04T16:47:03Z', 'tags': [], 'totalPriceSet': {'shopMoney': {'amount': '5320.0', 'currencyCode': 'EGP'}}, 'subtotalPriceSet': {'shopMoney': {'amount': '5200.0', 'currencyCode': 'EGP'}}, 'totalTaxSet': {'shopMoney': {'amount': '0.0', 'currencyCode': 'EGP'}}, 'totalShippingPriceSet': {'shopMoney': {'amount': '120.0', 'currencyCode': 'EGP'}}, 'customer': {'id': 'gid://shopify/Customer/8031970918466', 'firstName': 'Noha', 'lastName': 'Emad', 'email': 'noha@kitshe-eg.com', 'phone': None, 'addresses': [{'address1': 'التجمع الخامس االدور الاول شقه ٤جنوب الأكاديمية أ شارع ان', 'address2': 'التجمع الخامس- جنوب الاكادميه أ شارع انس ابن مالك فيلا ٢٨٦', 'city': 'Cairo', 'province': 'Cairo', 'zip': '11865', 'country': 'Egypt', 'phone': '01200008517'}]}, 'shippingAddress': {'address1': 'التجمع الخامس االدور الاول شقه ٤جنوب الأكاديمية أ شارع ان', 'address2': 'التجمع الخامس- جنوب الاكادميه أ شارع انس ابن مالك فيلا ٢٨٦', 'city': 'Cairo', 'province': 'Cairo', 'zip': '11865', 'country': 'Egypt', 'phone': '01200008517'}, 'billingAddress': {'address1': 'التجمع الخامس االدور الاول شقه ٤جنوب الأكاديمية أ شارع ان', 'address2': 'التجمع الخامس- جنوب الاكادميه أ شارع انس ابن مالك فيلا ٢٨٦', 'city': 'Cairo', 'province': 'Cairo', 'zip': '11865', 'country': 'Egypt', 'phone': '01200008517'}, 'lineItems': {'edges': [{'node': {'id': 'gid://shopify/LineItem/15827697336386', 'quantity': 1, 'sku': 'FG-0000640', 'title': 'Essence Earrings', 'variant': {'id': 'gid://shopify/ProductVariant/42194952945730', 'sku': 'FG-0000640', 'price': '5200.00', 'product': {'id': 'gid://shopify/Product/7490852945986', 'title': 'Essence Earrings'}}, 'discountedTotalSet': {'shopMoney': {'amount': '5200.0', 'currencyCode': 'EGP'}}}}]}, 'note': None}}, {'node': {'id': 'gid://shopify/Order/6316680347714', 'name': '#1475', 'createdAt': '2025-08-04T12:56:00Z', 'tags': [], 'totalPriceSet': {'shopMoney': {'amount': '5120.0', 'currencyCode': 'EGP'}}, 'subtotalPriceSet': {'shopMoney': {'amount': '5000.0', 'currencyCode': 'EGP'}}, 'totalTaxSet': {'shopMoney': {'amount': '0.0', 'currencyCode': 'EGP'}}, 'totalShippingPriceSet': {'shopMoney': {'amount': '120.0', 'currencyCode': 'EGP'}}, 'customer': {'id': 'gid://shopify/Customer/8031264636994', 'firstName': 'Hanan', 'lastName': 'HASSAN', 'email': 'hananhassan1204@gmail.com', 'phone': None, 'addresses': [{'address1': 'القاهرة الجديدة / كمبوند سوديك ڤيليت عمارة واحد إف شقة أرضي زيرو أربعة', 'address2': '04 الدور الارضي', 'city': 'القاهرة', 'province': 'Cairo', 'zip': '11511', 'country': 'Egypt', 'phone': '01000340138'}]}, 'shippingAddress': {'address1': 'القاهرة الجديدة / كمبوند سوديك ڤيليت عمارة واحد إف شقة أرضي زيرو أربعة', 'address2': '04 الدور الارضي', 'city': 'القاهرة', 'province': 'Cairo', 'zip': '11511', 'country': 'Egypt', 'phone': '01000340138'}, 'billingAddress': {'address1': 'القاهرة الجديدة / كمبوند سوديك ڤيليت عمارة واحد إف شقة أرضي زيرو أربعة', 'address2': '04 الدور الارضي', 'city': 'القاهرة', 'province': 'Cairo', 'zip': '11511', 'country': 'Egypt', 'phone': '01000340138'}, 'lineItems': {'edges': [{'node': {'id': 'gid://shopify/LineItem/15826901237826', 'quantity': 1, 'sku': 'FG-0000632', 'title': 'Ember Earrings', 'variant': {'id': 'gid://shopify/ProductVariant/42194952650818', 'sku': 'FG-0000632', 'price': '5000.00', 'product': {'id': 'gid://shopify/Product/7490852847682', 'title': 'Ember Earrings'}}, 'discountedTotalSet': {'shopMoney': {'amount': '5000.0', 'currencyCode': 'EGP'}}}}]}, 'note': None}}, {'node': {'id': 'gid://shopify/Order/6316580536386', 'name': '#1474', 'createdAt': '2025-08-04T11:08:05Z', 'tags': [], 'totalPriceSet': {'shopMoney': {'amount': '6020.0', 'currencyCode': 'EGP'}}, 'subtotalPriceSet': {'shopMoney': {'amount': '5900.0', 'currencyCode': 'EGP'}}, 'totalTaxSet': {'shopMoney': {'amount': '0.0', 'currencyCode': 'EGP'}}, 'totalShippingPriceSet': {'shopMoney': {'amount': '120.0', 'currencyCode': 'EGP'}}, 'customer': {'id': 'gid://shopify/Customer/8031120457794', 'firstName': 'Nourhan', 'lastName': 'Swellam', 'email': 'swellam@aucegypt.edu', 'phone': None, 'addresses': [{'address1': '144 el banafseg 11 ', 'address2': 'Villa 144', 'city': 'Cairo', 'province': 'Cairo', 'zip': '11341', 'country': 'Egypt', 'phone': '+201003928976'}]}, 'shippingAddress': {'address1': '144 el banafseg 11', 'address2': 'Villa 144', 'city': 'Cairo', 'province': 'Cairo', 'zip': '11341', 'country': 'Egypt', 'phone': '+201003928976'}, 'billingAddress': {'address1': '144 el banafseg 11', 'address2': 'Villa 144', 'city': 'Cairo', 'province': 'Cairo', 'zip': '11341', 'country': 'Egypt', 'phone': '+201003928976'}, 'lineItems': {'edges': [{'node': {'id': 'gid://shopify/LineItem/15826707382338', 'quantity': 1, 'sku': 'FG-0000369', 'title': 'Mini Sahara Mix Hoop', 'variant': {'id': 'gid://shopify/ProductVariant/42003146997826', 'sku': 'FG-0000369', 'price': '5900.00', 'product': {'id': 'gid://shopify/Product/7442022989890', 'title': 'Mini Sahara Mix Hoop'}}, 'discountedTotalSet': {'shopMoney': {'amount': '5900.0', 'currencyCode': 'EGP'}}}}]}, 'note': None}}, {'node': {'id': 'gid://shopify/Order/6315006394434', 'name': '#1473', 'createdAt': '2025-08-03T15:21:25Z', 'tags': [], 'totalPriceSet': {'shopMoney': {'amount': '4420.0', 'currencyCode': 'EGP'}}, 'subtotalPriceSet': {'shopMoney': {'amount': '4300.0', 'currencyCode': 'EGP'}}, 'totalTaxSet': {'shopMoney': {'amount': '0.0', 'currencyCode': 'EGP'}}, 'totalShippingPriceSet': {'shopMoney': {'amount': '120.0', 'currencyCode': 'EGP'}}, 'customer': {'id': 'gid://shopify/Customer/8015867478082', 'firstName': 'Yomna', 'lastName': 'Sherif', 'email': 'yomna.sherif.nawal@gmail.com', 'phone': None, 'addresses': [{'address1': 'Group 15 , building 5 , apartment 22', 'address2': 'Group 15 , building 5 , apartment 22', 'city': 'Rehab City', 'province': 'Cairo', 'zip': '0000', 'country': 'Egypt', 'phone': '+201003988787'}, {'address1': None, 'address2': None, 'city': None, 'province': None, 'zip': None, 'country': 'Egypt', 'phone': None}]}, 'shippingAddress': {'address1': 'Group 15 , building 5 , apartment 22', 'address2': 'Group 15 , building 5 , apartment 22', 'city': 'Rehab City', 'province': 'Cairo', 'zip': '0000', 'country': 'Egypt', 'phone': '+201003988787'}, 'billingAddress': {'address1': 'Group 15 , building 5 , apartment 22', 'address2': 'Group 15 , building 5 , apartment 22', 'city': 'Rehab City', 'province': 'Cairo', 'zip': '0000', 'country': 'Egypt', 'phone': '+201003988787'}, 'lineItems': {'edges': [{'node': {'id': 'gid://shopify/LineItem/15822752055362', 'quantity': 1, 'sku': 'FG-0000499', 'title': 'Cassandra Mix Pinky Ring', 'variant': {'id': 'gid://shopify/ProductVariant/42003149815874', 'sku': 'FG-0000499', 'price': '4300.00', 'product': {'id': 'gid://shopify/Product/7442024235074', 'title': 'Cassandra Mix Pinky Ring'}}, 'discountedTotalSet': {'shopMoney': {'amount': '4300.0', 'currencyCode': 'EGP'}}}}]}, 'note': None}}, {'node': {'id': 'gid://shopify/Order/6314877780034', 'name': '#1472', 'createdAt': '2025-08-03T13:47:12Z', 'tags': [], 'totalPriceSet': {'shopMoney': {'amount': '121.0', 'currencyCode': 'EGP'}}, 'subtotalPriceSet': {'shopMoney': {'amount': '1.0', 'currencyCode': 'EGP'}}, 'totalTaxSet': {'shopMoney': {'amount': '0.0', 'currencyCode': 'EGP'}}, 'totalShippingPriceSet': {'shopMoney': {'amount': '120.0', 'currencyCode': 'EGP'}}, 'customer': {'id': 'gid://shopify/Customer/7539785334850', 'firstName': 'Karim', 'lastName': 'Wafik', 'email': 'karimwafik.kw@gmail.com', 'phone': None, 'addresses': [{'address1': '97 Marghany st., Heliopolis, Cairo, Egypt', 'address2': None, 'city': 'Cairo', 'province': 'Cairo', 'zip': '21113', 'country': 'Egypt', 'phone': '+201005527292'}, {'address1': 'Stone Residence Compound 306, Third Settlement', 'address2': '9', 'city': 'Cairo', 'province': 'Cairo', 'zip': None, 'country': 'Egypt', 'phone': '01005527292'}]}, 'shippingAddress': {'address1': 'Stone Residence Compound 306, Third Settlement', 'address2': '9', 'city': 'Cairo', 'province': 'Cairo', 'zip': None, 'country': 'Egypt', 'phone': '01005527292'}, 'billingAddress': {'address1': 'Stone Residence Compound 306, Third Settlement', 'address2': '9', 'city': 'Cairo', 'province': 'Cairo', 'zip': None, 'country': 'Egypt', 'phone': '01005527292'}, 'lineItems': {'edges': [{'node': {'id': 'gid://shopify/LineItem/15822411366466', 'quantity': 1, 'sku': None, 'title': 'karim test', 'variant': {'id': 'gid://shopify/ProductVariant/42361056985154', 'sku': None, 'price': '1.00', 'product': {'id': 'gid://shopify/Product/7522803515458', 'title': 'karim test'}}, 'discountedTotalSet': {'shopMoney': {'amount': '1.0', 'currencyCode': 'EGP'}}}}]}, 'note': None}}, {'node': {'id': 'gid://shopify/Order/6314801463362', 'name': '#1471', 'createdAt': '2025-08-03T12:37:41Z', 'tags': [], 'totalPriceSet': {'shopMoney': {'amount': '4620.0', 'currencyCode': 'EGP'}}, 'subtotalPriceSet': {'shopMoney': {'amount': '4500.0', 'currencyCode': 'EGP'}}, 'totalTaxSet': {'shopMoney': {'amount': '0.0', 'currencyCode': 'EGP'}}, 'totalShippingPriceSet': {'shopMoney': {'amount': '120.0', 'currencyCode': 'EGP'}}, 'customer': {'id': 'gid://shopify/Customer/8028986572866', 'firstName': 'Manal', 'lastName': 'Dorgham', 'email': 'manaldorgham4@gmail.com', 'phone': None, 'addresses': [{'address1': 'Moon valley compound. New Cairo', 'address2': '45 D', 'city': 'Cairo', 'province': 'Cairo', 'zip': None, 'country': 'Egypt', 'phone': '01222455309'}]}, 'shippingAddress': {'address1': 'Moon valley compound. New Cairo', 'address2': '45 D', 'city': 'Cairo', 'province': 'Cairo', 'zip': None, 'country': 'Egypt', 'phone': '01222455309'}, 'billingAddress': {'address1': 'Moon valley compound. New Cairo', 'address2': '45 D', 'city': 'Cairo', 'province': 'Cairo', 'zip': None, 'country': 'Egypt', 'phone': '01222455309'}, 'lineItems': {'edges': [{'node': {'id': 'gid://shopify/LineItem/15822235631682', 'quantity': 1, 'sku': 'FG-0000544', 'title': 'Floway ring set', 'variant': {'id': 'gid://shopify/ProductVariant/42003150602306', 'sku': 'FG-0000544', 'price': '4500.00', 'product': {'id': 'gid://shopify/Product/7442024890434', 'title': 'Floway ring set'}}, 'discountedTotalSet': {'shopMoney': {'amount': '4500.0', 'currencyCode': 'EGP'}}}}]}, 'note': None}}, {'node': {'id': 'gid://shopify/Order/6314790420546', 'name': '#1470', 'createdAt': '2025-08-03T12:26:20Z', 'tags': [], 'totalPriceSet': {'shopMoney': {'amount': '7600.0', 'currencyCode': 'EGP'}}, 'subtotalPriceSet': {'shopMoney': {'amount': '7600.0', 'currencyCode': 'EGP'}}, 'totalTaxSet': {'shopMoney': {'amount': '0.0', 'currencyCode': 'EGP'}}, 'totalShippingPriceSet': {'shopMoney': {'amount': '0.0', 'currencyCode': 'EGP'}}, 'customer': {'id': 'gid://shopify/Customer/7539785334850', 'firstName': 'Karim', 'lastName': 'Wafik', 'email': 'karimwafik.kw@gmail.com', 'phone': None, 'addresses': [{'address1': '97 Marghany st., Heliopolis, Cairo, Egypt', 'address2': None, 'city': 'Cairo', 'province': 'Cairo', 'zip': '21113', 'country': 'Egypt', 'phone': '+201005527292'}, {'address1': 'Stone Residence Compound 306, Third Settlement', 'address2': '9', 'city': 'Cairo', 'province': 'Cairo', 'zip': None, 'country': 'Egypt', 'phone': '01005527292'}]}, 'shippingAddress': None, 'billingAddress': None, 'lineItems': {'edges': [{'node': {'id': 'gid://shopify/LineItem/15822212661314', 'quantity': 1, 'sku': 'FG-0000645', 'title': 'Flare Earrings', 'variant': {'id': 'gid://shopify/ProductVariant/42277872271426', 'sku': 'FG-0000645', 'price': '3800.00', 'product': {'id': 'gid://shopify/Product/7506409586754', 'title': 'Flare Earrings'}}, 'discountedTotalSet': {'shopMoney': {'amount': '3800.0', 'currencyCode': 'EGP'}}}}, {'node': {'id': 'gid://shopify/LineItem/15822221770818', 'quantity': 1, 'sku': None, 'title': 'Gift Card', 'variant': None, 'discountedTotalSet': {'shopMoney': {'amount': '3800.0', 'currencyCode': 'EGP'}}}}]}, 'note': None}}, {'node': {'id': 'gid://shopify/Order/6314786357314', 'name': '#1469', 'createdAt': '2025-08-03T12:21:46Z', 'tags': [], 'totalPriceSet': {'shopMoney': {'amount': '6900.0', 'currencyCode': 'EGP'}}, 'subtotalPriceSet': {'shopMoney': {'amount': '6900.0', 'currencyCode': 'EGP'}}, 'totalTaxSet': {'shopMoney': {'amount': '0.0', 'currencyCode': 'EGP'}}, 'totalShippingPriceSet': {'shopMoney': {'amount': '0.0', 'currencyCode': 'EGP'}}, 'customer': None, 'shippingAddress': None, 'billingAddress': None, 'lineItems': {'edges': [{'node': {'id': 'gid://shopify/LineItem/15822205321282', 'quantity': 1, 'sku': 'FG-0000345', 'title': 'Mini Harmonia Earrings', 'variant': {'id': 'gid://shopify/ProductVariant/42003146801218', 'sku': 'FG-0000345', 'price': '6900.00', 'product': {'id': 'gid://shopify/Product/7442022793282', 'title': 'Mini Harmonia Earrings'}}, 'discountedTotalSet': {'shopMoney': {'amount': '6900.0', 'currencyCode': 'EGP'}}}}]}, 'note': None}}, {'node': {'id': 'gid://shopify/Order/6314775969858', 'name': '#1468', 'createdAt': '2025-08-03T12:12:09Z', 'tags': [], 'totalPriceSet': {'shopMoney': {'amount': '2920.0', 'currencyCode': 'EGP'}}, 'subtotalPriceSet': {'shopMoney': {'amount': '2800.0', 'currencyCode': 'EGP'}}, 'totalTaxSet': {'shopMoney': {'amount': '0.0', 'currencyCode': 'EGP'}}, 'totalShippingPriceSet': {'shopMoney': {'amount': '120.0', 'currencyCode': 'EGP'}}, 'customer': {'id': 'gid://shopify/Customer/8028955639874', 'firstName': 'Mariam', 'lastName': 'Mackawy', 'email': 'mariammackawy5@gmail.com', 'phone': None, 'addresses': [{'address1': 'الرحاب ٢، مجموعة ١٣١، عمارة ٢٠، شقة ٤١', 'address2': '41 El Rehab2, Group 131, Building 20, Apartment', 'city': 'Cairo', 'province': 'Cairo', 'zip': '11511', 'country': 'Egypt', 'phone': '01285358540'}]}, 'shippingAddress': {'address1': 'الرحاب ٢، مجموعة ١٣١، عمارة ٢٠، شقة ٤١', 'address2': '41 El Rehab2, Group 131, Building 20, Apartment', 'city': 'Cairo', 'province': 'Cairo', 'zip': '11511', 'country': 'Egypt', 'phone': '01285358540'}, 'billingAddress': {'address1': 'الرحاب ٢، مجموعة ١٣١، عمارة ٢٠، شقة ٤١', 'address2': '41 El Rehab2, Group 131, Building 20, Apartment', 'city': 'Cairo', 'province': 'Cairo', 'zip': '11511', 'country': 'Egypt', 'phone': '01285358540'}, 'lineItems': {'edges': [{'node': {'id': 'gid://shopify/LineItem/15822184742978', 'quantity': 1, 'sku': 'FG-0000498', 'title': 'Cassandra Pinky Ring', 'variant': {'id': 'gid://shopify/ProductVariant/42003149881410', 'sku': 'FG-0000498', 'price': '2800.00', 'product': {'id': 'gid://shopify/Product/7442024300610', 'title': 'Cassandra Pinky Ring'}}, 'discountedTotalSet': {'shopMoney': {'amount': '2800.0', 'currencyCode': 'EGP'}}}}]}, 'note': None}}, {'node': {'id': 'gid://shopify/Order/6314438000706', 'name': '#1467', 'createdAt': '2025-08-03T04:32:29Z', 'tags': [], 'totalPriceSet': {'shopMoney': {'amount': '3200.0', 'currencyCode': 'EGP'}}, 'subtotalPriceSet': {'shopMoney': {'amount': '3200.0', 'currencyCode': 'EGP'}}, 'totalTaxSet': {'shopMoney': {'amount': '0.0', 'currencyCode': 'EGP'}}, 'totalShippingPriceSet': {'shopMoney': {'amount': '0.0', 'currencyCode': 'EGP'}}, 'customer': {'id': 'gid://shopify/Customer/8026031751234', 'firstName': 'sally', 'lastName': 'monir', 'email': 'sallymonir@yahoo.com', 'phone': None, 'addresses': [{'address1': '113, st. 17, First Area, fifth zone, fifth settlement', 'address2': '2', 'city': 'New Cairo', 'province': 'Cairo', 'zip': None, 'country': 'Egypt', 'phone': '+201273099926'}]}, 'shippingAddress': None, 'billingAddress': {'address1': '113, st. 17, First Area, fifth zone, fifth settlement', 'address2': '2', 'city': 'New Cairo', 'province': 'Cairo', 'zip': None, 'country': 'Egypt', 'phone': '+201273099926'}, 'lineItems': {'edges': [{'node': {'id': 'gid://shopify/LineItem/15821581156418', 'quantity': 1, 'sku': 'FG-0000468', 'title': 'Frost Ring', 'variant': {'id': 'gid://shopify/ProductVariant/42003151618114', 'sku': 'FG-0000468', 'price': '3200.00', 'product': {'id': 'gid://shopify/Product/7442025381954', 'title': 'Frost Ring'}}, 'discountedTotalSet': {'shopMoney': {'amount': '3200.0', 'currencyCode': 'EGP'}}}}]}, 'note': None}}, {'node': {'id': 'gid://shopify/Order/6312813002818', 'name': '#1466', 'createdAt': '2025-08-02T11:04:39Z', 'tags': [], 'totalPriceSet': {'shopMoney': {'amount': '4420.0', 'currencyCode': 'EGP'}}, 'subtotalPriceSet': {'shopMoney': {'amount': '4300.0', 'currencyCode': 'EGP'}}, 'totalTaxSet': {'shopMoney': {'amount': '0.0', 'currencyCode': 'EGP'}}, 'totalShippingPriceSet': {'shopMoney': {'amount': '120.0', 'currencyCode': 'EGP'}}, 'customer': {'id': 'gid://shopify/Customer/8026480607298', 'firstName': 'Nadine', 'lastName': 'GALAL', 'email': 'nadinegalal09@gmail.com', 'phone': None, 'addresses': [{'address1': 'امام ٣١ شارع ابراهيم حلمي الدور ٣ شقة ١١', 'address2': 'الدور ٣ شقة ١١', 'city': 'Alexandria', 'province': 'Alexandria', 'zip': None, 'country': 'Egypt', 'phone': '01284444565'}]}, 'shippingAddress': {'address1': 'امام ٣١ شارع ابراهيم حلمي الدور ٣ شقة ١١', 'address2': 'الدور ٣ شقة ١١', 'city': 'Alexandria', 'province': 'Alexandria', 'zip': None, 'country': 'Egypt', 'phone': '01284444565'}, 'billingAddress': {'address1': 'امام ٣١ شارع ابراهيم حلمي الدور ٣ شقة ١١', 'address2': 'الدور ٣ شقة ١١', 'city': 'Alexandria', 'province': 'Alexandria', 'zip': None, 'country': 'Egypt', 'phone': '01284444565'}, 'lineItems': {'edges': [{'node': {'id': 'gid://shopify/LineItem/15817138307138', 'quantity': 1, 'sku': 'FG-0000499', 'title': 'Cassandra Mix Pinky Ring', 'variant': {'id': 'gid://shopify/ProductVariant/42003149815874', 'sku': 'FG-0000499', 'price': '4300.00', 'product': {'id': 'gid://shopify/Product/7442024235074', 'title': 'Cassandra Mix Pinky Ring'}}, 'discountedTotalSet': {'shopMoney': {'amount': '4300.0', 'currencyCode': 'EGP'}}}}]}, 'note': None}}, {'node': {'id': 'gid://shopify/Order/6312140603458', 'name': '#1465', 'createdAt': '2025-08-01T23:27:00Z', 'tags': [], 'totalPriceSet': {'shopMoney': {'amount': '8860.0', 'currencyCode': 'EGP'}}, 'subtotalPriceSet': {'shopMoney': {'amount': '8700.0', 'currencyCode': 'EGP'}}, 'totalTaxSet': {'shopMoney': {'amount': '0.0', 'currencyCode': 'EGP'}}, 'totalShippingPriceSet': {'shopMoney': {'amount': '160.0', 'currencyCode': 'EGP'}}, 'customer': {'id': 'gid://shopify/Customer/8024664145986', 'firstName': 'Mai', 'lastName': 'Aladdin', 'email': 'mayyo69@gmail.com', 'phone': None, 'addresses': [{'address1': 'Sohag - shar2', 'address2': None, 'city': 'Sohag', 'province': 'Sohag', 'zip': None, 'country': 'Egypt', 'phone': '01027733614'}]}, 'shippingAddress': {'address1': 'Sohag - shar2', 'address2': None, 'city': 'Sohag', 'province': 'Sohag', 'zip': None, 'country': 'Egypt', 'phone': '01027733614'}, 'billingAddress': {'address1': 'Sohag - shar2', 'address2': None, 'city': 'Sohag', 'province': 'Sohag', 'zip': None, 'country': 'Egypt', 'phone': '01027733614'}, 'lineItems': {'edges': [{'node': {'id': 'gid://shopify/LineItem/15815787151426', 'quantity': 1, 'sku': 'FG-0000498', 'title': 'Cassandra Pinky Ring', 'variant': {'id': 'gid://shopify/ProductVariant/42003149881410', 'sku': 'FG-0000498', 'price': '2800.00', 'product': {'id': 'gid://shopify/Product/7442024300610', 'title': 'Cassandra Pinky Ring'}}, 'discountedTotalSet': {'shopMoney': {'amount': '2800.0', 'currencyCode': 'EGP'}}}}, {'node': {'id': 'gid://shopify/LineItem/15815787184194', 'quantity': 1, 'sku': 'FG-0000575', 'title': 'Janus Cuff', 'variant': {'id': 'gid://shopify/ProductVariant/42003153256514', 'sku': 'FG-0000575', 'price': '5900.00', 'product': {'id': 'gid://shopify/Product/7442025906242', 'title': 'Janus Cuff'}}, 'discountedTotalSet': {'shopMoney': {'amount': '5900.0', 'currencyCode': 'EGP'}}}}]}, 'note': None}}, {'node': {'id': 'gid://shopify/Order/6311861026882', 'name': '#1464', 'createdAt': '2025-08-01T20:45:45Z', 'tags': [], 'totalPriceSet': {'shopMoney': {'amount': '4800.0', 'currencyCode': 'EGP'}}, 'subtotalPriceSet': {'shopMoney': {'amount': '4800.0', 'currencyCode': 'EGP'}}, 'totalTaxSet': {'shopMoney': {'amount': '0.0', 'currencyCode': 'EGP'}}, 'totalShippingPriceSet': {'shopMoney': {'amount': '0.0', 'currencyCode': 'EGP'}}, 'customer': {'id': 'gid://shopify/Customer/8024130191426', 'firstName': 'Ibrahim', 'lastName': 'ElGohary', 'email': 'hima22may@hotmail.com', 'phone': None, 'addresses': [{'address1': 'Wady compound', 'address2': 'Home', 'city': 'Cairo', 'province': 'Cairo', 'zip': None, 'country': 'Egypt', 'phone': '01007217010'}]}, 'shippingAddress': None, 'billingAddress': {'address1': 'Wady compound', 'address2': 'Home', 'city': 'Cairo', 'province': 'Cairo', 'zip': None, 'country': 'Egypt', 'phone': '01007217010'}, 'lineItems': {'edges': [{'node': {'id': 'gid://shopify/LineItem/15815036600386', 'quantity': 1, 'sku': 'FG-0000075', 'title': 'Sulla Luna Earrings', 'variant': {'id': 'gid://shopify/ProductVariant/42003146211394', 'sku': 'FG-0000075', 'price': '4800.00', 'product': {'id': 'gid://shopify/Product/7442022170690', 'title': 'Sulla Luna Earrings'}}, 'discountedTotalSet': {'shopMoney': {'amount': '4800.0', 'currencyCode': 'EGP'}}}}]}, 'note': None}}, {'node': {'id': 'gid://shopify/Order/6311162380354', 'name': '#1463', 'createdAt': '2025-08-01T15:19:07Z', 'tags': [], 'totalPriceSet': {'shopMoney': {'amount': '7460.0', 'currencyCode': 'EGP'}}, 'subtotalPriceSet': {'shopMoney': {'amount': '7300.0', 'currencyCode': 'EGP'}}, 'totalTaxSet': {'shopMoney': {'amount': '0.0', 'currencyCode': 'EGP'}}, 'totalShippingPriceSet': {'shopMoney': {'amount': '160.0', 'currencyCode': 'EGP'}}, 'customer': {'id': 'gid://shopify/Customer/8022959784002', 'firstName': 'Nahed', 'lastName': 'Mohamed', 'email': 'nahedmohamed714@gmail.com', 'phone': None, 'addresses': [{'address1': 'العصافره بحرى الاسكندريه شارع اطلس عماره ١١ مكرر بجوار سوبر ناركت تسالى جاد امام مايوركا كافيه', 'address2': 'الدور التامن شقه ١٥', 'city': 'alexandria', 'province': 'Alexandria', 'zip': None, 'country': 'Egypt', 'phone': '+201284002489'}]}, 'shippingAddress': {'address1': 'العصافره بحرى الاسكندريه شارع اطلس عماره ١١ مكرر بجوار سوبر ناركت تسالى جاد امام مايوركا كافيه', 'address2': 'الدور التامن شقه ١٥', 'city': 'alexandria', 'province': 'Alexandria', 'zip': None, 'country': 'Egypt', 'phone': '+201284002489'}, 'billingAddress': {'address1': 'العصافره بحرى الاسكندريه شارع اطلس عماره ١١ مكرر بجوار سوبر ناركت تسالى جاد امام مايوركا كافيه', 'address2': 'الدور التامن شقه ١٥', 'city': 'alexandria', 'province': 'Alexandria', 'zip': None, 'country': 'Egypt', 'phone': '+201284002489'}, 'lineItems': {'edges': [{'node': {'id': 'gid://shopify/LineItem/15813349867586', 'quantity': 1, 'sku': 'FG-0000077', 'title': 'Sulla Luna Mix Earrings', 'variant': {'id': 'gid://shopify/ProductVariant/42003146276930', 'sku': 'FG-0000077', 'price': '7300.00', 'product': {'id': 'gid://shopify/Product/7442022203458', 'title': 'Sulla Luna Mix Earrings'}}, 'discountedTotalSet': {'shopMoney': {'amount': '7300.0', 'currencyCode': 'EGP'}}}}]}, 'note': None}}, {'node': {'id': 'gid://shopify/Order/6308680728642', 'name': '#1462', 'createdAt': '2025-07-31T09:58:23Z', 'tags': [], 'totalPriceSet': {'shopMoney': {'amount': '25900.0', 'currencyCode': 'EGP'}}, 'subtotalPriceSet': {'shopMoney': {'amount': '25700.0', 'currencyCode': 'EGP'}}, 'totalTaxSet': {'shopMoney': {'amount': '0.0', 'currencyCode': 'EGP'}}, 'totalShippingPriceSet': {'shopMoney': {'amount': '200.0', 'currencyCode': 'EGP'}}, 'customer': {'id': 'gid://shopify/Customer/8016631660610', 'firstName': 'Mohamed', 'lastName': 'Maher', 'email': 'm.maher525@gmail.com', 'phone': None, 'addresses': [{'address1': None, 'address2': None, 'city': None, 'province': None, 'zip': None, 'country': 'Egypt', 'phone': None}, {'address1': 'الهضبة الوسطى الحي الثالث كمباوند ديار سيتي 3 خلف مدرسة ريماس', 'address2': 'عمارة 2 شقة 20 بوابة 3', 'city': 'Al Mokkatam', 'province': 'Cairo', 'zip': None, 'country': 'Egypt', 'phone': '01069987443'}]}, 'shippingAddress': {'address1': 'الهضبة الوسطى الحي الثالث كمباوند ديار سيتي 3 خلف مدرسة ريماس', 'address2': 'عمارة 2 شقة 20 بوابة 3', 'city': 'Al Mokkatam', 'province': 'Cairo', 'zip': None, 'country': 'Egypt', 'phone': '01069987443'}, 'billingAddress': {'address1': 'الهضبة الوسطى الحي الثالث كمباوند ديار سيتي 3 خلف مدرسة ريماس', 'address2': 'عمارة 2 شقة 20 بوابة 3', 'city': 'Al Mokkatam', 'province': 'Cairo', 'zip': None, 'country': 'Egypt', 'phone': '01069987443'}, 'lineItems': {'edges': [{'node': {'id': 'gid://shopify/LineItem/15807895044162', 'quantity': 1, 'sku': 'FG-0000512', 'title': 'Riverstone Bracelet', 'variant': {'id': 'gid://shopify/ProductVariant/42003152404546', 'sku': 'FG-0000512', 'price': '5000.00', 'product': {'id': 'gid://shopify/Product/7442025611330', 'title': 'Riverstone Bracelet'}}, 'discountedTotalSet': {'shopMoney': {'amount': '5000.0', 'currencyCode': 'EGP'}}}}, {'node': {'id': 'gid://shopify/LineItem/15807895076930', 'quantity': 1, 'sku': 'FG-0000571', 'title': 'Riverstone Ring Mix', 'variant': {'id': 'gid://shopify/ProductVariant/42003150995522', 'sku': 'FG-0000571', 'price': '3900.00', 'product': {'id': 'gid://shopify/Product/7442025152578', 'title': 'Riverstone Ring Mix'}}, 'discountedTotalSet': {'shopMoney': {'amount': '3900.0', 'currencyCode': 'EGP'}}}}, {'node': {'id': 'gid://shopify/LineItem/15807895109698', 'quantity': 1, 'sku': 'FG-0000568', 'title': 'Riverstone Necklace Mix', 'variant': {'id': 'gid://shopify/ProductVariant/42003150962754', 'sku': 'FG-0000568', 'price': '16800.00', 'product': {'id': 'gid://shopify/Product/7442025119810', 'title': 'Riverstone Necklace Mix'}}, 'discountedTotalSet': {'shopMoney': {'amount': '16800.0', 'currencyCode': 'EGP'}}}}]}, 'note': None}}, {'node': {'id': 'gid://shopify/Order/6308073570370', 'name': '#1461', 'createdAt': '2025-07-30T23:37:58Z', 'tags': [], 'totalPriceSet': {'shopMoney': {'amount': '6700.0', 'currencyCode': 'EGP'}}, 'subtotalPriceSet': {'shopMoney': {'amount': '6500.0', 'currencyCode': 'EGP'}}, 'totalTaxSet': {'shopMoney': {'amount': '0.0', 'currencyCode': 'EGP'}}, 'totalShippingPriceSet': {'shopMoney': {'amount': '200.0', 'currencyCode': 'EGP'}}, 'customer': {'id': 'gid://shopify/Customer/8015808462914', 'firstName': 'farouk', 'lastName': 'yehia', 'email': 'farouky01@gmail.com', 'phone': None, 'addresses': [{'address1': 'mesaha sq', 'address2': '5 mesaha sq, 15th floor', 'city': 'giza', 'province': 'Cairo', 'zip': '12611', 'country': 'Egypt', 'phone': '+201060520013'}]}, 'shippingAddress': {'address1': 'mesaha sq', 'address2': '5 mesaha sq, 15th floor', 'city': 'giza', 'province': 'Cairo', 'zip': '12611', 'country': 'Egypt', 'phone': '+201060520013'}, 'billingAddress': {'address1': 'mesaha sq', 'address2': '5 mesaha sq, 15th floor', 'city': 'giza', 'province': 'Cairo', 'zip': '12611', 'country': 'Egypt', 'phone': '+201060520013'}, 'lineItems': {'edges': [{'node': {'id': 'gid://shopify/LineItem/15806636818498', 'quantity': 1, 'sku': 'FG-0000408', 'title': 'Nightfall Earrings', 'variant': {'id': 'gid://shopify/ProductVariant/42003148996674', 'sku': 'FG-0000408', 'price': '6500.00', 'product': {'id': 'gid://shopify/Product/7442023841858', 'title': 'Nightfall Earrings'}}, 'discountedTotalSet': {'shopMoney': {'amount': '6500.0', 'currencyCode': 'EGP'}}}}]}, 'note': None}}], 'pageInfo': {'hasNextPage': True, 'endCursor': 'eyJsYXN0X2lkIjo2MzA4MDczNTcwMzcwLCJsYXN0X3ZhbHVlIjoiMjAyNS0wNy0zMCAyMzozNzo1OC45MDkxNTcifQ=='}}}, 'status': 'success'}
2025-08-05 18:05:02,252 - sync_service - INFO - Retrieved 20 total orders, 20 unsynced orders from Shopify store local
2025-08-05 18:05:02,253 - sync_service - INFO - Processing order: #1480
2025-08-05 18:05:02,255 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'login', 'request': {'company': 'JudeBenHalim_Test', 'user': 'manager'}, 'response': None, 'status': None}
2025-08-05 18:05:03,093 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'login', 'request': None, 'response': {'status': 'success'}, 'status': 'success'}
2025-08-05 18:05:03,096 - sync_service - INFO - SAP login successful
2025-08-05 18:05:03,102 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'BusinessPartners', 'request': {'method': 'GET', 'url': 'https://10.0.0.100:50000/b1s/v1/BusinessPartners', 'data': None, 'params': {'$filter': "Phone1 eq '00201003370743' or Phone2 eq '00201003370743' or Cellular eq '00201003370743'", '$top': 1}}, 'response': None, 'status': None}
2025-08-05 18:05:03,927 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'BusinessPartners', 'request': None, 'response': {'odata.metadata': 'https://10.0.0.100:50000/b1s/v1/$metadata#BusinessPartners', 'value': []}, 'status': 'success'}
2025-08-05 18:05:03,931 - sync_service - INFO - Creating new customer in SAP
2025-08-05 18:05:03,935 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'BusinessPartners', 'request': {'method': 'POST', 'url': 'https://10.0.0.100:50000/b1s/v1/BusinessPartners', 'data': {'CardName': 'Omnia Ezz Elarab', 'CardType': 'C', 'Series': 87, 'Cellular': '00201003370743', 'Currency': 'EGP', 'GroupCode': 100, 'BPAddresses': [{'AddressName': 'Omnia Ezz Elarab 1', 'Street': 'Palm hills 6th october, phase 1 Villa b53', 'City': 'Giza', 'AddressType': 'bo_ShipTo', 'Country': 'EG', 'ZipCode': '00000'}]}, 'params': None}, 'response': None, 'status': None}
2025-08-05 18:05:05,471 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'BusinessPartners', 'request': None, 'response': {'odata.metadata': 'https://10.0.0.100:50000/b1s/v1/$metadata#BusinessPartners/@Element', 'CardCode': 'C0021031', 'CardName': 'Omnia Ezz Elarab', 'CardType': 'cCustomer', 'GroupCode': 100, 'Address': None, 'ZipCode': None, 'MailAddress': 'Palm hills 6th october, phase 1 Villa b53', 'MailZipCode': '00000', 'Phone1': None, 'Phone2': None, 'Fax': None, 'ContactPerson': None, 'Notes': None, 'PayTermsGrpCode': -1, 'CreditLimit': 0.0, 'MaxCommitment': 0.0, 'DiscountPercent': 0.0, 'VatLiable': 'vLiable', 'FederalTaxID': None, 'DeductibleAtSource': 'tNO', 'DeductionPercent': 0.0, 'DeductionValidUntil': None, 'PriceListNum': 1, 'IntrestRatePercent': 0.0, 'CommissionPercent': 0.0, 'CommissionGroupCode': 0, 'FreeText': None, 'SalesPersonCode': -1, 'Currency': 'EGP', 'RateDiffAccount': None, 'Cellular': '00201003370743', 'AvarageLate': None, 'City': None, 'County': None, 'Country': 'EG', 'MailCity': 'Giza', 'MailCounty': None, 'MailCountry': 'EG', 'EmailAddress': None, 'Picture': None, 'DefaultAccount': None, 'DefaultBranch': None, 'DefaultBankCode': '-1', 'AdditionalID': None, 'Pager': None, 'FatherCard': None, 'CardForeignName': None, 'FatherType': 'cPayments_sum', 'DeductionOffice': None, 'ExportCode': None, 'MinIntrest': 0.0, 'CurrentAccountBalance': 0.0, 'OpenDeliveryNotesBalance': 0.0, 'OpenOrdersBalance': 0.0, 'OpenChecksBalance': 0.0, 'VatGroup': None, 'ShippingType': None, 'Password': None, 'Indicator': None, 'IBAN': None, 'CreditCardCode': -1, 'CreditCardNum': '', 'CreditCardExpiration': None, 'DebitorAccount': '10601110', 'OpenOpportunities': None, 'Valid': 'tYES', 'ValidFrom': None, 'ValidTo': None, 'ValidRemarks': None, 'Frozen': 'tNO', 'FrozenFrom': None, 'FrozenTo': None, 'FrozenRemarks': None, 'Block': None, 'BillToState': None, 'ShipToState': None, 'ExemptNum': None, 'Priority': -1, 'FormCode1099': None, 'Box1099': None, 'PeymentMethodCode': None, 'BackOrder': 'tYES', 'PartialDelivery': 'tYES', 'BlockDunning': 'tNO', 'BankCountry': None, 'HouseBank': 'CIB', 'HouseBankCountry': 'EG', 'HouseBankAccount': '100029997769', 'ShipToDefault': 'Omnia Ezz Elarab 1', 'DunningLevel': None, 'DunningDate': None, 'CollectionAuthorization': 'tNO', 'DME': None, 'InstructionKey': None, 'SinglePayment': 'tNO', 'ISRBillerID': None, 'PaymentBlock': 'tNO', 'ReferenceDetails': None, 'HouseBankBranch': 'New Cairo', 'OwnerIDNumber': None, 'PaymentBlockDescription': -1, 'TaxExemptionLetterNum': None, 'MaxAmountOfExemption': 0.0, 'ExemptionValidityDateFrom': None, 'ExemptionValidityDateTo': None, 'LinkedBusinessPartner': None, 'LastMultiReconciliationNum': None, 'DeferredTax': 'tNO', 'Equalization': 'tNO', 'SubjectToWithholdingTax': 'boNO', 'CertificateNumber': None, 'ExpirationDate': None, 'NationalInsuranceNum': None, 'AccrualCriteria': 'tNO', 'WTCode': None, 'BillToBuildingFloorRoom': None, 'DownPaymentClearAct': '20101212', 'ChannelBP': None, 'DefaultTechnician': None, 'BilltoDefault': None, 'CustomerBillofExchangDisc': None, 'Territory': None, 'ShipToBuildingFloorRoom': '', 'CustomerBillofExchangPres': None, 'ProjectCode': None, 'VatGroupLatinAmerica': None, 'DunningTerm': None, 'Website': None, 'OtherReceivablePayable': None, 'BillofExchangeonCollection': None, 'CompanyPrivate': 'cCompany', 'LanguageCode': 8, 'UnpaidBillofExchange': None, 'WithholdingTaxDeductionGroup': -1, 'ClosingDateProcedureNumber': None, 'Profession': None, 'BankChargesAllocationCode': None, 'TaxRoundingRule': 'trr_CompanyDefault', 'Properties1': 'tNO', 'Properties2': 'tNO', 'Properties3': 'tNO', 'Properties4': 'tNO', 'Properties5': 'tNO', 'Properties6': 'tNO', 'Properties7': 'tNO', 'Properties8': 'tNO', 'Properties9': 'tNO', 'Properties10': 'tNO', 'Properties11': 'tNO', 'Properties12': 'tNO', 'Properties13': 'tNO', 'Properties14': 'tNO', 'Properties15': 'tNO', 'Properties16': 'tNO', 'Properties17': 'tNO', 'Properties18': 'tNO', 'Properties19': 'tNO', 'Properties20': 'tNO', 'Properties21': 'tNO', 'Properties22': 'tNO', 'Properties23': 'tNO', 'Properties24': 'tNO', 'Properties25': 'tNO', 'Properties26': 'tNO', 'Properties27': 'tNO', 'Properties28': 'tNO', 'Properties29': 'tNO', 'Properties30': 'tNO', 'Properties31': 'tNO', 'Properties32': 'tNO', 'Properties33': 'tNO', 'Properties34': 'tNO', 'Properties35': 'tNO', 'Properties36': 'tNO', 'Properties37': 'tNO', 'Properties38': 'tNO', 'Properties39': 'tNO', 'Properties40': 'tNO', 'Properties41': 'tNO', 'Properties42': 'tNO', 'Properties43': 'tNO', 'Properties44': 'tNO', 'Properties45': 'tNO', 'Properties46': 'tNO', 'Properties47': 'tNO', 'Properties48': 'tNO', 'Properties49': 'tNO', 'Properties50': 'tNO', 'Properties51': 'tNO', 'Properties52': 'tNO', 'Properties53': 'tNO', 'Properties54': 'tNO', 'Properties55': 'tNO', 'Properties56': 'tNO', 'Properties57': 'tNO', 'Properties58': 'tNO', 'Properties59': 'tNO', 'Properties60': 'tNO', 'Properties61': 'tNO', 'Properties62': 'tNO', 'Properties63': 'tNO', 'Properties64': 'tNO', 'CompanyRegistrationNumber': None, 'VerificationNumber': None, 'DiscountBaseObject': 'dgboNone', 'DiscountRelations': 'dgrLowestDiscount', 'TypeReport': 'atCompany', 'ThresholdOverlook': 'tNO', 'SurchargeOverlook': 'tNO', 'DownPaymentInterimAccount': None, 'OperationCode347': 'ocSalesOrServicesRevenues', 'InsuranceOperation347': 'tNO', 'HierarchicalDeduction': 'tNO', 'ShaamGroup': 'sgServicesAndAsset', 'WithholdingTaxCertified': 'tNO', 'BookkeepingCertified': 'tNO', 'PlanningGroup': None, 'Affiliate': 'tNO', 'Industry': None, 'VatIDNum': None, 'DatevAccount': None, 'DatevFirstDataEntry': 'tYES', 'UseShippedGoodsAccount': 'tNO', 'GTSRegNo': None, 'GTSBankAccountNo': None, 'GTSBillingAddrTel': None, 'ETaxWebSite': None, 'HouseBankIBAN': None, 'VATRegistrationNumber': None, 'RepresentativeName': None, 'IndustryType': None, 'BusinessType': None, 'Series': 87, 'AutomaticPosting': 'apNo', 'InterestAccount': None, 'FeeAccount': None, 'CampaignNumber': None, 'AliasName': None, 'DefaultBlanketAgreementNumber': None, 'EffectiveDiscount': 'dgrLowestDiscount', 'NoDiscounts': 'tNO', 'EffectivePrice': 'epDefaultPriority', 'EffectivePriceConsidersPriceBeforeDiscount': 'tNO', 'GlobalLocationNumber': None, 'EDISenderID': None, 'EDIRecipientID': None, 'ResidenNumber': 'rntSpanishFiscalID', 'RelationshipCode': None, 'RelationshipDateFrom': None, 'RelationshipDateTill': None, 'UnifiedFederalTaxID': None, 'AttachmentEntry': None, 'TypeOfOperation': None, 'EndorsableChecksFromBP': 'tYES', 'AcceptsEndorsedChecks': 'tNO', 'OwnerCode': None, 'BlockSendingMarketingContent': 'tNO', 'AgentCode': None, 'PriceMode': 'pmNet', 'EDocGenerationType': None, 'EDocStreet': None, 'EDocStreetNumber': None, 'EDocBuildingNumber': None, 'EDocZipCode': None, 'EDocCity': None, 'EDocCountry': None, 'EDocDistrict': None, 'EDocRepresentativeFirstName': None, 'EDocRepresentativeSurname': None, 'EDocRepresentativeCompany': None, 'EDocRepresentativeFiscalCode': None, 'EDocRepresentativeAdditionalId': None, 'EDocPECAddress': None, 'IPACodeForPA': None, 'UpdateDate': '2025-08-05', 'UpdateTime': '18:02:59', 'ExemptionMaxAmountValidationType': 'emaIndividual', 'ECommerceMerchantID': None, 'UseBillToAddrToDetermineTax': 'tNO', 'CreateDate': '2025-08-05', 'CreateTime': '18:02:59', 'DefaultTransporterEntry': None, 'DefaultTransporterLineNumber': None, 'FCERelevant': 'tNO', 'FCEValidateBaseDelivery': 'tNO', 'MainUsage': None, 'EBooksVATExemptionCause': None, 'U_BP_Old': None, 'U_SBO_BPType': 'Person', 'ElectronicProtocols': [], 'BPAddresses': [{'AddressName': 'Omnia Ezz Elarab 1', 'Street': 'Palm hills 6th october, phase 1 Villa b53', 'Block': None, 'ZipCode': '00000', 'City': 'Giza', 'County': None, 'Country': 'EG', 'State': None, 'FederalTaxID': None, 'TaxCode': None, 'BuildingFloorRoom': None, 'AddressType': 'bo_ShipTo', 'AddressName2': None, 'AddressName3': None, 'TypeOfAddress': None, 'StreetNo': None, 'BPCode': 'C0021031', 'RowNum': 0, 'GlobalLocationNumber': None, 'Nationality': None, 'TaxOffice': None, 'GSTIN': None, 'GstType': None, 'CreateDate': '2025-08-05', 'CreateTime': '18:02:59', 'MYFType': None, 'TaasEnabled': 'tYES'}], 'ContactEmployees': [], 'BPAccountReceivablePaybleCollection': [], 'BPPaymentMethods': [], 'BPWithholdingTaxCollection': [], 'BPPaymentDates': [], 'BPBranchAssignment': [], 'BPBankAccounts': [], 'BPFiscalTaxIDCollection': [], 'DiscountGroups': [], 'BPIntrastatExtension': {}, 'BPBlockSendingMarketingContents': []}, 'status': 'success'}
2025-08-05 18:05:05,475 - sync_service - INFO - Created customer in SAP: C0021031
2025-08-05 18:05:05,480 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'Invoices', 'request': {'method': 'POST', 'url': 'https://10.0.0.100:50000/b1s/v1/Invoices', 'data': {'DocDate': '2025-08-05', 'CardCode': 'C0021031', 'NumAtCard': '', 'Comments': '', 'ShipToCode': 'Omnia Ezz Elarab Address 1', 'U_Shopify_Order_ID': '#1480', 'SalesPersonCode': 97, 'DocumentLines': [{'ItemCode': 'FG-0000632', 'Quantity': 1, 'UnitPrice': 5000.0, 'WarehouseCode': 'Wh-0020'}], 'DocumentAdditionalExpenses': [{'ExpenseCode': 1, 'LineTotal': 200.0, 'Remarks': 'Shipping fee'}]}, 'params': None}, 'response': None, 'status': None}
2025-08-05 18:05:06,736 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'Invoices', 'request': None, 'response': {'status_code': 404, 'text': '{\n   "error" : {\n      "code" : -2028,\n      "message" : {\n         "lang" : "en-us",\n         "value" : "No matching records found (ODBC -2028)"\n      }\n   }\n}\n'}, 'status': 'failure'}
2025-08-05 18:05:06,740 - sync_service - ERROR - Failed to create invoice in SAP: HTTP 404: {
   "error" : {
      "code" : -2028,
      "message" : {
         "lang" : "en-us",
         "value" : "No matching records found (ODBC -2028)"
      }
   }
}

2025-08-05 18:06:02,864 - sync_service - INFO - Initialized Shopify client for store: Local Store (local)
2025-08-05 18:06:02,869 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'login', 'request': {'company': 'JudeBenHalim_Test', 'user': 'manager'}, 'response': None, 'status': None}
2025-08-05 18:06:03,667 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'login', 'request': None, 'response': {'status': 'success'}, 'status': 'success'}
2025-08-05 18:06:03,668 - sync_service - INFO - SAP login successful
2025-08-05 18:06:03,669 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'Warehouses', 'request': {'method': 'GET', 'url': 'https://10.0.0.100:50000/b1s/v1/Warehouses', 'data': None, 'params': None}, 'response': None, 'status': None}
2025-08-05 18:06:04,414 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'Warehouses', 'request': None, 'response': {'odata.metadata': 'https://10.0.0.100:50000/b1s/v1/$metadata#Warehouses', 'value': [{'Street': None, 'StockInflationOffsetAccount': '', 'ZipCode': None, 'DecreasingAccount': '', 'PurchaseAccount': '', 'EURevenuesAccount': '', 'ReturningAccount': '', 'ShippedGoodsAccount': '', 'StockInflationAdjustAccount': '', 'AllowUseTax': 'tNO', 'CostInflationAccount': '', 'ForeignExpensesAccount': '', 'EUExpensesAccount': '', 'CostInflationOffsetAccount': '', 'ExpensesClearingAccount': '', 'PurchaseReturningAccount': '', 'VATInRevenueAccount': '', 'FederalTaxID': None, 'Location': 3, 'Block': None, 'ExpenseAccount': '', 'DecreaseGLAccount': '', 'RevenuesAccount': '', 'TaxGroup': None, 'ExemptRevenuesAccount': '', 'PurchaseOffsetAccount': '', 'CostOfGoodsSold': '50101001', 'WarehouseCode': '5A', 'State': '', 'City': None, 'PriceDifferencesAccount': '50101001', 'VarianceAccount': '', 'Country': None, 'IncreaseGLAccount': '', 'ExchangeRateDifferencesAccount': '', 'WIPMaterialAccount': '', 'WarehouseName': 'Water Way', 'DropShip': 'tNO', 'WIPMaterialVarianceAccount': '', 'TransfersAcc': '20101513', 'InternalKey': None, 'ForeignRevenuesAcc': '', 'BuildingFloorRoom': None, 'County': None, 'Nettable': 'tYES', 'IncreasingAcc': '', 'ExpenseOffsetingAct': '', 'GoodsClearingAcc': '', 'StockAccount': '10501310', 'BusinessPlaceID': None, 'PurchaseCreditAcc': '', 'EUPurchaseCreditAcc': '', 'ForeignPurchaseCreditAcc': '', 'SalesCreditAcc': '', 'SalesCreditEUAcc': '', 'ExemptedCredits': '', 'SalesCreditForeignAcc': '', 'NegativeInventoryAdjustmentAccount': '', 'WHShipToName': None, 'Excisable': 'tNO', 'WHIncomingCenvatAccount': '', 'WHOutgoingCenvatAccount': '', 'StockInTransitAccount': '', 'WipOffsetProfitAndLossAccount': '', 'InventoryOffsetProfitAndLossAccount': '', 'AddressType': None, 'StreetNo': None, 'Storekeeper': None, 'Shipper': None, 'ManageSerialAndBatchNumbers': 'tNO', 'GlobalLocationNumber': None, 'EnableBinLocations': 'tYES', 'BinLocCodeSeparator': '-', 'DefaultBin': 8, 'DefaultBinEnforced': 'tNO', 'AutoAllocOnIssue': 'whsBinSingleChoiceOnly', 'EnableReceivingBinLocations': 'tNO', 'ReceivingBinLocationsBy': 'rblmBinLocationCodeOrder', 'PurchaseBalanceAccount': '', 'Inactive': 'tNO', 'RestrictReceiptToEmptyBinLocation': 'tYES', 'ReceiveUpToMaxQuantity': 'tNO', 'AutoAllocOnReceipt': 'aaormDefaultBin', 'ReceiveUpToMaxWeight': 'tNO', 'ReceiveUpToMethod': 'rutmMaximumQty', 'U_ShopifyInventoryIDLocal': None, 'U_ShopifyInventoryIDInternational': None}, {'Street': None, 'StockInflationOffsetAccount': '', 'ZipCode': None, 'DecreasingAccount': '', 'PurchaseAccount': '', 'EURevenuesAccount': '', 'ReturningAccount': '', 'ShippedGoodsAccount': '', 'StockInflationAdjustAccount': '', 'AllowUseTax': 'tNO', 'CostInflationAccount': '', 'ForeignExpensesAccount': '', 'EUExpensesAccount': '', 'CostInflationOffsetAccount': '', 'ExpensesClearingAccount': '', 'PurchaseReturningAccount': '', 'VATInRevenueAccount': '', 'FederalTaxID': None, 'Location': 7, 'Block': None, 'ExpenseAccount': '', 'DecreaseGLAccount': '', 'RevenuesAccount': '', 'TaxGroup': None, 'ExemptRevenuesAccount': '', 'PurchaseOffsetAccount': '', 'CostOfGoodsSold': '50101001', 'WarehouseCode': 'Arkan', 'State': '', 'City': None, 'PriceDifferencesAccount': '50101001', 'VarianceAccount': '', 'Country': None, 'IncreaseGLAccount': '', 'ExchangeRateDifferencesAccount': '', 'WIPMaterialAccount': '', 'WarehouseName': 'Arkan', 'DropShip': 'tNO', 'WIPMaterialVarianceAccount': '', 'TransfersAcc': '20101513', 'InternalKey': None, 'ForeignRevenuesAcc': '', 'BuildingFloorRoom': None, 'County': None, 'Nettable': 'tYES', 'IncreasingAcc': '', 'ExpenseOffsetingAct': '', 'GoodsClearingAcc': '', 'StockAccount': '10501310', 'BusinessPlaceID': None, 'PurchaseCreditAcc': '', 'EUPurchaseCreditAcc': '', 'ForeignPurchaseCreditAcc': '', 'SalesCreditAcc': '', 'SalesCreditEUAcc': '', 'ExemptedCredits': '', 'SalesCreditForeignAcc': '', 'NegativeInventoryAdjustmentAccount': '', 'WHShipToName': None, 'Excisable': 'tNO', 'WHIncomingCenvatAccount': '', 'WHOutgoingCenvatAccount': '', 'StockInTransitAccount': '', 'WipOffsetProfitAndLossAccount': '', 'InventoryOffsetProfitAndLossAccount': '', 'AddressType': None, 'StreetNo': None, 'Storekeeper': None, 'Shipper': None, 'ManageSerialAndBatchNumbers': 'tNO', 'GlobalLocationNumber': None, 'EnableBinLocations': 'tYES', 'BinLocCodeSeparator': '-', 'DefaultBin': 20, 'DefaultBinEnforced': 'tNO', 'AutoAllocOnIssue': 'whsBinSingleChoiceOnly', 'EnableReceivingBinLocations': 'tNO', 'ReceivingBinLocationsBy': 'rblmBinLocationCodeOrder', 'PurchaseBalanceAccount': '', 'Inactive': 'tNO', 'RestrictReceiptToEmptyBinLocation': 'tYES', 'ReceiveUpToMaxQuantity': 'tNO', 'AutoAllocOnReceipt': 'aaormDefaultBin', 'ReceiveUpToMaxWeight': 'tNO', 'ReceiveUpToMethod': 'rutmMaximumQty', 'U_ShopifyInventoryIDLocal': None, 'U_ShopifyInventoryIDInternational': None}, {'Street': None, 'StockInflationOffsetAccount': '', 'ZipCode': None, 'DecreasingAccount': '', 'PurchaseAccount': '', 'EURevenuesAccount': '', 'ReturningAccount': '', 'ShippedGoodsAccount': '', 'StockInflationAdjustAccount': '', 'AllowUseTax': 'tNO', 'CostInflationAccount': '', 'ForeignExpensesAccount': '', 'EUExpensesAccount': '', 'CostInflationOffsetAccount': '', 'ExpensesClearingAccount': '', 'PurchaseReturningAccount': '', 'VATInRevenueAccount': '', 'FederalTaxID': None, 'Location': 4, 'Block': None, 'ExpenseAccount': '', 'DecreaseGLAccount': '', 'RevenuesAccount': '', 'TaxGroup': None, 'ExemptRevenuesAccount': '', 'PurchaseOffsetAccount': '', 'CostOfGoodsSold': '50101001', 'WarehouseCode': 'DIP', 'State': '', 'City': None, 'PriceDifferencesAccount': '50101001', 'VarianceAccount': '', 'Country': None, 'IncreaseGLAccount': '', 'ExchangeRateDifferencesAccount': '', 'WIPMaterialAccount': '', 'WarehouseName': 'Diplomatics', 'DropShip': 'tNO', 'WIPMaterialVarianceAccount': '', 'TransfersAcc': '20101513', 'InternalKey': None, 'ForeignRevenuesAcc': '', 'BuildingFloorRoom': None, 'County': None, 'Nettable': 'tYES', 'IncreasingAcc': '', 'ExpenseOffsetingAct': '', 'GoodsClearingAcc': '', 'StockAccount': '10501310', 'BusinessPlaceID': None, 'PurchaseCreditAcc': '', 'EUPurchaseCreditAcc': '', 'ForeignPurchaseCreditAcc': '', 'SalesCreditAcc': '', 'SalesCreditEUAcc': '', 'ExemptedCredits': '', 'SalesCreditForeignAcc': '', 'NegativeInventoryAdjustmentAccount': '', 'WHShipToName': None, 'Excisable': 'tNO', 'WHIncomingCenvatAccount': '', 'WHOutgoingCenvatAccount': '', 'StockInTransitAccount': '', 'WipOffsetProfitAndLossAccount': '', 'InventoryOffsetProfitAndLossAccount': '', 'AddressType': None, 'StreetNo': None, 'Storekeeper': None, 'Shipper': None, 'ManageSerialAndBatchNumbers': 'tNO', 'GlobalLocationNumber': None, 'EnableBinLocations': 'tYES', 'BinLocCodeSeparator': '-', 'DefaultBin': 11, 'DefaultBinEnforced': 'tNO', 'AutoAllocOnIssue': 'whsBinSingleChoiceOnly', 'EnableReceivingBinLocations': 'tNO', 'ReceivingBinLocationsBy': 'rblmBinLocationCodeOrder', 'PurchaseBalanceAccount': '', 'Inactive': 'tNO', 'RestrictReceiptToEmptyBinLocation': 'tYES', 'ReceiveUpToMaxQuantity': 'tNO', 'AutoAllocOnReceipt': 'aaormDefaultBin', 'ReceiveUpToMaxWeight': 'tNO', 'ReceiveUpToMethod': 'rutmMaximumQty', 'U_ShopifyInventoryIDLocal': None, 'U_ShopifyInventoryIDInternational': None}, {'Street': None, 'StockInflationOffsetAccount': '', 'ZipCode': None, 'DecreasingAccount': '', 'PurchaseAccount': '', 'EURevenuesAccount': '', 'ReturningAccount': '', 'ShippedGoodsAccount': '', 'StockInflationAdjustAccount': '', 'AllowUseTax': 'tNO', 'CostInflationAccount': '', 'ForeignExpensesAccount': '', 'EUExpensesAccount': '', 'CostInflationOffsetAccount': '', 'ExpensesClearingAccount': '', 'PurchaseReturningAccount': '', 'VATInRevenueAccount': '', 'FederalTaxID': None, 'Location': 1, 'Block': None, 'ExpenseAccount': '', 'DecreaseGLAccount': '', 'RevenuesAccount': '', 'TaxGroup': None, 'ExemptRevenuesAccount': '', 'PurchaseOffsetAccount': '', 'CostOfGoodsSold': '50101001', 'WarehouseCode': 'INC', 'State': '', 'City': None, 'PriceDifferencesAccount': '50101001', 'VarianceAccount': '', 'Country': None, 'IncreaseGLAccount': '', 'ExchangeRateDifferencesAccount': '', 'WIPMaterialAccount': '', 'WarehouseName': 'Incoming Warehouse', 'DropShip': 'tNO', 'WIPMaterialVarianceAccount': '', 'TransfersAcc': '20101513', 'InternalKey': None, 'ForeignRevenuesAcc': '', 'BuildingFloorRoom': None, 'County': None, 'Nettable': 'tYES', 'IncreasingAcc': '', 'ExpenseOffsetingAct': '', 'GoodsClearingAcc': '', 'StockAccount': '10501310', 'BusinessPlaceID': None, 'PurchaseCreditAcc': '', 'EUPurchaseCreditAcc': '', 'ForeignPurchaseCreditAcc': '', 'SalesCreditAcc': '', 'SalesCreditEUAcc': '', 'ExemptedCredits': '', 'SalesCreditForeignAcc': '', 'NegativeInventoryAdjustmentAccount': '', 'WHShipToName': None, 'Excisable': 'tNO', 'WHIncomingCenvatAccount': '', 'WHOutgoingCenvatAccount': '', 'StockInTransitAccount': '', 'WipOffsetProfitAndLossAccount': '', 'InventoryOffsetProfitAndLossAccount': '', 'AddressType': None, 'StreetNo': None, 'Storekeeper': None, 'Shipper': None, 'ManageSerialAndBatchNumbers': 'tNO', 'GlobalLocationNumber': None, 'EnableBinLocations': 'tNO', 'BinLocCodeSeparator': '-', 'DefaultBin': None, 'DefaultBinEnforced': 'tNO', 'AutoAllocOnIssue': 'whsBinSingleChoiceOnly', 'EnableReceivingBinLocations': 'tNO', 'ReceivingBinLocationsBy': 'rblmBinLocationCodeOrder', 'PurchaseBalanceAccount': '', 'Inactive': 'tNO', 'RestrictReceiptToEmptyBinLocation': 'tYES', 'ReceiveUpToMaxQuantity': 'tNO', 'AutoAllocOnReceipt': 'aaormDefaultBin', 'ReceiveUpToMaxWeight': 'tNO', 'ReceiveUpToMethod': 'rutmMaximumQty', 'U_ShopifyInventoryIDLocal': None, 'U_ShopifyInventoryIDInternational': None}, {'Street': None, 'StockInflationOffsetAccount': '', 'ZipCode': None, 'DecreasingAccount': '', 'PurchaseAccount': '', 'EURevenuesAccount': '', 'ReturningAccount': '', 'ShippedGoodsAccount': '', 'StockInflationAdjustAccount': '', 'AllowUseTax': 'tNO', 'CostInflationAccount': '', 'ForeignExpensesAccount': '', 'EUExpensesAccount': '', 'CostInflationOffsetAccount': '', 'ExpensesClearingAccount': '', 'PurchaseReturningAccount': '', 'VATInRevenueAccount': '', 'FederalTaxID': None, 'Location': 1, 'Block': None, 'ExpenseAccount': '', 'DecreaseGLAccount': '', 'RevenuesAccount': '', 'TaxGroup': None, 'ExemptRevenuesAccount': '', 'PurchaseOffsetAccount': '', 'CostOfGoodsSold': '50101001', 'WarehouseCode': 'ONL', 'State': '', 'City': None, 'PriceDifferencesAccount': '50101001', 'VarianceAccount': '', 'Country': None, 'IncreaseGLAccount': '', 'ExchangeRateDifferencesAccount': '', 'WIPMaterialAccount': '', 'WarehouseName': 'Online Sales', 'DropShip': 'tNO', 'WIPMaterialVarianceAccount': '', 'TransfersAcc': '20101513', 'InternalKey': None, 'ForeignRevenuesAcc': '', 'BuildingFloorRoom': None, 'County': None, 'Nettable': 'tYES', 'IncreasingAcc': '', 'ExpenseOffsetingAct': '', 'GoodsClearingAcc': '', 'StockAccount': '10501312', 'BusinessPlaceID': None, 'PurchaseCreditAcc': '', 'EUPurchaseCreditAcc': '', 'ForeignPurchaseCreditAcc': '', 'SalesCreditAcc': '', 'SalesCreditEUAcc': '', 'ExemptedCredits': '', 'SalesCreditForeignAcc': '', 'NegativeInventoryAdjustmentAccount': '', 'WHShipToName': None, 'Excisable': 'tNO', 'WHIncomingCenvatAccount': '', 'WHOutgoingCenvatAccount': '', 'StockInTransitAccount': '', 'WipOffsetProfitAndLossAccount': '', 'InventoryOffsetProfitAndLossAccount': '', 'AddressType': None, 'StreetNo': None, 'Storekeeper': None, 'Shipper': None, 'ManageSerialAndBatchNumbers': 'tNO', 'GlobalLocationNumber': None, 'EnableBinLocations': 'tNO', 'BinLocCodeSeparator': '-', 'DefaultBin': None, 'DefaultBinEnforced': 'tNO', 'AutoAllocOnIssue': 'whsBinSingleChoiceOnly', 'EnableReceivingBinLocations': 'tNO', 'ReceivingBinLocationsBy': 'rblmBinLocationCodeOrder', 'PurchaseBalanceAccount': '', 'Inactive': 'tNO', 'RestrictReceiptToEmptyBinLocation': 'tYES', 'ReceiveUpToMaxQuantity': 'tNO', 'AutoAllocOnReceipt': 'aaormDefaultBin', 'ReceiveUpToMaxWeight': 'tNO', 'ReceiveUpToMethod': 'rutmMaximumQty', 'U_ShopifyInventoryIDLocal': None, 'U_ShopifyInventoryIDInternational': None}, {'Street': None, 'StockInflationOffsetAccount': '', 'ZipCode': None, 'DecreasingAccount': '', 'PurchaseAccount': '', 'EURevenuesAccount': '', 'ReturningAccount': '', 'ShippedGoodsAccount': '', 'StockInflationAdjustAccount': '', 'AllowUseTax': 'tNO', 'CostInflationAccount': '', 'ForeignExpensesAccount': '', 'EUExpensesAccount': '', 'CostInflationOffsetAccount': '', 'ExpensesClearingAccount': '', 'PurchaseReturningAccount': '', 'VATInRevenueAccount': '', 'FederalTaxID': None, 'Location': 6, 'Block': None, 'ExpenseAccount': '', 'DecreaseGLAccount': '', 'RevenuesAccount': '', 'TaxGroup': None, 'ExemptRevenuesAccount': '', 'PurchaseOffsetAccount': '', 'CostOfGoodsSold': '50101001', 'WarehouseCode': 'PHO', 'State': '', 'City': None, 'PriceDifferencesAccount': '50101001', 'VarianceAccount': '', 'Country': None, 'IncreaseGLAccount': '', 'ExchangeRateDifferencesAccount': '', 'WIPMaterialAccount': '', 'WarehouseName': 'Photography', 'DropShip': 'tNO', 'WIPMaterialVarianceAccount': '', 'TransfersAcc': '20101513', 'InternalKey': None, 'ForeignRevenuesAcc': '', 'BuildingFloorRoom': None, 'County': None, 'Nettable': 'tYES', 'IncreasingAcc': '', 'ExpenseOffsetingAct': '', 'GoodsClearingAcc': '', 'StockAccount': '10501310', 'BusinessPlaceID': None, 'PurchaseCreditAcc': '', 'EUPurchaseCreditAcc': '', 'ForeignPurchaseCreditAcc': '', 'SalesCreditAcc': '', 'SalesCreditEUAcc': '', 'ExemptedCredits': '', 'SalesCreditForeignAcc': '', 'NegativeInventoryAdjustmentAccount': '', 'WHShipToName': None, 'Excisable': 'tNO', 'WHIncomingCenvatAccount': '', 'WHOutgoingCenvatAccount': '', 'StockInTransitAccount': '', 'WipOffsetProfitAndLossAccount': '', 'InventoryOffsetProfitAndLossAccount': '', 'AddressType': None, 'StreetNo': None, 'Storekeeper': None, 'Shipper': None, 'ManageSerialAndBatchNumbers': 'tNO', 'GlobalLocationNumber': None, 'EnableBinLocations': 'tYES', 'BinLocCodeSeparator': '-', 'DefaultBin': None, 'DefaultBinEnforced': 'tNO', 'AutoAllocOnIssue': 'whsBinSingleChoiceOnly', 'EnableReceivingBinLocations': 'tNO', 'ReceivingBinLocationsBy': 'rblmBinLocationCodeOrder', 'PurchaseBalanceAccount': '', 'Inactive': 'tYES', 'RestrictReceiptToEmptyBinLocation': 'tYES', 'ReceiveUpToMaxQuantity': 'tNO', 'AutoAllocOnReceipt': 'aaormDefaultBin', 'ReceiveUpToMaxWeight': 'tNO', 'ReceiveUpToMethod': 'rutmMaximumQty', 'U_ShopifyInventoryIDLocal': None, 'U_ShopifyInventoryIDInternational': None}, {'Street': None, 'StockInflationOffsetAccount': '', 'ZipCode': None, 'DecreasingAccount': '', 'PurchaseAccount': '', 'EURevenuesAccount': '', 'ReturningAccount': '', 'ShippedGoodsAccount': '6100103', 'StockInflationAdjustAccount': '', 'AllowUseTax': 'tNO', 'CostInflationAccount': '', 'ForeignExpensesAccount': '', 'EUExpensesAccount': '', 'CostInflationOffsetAccount': '', 'ExpensesClearingAccount': '', 'PurchaseReturningAccount': '', 'VATInRevenueAccount': '', 'FederalTaxID': None, 'Location': None, 'Block': None, 'ExpenseAccount': '', 'DecreaseGLAccount': '', 'RevenuesAccount': '', 'TaxGroup': None, 'ExemptRevenuesAccount': '', 'PurchaseOffsetAccount': '', 'CostOfGoodsSold': '50101001', 'WarehouseCode': 'PHO-EX', 'State': '', 'City': None, 'PriceDifferencesAccount': '50101001', 'VarianceAccount': '', 'Country': None, 'IncreaseGLAccount': '', 'ExchangeRateDifferencesAccount': '', 'WIPMaterialAccount': '10501281', 'WarehouseName': 'PHO-EXTERNAL', 'DropShip': 'tNO', 'WIPMaterialVarianceAccount': '', 'TransfersAcc': '20101513', 'InternalKey': None, 'ForeignRevenuesAcc': '', 'BuildingFloorRoom': None, 'County': None, 'Nettable': 'tYES', 'IncreasingAcc': '', 'ExpenseOffsetingAct': '', 'GoodsClearingAcc': '', 'StockAccount': '10501310', 'BusinessPlaceID': None, 'PurchaseCreditAcc': '50101001', 'EUPurchaseCreditAcc': '50101001', 'ForeignPurchaseCreditAcc': '50101001', 'SalesCreditAcc': '40101101', 'SalesCreditEUAcc': '40101101', 'ExemptedCredits': '', 'SalesCreditForeignAcc': '40101101', 'NegativeInventoryAdjustmentAccount': '', 'WHShipToName': None, 'Excisable': 'tNO', 'WHIncomingCenvatAccount': '', 'WHOutgoingCenvatAccount': '', 'StockInTransitAccount': '20101515', 'WipOffsetProfitAndLossAccount': '', 'InventoryOffsetProfitAndLossAccount': '', 'AddressType': None, 'StreetNo': None, 'Storekeeper': None, 'Shipper': None, 'ManageSerialAndBatchNumbers': 'tNO', 'GlobalLocationNumber': None, 'EnableBinLocations': 'tYES', 'BinLocCodeSeparator': '-', 'DefaultBin': None, 'DefaultBinEnforced': 'tNO', 'AutoAllocOnIssue': 'whsBinSingleChoiceOnly', 'EnableReceivingBinLocations': 'tNO', 'ReceivingBinLocationsBy': 'rblmBinLocationCodeOrder', 'PurchaseBalanceAccount': '', 'Inactive': 'tNO', 'RestrictReceiptToEmptyBinLocation': 'tYES', 'ReceiveUpToMaxQuantity': 'tNO', 'AutoAllocOnReceipt': 'aaormDefaultBin', 'ReceiveUpToMaxWeight': 'tNO', 'ReceiveUpToMethod': 'rutmMaximumQty', 'U_ShopifyInventoryIDLocal': None, 'U_ShopifyInventoryIDInternational': None}, {'Street': None, 'StockInflationOffsetAccount': '', 'ZipCode': None, 'DecreasingAccount': '', 'PurchaseAccount': '', 'EURevenuesAccount': '', 'ReturningAccount': '', 'ShippedGoodsAccount': '6100103', 'StockInflationAdjustAccount': '', 'AllowUseTax': 'tNO', 'CostInflationAccount': '', 'ForeignExpensesAccount': '', 'EUExpensesAccount': '', 'CostInflationOffsetAccount': '', 'ExpensesClearingAccount': '', 'PurchaseReturningAccount': '', 'VATInRevenueAccount': '', 'FederalTaxID': None, 'Location': None, 'Block': None, 'ExpenseAccount': '', 'DecreaseGLAccount': '', 'RevenuesAccount': '', 'TaxGroup': None, 'ExemptRevenuesAccount': '', 'PurchaseOffsetAccount': '', 'CostOfGoodsSold': '50101001', 'WarehouseCode': 'PHO-IN', 'State': '', 'City': None, 'PriceDifferencesAccount': '50101001', 'VarianceAccount': '', 'Country': None, 'IncreaseGLAccount': '', 'ExchangeRateDifferencesAccount': '', 'WIPMaterialAccount': '10501281', 'WarehouseName': 'PHO-INTERNAL', 'DropShip': 'tNO', 'WIPMaterialVarianceAccount': '', 'TransfersAcc': '20101513', 'InternalKey': None, 'ForeignRevenuesAcc': '', 'BuildingFloorRoom': None, 'County': None, 'Nettable': 'tYES', 'IncreasingAcc': '', 'ExpenseOffsetingAct': '', 'GoodsClearingAcc': '', 'StockAccount': '10501310', 'BusinessPlaceID': None, 'PurchaseCreditAcc': '50101001', 'EUPurchaseCreditAcc': '50101001', 'ForeignPurchaseCreditAcc': '50101001', 'SalesCreditAcc': '40101101', 'SalesCreditEUAcc': '40101101', 'ExemptedCredits': '', 'SalesCreditForeignAcc': '40101101', 'NegativeInventoryAdjustmentAccount': '', 'WHShipToName': None, 'Excisable': 'tNO', 'WHIncomingCenvatAccount': '', 'WHOutgoingCenvatAccount': '', 'StockInTransitAccount': '20101515', 'WipOffsetProfitAndLossAccount': '', 'InventoryOffsetProfitAndLossAccount': '', 'AddressType': None, 'StreetNo': None, 'Storekeeper': None, 'Shipper': None, 'ManageSerialAndBatchNumbers': 'tNO', 'GlobalLocationNumber': None, 'EnableBinLocations': 'tNO', 'BinLocCodeSeparator': '-', 'DefaultBin': None, 'DefaultBinEnforced': 'tNO', 'AutoAllocOnIssue': 'whsBinSingleChoiceOnly', 'EnableReceivingBinLocations': 'tNO', 'ReceivingBinLocationsBy': 'rblmBinLocationCodeOrder', 'PurchaseBalanceAccount': '', 'Inactive': 'tNO', 'RestrictReceiptToEmptyBinLocation': 'tYES', 'ReceiveUpToMaxQuantity': 'tNO', 'AutoAllocOnReceipt': 'aaormDefaultBin', 'ReceiveUpToMaxWeight': 'tNO', 'ReceiveUpToMethod': 'rutmMaximumQty', 'U_ShopifyInventoryIDLocal': None, 'U_ShopifyInventoryIDInternational': None}, {'Street': None, 'StockInflationOffsetAccount': '', 'ZipCode': None, 'DecreasingAccount': '', 'PurchaseAccount': '', 'EURevenuesAccount': '', 'ReturningAccount': '', 'ShippedGoodsAccount': '', 'StockInflationAdjustAccount': '', 'AllowUseTax': 'tNO', 'CostInflationAccount': '', 'ForeignExpensesAccount': '', 'EUExpensesAccount': '', 'CostInflationOffsetAccount': '', 'ExpensesClearingAccount': '', 'PurchaseReturningAccount': '', 'VATInRevenueAccount': '', 'FederalTaxID': None, 'Location': 5, 'Block': None, 'ExpenseAccount': '', 'DecreaseGLAccount': '', 'RevenuesAccount': '', 'TaxGroup': None, 'ExemptRevenuesAccount': '', 'PurchaseOffsetAccount': '', 'CostOfGoodsSold': '50101001', 'WarehouseCode': 'QCW', 'State': '', 'City': None, 'PriceDifferencesAccount': '50101001', 'VarianceAccount': '', 'Country': None, 'IncreaseGLAccount': '', 'ExchangeRateDifferencesAccount': '', 'WIPMaterialAccount': '', 'WarehouseName': 'Quality Control', 'DropShip': 'tNO', 'WIPMaterialVarianceAccount': '', 'TransfersAcc': '20101513', 'InternalKey': None, 'ForeignRevenuesAcc': '', 'BuildingFloorRoom': None, 'County': None, 'Nettable': 'tYES', 'IncreasingAcc': '', 'ExpenseOffsetingAct': '', 'GoodsClearingAcc': '', 'StockAccount': '10501211', 'BusinessPlaceID': None, 'PurchaseCreditAcc': '', 'EUPurchaseCreditAcc': '', 'ForeignPurchaseCreditAcc': '', 'SalesCreditAcc': '', 'SalesCreditEUAcc': '', 'ExemptedCredits': '', 'SalesCreditForeignAcc': '', 'NegativeInventoryAdjustmentAccount': '', 'WHShipToName': None, 'Excisable': 'tNO', 'WHIncomingCenvatAccount': '', 'WHOutgoingCenvatAccount': '', 'StockInTransitAccount': '', 'WipOffsetProfitAndLossAccount': '', 'InventoryOffsetProfitAndLossAccount': '', 'AddressType': None, 'StreetNo': None, 'Storekeeper': None, 'Shipper': None, 'ManageSerialAndBatchNumbers': 'tNO', 'GlobalLocationNumber': None, 'EnableBinLocations': 'tNO', 'BinLocCodeSeparator': '-', 'DefaultBin': None, 'DefaultBinEnforced': 'tNO', 'AutoAllocOnIssue': 'whsBinSingleChoiceOnly', 'EnableReceivingBinLocations': 'tNO', 'ReceivingBinLocationsBy': 'rblmBinLocationCodeOrder', 'PurchaseBalanceAccount': '', 'Inactive': 'tYES', 'RestrictReceiptToEmptyBinLocation': 'tYES', 'ReceiveUpToMaxQuantity': 'tNO', 'AutoAllocOnReceipt': 'aaormDefaultBin', 'ReceiveUpToMaxWeight': 'tNO', 'ReceiveUpToMethod': 'rutmMaximumQty', 'U_ShopifyInventoryIDLocal': None, 'U_ShopifyInventoryIDInternational': None}, {'Street': None, 'StockInflationOffsetAccount': '', 'ZipCode': None, 'DecreasingAccount': '', 'PurchaseAccount': '', 'EURevenuesAccount': '', 'ReturningAccount': '', 'ShippedGoodsAccount': '', 'StockInflationAdjustAccount': '', 'AllowUseTax': 'tNO', 'CostInflationAccount': '', 'ForeignExpensesAccount': '', 'EUExpensesAccount': '', 'CostInflationOffsetAccount': '', 'ExpensesClearingAccount': '', 'PurchaseReturningAccount': '', 'VATInRevenueAccount': '', 'FederalTaxID': None, 'Location': 1, 'Block': None, 'ExpenseAccount': '', 'DecreaseGLAccount': '', 'RevenuesAccount': '', 'TaxGroup': None, 'ExemptRevenuesAccount': '', 'PurchaseOffsetAccount': '', 'CostOfGoodsSold': '50101001', 'WarehouseCode': 'RTW', 'State': '', 'City': None, 'PriceDifferencesAccount': '50101001', 'VarianceAccount': '', 'Country': None, 'IncreaseGLAccount': '', 'ExchangeRateDifferencesAccount': '', 'WIPMaterialAccount': '', 'WarehouseName': 'Retailer Warehouse', 'DropShip': 'tNO', 'WIPMaterialVarianceAccount': '', 'TransfersAcc': '20101513', 'InternalKey': None, 'ForeignRevenuesAcc': '', 'BuildingFloorRoom': None, 'County': None, 'Nettable': 'tYES', 'IncreasingAcc': '', 'ExpenseOffsetingAct': '', 'GoodsClearingAcc': '', 'StockAccount': '10501310', 'BusinessPlaceID': None, 'PurchaseCreditAcc': '', 'EUPurchaseCreditAcc': '', 'ForeignPurchaseCreditAcc': '', 'SalesCreditAcc': '', 'SalesCreditEUAcc': '', 'ExemptedCredits': '', 'SalesCreditForeignAcc': '', 'NegativeInventoryAdjustmentAccount': '', 'WHShipToName': None, 'Excisable': 'tNO', 'WHIncomingCenvatAccount': '', 'WHOutgoingCenvatAccount': '', 'StockInTransitAccount': '', 'WipOffsetProfitAndLossAccount': '', 'InventoryOffsetProfitAndLossAccount': '', 'AddressType': None, 'StreetNo': None, 'Storekeeper': None, 'Shipper': None, 'ManageSerialAndBatchNumbers': 'tNO', 'GlobalLocationNumber': None, 'EnableBinLocations': 'tNO', 'BinLocCodeSeparator': '-', 'DefaultBin': None, 'DefaultBinEnforced': 'tNO', 'AutoAllocOnIssue': 'whsBinSingleChoiceOnly', 'EnableReceivingBinLocations': 'tNO', 'ReceivingBinLocationsBy': 'rblmBinLocationCodeOrder', 'PurchaseBalanceAccount': '', 'Inactive': 'tNO', 'RestrictReceiptToEmptyBinLocation': 'tYES', 'ReceiveUpToMaxQuantity': 'tNO', 'AutoAllocOnReceipt': 'aaormDefaultBin', 'ReceiveUpToMaxWeight': 'tNO', 'ReceiveUpToMethod': 'rutmMaximumQty', 'U_ShopifyInventoryIDLocal': None, 'U_ShopifyInventoryIDInternational': None}, {'Street': None, 'StockInflationOffsetAccount': '', 'ZipCode': None, 'DecreasingAccount': '', 'PurchaseAccount': '', 'EURevenuesAccount': '', 'ReturningAccount': '', 'ShippedGoodsAccount': '', 'StockInflationAdjustAccount': '', 'AllowUseTax': 'tNO', 'CostInflationAccount': '', 'ForeignExpensesAccount': '', 'EUExpensesAccount': '', 'CostInflationOffsetAccount': '', 'ExpensesClearingAccount': '', 'PurchaseReturningAccount': '', 'VATInRevenueAccount': '', 'FederalTaxID': None, 'Location': 1, 'Block': None, 'ExpenseAccount': '', 'DecreaseGLAccount': '', 'RevenuesAccount': '', 'TaxGroup': None, 'ExemptRevenuesAccount': '', 'PurchaseOffsetAccount': '', 'CostOfGoodsSold': '50101001', 'WarehouseCode': 'RTWH', 'State': '', 'City': None, 'PriceDifferencesAccount': '50101001', 'VarianceAccount': '', 'Country': None, 'IncreaseGLAccount': '', 'ExchangeRateDifferencesAccount': '', 'WIPMaterialAccount': '', 'WarehouseName': 'Retailer Warehouse', 'DropShip': 'tNO', 'WIPMaterialVarianceAccount': '', 'TransfersAcc': '20101513', 'InternalKey': None, 'ForeignRevenuesAcc': '', 'BuildingFloorRoom': None, 'County': None, 'Nettable': 'tYES', 'IncreasingAcc': '', 'ExpenseOffsetingAct': '', 'GoodsClearingAcc': '', 'StockAccount': '10501310', 'BusinessPlaceID': None, 'PurchaseCreditAcc': '', 'EUPurchaseCreditAcc': '', 'ForeignPurchaseCreditAcc': '', 'SalesCreditAcc': '', 'SalesCreditEUAcc': '', 'ExemptedCredits': '', 'SalesCreditForeignAcc': '', 'NegativeInventoryAdjustmentAccount': '', 'WHShipToName': None, 'Excisable': 'tNO', 'WHIncomingCenvatAccount': '', 'WHOutgoingCenvatAccount': '', 'StockInTransitAccount': '', 'WipOffsetProfitAndLossAccount': '', 'InventoryOffsetProfitAndLossAccount': '', 'AddressType': None, 'StreetNo': None, 'Storekeeper': None, 'Shipper': None, 'ManageSerialAndBatchNumbers': 'tNO', 'GlobalLocationNumber': None, 'EnableBinLocations': 'tYES', 'BinLocCodeSeparator': '-', 'DefaultBin': 41, 'DefaultBinEnforced': 'tNO', 'AutoAllocOnIssue': 'whsBinSingleChoiceOnly', 'EnableReceivingBinLocations': 'tNO', 'ReceivingBinLocationsBy': 'rblmBinLocationCodeOrder', 'PurchaseBalanceAccount': '', 'Inactive': 'tNO', 'RestrictReceiptToEmptyBinLocation': 'tYES', 'ReceiveUpToMaxQuantity': 'tNO', 'AutoAllocOnReceipt': 'aaormDefaultBin', 'ReceiveUpToMaxWeight': 'tNO', 'ReceiveUpToMethod': 'rutmMaximumQty', 'U_ShopifyInventoryIDLocal': None, 'U_ShopifyInventoryIDInternational': None}, {'Street': None, 'StockInflationOffsetAccount': '', 'ZipCode': None, 'DecreasingAccount': '', 'PurchaseAccount': '', 'EURevenuesAccount': '', 'ReturningAccount': '', 'ShippedGoodsAccount': '', 'StockInflationAdjustAccount': '', 'AllowUseTax': 'tNO', 'CostInflationAccount': '', 'ForeignExpensesAccount': '', 'EUExpensesAccount': '', 'CostInflationOffsetAccount': '', 'ExpensesClearingAccount': '', 'PurchaseReturningAccount': '', 'VATInRevenueAccount': '', 'FederalTaxID': None, 'Location': 1, 'Block': None, 'ExpenseAccount': '', 'DecreaseGLAccount': '', 'RevenuesAccount': '', 'TaxGroup': None, 'ExemptRevenuesAccount': '', 'PurchaseOffsetAccount': '', 'CostOfGoodsSold': '50101001', 'WarehouseCode': 'SW', 'State': '', 'City': None, 'PriceDifferencesAccount': '50101001', 'VarianceAccount': '', 'Country': None, 'IncreaseGLAccount': '', 'ExchangeRateDifferencesAccount': '', 'WIPMaterialAccount': '', 'WarehouseName': 'Show Room', 'DropShip': 'tNO', 'WIPMaterialVarianceAccount': '', 'TransfersAcc': '20101513', 'InternalKey': None, 'ForeignRevenuesAcc': '', 'BuildingFloorRoom': None, 'County': None, 'Nettable': 'tYES', 'IncreasingAcc': '', 'ExpenseOffsetingAct': '', 'GoodsClearingAcc': '', 'StockAccount': '10501310', 'BusinessPlaceID': None, 'PurchaseCreditAcc': '', 'EUPurchaseCreditAcc': '', 'ForeignPurchaseCreditAcc': '', 'SalesCreditAcc': '', 'SalesCreditEUAcc': '', 'ExemptedCredits': '', 'SalesCreditForeignAcc': '', 'NegativeInventoryAdjustmentAccount': '', 'WHShipToName': None, 'Excisable': 'tNO', 'WHIncomingCenvatAccount': '', 'WHOutgoingCenvatAccount': '', 'StockInTransitAccount': '', 'WipOffsetProfitAndLossAccount': '', 'InventoryOffsetProfitAndLossAccount': '', 'AddressType': None, 'StreetNo': None, 'Storekeeper': None, 'Shipper': None, 'ManageSerialAndBatchNumbers': 'tNO', 'GlobalLocationNumber': None, 'EnableBinLocations': 'tYES', 'BinLocCodeSeparator': '-', 'DefaultBin': 2, 'DefaultBinEnforced': 'tNO', 'AutoAllocOnIssue': 'whsBinBinCodeOrder', 'EnableReceivingBinLocations': 'tNO', 'ReceivingBinLocationsBy': 'rblmBinLocationCodeOrder', 'PurchaseBalanceAccount': '', 'Inactive': 'tNO', 'RestrictReceiptToEmptyBinLocation': 'tYES', 'ReceiveUpToMaxQuantity': 'tNO', 'AutoAllocOnReceipt': 'aaormDefaultBin', 'ReceiveUpToMaxWeight': 'tNO', 'ReceiveUpToMethod': 'rutmMaximumQty', 'U_ShopifyInventoryIDLocal': None, 'U_ShopifyInventoryIDInternational': None}, {'Street': None, 'StockInflationOffsetAccount': '', 'ZipCode': None, 'DecreasingAccount': '', 'PurchaseAccount': '', 'EURevenuesAccount': '', 'ReturningAccount': '', 'ShippedGoodsAccount': '', 'StockInflationAdjustAccount': '', 'AllowUseTax': 'tNO', 'CostInflationAccount': '', 'ForeignExpensesAccount': '', 'EUExpensesAccount': '', 'CostInflationOffsetAccount': '', 'ExpensesClearingAccount': '', 'PurchaseReturningAccount': '', 'VATInRevenueAccount': '', 'FederalTaxID': None, 'Location': 1, 'Block': None, 'ExpenseAccount': '', 'DecreaseGLAccount': '', 'RevenuesAccount': '', 'TaxGroup': None, 'ExemptRevenuesAccount': '', 'PurchaseOffsetAccount': '', 'CostOfGoodsSold': '50101001', 'WarehouseCode': 'WLS', 'State': '', 'City': None, 'PriceDifferencesAccount': '50101001', 'VarianceAccount': '', 'Country': None, 'IncreaseGLAccount': '', 'ExchangeRateDifferencesAccount': '', 'WIPMaterialAccount': '', 'WarehouseName': 'Whole Sales', 'DropShip': 'tNO', 'WIPMaterialVarianceAccount': '', 'TransfersAcc': '20101513', 'InternalKey': None, 'ForeignRevenuesAcc': '', 'BuildingFloorRoom': None, 'County': None, 'Nettable': 'tYES', 'IncreasingAcc': '', 'ExpenseOffsetingAct': '', 'GoodsClearingAcc': '', 'StockAccount': '10501310', 'BusinessPlaceID': None, 'PurchaseCreditAcc': '', 'EUPurchaseCreditAcc': '', 'ForeignPurchaseCreditAcc': '', 'SalesCreditAcc': '', 'SalesCreditEUAcc': '', 'ExemptedCredits': '', 'SalesCreditForeignAcc': '', 'NegativeInventoryAdjustmentAccount': '', 'WHShipToName': None, 'Excisable': 'tNO', 'WHIncomingCenvatAccount': '', 'WHOutgoingCenvatAccount': '', 'StockInTransitAccount': '', 'WipOffsetProfitAndLossAccount': '', 'InventoryOffsetProfitAndLossAccount': '', 'AddressType': None, 'StreetNo': None, 'Storekeeper': None, 'Shipper': None, 'ManageSerialAndBatchNumbers': 'tNO', 'GlobalLocationNumber': None, 'EnableBinLocations': 'tNO', 'BinLocCodeSeparator': '-', 'DefaultBin': None, 'DefaultBinEnforced': 'tNO', 'AutoAllocOnIssue': 'whsBinSingleChoiceOnly', 'EnableReceivingBinLocations': 'tNO', 'ReceivingBinLocationsBy': 'rblmBinLocationCodeOrder', 'PurchaseBalanceAccount': '', 'Inactive': 'tNO', 'RestrictReceiptToEmptyBinLocation': 'tYES', 'ReceiveUpToMaxQuantity': 'tNO', 'AutoAllocOnReceipt': 'aaormDefaultBin', 'ReceiveUpToMaxWeight': 'tNO', 'ReceiveUpToMethod': 'rutmMaximumQty', 'U_ShopifyInventoryIDLocal': None, 'U_ShopifyInventoryIDInternational': None}, {'Street': None, 'StockInflationOffsetAccount': '', 'ZipCode': None, 'DecreasingAccount': '', 'PurchaseAccount': '', 'EURevenuesAccount': '', 'ReturningAccount': '', 'ShippedGoodsAccount': '', 'StockInflationAdjustAccount': '', 'AllowUseTax': 'tNO', 'CostInflationAccount': '', 'ForeignExpensesAccount': '', 'EUExpensesAccount': '', 'CostInflationOffsetAccount': '', 'ExpensesClearingAccount': '', 'PurchaseReturningAccount': '', 'VATInRevenueAccount': '', 'FederalTaxID': None, 'Location': 5, 'Block': None, 'ExpenseAccount': '', 'DecreaseGLAccount': '', 'RevenuesAccount': '', 'TaxGroup': None, 'ExemptRevenuesAccount': '', 'PurchaseOffsetAccount': '', 'CostOfGoodsSold': '50101001', 'WarehouseCode': 'WW', 'State': '', 'City': None, 'PriceDifferencesAccount': '50101001', 'VarianceAccount': '', 'Country': None, 'IncreaseGLAccount': '', 'ExchangeRateDifferencesAccount': '', 'WIPMaterialAccount': '', 'WarehouseName': 'Work Shop', 'DropShip': 'tNO', 'WIPMaterialVarianceAccount': '', 'TransfersAcc': '20101513', 'InternalKey': None, 'ForeignRevenuesAcc': '', 'BuildingFloorRoom': None, 'County': None, 'Nettable': 'tYES', 'IncreasingAcc': '', 'ExpenseOffsetingAct': '', 'GoodsClearingAcc': '', 'StockAccount': '10501310', 'BusinessPlaceID': None, 'PurchaseCreditAcc': '', 'EUPurchaseCreditAcc': '', 'ForeignPurchaseCreditAcc': '', 'SalesCreditAcc': '', 'SalesCreditEUAcc': '', 'ExemptedCredits': '', 'SalesCreditForeignAcc': '', 'NegativeInventoryAdjustmentAccount': '', 'WHShipToName': None, 'Excisable': 'tNO', 'WHIncomingCenvatAccount': '', 'WHOutgoingCenvatAccount': '', 'StockInTransitAccount': '', 'WipOffsetProfitAndLossAccount': '', 'InventoryOffsetProfitAndLossAccount': '', 'AddressType': None, 'StreetNo': None, 'Storekeeper': None, 'Shipper': None, 'ManageSerialAndBatchNumbers': 'tNO', 'GlobalLocationNumber': None, 'EnableBinLocations': 'tNO', 'BinLocCodeSeparator': '-', 'DefaultBin': None, 'DefaultBinEnforced': 'tNO', 'AutoAllocOnIssue': 'whsBinSingleChoiceOnly', 'EnableReceivingBinLocations': 'tNO', 'ReceivingBinLocationsBy': 'rblmBinLocationCodeOrder', 'PurchaseBalanceAccount': '', 'Inactive': 'tNO', 'RestrictReceiptToEmptyBinLocation': 'tYES', 'ReceiveUpToMaxQuantity': 'tNO', 'AutoAllocOnReceipt': 'aaormDefaultBin', 'ReceiveUpToMaxWeight': 'tNO', 'ReceiveUpToMethod': 'rutmMaximumQty', 'U_ShopifyInventoryIDLocal': None, 'U_ShopifyInventoryIDInternational': None}, {'Street': None, 'StockInflationOffsetAccount': '', 'ZipCode': None, 'DecreasingAccount': '', 'PurchaseAccount': '', 'EURevenuesAccount': '40101101', 'ReturningAccount': '10501310', 'ShippedGoodsAccount': '6100103', 'StockInflationAdjustAccount': '', 'AllowUseTax': 'tNO', 'CostInflationAccount': '', 'ForeignExpensesAccount': '50101001', 'EUExpensesAccount': '50101001', 'CostInflationOffsetAccount': '', 'ExpensesClearingAccount': '', 'PurchaseReturningAccount': '', 'VATInRevenueAccount': '', 'FederalTaxID': None, 'Location': 5, 'Block': None, 'ExpenseAccount': '50101001', 'DecreaseGLAccount': '', 'RevenuesAccount': '40101101', 'TaxGroup': None, 'ExemptRevenuesAccount': '', 'PurchaseOffsetAccount': '', 'CostOfGoodsSold': '50101001', 'WarehouseCode': 'WW-CON', 'State': '', 'City': None, 'PriceDifferencesAccount': '50101001', 'VarianceAccount': '', 'Country': None, 'IncreaseGLAccount': '', 'ExchangeRateDifferencesAccount': '', 'WIPMaterialAccount': '10501281', 'WarehouseName': 'WKS - Consignment', 'DropShip': 'tNO', 'WIPMaterialVarianceAccount': '', 'TransfersAcc': '20101513', 'InternalKey': None, 'ForeignRevenuesAcc': '40101101', 'BuildingFloorRoom': None, 'County': None, 'Nettable': 'tYES', 'IncreasingAcc': '', 'ExpenseOffsetingAct': '', 'GoodsClearingAcc': '10501210', 'StockAccount': '10501310', 'BusinessPlaceID': None, 'PurchaseCreditAcc': '50101001', 'EUPurchaseCreditAcc': '50101001', 'ForeignPurchaseCreditAcc': '50101001', 'SalesCreditAcc': '40101101', 'SalesCreditEUAcc': '40101101', 'ExemptedCredits': '', 'SalesCreditForeignAcc': '40101101', 'NegativeInventoryAdjustmentAccount': '', 'WHShipToName': None, 'Excisable': 'tNO', 'WHIncomingCenvatAccount': '', 'WHOutgoingCenvatAccount': '', 'StockInTransitAccount': '20101515', 'WipOffsetProfitAndLossAccount': '', 'InventoryOffsetProfitAndLossAccount': '', 'AddressType': None, 'StreetNo': None, 'Storekeeper': None, 'Shipper': None, 'ManageSerialAndBatchNumbers': 'tNO', 'GlobalLocationNumber': None, 'EnableBinLocations': 'tNO', 'BinLocCodeSeparator': '-', 'DefaultBin': None, 'DefaultBinEnforced': 'tNO', 'AutoAllocOnIssue': 'whsBinSingleChoiceOnly', 'EnableReceivingBinLocations': 'tNO', 'ReceivingBinLocationsBy': 'rblmBinLocationCodeOrder', 'PurchaseBalanceAccount': '', 'Inactive': 'tNO', 'RestrictReceiptToEmptyBinLocation': 'tYES', 'ReceiveUpToMaxQuantity': 'tNO', 'AutoAllocOnReceipt': 'aaormDefaultBin', 'ReceiveUpToMaxWeight': 'tNO', 'ReceiveUpToMethod': 'rutmMaximumQty', 'U_ShopifyInventoryIDLocal': None, 'U_ShopifyInventoryIDInternational': None}, {'Street': None, 'StockInflationOffsetAccount': '', 'ZipCode': None, 'DecreasingAccount': '', 'PurchaseAccount': '', 'EURevenuesAccount': '40101101', 'ReturningAccount': '10501310', 'ShippedGoodsAccount': '6100103', 'StockInflationAdjustAccount': '', 'AllowUseTax': 'tNO', 'CostInflationAccount': '', 'ForeignExpensesAccount': '50101001', 'EUExpensesAccount': '50101001', 'CostInflationOffsetAccount': '', 'ExpensesClearingAccount': '', 'PurchaseReturningAccount': '', 'VATInRevenueAccount': '', 'FederalTaxID': None, 'Location': 5, 'Block': None, 'ExpenseAccount': '50101001', 'DecreaseGLAccount': '', 'RevenuesAccount': '40101101', 'TaxGroup': None, 'ExemptRevenuesAccount': '', 'PurchaseOffsetAccount': '', 'CostOfGoodsSold': '50101001', 'WarehouseCode': 'WW-DAM', 'State': '', 'City': None, 'PriceDifferencesAccount': '50101001', 'VarianceAccount': '', 'Country': None, 'IncreaseGLAccount': '', 'ExchangeRateDifferencesAccount': '', 'WIPMaterialAccount': '10501281', 'WarehouseName': 'WW-Damage', 'DropShip': 'tNO', 'WIPMaterialVarianceAccount': '', 'TransfersAcc': '20101513', 'InternalKey': None, 'ForeignRevenuesAcc': '40101101', 'BuildingFloorRoom': None, 'County': None, 'Nettable': 'tYES', 'IncreasingAcc': '', 'ExpenseOffsetingAct': '', 'GoodsClearingAcc': '10501210', 'StockAccount': '10501310', 'BusinessPlaceID': None, 'PurchaseCreditAcc': '50101001', 'EUPurchaseCreditAcc': '50101001', 'ForeignPurchaseCreditAcc': '50101001', 'SalesCreditAcc': '40101101', 'SalesCreditEUAcc': '40101101', 'ExemptedCredits': '', 'SalesCreditForeignAcc': '40101101', 'NegativeInventoryAdjustmentAccount': '', 'WHShipToName': None, 'Excisable': 'tNO', 'WHIncomingCenvatAccount': '', 'WHOutgoingCenvatAccount': '', 'StockInTransitAccount': '20101515', 'WipOffsetProfitAndLossAccount': '', 'InventoryOffsetProfitAndLossAccount': '', 'AddressType': None, 'StreetNo': None, 'Storekeeper': None, 'Shipper': None, 'ManageSerialAndBatchNumbers': 'tNO', 'GlobalLocationNumber': None, 'EnableBinLocations': 'tNO', 'BinLocCodeSeparator': '-', 'DefaultBin': None, 'DefaultBinEnforced': 'tNO', 'AutoAllocOnIssue': 'whsBinSingleChoiceOnly', 'EnableReceivingBinLocations': 'tNO', 'ReceivingBinLocationsBy': 'rblmBinLocationCodeOrder', 'PurchaseBalanceAccount': '', 'Inactive': 'tNO', 'RestrictReceiptToEmptyBinLocation': 'tYES', 'ReceiveUpToMaxQuantity': 'tNO', 'AutoAllocOnReceipt': 'aaormDefaultBin', 'ReceiveUpToMaxWeight': 'tNO', 'ReceiveUpToMethod': 'rutmMaximumQty', 'U_ShopifyInventoryIDLocal': None, 'U_ShopifyInventoryIDInternational': None}, {'Street': None, 'StockInflationOffsetAccount': '', 'ZipCode': None, 'DecreasingAccount': '', 'PurchaseAccount': '', 'EURevenuesAccount': '40101101', 'ReturningAccount': '10501310', 'ShippedGoodsAccount': '6100103', 'StockInflationAdjustAccount': '', 'AllowUseTax': 'tNO', 'CostInflationAccount': '', 'ForeignExpensesAccount': '50101001', 'EUExpensesAccount': '50101001', 'CostInflationOffsetAccount': '', 'ExpensesClearingAccount': '', 'PurchaseReturningAccount': '', 'VATInRevenueAccount': '', 'FederalTaxID': None, 'Location': 5, 'Block': None, 'ExpenseAccount': '50101001', 'DecreaseGLAccount': '', 'RevenuesAccount': '40101101', 'TaxGroup': None, 'ExemptRevenuesAccount': '', 'PurchaseOffsetAccount': '', 'CostOfGoodsSold': '50101001', 'WarehouseCode': 'WW-REP', 'State': '', 'City': None, 'PriceDifferencesAccount': '50101001', 'VarianceAccount': '', 'Country': None, 'IncreaseGLAccount': '', 'ExchangeRateDifferencesAccount': '', 'WIPMaterialAccount': '10501281', 'WarehouseName': 'WW-Repaire', 'DropShip': 'tNO', 'WIPMaterialVarianceAccount': '', 'TransfersAcc': '20101513', 'InternalKey': None, 'ForeignRevenuesAcc': '40101101', 'BuildingFloorRoom': None, 'County': None, 'Nettable': 'tYES', 'IncreasingAcc': '', 'ExpenseOffsetingAct': '', 'GoodsClearingAcc': '10501210', 'StockAccount': '10501310', 'BusinessPlaceID': None, 'PurchaseCreditAcc': '50101001', 'EUPurchaseCreditAcc': '50101001', 'ForeignPurchaseCreditAcc': '50101001', 'SalesCreditAcc': '40101101', 'SalesCreditEUAcc': '40101101', 'ExemptedCredits': '', 'SalesCreditForeignAcc': '40101101', 'NegativeInventoryAdjustmentAccount': '', 'WHShipToName': None, 'Excisable': 'tNO', 'WHIncomingCenvatAccount': '', 'WHOutgoingCenvatAccount': '', 'StockInTransitAccount': '20101515', 'WipOffsetProfitAndLossAccount': '', 'InventoryOffsetProfitAndLossAccount': '', 'AddressType': None, 'StreetNo': None, 'Storekeeper': None, 'Shipper': None, 'ManageSerialAndBatchNumbers': 'tNO', 'GlobalLocationNumber': None, 'EnableBinLocations': 'tNO', 'BinLocCodeSeparator': '-', 'DefaultBin': None, 'DefaultBinEnforced': 'tNO', 'AutoAllocOnIssue': 'whsBinSingleChoiceOnly', 'EnableReceivingBinLocations': 'tNO', 'ReceivingBinLocationsBy': 'rblmBinLocationCodeOrder', 'PurchaseBalanceAccount': '', 'Inactive': 'tNO', 'RestrictReceiptToEmptyBinLocation': 'tYES', 'ReceiveUpToMaxQuantity': 'tNO', 'AutoAllocOnReceipt': 'aaormDefaultBin', 'ReceiveUpToMaxWeight': 'tNO', 'ReceiveUpToMethod': 'rutmMaximumQty', 'U_ShopifyInventoryIDLocal': None, 'U_ShopifyInventoryIDInternational': None}, {'Street': None, 'StockInflationOffsetAccount': '', 'ZipCode': None, 'DecreasingAccount': '', 'PurchaseAccount': '', 'EURevenuesAccount': '40101101', 'ReturningAccount': '10501310', 'ShippedGoodsAccount': '6100103', 'StockInflationAdjustAccount': '', 'AllowUseTax': 'tNO', 'CostInflationAccount': '', 'ForeignExpensesAccount': '50101001', 'EUExpensesAccount': '50101001', 'CostInflationOffsetAccount': '', 'ExpensesClearingAccount': '', 'PurchaseReturningAccount': '', 'VATInRevenueAccount': '', 'FederalTaxID': None, 'Location': 5, 'Block': None, 'ExpenseAccount': '50101001', 'DecreaseGLAccount': '', 'RevenuesAccount': '40101101', 'TaxGroup': None, 'ExemptRevenuesAccount': '', 'PurchaseOffsetAccount': '', 'CostOfGoodsSold': '50101001', 'WarehouseCode': 'WW-SAM', 'State': '', 'City': None, 'PriceDifferencesAccount': '50101001', 'VarianceAccount': '', 'Country': None, 'IncreaseGLAccount': '', 'ExchangeRateDifferencesAccount': '', 'WIPMaterialAccount': '10501281', 'WarehouseName': 'WKS - Sample', 'DropShip': 'tNO', 'WIPMaterialVarianceAccount': '', 'TransfersAcc': '20101513', 'InternalKey': None, 'ForeignRevenuesAcc': '40101101', 'BuildingFloorRoom': None, 'County': None, 'Nettable': 'tYES', 'IncreasingAcc': '', 'ExpenseOffsetingAct': '', 'GoodsClearingAcc': '10501210', 'StockAccount': '10501310', 'BusinessPlaceID': None, 'PurchaseCreditAcc': '50101001', 'EUPurchaseCreditAcc': '50101001', 'ForeignPurchaseCreditAcc': '50101001', 'SalesCreditAcc': '40101101', 'SalesCreditEUAcc': '40101101', 'ExemptedCredits': '', 'SalesCreditForeignAcc': '40101101', 'NegativeInventoryAdjustmentAccount': '', 'WHShipToName': None, 'Excisable': 'tNO', 'WHIncomingCenvatAccount': '', 'WHOutgoingCenvatAccount': '', 'StockInTransitAccount': '20101515', 'WipOffsetProfitAndLossAccount': '', 'InventoryOffsetProfitAndLossAccount': '', 'AddressType': None, 'StreetNo': None, 'Storekeeper': None, 'Shipper': None, 'ManageSerialAndBatchNumbers': 'tNO', 'GlobalLocationNumber': None, 'EnableBinLocations': 'tNO', 'BinLocCodeSeparator': '-', 'DefaultBin': None, 'DefaultBinEnforced': 'tNO', 'AutoAllocOnIssue': 'whsBinSingleChoiceOnly', 'EnableReceivingBinLocations': 'tNO', 'ReceivingBinLocationsBy': 'rblmBinLocationCodeOrder', 'PurchaseBalanceAccount': '', 'Inactive': 'tNO', 'RestrictReceiptToEmptyBinLocation': 'tYES', 'ReceiveUpToMaxQuantity': 'tNO', 'AutoAllocOnReceipt': 'aaormDefaultBin', 'ReceiveUpToMaxWeight': 'tNO', 'ReceiveUpToMethod': 'rutmMaximumQty', 'U_ShopifyInventoryIDLocal': None, 'U_ShopifyInventoryIDInternational': None}, {'Street': None, 'StockInflationOffsetAccount': '', 'ZipCode': None, 'DecreasingAccount': '', 'PurchaseAccount': '', 'EURevenuesAccount': '40101101', 'ReturningAccount': '10501310', 'ShippedGoodsAccount': '6100103', 'StockInflationAdjustAccount': '', 'AllowUseTax': 'tNO', 'CostInflationAccount': '', 'ForeignExpensesAccount': '50101001', 'EUExpensesAccount': '50101001', 'CostInflationOffsetAccount': '', 'ExpensesClearingAccount': '', 'PurchaseReturningAccount': '', 'VATInRevenueAccount': '', 'FederalTaxID': None, 'Location': 5, 'Block': None, 'ExpenseAccount': '50101001', 'DecreaseGLAccount': '', 'RevenuesAccount': '40101101', 'TaxGroup': None, 'ExemptRevenuesAccount': '', 'PurchaseOffsetAccount': '', 'CostOfGoodsSold': '50101001', 'WarehouseCode': 'WW-WIP', 'State': '', 'City': None, 'PriceDifferencesAccount': '50101001', 'VarianceAccount': '', 'Country': None, 'IncreaseGLAccount': '', 'ExchangeRateDifferencesAccount': '', 'WIPMaterialAccount': '10501281', 'WarehouseName': 'WKS - WIP', 'DropShip': 'tNO', 'WIPMaterialVarianceAccount': '', 'TransfersAcc': '20101513', 'InternalKey': None, 'ForeignRevenuesAcc': '40101101', 'BuildingFloorRoom': None, 'County': None, 'Nettable': 'tYES', 'IncreasingAcc': '', 'ExpenseOffsetingAct': '', 'GoodsClearingAcc': '10501210', 'StockAccount': '10501310', 'BusinessPlaceID': None, 'PurchaseCreditAcc': '50101001', 'EUPurchaseCreditAcc': '50101001', 'ForeignPurchaseCreditAcc': '50101001', 'SalesCreditAcc': '40101101', 'SalesCreditEUAcc': '40101101', 'ExemptedCredits': '', 'SalesCreditForeignAcc': '40101101', 'NegativeInventoryAdjustmentAccount': '', 'WHShipToName': None, 'Excisable': 'tNO', 'WHIncomingCenvatAccount': '', 'WHOutgoingCenvatAccount': '', 'StockInTransitAccount': '20101515', 'WipOffsetProfitAndLossAccount': '', 'InventoryOffsetProfitAndLossAccount': '', 'AddressType': None, 'StreetNo': None, 'Storekeeper': None, 'Shipper': None, 'ManageSerialAndBatchNumbers': 'tNO', 'GlobalLocationNumber': None, 'EnableBinLocations': 'tNO', 'BinLocCodeSeparator': '-', 'DefaultBin': None, 'DefaultBinEnforced': 'tNO', 'AutoAllocOnIssue': 'whsBinSingleChoiceOnly', 'EnableReceivingBinLocations': 'tNO', 'ReceivingBinLocationsBy': 'rblmBinLocationCodeOrder', 'PurchaseBalanceAccount': '', 'Inactive': 'tNO', 'RestrictReceiptToEmptyBinLocation': 'tYES', 'ReceiveUpToMaxQuantity': 'tNO', 'AutoAllocOnReceipt': 'aaormDefaultBin', 'ReceiveUpToMaxWeight': 'tNO', 'ReceiveUpToMethod': 'rutmMaximumQty', 'U_ShopifyInventoryIDLocal': None, 'U_ShopifyInventoryIDInternational': None}, {'Street': None, 'StockInflationOffsetAccount': '', 'ZipCode': None, 'DecreasingAccount': '', 'PurchaseAccount': '', 'EURevenuesAccount': '', 'ReturningAccount': '', 'ShippedGoodsAccount': '', 'StockInflationAdjustAccount': '', 'AllowUseTax': 'tNO', 'CostInflationAccount': '', 'ForeignExpensesAccount': '', 'EUExpensesAccount': '', 'CostInflationOffsetAccount': '', 'ExpensesClearingAccount': '', 'PurchaseReturningAccount': '', 'VATInRevenueAccount': '', 'FederalTaxID': None, 'Location': 2, 'Block': None, 'ExpenseAccount': '', 'DecreaseGLAccount': '', 'RevenuesAccount': '', 'TaxGroup': None, 'ExemptRevenuesAccount': '', 'PurchaseOffsetAccount': '', 'CostOfGoodsSold': '50101001', 'WarehouseCode': 'ZW', 'State': '', 'City': None, 'PriceDifferencesAccount': '50101001', 'VarianceAccount': '', 'Country': None, 'IncreaseGLAccount': '', 'ExchangeRateDifferencesAccount': '', 'WIPMaterialAccount': '', 'WarehouseName': 'Zamalek', 'DropShip': 'tNO', 'WIPMaterialVarianceAccount': '', 'TransfersAcc': '20101513', 'InternalKey': None, 'ForeignRevenuesAcc': '', 'BuildingFloorRoom': None, 'County': None, 'Nettable': 'tYES', 'IncreasingAcc': '', 'ExpenseOffsetingAct': '', 'GoodsClearingAcc': '', 'StockAccount': '10501310', 'BusinessPlaceID': None, 'PurchaseCreditAcc': '', 'EUPurchaseCreditAcc': '', 'ForeignPurchaseCreditAcc': '', 'SalesCreditAcc': '', 'SalesCreditEUAcc': '', 'ExemptedCredits': '', 'SalesCreditForeignAcc': '', 'NegativeInventoryAdjustmentAccount': '', 'WHShipToName': None, 'Excisable': 'tNO', 'WHIncomingCenvatAccount': '', 'WHOutgoingCenvatAccount': '', 'StockInTransitAccount': '', 'WipOffsetProfitAndLossAccount': '', 'InventoryOffsetProfitAndLossAccount': '', 'AddressType': None, 'StreetNo': None, 'Storekeeper': None, 'Shipper': None, 'ManageSerialAndBatchNumbers': 'tNO', 'GlobalLocationNumber': None, 'EnableBinLocations': 'tYES', 'BinLocCodeSeparator': '-', 'DefaultBin': 14, 'DefaultBinEnforced': 'tNO', 'AutoAllocOnIssue': 'whsBinSingleChoiceOnly', 'EnableReceivingBinLocations': 'tNO', 'ReceivingBinLocationsBy': 'rblmBinLocationCodeOrder', 'PurchaseBalanceAccount': '', 'Inactive': 'tNO', 'RestrictReceiptToEmptyBinLocation': 'tYES', 'ReceiveUpToMaxQuantity': 'tNO', 'AutoAllocOnReceipt': 'aaormDefaultBin', 'ReceiveUpToMaxWeight': 'tNO', 'ReceiveUpToMethod': 'rutmMaximumQty', 'U_ShopifyInventoryIDLocal': None, 'U_ShopifyInventoryIDInternational': None}], 'odata.nextLink': 'Warehouses?$skip=20'}, 'status': 'success'}
2025-08-05 18:06:04,430 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'Items', 'request': {'method': 'GET', 'url': 'https://10.0.0.100:50000/b1s/v1/Items', 'data': None, 'params': {'$top': 5}}, 'response': None, 'status': None}
2025-08-05 18:06:05,446 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'Items', 'request': None, 'response': {'odata.metadata': 'https://10.0.0.100:50000/b1s/v1/$metadata#Items', 'value': [{'ItemCode': 'ACC-0000001', 'ItemName': 'Ring Holder With Slit 5*5cm', 'ForeignName': None, 'ItemsGroupCode': 110, 'CustomsGroupCode': -1, 'SalesVATGroup': 'X0', 'BarCode': None, 'VatLiable': 'tYES', 'PurchaseItem': 'tYES', 'SalesItem': 'tNO', 'InventoryItem': 'tYES', 'IncomeAccount': None, 'ExemptIncomeAccount': None, 'ExpanseAccount': None, 'Mainsupplier': None, 'SupplierCatalogNo': None, 'DesiredInventory': 0.0, 'MinInventory': 50.0, 'Picture': None, 'User_Text': None, 'SerialNum': None, 'CommissionPercent': 0.0, 'CommissionSum': 0.0, 'CommissionGroup': 0, 'TreeType': 'iNotATree', 'AssetItem': 'tNO', 'DataExportCode': None, 'Manufacturer': -1, 'QuantityOnStock': 35.0, 'QuantityOrderedFromVendors': 0.0, 'QuantityOrderedByCustomers': 0.0, 'ManageSerialNumbers': 'tNO', 'ManageBatchNumbers': 'tNO', 'Valid': 'tYES', 'ValidFrom': None, 'ValidTo': None, 'ValidRemarks': None, 'Frozen': 'tNO', 'FrozenFrom': None, 'FrozenTo': None, 'FrozenRemarks': None, 'SalesUnit': None, 'SalesItemsPerUnit': 1.0, 'SalesPackagingUnit': None, 'SalesQtyPerPackUnit': 1.0, 'SalesUnitLength': None, 'SalesLengthUnit': None, 'SalesUnitWidth': None, 'SalesWidthUnit': None, 'SalesUnitHeight': None, 'SalesHeightUnit': None, 'SalesUnitVolume': 0.0, 'SalesVolumeUnit': 4, 'SalesUnitWeight': None, 'SalesWeightUnit': None, 'PurchaseUnit': None, 'PurchaseItemsPerUnit': 1.0, 'PurchasePackagingUnit': None, 'PurchaseQtyPerPackUnit': 1.0, 'PurchaseUnitLength': None, 'PurchaseLengthUnit': None, 'PurchaseUnitWidth': None, 'PurchaseWidthUnit': None, 'PurchaseUnitHeight': None, 'PurchaseHeightUnit': None, 'PurchaseUnitVolume': 0.0, 'PurchaseVolumeUnit': 4, 'PurchaseUnitWeight': None, 'PurchaseWeightUnit': None, 'PurchaseVATGroup': 'X1', 'SalesFactor1': 1.0, 'SalesFactor2': 1.0, 'SalesFactor3': 1.0, 'SalesFactor4': 1.0, 'PurchaseFactor1': 1.0, 'PurchaseFactor2': 1.0, 'PurchaseFactor3': 1.0, 'PurchaseFactor4': 1.0, 'MovingAveragePrice': 0.0, 'ForeignRevenuesAccount': None, 'ECRevenuesAccount': None, 'ForeignExpensesAccount': None, 'ECExpensesAccount': None, 'AvgStdPrice': 0.0, 'DefaultWarehouse': None, 'ShipType': None, 'GLMethod': 'glm_ItemClass', 'TaxType': 'tt_Yes', 'MaxInventory': 0.0, 'ManageStockByWarehouse': 'tYES', 'PurchaseHeightUnit1': None, 'PurchaseUnitHeight1': None, 'PurchaseLengthUnit1': None, 'PurchaseUnitLength1': None, 'PurchaseWeightUnit1': None, 'PurchaseUnitWeight1': None, 'PurchaseWidthUnit1': None, 'PurchaseUnitWidth1': None, 'SalesHeightUnit1': None, 'SalesUnitHeight1': None, 'SalesLengthUnit1': None, 'SalesUnitLength1': None, 'SalesWeightUnit1': None, 'SalesUnitWeight1': None, 'SalesWidthUnit1': None, 'SalesUnitWidth1': None, 'ForceSelectionOfSerialNumber': 'tYES', 'ManageSerialNumbersOnReleaseOnly': 'tNO', 'WTLiable': 'tNO', 'CostAccountingMethod': 'bis_MovingAverage', 'SWW': None, 'WarrantyTemplate': '', 'IndirectTax': 'tNO', 'ArTaxCode': None, 'ApTaxCode': None, 'BaseUnitName': None, 'ItemCountryOrg': None, 'IssueMethod': 'im_Backflush', 'SRIAndBatchManageMethod': 'bomm_OnEveryTransaction', 'IsPhantom': 'tNO', 'InventoryUOM': 'Piece', 'PlanningSystem': 'bop_None', 'ProcurementMethod': 'bom_Buy', 'ComponentWarehouse': 'bomcw_BOM', 'OrderIntervals': None, 'OrderMultiple': 0.0, 'LeadTime': None, 'MinOrderQuantity': 0.0, 'ItemType': 'itItems', 'ItemClass': 'itcMaterial', 'OutgoingServiceCode': -1, 'IncomingServiceCode': -1, 'ServiceGroup': -1, 'NCMCode': -1, 'MaterialType': 'mt_FinishedGoods', 'MaterialGroup': -1, 'ProductSource': '', 'Properties1': 'tNO', 'Properties2': 'tNO', 'Properties3': 'tNO', 'Properties4': 'tNO', 'Properties5': 'tNO', 'Properties6': 'tNO', 'Properties7': 'tNO', 'Properties8': 'tNO', 'Properties9': 'tNO', 'Properties10': 'tNO', 'Properties11': 'tNO', 'Properties12': 'tNO', 'Properties13': 'tNO', 'Properties14': 'tNO', 'Properties15': 'tNO', 'Properties16': 'tNO', 'Properties17': 'tNO', 'Properties18': 'tNO', 'Properties19': 'tNO', 'Properties20': 'tNO', 'Properties21': 'tNO', 'Properties22': 'tNO', 'Properties23': 'tNO', 'Properties24': 'tNO', 'Properties25': 'tNO', 'Properties26': 'tNO', 'Properties27': 'tNO', 'Properties28': 'tNO', 'Properties29': 'tNO', 'Properties30': 'tNO', 'Properties31': 'tNO', 'Properties32': 'tNO', 'Properties33': 'tNO', 'Properties34': 'tNO', 'Properties35': 'tNO', 'Properties36': 'tNO', 'Properties37': 'tNO', 'Properties38': 'tNO', 'Properties39': 'tNO', 'Properties40': 'tNO', 'Properties41': 'tNO', 'Properties42': 'tNO', 'Properties43': 'tNO', 'Properties44': 'tNO', 'Properties45': 'tNO', 'Properties46': 'tNO', 'Properties47': 'tNO', 'Properties48': 'tNO', 'Properties49': 'tNO', 'Properties50': 'tNO', 'Properties51': 'tNO', 'Properties52': 'tNO', 'Properties53': 'tNO', 'Properties54': 'tNO', 'Properties55': 'tNO', 'Properties56': 'tNO', 'Properties57': 'tNO', 'Properties58': 'tNO', 'Properties59': 'tNO', 'Properties60': 'tNO', 'Properties61': 'tNO', 'Properties62': 'tNO', 'Properties63': 'tNO', 'Properties64': 'tNO', 'AutoCreateSerialNumbersOnRelease': 'tNO', 'DNFEntry': -1, 'GTSItemSpec': None, 'GTSItemTaxCategory': None, 'FuelID': None, 'BeverageTableCode': '', 'BeverageGroupCode': '', 'BeverageCommercialBrandCode': None, 'Series': 119, 'ToleranceDays': None, 'TypeOfAdvancedRules': 'toarGeneral', 'IssuePrimarilyBy': 'ipbBinLocations', 'NoDiscounts': 'tNO', 'AssetClass': '', 'AssetGroup': '', 'InventoryNumber': '', 'Technician': None, 'Employee': None, 'Location': None, 'AssetStatus': 'New', 'CapitalizationDate': None, 'StatisticalAsset': 'tNO', 'Cession': 'tNO', 'DeactivateAfterUsefulLife': 'tNO', 'ManageByQuantity': 'tNO', 'UoMGroupEntry': 1, 'InventoryUoMEntry': 1, 'DefaultSalesUoMEntry': None, 'DefaultPurchasingUoMEntry': None, 'DepreciationGroup': None, 'AssetSerialNumber': '', 'InventoryWeight': None, 'InventoryWeightUnit': None, 'InventoryWeight1': None, 'InventoryWeightUnit1': None, 'DefaultCountingUnit': 'Piece', 'CountingItemsPerUnit': 1.0, 'DefaultCountingUoMEntry': 1, 'Excisable': 'tNO', 'ChapterID': -1, 'ScsCode': None, 'SpProdType': None, 'ProdStdCost': 0.0, 'InCostRollup': 'tYES', 'VirtualAssetItem': 'tNO', 'EnforceAssetSerialNumbers': 'tNO', 'AttachmentEntry': None, 'LinkedResource': None, 'UpdateDate': '2025-05-17', 'UpdateTime': '16:02:59', 'GSTRelevnt': 'tNO', 'SACEntry': -1, 'GSTTaxCategory': 'gtc_Regular', 'ServiceCategoryEntry': -1, 'CapitalGoodsOnHoldPercent': None, 'CapitalGoodsOnHoldLimit': None, 'AssessableValue': 0.0, 'AssVal4WTR': 0.0, 'SOIExcisable': 'se_NotExcisable', 'TNVED': None, 'ImportedItem': 'tNO', 'PricingUnit': 1, 'CreateDate': '2025-01-26', 'CreateTime': '09:33:07', 'U_MfgH': None, 'U_Collection': None, 'U_OldCode': None, 'U_ItemsCat': None, 'U_NumberofSet': None, 'U_NileCode': None, 'U_TransferProductionLinkExclude': None, 'U_SBO_CodeType': 'GS1', 'U_SBO_EGSCode': None, 'U_ShopifyColor': None, 'U_SalesChannel': None, 'U_ShopifyItemIDLocal': None, 'U_ShopifyItemIDInternational': None, 'U_ParentCommercialName': None, 'ItemPrices': [{'PriceList': 1, 'Price': 0.0, 'Currency': '', 'AdditionalPrice1': 0.0, 'AdditionalCurrency1': '', 'AdditionalPrice2': 0.0, 'AdditionalCurrency2': '', 'BasePriceList': 1, 'Factor': 1.0, 'UoMPrices': []}, {'PriceList': 2, 'Price': 0.0, 'Currency': '', 'AdditionalPrice1': 0.0, 'AdditionalCurrency1': '', 'AdditionalPrice2': 0.0, 'AdditionalCurrency2': '', 'BasePriceList': 1, 'Factor': 0.4, 'UoMPrices': []}, {'PriceList': 3, 'Price': 0.0, 'Currency': '', 'AdditionalPrice1': 0.0, 'AdditionalCurrency1': '', 'AdditionalPrice2': 0.0, 'AdditionalCurrency2': '', 'BasePriceList': 3, 'Factor': 1.0, 'UoMPrices': []}, {'PriceList': 4, 'Price': 0.0, 'Currency': '', 'AdditionalPrice1': 0.0, 'AdditionalCurrency1': '', 'AdditionalPrice2': 0.0, 'AdditionalCurrency2': '', 'BasePriceList': 4, 'Factor': 1.0, 'UoMPrices': []}, {'PriceList': 5, 'Price': 0.0, 'Currency': '', 'AdditionalPrice1': 0.0, 'AdditionalCurrency1': '', 'AdditionalPrice2': 0.0, 'AdditionalCurrency2': '', 'BasePriceList': 5, 'Factor': 1.0, 'UoMPrices': []}, {'PriceList': 6, 'Price': 0.0, 'Currency': '', 'AdditionalPrice1': 0.0, 'AdditionalCurrency1': '', 'AdditionalPrice2': 0.0, 'AdditionalCurrency2': '', 'BasePriceList': 6, 'Factor': 1.0, 'UoMPrices': []}, {'PriceList': 7, 'Price': 0.0, 'Currency': '', 'AdditionalPrice1': 0.0, 'AdditionalCurrency1': '', 'AdditionalPrice2': 0.0, 'AdditionalCurrency2': '', 'BasePriceList': 7, 'Factor': 1.0, 'UoMPrices': []}, {'PriceList': 8, 'Price': 0.0, 'Currency': '', 'AdditionalPrice1': 0.0, 'AdditionalCurrency1': '', 'AdditionalPrice2': 0.0, 'AdditionalCurrency2': '', 'BasePriceList': 8, 'Factor': 1.0, 'UoMPrices': []}, {'PriceList': 9, 'Price': 0.0, 'Currency': '', 'AdditionalPrice1': 0.0, 'AdditionalCurrency1': '', 'AdditionalPrice2': 0.0, 'AdditionalCurrency2': '', 'BasePriceList': 9, 'Factor': 1.0, 'UoMPrices': []}, {'PriceList': 10, 'Price': 0.0, 'Currency': '', 'AdditionalPrice1': 0.0, 'AdditionalCurrency1': '', 'AdditionalPrice2': 0.0, 'AdditionalCurrency2': '', 'BasePriceList': 10, 'Factor': 1.0, 'UoMPrices': []}], 'ItemWarehouseInfoCollection': [{'MinimalStock': 30.0, 'MaximalStock': 0.0, 'MinimalOrder': 0.0, 'StandardAveragePrice': 180.0, 'Locked': 'tNO', 'InventoryAccount': None, 'CostAccount': None, 'TransferAccount': None, 'RevenuesAccount': None, 'VarienceAccount': None, 'DecreasingAccount': None, 'IncreasingAccount': None, 'ReturningAccount': None, 'ExpensesAccount': None, 'EURevenuesAccount': None, 'EUExpensesAccount': None, 'ForeignRevenueAcc': None, 'ForeignExpensAcc': None, 'ExemptIncomeAcc': None, 'PriceDifferenceAcc': None, 'WarehouseCode': '5A', 'InStock': 25.0, 'Committed': 0.0, 'Ordered': 0.0, 'CountedQuantity': 0.0, 'WasCounted': 'tNO', 'UserSignature': 50, 'Counted': 0.0, 'ExpenseClearingAct': None, 'PurchaseCreditAcc': None, 'EUPurchaseCreditAcc': None, 'ForeignPurchaseCreditAcc': None, 'SalesCreditAcc': None, 'SalesCreditEUAcc': None, 'ExemptedCredits': None, 'SalesCreditForeignAcc': None, 'ExpenseOffsettingAccount': None, 'WipAccount': None, 'ExchangeRateDifferencesAcct': None, 'GoodsClearingAcct': None, 'NegativeInventoryAdjustmentAccount': None, 'CostInflationOffsetAccount': None, 'GLDecreaseAcct': None, 'GLIncreaseAcct': None, 'PAReturnAcct': None, 'PurchaseAcct': None, 'PurchaseOffsetAcct': None, 'ShippedGoodsAccount': None, 'StockInflationOffsetAccount': None, 'StockInflationAdjustAccount': None, 'VATInRevenueAccount': None, 'WipVarianceAccount': None, 'CostInflationAccount': None, 'WHIncomingCenvatAccount': None, 'WHOutgoingCenvatAccount': None, 'StockInTransitAccount': None, 'WipOffsetProfitAndLossAccount': None, 'InventoryOffsetProfitAndLossAccount': None, 'DefaultBin': None, 'DefaultBinEnforced': 'tNO', 'PurchaseBalanceAccount': None, 'ItemCode': 'ACC-0000001', 'ItemCycleCounts': []}, {'MinimalStock': 20.0, 'MaximalStock': 0.0, 'MinimalOrder': 0.0, 'StandardAveragePrice': 180.0, 'Locked': 'tNO', 'InventoryAccount': None, 'CostAccount': None, 'TransferAccount': None, 'RevenuesAccount': None, 'VarienceAccount': None, 'DecreasingAccount': None, 'IncreasingAccount': None, 'ReturningAccount': None, 'ExpensesAccount': None, 'EURevenuesAccount': None, 'EUExpensesAccount': None, 'ForeignRevenueAcc': None, 'ForeignExpensAcc': None, 'ExemptIncomeAcc': None, 'PriceDifferenceAcc': None, 'WarehouseCode': 'Arkan', 'InStock': 10.0, 'Committed': 0.0, 'Ordered': 0.0, 'CountedQuantity': 0.0, 'WasCounted': 'tNO', 'UserSignature': 50, 'Counted': 0.0, 'ExpenseClearingAct': None, 'PurchaseCreditAcc': None, 'EUPurchaseCreditAcc': None, 'ForeignPurchaseCreditAcc': None, 'SalesCreditAcc': None, 'SalesCreditEUAcc': None, 'ExemptedCredits': None, 'SalesCreditForeignAcc': None, 'ExpenseOffsettingAccount': None, 'WipAccount': None, 'ExchangeRateDifferencesAcct': None, 'GoodsClearingAcct': None, 'NegativeInventoryAdjustmentAccount': None, 'CostInflationOffsetAccount': None, 'GLDecreaseAcct': None, 'GLIncreaseAcct': None, 'PAReturnAcct': None, 'PurchaseAcct': None, 'PurchaseOffsetAcct': None, 'ShippedGoodsAccount': None, 'StockInflationOffsetAccount': None, 'StockInflationAdjustAccount': None, 'VATInRevenueAccount': None, 'WipVarianceAccount': None, 'CostInflationAccount': None, 'WHIncomingCenvatAccount': None, 'WHOutgoingCenvatAccount': None, 'StockInTransitAccount': None, 'WipOffsetProfitAndLossAccount': None, 'InventoryOffsetProfitAndLossAccount': None, 'DefaultBin': None, 'DefaultBinEnforced': 'tNO', 'PurchaseBalanceAccount': None, 'ItemCode': 'ACC-0000001', 'ItemCycleCounts': []}, {'MinimalStock': 0.0, 'MaximalStock': 0.0, 'MinimalOrder': 0.0, 'StandardAveragePrice': 0.0, 'Locked': 'tNO', 'InventoryAccount': None, 'CostAccount': None, 'TransferAccount': None, 'RevenuesAccount': None, 'VarienceAccount': None, 'DecreasingAccount': None, 'IncreasingAccount': None, 'ReturningAccount': None, 'ExpensesAccount': None, 'EURevenuesAccount': None, 'EUExpensesAccount': None, 'ForeignRevenueAcc': None, 'ForeignExpensAcc': None, 'ExemptIncomeAcc': None, 'PriceDifferenceAcc': None, 'WarehouseCode': 'DIP', 'InStock': 0.0, 'Committed': 0.0, 'Ordered': 0.0, 'CountedQuantity': 0.0, 'WasCounted': 'tNO', 'UserSignature': 50, 'Counted': 0.0, 'ExpenseClearingAct': None, 'PurchaseCreditAcc': None, 'EUPurchaseCreditAcc': None, 'ForeignPurchaseCreditAcc': None, 'SalesCreditAcc': None, 'SalesCreditEUAcc': None, 'ExemptedCredits': None, 'SalesCreditForeignAcc': None, 'ExpenseOffsettingAccount': None, 'WipAccount': None, 'ExchangeRateDifferencesAcct': None, 'GoodsClearingAcct': None, 'NegativeInventoryAdjustmentAccount': None, 'CostInflationOffsetAccount': None, 'GLDecreaseAcct': None, 'GLIncreaseAcct': None, 'PAReturnAcct': None, 'PurchaseAcct': None, 'PurchaseOffsetAcct': None, 'ShippedGoodsAccount': None, 'StockInflationOffsetAccount': None, 'StockInflationAdjustAccount': None, 'VATInRevenueAccount': None, 'WipVarianceAccount': None, 'CostInflationAccount': None, 'WHIncomingCenvatAccount': None, 'WHOutgoingCenvatAccount': None, 'StockInTransitAccount': None, 'WipOffsetProfitAndLossAccount': None, 'InventoryOffsetProfitAndLossAccount': None, 'DefaultBin': None, 'DefaultBinEnforced': 'tNO', 'PurchaseBalanceAccount': None, 'ItemCode': 'ACC-0000001', 'ItemCycleCounts': []}, {'MinimalStock': 0.0, 'MaximalStock': 0.0, 'MinimalOrder': 0.0, 'StandardAveragePrice': 180.0, 'Locked': 'tNO', 'InventoryAccount': None, 'CostAccount': None, 'TransferAccount': None, 'RevenuesAccount': None, 'VarienceAccount': None, 'DecreasingAccount': None, 'IncreasingAccount': None, 'ReturningAccount': None, 'ExpensesAccount': None, 'EURevenuesAccount': None, 'EUExpensesAccount': None, 'ForeignRevenueAcc': None, 'ForeignExpensAcc': None, 'ExemptIncomeAcc': None, 'PriceDifferenceAcc': None, 'WarehouseCode': 'INC', 'InStock': 0.0, 'Committed': 0.0, 'Ordered': 0.0, 'CountedQuantity': 0.0, 'WasCounted': 'tNO', 'UserSignature': 50, 'Counted': 0.0, 'ExpenseClearingAct': None, 'PurchaseCreditAcc': None, 'EUPurchaseCreditAcc': None, 'ForeignPurchaseCreditAcc': None, 'SalesCreditAcc': None, 'SalesCreditEUAcc': None, 'ExemptedCredits': None, 'SalesCreditForeignAcc': None, 'ExpenseOffsettingAccount': None, 'WipAccount': None, 'ExchangeRateDifferencesAcct': None, 'GoodsClearingAcct': None, 'NegativeInventoryAdjustmentAccount': None, 'CostInflationOffsetAccount': None, 'GLDecreaseAcct': None, 'GLIncreaseAcct': None, 'PAReturnAcct': None, 'PurchaseAcct': None, 'PurchaseOffsetAcct': None, 'ShippedGoodsAccount': None, 'StockInflationOffsetAccount': None, 'StockInflationAdjustAccount': None, 'VATInRevenueAccount': None, 'WipVarianceAccount': None, 'CostInflationAccount': None, 'WHIncomingCenvatAccount': None, 'WHOutgoingCenvatAccount': None, 'StockInTransitAccount': None, 'WipOffsetProfitAndLossAccount': None, 'InventoryOffsetProfitAndLossAccount': None, 'DefaultBin': None, 'DefaultBinEnforced': 'tNO', 'PurchaseBalanceAccount': None, 'ItemCode': 'ACC-0000001', 'ItemCycleCounts': []}, {'MinimalStock': 0.0, 'MaximalStock': 0.0, 'MinimalOrder': 0.0, 'StandardAveragePrice': 0.0, 'Locked': 'tNO', 'InventoryAccount': None, 'CostAccount': None, 'TransferAccount': None, 'RevenuesAccount': None, 'VarienceAccount': None, 'DecreasingAccount': None, 'IncreasingAccount': None, 'ReturningAccount': None, 'ExpensesAccount': None, 'EURevenuesAccount': None, 'EUExpensesAccount': None, 'ForeignRevenueAcc': None, 'ForeignExpensAcc': None, 'ExemptIncomeAcc': None, 'PriceDifferenceAcc': None, 'WarehouseCode': 'ONL', 'InStock': 0.0, 'Committed': 0.0, 'Ordered': 0.0, 'CountedQuantity': 0.0, 'WasCounted': 'tNO', 'UserSignature': 50, 'Counted': 0.0, 'ExpenseClearingAct': None, 'PurchaseCreditAcc': None, 'EUPurchaseCreditAcc': None, 'ForeignPurchaseCreditAcc': None, 'SalesCreditAcc': None, 'SalesCreditEUAcc': None, 'ExemptedCredits': None, 'SalesCreditForeignAcc': None, 'ExpenseOffsettingAccount': None, 'WipAccount': None, 'ExchangeRateDifferencesAcct': None, 'GoodsClearingAcct': None, 'NegativeInventoryAdjustmentAccount': None, 'CostInflationOffsetAccount': None, 'GLDecreaseAcct': None, 'GLIncreaseAcct': None, 'PAReturnAcct': None, 'PurchaseAcct': None, 'PurchaseOffsetAcct': None, 'ShippedGoodsAccount': None, 'StockInflationOffsetAccount': None, 'StockInflationAdjustAccount': None, 'VATInRevenueAccount': None, 'WipVarianceAccount': None, 'CostInflationAccount': None, 'WHIncomingCenvatAccount': None, 'WHOutgoingCenvatAccount': None, 'StockInTransitAccount': None, 'WipOffsetProfitAndLossAccount': None, 'InventoryOffsetProfitAndLossAccount': None, 'DefaultBin': None, 'DefaultBinEnforced': 'tNO', 'PurchaseBalanceAccount': None, 'ItemCode': 'ACC-0000001', 'ItemCycleCounts': []}, {'MinimalStock': 0.0, 'MaximalStock': 0.0, 'MinimalOrder': 0.0, 'StandardAveragePrice': 0.0, 'Locked': 'tNO', 'InventoryAccount': None, 'CostAccount': None, 'TransferAccount': None, 'RevenuesAccount': None, 'VarienceAccount': None, 'DecreasingAccount': None, 'IncreasingAccount': None, 'ReturningAccount': None, 'ExpensesAccount': None, 'EURevenuesAccount': None, 'EUExpensesAccount': None, 'ForeignRevenueAcc': None, 'ForeignExpensAcc': None, 'ExemptIncomeAcc': None, 'PriceDifferenceAcc': None, 'WarehouseCode': 'PHO', 'InStock': 0.0, 'Committed': 0.0, 'Ordered': 0.0, 'CountedQuantity': 0.0, 'WasCounted': 'tNO', 'UserSignature': 50, 'Counted': 0.0, 'ExpenseClearingAct': None, 'PurchaseCreditAcc': None, 'EUPurchaseCreditAcc': None, 'ForeignPurchaseCreditAcc': None, 'SalesCreditAcc': None, 'SalesCreditEUAcc': None, 'ExemptedCredits': None, 'SalesCreditForeignAcc': None, 'ExpenseOffsettingAccount': None, 'WipAccount': None, 'ExchangeRateDifferencesAcct': None, 'GoodsClearingAcct': None, 'NegativeInventoryAdjustmentAccount': None, 'CostInflationOffsetAccount': None, 'GLDecreaseAcct': None, 'GLIncreaseAcct': None, 'PAReturnAcct': None, 'PurchaseAcct': None, 'PurchaseOffsetAcct': None, 'ShippedGoodsAccount': None, 'StockInflationOffsetAccount': None, 'StockInflationAdjustAccount': None, 'VATInRevenueAccount': None, 'WipVarianceAccount': None, 'CostInflationAccount': None, 'WHIncomingCenvatAccount': None, 'WHOutgoingCenvatAccount': None, 'StockInTransitAccount': None, 'WipOffsetProfitAndLossAccount': None, 'InventoryOffsetProfitAndLossAccount': None, 'DefaultBin': None, 'DefaultBinEnforced': 'tNO', 'PurchaseBalanceAccount': None, 'ItemCode': 'ACC-0000001', 'ItemCycleCounts': []}, {'MinimalStock': 0.0, 'MaximalStock': 0.0, 'MinimalOrder': 0.0, 'StandardAveragePrice': 0.0, 'Locked': 'tNO', 'InventoryAccount': None, 'CostAccount': None, 'TransferAccount': None, 'RevenuesAccount': None, 'VarienceAccount': None, 'DecreasingAccount': None, 'IncreasingAccount': None, 'ReturningAccount': None, 'ExpensesAccount': None, 'EURevenuesAccount': None, 'EUExpensesAccount': None, 'ForeignRevenueAcc': None, 'ForeignExpensAcc': None, 'ExemptIncomeAcc': None, 'PriceDifferenceAcc': None, 'WarehouseCode': 'PHO-EX', 'InStock': 0.0, 'Committed': 0.0, 'Ordered': 0.0, 'CountedQuantity': 0.0, 'WasCounted': 'tNO', 'UserSignature': 1, 'Counted': 0.0, 'ExpenseClearingAct': None, 'PurchaseCreditAcc': None, 'EUPurchaseCreditAcc': None, 'ForeignPurchaseCreditAcc': None, 'SalesCreditAcc': None, 'SalesCreditEUAcc': None, 'ExemptedCredits': None, 'SalesCreditForeignAcc': None, 'ExpenseOffsettingAccount': None, 'WipAccount': None, 'ExchangeRateDifferencesAcct': None, 'GoodsClearingAcct': None, 'NegativeInventoryAdjustmentAccount': None, 'CostInflationOffsetAccount': None, 'GLDecreaseAcct': None, 'GLIncreaseAcct': None, 'PAReturnAcct': None, 'PurchaseAcct': None, 'PurchaseOffsetAcct': None, 'ShippedGoodsAccount': None, 'StockInflationOffsetAccount': None, 'StockInflationAdjustAccount': None, 'VATInRevenueAccount': None, 'WipVarianceAccount': None, 'CostInflationAccount': None, 'WHIncomingCenvatAccount': None, 'WHOutgoingCenvatAccount': None, 'StockInTransitAccount': None, 'WipOffsetProfitAndLossAccount': None, 'InventoryOffsetProfitAndLossAccount': None, 'DefaultBin': None, 'DefaultBinEnforced': 'tNO', 'PurchaseBalanceAccount': None, 'ItemCode': 'ACC-0000001', 'ItemCycleCounts': []}, {'MinimalStock': 0.0, 'MaximalStock': 0.0, 'MinimalOrder': 0.0, 'StandardAveragePrice': 0.0, 'Locked': 'tNO', 'InventoryAccount': None, 'CostAccount': None, 'TransferAccount': None, 'RevenuesAccount': None, 'VarienceAccount': None, 'DecreasingAccount': None, 'IncreasingAccount': None, 'ReturningAccount': None, 'ExpensesAccount': None, 'EURevenuesAccount': None, 'EUExpensesAccount': None, 'ForeignRevenueAcc': None, 'ForeignExpensAcc': None, 'ExemptIncomeAcc': None, 'PriceDifferenceAcc': None, 'WarehouseCode': 'PHO-IN', 'InStock': 0.0, 'Committed': 0.0, 'Ordered': 0.0, 'CountedQuantity': 0.0, 'WasCounted': 'tNO', 'UserSignature': 1, 'Counted': 0.0, 'ExpenseClearingAct': None, 'PurchaseCreditAcc': None, 'EUPurchaseCreditAcc': None, 'ForeignPurchaseCreditAcc': None, 'SalesCreditAcc': None, 'SalesCreditEUAcc': None, 'ExemptedCredits': None, 'SalesCreditForeignAcc': None, 'ExpenseOffsettingAccount': None, 'WipAccount': None, 'ExchangeRateDifferencesAcct': None, 'GoodsClearingAcct': None, 'NegativeInventoryAdjustmentAccount': None, 'CostInflationOffsetAccount': None, 'GLDecreaseAcct': None, 'GLIncreaseAcct': None, 'PAReturnAcct': None, 'PurchaseAcct': None, 'PurchaseOffsetAcct': None, 'ShippedGoodsAccount': None, 'StockInflationOffsetAccount': None, 'StockInflationAdjustAccount': None, 'VATInRevenueAccount': None, 'WipVarianceAccount': None, 'CostInflationAccount': None, 'WHIncomingCenvatAccount': None, 'WHOutgoingCenvatAccount': None, 'StockInTransitAccount': None, 'WipOffsetProfitAndLossAccount': None, 'InventoryOffsetProfitAndLossAccount': None, 'DefaultBin': None, 'DefaultBinEnforced': 'tNO', 'PurchaseBalanceAccount': None, 'ItemCode': 'ACC-0000001', 'ItemCycleCounts': []}, {'MinimalStock': 0.0, 'MaximalStock': 0.0, 'MinimalOrder': 0.0, 'StandardAveragePrice': 0.0, 'Locked': 'tNO', 'InventoryAccount': None, 'CostAccount': None, 'TransferAccount': None, 'RevenuesAccount': None, 'VarienceAccount': None, 'DecreasingAccount': None, 'IncreasingAccount': None, 'ReturningAccount': None, 'ExpensesAccount': None, 'EURevenuesAccount': None, 'EUExpensesAccount': None, 'ForeignRevenueAcc': None, 'ForeignExpensAcc': None, 'ExemptIncomeAcc': None, 'PriceDifferenceAcc': None, 'WarehouseCode': 'RTW', 'InStock': 0.0, 'Committed': 0.0, 'Ordered': 0.0, 'CountedQuantity': 0.0, 'WasCounted': 'tNO', 'UserSignature': 50, 'Counted': 0.0, 'ExpenseClearingAct': None, 'PurchaseCreditAcc': None, 'EUPurchaseCreditAcc': None, 'ForeignPurchaseCreditAcc': None, 'SalesCreditAcc': None, 'SalesCreditEUAcc': None, 'ExemptedCredits': None, 'SalesCreditForeignAcc': None, 'ExpenseOffsettingAccount': None, 'WipAccount': None, 'ExchangeRateDifferencesAcct': None, 'GoodsClearingAcct': None, 'NegativeInventoryAdjustmentAccount': None, 'CostInflationOffsetAccount': None, 'GLDecreaseAcct': None, 'GLIncreaseAcct': None, 'PAReturnAcct': None, 'PurchaseAcct': None, 'PurchaseOffsetAcct': None, 'ShippedGoodsAccount': None, 'StockInflationOffsetAccount': None, 'StockInflationAdjustAccount': None, 'VATInRevenueAccount': None, 'WipVarianceAccount': None, 'CostInflationAccount': None, 'WHIncomingCenvatAccount': None, 'WHOutgoingCenvatAccount': None, 'StockInTransitAccount': None, 'WipOffsetProfitAndLossAccount': None, 'InventoryOffsetProfitAndLossAccount': None, 'DefaultBin': None, 'DefaultBinEnforced': 'tNO', 'PurchaseBalanceAccount': None, 'ItemCode': 'ACC-0000001', 'ItemCycleCounts': []}, {'MinimalStock': 0.0, 'MaximalStock': 0.0, 'MinimalOrder': 0.0, 'StandardAveragePrice': 0.0, 'Locked': 'tNO', 'InventoryAccount': None, 'CostAccount': None, 'TransferAccount': None, 'RevenuesAccount': None, 'VarienceAccount': None, 'DecreasingAccount': None, 'IncreasingAccount': None, 'ReturningAccount': None, 'ExpensesAccount': None, 'EURevenuesAccount': None, 'EUExpensesAccount': None, 'ForeignRevenueAcc': None, 'ForeignExpensAcc': None, 'ExemptIncomeAcc': None, 'PriceDifferenceAcc': None, 'WarehouseCode': 'RTWH', 'InStock': 0.0, 'Committed': 0.0, 'Ordered': 0.0, 'CountedQuantity': 0.0, 'WasCounted': 'tNO', 'UserSignature': 1, 'Counted': 0.0, 'ExpenseClearingAct': None, 'PurchaseCreditAcc': None, 'EUPurchaseCreditAcc': None, 'ForeignPurchaseCreditAcc': None, 'SalesCreditAcc': None, 'SalesCreditEUAcc': None, 'ExemptedCredits': None, 'SalesCreditForeignAcc': None, 'ExpenseOffsettingAccount': None, 'WipAccount': None, 'ExchangeRateDifferencesAcct': None, 'GoodsClearingAcct': None, 'NegativeInventoryAdjustmentAccount': None, 'CostInflationOffsetAccount': None, 'GLDecreaseAcct': None, 'GLIncreaseAcct': None, 'PAReturnAcct': None, 'PurchaseAcct': None, 'PurchaseOffsetAcct': None, 'ShippedGoodsAccount': None, 'StockInflationOffsetAccount': None, 'StockInflationAdjustAccount': None, 'VATInRevenueAccount': None, 'WipVarianceAccount': None, 'CostInflationAccount': None, 'WHIncomingCenvatAccount': None, 'WHOutgoingCenvatAccount': None, 'StockInTransitAccount': None, 'WipOffsetProfitAndLossAccount': None, 'InventoryOffsetProfitAndLossAccount': None, 'DefaultBin': None, 'DefaultBinEnforced': 'tNO', 'PurchaseBalanceAccount': None, 'ItemCode': 'ACC-0000001', 'ItemCycleCounts': []}, {'MinimalStock': 0.0, 'MaximalStock': 0.0, 'MinimalOrder': 0.0, 'StandardAveragePrice': 0.0, 'Locked': 'tNO', 'InventoryAccount': None, 'CostAccount': None, 'TransferAccount': None, 'RevenuesAccount': None, 'VarienceAccount': None, 'DecreasingAccount': None, 'IncreasingAccount': None, 'ReturningAccount': None, 'ExpensesAccount': None, 'EURevenuesAccount': None, 'EUExpensesAccount': None, 'ForeignRevenueAcc': None, 'ForeignExpensAcc': None, 'ExemptIncomeAcc': None, 'PriceDifferenceAcc': None, 'WarehouseCode': 'SW', 'InStock': 0.0, 'Committed': 0.0, 'Ordered': 0.0, 'CountedQuantity': 0.0, 'WasCounted': 'tNO', 'UserSignature': 50, 'Counted': 0.0, 'ExpenseClearingAct': None, 'PurchaseCreditAcc': None, 'EUPurchaseCreditAcc': None, 'ForeignPurchaseCreditAcc': None, 'SalesCreditAcc': None, 'SalesCreditEUAcc': None, 'ExemptedCredits': None, 'SalesCreditForeignAcc': None, 'ExpenseOffsettingAccount': None, 'WipAccount': None, 'ExchangeRateDifferencesAcct': None, 'GoodsClearingAcct': None, 'NegativeInventoryAdjustmentAccount': None, 'CostInflationOffsetAccount': None, 'GLDecreaseAcct': None, 'GLIncreaseAcct': None, 'PAReturnAcct': None, 'PurchaseAcct': None, 'PurchaseOffsetAcct': None, 'ShippedGoodsAccount': None, 'StockInflationOffsetAccount': None, 'StockInflationAdjustAccount': None, 'VATInRevenueAccount': None, 'WipVarianceAccount': None, 'CostInflationAccount': None, 'WHIncomingCenvatAccount': None, 'WHOutgoingCenvatAccount': None, 'StockInTransitAccount': None, 'WipOffsetProfitAndLossAccount': None, 'InventoryOffsetProfitAndLossAccount': None, 'DefaultBin': None, 'DefaultBinEnforced': 'tNO', 'PurchaseBalanceAccount': None, 'ItemCode': 'ACC-0000001', 'ItemCycleCounts': []}, {'MinimalStock': 0.0, 'MaximalStock': 0.0, 'MinimalOrder': 0.0, 'StandardAveragePrice': 0.0, 'Locked': 'tNO', 'InventoryAccount': None, 'CostAccount': None, 'TransferAccount': None, 'RevenuesAccount': None, 'VarienceAccount': None, 'DecreasingAccount': None, 'IncreasingAccount': None, 'ReturningAccount': None, 'ExpensesAccount': None, 'EURevenuesAccount': None, 'EUExpensesAccount': None, 'ForeignRevenueAcc': None, 'ForeignExpensAcc': None, 'ExemptIncomeAcc': None, 'PriceDifferenceAcc': None, 'WarehouseCode': 'WLS', 'InStock': 0.0, 'Committed': 0.0, 'Ordered': 0.0, 'CountedQuantity': 0.0, 'WasCounted': 'tNO', 'UserSignature': 50, 'Counted': 0.0, 'ExpenseClearingAct': None, 'PurchaseCreditAcc': None, 'EUPurchaseCreditAcc': None, 'ForeignPurchaseCreditAcc': None, 'SalesCreditAcc': None, 'SalesCreditEUAcc': None, 'ExemptedCredits': None, 'SalesCreditForeignAcc': None, 'ExpenseOffsettingAccount': None, 'WipAccount': None, 'ExchangeRateDifferencesAcct': None, 'GoodsClearingAcct': None, 'NegativeInventoryAdjustmentAccount': None, 'CostInflationOffsetAccount': None, 'GLDecreaseAcct': None, 'GLIncreaseAcct': None, 'PAReturnAcct': None, 'PurchaseAcct': None, 'PurchaseOffsetAcct': None, 'ShippedGoodsAccount': None, 'StockInflationOffsetAccount': None, 'StockInflationAdjustAccount': None, 'VATInRevenueAccount': None, 'WipVarianceAccount': None, 'CostInflationAccount': None, 'WHIncomingCenvatAccount': None, 'WHOutgoingCenvatAccount': None, 'StockInTransitAccount': None, 'WipOffsetProfitAndLossAccount': None, 'InventoryOffsetProfitAndLossAccount': None, 'DefaultBin': None, 'DefaultBinEnforced': 'tNO', 'PurchaseBalanceAccount': None, 'ItemCode': 'ACC-0000001', 'ItemCycleCounts': []}, {'MinimalStock': 0.0, 'MaximalStock': 0.0, 'MinimalOrder': 0.0, 'StandardAveragePrice': 0.0, 'Locked': 'tNO', 'InventoryAccount': None, 'CostAccount': None, 'TransferAccount': None, 'RevenuesAccount': None, 'VarienceAccount': None, 'DecreasingAccount': None, 'IncreasingAccount': None, 'ReturningAccount': None, 'ExpensesAccount': None, 'EURevenuesAccount': None, 'EUExpensesAccount': None, 'ForeignRevenueAcc': None, 'ForeignExpensAcc': None, 'ExemptIncomeAcc': None, 'PriceDifferenceAcc': None, 'WarehouseCode': 'WW', 'InStock': 0.0, 'Committed': 0.0, 'Ordered': 0.0, 'CountedQuantity': 0.0, 'WasCounted': 'tNO', 'UserSignature': 50, 'Counted': 0.0, 'ExpenseClearingAct': None, 'PurchaseCreditAcc': None, 'EUPurchaseCreditAcc': None, 'ForeignPurchaseCreditAcc': None, 'SalesCreditAcc': None, 'SalesCreditEUAcc': None, 'ExemptedCredits': None, 'SalesCreditForeignAcc': None, 'ExpenseOffsettingAccount': None, 'WipAccount': None, 'ExchangeRateDifferencesAcct': None, 'GoodsClearingAcct': None, 'NegativeInventoryAdjustmentAccount': None, 'CostInflationOffsetAccount': None, 'GLDecreaseAcct': None, 'GLIncreaseAcct': None, 'PAReturnAcct': None, 'PurchaseAcct': None, 'PurchaseOffsetAcct': None, 'ShippedGoodsAccount': None, 'StockInflationOffsetAccount': None, 'StockInflationAdjustAccount': None, 'VATInRevenueAccount': None, 'WipVarianceAccount': None, 'CostInflationAccount': None, 'WHIncomingCenvatAccount': None, 'WHOutgoingCenvatAccount': None, 'StockInTransitAccount': None, 'WipOffsetProfitAndLossAccount': None, 'InventoryOffsetProfitAndLossAccount': None, 'DefaultBin': None, 'DefaultBinEnforced': 'tNO', 'PurchaseBalanceAccount': None, 'ItemCode': 'ACC-0000001', 'ItemCycleCounts': []}, {'MinimalStock': 0.0, 'MaximalStock': 0.0, 'MinimalOrder': 0.0, 'StandardAveragePrice': 0.0, 'Locked': 'tNO', 'InventoryAccount': None, 'CostAccount': None, 'TransferAccount': None, 'RevenuesAccount': None, 'VarienceAccount': None, 'DecreasingAccount': None, 'IncreasingAccount': None, 'ReturningAccount': None, 'ExpensesAccount': None, 'EURevenuesAccount': None, 'EUExpensesAccount': None, 'ForeignRevenueAcc': None, 'ForeignExpensAcc': None, 'ExemptIncomeAcc': None, 'PriceDifferenceAcc': None, 'WarehouseCode': 'WW-CON', 'InStock': 0.0, 'Committed': 0.0, 'Ordered': 0.0, 'CountedQuantity': 0.0, 'WasCounted': 'tNO', 'UserSignature': 50, 'Counted': 0.0, 'ExpenseClearingAct': None, 'PurchaseCreditAcc': None, 'EUPurchaseCreditAcc': None, 'ForeignPurchaseCreditAcc': None, 'SalesCreditAcc': None, 'SalesCreditEUAcc': None, 'ExemptedCredits': None, 'SalesCreditForeignAcc': None, 'ExpenseOffsettingAccount': None, 'WipAccount': None, 'ExchangeRateDifferencesAcct': None, 'GoodsClearingAcct': None, 'NegativeInventoryAdjustmentAccount': None, 'CostInflationOffsetAccount': None, 'GLDecreaseAcct': None, 'GLIncreaseAcct': None, 'PAReturnAcct': None, 'PurchaseAcct': None, 'PurchaseOffsetAcct': None, 'ShippedGoodsAccount': None, 'StockInflationOffsetAccount': None, 'StockInflationAdjustAccount': None, 'VATInRevenueAccount': None, 'WipVarianceAccount': None, 'CostInflationAccount': None, 'WHIncomingCenvatAccount': None, 'WHOutgoingCenvatAccount': None, 'StockInTransitAccount': None, 'WipOffsetProfitAndLossAccount': None, 'InventoryOffsetProfitAndLossAccount': None, 'DefaultBin': None, 'DefaultBinEnforced': 'tNO', 'PurchaseBalanceAccount': None, 'ItemCode': 'ACC-0000001', 'ItemCycleCounts': []}, {'MinimalStock': 0.0, 'MaximalStock': 0.0, 'MinimalOrder': 0.0, 'StandardAveragePrice': 0.0, 'Locked': 'tNO', 'InventoryAccount': None, 'CostAccount': None, 'TransferAccount': None, 'RevenuesAccount': None, 'VarienceAccount': None, 'DecreasingAccount': None, 'IncreasingAccount': None, 'ReturningAccount': None, 'ExpensesAccount': None, 'EURevenuesAccount': None, 'EUExpensesAccount': None, 'ForeignRevenueAcc': None, 'ForeignExpensAcc': None, 'ExemptIncomeAcc': None, 'PriceDifferenceAcc': None, 'WarehouseCode': 'WW-DAM', 'InStock': 0.0, 'Committed': 0.0, 'Ordered': 0.0, 'CountedQuantity': 0.0, 'WasCounted': 'tNO', 'UserSignature': 50, 'Counted': 0.0, 'ExpenseClearingAct': None, 'PurchaseCreditAcc': None, 'EUPurchaseCreditAcc': None, 'ForeignPurchaseCreditAcc': None, 'SalesCreditAcc': None, 'SalesCreditEUAcc': None, 'ExemptedCredits': None, 'SalesCreditForeignAcc': None, 'ExpenseOffsettingAccount': None, 'WipAccount': None, 'ExchangeRateDifferencesAcct': None, 'GoodsClearingAcct': None, 'NegativeInventoryAdjustmentAccount': None, 'CostInflationOffsetAccount': None, 'GLDecreaseAcct': None, 'GLIncreaseAcct': None, 'PAReturnAcct': None, 'PurchaseAcct': None, 'PurchaseOffsetAcct': None, 'ShippedGoodsAccount': None, 'StockInflationOffsetAccount': None, 'StockInflationAdjustAccount': None, 'VATInRevenueAccount': None, 'WipVarianceAccount': None, 'CostInflationAccount': None, 'WHIncomingCenvatAccount': None, 'WHOutgoingCenvatAccount': None, 'StockInTransitAccount': None, 'WipOffsetProfitAndLossAccount': None, 'InventoryOffsetProfitAndLossAccount': None, 'DefaultBin': None, 'DefaultBinEnforced': 'tNO', 'PurchaseBalanceAccount': None, 'ItemCode': 'ACC-0000001', 'ItemCycleCounts': []}, {'MinimalStock': 0.0, 'MaximalStock': 0.0, 'MinimalOrder': 0.0, 'StandardAveragePrice': 0.0, 'Locked': 'tNO', 'InventoryAccount': None, 'CostAccount': None, 'TransferAccount': None, 'RevenuesAccount': None, 'VarienceAccount': None, 'DecreasingAccount': None, 'IncreasingAccount': None, 'ReturningAccount': None, 'ExpensesAccount': None, 'EURevenuesAccount': None, 'EUExpensesAccount': None, 'ForeignRevenueAcc': None, 'ForeignExpensAcc': None, 'ExemptIncomeAcc': None, 'PriceDifferenceAcc': None, 'WarehouseCode': 'WW-REP', 'InStock': 0.0, 'Committed': 0.0, 'Ordered': 0.0, 'CountedQuantity': 0.0, 'WasCounted': 'tNO', 'UserSignature': 50, 'Counted': 0.0, 'ExpenseClearingAct': None, 'PurchaseCreditAcc': None, 'EUPurchaseCreditAcc': None, 'ForeignPurchaseCreditAcc': None, 'SalesCreditAcc': None, 'SalesCreditEUAcc': None, 'ExemptedCredits': None, 'SalesCreditForeignAcc': None, 'ExpenseOffsettingAccount': None, 'WipAccount': None, 'ExchangeRateDifferencesAcct': None, 'GoodsClearingAcct': None, 'NegativeInventoryAdjustmentAccount': None, 'CostInflationOffsetAccount': None, 'GLDecreaseAcct': None, 'GLIncreaseAcct': None, 'PAReturnAcct': None, 'PurchaseAcct': None, 'PurchaseOffsetAcct': None, 'ShippedGoodsAccount': None, 'StockInflationOffsetAccount': None, 'StockInflationAdjustAccount': None, 'VATInRevenueAccount': None, 'WipVarianceAccount': None, 'CostInflationAccount': None, 'WHIncomingCenvatAccount': None, 'WHOutgoingCenvatAccount': None, 'StockInTransitAccount': None, 'WipOffsetProfitAndLossAccount': None, 'InventoryOffsetProfitAndLossAccount': None, 'DefaultBin': None, 'DefaultBinEnforced': 'tNO', 'PurchaseBalanceAccount': None, 'ItemCode': 'ACC-0000001', 'ItemCycleCounts': []}, {'MinimalStock': 0.0, 'MaximalStock': 0.0, 'MinimalOrder': 0.0, 'StandardAveragePrice': 0.0, 'Locked': 'tNO', 'InventoryAccount': None, 'CostAccount': None, 'TransferAccount': None, 'RevenuesAccount': None, 'VarienceAccount': None, 'DecreasingAccount': None, 'IncreasingAccount': None, 'ReturningAccount': None, 'ExpensesAccount': None, 'EURevenuesAccount': None, 'EUExpensesAccount': None, 'ForeignRevenueAcc': None, 'ForeignExpensAcc': None, 'ExemptIncomeAcc': None, 'PriceDifferenceAcc': None, 'WarehouseCode': 'WW-SAM', 'InStock': 0.0, 'Committed': 0.0, 'Ordered': 0.0, 'CountedQuantity': 0.0, 'WasCounted': 'tNO', 'UserSignature': 50, 'Counted': 0.0, 'ExpenseClearingAct': None, 'PurchaseCreditAcc': None, 'EUPurchaseCreditAcc': None, 'ForeignPurchaseCreditAcc': None, 'SalesCreditAcc': None, 'SalesCreditEUAcc': None, 'ExemptedCredits': None, 'SalesCreditForeignAcc': None, 'ExpenseOffsettingAccount': None, 'WipAccount': None, 'ExchangeRateDifferencesAcct': None, 'GoodsClearingAcct': None, 'NegativeInventoryAdjustmentAccount': None, 'CostInflationOffsetAccount': None, 'GLDecreaseAcct': None, 'GLIncreaseAcct': None, 'PAReturnAcct': None, 'PurchaseAcct': None, 'PurchaseOffsetAcct': None, 'ShippedGoodsAccount': None, 'StockInflationOffsetAccount': None, 'StockInflationAdjustAccount': None, 'VATInRevenueAccount': None, 'WipVarianceAccount': None, 'CostInflationAccount': None, 'WHIncomingCenvatAccount': None, 'WHOutgoingCenvatAccount': None, 'StockInTransitAccount': None, 'WipOffsetProfitAndLossAccount': None, 'InventoryOffsetProfitAndLossAccount': None, 'DefaultBin': None, 'DefaultBinEnforced': 'tNO', 'PurchaseBalanceAccount': None, 'ItemCode': 'ACC-0000001', 'ItemCycleCounts': []}, {'MinimalStock': 0.0, 'MaximalStock': 0.0, 'MinimalOrder': 0.0, 'StandardAveragePrice': 0.0, 'Locked': 'tNO', 'InventoryAccount': None, 'CostAccount': None, 'TransferAccount': None, 'RevenuesAccount': None, 'VarienceAccount': None, 'DecreasingAccount': None, 'IncreasingAccount': None, 'ReturningAccount': None, 'ExpensesAccount': None, 'EURevenuesAccount': None, 'EUExpensesAccount': None, 'ForeignRevenueAcc': None, 'ForeignExpensAcc': None, 'ExemptIncomeAcc': None, 'PriceDifferenceAcc': None, 'WarehouseCode': 'WW-WIP', 'InStock': 0.0, 'Committed': 0.0, 'Ordered': 0.0, 'CountedQuantity': 0.0, 'WasCounted': 'tNO', 'UserSignature': 50, 'Counted': 0.0, 'ExpenseClearingAct': None, 'PurchaseCreditAcc': None, 'EUPurchaseCreditAcc': None, 'ForeignPurchaseCreditAcc': None, 'SalesCreditAcc': None, 'SalesCreditEUAcc': None, 'ExemptedCredits': None, 'SalesCreditForeignAcc': None, 'ExpenseOffsettingAccount': None, 'WipAccount': None, 'ExchangeRateDifferencesAcct': None, 'GoodsClearingAcct': None, 'NegativeInventoryAdjustmentAccount': None, 'CostInflationOffsetAccount': None, 'GLDecreaseAcct': None, 'GLIncreaseAcct': None, 'PAReturnAcct': None, 'PurchaseAcct': None, 'PurchaseOffsetAcct': None, 'ShippedGoodsAccount': None, 'StockInflationOffsetAccount': None, 'StockInflationAdjustAccount': None, 'VATInRevenueAccount': None, 'WipVarianceAccount': None, 'CostInflationAccount': None, 'WHIncomingCenvatAccount': None, 'WHOutgoingCenvatAccount': None, 'StockInTransitAccount': None, 'WipOffsetProfitAndLossAccount': None, 'InventoryOffsetProfitAndLossAccount': None, 'DefaultBin': None, 'DefaultBinEnforced': 'tNO', 'PurchaseBalanceAccount': None, 'ItemCode': 'ACC-0000001', 'ItemCycleCounts': []}, {'MinimalStock': 0.0, 'MaximalStock': 0.0, 'MinimalOrder': 0.0, 'StandardAveragePrice': 0.0, 'Locked': 'tNO', 'InventoryAccount': None, 'CostAccount': None, 'TransferAccount': None, 'RevenuesAccount': None, 'VarienceAccount': None, 'DecreasingAccount': None, 'IncreasingAccount': None, 'ReturningAccount': None, 'ExpensesAccount': None, 'EURevenuesAccount': None, 'EUExpensesAccount': None, 'ForeignRevenueAcc': None, 'ForeignExpensAcc': None, 'ExemptIncomeAcc': None, 'PriceDifferenceAcc': None, 'WarehouseCode': 'ZW', 'InStock': 0.0, 'Committed': 0.0, 'Ordered': 0.0, 'CountedQuantity': 0.0, 'WasCounted': 'tNO', 'UserSignature': 50, 'Counted': 0.0, 'ExpenseClearingAct': None, 'PurchaseCreditAcc': None, 'EUPurchaseCreditAcc': None, 'ForeignPurchaseCreditAcc': None, 'SalesCreditAcc': None, 'SalesCreditEUAcc': None, 'ExemptedCredits': None, 'SalesCreditForeignAcc': None, 'ExpenseOffsettingAccount': None, 'WipAccount': None, 'ExchangeRateDifferencesAcct': None, 'GoodsClearingAcct': None, 'NegativeInventoryAdjustmentAccount': None, 'CostInflationOffsetAccount': None, 'GLDecreaseAcct': None, 'GLIncreaseAcct': None, 'PAReturnAcct': None, 'PurchaseAcct': None, 'PurchaseOffsetAcct': None, 'ShippedGoodsAccount': None, 'StockInflationOffsetAccount': None, 'StockInflationAdjustAccount': None, 'VATInRevenueAccount': None, 'WipVarianceAccount': None, 'CostInflationAccount': None, 'WHIncomingCenvatAccount': None, 'WHOutgoingCenvatAccount': None, 'StockInTransitAccount': None, 'WipOffsetProfitAndLossAccount': None, 'InventoryOffsetProfitAndLossAccount': None, 'DefaultBin': None, 'DefaultBinEnforced': 'tNO', 'PurchaseBalanceAccount': None, 'ItemCode': 'ACC-0000001', 'ItemCycleCounts': []}], 'ItemPreferredVendors': [], 'ItemLocalizationInfos': [], 'ItemProjects': [], 'ItemDistributionRules': [], 'ItemAttributeGroups': [], 'ItemDepreciationParameters': [], 'ItemPeriodControls': [], 'ItemUnitOfMeasurementCollection': [{'UoMType': 'iutInventory', 'UoMEntry': 1, 'DefaultBarcode': None, 'DefaultPackage': None, 'Length1': 0.0, 'Length1Unit': None, 'Length2': 0.0, 'Length2Unit': None, 'Width1': 0.0, 'Width1Unit': None, 'Width2': 0.0, 'Width2Unit': None, 'Height1': 0.0, 'Height1Unit': None, 'Height2': 0.0, 'Height2Unit': None, 'Volume': 0.0, 'VolumeUnit': None, 'Weight1': 0.0, 'Weight1Unit': None, 'Weight2': 0.0, 'Weight2Unit': None, 'ItemUoMPackageCollection': []}, {'UoMType': 'iutPurchasing', 'UoMEntry': 1, 'DefaultBarcode': None, 'DefaultPackage': None, 'Length1': 0.0, 'Length1Unit': None, 'Length2': 0.0, 'Length2Unit': None, 'Width1': 0.0, 'Width1Unit': None, 'Width2': 0.0, 'Width2Unit': None, 'Height1': 0.0, 'Height1Unit': None, 'Height2': 0.0, 'Height2Unit': None, 'Volume': 0.0, 'VolumeUnit': 2, 'Weight1': 0.0, 'Weight1Unit': None, 'Weight2': 0.0, 'Weight2Unit': None, 'ItemUoMPackageCollection': []}, {'UoMType': 'iutPurchasing', 'UoMEntry': 8, 'DefaultBarcode': None, 'DefaultPackage': None, 'Length1': 0.0, 'Length1Unit': None, 'Length2': 0.0, 'Length2Unit': None, 'Width1': 0.0, 'Width1Unit': None, 'Width2': 0.0, 'Width2Unit': None, 'Height1': 0.0, 'Height1Unit': None, 'Height2': 0.0, 'Height2Unit': None, 'Volume': 0.0, 'VolumeUnit': 4, 'Weight1': 0.0, 'Weight1Unit': None, 'Weight2': 0.0, 'Weight2Unit': None, 'ItemUoMPackageCollection': []}, {'UoMType': 'iutSales', 'UoMEntry': 1, 'DefaultBarcode': None, 'DefaultPackage': None, 'Length1': 0.0, 'Length1Unit': None, 'Length2': 0.0, 'Length2Unit': None, 'Width1': 0.0, 'Width1Unit': None, 'Width2': 0.0, 'Width2Unit': None, 'Height1': 0.0, 'Height1Unit': None, 'Height2': 0.0, 'Height2Unit': None, 'Volume': 0.0, 'VolumeUnit': 2, 'Weight1': 0.0, 'Weight1Unit': None, 'Weight2': 0.0, 'Weight2Unit': None, 'ItemUoMPackageCollection': []}, {'UoMType': 'iutSales', 'UoMEntry': 8, 'DefaultBarcode': None, 'DefaultPackage': None, 'Length1': 0.0, 'Length1Unit': None, 'Length2': 0.0, 'Length2Unit': None, 'Width1': 0.0, 'Width1Unit': None, 'Width2': 0.0, 'Width2Unit': None, 'Height1': 0.0, 'Height1Unit': None, 'Height2': 0.0, 'Height2Unit': None, 'Volume': 0.0, 'VolumeUnit': 4, 'Weight1': 0.0, 'Weight1Unit': None, 'Weight2': 0.0, 'Weight2Unit': None, 'ItemUoMPackageCollection': []}], 'ItemBarCodeCollection': [], 'ItemIntrastatExtension': {'ItemCode': 'ACC-0000001', 'CommodityCode': None, 'SupplementaryUnit': None, 'FactorOfSupplementaryUnit': 0.0, 'ImportRegionState': 0, 'ExportRegionState': 0, 'ImportNatureOfTransaction': None, 'ExportNatureOfTransaction': None, 'ImportStatisticalProcedure': None, 'ExportStatisticalProcedure': None, 'CountryOfOrigin': None, 'ServiceCode': None, 'Type': 'dDocument_Items', 'ServiceSupplyMethod': 'ssmImmediate', 'ServicePaymentMethod': 'spmOther', 'ImportRegionCountry': 'GB', 'ExportRegionCountry': 'GB', 'UseWeightInCalculation': 'tYES', 'IntrastatRelevant': 'tNO', 'StatisticalCode': None}}, {'ItemCode': 'ACC-0000002', 'ItemName': 'Square With 2 Slits 10*10cm', 'ForeignName': None, 'ItemsGroupCode': 110, 'CustomsGroupCode': -1, 'SalesVATGroup': 'X0', 'BarCode': None, 'VatLiable': 'tYES', 'PurchaseItem': 'tYES', 'SalesItem': 'tNO', 'InventoryItem': 'tYES', 'IncomeAccount': None, 'ExemptIncomeAccount': None, 'ExpanseAccount': None, 'Mainsupplier': None, 'SupplierCatalogNo': None, 'DesiredInventory': 0.0, 'MinInventory': 0.0, 'Picture': None, 'User_Text': None, 'SerialNum': None, 'CommissionPercent': 0.0, 'CommissionSum': 0.0, 'CommissionGroup': 0, 'TreeType': 'iNotATree', 'AssetItem': 'tNO', 'DataExportCode': None, 'Manufacturer': -1, 'QuantityOnStock': 10.0, 'QuantityOrderedFromVendors': 0.0, 'QuantityOrderedByCustomers': 0.0, 'ManageSerialNumbers': 'tNO', 'ManageBatchNumbers': 'tNO', 'Valid': 'tYES', 'ValidFrom': None, 'ValidTo': None, 'ValidRemarks': None, 'Frozen': 'tNO', 'FrozenFrom': None, 'FrozenTo': None, 'FrozenRemarks': None, 'SalesUnit': None, 'SalesItemsPerUnit': 1.0, 'SalesPackagingUnit': None, 'SalesQtyPerPackUnit': 1.0, 'SalesUnitLength': None, 'SalesLengthUnit': None, 'SalesUnitWidth': None, 'SalesWidthUnit': None, 'SalesUnitHeight': None, 'SalesHeightUnit': None, 'SalesUnitVolume': 0.0, 'SalesVolumeUnit': 4, 'SalesUnitWeight': None, 'SalesWeightUnit': None, 'PurchaseUnit': None, 'PurchaseItemsPerUnit': 1.0, 'PurchasePackagingUnit': None, 'PurchaseQtyPerPackUnit': 1.0, 'PurchaseUnitLength': None, 'PurchaseLengthUnit': None, 'PurchaseUnitWidth': None, 'PurchaseWidthUnit': None, 'PurchaseUnitHeight': None, 'PurchaseHeightUnit': None, 'PurchaseUnitVolume': 0.0, 'PurchaseVolumeUnit': 4, 'PurchaseUnitWeight': None, 'PurchaseWeightUnit': None, 'PurchaseVATGroup': 'X1', 'SalesFactor1': 1.0, 'SalesFactor2': 1.0, 'SalesFactor3': 1.0, 'SalesFactor4': 1.0, 'PurchaseFactor1': 1.0, 'PurchaseFactor2': 1.0, 'PurchaseFactor3': 1.0, 'PurchaseFactor4': 1.0, 'MovingAveragePrice': 0.0, 'ForeignRevenuesAccount': None, 'ECRevenuesAccount': None, 'ForeignExpensesAccount': None, 'ECExpensesAccount': None, 'AvgStdPrice': 0.0, 'DefaultWarehouse': None, 'ShipType': None, 'GLMethod': 'glm_ItemClass', 'TaxType': 'tt_Yes', 'MaxInventory': 0.0, 'ManageStockByWarehouse': 'tNO', 'PurchaseHeightUnit1': None, 'PurchaseUnitHeight1': None, 'PurchaseLengthUnit1': None, 'PurchaseUnitLength1': None, 'PurchaseWeightUnit1': None, 'PurchaseUnitWeight1': None, 'PurchaseWidthUnit1': None, 'PurchaseUnitWidth1': None, 'SalesHeightUnit1': None, 'SalesUnitHeight1': None, 'SalesLengthUnit1': None, 'SalesUnitLength1': None, 'SalesWeightUnit1': None, 'SalesUnitWeight1': None, 'SalesWidthUnit1': None, 'SalesUnitWidth1': None, 'ForceSelectionOfSerialNumber': 'tYES', 'ManageSerialNumbersOnReleaseOnly': 'tNO', 'WTLiable': 'tNO', 'CostAccountingMethod': 'bis_MovingAverage', 'SWW': None, 'WarrantyTemplate': '', 'IndirectTax': 'tNO', 'ArTaxCode': None, 'ApTaxCode': None, 'BaseUnitName': None, 'ItemCountryOrg': None, 'IssueMethod': 'im_Backflush', 'SRIAndBatchManageMethod': 'bomm_OnEveryTransaction', 'IsPhantom': 'tNO', 'InventoryUOM': 'Piece', 'PlanningSystem': 'bop_None', 'ProcurementMethod': 'bom_Buy', 'ComponentWarehouse': 'bomcw_BOM', 'OrderIntervals': None, 'OrderMultiple': 0.0, 'LeadTime': None, 'MinOrderQuantity': 0.0, 'ItemType': 'itItems', 'ItemClass': 'itcMaterial', 'OutgoingServiceCode': -1, 'IncomingServiceCode': -1, 'ServiceGroup': -1, 'NCMCode': -1, 'MaterialType': 'mt_FinishedGoods', 'MaterialGroup': -1, 'ProductSource': '', 'Properties1': 'tNO', 'Properties2': 'tNO', 'Properties3': 'tNO', 'Properties4': 'tNO', 'Properties5': 'tNO', 'Properties6': 'tNO', 'Properties7': 'tNO', 'Properties8': 'tNO', 'Properties9': 'tNO', 'Properties10': 'tNO', 'Properties11': 'tNO', 'Properties12': 'tNO', 'Properties13': 'tNO', 'Properties14': 'tNO', 'Properties15': 'tNO', 'Properties16': 'tNO', 'Properties17': 'tNO', 'Properties18': 'tNO', 'Properties19': 'tNO', 'Properties20': 'tNO', 'Properties21': 'tNO', 'Properties22': 'tNO', 'Properties23': 'tNO', 'Properties24': 'tNO', 'Properties25': 'tNO', 'Properties26': 'tNO', 'Properties27': 'tNO', 'Properties28': 'tNO', 'Properties29': 'tNO', 'Properties30': 'tNO', 'Properties31': 'tNO', 'Properties32': 'tNO', 'Properties33': 'tNO', 'Properties34': 'tNO', 'Properties35': 'tNO', 'Properties36': 'tNO', 'Properties37': 'tNO', 'Properties38': 'tNO', 'Properties39': 'tNO', 'Properties40': 'tNO', 'Properties41': 'tNO', 'Properties42': 'tNO', 'Properties43': 'tNO', 'Properties44': 'tNO', 'Properties45': 'tNO', 'Properties46': 'tNO', 'Properties47': 'tNO', 'Properties48': 'tNO', 'Properties49': 'tNO', 'Properties50': 'tNO', 'Properties51': 'tNO', 'Properties52': 'tNO', 'Properties53': 'tNO', 'Properties54': 'tNO', 'Properties55': 'tNO', 'Properties56': 'tNO', 'Properties57': 'tNO', 'Properties58': 'tNO', 'Properties59': 'tNO', 'Properties60': 'tNO', 'Properties61': 'tNO', 'Properties62': 'tNO', 'Properties63': 'tNO', 'Properties64': 'tNO', 'AutoCreateSerialNumbersOnRelease': 'tNO', 'DNFEntry': -1, 'GTSItemSpec': None, 'GTSItemTaxCategory': None, 'FuelID': None, 'BeverageTableCode': '', 'BeverageGroupCode': '', 'BeverageCommercialBrandCode': None, 'Series': 119, 'ToleranceDays': None, 'TypeOfAdvancedRules': 'toarGeneral', 'IssuePrimarilyBy': 'ipbBinLocations', 'NoDiscounts': 'tNO', 'AssetClass': '', 'AssetGroup': '', 'InventoryNumber': '', 'Technician': None, 'Employee': None, 'Location': None, 'AssetStatus': 'New', 'CapitalizationDate': None, 'StatisticalAsset': 'tNO', 'Cession': 'tNO', 'DeactivateAfterUsefulLife': 'tNO', 'ManageByQuantity': 'tNO', 'UoMGroupEntry': 1, 'InventoryUoMEntry': 1, 'DefaultSalesUoMEntry': None, 'DefaultPurchasingUoMEntry': None, 'DepreciationGroup': None, 'AssetSerialNumber': '', 'InventoryWeight': None, 'InventoryWeightUnit': None, 'InventoryWeight1': None, 'InventoryWeightUnit1': None, 'DefaultCountingUnit': 'Piece', 'CountingItemsPerUnit': 1.0, 'DefaultCountingUoMEntry': 1, 'Excisable': 'tNO', 'ChapterID': -1, 'ScsCode': None, 'SpProdType': None, 'ProdStdCost': 0.0, 'InCostRollup': 'tYES', 'VirtualAssetItem': 'tNO', 'EnforceAssetSerialNumbers': 'tNO', 'AttachmentEntry': None, 'LinkedResource': None, 'UpdateDate': '2025-01-27', 'UpdateTime': '11:24:02', 'GSTRelevnt': 'tNO', 'SACEntry': -1, 'GSTTaxCategory': 'gtc_Regular', 'ServiceCategoryEntry': -1, 'CapitalGoodsOnHoldPercent': 0.0, 'CapitalGoodsOnHoldLimit': 0.0, 'AssessableValue': 0.0, 'AssVal4WTR': 0.0, 'SOIExcisable': 'se_NotExcisable', 'TNVED': None, 'ImportedItem': 'tNO', 'PricingUnit': 1, 'CreateDate': '2025-01-26', 'CreateTime': '09:34:00', 'U_MfgH': None, 'U_Collection': None, 'U_OldCode': None, 'U_ItemsCat': None, 'U_NumberofSet': None, 'U_NileCode': None, 'U_TransferProductionLinkExclude': None, 'U_SBO_CodeType': 'GS1', 'U_SBO_EGSCode': None, 'U_ShopifyColor': None, 'U_SalesChannel': None, 'U_ShopifyItemIDLocal': None, 'U_ShopifyItemIDInternational': None, 'U_ParentCommercialName': None, 'ItemPrices': [{'PriceList': 1, 'Price': 0.0, 'Currency': None, 'AdditionalPrice1': 0.0, 'AdditionalCurrency1': None, 'AdditionalPrice2': 0.0, 'AdditionalCurrency2': None, 'BasePriceList': 1, 'Factor': 1.0, 'UoMPrices': []}, {'PriceList': 2, 'Price': 0.0, 'Currency': None, 'AdditionalPrice1': 0.0, 'AdditionalCurrency1': None, 'AdditionalPrice2': 0.0, 'AdditionalCurrency2': None, 'BasePriceList': 1, 'Factor': 0.4, 'UoMPrices': []}, {'PriceList': 3, 'Price': 0.0, 'Currency': None, 'AdditionalPrice1': 0.0, 'AdditionalCurrency1': None, 'AdditionalPrice2': 0.0, 'AdditionalCurrency2': None, 'BasePriceList': 3, 'Factor': 1.0, 'UoMPrices': []}, {'PriceList': 4, 'Price': 0.0, 'Currency': None, 'AdditionalPrice1': 0.0, 'AdditionalCurrency1': None, 'AdditionalPrice2': 0.0, 'AdditionalCurrency2': None, 'BasePriceList': 4, 'Factor': 1.0, 'UoMPrices': []}, {'PriceList': 5, 'Price': 0.0, 'Currency': None, 'AdditionalPrice1': 0.0, 'AdditionalCurrency1': None, 'AdditionalPrice2': 0.0, 'AdditionalCurrency2': None, 'BasePriceList': 5, 'Factor': 1.0, 'UoMPrices': []}, {'PriceList': 6, 'Price': 0.0, 'Currency': None, 'AdditionalPrice1': 0.0, 'AdditionalCurrency1': None, 'AdditionalPrice2': 0.0, 'AdditionalCurrency2': None, 'BasePriceList': 6, 'Factor': 1.0, 'UoMPrices': []}, {'PriceList': 7, 'Price': 0.0, 'Currency': None, 'AdditionalPrice1': 0.0, 'AdditionalCurrency1': None, 'AdditionalPrice2': 0.0, 'AdditionalCurrency2': None, 'BasePriceList': 7, 'Factor': 1.0, 'UoMPrices': []}, {'PriceList': 8, 'Price': 0.0, 'Currency': None, 'AdditionalPrice1': 0.0, 'AdditionalCurrency1': None, 'AdditionalPrice2': 0.0, 'AdditionalCurrency2': None, 'BasePriceList': 8, 'Factor': 1.0, 'UoMPrices': []}, {'PriceList': 9, 'Price': 0.0, 'Currency': None, 'AdditionalPrice1': 0.0, 'AdditionalCurrency1': None, 'AdditionalPrice2': 0.0, 'AdditionalCurrency2': None, 'BasePriceList': 9, 'Factor': 1.0, 'UoMPrices': []}, {'PriceList': 10, 'Price': 0.0, 'Currency': None, 'AdditionalPrice1': 0.0, 'AdditionalCurrency1': None, 'AdditionalPrice2': 0.0, 'AdditionalCurrency2': None, 'BasePriceList': 10, 'Factor': 1.0, 'UoMPrices': []}], 'ItemWarehouseInfoCollection': [{'MinimalStock': 0.0, 'MaximalStock': 0.0, 'MinimalOrder': 0.0, 'StandardAveragePrice': 250.0, 'Locked': 'tNO', 'InventoryAccount': None, 'CostAccount': None, 'TransferAccount': None, 'RevenuesAccount': None, 'VarienceAccount': None, 'DecreasingAccount': None, 'IncreasingAccount': None, 'ReturningAccount': None, 'ExpensesAccount': None, 'EURevenuesAccount': None, 'EUExpensesAccount': None, 'ForeignRevenueAcc': None, 'ForeignExpensAcc': None, 'ExemptIncomeAcc': None, 'PriceDifferenceAcc': None, 'WarehouseCode': '5A', 'InStock': 7.0, 'Committed': 0.0, 'Ordered': 0.0, 'CountedQuantity': 0.0, 'WasCounted': 'tNO', 'UserSignature': 50, 'Counted': 0.0, 'ExpenseClearingAct': None, 'PurchaseCreditAcc': None, 'EUPurchaseCreditAcc': None, 'ForeignPurchaseCreditAcc': None, 'SalesCreditAcc': None, 'SalesCreditEUAcc': None, 'ExemptedCredits': None, 'SalesCreditForeignAcc': None, 'ExpenseOffsettingAccount': None, 'WipAccount': None, 'ExchangeRateDifferencesAcct': None, 'GoodsClearingAcct': None, 'NegativeInventoryAdjustmentAccount': None, 'CostInflationOffsetAccount': None, 'GLDecreaseAcct': None, 'GLIncreaseAcct': None, 'PAReturnAcct': None, 'PurchaseAcct': None, 'PurchaseOffsetAcct': None, 'ShippedGoodsAccount': None, 'StockInflationOffsetAccount': None, 'StockInflationAdjustAccount': None, 'VATInRevenueAccount': None, 'WipVarianceAccount': None, 'CostInflationAccount': None, 'WHIncomingCenvatAccount': None, 'WHOutgoingCenvatAccount': None, 'StockInTransitAccount': None, 'WipOffsetProfitAndLossAccount': None, 'InventoryOffsetProfitAndLossAccount': None, 'DefaultBin': None, 'DefaultBinEnforced': 'tNO', 'PurchaseBalanceAccount': None, 'ItemCode': 'ACC-0000002', 'ItemCycleCounts': []}, {'MinimalStock': 0.0, 'MaximalStock': 0.0, 'MinimalOrder': 0.0, 'StandardAveragePrice': 250.0, 'Locked': 'tNO', 'InventoryAccount': None, 'CostAccount': None, 'TransferAccount': None, 'RevenuesAccount': None, 'VarienceAccount': None, 'DecreasingAccount': None, 'IncreasingAccount': None, 'ReturningAccount': None, 'ExpensesAccount': None, 'EURevenuesAccount': None, 'EUExpensesAccount': None, 'ForeignRevenueAcc': None, 'ForeignExpensAcc': None, 'ExemptIncomeAcc': None, 'PriceDifferenceAcc': None, 'WarehouseCode': 'Arkan', 'InStock': 3.0, 'Committed': 0.0, 'Ordered': 0.0, 'CountedQuantity': 0.0, 'WasCounted': 'tNO', 'UserSignature': 50, 'Counted': 0.0, 'ExpenseClearingAct': None, 'PurchaseCreditAcc': None, 'EUPurchaseCreditAcc': None, 'ForeignPurchaseCreditAcc': None, 'SalesCreditAcc': None, 'SalesCreditEUAcc': None, 'ExemptedCredits': None, 'SalesCreditForeignAcc': None, 'ExpenseOffsettingAccount': None, 'WipAccount': None, 'ExchangeRateDifferencesAcct': None, 'GoodsClearingAcct': None, 'NegativeInventoryAdjustmentAccount': None, 'CostInflationOffsetAccount': None, 'GLDecreaseAcct': None, 'GLIncreaseAcct': None, 'PAReturnAcct': None, 'PurchaseAcct': None, 'PurchaseOffsetAcct': None, 'ShippedGoodsAccount': None, 'StockInflationOffsetAccount': None, 'StockInflationAdjustAccount': None, 'VATInRevenueAccount': None, 'WipVarianceAccount': None, 'CostInflationAccount': None, 'WHIncomingCenvatAccount': None, 'WHOutgoingCenvatAccount': None, 'StockInTransitAccount': None, 'WipOffsetProfitAndLossAccount': None, 'InventoryOffsetProfitAndLossAccount': None, 'DefaultBin': None, 'DefaultBinEnforced': 'tNO', 'PurchaseBalanceAccount': None, 'ItemCode': 'ACC-0000002', 'ItemCycleCounts': []}, {'MinimalStock': 0.0, 'MaximalStock': 0.0, 'MinimalOrder': 0.0, 'StandardAveragePrice': 0.0, 'Locked': 'tNO', 'InventoryAccount': None, 'CostAccount': None, 'TransferAccount': None, 'RevenuesAccount': None, 'VarienceAccount': None, 'DecreasingAccount': None, 'IncreasingAccount': None, 'ReturningAccount': None, 'ExpensesAccount': None, 'EURevenuesAccount': None, 'EUExpensesAccount': None, 'ForeignRevenueAcc': None, 'ForeignExpensAcc': None, 'ExemptIncomeAcc': None, 'PriceDifferenceAcc': None, 'WarehouseCode': 'DIP', 'InStock': 0.0, 'Committed': 0.0, 'Ordered': 0.0, 'CountedQuantity': 0.0, 'WasCounted': 'tNO', 'UserSignature': 50, 'Counted': 0.0, 'ExpenseClearingAct': None, 'PurchaseCreditAcc': None, 'EUPurchaseCreditAcc': None, 'ForeignPurchaseCreditAcc': None, 'SalesCreditAcc': None, 'SalesCreditEUAcc': None, 'ExemptedCredits': None, 'SalesCreditForeignAcc': None, 'ExpenseOffsettingAccount': None, 'WipAccount': None, 'ExchangeRateDifferencesAcct': None, 'GoodsClearingAcct': None, 'NegativeInventoryAdjustmentAccount': None, 'CostInflationOffsetAccount': None, 'GLDecreaseAcct': None, 'GLIncreaseAcct': None, 'PAReturnAcct': None, 'PurchaseAcct': None, 'PurchaseOffsetAcct': None, 'ShippedGoodsAccount': None, 'StockInflationOffsetAccount': None, 'StockInflationAdjustAccount': None, 'VATInRevenueAccount': None, 'WipVarianceAccount': None, 'CostInflationAccount': None, 'WHIncomingCenvatAccount': None, 'WHOutgoingCenvatAccount': None, 'StockInTransitAccount': None, 'WipOffsetProfitAndLossAccount': None, 'InventoryOffsetProfitAndLossAccount': None, 'DefaultBin': None, 'DefaultBinEnforced': 'tNO', 'PurchaseBalanceAccount': None, 'ItemCode': 'ACC-0000002', 'ItemCycleCounts': []}, {'MinimalStock': 0.0, 'MaximalStock': 0.0, 'MinimalOrder': 0.0, 'StandardAveragePrice': 250.0, 'Locked': 'tNO', 'InventoryAccount': None, 'CostAccount': None, 'TransferAccount': None, 'RevenuesAccount': None, 'VarienceAccount': None, 'DecreasingAccount': None, 'IncreasingAccount': None, 'ReturningAccount': None, 'ExpensesAccount': None, 'EURevenuesAccount': None, 'EUExpensesAccount': None, 'ForeignRevenueAcc': None, 'ForeignExpensAcc': None, 'ExemptIncomeAcc': None, 'PriceDifferenceAcc': None, 'WarehouseCode': 'INC', 'InStock': 0.0, 'Committed': 0.0, 'Ordered': 0.0, 'CountedQuantity': 0.0, 'WasCounted': 'tNO', 'UserSignature': 50, 'Counted': 0.0, 'ExpenseClearingAct': None, 'PurchaseCreditAcc': None, 'EUPurchaseCreditAcc': None, 'ForeignPurchaseCreditAcc': None, 'SalesCreditAcc': None, 'SalesCreditEUAcc': None, 'ExemptedCredits': None, 'SalesCreditForeignAcc': None, 'ExpenseOffsettingAccount': None, 'WipAccount': None, 'ExchangeRateDifferencesAcct': None, 'GoodsClearingAcct': None, 'NegativeInventoryAdjustmentAccount': None, 'CostInflationOffsetAccount': None, 'GLDecreaseAcct': None, 'GLIncreaseAcct': None, 'PAReturnAcct': None, 'PurchaseAcct': None, 'PurchaseOffsetAcct': None, 'ShippedGoodsAccount': None, 'StockInflationOffsetAccount': None, 'StockInflationAdjustAccount': None, 'VATInRevenueAccount': None, 'WipVarianceAccount': None, 'CostInflationAccount': None, 'WHIncomingCenvatAccount': None, 'WHOutgoingCenvatAccount': None, 'StockInTransitAccount': None, 'WipOffsetProfitAndLossAccount': None, 'InventoryOffsetProfitAndLossAccount': None, 'DefaultBin': None, 'DefaultBinEnforced': 'tNO', 'PurchaseBalanceAccount': None, 'ItemCode': 'ACC-0000002', 'ItemCycleCounts': []}, {'MinimalStock': 0.0, 'MaximalStock': 0.0, 'MinimalOrder': 0.0, 'StandardAveragePrice': 0.0, 'Locked': 'tNO', 'InventoryAccount': None, 'CostAccount': None, 'TransferAccount': None, 'RevenuesAccount': None, 'VarienceAccount': None, 'DecreasingAccount': None, 'IncreasingAccount': None, 'ReturningAccount': None, 'ExpensesAccount': None, 'EURevenuesAccount': None, 'EUExpensesAccount': None, 'ForeignRevenueAcc': None, 'ForeignExpensAcc': None, 'ExemptIncomeAcc': None, 'PriceDifferenceAcc': None, 'WarehouseCode': 'ONL', 'InStock': 0.0, 'Committed': 0.0, 'Ordered': 0.0, 'CountedQuantity': 0.0, 'WasCounted': 'tNO', 'UserSignature': 50, 'Counted': 0.0, 'ExpenseClearingAct': None, 'PurchaseCreditAcc': None, 'EUPurchaseCreditAcc': None, 'ForeignPurchaseCreditAcc': None, 'SalesCreditAcc': None, 'SalesCreditEUAcc': None, 'ExemptedCredits': None, 'SalesCreditForeignAcc': None, 'ExpenseOffsettingAccount': None, 'WipAccount': None, 'ExchangeRateDifferencesAcct': None, 'GoodsClearingAcct': None, 'NegativeInventoryAdjustmentAccount': None, 'CostInflationOffsetAccount': None, 'GLDecreaseAcct': None, 'GLIncreaseAcct': None, 'PAReturnAcct': None, 'PurchaseAcct': None, 'PurchaseOffsetAcct': None, 'ShippedGoodsAccount': None, 'StockInflationOffsetAccount': None, 'StockInflationAdjustAccount': None, 'VATInRevenueAccount': None, 'WipVarianceAccount': None, 'CostInflationAccount': None, 'WHIncomingCenvatAccount': None, 'WHOutgoingCenvatAccount': None, 'StockInTransitAccount': None, 'WipOffsetProfitAndLossAccount': None, 'InventoryOffsetProfitAndLossAccount': None, 'DefaultBin': None, 'DefaultBinEnforced': 'tNO', 'PurchaseBalanceAccount': None, 'ItemCode': 'ACC-0000002', 'ItemCycleCounts': []}, {'MinimalStock': 0.0, 'MaximalStock': 0.0, 'MinimalOrder': 0.0, 'StandardAveragePrice': 0.0, 'Locked': 'tNO', 'InventoryAccount': None, 'CostAccount': None, 'TransferAccount': None, 'RevenuesAccount': None, 'VarienceAccount': None, 'DecreasingAccount': None, 'IncreasingAccount': None, 'ReturningAccount': None, 'ExpensesAccount': None, 'EURevenuesAccount': None, 'EUExpensesAccount': None, 'ForeignRevenueAcc': None, 'ForeignExpensAcc': None, 'ExemptIncomeAcc': None, 'PriceDifferenceAcc': None, 'WarehouseCode': 'PHO', 'InStock': 0.0, 'Committed': 0.0, 'Ordered': 0.0, 'CountedQuantity': 0.0, 'WasCounted': 'tNO', 'UserSignature': 50, 'Counted': 0.0, 'ExpenseClearingAct': None, 'PurchaseCreditAcc': None, 'EUPurchaseCreditAcc': None, 'ForeignPurchaseCreditAcc': None, 'SalesCreditAcc': None, 'SalesCreditEUAcc': None, 'ExemptedCredits': None, 'SalesCreditForeignAcc': None, 'ExpenseOffsettingAccount': None, 'WipAccount': None, 'ExchangeRateDifferencesAcct': None, 'GoodsClearingAcct': None, 'NegativeInventoryAdjustmentAccount': None, 'CostInflationOffsetAccount': None, 'GLDecreaseAcct': None, 'GLIncreaseAcct': None, 'PAReturnAcct': None, 'PurchaseAcct': None, 'PurchaseOffsetAcct': None, 'ShippedGoodsAccount': None, 'StockInflationOffsetAccount': None, 'StockInflationAdjustAccount': None, 'VATInRevenueAccount': None, 'WipVarianceAccount': None, 'CostInflationAccount': None, 'WHIncomingCenvatAccount': None, 'WHOutgoingCenvatAccount': None, 'StockInTransitAccount': None, 'WipOffsetProfitAndLossAccount': None, 'InventoryOffsetProfitAndLossAccount': None, 'DefaultBin': None, 'DefaultBinEnforced': 'tNO', 'PurchaseBalanceAccount': None, 'ItemCode': 'ACC-0000002', 'ItemCycleCounts': []}, {'MinimalStock': 0.0, 'MaximalStock': 0.0, 'MinimalOrder': 0.0, 'StandardAveragePrice': 0.0, 'Locked': 'tNO', 'InventoryAccount': None, 'CostAccount': None, 'TransferAccount': None, 'RevenuesAccount': None, 'VarienceAccount': None, 'DecreasingAccount': None, 'IncreasingAccount': None, 'ReturningAccount': None, 'ExpensesAccount': None, 'EURevenuesAccount': None, 'EUExpensesAccount': None, 'ForeignRevenueAcc': None, 'ForeignExpensAcc': None, 'ExemptIncomeAcc': None, 'PriceDifferenceAcc': None, 'WarehouseCode': 'PHO-EX', 'InStock': 0.0, 'Committed': 0.0, 'Ordered': 0.0, 'CountedQuantity': 0.0, 'WasCounted': 'tNO', 'UserSignature': 1, 'Counted': 0.0, 'ExpenseClearingAct': None, 'PurchaseCreditAcc': None, 'EUPurchaseCreditAcc': None, 'ForeignPurchaseCreditAcc': None, 'SalesCreditAcc': None, 'SalesCreditEUAcc': None, 'ExemptedCredits': None, 'SalesCreditForeignAcc': None, 'ExpenseOffsettingAccount': None, 'WipAccount': None, 'ExchangeRateDifferencesAcct': None, 'GoodsClearingAcct': None, 'NegativeInventoryAdjustmentAccount': None, 'CostInflationOffsetAccount': None, 'GLDecreaseAcct': None, 'GLIncreaseAcct': None, 'PAReturnAcct': None, 'PurchaseAcct': None, 'PurchaseOffsetAcct': None, 'ShippedGoodsAccount': None, 'StockInflationOffsetAccount': None, 'StockInflationAdjustAccount': None, 'VATInRevenueAccount': None, 'WipVarianceAccount': None, 'CostInflationAccount': None, 'WHIncomingCenvatAccount': None, 'WHOutgoingCenvatAccount': None, 'StockInTransitAccount': None, 'WipOffsetProfitAndLossAccount': None, 'InventoryOffsetProfitAndLossAccount': None, 'DefaultBin': None, 'DefaultBinEnforced': 'tNO', 'PurchaseBalanceAccount': None, 'ItemCode': 'ACC-0000002', 'ItemCycleCounts': []}, {'MinimalStock': 0.0, 'MaximalStock': 0.0, 'MinimalOrder': 0.0, 'StandardAveragePrice': 0.0, 'Locked': 'tNO', 'InventoryAccount': None, 'CostAccount': None, 'TransferAccount': None, 'RevenuesAccount': None, 'VarienceAccount': None, 'DecreasingAccount': None, 'IncreasingAccount': None, 'ReturningAccount': None, 'ExpensesAccount': None, 'EURevenuesAccount': None, 'EUExpensesAccount': None, 'ForeignRevenueAcc': None, 'ForeignExpensAcc': None, 'ExemptIncomeAcc': None, 'PriceDifferenceAcc': None, 'WarehouseCode': 'PHO-IN', 'InStock': 0.0, 'Committed': 0.0, 'Ordered': 0.0, 'CountedQuantity': 0.0, 'WasCounted': 'tNO', 'UserSignature': 1, 'Counted': 0.0, 'ExpenseClearingAct': None, 'PurchaseCreditAcc': None, 'EUPurchaseCreditAcc': None, 'ForeignPurchaseCreditAcc': None, 'SalesCreditAcc': None, 'SalesCreditEUAcc': None, 'ExemptedCredits': None, 'SalesCreditForeignAcc': None, 'ExpenseOffsettingAccount': None, 'WipAccount': None, 'ExchangeRateDifferencesAcct': None, 'GoodsClearingAcct': None, 'NegativeInventoryAdjustmentAccount': None, 'CostInflationOffsetAccount': None, 'GLDecreaseAcct': None, 'GLIncreaseAcct': None, 'PAReturnAcct': None, 'PurchaseAcct': None, 'PurchaseOffsetAcct': None, 'ShippedGoodsAccount': None, 'StockInflationOffsetAccount': None, 'StockInflationAdjustAccount': None, 'VATInRevenueAccount': None, 'WipVarianceAccount': None, 'CostInflationAccount': None, 'WHIncomingCenvatAccount': None, 'WHOutgoingCenvatAccount': None, 'StockInTransitAccount': None, 'WipOffsetProfitAndLossAccount': None, 'InventoryOffsetProfitAndLossAccount': None, 'DefaultBin': None, 'DefaultBinEnforced': 'tNO', 'PurchaseBalanceAccount': None, 'ItemCode': 'ACC-0000002', 'ItemCycleCounts': []}, {'MinimalStock': 0.0, 'MaximalStock': 0.0, 'MinimalOrder': 0.0, 'StandardAveragePrice': 0.0, 'Locked': 'tNO', 'InventoryAccount': None, 'CostAccount': None, 'TransferAccount': None, 'RevenuesAccount': None, 'VarienceAccount': None, 'DecreasingAccount': None, 'IncreasingAccount': None, 'ReturningAccount': None, 'ExpensesAccount': None, 'EURevenuesAccount': None, 'EUExpensesAccount': None, 'ForeignRevenueAcc': None, 'ForeignExpensAcc': None, 'ExemptIncomeAcc': None, 'PriceDifferenceAcc': None, 'WarehouseCode': 'RTW', 'InStock': 0.0, 'Committed': 0.0, 'Ordered': 0.0, 'CountedQuantity': 0.0, 'WasCounted': 'tNO', 'UserSignature': 50, 'Counted': 0.0, 'ExpenseClearingAct': None, 'PurchaseCreditAcc': None, 'EUPurchaseCreditAcc': None, 'ForeignPurchaseCreditAcc': None, 'SalesCreditAcc': None, 'SalesCreditEUAcc': None, 'ExemptedCredits': None, 'SalesCreditForeignAcc': None, 'ExpenseOffsettingAccount': None, 'WipAccount': None, 'ExchangeRateDifferencesAcct': None, 'GoodsClearingAcct': None, 'NegativeInventoryAdjustmentAccount': None, 'CostInflationOffsetAccount': None, 'GLDecreaseAcct': None, 'GLIncreaseAcct': None, 'PAReturnAcct': None, 'PurchaseAcct': None, 'PurchaseOffsetAcct': None, 'ShippedGoodsAccount': None, 'StockInflationOffsetAccount': None, 'StockInflationAdjustAccount': None, 'VATInRevenueAccount': None, 'WipVarianceAccount': None, 'CostInflationAccount': None, 'WHIncomingCenvatAccount': None, 'WHOutgoingCenvatAccount': None, 'StockInTransitAccount': None, 'WipOffsetProfitAndLossAccount': None, 'InventoryOffsetProfitAndLossAccount': None, 'DefaultBin': None, 'DefaultBinEnforced': 'tNO', 'PurchaseBalanceAccount': None, 'ItemCode': 'ACC-0000002', 'ItemCycleCounts': []}, {'MinimalStock': 0.0, 'MaximalStock': 0.0, 'MinimalOrder': 0.0, 'StandardAveragePrice': 0.0, 'Locked': 'tNO', 'InventoryAccount': None, 'CostAccount': None, 'TransferAccount': None, 'RevenuesAccount': None, 'VarienceAccount': None, 'DecreasingAccount': None, 'IncreasingAccount': None, 'ReturningAccount': None, 'ExpensesAccount': None, 'EURevenuesAccount': None, 'EUExpensesAccount': None, 'ForeignRevenueAcc': None, 'ForeignExpensAcc': None, 'ExemptIncomeAcc': None, 'PriceDifferenceAcc': None, 'WarehouseCode': 'RTWH', 'InStock': 0.0, 'Committed': 0.0, 'Ordered': 0.0, 'CountedQuantity': 0.0, 'WasCounted': 'tNO', 'UserSignature': 1, 'Counted': 0.0, 'ExpenseClearingAct': None, 'PurchaseCreditAcc': None, 'EUPurchaseCreditAcc': None, 'ForeignPurchaseCreditAcc': None, 'SalesCreditAcc': None, 'SalesCreditEUAcc': None, 'ExemptedCredits': None, 'SalesCreditForeignAcc': None, 'ExpenseOffsettingAccount': None, 'WipAccount': None, 'ExchangeRateDifferencesAcct': None, 'GoodsClearingAcct': None, 'NegativeInventoryAdjustmentAccount': None, 'CostInflationOffsetAccount': None, 'GLDecreaseAcct': None, 'GLIncreaseAcct': None, 'PAReturnAcct': None, 'PurchaseAcct': None, 'PurchaseOffsetAcct': None, 'ShippedGoodsAccount': None, 'StockInflationOffsetAccount': None, 'StockInflationAdjustAccount': None, 'VATInRevenueAccount': None, 'WipVarianceAccount': None, 'CostInflationAccount': None, 'WHIncomingCenvatAccount': None, 'WHOutgoingCenvatAccount': None, 'StockInTransitAccount': None, 'WipOffsetProfitAndLossAccount': None, 'InventoryOffsetProfitAndLossAccount': None, 'DefaultBin': None, 'DefaultBinEnforced': 'tNO', 'PurchaseBalanceAccount': None, 'ItemCode': 'ACC-0000002', 'ItemCycleCounts': []}, {'MinimalStock': 0.0, 'MaximalStock': 0.0, 'MinimalOrder': 0.0, 'StandardAveragePrice': 0.0, 'Locked': 'tNO', 'InventoryAccount': None, 'CostAccount': None, 'TransferAccount': None, 'RevenuesAccount': None, 'VarienceAccount': None, 'DecreasingAccount': None, 'IncreasingAccount': None, 'ReturningAccount': None, 'ExpensesAccount': None, 'EURevenuesAccount': None, 'EUExpensesAccount': None, 'ForeignRevenueAcc': None, 'ForeignExpensAcc': None, 'ExemptIncomeAcc': None, 'PriceDifferenceAcc': None, 'WarehouseCode': 'SW', 'InStock': 0.0, 'Committed': 0.0, 'Ordered': 0.0, 'CountedQuantity': 0.0, 'WasCounted': 'tNO', 'UserSignature': 50, 'Counted': 0.0, 'ExpenseClearingAct': None, 'PurchaseCreditAcc': None, 'EUPurchaseCreditAcc': None, 'ForeignPurchaseCreditAcc': None, 'SalesCreditAcc': None, 'SalesCreditEUAcc': None, 'ExemptedCredits': None, 'SalesCreditForeignAcc': None, 'ExpenseOffsettingAccount': None, 'WipAccount': None, 'ExchangeRateDifferencesAcct': None, 'GoodsClearingAcct': None, 'NegativeInventoryAdjustmentAccount': None, 'CostInflationOffsetAccount': None, 'GLDecreaseAcct': None, 'GLIncreaseAcct': None, 'PAReturnAcct': None, 'PurchaseAcct': None, 'PurchaseOffsetAcct': None, 'ShippedGoodsAccount': None, 'StockInflationOffsetAccount': None, 'StockInflationAdjustAccount': None, 'VATInRevenueAccount': None, 'WipVarianceAccount': None, 'CostInflationAccount': None, 'WHIncomingCenvatAccount': None, 'WHOutgoingCenvatAccount': None, 'StockInTransitAccount': None, 'WipOffsetProfitAndLossAccount': None, 'InventoryOffsetProfitAndLossAccount': None, 'DefaultBin': None, 'DefaultBinEnforced': 'tNO', 'PurchaseBalanceAccount': None, 'ItemCode': 'ACC-0000002', 'ItemCycleCounts': []}, {'MinimalStock': 0.0, 'MaximalStock': 0.0, 'MinimalOrder': 0.0, 'StandardAveragePrice': 0.0, 'Locked': 'tNO', 'InventoryAccount': None, 'CostAccount': None, 'TransferAccount': None, 'RevenuesAccount': None, 'VarienceAccount': None, 'DecreasingAccount': None, 'IncreasingAccount': None, 'ReturningAccount': None, 'ExpensesAccount': None, 'EURevenuesAccount': None, 'EUExpensesAccount': None, 'ForeignRevenueAcc': None, 'ForeignExpensAcc': None, 'ExemptIncomeAcc': None, 'PriceDifferenceAcc': None, 'WarehouseCode': 'WLS', 'InStock': 0.0, 'Committed': 0.0, 'Ordered': 0.0, 'CountedQuantity': 0.0, 'WasCounted': 'tNO', 'UserSignature': 50, 'Counted': 0.0, 'ExpenseClearingAct': None, 'PurchaseCreditAcc': None, 'EUPurchaseCreditAcc': None, 'ForeignPurchaseCreditAcc': None, 'SalesCreditAcc': None, 'SalesCreditEUAcc': None, 'ExemptedCredits': None, 'SalesCreditForeignAcc': None, 'ExpenseOffsettingAccount': None, 'WipAccount': None, 'ExchangeRateDifferencesAcct': None, 'GoodsClearingAcct': None, 'NegativeInventoryAdjustmentAccount': None, 'CostInflationOffsetAccount': None, 'GLDecreaseAcct': None, 'GLIncreaseAcct': None, 'PAReturnAcct': None, 'PurchaseAcct': None, 'PurchaseOffsetAcct': None, 'ShippedGoodsAccount': None, 'StockInflationOffsetAccount': None, 'StockInflationAdjustAccount': None, 'VATInRevenueAccount': None, 'WipVarianceAccount': None, 'CostInflationAccount': None, 'WHIncomingCenvatAccount': None, 'WHOutgoingCenvatAccount': None, 'StockInTransitAccount': None, 'WipOffsetProfitAndLossAccount': None, 'InventoryOffsetProfitAndLossAccount': None, 'DefaultBin': None, 'DefaultBinEnforced': 'tNO', 'PurchaseBalanceAccount': None, 'ItemCode': 'ACC-0000002', 'ItemCycleCounts': []}, {'MinimalStock': 0.0, 'MaximalStock': 0.0, 'MinimalOrder': 0.0, 'StandardAveragePrice': 0.0, 'Locked': 'tNO', 'InventoryAccount': None, 'CostAccount': None, 'TransferAccount': None, 'RevenuesAccount': None, 'VarienceAccount': None, 'DecreasingAccount': None, 'IncreasingAccount': None, 'ReturningAccount': None, 'ExpensesAccount': None, 'EURevenuesAccount': None, 'EUExpensesAccount': None, 'ForeignRevenueAcc': None, 'ForeignExpensAcc': None, 'ExemptIncomeAcc': None, 'PriceDifferenceAcc': None, 'WarehouseCode': 'WW', 'InStock': 0.0, 'Committed': 0.0, 'Ordered': 0.0, 'CountedQuantity': 0.0, 'WasCounted': 'tNO', 'UserSignature': 50, 'Counted': 0.0, 'ExpenseClearingAct': None, 'PurchaseCreditAcc': None, 'EUPurchaseCreditAcc': None, 'ForeignPurchaseCreditAcc': None, 'SalesCreditAcc': None, 'SalesCreditEUAcc': None, 'ExemptedCredits': None, 'SalesCreditForeignAcc': None, 'ExpenseOffsettingAccount': None, 'WipAccount': None, 'ExchangeRateDifferencesAcct': None, 'GoodsClearingAcct': None, 'NegativeInventoryAdjustmentAccount': None, 'CostInflationOffsetAccount': None, 'GLDecreaseAcct': None, 'GLIncreaseAcct': None, 'PAReturnAcct': None, 'PurchaseAcct': None, 'PurchaseOffsetAcct': None, 'ShippedGoodsAccount': None, 'StockInflationOffsetAccount': None, 'StockInflationAdjustAccount': None, 'VATInRevenueAccount': None, 'WipVarianceAccount': None, 'CostInflationAccount': None, 'WHIncomingCenvatAccount': None, 'WHOutgoingCenvatAccount': None, 'StockInTransitAccount': None, 'WipOffsetProfitAndLossAccount': None, 'InventoryOffsetProfitAndLossAccount': None, 'DefaultBin': None, 'DefaultBinEnforced': 'tNO', 'PurchaseBalanceAccount': None, 'ItemCode': 'ACC-0000002', 'ItemCycleCounts': []}, {'MinimalStock': 0.0, 'MaximalStock': 0.0, 'MinimalOrder': 0.0, 'StandardAveragePrice': 0.0, 'Locked': 'tNO', 'InventoryAccount': None, 'CostAccount': None, 'TransferAccount': None, 'RevenuesAccount': None, 'VarienceAccount': None, 'DecreasingAccount': None, 'IncreasingAccount': None, 'ReturningAccount': None, 'ExpensesAccount': None, 'EURevenuesAccount': None, 'EUExpensesAccount': None, 'ForeignRevenueAcc': None, 'ForeignExpensAcc': None, 'ExemptIncomeAcc': None, 'PriceDifferenceAcc': None, 'WarehouseCode': 'WW-CON', 'InStock': 0.0, 'Committed': 0.0, 'Ordered': 0.0, 'CountedQuantity': 0.0, 'WasCounted': 'tNO', 'UserSignature': 50, 'Counted': 0.0, 'ExpenseClearingAct': None, 'PurchaseCreditAcc': None, 'EUPurchaseCreditAcc': None, 'ForeignPurchaseCreditAcc': None, 'SalesCreditAcc': None, 'SalesCreditEUAcc': None, 'ExemptedCredits': None, 'SalesCreditForeignAcc': None, 'ExpenseOffsettingAccount': None, 'WipAccount': None, 'ExchangeRateDifferencesAcct': None, 'GoodsClearingAcct': None, 'NegativeInventoryAdjustmentAccount': None, 'CostInflationOffsetAccount': None, 'GLDecreaseAcct': None, 'GLIncreaseAcct': None, 'PAReturnAcct': None, 'PurchaseAcct': None, 'PurchaseOffsetAcct': None, 'ShippedGoodsAccount': None, 'StockInflationOffsetAccount': None, 'StockInflationAdjustAccount': None, 'VATInRevenueAccount': None, 'WipVarianceAccount': None, 'CostInflationAccount': None, 'WHIncomingCenvatAccount': None, 'WHOutgoingCenvatAccount': None, 'StockInTransitAccount': None, 'WipOffsetProfitAndLossAccount': None, 'InventoryOffsetProfitAndLossAccount': None, 'DefaultBin': None, 'DefaultBinEnforced': 'tNO', 'PurchaseBalanceAccount': None, 'ItemCode': 'ACC-0000002', 'ItemCycleCounts': []}, {'MinimalStock': 0.0, 'MaximalStock': 0.0, 'MinimalOrder': 0.0, 'StandardAveragePrice': 0.0, 'Locked': 'tNO', 'InventoryAccount': None, 'CostAccount': None, 'TransferAccount': None, 'RevenuesAccount': None, 'VarienceAccount': None, 'DecreasingAccount': None, 'IncreasingAccount': None, 'ReturningAccount': None, 'ExpensesAccount': None, 'EURevenuesAccount': None, 'EUExpensesAccount': None, 'ForeignRevenueAcc': None, 'ForeignExpensAcc': None, 'ExemptIncomeAcc': None, 'PriceDifferenceAcc': None, 'WarehouseCode': 'WW-DAM', 'InStock': 0.0, 'Committed': 0.0, 'Ordered': 0.0, 'CountedQuantity': 0.0, 'WasCounted': 'tNO', 'UserSignature': 50, 'Counted': 0.0, 'ExpenseClearingAct': None, 'PurchaseCreditAcc': None, 'EUPurchaseCreditAcc': None, 'ForeignPurchaseCreditAcc': None, 'SalesCreditAcc': None, 'SalesCreditEUAcc': None, 'ExemptedCredits': None, 'SalesCreditForeignAcc': None, 'ExpenseOffsettingAccount': None, 'WipAccount': None, 'ExchangeRateDifferencesAcct': None, 'GoodsClearingAcct': None, 'NegativeInventoryAdjustmentAccount': None, 'CostInflationOffsetAccount': None, 'GLDecreaseAcct': None, 'GLIncreaseAcct': None, 'PAReturnAcct': None, 'PurchaseAcct': None, 'PurchaseOffsetAcct': None, 'ShippedGoodsAccount': None, 'StockInflationOffsetAccount': None, 'StockInflationAdjustAccount': None, 'VATInRevenueAccount': None, 'WipVarianceAccount': None, 'CostInflationAccount': None, 'WHIncomingCenvatAccount': None, 'WHOutgoingCenvatAccount': None, 'StockInTransitAccount': None, 'WipOffsetProfitAndLossAccount': None, 'InventoryOffsetProfitAndLossAccount': None, 'DefaultBin': None, 'DefaultBinEnforced': 'tNO', 'PurchaseBalanceAccount': None, 'ItemCode': 'ACC-0000002', 'ItemCycleCounts': []}, {'MinimalStock': 0.0, 'MaximalStock': 0.0, 'MinimalOrder': 0.0, 'StandardAveragePrice': 0.0, 'Locked': 'tNO', 'InventoryAccount': None, 'CostAccount': None, 'TransferAccount': None, 'RevenuesAccount': None, 'VarienceAccount': None, 'DecreasingAccount': None, 'IncreasingAccount': None, 'ReturningAccount': None, 'ExpensesAccount': None, 'EURevenuesAccount': None, 'EUExpensesAccount': None, 'ForeignRevenueAcc': None, 'ForeignExpensAcc': None, 'ExemptIncomeAcc': None, 'PriceDifferenceAcc': None, 'WarehouseCode': 'WW-REP', 'InStock': 0.0, 'Committed': 0.0, 'Ordered': 0.0, 'CountedQuantity': 0.0, 'WasCounted': 'tNO', 'UserSignature': 50, 'Counted': 0.0, 'ExpenseClearingAct': None, 'PurchaseCreditAcc': None, 'EUPurchaseCreditAcc': None, 'ForeignPurchaseCreditAcc': None, 'SalesCreditAcc': None, 'SalesCreditEUAcc': None, 'ExemptedCredits': None, 'SalesCreditForeignAcc': None, 'ExpenseOffsettingAccount': None, 'WipAccount': None, 'ExchangeRateDifferencesAcct': None, 'GoodsClearingAcct': None, 'NegativeInventoryAdjustmentAccount': None, 'CostInflationOffsetAccount': None, 'GLDecreaseAcct': None, 'GLIncreaseAcct': None, 'PAReturnAcct': None, 'PurchaseAcct': None, 'PurchaseOffsetAcct': None, 'ShippedGoodsAccount': None, 'StockInflationOffsetAccount': None, 'StockInflationAdjustAccount': None, 'VATInRevenueAccount': None, 'WipVarianceAccount': None, 'CostInflationAccount': None, 'WHIncomingCenvatAccount': None, 'WHOutgoingCenvatAccount': None, 'StockInTransitAccount': None, 'WipOffsetProfitAndLossAccount': None, 'InventoryOffsetProfitAndLossAccount': None, 'DefaultBin': None, 'DefaultBinEnforced': 'tNO', 'PurchaseBalanceAccount': None, 'ItemCode': 'ACC-0000002', 'ItemCycleCounts': []}, {'MinimalStock': 0.0, 'MaximalStock': 0.0, 'MinimalOrder': 0.0, 'StandardAveragePrice': 0.0, 'Locked': 'tNO', 'InventoryAccount': None, 'CostAccount': None, 'TransferAccount': None, 'RevenuesAccount': None, 'VarienceAccount': None, 'DecreasingAccount': None, 'IncreasingAccount': None, 'ReturningAccount': None, 'ExpensesAccount': None, 'EURevenuesAccount': None, 'EUExpensesAccount': None, 'ForeignRevenueAcc': None, 'ForeignExpensAcc': None, 'ExemptIncomeAcc': None, 'PriceDifferenceAcc': None, 'WarehouseCode': 'WW-SAM', 'InStock': 0.0, 'Committed': 0.0, 'Ordered': 0.0, 'CountedQuantity': 0.0, 'WasCounted': 'tNO', 'UserSignature': 50, 'Counted': 0.0, 'ExpenseClearingAct': None, 'PurchaseCreditAcc': None, 'EUPurchaseCreditAcc': None, 'ForeignPurchaseCreditAcc': None, 'SalesCreditAcc': None, 'SalesCreditEUAcc': None, 'ExemptedCredits': None, 'SalesCreditForeignAcc': None, 'ExpenseOffsettingAccount': None, 'WipAccount': None, 'ExchangeRateDifferencesAcct': None, 'GoodsClearingAcct': None, 'NegativeInventoryAdjustmentAccount': None, 'CostInflationOffsetAccount': None, 'GLDecreaseAcct': None, 'GLIncreaseAcct': None, 'PAReturnAcct': None, 'PurchaseAcct': None, 'PurchaseOffsetAcct': None, 'ShippedGoodsAccount': None, 'StockInflationOffsetAccount': None, 'StockInflationAdjustAccount': None, 'VATInRevenueAccount': None, 'WipVarianceAccount': None, 'CostInflationAccount': None, 'WHIncomingCenvatAccount': None, 'WHOutgoingCenvatAccount': None, 'StockInTransitAccount': None, 'WipOffsetProfitAndLossAccount': None, 'InventoryOffsetProfitAndLossAccount': None, 'DefaultBin': None, 'DefaultBinEnforced': 'tNO', 'PurchaseBalanceAccount': None, 'ItemCode': 'ACC-0000002', 'ItemCycleCounts': []}, {'MinimalStock': 0.0, 'MaximalStock': 0.0, 'MinimalOrder': 0.0, 'StandardAveragePrice': 0.0, 'Locked': 'tNO', 'InventoryAccount': None, 'CostAccount': None, 'TransferAccount': None, 'RevenuesAccount': None, 'VarienceAccount': None, 'DecreasingAccount': None, 'IncreasingAccount': None, 'ReturningAccount': None, 'ExpensesAccount': None, 'EURevenuesAccount': None, 'EUExpensesAccount': None, 'ForeignRevenueAcc': None, 'ForeignExpensAcc': None, 'ExemptIncomeAcc': None, 'PriceDifferenceAcc': None, 'WarehouseCode': 'WW-WIP', 'InStock': 0.0, 'Committed': 0.0, 'Ordered': 0.0, 'CountedQuantity': 0.0, 'WasCounted': 'tNO', 'UserSignature': 50, 'Counted': 0.0, 'ExpenseClearingAct': None, 'PurchaseCreditAcc': None, 'EUPurchaseCreditAcc': None, 'ForeignPurchaseCreditAcc': None, 'SalesCreditAcc': None, 'SalesCreditEUAcc': None, 'ExemptedCredits': None, 'SalesCreditForeignAcc': None, 'ExpenseOffsettingAccount': None, 'WipAccount': None, 'ExchangeRateDifferencesAcct': None, 'GoodsClearingAcct': None, 'NegativeInventoryAdjustmentAccount': None, 'CostInflationOffsetAccount': None, 'GLDecreaseAcct': None, 'GLIncreaseAcct': None, 'PAReturnAcct': None, 'PurchaseAcct': None, 'PurchaseOffsetAcct': None, 'ShippedGoodsAccount': None, 'StockInflationOffsetAccount': None, 'StockInflationAdjustAccount': None, 'VATInRevenueAccount': None, 'WipVarianceAccount': None, 'CostInflationAccount': None, 'WHIncomingCenvatAccount': None, 'WHOutgoingCenvatAccount': None, 'StockInTransitAccount': None, 'WipOffsetProfitAndLossAccount': None, 'InventoryOffsetProfitAndLossAccount': None, 'DefaultBin': None, 'DefaultBinEnforced': 'tNO', 'PurchaseBalanceAccount': None, 'ItemCode': 'ACC-0000002', 'ItemCycleCounts': []}, {'MinimalStock': 0.0, 'MaximalStock': 0.0, 'MinimalOrder': 0.0, 'StandardAveragePrice': 0.0, 'Locked': 'tNO', 'InventoryAccount': None, 'CostAccount': None, 'TransferAccount': None, 'RevenuesAccount': None, 'VarienceAccount': None, 'DecreasingAccount': None, 'IncreasingAccount': None, 'ReturningAccount': None, 'ExpensesAccount': None, 'EURevenuesAccount': None, 'EUExpensesAccount': None, 'ForeignRevenueAcc': None, 'ForeignExpensAcc': None, 'ExemptIncomeAcc': None, 'PriceDifferenceAcc': None, 'WarehouseCode': 'ZW', 'InStock': 0.0, 'Committed': 0.0, 'Ordered': 0.0, 'CountedQuantity': 0.0, 'WasCounted': 'tNO', 'UserSignature': 50, 'Counted': 0.0, 'ExpenseClearingAct': None, 'PurchaseCreditAcc': None, 'EUPurchaseCreditAcc': None, 'ForeignPurchaseCreditAcc': None, 'SalesCreditAcc': None, 'SalesCreditEUAcc': None, 'ExemptedCredits': None, 'SalesCreditForeignAcc': None, 'ExpenseOffsettingAccount': None, 'WipAccount': None, 'ExchangeRateDifferencesAcct': None, 'GoodsClearingAcct': None, 'NegativeInventoryAdjustmentAccount': None, 'CostInflationOffsetAccount': None, 'GLDecreaseAcct': None, 'GLIncreaseAcct': None, 'PAReturnAcct': None, 'PurchaseAcct': None, 'PurchaseOffsetAcct': None, 'ShippedGoodsAccount': None, 'StockInflationOffsetAccount': None, 'StockInflationAdjustAccount': None, 'VATInRevenueAccount': None, 'WipVarianceAccount': None, 'CostInflationAccount': None, 'WHIncomingCenvatAccount': None, 'WHOutgoingCenvatAccount': None, 'StockInTransitAccount': None, 'WipOffsetProfitAndLossAccount': None, 'InventoryOffsetProfitAndLossAccount': None, 'DefaultBin': None, 'DefaultBinEnforced': 'tNO', 'PurchaseBalanceAccount': None, 'ItemCode': 'ACC-0000002', 'ItemCycleCounts': []}], 'ItemPreferredVendors': [], 'ItemLocalizationInfos': [], 'ItemProjects': [], 'ItemDistributionRules': [], 'ItemAttributeGroups': [], 'ItemDepreciationParameters': [], 'ItemPeriodControls': [], 'ItemUnitOfMeasurementCollection': [{'UoMType': 'iutInventory', 'UoMEntry': 1, 'DefaultBarcode': 0, 'DefaultPackage': None, 'Length1': 0.0, 'Length1Unit': None, 'Length2': 0.0, 'Length2Unit': None, 'Width1': 0.0, 'Width1Unit': None, 'Width2': 0.0, 'Width2Unit': None, 'Height1': 0.0, 'Height1Unit': None, 'Height2': 0.0, 'Height2Unit': None, 'Volume': 0.0, 'VolumeUnit': None, 'Weight1': 0.0, 'Weight1Unit': None, 'Weight2': 0.0, 'Weight2Unit': None, 'ItemUoMPackageCollection': []}, {'UoMType': 'iutPurchasing', 'UoMEntry': 1, 'DefaultBarcode': 0, 'DefaultPackage': None, 'Length1': 0.0, 'Length1Unit': None, 'Length2': 0.0, 'Length2Unit': None, 'Width1': 0.0, 'Width1Unit': None, 'Width2': 0.0, 'Width2Unit': None, 'Height1': 0.0, 'Height1Unit': None, 'Height2': 0.0, 'Height2Unit': None, 'Volume': 0.0, 'VolumeUnit': 2, 'Weight1': 0.0, 'Weight1Unit': None, 'Weight2': 0.0, 'Weight2Unit': None, 'ItemUoMPackageCollection': []}, {'UoMType': 'iutPurchasing', 'UoMEntry': 8, 'DefaultBarcode': None, 'DefaultPackage': None, 'Length1': 0.0, 'Length1Unit': None, 'Length2': 0.0, 'Length2Unit': None, 'Width1': 0.0, 'Width1Unit': None, 'Width2': 0.0, 'Width2Unit': None, 'Height1': 0.0, 'Height1Unit': None, 'Height2': 0.0, 'Height2Unit': None, 'Volume': 0.0, 'VolumeUnit': 4, 'Weight1': 0.0, 'Weight1Unit': None, 'Weight2': 0.0, 'Weight2Unit': None, 'ItemUoMPackageCollection': []}, {'UoMType': 'iutSales', 'UoMEntry': 1, 'DefaultBarcode': 0, 'DefaultPackage': None, 'Length1': 0.0, 'Length1Unit': None, 'Length2': 0.0, 'Length2Unit': None, 'Width1': 0.0, 'Width1Unit': None, 'Width2': 0.0, 'Width2Unit': None, 'Height1': 0.0, 'Height1Unit': None, 'Height2': 0.0, 'Height2Unit': None, 'Volume': 0.0, 'VolumeUnit': 2, 'Weight1': 0.0, 'Weight1Unit': None, 'Weight2': 0.0, 'Weight2Unit': None, 'ItemUoMPackageCollection': []}, {'UoMType': 'iutSales', 'UoMEntry': 8, 'DefaultBarcode': None, 'DefaultPackage': None, 'Length1': 0.0, 'Length1Unit': None, 'Length2': 0.0, 'Length2Unit': None, 'Width1': 0.0, 'Width1Unit': None, 'Width2': 0.0, 'Width2Unit': None, 'Height1': 0.0, 'Height1Unit': None, 'Height2': 0.0, 'Height2Unit': None, 'Volume': 0.0, 'VolumeUnit': 4, 'Weight1': 0.0, 'Weight1Unit': None, 'Weight2': 0.0, 'Weight2Unit': None, 'ItemUoMPackageCollection': []}], 'ItemBarCodeCollection': [], 'ItemIntrastatExtension': {'ItemCode': 'ACC-0000002', 'CommodityCode': None, 'SupplementaryUnit': None, 'FactorOfSupplementaryUnit': 0.0, 'ImportRegionState': 0, 'ExportRegionState': 0, 'ImportNatureOfTransaction': None, 'ExportNatureOfTransaction': None, 'ImportStatisticalProcedure': None, 'ExportStatisticalProcedure': None, 'CountryOfOrigin': None, 'ServiceCode': None, 'Type': 'dDocument_Items', 'ServiceSupplyMethod': 'ssmImmediate', 'ServicePaymentMethod': 'spmOther', 'ImportRegionCountry': 'GB', 'ExportRegionCountry': 'GB', 'UseWeightInCalculation': 'tYES', 'IntrastatRelevant': 'tNO', 'StatisticalCode': None}}, {'ItemCode': 'ACC-0000003', 'ItemName': 'Square With 1 Slits 10*10 CM', 'ForeignName': None, 'ItemsGroupCode': 110, 'CustomsGroupCode': -1, 'SalesVATGroup': 'X0', 'BarCode': None, 'VatLiable': 'tYES', 'PurchaseItem': 'tYES', 'SalesItem': 'tNO', 'InventoryItem': 'tYES', 'IncomeAccount': None, 'ExemptIncomeAccount': None, 'ExpanseAccount': None, 'Mainsupplier': None, 'SupplierCatalogNo': None, 'DesiredInventory': 0.0, 'MinInventory': 0.0, 'Picture': None, 'User_Text': None, 'SerialNum': None, 'CommissionPercent': 0.0, 'CommissionSum': 0.0, 'CommissionGroup': 0, 'TreeType': 'iNotATree', 'AssetItem': 'tNO', 'DataExportCode': None, 'Manufacturer': -1, 'QuantityOnStock': 17.0, 'QuantityOrderedFromVendors': 0.0, 'QuantityOrderedByCustomers': 0.0, 'ManageSerialNumbers': 'tNO', 'ManageBatchNumbers': 'tNO', 'Valid': 'tYES', 'ValidFrom': None, 'ValidTo': None, 'ValidRemarks': None, 'Frozen': 'tNO', 'FrozenFrom': None, 'FrozenTo': None, 'FrozenRemarks': None, 'SalesUnit': None, 'SalesItemsPerUnit': 1.0, 'SalesPackagingUnit': None, 'SalesQtyPerPackUnit': 1.0, 'SalesUnitLength': None, 'SalesLengthUnit': None, 'SalesUnitWidth': None, 'SalesWidthUnit': None, 'SalesUnitHeight': None, 'SalesHeightUnit': None, 'SalesUnitVolume': 0.0, 'SalesVolumeUnit': 4, 'SalesUnitWeight': None, 'SalesWeightUnit': None, 'PurchaseUnit': None, 'PurchaseItemsPerUnit': 1.0, 'PurchasePackagingUnit': None, 'PurchaseQtyPerPackUnit': 1.0, 'PurchaseUnitLength': None, 'PurchaseLengthUnit': None, 'PurchaseUnitWidth': None, 'PurchaseWidthUnit': None, 'PurchaseUnitHeight': None, 'PurchaseHeightUnit': None, 'PurchaseUnitVolume': 0.0, 'PurchaseVolumeUnit': 4, 'PurchaseUnitWeight': None, 'PurchaseWeightUnit': None, 'PurchaseVATGroup': 'X1', 'SalesFactor1': 1.0, 'SalesFactor2': 1.0, 'SalesFactor3': 1.0, 'SalesFactor4': 1.0, 'PurchaseFactor1': 1.0, 'PurchaseFactor2': 1.0, 'PurchaseFactor3': 1.0, 'PurchaseFactor4': 1.0, 'MovingAveragePrice': 0.0, 'ForeignRevenuesAccount': None, 'ECRevenuesAccount': None, 'ForeignExpensesAccount': None, 'ECExpensesAccount': None, 'AvgStdPrice': 0.0, 'DefaultWarehouse': None, 'ShipType': None, 'GLMethod': 'glm_ItemClass', 'TaxType': 'tt_Yes', 'MaxInventory': 0.0, 'ManageStockByWarehouse': 'tNO', 'PurchaseHeightUnit1': None, 'PurchaseUnitHeight1': None, 'PurchaseLengthUnit1': None, 'PurchaseUnitLength1': None, 'PurchaseWeightUnit1': None, 'PurchaseUnitWeight1': None, 'PurchaseWidthUnit1': None, 'PurchaseUnitWidth1': None, 'SalesHeightUnit1': None, 'SalesUnitHeight1': None, 'SalesLengthUnit1': None, 'SalesUnitLength1': None, 'SalesWeightUnit1': None, 'SalesUnitWeight1': None, 'SalesWidthUnit1': None, 'SalesUnitWidth1': None, 'ForceSelectionOfSerialNumber': 'tYES', 'ManageSerialNumbersOnReleaseOnly': 'tNO', 'WTLiable': 'tNO', 'CostAccountingMethod': 'bis_MovingAverage', 'SWW': None, 'WarrantyTemplate': '', 'IndirectTax': 'tNO', 'ArTaxCode': None, 'ApTaxCode': None, 'BaseUnitName': None, 'ItemCountryOrg': None, 'IssueMethod': 'im_Backflush', 'SRIAndBatchManageMethod': 'bomm_OnEveryTransaction', 'IsPhantom': 'tNO', 'InventoryUOM': 'Piece', 'PlanningSystem': 'bop_None', 'ProcurementMethod': 'bom_Buy', 'ComponentWarehouse': 'bomcw_BOM', 'OrderIntervals': None, 'OrderMultiple': 0.0, 'LeadTime': None, 'MinOrderQuantity': 0.0, 'ItemType': 'itItems', 'ItemClass': 'itcMaterial', 'OutgoingServiceCode': -1, 'IncomingServiceCode': -1, 'ServiceGroup': -1, 'NCMCode': -1, 'MaterialType': 'mt_FinishedGoods', 'MaterialGroup': -1, 'ProductSource': '', 'Properties1': 'tNO', 'Properties2': 'tNO', 'Properties3': 'tNO', 'Properties4': 'tNO', 'Properties5': 'tNO', 'Properties6': 'tNO', 'Properties7': 'tNO', 'Properties8': 'tNO', 'Properties9': 'tNO', 'Properties10': 'tNO', 'Properties11': 'tNO', 'Properties12': 'tNO', 'Properties13': 'tNO', 'Properties14': 'tNO', 'Properties15': 'tNO', 'Properties16': 'tNO', 'Properties17': 'tNO', 'Properties18': 'tNO', 'Properties19': 'tNO', 'Properties20': 'tNO', 'Properties21': 'tNO', 'Properties22': 'tNO', 'Properties23': 'tNO', 'Properties24': 'tNO', 'Properties25': 'tNO', 'Properties26': 'tNO', 'Properties27': 'tNO', 'Properties28': 'tNO', 'Properties29': 'tNO', 'Properties30': 'tNO', 'Properties31': 'tNO', 'Properties32': 'tNO', 'Properties33': 'tNO', 'Properties34': 'tNO', 'Properties35': 'tNO', 'Properties36': 'tNO', 'Properties37': 'tNO', 'Properties38': 'tNO', 'Properties39': 'tNO', 'Properties40': 'tNO', 'Properties41': 'tNO', 'Properties42': 'tNO', 'Properties43': 'tNO', 'Properties44': 'tNO', 'Properties45': 'tNO', 'Properties46': 'tNO', 'Properties47': 'tNO', 'Properties48': 'tNO', 'Properties49': 'tNO', 'Properties50': 'tNO', 'Properties51': 'tNO', 'Properties52': 'tNO', 'Properties53': 'tNO', 'Properties54': 'tNO', 'Properties55': 'tNO', 'Properties56': 'tNO', 'Properties57': 'tNO', 'Properties58': 'tNO', 'Properties59': 'tNO', 'Properties60': 'tNO', 'Properties61': 'tNO', 'Properties62': 'tNO', 'Properties63': 'tNO', 'Properties64': 'tNO', 'AutoCreateSerialNumbersOnRelease': 'tNO', 'DNFEntry': -1, 'GTSItemSpec': None, 'GTSItemTaxCategory': None, 'FuelID': None, 'BeverageTableCode': '', 'BeverageGroupCode': '', 'BeverageCommercialBrandCode': None, 'Series': 119, 'ToleranceDays': None, 'TypeOfAdvancedRules': 'toarGeneral', 'IssuePrimarilyBy': 'ipbBinLocations', 'NoDiscounts': 'tNO', 'AssetClass': '', 'AssetGroup': '', 'InventoryNumber': '', 'Technician': None, 'Employee': None, 'Location': None, 'AssetStatus': 'New', 'CapitalizationDate': None, 'StatisticalAsset': 'tNO', 'Cession': 'tNO', 'DeactivateAfterUsefulLife': 'tNO', 'ManageByQuantity': 'tNO', 'UoMGroupEntry': 1, 'InventoryUoMEntry': 1, 'DefaultSalesUoMEntry': None, 'DefaultPurchasingUoMEntry': None, 'DepreciationGroup': None, 'AssetSerialNumber': '', 'InventoryWeight': None, 'InventoryWeightUnit': None, 'InventoryWeight1': None, 'InventoryWeightUnit1': None, 'DefaultCountingUnit': 'Piece', 'CountingItemsPerUnit': 1.0, 'DefaultCountingUoMEntry': 1, 'Excisable': 'tNO', 'ChapterID': -1, 'ScsCode': None, 'SpProdType': None, 'ProdStdCost': 0.0, 'InCostRollup': 'tYES', 'VirtualAssetItem': 'tNO', 'EnforceAssetSerialNumbers': 'tNO', 'AttachmentEntry': None, 'LinkedResource': None, 'UpdateDate': '2025-01-26', 'UpdateTime': '09:34:55', 'GSTRelevnt': 'tNO', 'SACEntry': -1, 'GSTTaxCategory': 'gtc_Regular', 'ServiceCategoryEntry': -1, 'CapitalGoodsOnHoldPercent': 0.0, 'CapitalGoodsOnHoldLimit': 0.0, 'AssessableValue': 0.0, 'AssVal4WTR': 0.0, 'SOIExcisable': 'se_NotExcisable', 'TNVED': None, 'ImportedItem': 'tNO', 'PricingUnit': 1, 'CreateDate': '2025-01-26', 'CreateTime': '09:34:55', 'U_MfgH': None, 'U_Collection': None, 'U_OldCode': None, 'U_ItemsCat': None, 'U_NumberofSet': None, 'U_NileCode': None, 'U_TransferProductionLinkExclude': None, 'U_SBO_CodeType': 'GS1', 'U_SBO_EGSCode': None, 'U_ShopifyColor': None, 'U_SalesChannel': None, 'U_ShopifyItemIDLocal': None, 'U_ShopifyItemIDInternational': None, 'U_ParentCommercialName': None, 'ItemPrices': [{'PriceList': 1, 'Price': 0.0, 'Currency': None, 'AdditionalPrice1': 0.0, 'AdditionalCurrency1': None, 'AdditionalPrice2': 0.0, 'AdditionalCurrency2': None, 'BasePriceList': 1, 'Factor': 1.0, 'UoMPrices': []}, {'PriceList': 2, 'Price': 0.0, 'Currency': None, 'AdditionalPrice1': 0.0, 'AdditionalCurrency1': None, 'AdditionalPrice2': 0.0, 'AdditionalCurrency2': None, 'BasePriceList': 1, 'Factor': 0.4, 'UoMPrices': []}, {'PriceList': 3, 'Price': 0.0, 'Currency': None, 'AdditionalPrice1': 0.0, 'AdditionalCurrency1': None, 'AdditionalPrice2': 0.0, 'AdditionalCurrency2': None, 'BasePriceList': 3, 'Factor': 1.0, 'UoMPrices': []}, {'PriceList': 4, 'Price': 0.0, 'Currency': None, 'AdditionalPrice1': 0.0, 'AdditionalCurrency1': None, 'AdditionalPrice2': 0.0, 'AdditionalCurrency2': None, 'BasePriceList': 4, 'Factor': 1.0, 'UoMPrices': []}, {'PriceList': 5, 'Price': 0.0, 'Currency': None, 'AdditionalPrice1': 0.0, 'AdditionalCurrency1': None, 'AdditionalPrice2': 0.0, 'AdditionalCurrency2': None, 'BasePriceList': 5, 'Factor': 1.0, 'UoMPrices': []}, {'PriceList': 6, 'Price': 0.0, 'Currency': None, 'AdditionalPrice1': 0.0, 'AdditionalCurrency1': None, 'AdditionalPrice2': 0.0, 'AdditionalCurrency2': None, 'BasePriceList': 6, 'Factor': 1.0, 'UoMPrices': []}, {'PriceList': 7, 'Price': 0.0, 'Currency': None, 'AdditionalPrice1': 0.0, 'AdditionalCurrency1': None, 'AdditionalPrice2': 0.0, 'AdditionalCurrency2': None, 'BasePriceList': 7, 'Factor': 1.0, 'UoMPrices': []}, {'PriceList': 8, 'Price': 0.0, 'Currency': None, 'AdditionalPrice1': 0.0, 'AdditionalCurrency1': None, 'AdditionalPrice2': 0.0, 'AdditionalCurrency2': None, 'BasePriceList': 8, 'Factor': 1.0, 'UoMPrices': []}, {'PriceList': 9, 'Price': 0.0, 'Currency': None, 'AdditionalPrice1': 0.0, 'AdditionalCurrency1': None, 'AdditionalPrice2': 0.0, 'AdditionalCurrency2': None, 'BasePriceList': 9, 'Factor': 1.0, 'UoMPrices': []}, {'PriceList': 10, 'Price': 0.0, 'Currency': None, 'AdditionalPrice1': 0.0, 'AdditionalCurrency1': None, 'AdditionalPrice2': 0.0, 'AdditionalCurrency2': None, 'BasePriceList': 10, 'Factor': 1.0, 'UoMPrices': []}], 'ItemWarehouseInfoCollection': [{'MinimalStock': 0.0, 'MaximalStock': 0.0, 'MinimalOrder': 0.0, 'StandardAveragePrice': 250.0, 'Locked': 'tNO', 'InventoryAccount': None, 'CostAccount': None, 'TransferAccount': None, 'RevenuesAccount': None, 'VarienceAccount': None, 'DecreasingAccount': None, 'IncreasingAccount': None, 'ReturningAccount': None, 'ExpensesAccount': None, 'EURevenuesAccount': None, 'EUExpensesAccount': None, 'ForeignRevenueAcc': None, 'ForeignExpensAcc': None, 'ExemptIncomeAcc': None, 'PriceDifferenceAcc': None, 'WarehouseCode': '5A', 'InStock': 3.0, 'Committed': 0.0, 'Ordered': 0.0, 'CountedQuantity': 0.0, 'WasCounted': 'tNO', 'UserSignature': 50, 'Counted': 0.0, 'ExpenseClearingAct': None, 'PurchaseCreditAcc': None, 'EUPurchaseCreditAcc': None, 'ForeignPurchaseCreditAcc': None, 'SalesCreditAcc': None, 'SalesCreditEUAcc': None, 'ExemptedCredits': None, 'SalesCreditForeignAcc': None, 'ExpenseOffsettingAccount': None, 'WipAccount': None, 'ExchangeRateDifferencesAcct': None, 'GoodsClearingAcct': None, 'NegativeInventoryAdjustmentAccount': None, 'CostInflationOffsetAccount': None, 'GLDecreaseAcct': None, 'GLIncreaseAcct': None, 'PAReturnAcct': None, 'PurchaseAcct': None, 'PurchaseOffsetAcct': None, 'ShippedGoodsAccount': None, 'StockInflationOffsetAccount': None, 'StockInflationAdjustAccount': None, 'VATInRevenueAccount': None, 'WipVarianceAccount': None, 'CostInflationAccount': None, 'WHIncomingCenvatAccount': None, 'WHOutgoingCenvatAccount': None, 'StockInTransitAccount': None, 'WipOffsetProfitAndLossAccount': None, 'InventoryOffsetProfitAndLossAccount': None, 'DefaultBin': None, 'DefaultBinEnforced': 'tNO', 'PurchaseBalanceAccount': None, 'ItemCode': 'ACC-0000003', 'ItemCycleCounts': []}, {'MinimalStock': 0.0, 'MaximalStock': 0.0, 'MinimalOrder': 0.0, 'StandardAveragePrice': 250.0, 'Locked': 'tNO', 'InventoryAccount': None, 'CostAccount': None, 'TransferAccount': None, 'RevenuesAccount': None, 'VarienceAccount': None, 'DecreasingAccount': None, 'IncreasingAccount': None, 'ReturningAccount': None, 'ExpensesAccount': None, 'EURevenuesAccount': None, 'EUExpensesAccount': None, 'ForeignRevenueAcc': None, 'ForeignExpensAcc': None, 'ExemptIncomeAcc': None, 'PriceDifferenceAcc': None, 'WarehouseCode': 'Arkan', 'InStock': 14.0, 'Committed': 0.0, 'Ordered': 0.0, 'CountedQuantity': 0.0, 'WasCounted': 'tNO', 'UserSignature': 50, 'Counted': 0.0, 'ExpenseClearingAct': None, 'PurchaseCreditAcc': None, 'EUPurchaseCreditAcc': None, 'ForeignPurchaseCreditAcc': None, 'SalesCreditAcc': None, 'SalesCreditEUAcc': None, 'ExemptedCredits': None, 'SalesCreditForeignAcc': None, 'ExpenseOffsettingAccount': None, 'WipAccount': None, 'ExchangeRateDifferencesAcct': None, 'GoodsClearingAcct': None, 'NegativeInventoryAdjustmentAccount': None, 'CostInflationOffsetAccount': None, 'GLDecreaseAcct': None, 'GLIncreaseAcct': None, 'PAReturnAcct': None, 'PurchaseAcct': None, 'PurchaseOffsetAcct': None, 'ShippedGoodsAccount': None, 'StockInflationOffsetAccount': None, 'StockInflationAdjustAccount': None, 'VATInRevenueAccount': None, 'WipVarianceAccount': None, 'CostInflationAccount': None, 'WHIncomingCenvatAccount': None, 'WHOutgoingCenvatAccount': None, 'StockInTransitAccount': None, 'WipOffsetProfitAndLossAccount': None, 'InventoryOffsetProfitAndLossAccount': None, 'DefaultBin': None, 'DefaultBinEnforced': 'tNO', 'PurchaseBalanceAccount': None, 'ItemCode': 'ACC-0000003', 'ItemCycleCounts': []}, {'MinimalStock': 0.0, 'MaximalStock': 0.0, 'MinimalOrder': 0.0, 'StandardAveragePrice': 0.0, 'Locked': 'tNO', 'InventoryAccount': None, 'CostAccount': None, 'TransferAccount': None, 'RevenuesAccount': None, 'VarienceAccount': None, 'DecreasingAccount': None, 'IncreasingAccount': None, 'ReturningAccount': None, 'ExpensesAccount': None, 'EURevenuesAccount': None, 'EUExpensesAccount': None, 'ForeignRevenueAcc': None, 'ForeignExpensAcc': None, 'ExemptIncomeAcc': None, 'PriceDifferenceAcc': None, 'WarehouseCode': 'DIP', 'InStock': 0.0, 'Committed': 0.0, 'Ordered': 0.0, 'CountedQuantity': 0.0, 'WasCounted': 'tNO', 'UserSignature': 50, 'Counted': 0.0, 'ExpenseClearingAct': None, 'PurchaseCreditAcc': None, 'EUPurchaseCreditAcc': None, 'ForeignPurchaseCreditAcc': None, 'SalesCreditAcc': None, 'SalesCreditEUAcc': None, 'ExemptedCredits': None, 'SalesCreditForeignAcc': None, 'ExpenseOffsettingAccount': None, 'WipAccount': None, 'ExchangeRateDifferencesAcct': None, 'GoodsClearingAcct': None, 'NegativeInventoryAdjustmentAccount': None, 'CostInflationOffsetAccount': None, 'GLDecreaseAcct': None, 'GLIncreaseAcct': None, 'PAReturnAcct': None, 'PurchaseAcct': None, 'PurchaseOffsetAcct': None, 'ShippedGoodsAccount': None, 'StockInflationOffsetAccount': None, 'StockInflationAdjustAccount': None, 'VATInRevenueAccount': None, 'WipVarianceAccount': None, 'CostInflationAccount': None, 'WHIncomingCenvatAccount': None, 'WHOutgoingCenvatAccount': None, 'StockInTransitAccount': None, 'WipOffsetProfitAndLossAccount': None, 'InventoryOffsetProfitAndLossAccount': None, 'DefaultBin': None, 'DefaultBinEnforced': 'tNO', 'PurchaseBalanceAccount': None, 'ItemCode': 'ACC-0000003', 'ItemCycleCounts': []}, {'MinimalStock': 0.0, 'MaximalStock': 0.0, 'MinimalOrder': 0.0, 'StandardAveragePrice': 250.0, 'Locked': 'tNO', 'InventoryAccount': None, 'CostAccount': None, 'TransferAccount': None, 'RevenuesAccount': None, 'VarienceAccount': None, 'DecreasingAccount': None, 'IncreasingAccount': None, 'ReturningAccount': None, 'ExpensesAccount': None, 'EURevenuesAccount': None, 'EUExpensesAccount': None, 'ForeignRevenueAcc': None, 'ForeignExpensAcc': None, 'ExemptIncomeAcc': None, 'PriceDifferenceAcc': None, 'WarehouseCode': 'INC', 'InStock': 0.0, 'Committed': 0.0, 'Ordered': 0.0, 'CountedQuantity': 0.0, 'WasCounted': 'tNO', 'UserSignature': 50, 'Counted': 0.0, 'ExpenseClearingAct': None, 'PurchaseCreditAcc': None, 'EUPurchaseCreditAcc': None, 'ForeignPurchaseCreditAcc': None, 'SalesCreditAcc': None, 'SalesCreditEUAcc': None, 'ExemptedCredits': None, 'SalesCreditForeignAcc': None, 'ExpenseOffsettingAccount': None, 'WipAccount': None, 'ExchangeRateDifferencesAcct': None, 'GoodsClearingAcct': None, 'NegativeInventoryAdjustmentAccount': None, 'CostInflationOffsetAccount': None, 'GLDecreaseAcct': None, 'GLIncreaseAcct': None, 'PAReturnAcct': None, 'PurchaseAcct': None, 'PurchaseOffsetAcct': None, 'ShippedGoodsAccount': None, 'StockInflationOffsetAccount': None, 'StockInflationAdjustAccount': None, 'VATInRevenueAccount': None, 'WipVarianceAccount': None, 'CostInflationAccount': None, 'WHIncomingCenvatAccount': None, 'WHOutgoingCenvatAccount': None, 'StockInTransitAccount': None, 'WipOffsetProfitAndLossAccount': None, 'InventoryOffsetProfitAndLossAccount': None, 'DefaultBin': None, 'DefaultBinEnforced': 'tNO', 'PurchaseBalanceAccount': None, 'ItemCode': 'ACC-0000003', 'ItemCycleCounts': []}, {'MinimalStock': 0.0, 'MaximalStock': 0.0, 'MinimalOrder': 0.0, 'StandardAveragePrice': 0.0, 'Locked': 'tNO', 'InventoryAccount': None, 'CostAccount': None, 'TransferAccount': None, 'RevenuesAccount': None, 'VarienceAccount': None, 'DecreasingAccount': None, 'IncreasingAccount': None, 'ReturningAccount': None, 'ExpensesAccount': None, 'EURevenuesAccount': None, 'EUExpensesAccount': None, 'ForeignRevenueAcc': None, 'ForeignExpensAcc': None, 'ExemptIncomeAcc': None, 'PriceDifferenceAcc': None, 'WarehouseCode': 'ONL', 'InStock': 0.0, 'Committed': 0.0, 'Ordered': 0.0, 'CountedQuantity': 0.0, 'WasCounted': 'tNO', 'UserSignature': 50, 'Counted': 0.0, 'ExpenseClearingAct': None, 'PurchaseCreditAcc': None, 'EUPurchaseCreditAcc': None, 'ForeignPurchaseCreditAcc': None, 'SalesCreditAcc': None, 'SalesCreditEUAcc': None, 'ExemptedCredits': None, 'SalesCreditForeignAcc': None, 'ExpenseOffsettingAccount': None, 'WipAccount': None, 'ExchangeRateDifferencesAcct': None, 'GoodsClearingAcct': None, 'NegativeInventoryAdjustmentAccount': None, 'CostInflationOffsetAccount': None, 'GLDecreaseAcct': None, 'GLIncreaseAcct': None, 'PAReturnAcct': None, 'PurchaseAcct': None, 'PurchaseOffsetAcct': None, 'ShippedGoodsAccount': None, 'StockInflationOffsetAccount': None, 'StockInflationAdjustAccount': None, 'VATInRevenueAccount': None, 'WipVarianceAccount': None, 'CostInflationAccount': None, 'WHIncomingCenvatAccount': None, 'WHOutgoingCenvatAccount': None, 'StockInTransitAccount': None, 'WipOffsetProfitAndLossAccount': None, 'InventoryOffsetProfitAndLossAccount': None, 'DefaultBin': None, 'DefaultBinEnforced': 'tNO', 'PurchaseBalanceAccount': None, 'ItemCode': 'ACC-0000003', 'ItemCycleCounts': []}, {'MinimalStock': 0.0, 'MaximalStock': 0.0, 'MinimalOrder': 0.0, 'StandardAveragePrice': 0.0, 'Locked': 'tNO', 'InventoryAccount': None, 'CostAccount': None, 'TransferAccount': None, 'RevenuesAccount': None, 'VarienceAccount': None, 'DecreasingAccount': None, 'IncreasingAccount': None, 'ReturningAccount': None, 'ExpensesAccount': None, 'EURevenuesAccount': None, 'EUExpensesAccount': None, 'ForeignRevenueAcc': None, 'ForeignExpensAcc': None, 'ExemptIncomeAcc': None, 'PriceDifferenceAcc': None, 'WarehouseCode': 'PHO', 'InStock': 0.0, 'Committed': 0.0, 'Ordered': 0.0, 'CountedQuantity': 0.0, 'WasCounted': 'tNO', 'UserSignature': 50, 'Counted': 0.0, 'ExpenseClearingAct': None, 'PurchaseCreditAcc': None, 'EUPurchaseCreditAcc': None, 'ForeignPurchaseCreditAcc': None, 'SalesCreditAcc': None, 'SalesCreditEUAcc': None, 'ExemptedCredits': None, 'SalesCreditForeignAcc': None, 'ExpenseOffsettingAccount': None, 'WipAccount': None, 'ExchangeRateDifferencesAcct': None, 'GoodsClearingAcct': None, 'NegativeInventoryAdjustmentAccount': None, 'CostInflationOffsetAccount': None, 'GLDecreaseAcct': None, 'GLIncreaseAcct': None, 'PAReturnAcct': None, 'PurchaseAcct': None, 'PurchaseOffsetAcct': None, 'ShippedGoodsAccount': None, 'StockInflationOffsetAccount': None, 'StockInflationAdjustAccount': None, 'VATInRevenueAccount': None, 'WipVarianceAccount': None, 'CostInflationAccount': None, 'WHIncomingCenvatAccount': None, 'WHOutgoingCenvatAccount': None, 'StockInTransitAccount': None, 'WipOffsetProfitAndLossAccount': None, 'InventoryOffsetProfitAndLossAccount': None, 'DefaultBin': None, 'DefaultBinEnforced': 'tNO', 'PurchaseBalanceAccount': None, 'ItemCode': 'ACC-0000003', 'ItemCycleCounts': []}, {'MinimalStock': 0.0, 'MaximalStock': 0.0, 'MinimalOrder': 0.0, 'StandardAveragePrice': 0.0, 'Locked': 'tNO', 'InventoryAccount': None, 'CostAccount': None, 'TransferAccount': None, 'RevenuesAccount': None, 'VarienceAccount': None, 'DecreasingAccount': None, 'IncreasingAccount': None, 'ReturningAccount': None, 'ExpensesAccount': None, 'EURevenuesAccount': None, 'EUExpensesAccount': None, 'ForeignRevenueAcc': None, 'ForeignExpensAcc': None, 'ExemptIncomeAcc': None, 'PriceDifferenceAcc': None, 'WarehouseCode': 'PHO-EX', 'InStock': 0.0, 'Committed': 0.0, 'Ordered': 0.0, 'CountedQuantity': 0.0, 'WasCounted': 'tNO', 'UserSignature': 1, 'Counted': 0.0, 'ExpenseClearingAct': None, 'PurchaseCreditAcc': None, 'EUPurchaseCreditAcc': None, 'ForeignPurchaseCreditAcc': None, 'SalesCreditAcc': None, 'SalesCreditEUAcc': None, 'ExemptedCredits': None, 'SalesCreditForeignAcc': None, 'ExpenseOffsettingAccount': None, 'WipAccount': None, 'ExchangeRateDifferencesAcct': None, 'GoodsClearingAcct': None, 'NegativeInventoryAdjustmentAccount': None, 'CostInflationOffsetAccount': None, 'GLDecreaseAcct': None, 'GLIncreaseAcct': None, 'PAReturnAcct': None, 'PurchaseAcct': None, 'PurchaseOffsetAcct': None, 'ShippedGoodsAccount': None, 'StockInflationOffsetAccount': None, 'StockInflationAdjustAccount': None, 'VATInRevenueAccount': None, 'WipVarianceAccount': None, 'CostInflationAccount': None, 'WHIncomingCenvatAccount': None, 'WHOutgoingCenvatAccount': None, 'StockInTransitAccount': None, 'WipOffsetProfitAndLossAccount': None, 'InventoryOffsetProfitAndLossAccount': None, 'DefaultBin': None, 'DefaultBinEnforced': 'tNO', 'PurchaseBalanceAccount': None, 'ItemCode': 'ACC-0000003', 'ItemCycleCounts': []}, {'MinimalStock': 0.0, 'MaximalStock': 0.0, 'MinimalOrder': 0.0, 'StandardAveragePrice': 0.0, 'Locked': 'tNO', 'InventoryAccount': None, 'CostAccount': None, 'TransferAccount': None, 'RevenuesAccount': None, 'VarienceAccount': None, 'DecreasingAccount': None, 'IncreasingAccount': None, 'ReturningAccount': None, 'ExpensesAccount': None, 'EURevenuesAccount': None, 'EUExpensesAccount': None, 'ForeignRevenueAcc': None, 'ForeignExpensAcc': None, 'ExemptIncomeAcc': None, 'PriceDifferenceAcc': None, 'WarehouseCode': 'PHO-IN', 'InStock': 0.0, 'Committed': 0.0, 'Ordered': 0.0, 'CountedQuantity': 0.0, 'WasCounted': 'tNO', 'UserSignature': 1, 'Counted': 0.0, 'ExpenseClearingAct': None, 'PurchaseCreditAcc': None, 'EUPurchaseCreditAcc': None, 'ForeignPurchaseCreditAcc': None, 'SalesCreditAcc': None, 'SalesCreditEUAcc': None, 'ExemptedCredits': None, 'SalesCreditForeignAcc': None, 'ExpenseOffsettingAccount': None, 'WipAccount': None, 'ExchangeRateDifferencesAcct': None, 'GoodsClearingAcct': None, 'NegativeInventoryAdjustmentAccount': None, 'CostInflationOffsetAccount': None, 'GLDecreaseAcct': None, 'GLIncreaseAcct': None, 'PAReturnAcct': None, 'PurchaseAcct': None, 'PurchaseOffsetAcct': None, 'ShippedGoodsAccount': None, 'StockInflationOffsetAccount': None, 'StockInflationAdjustAccount': None, 'VATInRevenueAccount': None, 'WipVarianceAccount': None, 'CostInflationAccount': None, 'WHIncomingCenvatAccount': None, 'WHOutgoingCenvatAccount': None, 'StockInTransitAccount': None, 'WipOffsetProfitAndLossAccount': None, 'InventoryOffsetProfitAndLossAccount': None, 'DefaultBin': None, 'DefaultBinEnforced': 'tNO', 'PurchaseBalanceAccount': None, 'ItemCode': 'ACC-0000003', 'ItemCycleCounts': []}, {'MinimalStock': 0.0, 'MaximalStock': 0.0, 'MinimalOrder': 0.0, 'StandardAveragePrice': 0.0, 'Locked': 'tNO', 'InventoryAccount': None, 'CostAccount': None, 'TransferAccount': None, 'RevenuesAccount': None, 'VarienceAccount': None, 'DecreasingAccount': None, 'IncreasingAccount': None, 'ReturningAccount': None, 'ExpensesAccount': None, 'EURevenuesAccount': None, 'EUExpensesAccount': None, 'ForeignRevenueAcc': None, 'ForeignExpensAcc': None, 'ExemptIncomeAcc': None, 'PriceDifferenceAcc': None, 'WarehouseCode': 'RTW', 'InStock': 0.0, 'Committed': 0.0, 'Ordered': 0.0, 'CountedQuantity': 0.0, 'WasCounted': 'tNO', 'UserSignature': 50, 'Counted': 0.0, 'ExpenseClearingAct': None, 'PurchaseCreditAcc': None, 'EUPurchaseCreditAcc': None, 'ForeignPurchaseCreditAcc': None, 'SalesCreditAcc': None, 'SalesCreditEUAcc': None, 'ExemptedCredits': None, 'SalesCreditForeignAcc': None, 'ExpenseOffsettingAccount': None, 'WipAccount': None, 'ExchangeRateDifferencesAcct': None, 'GoodsClearingAcct': None, 'NegativeInventoryAdjustmentAccount': None, 'CostInflationOffsetAccount': None, 'GLDecreaseAcct': None, 'GLIncreaseAcct': None, 'PAReturnAcct': None, 'PurchaseAcct': None, 'PurchaseOffsetAcct': None, 'ShippedGoodsAccount': None, 'StockInflationOffsetAccount': None, 'StockInflationAdjustAccount': None, 'VATInRevenueAccount': None, 'WipVarianceAccount': None, 'CostInflationAccount': None, 'WHIncomingCenvatAccount': None, 'WHOutgoingCenvatAccount': None, 'StockInTransitAccount': None, 'WipOffsetProfitAndLossAccount': None, 'InventoryOffsetProfitAndLossAccount': None, 'DefaultBin': None, 'DefaultBinEnforced': 'tNO', 'PurchaseBalanceAccount': None, 'ItemCode': 'ACC-0000003', 'ItemCycleCounts': []}, {'MinimalStock': 0.0, 'MaximalStock': 0.0, 'MinimalOrder': 0.0, 'StandardAveragePrice': 0.0, 'Locked': 'tNO', 'InventoryAccount': None, 'CostAccount': None, 'TransferAccount': None, 'RevenuesAccount': None, 'VarienceAccount': None, 'DecreasingAccount': None, 'IncreasingAccount': None, 'ReturningAccount': None, 'ExpensesAccount': None, 'EURevenuesAccount': None, 'EUExpensesAccount': None, 'ForeignRevenueAcc': None, 'ForeignExpensAcc': None, 'ExemptIncomeAcc': None, 'PriceDifferenceAcc': None, 'WarehouseCode': 'RTWH', 'InStock': 0.0, 'Committed': 0.0, 'Ordered': 0.0, 'CountedQuantity': 0.0, 'WasCounted': 'tNO', 'UserSignature': 1, 'Counted': 0.0, 'ExpenseClearingAct': None, 'PurchaseCreditAcc': None, 'EUPurchaseCreditAcc': None, 'ForeignPurchaseCreditAcc': None, 'SalesCreditAcc': None, 'SalesCreditEUAcc': None, 'ExemptedCredits': None, 'SalesCreditForeignAcc': None, 'ExpenseOffsettingAccount': None, 'WipAccount': None, 'ExchangeRateDifferencesAcct': None, 'GoodsClearingAcct': None, 'NegativeInventoryAdjustmentAccount': None, 'CostInflationOffsetAccount': None, 'GLDecreaseAcct': None, 'GLIncreaseAcct': None, 'PAReturnAcct': None, 'PurchaseAcct': None, 'PurchaseOffsetAcct': None, 'ShippedGoodsAccount': None, 'StockInflationOffsetAccount': None, 'StockInflationAdjustAccount': None, 'VATInRevenueAccount': None, 'WipVarianceAccount': None, 'CostInflationAccount': None, 'WHIncomingCenvatAccount': None, 'WHOutgoingCenvatAccount': None, 'StockInTransitAccount': None, 'WipOffsetProfitAndLossAccount': None, 'InventoryOffsetProfitAndLossAccount': None, 'DefaultBin': None, 'DefaultBinEnforced': 'tNO', 'PurchaseBalanceAccount': None, 'ItemCode': 'ACC-0000003', 'ItemCycleCounts': []}, {'MinimalStock': 0.0, 'MaximalStock': 0.0, 'MinimalOrder': 0.0, 'StandardAveragePrice': 0.0, 'Locked': 'tNO', 'InventoryAccount': None, 'CostAccount': None, 'TransferAccount': None, 'RevenuesAccount': None, 'VarienceAccount': None, 'DecreasingAccount': None, 'IncreasingAccount': None, 'ReturningAccount': None, 'ExpensesAccount': None, 'EURevenuesAccount': None, 'EUExpensesAccount': None, 'ForeignRevenueAcc': None, 'ForeignExpensAcc': None, 'ExemptIncomeAcc': None, 'PriceDifferenceAcc': None, 'WarehouseCode': 'SW', 'InStock': 0.0, 'Committed': 0.0, 'Ordered': 0.0, 'CountedQuantity': 0.0, 'WasCounted': 'tNO', 'UserSignature': 50, 'Counted': 0.0, 'ExpenseClearingAct': None, 'PurchaseCreditAcc': None, 'EUPurchaseCreditAcc': None, 'ForeignPurchaseCreditAcc': None, 'SalesCreditAcc': None, 'SalesCreditEUAcc': None, 'ExemptedCredits': None, 'SalesCreditForeignAcc': None, 'ExpenseOffsettingAccount': None, 'WipAccount': None, 'ExchangeRateDifferencesAcct': None, 'GoodsClearingAcct': None, 'NegativeInventoryAdjustmentAccount': None, 'CostInflationOffsetAccount': None, 'GLDecreaseAcct': None, 'GLIncreaseAcct': None, 'PAReturnAcct': None, 'PurchaseAcct': None, 'PurchaseOffsetAcct': None, 'ShippedGoodsAccount': None, 'StockInflationOffsetAccount': None, 'StockInflationAdjustAccount': None, 'VATInRevenueAccount': None, 'WipVarianceAccount': None, 'CostInflationAccount': None, 'WHIncomingCenvatAccount': None, 'WHOutgoingCenvatAccount': None, 'StockInTransitAccount': None, 'WipOffsetProfitAndLossAccount': None, 'InventoryOffsetProfitAndLossAccount': None, 'DefaultBin': None, 'DefaultBinEnforced': 'tNO', 'PurchaseBalanceAccount': None, 'ItemCode': 'ACC-0000003', 'ItemCycleCounts': []}, {'MinimalStock': 0.0, 'MaximalStock': 0.0, 'MinimalOrder': 0.0, 'StandardAveragePrice': 0.0, 'Locked': 'tNO', 'InventoryAccount': None, 'CostAccount': None, 'TransferAccount': None, 'RevenuesAccount': None, 'VarienceAccount': None, 'DecreasingAccount': None, 'IncreasingAccount': None, 'ReturningAccount': None, 'ExpensesAccount': None, 'EURevenuesAccount': None, 'EUExpensesAccount': None, 'ForeignRevenueAcc': None, 'ForeignExpensAcc': None, 'ExemptIncomeAcc': None, 'PriceDifferenceAcc': None, 'WarehouseCode': 'WLS', 'InStock': 0.0, 'Committed': 0.0, 'Ordered': 0.0, 'CountedQuantity': 0.0, 'WasCounted': 'tNO', 'UserSignature': 50, 'Counted': 0.0, 'ExpenseClearingAct': None, 'PurchaseCreditAcc': None, 'EUPurchaseCreditAcc': None, 'ForeignPurchaseCreditAcc': None, 'SalesCreditAcc': None, 'SalesCreditEUAcc': None, 'ExemptedCredits': None, 'SalesCreditForeignAcc': None, 'ExpenseOffsettingAccount': None, 'WipAccount': None, 'ExchangeRateDifferencesAcct': None, 'GoodsClearingAcct': None, 'NegativeInventoryAdjustmentAccount': None, 'CostInflationOffsetAccount': None, 'GLDecreaseAcct': None, 'GLIncreaseAcct': None, 'PAReturnAcct': None, 'PurchaseAcct': None, 'PurchaseOffsetAcct': None, 'ShippedGoodsAccount': None, 'StockInflationOffsetAccount': None, 'StockInflationAdjustAccount': None, 'VATInRevenueAccount': None, 'WipVarianceAccount': None, 'CostInflationAccount': None, 'WHIncomingCenvatAccount': None, 'WHOutgoingCenvatAccount': None, 'StockInTransitAccount': None, 'WipOffsetProfitAndLossAccount': None, 'InventoryOffsetProfitAndLossAccount': None, 'DefaultBin': None, 'DefaultBinEnforced': 'tNO', 'PurchaseBalanceAccount': None, 'ItemCode': 'ACC-0000003', 'ItemCycleCounts': []}, {'MinimalStock': 0.0, 'MaximalStock': 0.0, 'MinimalOrder': 0.0, 'StandardAveragePrice': 0.0, 'Locked': 'tNO', 'InventoryAccount': None, 'CostAccount': None, 'TransferAccount': None, 'RevenuesAccount': None, 'VarienceAccount': None, 'DecreasingAccount': None, 'IncreasingAccount': None, 'ReturningAccount': None, 'ExpensesAccount': None, 'EURevenuesAccount': None, 'EUExpensesAccount': None, 'ForeignRevenueAcc': None, 'ForeignExpensAcc': None, 'ExemptIncomeAcc': None, 'PriceDifferenceAcc': None, 'WarehouseCode': 'WW', 'InStock': 0.0, 'Committed': 0.0, 'Ordered': 0.0, 'CountedQuantity': 0.0, 'WasCounted': 'tNO', 'UserSignature': 50, 'Counted': 0.0, 'ExpenseClearingAct': None, 'PurchaseCreditAcc': None, 'EUPurchaseCreditAcc': None, 'ForeignPurchaseCreditAcc': None, 'SalesCreditAcc': None, 'SalesCreditEUAcc': None, 'ExemptedCredits': None, 'SalesCreditForeignAcc': None, 'ExpenseOffsettingAccount': None, 'WipAccount': None, 'ExchangeRateDifferencesAcct': None, 'GoodsClearingAcct': None, 'NegativeInventoryAdjustmentAccount': None, 'CostInflationOffsetAccount': None, 'GLDecreaseAcct': None, 'GLIncreaseAcct': None, 'PAReturnAcct': None, 'PurchaseAcct': None, 'PurchaseOffsetAcct': None, 'ShippedGoodsAccount': None, 'StockInflationOffsetAccount': None, 'StockInflationAdjustAccount': None, 'VATInRevenueAccount': None, 'WipVarianceAccount': None, 'CostInflationAccount': None, 'WHIncomingCenvatAccount': None, 'WHOutgoingCenvatAccount': None, 'StockInTransitAccount': None, 'WipOffsetProfitAndLossAccount': None, 'InventoryOffsetProfitAndLossAccount': None, 'DefaultBin': None, 'DefaultBinEnforced': 'tNO', 'PurchaseBalanceAccount': None, 'ItemCode': 'ACC-0000003', 'ItemCycleCounts': []}, {'MinimalStock': 0.0, 'MaximalStock': 0.0, 'MinimalOrder': 0.0, 'StandardAveragePrice': 0.0, 'Locked': 'tNO', 'InventoryAccount': None, 'CostAccount': None, 'TransferAccount': None, 'RevenuesAccount': None, 'VarienceAccount': None, 'DecreasingAccount': None, 'IncreasingAccount': None, 'ReturningAccount': None, 'ExpensesAccount': None, 'EURevenuesAccount': None, 'EUExpensesAccount': None, 'ForeignRevenueAcc': None, 'ForeignExpensAcc': None, 'ExemptIncomeAcc': None, 'PriceDifferenceAcc': None, 'WarehouseCode': 'WW-CON', 'InStock': 0.0, 'Committed': 0.0, 'Ordered': 0.0, 'CountedQuantity': 0.0, 'WasCounted': 'tNO', 'UserSignature': 50, 'Counted': 0.0, 'ExpenseClearingAct': None, 'PurchaseCreditAcc': None, 'EUPurchaseCreditAcc': None, 'ForeignPurchaseCreditAcc': None, 'SalesCreditAcc': None, 'SalesCreditEUAcc': None, 'ExemptedCredits': None, 'SalesCreditForeignAcc': None, 'ExpenseOffsettingAccount': None, 'WipAccount': None, 'ExchangeRateDifferencesAcct': None, 'GoodsClearingAcct': None, 'NegativeInventoryAdjustmentAccount': None, 'CostInflationOffsetAccount': None, 'GLDecreaseAcct': None, 'GLIncreaseAcct': None, 'PAReturnAcct': None, 'PurchaseAcct': None, 'PurchaseOffsetAcct': None, 'ShippedGoodsAccount': None, 'StockInflationOffsetAccount': None, 'StockInflationAdjustAccount': None, 'VATInRevenueAccount': None, 'WipVarianceAccount': None, 'CostInflationAccount': None, 'WHIncomingCenvatAccount': None, 'WHOutgoingCenvatAccount': None, 'StockInTransitAccount': None, 'WipOffsetProfitAndLossAccount': None, 'InventoryOffsetProfitAndLossAccount': None, 'DefaultBin': None, 'DefaultBinEnforced': 'tNO', 'PurchaseBalanceAccount': None, 'ItemCode': 'ACC-0000003', 'ItemCycleCounts': []}, {'MinimalStock': 0.0, 'MaximalStock': 0.0, 'MinimalOrder': 0.0, 'StandardAveragePrice': 0.0, 'Locked': 'tNO', 'InventoryAccount': None, 'CostAccount': None, 'TransferAccount': None, 'RevenuesAccount': None, 'VarienceAccount': None, 'DecreasingAccount': None, 'IncreasingAccount': None, 'ReturningAccount': None, 'ExpensesAccount': None, 'EURevenuesAccount': None, 'EUExpensesAccount': None, 'ForeignRevenueAcc': None, 'ForeignExpensAcc': None, 'ExemptIncomeAcc': None, 'PriceDifferenceAcc': None, 'WarehouseCode': 'WW-DAM', 'InStock': 0.0, 'Committed': 0.0, 'Ordered': 0.0, 'CountedQuantity': 0.0, 'WasCounted': 'tNO', 'UserSignature': 50, 'Counted': 0.0, 'ExpenseClearingAct': None, 'PurchaseCreditAcc': None, 'EUPurchaseCreditAcc': None, 'ForeignPurchaseCreditAcc': None, 'SalesCreditAcc': None, 'SalesCreditEUAcc': None, 'ExemptedCredits': None, 'SalesCreditForeignAcc': None, 'ExpenseOffsettingAccount': None, 'WipAccount': None, 'ExchangeRateDifferencesAcct': None, 'GoodsClearingAcct': None, 'NegativeInventoryAdjustmentAccount': None, 'CostInflationOffsetAccount': None, 'GLDecreaseAcct': None, 'GLIncreaseAcct': None, 'PAReturnAcct': None, 'PurchaseAcct': None, 'PurchaseOffsetAcct': None, 'ShippedGoodsAccount': None, 'StockInflationOffsetAccount': None, 'StockInflationAdjustAccount': None, 'VATInRevenueAccount': None, 'WipVarianceAccount': None, 'CostInflationAccount': None, 'WHIncomingCenvatAccount': None, 'WHOutgoingCenvatAccount': None, 'StockInTransitAccount': None, 'WipOffsetProfitAndLossAccount': None, 'InventoryOffsetProfitAndLossAccount': None, 'DefaultBin': None, 'DefaultBinEnforced': 'tNO', 'PurchaseBalanceAccount': None, 'ItemCode': 'ACC-0000003', 'ItemCycleCounts': []}, {'MinimalStock': 0.0, 'MaximalStock': 0.0, 'MinimalOrder': 0.0, 'StandardAveragePrice': 0.0, 'Locked': 'tNO', 'InventoryAccount': None, 'CostAccount': None, 'TransferAccount': None, 'RevenuesAccount': None, 'VarienceAccount': None, 'DecreasingAccount': None, 'IncreasingAccount': None, 'ReturningAccount': None, 'ExpensesAccount': None, 'EURevenuesAccount': None, 'EUExpensesAccount': None, 'ForeignRevenueAcc': None, 'ForeignExpensAcc': None, 'ExemptIncomeAcc': None, 'PriceDifferenceAcc': None, 'WarehouseCode': 'WW-REP', 'InStock': 0.0, 'Committed': 0.0, 'Ordered': 0.0, 'CountedQuantity': 0.0, 'WasCounted': 'tNO', 'UserSignature': 50, 'Counted': 0.0, 'ExpenseClearingAct': None, 'PurchaseCreditAcc': None, 'EUPurchaseCreditAcc': None, 'ForeignPurchaseCreditAcc': None, 'SalesCreditAcc': None, 'SalesCreditEUAcc': None, 'ExemptedCredits': None, 'SalesCreditForeignAcc': None, 'ExpenseOffsettingAccount': None, 'WipAccount': None, 'ExchangeRateDifferencesAcct': None, 'GoodsClearingAcct': None, 'NegativeInventoryAdjustmentAccount': None, 'CostInflationOffsetAccount': None, 'GLDecreaseAcct': None, 'GLIncreaseAcct': None, 'PAReturnAcct': None, 'PurchaseAcct': None, 'PurchaseOffsetAcct': None, 'ShippedGoodsAccount': None, 'StockInflationOffsetAccount': None, 'StockInflationAdjustAccount': None, 'VATInRevenueAccount': None, 'WipVarianceAccount': None, 'CostInflationAccount': None, 'WHIncomingCenvatAccount': None, 'WHOutgoingCenvatAccount': None, 'StockInTransitAccount': None, 'WipOffsetProfitAndLossAccount': None, 'InventoryOffsetProfitAndLossAccount': None, 'DefaultBin': None, 'DefaultBinEnforced': 'tNO', 'PurchaseBalanceAccount': None, 'ItemCode': 'ACC-0000003', 'ItemCycleCounts': []}, {'MinimalStock': 0.0, 'MaximalStock': 0.0, 'MinimalOrder': 0.0, 'StandardAveragePrice': 0.0, 'Locked': 'tNO', 'InventoryAccount': None, 'CostAccount': None, 'TransferAccount': None, 'RevenuesAccount': None, 'VarienceAccount': None, 'DecreasingAccount': None, 'IncreasingAccount': None, 'ReturningAccount': None, 'ExpensesAccount': None, 'EURevenuesAccount': None, 'EUExpensesAccount': None, 'ForeignRevenueAcc': None, 'ForeignExpensAcc': None, 'ExemptIncomeAcc': None, 'PriceDifferenceAcc': None, 'WarehouseCode': 'WW-SAM', 'InStock': 0.0, 'Committed': 0.0, 'Ordered': 0.0, 'CountedQuantity': 0.0, 'WasCounted': 'tNO', 'UserSignature': 50, 'Counted': 0.0, 'ExpenseClearingAct': None, 'PurchaseCreditAcc': None, 'EUPurchaseCreditAcc': None, 'ForeignPurchaseCreditAcc': None, 'SalesCreditAcc': None, 'SalesCreditEUAcc': None, 'ExemptedCredits': None, 'SalesCreditForeignAcc': None, 'ExpenseOffsettingAccount': None, 'WipAccount': None, 'ExchangeRateDifferencesAcct': None, 'GoodsClearingAcct': None, 'NegativeInventoryAdjustmentAccount': None, 'CostInflationOffsetAccount': None, 'GLDecreaseAcct': None, 'GLIncreaseAcct': None, 'PAReturnAcct': None, 'PurchaseAcct': None, 'PurchaseOffsetAcct': None, 'ShippedGoodsAccount': None, 'StockInflationOffsetAccount': None, 'StockInflationAdjustAccount': None, 'VATInRevenueAccount': None, 'WipVarianceAccount': None, 'CostInflationAccount': None, 'WHIncomingCenvatAccount': None, 'WHOutgoingCenvatAccount': None, 'StockInTransitAccount': None, 'WipOffsetProfitAndLossAccount': None, 'InventoryOffsetProfitAndLossAccount': None, 'DefaultBin': None, 'DefaultBinEnforced': 'tNO', 'PurchaseBalanceAccount': None, 'ItemCode': 'ACC-0000003', 'ItemCycleCounts': []}, {'MinimalStock': 0.0, 'MaximalStock': 0.0, 'MinimalOrder': 0.0, 'StandardAveragePrice': 0.0, 'Locked': 'tNO', 'InventoryAccount': None, 'CostAccount': None, 'TransferAccount': None, 'RevenuesAccount': None, 'VarienceAccount': None, 'DecreasingAccount': None, 'IncreasingAccount': None, 'ReturningAccount': None, 'ExpensesAccount': None, 'EURevenuesAccount': None, 'EUExpensesAccount': None, 'ForeignRevenueAcc': None, 'ForeignExpensAcc': None, 'ExemptIncomeAcc': None, 'PriceDifferenceAcc': None, 'WarehouseCode': 'WW-WIP', 'InStock': 0.0, 'Committed': 0.0, 'Ordered': 0.0, 'CountedQuantity': 0.0, 'WasCounted': 'tNO', 'UserSignature': 50, 'Counted': 0.0, 'ExpenseClearingAct': None, 'PurchaseCreditAcc': None, 'EUPurchaseCreditAcc': None, 'ForeignPurchaseCreditAcc': None, 'SalesCreditAcc': None, 'SalesCreditEUAcc': None, 'ExemptedCredits': None, 'SalesCreditForeignAcc': None, 'ExpenseOffsettingAccount': None, 'WipAccount': None, 'ExchangeRateDifferencesAcct': None, 'GoodsClearingAcct': None, 'NegativeInventoryAdjustmentAccount': None, 'CostInflationOffsetAccount': None, 'GLDecreaseAcct': None, 'GLIncreaseAcct': None, 'PAReturnAcct': None, 'PurchaseAcct': None, 'PurchaseOffsetAcct': None, 'ShippedGoodsAccount': None, 'StockInflationOffsetAccount': None, 'StockInflationAdjustAccount': None, 'VATInRevenueAccount': None, 'WipVarianceAccount': None, 'CostInflationAccount': None, 'WHIncomingCenvatAccount': None, 'WHOutgoingCenvatAccount': None, 'StockInTransitAccount': None, 'WipOffsetProfitAndLossAccount': None, 'InventoryOffsetProfitAndLossAccount': None, 'DefaultBin': None, 'DefaultBinEnforced': 'tNO', 'PurchaseBalanceAccount': None, 'ItemCode': 'ACC-0000003', 'ItemCycleCounts': []}, {'MinimalStock': 0.0, 'MaximalStock': 0.0, 'MinimalOrder': 0.0, 'StandardAveragePrice': 0.0, 'Locked': 'tNO', 'InventoryAccount': None, 'CostAccount': None, 'TransferAccount': None, 'RevenuesAccount': None, 'VarienceAccount': None, 'DecreasingAccount': None, 'IncreasingAccount': None, 'ReturningAccount': None, 'ExpensesAccount': None, 'EURevenuesAccount': None, 'EUExpensesAccount': None, 'ForeignRevenueAcc': None, 'ForeignExpensAcc': None, 'ExemptIncomeAcc': None, 'PriceDifferenceAcc': None, 'WarehouseCode': 'ZW', 'InStock': 0.0, 'Committed': 0.0, 'Ordered': 0.0, 'CountedQuantity': 0.0, 'WasCounted': 'tNO', 'UserSignature': 50, 'Counted': 0.0, 'ExpenseClearingAct': None, 'PurchaseCreditAcc': None, 'EUPurchaseCreditAcc': None, 'ForeignPurchaseCreditAcc': None, 'SalesCreditAcc': None, 'SalesCreditEUAcc': None, 'ExemptedCredits': None, 'SalesCreditForeignAcc': None, 'ExpenseOffsettingAccount': None, 'WipAccount': None, 'ExchangeRateDifferencesAcct': None, 'GoodsClearingAcct': None, 'NegativeInventoryAdjustmentAccount': None, 'CostInflationOffsetAccount': None, 'GLDecreaseAcct': None, 'GLIncreaseAcct': None, 'PAReturnAcct': None, 'PurchaseAcct': None, 'PurchaseOffsetAcct': None, 'ShippedGoodsAccount': None, 'StockInflationOffsetAccount': None, 'StockInflationAdjustAccount': None, 'VATInRevenueAccount': None, 'WipVarianceAccount': None, 'CostInflationAccount': None, 'WHIncomingCenvatAccount': None, 'WHOutgoingCenvatAccount': None, 'StockInTransitAccount': None, 'WipOffsetProfitAndLossAccount': None, 'InventoryOffsetProfitAndLossAccount': None, 'DefaultBin': None, 'DefaultBinEnforced': 'tNO', 'PurchaseBalanceAccount': None, 'ItemCode': 'ACC-0000003', 'ItemCycleCounts': []}], 'ItemPreferredVendors': [], 'ItemLocalizationInfos': [], 'ItemProjects': [], 'ItemDistributionRules': [], 'ItemAttributeGroups': [], 'ItemDepreciationParameters': [], 'ItemPeriodControls': [], 'ItemUnitOfMeasurementCollection': [{'UoMType': 'iutInventory', 'UoMEntry': 1, 'DefaultBarcode': 0, 'DefaultPackage': None, 'Length1': 0.0, 'Length1Unit': None, 'Length2': 0.0, 'Length2Unit': None, 'Width1': 0.0, 'Width1Unit': None, 'Width2': 0.0, 'Width2Unit': None, 'Height1': 0.0, 'Height1Unit': None, 'Height2': 0.0, 'Height2Unit': None, 'Volume': 0.0, 'VolumeUnit': None, 'Weight1': 0.0, 'Weight1Unit': None, 'Weight2': 0.0, 'Weight2Unit': None, 'ItemUoMPackageCollection': []}, {'UoMType': 'iutPurchasing', 'UoMEntry': 1, 'DefaultBarcode': 0, 'DefaultPackage': None, 'Length1': 0.0, 'Length1Unit': None, 'Length2': 0.0, 'Length2Unit': None, 'Width1': 0.0, 'Width1Unit': None, 'Width2': 0.0, 'Width2Unit': None, 'Height1': 0.0, 'Height1Unit': None, 'Height2': 0.0, 'Height2Unit': None, 'Volume': 0.0, 'VolumeUnit': 2, 'Weight1': 0.0, 'Weight1Unit': None, 'Weight2': 0.0, 'Weight2Unit': None, 'ItemUoMPackageCollection': []}, {'UoMType': 'iutPurchasing', 'UoMEntry': 8, 'DefaultBarcode': None, 'DefaultPackage': None, 'Length1': 0.0, 'Length1Unit': None, 'Length2': 0.0, 'Length2Unit': None, 'Width1': 0.0, 'Width1Unit': None, 'Width2': 0.0, 'Width2Unit': None, 'Height1': 0.0, 'Height1Unit': None, 'Height2': 0.0, 'Height2Unit': None, 'Volume': 0.0, 'VolumeUnit': 4, 'Weight1': 0.0, 'Weight1Unit': None, 'Weight2': 0.0, 'Weight2Unit': None, 'ItemUoMPackageCollection': []}, {'UoMType': 'iutSales', 'UoMEntry': 1, 'DefaultBarcode': 0, 'DefaultPackage': None, 'Length1': 0.0, 'Length1Unit': None, 'Length2': 0.0, 'Length2Unit': None, 'Width1': 0.0, 'Width1Unit': None, 'Width2': 0.0, 'Width2Unit': None, 'Height1': 0.0, 'Height1Unit': None, 'Height2': 0.0, 'Height2Unit': None, 'Volume': 0.0, 'VolumeUnit': 2, 'Weight1': 0.0, 'Weight1Unit': None, 'Weight2': 0.0, 'Weight2Unit': None, 'ItemUoMPackageCollection': []}, {'UoMType': 'iutSales', 'UoMEntry': 8, 'DefaultBarcode': None, 'DefaultPackage': None, 'Length1': 0.0, 'Length1Unit': None, 'Length2': 0.0, 'Length2Unit': None, 'Width1': 0.0, 'Width1Unit': None, 'Width2': 0.0, 'Width2Unit': None, 'Height1': 0.0, 'Height1Unit': None, 'Height2': 0.0, 'Height2Unit': None, 'Volume': 0.0, 'VolumeUnit': 4, 'Weight1': 0.0, 'Weight1Unit': None, 'Weight2': 0.0, 'Weight2Unit': None, 'ItemUoMPackageCollection': []}], 'ItemBarCodeCollection': [], 'ItemIntrastatExtension': {'ItemCode': 'ACC-0000003', 'CommodityCode': None, 'SupplementaryUnit': None, 'FactorOfSupplementaryUnit': 0.0, 'ImportRegionState': 0, 'ExportRegionState': 0, 'ImportNatureOfTransaction': None, 'ExportNatureOfTransaction': None, 'ImportStatisticalProcedure': None, 'ExportStatisticalProcedure': None, 'CountryOfOrigin': None, 'ServiceCode': None, 'Type': 'dDocument_Items', 'ServiceSupplyMethod': 'ssmImmediate', 'ServicePaymentMethod': 'spmOther', 'ImportRegionCountry': 'GB', 'ExportRegionCountry': 'GB', 'UseWeightInCalculation': 'tYES', 'IntrastatRelevant': 'tNO', 'StatisticalCode': None}}, {'ItemCode': 'ACC-0000004', 'ItemName': 'Earring / Bracelet Plates 10*10 CM', 'ForeignName': None, 'ItemsGroupCode': 110, 'CustomsGroupCode': -1, 'SalesVATGroup': 'X0', 'BarCode': None, 'VatLiable': 'tYES', 'PurchaseItem': 'tYES', 'SalesItem': 'tNO', 'InventoryItem': 'tYES', 'IncomeAccount': None, 'ExemptIncomeAccount': None, 'ExpanseAccount': None, 'Mainsupplier': None, 'SupplierCatalogNo': None, 'DesiredInventory': 0.0, 'MinInventory': 0.0, 'Picture': None, 'User_Text': None, 'SerialNum': None, 'CommissionPercent': 0.0, 'CommissionSum': 0.0, 'CommissionGroup': 0, 'TreeType': 'iNotATree', 'AssetItem': 'tNO', 'DataExportCode': None, 'Manufacturer': -1, 'QuantityOnStock': 35.0, 'QuantityOrderedFromVendors': 0.0, 'QuantityOrderedByCustomers': 0.0, 'ManageSerialNumbers': 'tNO', 'ManageBatchNumbers': 'tNO', 'Valid': 'tYES', 'ValidFrom': None, 'ValidTo': None, 'ValidRemarks': None, 'Frozen': 'tNO', 'FrozenFrom': None, 'FrozenTo': None, 'FrozenRemarks': None, 'SalesUnit': None, 'SalesItemsPerUnit': 1.0, 'SalesPackagingUnit': None, 'SalesQtyPerPackUnit': 1.0, 'SalesUnitLength': None, 'SalesLengthUnit': None, 'SalesUnitWidth': None, 'SalesWidthUnit': None, 'SalesUnitHeight': None, 'SalesHeightUnit': None, 'SalesUnitVolume': 0.0, 'SalesVolumeUnit': 4, 'SalesUnitWeight': None, 'SalesWeightUnit': None, 'PurchaseUnit': None, 'PurchaseItemsPerUnit': 1.0, 'PurchasePackagingUnit': None, 'PurchaseQtyPerPackUnit': 1.0, 'PurchaseUnitLength': None, 'PurchaseLengthUnit': None, 'PurchaseUnitWidth': None, 'PurchaseWidthUnit': None, 'PurchaseUnitHeight': None, 'PurchaseHeightUnit': None, 'PurchaseUnitVolume': 0.0, 'PurchaseVolumeUnit': 4, 'PurchaseUnitWeight': None, 'PurchaseWeightUnit': None, 'PurchaseVATGroup': 'X1', 'SalesFactor1': 1.0, 'SalesFactor2': 1.0, 'SalesFactor3': 1.0, 'SalesFactor4': 1.0, 'PurchaseFactor1': 1.0, 'PurchaseFactor2': 1.0, 'PurchaseFactor3': 1.0, 'PurchaseFactor4': 1.0, 'MovingAveragePrice': 0.0, 'ForeignRevenuesAccount': None, 'ECRevenuesAccount': None, 'ForeignExpensesAccount': None, 'ECExpensesAccount': None, 'AvgStdPrice': 0.0, 'DefaultWarehouse': None, 'ShipType': None, 'GLMethod': 'glm_ItemClass', 'TaxType': 'tt_Yes', 'MaxInventory': 0.0, 'ManageStockByWarehouse': 'tNO', 'PurchaseHeightUnit1': None, 'PurchaseUnitHeight1': None, 'PurchaseLengthUnit1': None, 'PurchaseUnitLength1': None, 'PurchaseWeightUnit1': None, 'PurchaseUnitWeight1': None, 'PurchaseWidthUnit1': None, 'PurchaseUnitWidth1': None, 'SalesHeightUnit1': None, 'SalesUnitHeight1': None, 'SalesLengthUnit1': None, 'SalesUnitLength1': None, 'SalesWeightUnit1': None, 'SalesUnitWeight1': None, 'SalesWidthUnit1': None, 'SalesUnitWidth1': None, 'ForceSelectionOfSerialNumber': 'tYES', 'ManageSerialNumbersOnReleaseOnly': 'tNO', 'WTLiable': 'tNO', 'CostAccountingMethod': 'bis_MovingAverage', 'SWW': None, 'WarrantyTemplate': '', 'IndirectTax': 'tNO', 'ArTaxCode': None, 'ApTaxCode': None, 'BaseUnitName': None, 'ItemCountryOrg': None, 'IssueMethod': 'im_Backflush', 'SRIAndBatchManageMethod': 'bomm_OnEveryTransaction', 'IsPhantom': 'tNO', 'InventoryUOM': 'Piece', 'PlanningSystem': 'bop_None', 'ProcurementMethod': 'bom_Buy', 'ComponentWarehouse': 'bomcw_BOM', 'OrderIntervals': None, 'OrderMultiple': 0.0, 'LeadTime': None, 'MinOrderQuantity': 0.0, 'ItemType': 'itItems', 'ItemClass': 'itcMaterial', 'OutgoingServiceCode': -1, 'IncomingServiceCode': -1, 'ServiceGroup': -1, 'NCMCode': -1, 'MaterialType': 'mt_FinishedGoods', 'MaterialGroup': -1, 'ProductSource': '', 'Properties1': 'tNO', 'Properties2': 'tNO', 'Properties3': 'tNO', 'Properties4': 'tNO', 'Properties5': 'tNO', 'Properties6': 'tNO', 'Properties7': 'tNO', 'Properties8': 'tNO', 'Properties9': 'tNO', 'Properties10': 'tNO', 'Properties11': 'tNO', 'Properties12': 'tNO', 'Properties13': 'tNO', 'Properties14': 'tNO', 'Properties15': 'tNO', 'Properties16': 'tNO', 'Properties17': 'tNO', 'Properties18': 'tNO', 'Properties19': 'tNO', 'Properties20': 'tNO', 'Properties21': 'tNO', 'Properties22': 'tNO', 'Properties23': 'tNO', 'Properties24': 'tNO', 'Properties25': 'tNO', 'Properties26': 'tNO', 'Properties27': 'tNO', 'Properties28': 'tNO', 'Properties29': 'tNO', 'Properties30': 'tNO', 'Properties31': 'tNO', 'Properties32': 'tNO', 'Properties33': 'tNO', 'Properties34': 'tNO', 'Properties35': 'tNO', 'Properties36': 'tNO', 'Properties37': 'tNO', 'Properties38': 'tNO', 'Properties39': 'tNO', 'Properties40': 'tNO', 'Properties41': 'tNO', 'Properties42': 'tNO', 'Properties43': 'tNO', 'Properties44': 'tNO', 'Properties45': 'tNO', 'Properties46': 'tNO', 'Properties47': 'tNO', 'Properties48': 'tNO', 'Properties49': 'tNO', 'Properties50': 'tNO', 'Properties51': 'tNO', 'Properties52': 'tNO', 'Properties53': 'tNO', 'Properties54': 'tNO', 'Properties55': 'tNO', 'Properties56': 'tNO', 'Properties57': 'tNO', 'Properties58': 'tNO', 'Properties59': 'tNO', 'Properties60': 'tNO', 'Properties61': 'tNO', 'Properties62': 'tNO', 'Properties63': 'tNO', 'Properties64': 'tNO', 'AutoCreateSerialNumbersOnRelease': 'tNO', 'DNFEntry': -1, 'GTSItemSpec': None, 'GTSItemTaxCategory': None, 'FuelID': None, 'BeverageTableCode': '', 'BeverageGroupCode': '', 'BeverageCommercialBrandCode': None, 'Series': 119, 'ToleranceDays': None, 'TypeOfAdvancedRules': 'toarGeneral', 'IssuePrimarilyBy': 'ipbBinLocations', 'NoDiscounts': 'tNO', 'AssetClass': '', 'AssetGroup': '', 'InventoryNumber': '', 'Technician': None, 'Employee': None, 'Location': None, 'AssetStatus': 'New', 'CapitalizationDate': None, 'StatisticalAsset': 'tNO', 'Cession': 'tNO', 'DeactivateAfterUsefulLife': 'tNO', 'ManageByQuantity': 'tNO', 'UoMGroupEntry': 1, 'InventoryUoMEntry': 1, 'DefaultSalesUoMEntry': None, 'DefaultPurchasingUoMEntry': None, 'DepreciationGroup': None, 'AssetSerialNumber': '', 'InventoryWeight': None, 'InventoryWeightUnit': None, 'InventoryWeight1': None, 'InventoryWeightUnit1': None, 'DefaultCountingUnit': 'Piece', 'CountingItemsPerUnit': 1.0, 'DefaultCountingUoMEntry': 1, 'Excisable': 'tNO', 'ChapterID': -1, 'ScsCode': None, 'SpProdType': None, 'ProdStdCost': 0.0, 'InCostRollup': 'tYES', 'VirtualAssetItem': 'tNO', 'EnforceAssetSerialNumbers': 'tNO', 'AttachmentEntry': None, 'LinkedResource': None, 'UpdateDate': '2025-01-26', 'UpdateTime': '09:35:56', 'GSTRelevnt': 'tNO', 'SACEntry': -1, 'GSTTaxCategory': 'gtc_Regular', 'ServiceCategoryEntry': -1, 'CapitalGoodsOnHoldPercent': 0.0, 'CapitalGoodsOnHoldLimit': 0.0, 'AssessableValue': 0.0, 'AssVal4WTR': 0.0, 'SOIExcisable': 'se_NotExcisable', 'TNVED': None, 'ImportedItem': 'tNO', 'PricingUnit': 1, 'CreateDate': '2025-01-26', 'CreateTime': '09:35:56', 'U_MfgH': None, 'U_Collection': None, 'U_OldCode': None, 'U_ItemsCat': None, 'U_NumberofSet': None, 'U_NileCode': None, 'U_TransferProductionLinkExclude': None, 'U_SBO_CodeType': 'GS1', 'U_SBO_EGSCode': None, 'U_ShopifyColor': None, 'U_SalesChannel': None, 'U_ShopifyItemIDLocal': None, 'U_ShopifyItemIDInternational': None, 'U_ParentCommercialName': None, 'ItemPrices': [{'PriceList': 1, 'Price': 0.0, 'Currency': None, 'AdditionalPrice1': 0.0, 'AdditionalCurrency1': None, 'AdditionalPrice2': 0.0, 'AdditionalCurrency2': None, 'BasePriceList': 1, 'Factor': 1.0, 'UoMPrices': []}, {'PriceList': 2, 'Price': 0.0, 'Currency': None, 'AdditionalPrice1': 0.0, 'AdditionalCurrency1': None, 'AdditionalPrice2': 0.0, 'AdditionalCurrency2': None, 'BasePriceList': 1, 'Factor': 0.4, 'UoMPrices': []}, {'PriceList': 3, 'Price': 0.0, 'Currency': None, 'AdditionalPrice1': 0.0, 'AdditionalCurrency1': None, 'AdditionalPrice2': 0.0, 'AdditionalCurrency2': None, 'BasePriceList': 3, 'Factor': 1.0, 'UoMPrices': []}, {'PriceList': 4, 'Price': 0.0, 'Currency': None, 'AdditionalPrice1': 0.0, 'AdditionalCurrency1': None, 'AdditionalPrice2': 0.0, 'AdditionalCurrency2': None, 'BasePriceList': 4, 'Factor': 1.0, 'UoMPrices': []}, {'PriceList': 5, 'Price': 0.0, 'Currency': None, 'AdditionalPrice1': 0.0, 'AdditionalCurrency1': None, 'AdditionalPrice2': 0.0, 'AdditionalCurrency2': None, 'BasePriceList': 5, 'Factor': 1.0, 'UoMPrices': []}, {'PriceList': 6, 'Price': 0.0, 'Currency': None, 'AdditionalPrice1': 0.0, 'AdditionalCurrency1': None, 'AdditionalPrice2': 0.0, 'AdditionalCurrency2': None, 'BasePriceList': 6, 'Factor': 1.0, 'UoMPrices': []}, {'PriceList': 7, 'Price': 0.0, 'Currency': None, 'AdditionalPrice1': 0.0, 'AdditionalCurrency1': None, 'AdditionalPrice2': 0.0, 'AdditionalCurrency2': None, 'BasePriceList': 7, 'Factor': 1.0, 'UoMPrices': []}, {'PriceList': 8, 'Price': 0.0, 'Currency': None, 'AdditionalPrice1': 0.0, 'AdditionalCurrency1': None, 'AdditionalPrice2': 0.0, 'AdditionalCurrency2': None, 'BasePriceList': 8, 'Factor': 1.0, 'UoMPrices': []}, {'PriceList': 9, 'Price': 0.0, 'Currency': None, 'AdditionalPrice1': 0.0, 'AdditionalCurrency1': None, 'AdditionalPrice2': 0.0, 'AdditionalCurrency2': None, 'BasePriceList': 9, 'Factor': 1.0, 'UoMPrices': []}, {'PriceList': 10, 'Price': 0.0, 'Currency': None, 'AdditionalPrice1': 0.0, 'AdditionalCurrency1': None, 'AdditionalPrice2': 0.0, 'AdditionalCurrency2': None, 'BasePriceList': 10, 'Factor': 1.0, 'UoMPrices': []}], 'ItemWarehouseInfoCollection': [{'MinimalStock': 0.0, 'MaximalStock': 0.0, 'MinimalOrder': 0.0, 'StandardAveragePrice': 180.0, 'Locked': 'tNO', 'InventoryAccount': None, 'CostAccount': None, 'TransferAccount': None, 'RevenuesAccount': None, 'VarienceAccount': None, 'DecreasingAccount': None, 'IncreasingAccount': None, 'ReturningAccount': None, 'ExpensesAccount': None, 'EURevenuesAccount': None, 'EUExpensesAccount': None, 'ForeignRevenueAcc': None, 'ForeignExpensAcc': None, 'ExemptIncomeAcc': None, 'PriceDifferenceAcc': None, 'WarehouseCode': '5A', 'InStock': 17.0, 'Committed': 0.0, 'Ordered': 0.0, 'CountedQuantity': 0.0, 'WasCounted': 'tNO', 'UserSignature': 50, 'Counted': 0.0, 'ExpenseClearingAct': None, 'PurchaseCreditAcc': None, 'EUPurchaseCreditAcc': None, 'ForeignPurchaseCreditAcc': None, 'SalesCreditAcc': None, 'SalesCreditEUAcc': None, 'ExemptedCredits': None, 'SalesCreditForeignAcc': None, 'ExpenseOffsettingAccount': None, 'WipAccount': None, 'ExchangeRateDifferencesAcct': None, 'GoodsClearingAcct': None, 'NegativeInventoryAdjustmentAccount': None, 'CostInflationOffsetAccount': None, 'GLDecreaseAcct': None, 'GLIncreaseAcct': None, 'PAReturnAcct': None, 'PurchaseAcct': None, 'PurchaseOffsetAcct': None, 'ShippedGoodsAccount': None, 'StockInflationOffsetAccount': None, 'StockInflationAdjustAccount': None, 'VATInRevenueAccount': None, 'WipVarianceAccount': None, 'CostInflationAccount': None, 'WHIncomingCenvatAccount': None, 'WHOutgoingCenvatAccount': None, 'StockInTransitAccount': None, 'WipOffsetProfitAndLossAccount': None, 'InventoryOffsetProfitAndLossAccount': None, 'DefaultBin': None, 'DefaultBinEnforced': 'tNO', 'PurchaseBalanceAccount': None, 'ItemCode': 'ACC-0000004', 'ItemCycleCounts': []}, {'MinimalStock': 0.0, 'MaximalStock': 0.0, 'MinimalOrder': 0.0, 'StandardAveragePrice': 180.0, 'Locked': 'tNO', 'InventoryAccount': None, 'CostAccount': None, 'TransferAccount': None, 'RevenuesAccount': None, 'VarienceAccount': None, 'DecreasingAccount': None, 'IncreasingAccount': None, 'ReturningAccount': None, 'ExpensesAccount': None, 'EURevenuesAccount': None, 'EUExpensesAccount': None, 'ForeignRevenueAcc': None, 'ForeignExpensAcc': None, 'ExemptIncomeAcc': None, 'PriceDifferenceAcc': None, 'WarehouseCode': 'Arkan', 'InStock': 18.0, 'Committed': 0.0, 'Ordered': 0.0, 'CountedQuantity': 0.0, 'WasCounted': 'tNO', 'UserSignature': 50, 'Counted': 0.0, 'ExpenseClearingAct': None, 'PurchaseCreditAcc': None, 'EUPurchaseCreditAcc': None, 'ForeignPurchaseCreditAcc': None, 'SalesCreditAcc': None, 'SalesCreditEUAcc': None, 'ExemptedCredits': None, 'SalesCreditForeignAcc': None, 'ExpenseOffsettingAccount': None, 'WipAccount': None, 'ExchangeRateDifferencesAcct': None, 'GoodsClearingAcct': None, 'NegativeInventoryAdjustmentAccount': None, 'CostInflationOffsetAccount': None, 'GLDecreaseAcct': None, 'GLIncreaseAcct': None, 'PAReturnAcct': None, 'PurchaseAcct': None, 'PurchaseOffsetAcct': None, 'ShippedGoodsAccount': None, 'StockInflationOffsetAccount': None, 'StockInflationAdjustAccount': None, 'VATInRevenueAccount': None, 'WipVarianceAccount': None, 'CostInflationAccount': None, 'WHIncomingCenvatAccount': None, 'WHOutgoingCenvatAccount': None, 'StockInTransitAccount': None, 'WipOffsetProfitAndLossAccount': None, 'InventoryOffsetProfitAndLossAccount': None, 'DefaultBin': None, 'DefaultBinEnforced': 'tNO', 'PurchaseBalanceAccount': None, 'ItemCode': 'ACC-0000004', 'ItemCycleCounts': []}, {'MinimalStock': 0.0, 'MaximalStock': 0.0, 'MinimalOrder': 0.0, 'StandardAveragePrice': 0.0, 'Locked': 'tNO', 'InventoryAccount': None, 'CostAccount': None, 'TransferAccount': None, 'RevenuesAccount': None, 'VarienceAccount': None, 'DecreasingAccount': None, 'IncreasingAccount': None, 'ReturningAccount': None, 'ExpensesAccount': None, 'EURevenuesAccount': None, 'EUExpensesAccount': None, 'ForeignRevenueAcc': None, 'ForeignExpensAcc': None, 'ExemptIncomeAcc': None, 'PriceDifferenceAcc': None, 'WarehouseCode': 'DIP', 'InStock': 0.0, 'Committed': 0.0, 'Ordered': 0.0, 'CountedQuantity': 0.0, 'WasCounted': 'tNO', 'UserSignature': 50, 'Counted': 0.0, 'ExpenseClearingAct': None, 'PurchaseCreditAcc': None, 'EUPurchaseCreditAcc': None, 'ForeignPurchaseCreditAcc': None, 'SalesCreditAcc': None, 'SalesCreditEUAcc': None, 'ExemptedCredits': None, 'SalesCreditForeignAcc': None, 'ExpenseOffsettingAccount': None, 'WipAccount': None, 'ExchangeRateDifferencesAcct': None, 'GoodsClearingAcct': None, 'NegativeInventoryAdjustmentAccount': None, 'CostInflationOffsetAccount': None, 'GLDecreaseAcct': None, 'GLIncreaseAcct': None, 'PAReturnAcct': None, 'PurchaseAcct': None, 'PurchaseOffsetAcct': None, 'ShippedGoodsAccount': None, 'StockInflationOffsetAccount': None, 'StockInflationAdjustAccount': None, 'VATInRevenueAccount': None, 'WipVarianceAccount': None, 'CostInflationAccount': None, 'WHIncomingCenvatAccount': None, 'WHOutgoingCenvatAccount': None, 'StockInTransitAccount': None, 'WipOffsetProfitAndLossAccount': None, 'InventoryOffsetProfitAndLossAccount': None, 'DefaultBin': None, 'DefaultBinEnforced': 'tNO', 'PurchaseBalanceAccount': None, 'ItemCode': 'ACC-0000004', 'ItemCycleCounts': []}, {'MinimalStock': 0.0, 'MaximalStock': 0.0, 'MinimalOrder': 0.0, 'StandardAveragePrice': 180.0, 'Locked': 'tNO', 'InventoryAccount': None, 'CostAccount': None, 'TransferAccount': None, 'RevenuesAccount': None, 'VarienceAccount': None, 'DecreasingAccount': None, 'IncreasingAccount': None, 'ReturningAccount': None, 'ExpensesAccount': None, 'EURevenuesAccount': None, 'EUExpensesAccount': None, 'ForeignRevenueAcc': None, 'ForeignExpensAcc': None, 'ExemptIncomeAcc': None, 'PriceDifferenceAcc': None, 'WarehouseCode': 'INC', 'InStock': 0.0, 'Committed': 0.0, 'Ordered': 0.0, 'CountedQuantity': 0.0, 'WasCounted': 'tNO', 'UserSignature': 50, 'Counted': 0.0, 'ExpenseClearingAct': None, 'PurchaseCreditAcc': None, 'EUPurchaseCreditAcc': None, 'ForeignPurchaseCreditAcc': None, 'SalesCreditAcc': None, 'SalesCreditEUAcc': None, 'ExemptedCredits': None, 'SalesCreditForeignAcc': None, 'ExpenseOffsettingAccount': None, 'WipAccount': None, 'ExchangeRateDifferencesAcct': None, 'GoodsClearingAcct': None, 'NegativeInventoryAdjustmentAccount': None, 'CostInflationOffsetAccount': None, 'GLDecreaseAcct': None, 'GLIncreaseAcct': None, 'PAReturnAcct': None, 'PurchaseAcct': None, 'PurchaseOffsetAcct': None, 'ShippedGoodsAccount': None, 'StockInflationOffsetAccount': None, 'StockInflationAdjustAccount': None, 'VATInRevenueAccount': None, 'WipVarianceAccount': None, 'CostInflationAccount': None, 'WHIncomingCenvatAccount': None, 'WHOutgoingCenvatAccount': None, 'StockInTransitAccount': None, 'WipOffsetProfitAndLossAccount': None, 'InventoryOffsetProfitAndLossAccount': None, 'DefaultBin': None, 'DefaultBinEnforced': 'tNO', 'PurchaseBalanceAccount': None, 'ItemCode': 'ACC-0000004', 'ItemCycleCounts': []}, {'MinimalStock': 0.0, 'MaximalStock': 0.0, 'MinimalOrder': 0.0, 'StandardAveragePrice': 0.0, 'Locked': 'tNO', 'InventoryAccount': None, 'CostAccount': None, 'TransferAccount': None, 'RevenuesAccount': None, 'VarienceAccount': None, 'DecreasingAccount': None, 'IncreasingAccount': None, 'ReturningAccount': None, 'ExpensesAccount': None, 'EURevenuesAccount': None, 'EUExpensesAccount': None, 'ForeignRevenueAcc': None, 'ForeignExpensAcc': None, 'ExemptIncomeAcc': None, 'PriceDifferenceAcc': None, 'WarehouseCode': 'ONL', 'InStock': 0.0, 'Committed': 0.0, 'Ordered': 0.0, 'CountedQuantity': 0.0, 'WasCounted': 'tNO', 'UserSignature': 50, 'Counted': 0.0, 'ExpenseClearingAct': None, 'PurchaseCreditAcc': None, 'EUPurchaseCreditAcc': None, 'ForeignPurchaseCreditAcc': None, 'SalesCreditAcc': None, 'SalesCreditEUAcc': None, 'ExemptedCredits': None, 'SalesCreditForeignAcc': None, 'ExpenseOffsettingAccount': None, 'WipAccount': None, 'ExchangeRateDifferencesAcct': None, 'GoodsClearingAcct': None, 'NegativeInventoryAdjustmentAccount': None, 'CostInflationOffsetAccount': None, 'GLDecreaseAcct': None, 'GLIncreaseAcct': None, 'PAReturnAcct': None, 'PurchaseAcct': None, 'PurchaseOffsetAcct': None, 'ShippedGoodsAccount': None, 'StockInflationOffsetAccount': None, 'StockInflationAdjustAccount': None, 'VATInRevenueAccount': None, 'WipVarianceAccount': None, 'CostInflationAccount': None, 'WHIncomingCenvatAccount': None, 'WHOutgoingCenvatAccount': None, 'StockInTransitAccount': None, 'WipOffsetProfitAndLossAccount': None, 'InventoryOffsetProfitAndLossAccount': None, 'DefaultBin': None, 'DefaultBinEnforced': 'tNO', 'PurchaseBalanceAccount': None, 'ItemCode': 'ACC-0000004', 'ItemCycleCounts': []}, {'MinimalStock': 0.0, 'MaximalStock': 0.0, 'MinimalOrder': 0.0, 'StandardAveragePrice': 0.0, 'Locked': 'tNO', 'InventoryAccount': None, 'CostAccount': None, 'TransferAccount': None, 'RevenuesAccount': None, 'VarienceAccount': None, 'DecreasingAccount': None, 'IncreasingAccount': None, 'ReturningAccount': None, 'ExpensesAccount': None, 'EURevenuesAccount': None, 'EUExpensesAccount': None, 'ForeignRevenueAcc': None, 'ForeignExpensAcc': None, 'ExemptIncomeAcc': None, 'PriceDifferenceAcc': None, 'WarehouseCode': 'PHO', 'InStock': 0.0, 'Committed': 0.0, 'Ordered': 0.0, 'CountedQuantity': 0.0, 'WasCounted': 'tNO', 'UserSignature': 50, 'Counted': 0.0, 'ExpenseClearingAct': None, 'PurchaseCreditAcc': None, 'EUPurchaseCreditAcc': None, 'ForeignPurchaseCreditAcc': None, 'SalesCreditAcc': None, 'SalesCreditEUAcc': None, 'ExemptedCredits': None, 'SalesCreditForeignAcc': None, 'ExpenseOffsettingAccount': None, 'WipAccount': None, 'ExchangeRateDifferencesAcct': None, 'GoodsClearingAcct': None, 'NegativeInventoryAdjustmentAccount': None, 'CostInflationOffsetAccount': None, 'GLDecreaseAcct': None, 'GLIncreaseAcct': None, 'PAReturnAcct': None, 'PurchaseAcct': None, 'PurchaseOffsetAcct': None, 'ShippedGoodsAccount': None, 'StockInflationOffsetAccount': None, 'StockInflationAdjustAccount': None, 'VATInRevenueAccount': None, 'WipVarianceAccount': None, 'CostInflationAccount': None, 'WHIncomingCenvatAccount': None, 'WHOutgoingCenvatAccount': None, 'StockInTransitAccount': None, 'WipOffsetProfitAndLossAccount': None, 'InventoryOffsetProfitAndLossAccount': None, 'DefaultBin': None, 'DefaultBinEnforced': 'tNO', 'PurchaseBalanceAccount': None, 'ItemCode': 'ACC-0000004', 'ItemCycleCounts': []}, {'MinimalStock': 0.0, 'MaximalStock': 0.0, 'MinimalOrder': 0.0, 'StandardAveragePrice': 0.0, 'Locked': 'tNO', 'InventoryAccount': None, 'CostAccount': None, 'TransferAccount': None, 'RevenuesAccount': None, 'VarienceAccount': None, 'DecreasingAccount': None, 'IncreasingAccount': None, 'ReturningAccount': None, 'ExpensesAccount': None, 'EURevenuesAccount': None, 'EUExpensesAccount': None, 'ForeignRevenueAcc': None, 'ForeignExpensAcc': None, 'ExemptIncomeAcc': None, 'PriceDifferenceAcc': None, 'WarehouseCode': 'PHO-EX', 'InStock': 0.0, 'Committed': 0.0, 'Ordered': 0.0, 'CountedQuantity': 0.0, 'WasCounted': 'tNO', 'UserSignature': 1, 'Counted': 0.0, 'ExpenseClearingAct': None, 'PurchaseCreditAcc': None, 'EUPurchaseCreditAcc': None, 'ForeignPurchaseCreditAcc': None, 'SalesCreditAcc': None, 'SalesCreditEUAcc': None, 'ExemptedCredits': None, 'SalesCreditForeignAcc': None, 'ExpenseOffsettingAccount': None, 'WipAccount': None, 'ExchangeRateDifferencesAcct': None, 'GoodsClearingAcct': None, 'NegativeInventoryAdjustmentAccount': None, 'CostInflationOffsetAccount': None, 'GLDecreaseAcct': None, 'GLIncreaseAcct': None, 'PAReturnAcct': None, 'PurchaseAcct': None, 'PurchaseOffsetAcct': None, 'ShippedGoodsAccount': None, 'StockInflationOffsetAccount': None, 'StockInflationAdjustAccount': None, 'VATInRevenueAccount': None, 'WipVarianceAccount': None, 'CostInflationAccount': None, 'WHIncomingCenvatAccount': None, 'WHOutgoingCenvatAccount': None, 'StockInTransitAccount': None, 'WipOffsetProfitAndLossAccount': None, 'InventoryOffsetProfitAndLossAccount': None, 'DefaultBin': None, 'DefaultBinEnforced': 'tNO', 'PurchaseBalanceAccount': None, 'ItemCode': 'ACC-0000004', 'ItemCycleCounts': []}, {'MinimalStock': 0.0, 'MaximalStock': 0.0, 'MinimalOrder': 0.0, 'StandardAveragePrice': 0.0, 'Locked': 'tNO', 'InventoryAccount': None, 'CostAccount': None, 'TransferAccount': None, 'RevenuesAccount': None, 'VarienceAccount': None, 'DecreasingAccount': None, 'IncreasingAccount': None, 'ReturningAccount': None, 'ExpensesAccount': None, 'EURevenuesAccount': None, 'EUExpensesAccount': None, 'ForeignRevenueAcc': None, 'ForeignExpensAcc': None, 'ExemptIncomeAcc': None, 'PriceDifferenceAcc': None, 'WarehouseCode': 'PHO-IN', 'InStock': 0.0, 'Committed': 0.0, 'Ordered': 0.0, 'CountedQuantity': 0.0, 'WasCounted': 'tNO', 'UserSignature': 1, 'Counted': 0.0, 'ExpenseClearingAct': None, 'PurchaseCreditAcc': None, 'EUPurchaseCreditAcc': None, 'ForeignPurchaseCreditAcc': None, 'SalesCreditAcc': None, 'SalesCreditEUAcc': None, 'ExemptedCredits': None, 'SalesCreditForeignAcc': None, 'ExpenseOffsettingAccount': None, 'WipAccount': None, 'ExchangeRateDifferencesAcct': None, 'GoodsClearingAcct': None, 'NegativeInventoryAdjustmentAccount': None, 'CostInflationOffsetAccount': None, 'GLDecreaseAcct': None, 'GLIncreaseAcct': None, 'PAReturnAcct': None, 'PurchaseAcct': None, 'PurchaseOffsetAcct': None, 'ShippedGoodsAccount': None, 'StockInflationOffsetAccount': None, 'StockInflationAdjustAccount': None, 'VATInRevenueAccount': None, 'WipVarianceAccount': None, 'CostInflationAccount': None, 'WHIncomingCenvatAccount': None, 'WHOutgoingCenvatAccount': None, 'StockInTransitAccount': None, 'WipOffsetProfitAndLossAccount': None, 'InventoryOffsetProfitAndLossAccount': None, 'DefaultBin': None, 'DefaultBinEnforced': 'tNO', 'PurchaseBalanceAccount': None, 'ItemCode': 'ACC-0000004', 'ItemCycleCounts': []}, {'MinimalStock': 0.0, 'MaximalStock': 0.0, 'MinimalOrder': 0.0, 'StandardAveragePrice': 0.0, 'Locked': 'tNO', 'InventoryAccount': None, 'CostAccount': None, 'TransferAccount': None, 'RevenuesAccount': None, 'VarienceAccount': None, 'DecreasingAccount': None, 'IncreasingAccount': None, 'ReturningAccount': None, 'ExpensesAccount': None, 'EURevenuesAccount': None, 'EUExpensesAccount': None, 'ForeignRevenueAcc': None, 'ForeignExpensAcc': None, 'ExemptIncomeAcc': None, 'PriceDifferenceAcc': None, 'WarehouseCode': 'RTW', 'InStock': 0.0, 'Committed': 0.0, 'Ordered': 0.0, 'CountedQuantity': 0.0, 'WasCounted': 'tNO', 'UserSignature': 50, 'Counted': 0.0, 'ExpenseClearingAct': None, 'PurchaseCreditAcc': None, 'EUPurchaseCreditAcc': None, 'ForeignPurchaseCreditAcc': None, 'SalesCreditAcc': None, 'SalesCreditEUAcc': None, 'ExemptedCredits': None, 'SalesCreditForeignAcc': None, 'ExpenseOffsettingAccount': None, 'WipAccount': None, 'ExchangeRateDifferencesAcct': None, 'GoodsClearingAcct': None, 'NegativeInventoryAdjustmentAccount': None, 'CostInflationOffsetAccount': None, 'GLDecreaseAcct': None, 'GLIncreaseAcct': None, 'PAReturnAcct': None, 'PurchaseAcct': None, 'PurchaseOffsetAcct': None, 'ShippedGoodsAccount': None, 'StockInflationOffsetAccount': None, 'StockInflationAdjustAccount': None, 'VATInRevenueAccount': None, 'WipVarianceAccount': None, 'CostInflationAccount': None, 'WHIncomingCenvatAccount': None, 'WHOutgoingCenvatAccount': None, 'StockInTransitAccount': None, 'WipOffsetProfitAndLossAccount': None, 'InventoryOffsetProfitAndLossAccount': None, 'DefaultBin': None, 'DefaultBinEnforced': 'tNO', 'PurchaseBalanceAccount': None, 'ItemCode': 'ACC-0000004', 'ItemCycleCounts': []}, {'MinimalStock': 0.0, 'MaximalStock': 0.0, 'MinimalOrder': 0.0, 'StandardAveragePrice': 0.0, 'Locked': 'tNO', 'InventoryAccount': None, 'CostAccount': None, 'TransferAccount': None, 'RevenuesAccount': None, 'VarienceAccount': None, 'DecreasingAccount': None, 'IncreasingAccount': None, 'ReturningAccount': None, 'ExpensesAccount': None, 'EURevenuesAccount': None, 'EUExpensesAccount': None, 'ForeignRevenueAcc': None, 'ForeignExpensAcc': None, 'ExemptIncomeAcc': None, 'PriceDifferenceAcc': None, 'WarehouseCode': 'RTWH', 'InStock': 0.0, 'Committed': 0.0, 'Ordered': 0.0, 'CountedQuantity': 0.0, 'WasCounted': 'tNO', 'UserSignature': 1, 'Counted': 0.0, 'ExpenseClearingAct': None, 'PurchaseCreditAcc': None, 'EUPurchaseCreditAcc': None, 'ForeignPurchaseCreditAcc': None, 'SalesCreditAcc': None, 'SalesCreditEUAcc': None, 'ExemptedCredits': None, 'SalesCreditForeignAcc': None, 'ExpenseOffsettingAccount': None, 'WipAccount': None, 'ExchangeRateDifferencesAcct': None, 'GoodsClearingAcct': None, 'NegativeInventoryAdjustmentAccount': None, 'CostInflationOffsetAccount': None, 'GLDecreaseAcct': None, 'GLIncreaseAcct': None, 'PAReturnAcct': None, 'PurchaseAcct': None, 'PurchaseOffsetAcct': None, 'ShippedGoodsAccount': None, 'StockInflationOffsetAccount': None, 'StockInflationAdjustAccount': None, 'VATInRevenueAccount': None, 'WipVarianceAccount': None, 'CostInflationAccount': None, 'WHIncomingCenvatAccount': None, 'WHOutgoingCenvatAccount': None, 'StockInTransitAccount': None, 'WipOffsetProfitAndLossAccount': None, 'InventoryOffsetProfitAndLossAccount': None, 'DefaultBin': None, 'DefaultBinEnforced': 'tNO', 'PurchaseBalanceAccount': None, 'ItemCode': 'ACC-0000004', 'ItemCycleCounts': []}, {'MinimalStock': 0.0, 'MaximalStock': 0.0, 'MinimalOrder': 0.0, 'StandardAveragePrice': 0.0, 'Locked': 'tNO', 'InventoryAccount': None, 'CostAccount': None, 'TransferAccount': None, 'RevenuesAccount': None, 'VarienceAccount': None, 'DecreasingAccount': None, 'IncreasingAccount': None, 'ReturningAccount': None, 'ExpensesAccount': None, 'EURevenuesAccount': None, 'EUExpensesAccount': None, 'ForeignRevenueAcc': None, 'ForeignExpensAcc': None, 'ExemptIncomeAcc': None, 'PriceDifferenceAcc': None, 'WarehouseCode': 'SW', 'InStock': 0.0, 'Committed': 0.0, 'Ordered': 0.0, 'CountedQuantity': 0.0, 'WasCounted': 'tNO', 'UserSignature': 50, 'Counted': 0.0, 'ExpenseClearingAct': None, 'PurchaseCreditAcc': None, 'EUPurchaseCreditAcc': None, 'ForeignPurchaseCreditAcc': None, 'SalesCreditAcc': None, 'SalesCreditEUAcc': None, 'ExemptedCredits': None, 'SalesCreditForeignAcc': None, 'ExpenseOffsettingAccount': None, 'WipAccount': None, 'ExchangeRateDifferencesAcct': None, 'GoodsClearingAcct': None, 'NegativeInventoryAdjustmentAccount': None, 'CostInflationOffsetAccount': None, 'GLDecreaseAcct': None, 'GLIncreaseAcct': None, 'PAReturnAcct': None, 'PurchaseAcct': None, 'PurchaseOffsetAcct': None, 'ShippedGoodsAccount': None, 'StockInflationOffsetAccount': None, 'StockInflationAdjustAccount': None, 'VATInRevenueAccount': None, 'WipVarianceAccount': None, 'CostInflationAccount': None, 'WHIncomingCenvatAccount': None, 'WHOutgoingCenvatAccount': None, 'StockInTransitAccount': None, 'WipOffsetProfitAndLossAccount': None, 'InventoryOffsetProfitAndLossAccount': None, 'DefaultBin': None, 'DefaultBinEnforced': 'tNO', 'PurchaseBalanceAccount': None, 'ItemCode': 'ACC-0000004', 'ItemCycleCounts': []}, {'MinimalStock': 0.0, 'MaximalStock': 0.0, 'MinimalOrder': 0.0, 'StandardAveragePrice': 0.0, 'Locked': 'tNO', 'InventoryAccount': None, 'CostAccount': None, 'TransferAccount': None, 'RevenuesAccount': None, 'VarienceAccount': None, 'DecreasingAccount': None, 'IncreasingAccount': None, 'ReturningAccount': None, 'ExpensesAccount': None, 'EURevenuesAccount': None, 'EUExpensesAccount': None, 'ForeignRevenueAcc': None, 'ForeignExpensAcc': None, 'ExemptIncomeAcc': None, 'PriceDifferenceAcc': None, 'WarehouseCode': 'WLS', 'InStock': 0.0, 'Committed': 0.0, 'Ordered': 0.0, 'CountedQuantity': 0.0, 'WasCounted': 'tNO', 'UserSignature': 50, 'Counted': 0.0, 'ExpenseClearingAct': None, 'PurchaseCreditAcc': None, 'EUPurchaseCreditAcc': None, 'ForeignPurchaseCreditAcc': None, 'SalesCreditAcc': None, 'SalesCreditEUAcc': None, 'ExemptedCredits': None, 'SalesCreditForeignAcc': None, 'ExpenseOffsettingAccount': None, 'WipAccount': None, 'ExchangeRateDifferencesAcct': None, 'GoodsClearingAcct': None, 'NegativeInventoryAdjustmentAccount': None, 'CostInflationOffsetAccount': None, 'GLDecreaseAcct': None, 'GLIncreaseAcct': None, 'PAReturnAcct': None, 'PurchaseAcct': None, 'PurchaseOffsetAcct': None, 'ShippedGoodsAccount': None, 'StockInflationOffsetAccount': None, 'StockInflationAdjustAccount': None, 'VATInRevenueAccount': None, 'WipVarianceAccount': None, 'CostInflationAccount': None, 'WHIncomingCenvatAccount': None, 'WHOutgoingCenvatAccount': None, 'StockInTransitAccount': None, 'WipOffsetProfitAndLossAccount': None, 'InventoryOffsetProfitAndLossAccount': None, 'DefaultBin': None, 'DefaultBinEnforced': 'tNO', 'PurchaseBalanceAccount': None, 'ItemCode': 'ACC-0000004', 'ItemCycleCounts': []}, {'MinimalStock': 0.0, 'MaximalStock': 0.0, 'MinimalOrder': 0.0, 'StandardAveragePrice': 0.0, 'Locked': 'tNO', 'InventoryAccount': None, 'CostAccount': None, 'TransferAccount': None, 'RevenuesAccount': None, 'VarienceAccount': None, 'DecreasingAccount': None, 'IncreasingAccount': None, 'ReturningAccount': None, 'ExpensesAccount': None, 'EURevenuesAccount': None, 'EUExpensesAccount': None, 'ForeignRevenueAcc': None, 'ForeignExpensAcc': None, 'ExemptIncomeAcc': None, 'PriceDifferenceAcc': None, 'WarehouseCode': 'WW', 'InStock': 0.0, 'Committed': 0.0, 'Ordered': 0.0, 'CountedQuantity': 0.0, 'WasCounted': 'tNO', 'UserSignature': 50, 'Counted': 0.0, 'ExpenseClearingAct': None, 'PurchaseCreditAcc': None, 'EUPurchaseCreditAcc': None, 'ForeignPurchaseCreditAcc': None, 'SalesCreditAcc': None, 'SalesCreditEUAcc': None, 'ExemptedCredits': None, 'SalesCreditForeignAcc': None, 'ExpenseOffsettingAccount': None, 'WipAccount': None, 'ExchangeRateDifferencesAcct': None, 'GoodsClearingAcct': None, 'NegativeInventoryAdjustmentAccount': None, 'CostInflationOffsetAccount': None, 'GLDecreaseAcct': None, 'GLIncreaseAcct': None, 'PAReturnAcct': None, 'PurchaseAcct': None, 'PurchaseOffsetAcct': None, 'ShippedGoodsAccount': None, 'StockInflationOffsetAccount': None, 'StockInflationAdjustAccount': None, 'VATInRevenueAccount': None, 'WipVarianceAccount': None, 'CostInflationAccount': None, 'WHIncomingCenvatAccount': None, 'WHOutgoingCenvatAccount': None, 'StockInTransitAccount': None, 'WipOffsetProfitAndLossAccount': None, 'InventoryOffsetProfitAndLossAccount': None, 'DefaultBin': None, 'DefaultBinEnforced': 'tNO', 'PurchaseBalanceAccount': None, 'ItemCode': 'ACC-0000004', 'ItemCycleCounts': []}, {'MinimalStock': 0.0, 'MaximalStock': 0.0, 'MinimalOrder': 0.0, 'StandardAveragePrice': 0.0, 'Locked': 'tNO', 'InventoryAccount': None, 'CostAccount': None, 'TransferAccount': None, 'RevenuesAccount': None, 'VarienceAccount': None, 'DecreasingAccount': None, 'IncreasingAccount': None, 'ReturningAccount': None, 'ExpensesAccount': None, 'EURevenuesAccount': None, 'EUExpensesAccount': None, 'ForeignRevenueAcc': None, 'ForeignExpensAcc': None, 'ExemptIncomeAcc': None, 'PriceDifferenceAcc': None, 'WarehouseCode': 'WW-CON', 'InStock': 0.0, 'Committed': 0.0, 'Ordered': 0.0, 'CountedQuantity': 0.0, 'WasCounted': 'tNO', 'UserSignature': 50, 'Counted': 0.0, 'ExpenseClearingAct': None, 'PurchaseCreditAcc': None, 'EUPurchaseCreditAcc': None, 'ForeignPurchaseCreditAcc': None, 'SalesCreditAcc': None, 'SalesCreditEUAcc': None, 'ExemptedCredits': None, 'SalesCreditForeignAcc': None, 'ExpenseOffsettingAccount': None, 'WipAccount': None, 'ExchangeRateDifferencesAcct': None, 'GoodsClearingAcct': None, 'NegativeInventoryAdjustmentAccount': None, 'CostInflationOffsetAccount': None, 'GLDecreaseAcct': None, 'GLIncreaseAcct': None, 'PAReturnAcct': None, 'PurchaseAcct': None, 'PurchaseOffsetAcct': None, 'ShippedGoodsAccount': None, 'StockInflationOffsetAccount': None, 'StockInflationAdjustAccount': None, 'VATInRevenueAccount': None, 'WipVarianceAccount': None, 'CostInflationAccount': None, 'WHIncomingCenvatAccount': None, 'WHOutgoingCenvatAccount': None, 'StockInTransitAccount': None, 'WipOffsetProfitAndLossAccount': None, 'InventoryOffsetProfitAndLossAccount': None, 'DefaultBin': None, 'DefaultBinEnforced': 'tNO', 'PurchaseBalanceAccount': None, 'ItemCode': 'ACC-0000004', 'ItemCycleCounts': []}, {'MinimalStock': 0.0, 'MaximalStock': 0.0, 'MinimalOrder': 0.0, 'StandardAveragePrice': 0.0, 'Locked': 'tNO', 'InventoryAccount': None, 'CostAccount': None, 'TransferAccount': None, 'RevenuesAccount': None, 'VarienceAccount': None, 'DecreasingAccount': None, 'IncreasingAccount': None, 'ReturningAccount': None, 'ExpensesAccount': None, 'EURevenuesAccount': None, 'EUExpensesAccount': None, 'ForeignRevenueAcc': None, 'ForeignExpensAcc': None, 'ExemptIncomeAcc': None, 'PriceDifferenceAcc': None, 'WarehouseCode': 'WW-DAM', 'InStock': 0.0, 'Committed': 0.0, 'Ordered': 0.0, 'CountedQuantity': 0.0, 'WasCounted': 'tNO', 'UserSignature': 50, 'Counted': 0.0, 'ExpenseClearingAct': None, 'PurchaseCreditAcc': None, 'EUPurchaseCreditAcc': None, 'ForeignPurchaseCreditAcc': None, 'SalesCreditAcc': None, 'SalesCreditEUAcc': None, 'ExemptedCredits': None, 'SalesCreditForeignAcc': None, 'ExpenseOffsettingAccount': None, 'WipAccount': None, 'ExchangeRateDifferencesAcct': None, 'GoodsClearingAcct': None, 'NegativeInventoryAdjustmentAccount': None, 'CostInflationOffsetAccount': None, 'GLDecreaseAcct': None, 'GLIncreaseAcct': None, 'PAReturnAcct': None, 'PurchaseAcct': None, 'PurchaseOffsetAcct': None, 'ShippedGoodsAccount': None, 'StockInflationOffsetAccount': None, 'StockInflationAdjustAccount': None, 'VATInRevenueAccount': None, 'WipVarianceAccount': None, 'CostInflationAccount': None, 'WHIncomingCenvatAccount': None, 'WHOutgoingCenvatAccount': None, 'StockInTransitAccount': None, 'WipOffsetProfitAndLossAccount': None, 'InventoryOffsetProfitAndLossAccount': None, 'DefaultBin': None, 'DefaultBinEnforced': 'tNO', 'PurchaseBalanceAccount': None, 'ItemCode': 'ACC-0000004', 'ItemCycleCounts': []}, {'MinimalStock': 0.0, 'MaximalStock': 0.0, 'MinimalOrder': 0.0, 'StandardAveragePrice': 0.0, 'Locked': 'tNO', 'InventoryAccount': None, 'CostAccount': None, 'TransferAccount': None, 'RevenuesAccount': None, 'VarienceAccount': None, 'DecreasingAccount': None, 'IncreasingAccount': None, 'ReturningAccount': None, 'ExpensesAccount': None, 'EURevenuesAccount': None, 'EUExpensesAccount': None, 'ForeignRevenueAcc': None, 'ForeignExpensAcc': None, 'ExemptIncomeAcc': None, 'PriceDifferenceAcc': None, 'WarehouseCode': 'WW-REP', 'InStock': 0.0, 'Committed': 0.0, 'Ordered': 0.0, 'CountedQuantity': 0.0, 'WasCounted': 'tNO', 'UserSignature': 50, 'Counted': 0.0, 'ExpenseClearingAct': None, 'PurchaseCreditAcc': None, 'EUPurchaseCreditAcc': None, 'ForeignPurchaseCreditAcc': None, 'SalesCreditAcc': None, 'SalesCreditEUAcc': None, 'ExemptedCredits': None, 'SalesCreditForeignAcc': None, 'ExpenseOffsettingAccount': None, 'WipAccount': None, 'ExchangeRateDifferencesAcct': None, 'GoodsClearingAcct': None, 'NegativeInventoryAdjustmentAccount': None, 'CostInflationOffsetAccount': None, 'GLDecreaseAcct': None, 'GLIncreaseAcct': None, 'PAReturnAcct': None, 'PurchaseAcct': None, 'PurchaseOffsetAcct': None, 'ShippedGoodsAccount': None, 'StockInflationOffsetAccount': None, 'StockInflationAdjustAccount': None, 'VATInRevenueAccount': None, 'WipVarianceAccount': None, 'CostInflationAccount': None, 'WHIncomingCenvatAccount': None, 'WHOutgoingCenvatAccount': None, 'StockInTransitAccount': None, 'WipOffsetProfitAndLossAccount': None, 'InventoryOffsetProfitAndLossAccount': None, 'DefaultBin': None, 'DefaultBinEnforced': 'tNO', 'PurchaseBalanceAccount': None, 'ItemCode': 'ACC-0000004', 'ItemCycleCounts': []}, {'MinimalStock': 0.0, 'MaximalStock': 0.0, 'MinimalOrder': 0.0, 'StandardAveragePrice': 0.0, 'Locked': 'tNO', 'InventoryAccount': None, 'CostAccount': None, 'TransferAccount': None, 'RevenuesAccount': None, 'VarienceAccount': None, 'DecreasingAccount': None, 'IncreasingAccount': None, 'ReturningAccount': None, 'ExpensesAccount': None, 'EURevenuesAccount': None, 'EUExpensesAccount': None, 'ForeignRevenueAcc': None, 'ForeignExpensAcc': None, 'ExemptIncomeAcc': None, 'PriceDifferenceAcc': None, 'WarehouseCode': 'WW-SAM', 'InStock': 0.0, 'Committed': 0.0, 'Ordered': 0.0, 'CountedQuantity': 0.0, 'WasCounted': 'tNO', 'UserSignature': 50, 'Counted': 0.0, 'ExpenseClearingAct': None, 'PurchaseCreditAcc': None, 'EUPurchaseCreditAcc': None, 'ForeignPurchaseCreditAcc': None, 'SalesCreditAcc': None, 'SalesCreditEUAcc': None, 'ExemptedCredits': None, 'SalesCreditForeignAcc': None, 'ExpenseOffsettingAccount': None, 'WipAccount': None, 'ExchangeRateDifferencesAcct': None, 'GoodsClearingAcct': None, 'NegativeInventoryAdjustmentAccount': None, 'CostInflationOffsetAccount': None, 'GLDecreaseAcct': None, 'GLIncreaseAcct': None, 'PAReturnAcct': None, 'PurchaseAcct': None, 'PurchaseOffsetAcct': None, 'ShippedGoodsAccount': None, 'StockInflationOffsetAccount': None, 'StockInflationAdjustAccount': None, 'VATInRevenueAccount': None, 'WipVarianceAccount': None, 'CostInflationAccount': None, 'WHIncomingCenvatAccount': None, 'WHOutgoingCenvatAccount': None, 'StockInTransitAccount': None, 'WipOffsetProfitAndLossAccount': None, 'InventoryOffsetProfitAndLossAccount': None, 'DefaultBin': None, 'DefaultBinEnforced': 'tNO', 'PurchaseBalanceAccount': None, 'ItemCode': 'ACC-0000004', 'ItemCycleCounts': []}, {'MinimalStock': 0.0, 'MaximalStock': 0.0, 'MinimalOrder': 0.0, 'StandardAveragePrice': 0.0, 'Locked': 'tNO', 'InventoryAccount': None, 'CostAccount': None, 'TransferAccount': None, 'RevenuesAccount': None, 'VarienceAccount': None, 'DecreasingAccount': None, 'IncreasingAccount': None, 'ReturningAccount': None, 'ExpensesAccount': None, 'EURevenuesAccount': None, 'EUExpensesAccount': None, 'ForeignRevenueAcc': None, 'ForeignExpensAcc': None, 'ExemptIncomeAcc': None, 'PriceDifferenceAcc': None, 'WarehouseCode': 'WW-WIP', 'InStock': 0.0, 'Committed': 0.0, 'Ordered': 0.0, 'CountedQuantity': 0.0, 'WasCounted': 'tNO', 'UserSignature': 50, 'Counted': 0.0, 'ExpenseClearingAct': None, 'PurchaseCreditAcc': None, 'EUPurchaseCreditAcc': None, 'ForeignPurchaseCreditAcc': None, 'SalesCreditAcc': None, 'SalesCreditEUAcc': None, 'ExemptedCredits': None, 'SalesCreditForeignAcc': None, 'ExpenseOffsettingAccount': None, 'WipAccount': None, 'ExchangeRateDifferencesAcct': None, 'GoodsClearingAcct': None, 'NegativeInventoryAdjustmentAccount': None, 'CostInflationOffsetAccount': None, 'GLDecreaseAcct': None, 'GLIncreaseAcct': None, 'PAReturnAcct': None, 'PurchaseAcct': None, 'PurchaseOffsetAcct': None, 'ShippedGoodsAccount': None, 'StockInflationOffsetAccount': None, 'StockInflationAdjustAccount': None, 'VATInRevenueAccount': None, 'WipVarianceAccount': None, 'CostInflationAccount': None, 'WHIncomingCenvatAccount': None, 'WHOutgoingCenvatAccount': None, 'StockInTransitAccount': None, 'WipOffsetProfitAndLossAccount': None, 'InventoryOffsetProfitAndLossAccount': None, 'DefaultBin': None, 'DefaultBinEnforced': 'tNO', 'PurchaseBalanceAccount': None, 'ItemCode': 'ACC-0000004', 'ItemCycleCounts': []}, {'MinimalStock': 0.0, 'MaximalStock': 0.0, 'MinimalOrder': 0.0, 'StandardAveragePrice': 0.0, 'Locked': 'tNO', 'InventoryAccount': None, 'CostAccount': None, 'TransferAccount': None, 'RevenuesAccount': None, 'VarienceAccount': None, 'DecreasingAccount': None, 'IncreasingAccount': None, 'ReturningAccount': None, 'ExpensesAccount': None, 'EURevenuesAccount': None, 'EUExpensesAccount': None, 'ForeignRevenueAcc': None, 'ForeignExpensAcc': None, 'ExemptIncomeAcc': None, 'PriceDifferenceAcc': None, 'WarehouseCode': 'ZW', 'InStock': 0.0, 'Committed': 0.0, 'Ordered': 0.0, 'CountedQuantity': 0.0, 'WasCounted': 'tNO', 'UserSignature': 50, 'Counted': 0.0, 'ExpenseClearingAct': None, 'PurchaseCreditAcc': None, 'EUPurchaseCreditAcc': None, 'ForeignPurchaseCreditAcc': None, 'SalesCreditAcc': None, 'SalesCreditEUAcc': None, 'ExemptedCredits': None, 'SalesCreditForeignAcc': None, 'ExpenseOffsettingAccount': None, 'WipAccount': None, 'ExchangeRateDifferencesAcct': None, 'GoodsClearingAcct': None, 'NegativeInventoryAdjustmentAccount': None, 'CostInflationOffsetAccount': None, 'GLDecreaseAcct': None, 'GLIncreaseAcct': None, 'PAReturnAcct': None, 'PurchaseAcct': None, 'PurchaseOffsetAcct': None, 'ShippedGoodsAccount': None, 'StockInflationOffsetAccount': None, 'StockInflationAdjustAccount': None, 'VATInRevenueAccount': None, 'WipVarianceAccount': None, 'CostInflationAccount': None, 'WHIncomingCenvatAccount': None, 'WHOutgoingCenvatAccount': None, 'StockInTransitAccount': None, 'WipOffsetProfitAndLossAccount': None, 'InventoryOffsetProfitAndLossAccount': None, 'DefaultBin': None, 'DefaultBinEnforced': 'tNO', 'PurchaseBalanceAccount': None, 'ItemCode': 'ACC-0000004', 'ItemCycleCounts': []}], 'ItemPreferredVendors': [], 'ItemLocalizationInfos': [], 'ItemProjects': [], 'ItemDistributionRules': [], 'ItemAttributeGroups': [], 'ItemDepreciationParameters': [], 'ItemPeriodControls': [], 'ItemUnitOfMeasurementCollection': [{'UoMType': 'iutInventory', 'UoMEntry': 1, 'DefaultBarcode': 0, 'DefaultPackage': None, 'Length1': 0.0, 'Length1Unit': None, 'Length2': 0.0, 'Length2Unit': None, 'Width1': 0.0, 'Width1Unit': None, 'Width2': 0.0, 'Width2Unit': None, 'Height1': 0.0, 'Height1Unit': None, 'Height2': 0.0, 'Height2Unit': None, 'Volume': 0.0, 'VolumeUnit': None, 'Weight1': 0.0, 'Weight1Unit': None, 'Weight2': 0.0, 'Weight2Unit': None, 'ItemUoMPackageCollection': []}, {'UoMType': 'iutPurchasing', 'UoMEntry': 1, 'DefaultBarcode': 0, 'DefaultPackage': None, 'Length1': 0.0, 'Length1Unit': None, 'Length2': 0.0, 'Length2Unit': None, 'Width1': 0.0, 'Width1Unit': None, 'Width2': 0.0, 'Width2Unit': None, 'Height1': 0.0, 'Height1Unit': None, 'Height2': 0.0, 'Height2Unit': None, 'Volume': 0.0, 'VolumeUnit': 2, 'Weight1': 0.0, 'Weight1Unit': None, 'Weight2': 0.0, 'Weight2Unit': None, 'ItemUoMPackageCollection': []}, {'UoMType': 'iutPurchasing', 'UoMEntry': 8, 'DefaultBarcode': None, 'DefaultPackage': None, 'Length1': 0.0, 'Length1Unit': None, 'Length2': 0.0, 'Length2Unit': None, 'Width1': 0.0, 'Width1Unit': None, 'Width2': 0.0, 'Width2Unit': None, 'Height1': 0.0, 'Height1Unit': None, 'Height2': 0.0, 'Height2Unit': None, 'Volume': 0.0, 'VolumeUnit': 4, 'Weight1': 0.0, 'Weight1Unit': None, 'Weight2': 0.0, 'Weight2Unit': None, 'ItemUoMPackageCollection': []}, {'UoMType': 'iutSales', 'UoMEntry': 1, 'DefaultBarcode': 0, 'DefaultPackage': None, 'Length1': 0.0, 'Length1Unit': None, 'Length2': 0.0, 'Length2Unit': None, 'Width1': 0.0, 'Width1Unit': None, 'Width2': 0.0, 'Width2Unit': None, 'Height1': 0.0, 'Height1Unit': None, 'Height2': 0.0, 'Height2Unit': None, 'Volume': 0.0, 'VolumeUnit': 2, 'Weight1': 0.0, 'Weight1Unit': None, 'Weight2': 0.0, 'Weight2Unit': None, 'ItemUoMPackageCollection': []}, {'UoMType': 'iutSales', 'UoMEntry': 8, 'DefaultBarcode': None, 'DefaultPackage': None, 'Length1': 0.0, 'Length1Unit': None, 'Length2': 0.0, 'Length2Unit': None, 'Width1': 0.0, 'Width1Unit': None, 'Width2': 0.0, 'Width2Unit': None, 'Height1': 0.0, 'Height1Unit': None, 'Height2': 0.0, 'Height2Unit': None, 'Volume': 0.0, 'VolumeUnit': 4, 'Weight1': 0.0, 'Weight1Unit': None, 'Weight2': 0.0, 'Weight2Unit': None, 'ItemUoMPackageCollection': []}], 'ItemBarCodeCollection': [], 'ItemIntrastatExtension': {'ItemCode': 'ACC-0000004', 'CommodityCode': None, 'SupplementaryUnit': None, 'FactorOfSupplementaryUnit': 0.0, 'ImportRegionState': 0, 'ExportRegionState': 0, 'ImportNatureOfTransaction': None, 'ExportNatureOfTransaction': None, 'ImportStatisticalProcedure': None, 'ExportStatisticalProcedure': None, 'CountryOfOrigin': None, 'ServiceCode': None, 'Type': 'dDocument_Items', 'ServiceSupplyMethod': 'ssmImmediate', 'ServicePaymentMethod': 'spmOther', 'ImportRegionCountry': 'GB', 'ExportRegionCountry': 'GB', 'UseWeightInCalculation': 'tYES', 'IntrastatRelevant': 'tNO', 'StatisticalCode': None}}, {'ItemCode': 'ACC-0000005', 'ItemName': 'Earring Stand ( Fabric Holder ) 7.5*7.5 CM base + 7.5 CM Heigh', 'ForeignName': None, 'ItemsGroupCode': 110, 'CustomsGroupCode': -1, 'SalesVATGroup': 'X0', 'BarCode': None, 'VatLiable': 'tYES', 'PurchaseItem': 'tYES', 'SalesItem': 'tNO', 'InventoryItem': 'tYES', 'IncomeAccount': None, 'ExemptIncomeAccount': None, 'ExpanseAccount': None, 'Mainsupplier': None, 'SupplierCatalogNo': None, 'DesiredInventory': 0.0, 'MinInventory': 0.0, 'Picture': None, 'User_Text': None, 'SerialNum': None, 'CommissionPercent': 0.0, 'CommissionSum': 0.0, 'CommissionGroup': 0, 'TreeType': 'iNotATree', 'AssetItem': 'tNO', 'DataExportCode': None, 'Manufacturer': -1, 'QuantityOnStock': 50.0, 'QuantityOrderedFromVendors': 0.0, 'QuantityOrderedByCustomers': 0.0, 'ManageSerialNumbers': 'tNO', 'ManageBatchNumbers': 'tNO', 'Valid': 'tYES', 'ValidFrom': None, 'ValidTo': None, 'ValidRemarks': None, 'Frozen': 'tNO', 'FrozenFrom': None, 'FrozenTo': None, 'FrozenRemarks': None, 'SalesUnit': None, 'SalesItemsPerUnit': 1.0, 'SalesPackagingUnit': None, 'SalesQtyPerPackUnit': 1.0, 'SalesUnitLength': None, 'SalesLengthUnit': None, 'SalesUnitWidth': None, 'SalesWidthUnit': None, 'SalesUnitHeight': None, 'SalesHeightUnit': None, 'SalesUnitVolume': 0.0, 'SalesVolumeUnit': 4, 'SalesUnitWeight': None, 'SalesWeightUnit': None, 'PurchaseUnit': None, 'PurchaseItemsPerUnit': 1.0, 'PurchasePackagingUnit': None, 'PurchaseQtyPerPackUnit': 1.0, 'PurchaseUnitLength': None, 'PurchaseLengthUnit': None, 'PurchaseUnitWidth': None, 'PurchaseWidthUnit': None, 'PurchaseUnitHeight': None, 'PurchaseHeightUnit': None, 'PurchaseUnitVolume': 0.0, 'PurchaseVolumeUnit': 4, 'PurchaseUnitWeight': None, 'PurchaseWeightUnit': None, 'PurchaseVATGroup': 'X1', 'SalesFactor1': 1.0, 'SalesFactor2': 1.0, 'SalesFactor3': 1.0, 'SalesFactor4': 1.0, 'PurchaseFactor1': 1.0, 'PurchaseFactor2': 1.0, 'PurchaseFactor3': 1.0, 'PurchaseFactor4': 1.0, 'MovingAveragePrice': 0.0, 'ForeignRevenuesAccount': None, 'ECRevenuesAccount': None, 'ForeignExpensesAccount': None, 'ECExpensesAccount': None, 'AvgStdPrice': 0.0, 'DefaultWarehouse': None, 'ShipType': None, 'GLMethod': 'glm_ItemClass', 'TaxType': 'tt_Yes', 'MaxInventory': 0.0, 'ManageStockByWarehouse': 'tNO', 'PurchaseHeightUnit1': None, 'PurchaseUnitHeight1': None, 'PurchaseLengthUnit1': None, 'PurchaseUnitLength1': None, 'PurchaseWeightUnit1': None, 'PurchaseUnitWeight1': None, 'PurchaseWidthUnit1': None, 'PurchaseUnitWidth1': None, 'SalesHeightUnit1': None, 'SalesUnitHeight1': None, 'SalesLengthUnit1': None, 'SalesUnitLength1': None, 'SalesWeightUnit1': None, 'SalesUnitWeight1': None, 'SalesWidthUnit1': None, 'SalesUnitWidth1': None, 'ForceSelectionOfSerialNumber': 'tYES', 'ManageSerialNumbersOnReleaseOnly': 'tNO', 'WTLiable': 'tNO', 'CostAccountingMethod': 'bis_MovingAverage', 'SWW': None, 'WarrantyTemplate': '', 'IndirectTax': 'tNO', 'ArTaxCode': None, 'ApTaxCode': None, 'BaseUnitName': None, 'ItemCountryOrg': None, 'IssueMethod': 'im_Backflush', 'SRIAndBatchManageMethod': 'bomm_OnEveryTransaction', 'IsPhantom': 'tNO', 'InventoryUOM': 'Piece', 'PlanningSystem': 'bop_None', 'ProcurementMethod': 'bom_Buy', 'ComponentWarehouse': 'bomcw_BOM', 'OrderIntervals': None, 'OrderMultiple': 0.0, 'LeadTime': None, 'MinOrderQuantity': 0.0, 'ItemType': 'itItems', 'ItemClass': 'itcMaterial', 'OutgoingServiceCode': -1, 'IncomingServiceCode': -1, 'ServiceGroup': -1, 'NCMCode': -1, 'MaterialType': 'mt_FinishedGoods', 'MaterialGroup': -1, 'ProductSource': '', 'Properties1': 'tNO', 'Properties2': 'tNO', 'Properties3': 'tNO', 'Properties4': 'tNO', 'Properties5': 'tNO', 'Properties6': 'tNO', 'Properties7': 'tNO', 'Properties8': 'tNO', 'Properties9': 'tNO', 'Properties10': 'tNO', 'Properties11': 'tNO', 'Properties12': 'tNO', 'Properties13': 'tNO', 'Properties14': 'tNO', 'Properties15': 'tNO', 'Properties16': 'tNO', 'Properties17': 'tNO', 'Properties18': 'tNO', 'Properties19': 'tNO', 'Properties20': 'tNO', 'Properties21': 'tNO', 'Properties22': 'tNO', 'Properties23': 'tNO', 'Properties24': 'tNO', 'Properties25': 'tNO', 'Properties26': 'tNO', 'Properties27': 'tNO', 'Properties28': 'tNO', 'Properties29': 'tNO', 'Properties30': 'tNO', 'Properties31': 'tNO', 'Properties32': 'tNO', 'Properties33': 'tNO', 'Properties34': 'tNO', 'Properties35': 'tNO', 'Properties36': 'tNO', 'Properties37': 'tNO', 'Properties38': 'tNO', 'Properties39': 'tNO', 'Properties40': 'tNO', 'Properties41': 'tNO', 'Properties42': 'tNO', 'Properties43': 'tNO', 'Properties44': 'tNO', 'Properties45': 'tNO', 'Properties46': 'tNO', 'Properties47': 'tNO', 'Properties48': 'tNO', 'Properties49': 'tNO', 'Properties50': 'tNO', 'Properties51': 'tNO', 'Properties52': 'tNO', 'Properties53': 'tNO', 'Properties54': 'tNO', 'Properties55': 'tNO', 'Properties56': 'tNO', 'Properties57': 'tNO', 'Properties58': 'tNO', 'Properties59': 'tNO', 'Properties60': 'tNO', 'Properties61': 'tNO', 'Properties62': 'tNO', 'Properties63': 'tNO', 'Properties64': 'tNO', 'AutoCreateSerialNumbersOnRelease': 'tNO', 'DNFEntry': -1, 'GTSItemSpec': None, 'GTSItemTaxCategory': None, 'FuelID': None, 'BeverageTableCode': '', 'BeverageGroupCode': '', 'BeverageCommercialBrandCode': None, 'Series': 119, 'ToleranceDays': None, 'TypeOfAdvancedRules': 'toarGeneral', 'IssuePrimarilyBy': 'ipbBinLocations', 'NoDiscounts': 'tNO', 'AssetClass': '', 'AssetGroup': '', 'InventoryNumber': '', 'Technician': None, 'Employee': None, 'Location': None, 'AssetStatus': 'New', 'CapitalizationDate': None, 'StatisticalAsset': 'tNO', 'Cession': 'tNO', 'DeactivateAfterUsefulLife': 'tNO', 'ManageByQuantity': 'tNO', 'UoMGroupEntry': 1, 'InventoryUoMEntry': 1, 'DefaultSalesUoMEntry': None, 'DefaultPurchasingUoMEntry': None, 'DepreciationGroup': None, 'AssetSerialNumber': '', 'InventoryWeight': None, 'InventoryWeightUnit': None, 'InventoryWeight1': None, 'InventoryWeightUnit1': None, 'DefaultCountingUnit': 'Piece', 'CountingItemsPerUnit': 1.0, 'DefaultCountingUoMEntry': 1, 'Excisable': 'tNO', 'ChapterID': -1, 'ScsCode': None, 'SpProdType': None, 'ProdStdCost': 0.0, 'InCostRollup': 'tYES', 'VirtualAssetItem': 'tNO', 'EnforceAssetSerialNumbers': 'tNO', 'AttachmentEntry': None, 'LinkedResource': None, 'UpdateDate': '2025-01-26', 'UpdateTime': '09:40:52', 'GSTRelevnt': 'tNO', 'SACEntry': -1, 'GSTTaxCategory': 'gtc_Regular', 'ServiceCategoryEntry': -1, 'CapitalGoodsOnHoldPercent': 0.0, 'CapitalGoodsOnHoldLimit': 0.0, 'AssessableValue': 0.0, 'AssVal4WTR': 0.0, 'SOIExcisable': 'se_NotExcisable', 'TNVED': None, 'ImportedItem': 'tNO', 'PricingUnit': 1, 'CreateDate': '2025-01-26', 'CreateTime': '09:40:52', 'U_MfgH': None, 'U_Collection': None, 'U_OldCode': None, 'U_ItemsCat': None, 'U_NumberofSet': None, 'U_NileCode': None, 'U_TransferProductionLinkExclude': None, 'U_SBO_CodeType': 'GS1', 'U_SBO_EGSCode': None, 'U_ShopifyColor': None, 'U_SalesChannel': None, 'U_ShopifyItemIDLocal': None, 'U_ShopifyItemIDInternational': None, 'U_ParentCommercialName': None, 'ItemPrices': [{'PriceList': 1, 'Price': 0.0, 'Currency': None, 'AdditionalPrice1': 0.0, 'AdditionalCurrency1': None, 'AdditionalPrice2': 0.0, 'AdditionalCurrency2': None, 'BasePriceList': 1, 'Factor': 1.0, 'UoMPrices': []}, {'PriceList': 2, 'Price': 0.0, 'Currency': None, 'AdditionalPrice1': 0.0, 'AdditionalCurrency1': None, 'AdditionalPrice2': 0.0, 'AdditionalCurrency2': None, 'BasePriceList': 1, 'Factor': 0.4, 'UoMPrices': []}, {'PriceList': 3, 'Price': 0.0, 'Currency': None, 'AdditionalPrice1': 0.0, 'AdditionalCurrency1': None, 'AdditionalPrice2': 0.0, 'AdditionalCurrency2': None, 'BasePriceList': 3, 'Factor': 1.0, 'UoMPrices': []}, {'PriceList': 4, 'Price': 0.0, 'Currency': None, 'AdditionalPrice1': 0.0, 'AdditionalCurrency1': None, 'AdditionalPrice2': 0.0, 'AdditionalCurrency2': None, 'BasePriceList': 4, 'Factor': 1.0, 'UoMPrices': []}, {'PriceList': 5, 'Price': 0.0, 'Currency': None, 'AdditionalPrice1': 0.0, 'AdditionalCurrency1': None, 'AdditionalPrice2': 0.0, 'AdditionalCurrency2': None, 'BasePriceList': 5, 'Factor': 1.0, 'UoMPrices': []}, {'PriceList': 6, 'Price': 0.0, 'Currency': None, 'AdditionalPrice1': 0.0, 'AdditionalCurrency1': None, 'AdditionalPrice2': 0.0, 'AdditionalCurrency2': None, 'BasePriceList': 6, 'Factor': 1.0, 'UoMPrices': []}, {'PriceList': 7, 'Price': 0.0, 'Currency': None, 'AdditionalPrice1': 0.0, 'AdditionalCurrency1': None, 'AdditionalPrice2': 0.0, 'AdditionalCurrency2': None, 'BasePriceList': 7, 'Factor': 1.0, 'UoMPrices': []}, {'PriceList': 8, 'Price': 0.0, 'Currency': None, 'AdditionalPrice1': 0.0, 'AdditionalCurrency1': None, 'AdditionalPrice2': 0.0, 'AdditionalCurrency2': None, 'BasePriceList': 8, 'Factor': 1.0, 'UoMPrices': []}, {'PriceList': 9, 'Price': 0.0, 'Currency': None, 'AdditionalPrice1': 0.0, 'AdditionalCurrency1': None, 'AdditionalPrice2': 0.0, 'AdditionalCurrency2': None, 'BasePriceList': 9, 'Factor': 1.0, 'UoMPrices': []}, {'PriceList': 10, 'Price': 0.0, 'Currency': None, 'AdditionalPrice1': 0.0, 'AdditionalCurrency1': None, 'AdditionalPrice2': 0.0, 'AdditionalCurrency2': None, 'BasePriceList': 10, 'Factor': 1.0, 'UoMPrices': []}], 'ItemWarehouseInfoCollection': [{'MinimalStock': 0.0, 'MaximalStock': 0.0, 'MinimalOrder': 0.0, 'StandardAveragePrice': 180.0, 'Locked': 'tNO', 'InventoryAccount': None, 'CostAccount': None, 'TransferAccount': None, 'RevenuesAccount': None, 'VarienceAccount': None, 'DecreasingAccount': None, 'IncreasingAccount': None, 'ReturningAccount': None, 'ExpensesAccount': None, 'EURevenuesAccount': None, 'EUExpensesAccount': None, 'ForeignRevenueAcc': None, 'ForeignExpensAcc': None, 'ExemptIncomeAcc': None, 'PriceDifferenceAcc': None, 'WarehouseCode': '5A', 'InStock': 25.0, 'Committed': 0.0, 'Ordered': 0.0, 'CountedQuantity': 0.0, 'WasCounted': 'tNO', 'UserSignature': 50, 'Counted': 0.0, 'ExpenseClearingAct': None, 'PurchaseCreditAcc': None, 'EUPurchaseCreditAcc': None, 'ForeignPurchaseCreditAcc': None, 'SalesCreditAcc': None, 'SalesCreditEUAcc': None, 'ExemptedCredits': None, 'SalesCreditForeignAcc': None, 'ExpenseOffsettingAccount': None, 'WipAccount': None, 'ExchangeRateDifferencesAcct': None, 'GoodsClearingAcct': None, 'NegativeInventoryAdjustmentAccount': None, 'CostInflationOffsetAccount': None, 'GLDecreaseAcct': None, 'GLIncreaseAcct': None, 'PAReturnAcct': None, 'PurchaseAcct': None, 'PurchaseOffsetAcct': None, 'ShippedGoodsAccount': None, 'StockInflationOffsetAccount': None, 'StockInflationAdjustAccount': None, 'VATInRevenueAccount': None, 'WipVarianceAccount': None, 'CostInflationAccount': None, 'WHIncomingCenvatAccount': None, 'WHOutgoingCenvatAccount': None, 'StockInTransitAccount': None, 'WipOffsetProfitAndLossAccount': None, 'InventoryOffsetProfitAndLossAccount': None, 'DefaultBin': None, 'DefaultBinEnforced': 'tNO', 'PurchaseBalanceAccount': None, 'ItemCode': 'ACC-0000005', 'ItemCycleCounts': []}, {'MinimalStock': 0.0, 'MaximalStock': 0.0, 'MinimalOrder': 0.0, 'StandardAveragePrice': 180.0, 'Locked': 'tNO', 'InventoryAccount': None, 'CostAccount': None, 'TransferAccount': None, 'RevenuesAccount': None, 'VarienceAccount': None, 'DecreasingAccount': None, 'IncreasingAccount': None, 'ReturningAccount': None, 'ExpensesAccount': None, 'EURevenuesAccount': None, 'EUExpensesAccount': None, 'ForeignRevenueAcc': None, 'ForeignExpensAcc': None, 'ExemptIncomeAcc': None, 'PriceDifferenceAcc': None, 'WarehouseCode': 'Arkan', 'InStock': 25.0, 'Committed': 0.0, 'Ordered': 0.0, 'CountedQuantity': 0.0, 'WasCounted': 'tNO', 'UserSignature': 50, 'Counted': 0.0, 'ExpenseClearingAct': None, 'PurchaseCreditAcc': None, 'EUPurchaseCreditAcc': None, 'ForeignPurchaseCreditAcc': None, 'SalesCreditAcc': None, 'SalesCreditEUAcc': None, 'ExemptedCredits': None, 'SalesCreditForeignAcc': None, 'ExpenseOffsettingAccount': None, 'WipAccount': None, 'ExchangeRateDifferencesAcct': None, 'GoodsClearingAcct': None, 'NegativeInventoryAdjustmentAccount': None, 'CostInflationOffsetAccount': None, 'GLDecreaseAcct': None, 'GLIncreaseAcct': None, 'PAReturnAcct': None, 'PurchaseAcct': None, 'PurchaseOffsetAcct': None, 'ShippedGoodsAccount': None, 'StockInflationOffsetAccount': None, 'StockInflationAdjustAccount': None, 'VATInRevenueAccount': None, 'WipVarianceAccount': None, 'CostInflationAccount': None, 'WHIncomingCenvatAccount': None, 'WHOutgoingCenvatAccount': None, 'StockInTransitAccount': None, 'WipOffsetProfitAndLossAccount': None, 'InventoryOffsetProfitAndLossAccount': None, 'DefaultBin': None, 'DefaultBinEnforced': 'tNO', 'PurchaseBalanceAccount': None, 'ItemCode': 'ACC-0000005', 'ItemCycleCounts': []}, {'MinimalStock': 0.0, 'MaximalStock': 0.0, 'MinimalOrder': 0.0, 'StandardAveragePrice': 0.0, 'Locked': 'tNO', 'InventoryAccount': None, 'CostAccount': None, 'TransferAccount': None, 'RevenuesAccount': None, 'VarienceAccount': None, 'DecreasingAccount': None, 'IncreasingAccount': None, 'ReturningAccount': None, 'ExpensesAccount': None, 'EURevenuesAccount': None, 'EUExpensesAccount': None, 'ForeignRevenueAcc': None, 'ForeignExpensAcc': None, 'ExemptIncomeAcc': None, 'PriceDifferenceAcc': None, 'WarehouseCode': 'DIP', 'InStock': 0.0, 'Committed': 0.0, 'Ordered': 0.0, 'CountedQuantity': 0.0, 'WasCounted': 'tNO', 'UserSignature': 50, 'Counted': 0.0, 'ExpenseClearingAct': None, 'PurchaseCreditAcc': None, 'EUPurchaseCreditAcc': None, 'ForeignPurchaseCreditAcc': None, 'SalesCreditAcc': None, 'SalesCreditEUAcc': None, 'ExemptedCredits': None, 'SalesCreditForeignAcc': None, 'ExpenseOffsettingAccount': None, 'WipAccount': None, 'ExchangeRateDifferencesAcct': None, 'GoodsClearingAcct': None, 'NegativeInventoryAdjustmentAccount': None, 'CostInflationOffsetAccount': None, 'GLDecreaseAcct': None, 'GLIncreaseAcct': None, 'PAReturnAcct': None, 'PurchaseAcct': None, 'PurchaseOffsetAcct': None, 'ShippedGoodsAccount': None, 'StockInflationOffsetAccount': None, 'StockInflationAdjustAccount': None, 'VATInRevenueAccount': None, 'WipVarianceAccount': None, 'CostInflationAccount': None, 'WHIncomingCenvatAccount': None, 'WHOutgoingCenvatAccount': None, 'StockInTransitAccount': None, 'WipOffsetProfitAndLossAccount': None, 'InventoryOffsetProfitAndLossAccount': None, 'DefaultBin': None, 'DefaultBinEnforced': 'tNO', 'PurchaseBalanceAccount': None, 'ItemCode': 'ACC-0000005', 'ItemCycleCounts': []}, {'MinimalStock': 0.0, 'MaximalStock': 0.0, 'MinimalOrder': 0.0, 'StandardAveragePrice': 180.0, 'Locked': 'tNO', 'InventoryAccount': None, 'CostAccount': None, 'TransferAccount': None, 'RevenuesAccount': None, 'VarienceAccount': None, 'DecreasingAccount': None, 'IncreasingAccount': None, 'ReturningAccount': None, 'ExpensesAccount': None, 'EURevenuesAccount': None, 'EUExpensesAccount': None, 'ForeignRevenueAcc': None, 'ForeignExpensAcc': None, 'ExemptIncomeAcc': None, 'PriceDifferenceAcc': None, 'WarehouseCode': 'INC', 'InStock': 0.0, 'Committed': 0.0, 'Ordered': 0.0, 'CountedQuantity': 0.0, 'WasCounted': 'tNO', 'UserSignature': 50, 'Counted': 0.0, 'ExpenseClearingAct': None, 'PurchaseCreditAcc': None, 'EUPurchaseCreditAcc': None, 'ForeignPurchaseCreditAcc': None, 'SalesCreditAcc': None, 'SalesCreditEUAcc': None, 'ExemptedCredits': None, 'SalesCreditForeignAcc': None, 'ExpenseOffsettingAccount': None, 'WipAccount': None, 'ExchangeRateDifferencesAcct': None, 'GoodsClearingAcct': None, 'NegativeInventoryAdjustmentAccount': None, 'CostInflationOffsetAccount': None, 'GLDecreaseAcct': None, 'GLIncreaseAcct': None, 'PAReturnAcct': None, 'PurchaseAcct': None, 'PurchaseOffsetAcct': None, 'ShippedGoodsAccount': None, 'StockInflationOffsetAccount': None, 'StockInflationAdjustAccount': None, 'VATInRevenueAccount': None, 'WipVarianceAccount': None, 'CostInflationAccount': None, 'WHIncomingCenvatAccount': None, 'WHOutgoingCenvatAccount': None, 'StockInTransitAccount': None, 'WipOffsetProfitAndLossAccount': None, 'InventoryOffsetProfitAndLossAccount': None, 'DefaultBin': None, 'DefaultBinEnforced': 'tNO', 'PurchaseBalanceAccount': None, 'ItemCode': 'ACC-0000005', 'ItemCycleCounts': []}, {'MinimalStock': 0.0, 'MaximalStock': 0.0, 'MinimalOrder': 0.0, 'StandardAveragePrice': 0.0, 'Locked': 'tNO', 'InventoryAccount': None, 'CostAccount': None, 'TransferAccount': None, 'RevenuesAccount': None, 'VarienceAccount': None, 'DecreasingAccount': None, 'IncreasingAccount': None, 'ReturningAccount': None, 'ExpensesAccount': None, 'EURevenuesAccount': None, 'EUExpensesAccount': None, 'ForeignRevenueAcc': None, 'ForeignExpensAcc': None, 'ExemptIncomeAcc': None, 'PriceDifferenceAcc': None, 'WarehouseCode': 'ONL', 'InStock': 0.0, 'Committed': 0.0, 'Ordered': 0.0, 'CountedQuantity': 0.0, 'WasCounted': 'tNO', 'UserSignature': 50, 'Counted': 0.0, 'ExpenseClearingAct': None, 'PurchaseCreditAcc': None, 'EUPurchaseCreditAcc': None, 'ForeignPurchaseCreditAcc': None, 'SalesCreditAcc': None, 'SalesCreditEUAcc': None, 'ExemptedCredits': None, 'SalesCreditForeignAcc': None, 'ExpenseOffsettingAccount': None, 'WipAccount': None, 'ExchangeRateDifferencesAcct': None, 'GoodsClearingAcct': None, 'NegativeInventoryAdjustmentAccount': None, 'CostInflationOffsetAccount': None, 'GLDecreaseAcct': None, 'GLIncreaseAcct': None, 'PAReturnAcct': None, 'PurchaseAcct': None, 'PurchaseOffsetAcct': None, 'ShippedGoodsAccount': None, 'StockInflationOffsetAccount': None, 'StockInflationAdjustAccount': None, 'VATInRevenueAccount': None, 'WipVarianceAccount': None, 'CostInflationAccount': None, 'WHIncomingCenvatAccount': None, 'WHOutgoingCenvatAccount': None, 'StockInTransitAccount': None, 'WipOffsetProfitAndLossAccount': None, 'InventoryOffsetProfitAndLossAccount': None, 'DefaultBin': None, 'DefaultBinEnforced': 'tNO', 'PurchaseBalanceAccount': None, 'ItemCode': 'ACC-0000005', 'ItemCycleCounts': []}, {'MinimalStock': 0.0, 'MaximalStock': 0.0, 'MinimalOrder': 0.0, 'StandardAveragePrice': 0.0, 'Locked': 'tNO', 'InventoryAccount': None, 'CostAccount': None, 'TransferAccount': None, 'RevenuesAccount': None, 'VarienceAccount': None, 'DecreasingAccount': None, 'IncreasingAccount': None, 'ReturningAccount': None, 'ExpensesAccount': None, 'EURevenuesAccount': None, 'EUExpensesAccount': None, 'ForeignRevenueAcc': None, 'ForeignExpensAcc': None, 'ExemptIncomeAcc': None, 'PriceDifferenceAcc': None, 'WarehouseCode': 'PHO', 'InStock': 0.0, 'Committed': 0.0, 'Ordered': 0.0, 'CountedQuantity': 0.0, 'WasCounted': 'tNO', 'UserSignature': 50, 'Counted': 0.0, 'ExpenseClearingAct': None, 'PurchaseCreditAcc': None, 'EUPurchaseCreditAcc': None, 'ForeignPurchaseCreditAcc': None, 'SalesCreditAcc': None, 'SalesCreditEUAcc': None, 'ExemptedCredits': None, 'SalesCreditForeignAcc': None, 'ExpenseOffsettingAccount': None, 'WipAccount': None, 'ExchangeRateDifferencesAcct': None, 'GoodsClearingAcct': None, 'NegativeInventoryAdjustmentAccount': None, 'CostInflationOffsetAccount': None, 'GLDecreaseAcct': None, 'GLIncreaseAcct': None, 'PAReturnAcct': None, 'PurchaseAcct': None, 'PurchaseOffsetAcct': None, 'ShippedGoodsAccount': None, 'StockInflationOffsetAccount': None, 'StockInflationAdjustAccount': None, 'VATInRevenueAccount': None, 'WipVarianceAccount': None, 'CostInflationAccount': None, 'WHIncomingCenvatAccount': None, 'WHOutgoingCenvatAccount': None, 'StockInTransitAccount': None, 'WipOffsetProfitAndLossAccount': None, 'InventoryOffsetProfitAndLossAccount': None, 'DefaultBin': None, 'DefaultBinEnforced': 'tNO', 'PurchaseBalanceAccount': None, 'ItemCode': 'ACC-0000005', 'ItemCycleCounts': []}, {'MinimalStock': 0.0, 'MaximalStock': 0.0, 'MinimalOrder': 0.0, 'StandardAveragePrice': 0.0, 'Locked': 'tNO', 'InventoryAccount': None, 'CostAccount': None, 'TransferAccount': None, 'RevenuesAccount': None, 'VarienceAccount': None, 'DecreasingAccount': None, 'IncreasingAccount': None, 'ReturningAccount': None, 'ExpensesAccount': None, 'EURevenuesAccount': None, 'EUExpensesAccount': None, 'ForeignRevenueAcc': None, 'ForeignExpensAcc': None, 'ExemptIncomeAcc': None, 'PriceDifferenceAcc': None, 'WarehouseCode': 'PHO-EX', 'InStock': 0.0, 'Committed': 0.0, 'Ordered': 0.0, 'CountedQuantity': 0.0, 'WasCounted': 'tNO', 'UserSignature': 1, 'Counted': 0.0, 'ExpenseClearingAct': None, 'PurchaseCreditAcc': None, 'EUPurchaseCreditAcc': None, 'ForeignPurchaseCreditAcc': None, 'SalesCreditAcc': None, 'SalesCreditEUAcc': None, 'ExemptedCredits': None, 'SalesCreditForeignAcc': None, 'ExpenseOffsettingAccount': None, 'WipAccount': None, 'ExchangeRateDifferencesAcct': None, 'GoodsClearingAcct': None, 'NegativeInventoryAdjustmentAccount': None, 'CostInflationOffsetAccount': None, 'GLDecreaseAcct': None, 'GLIncreaseAcct': None, 'PAReturnAcct': None, 'PurchaseAcct': None, 'PurchaseOffsetAcct': None, 'ShippedGoodsAccount': None, 'StockInflationOffsetAccount': None, 'StockInflationAdjustAccount': None, 'VATInRevenueAccount': None, 'WipVarianceAccount': None, 'CostInflationAccount': None, 'WHIncomingCenvatAccount': None, 'WHOutgoingCenvatAccount': None, 'StockInTransitAccount': None, 'WipOffsetProfitAndLossAccount': None, 'InventoryOffsetProfitAndLossAccount': None, 'DefaultBin': None, 'DefaultBinEnforced': 'tNO', 'PurchaseBalanceAccount': None, 'ItemCode': 'ACC-0000005', 'ItemCycleCounts': []}, {'MinimalStock': 0.0, 'MaximalStock': 0.0, 'MinimalOrder': 0.0, 'StandardAveragePrice': 0.0, 'Locked': 'tNO', 'InventoryAccount': None, 'CostAccount': None, 'TransferAccount': None, 'RevenuesAccount': None, 'VarienceAccount': None, 'DecreasingAccount': None, 'IncreasingAccount': None, 'ReturningAccount': None, 'ExpensesAccount': None, 'EURevenuesAccount': None, 'EUExpensesAccount': None, 'ForeignRevenueAcc': None, 'ForeignExpensAcc': None, 'ExemptIncomeAcc': None, 'PriceDifferenceAcc': None, 'WarehouseCode': 'PHO-IN', 'InStock': 0.0, 'Committed': 0.0, 'Ordered': 0.0, 'CountedQuantity': 0.0, 'WasCounted': 'tNO', 'UserSignature': 1, 'Counted': 0.0, 'ExpenseClearingAct': None, 'PurchaseCreditAcc': None, 'EUPurchaseCreditAcc': None, 'ForeignPurchaseCreditAcc': None, 'SalesCreditAcc': None, 'SalesCreditEUAcc': None, 'ExemptedCredits': None, 'SalesCreditForeignAcc': None, 'ExpenseOffsettingAccount': None, 'WipAccount': None, 'ExchangeRateDifferencesAcct': None, 'GoodsClearingAcct': None, 'NegativeInventoryAdjustmentAccount': None, 'CostInflationOffsetAccount': None, 'GLDecreaseAcct': None, 'GLIncreaseAcct': None, 'PAReturnAcct': None, 'PurchaseAcct': None, 'PurchaseOffsetAcct': None, 'ShippedGoodsAccount': None, 'StockInflationOffsetAccount': None, 'StockInflationAdjustAccount': None, 'VATInRevenueAccount': None, 'WipVarianceAccount': None, 'CostInflationAccount': None, 'WHIncomingCenvatAccount': None, 'WHOutgoingCenvatAccount': None, 'StockInTransitAccount': None, 'WipOffsetProfitAndLossAccount': None, 'InventoryOffsetProfitAndLossAccount': None, 'DefaultBin': None, 'DefaultBinEnforced': 'tNO', 'PurchaseBalanceAccount': None, 'ItemCode': 'ACC-0000005', 'ItemCycleCounts': []}, {'MinimalStock': 0.0, 'MaximalStock': 0.0, 'MinimalOrder': 0.0, 'StandardAveragePrice': 0.0, 'Locked': 'tNO', 'InventoryAccount': None, 'CostAccount': None, 'TransferAccount': None, 'RevenuesAccount': None, 'VarienceAccount': None, 'DecreasingAccount': None, 'IncreasingAccount': None, 'ReturningAccount': None, 'ExpensesAccount': None, 'EURevenuesAccount': None, 'EUExpensesAccount': None, 'ForeignRevenueAcc': None, 'ForeignExpensAcc': None, 'ExemptIncomeAcc': None, 'PriceDifferenceAcc': None, 'WarehouseCode': 'RTW', 'InStock': 0.0, 'Committed': 0.0, 'Ordered': 0.0, 'CountedQuantity': 0.0, 'WasCounted': 'tNO', 'UserSignature': 50, 'Counted': 0.0, 'ExpenseClearingAct': None, 'PurchaseCreditAcc': None, 'EUPurchaseCreditAcc': None, 'ForeignPurchaseCreditAcc': None, 'SalesCreditAcc': None, 'SalesCreditEUAcc': None, 'ExemptedCredits': None, 'SalesCreditForeignAcc': None, 'ExpenseOffsettingAccount': None, 'WipAccount': None, 'ExchangeRateDifferencesAcct': None, 'GoodsClearingAcct': None, 'NegativeInventoryAdjustmentAccount': None, 'CostInflationOffsetAccount': None, 'GLDecreaseAcct': None, 'GLIncreaseAcct': None, 'PAReturnAcct': None, 'PurchaseAcct': None, 'PurchaseOffsetAcct': None, 'ShippedGoodsAccount': None, 'StockInflationOffsetAccount': None, 'StockInflationAdjustAccount': None, 'VATInRevenueAccount': None, 'WipVarianceAccount': None, 'CostInflationAccount': None, 'WHIncomingCenvatAccount': None, 'WHOutgoingCenvatAccount': None, 'StockInTransitAccount': None, 'WipOffsetProfitAndLossAccount': None, 'InventoryOffsetProfitAndLossAccount': None, 'DefaultBin': None, 'DefaultBinEnforced': 'tNO', 'PurchaseBalanceAccount': None, 'ItemCode': 'ACC-0000005', 'ItemCycleCounts': []}, {'MinimalStock': 0.0, 'MaximalStock': 0.0, 'MinimalOrder': 0.0, 'StandardAveragePrice': 0.0, 'Locked': 'tNO', 'InventoryAccount': None, 'CostAccount': None, 'TransferAccount': None, 'RevenuesAccount': None, 'VarienceAccount': None, 'DecreasingAccount': None, 'IncreasingAccount': None, 'ReturningAccount': None, 'ExpensesAccount': None, 'EURevenuesAccount': None, 'EUExpensesAccount': None, 'ForeignRevenueAcc': None, 'ForeignExpensAcc': None, 'ExemptIncomeAcc': None, 'PriceDifferenceAcc': None, 'WarehouseCode': 'RTWH', 'InStock': 0.0, 'Committed': 0.0, 'Ordered': 0.0, 'CountedQuantity': 0.0, 'WasCounted': 'tNO', 'UserSignature': 1, 'Counted': 0.0, 'ExpenseClearingAct': None, 'PurchaseCreditAcc': None, 'EUPurchaseCreditAcc': None, 'ForeignPurchaseCreditAcc': None, 'SalesCreditAcc': None, 'SalesCreditEUAcc': None, 'ExemptedCredits': None, 'SalesCreditForeignAcc': None, 'ExpenseOffsettingAccount': None, 'WipAccount': None, 'ExchangeRateDifferencesAcct': None, 'GoodsClearingAcct': None, 'NegativeInventoryAdjustmentAccount': None, 'CostInflationOffsetAccount': None, 'GLDecreaseAcct': None, 'GLIncreaseAcct': None, 'PAReturnAcct': None, 'PurchaseAcct': None, 'PurchaseOffsetAcct': None, 'ShippedGoodsAccount': None, 'StockInflationOffsetAccount': None, 'StockInflationAdjustAccount': None, 'VATInRevenueAccount': None, 'WipVarianceAccount': None, 'CostInflationAccount': None, 'WHIncomingCenvatAccount': None, 'WHOutgoingCenvatAccount': None, 'StockInTransitAccount': None, 'WipOffsetProfitAndLossAccount': None, 'InventoryOffsetProfitAndLossAccount': None, 'DefaultBin': None, 'DefaultBinEnforced': 'tNO', 'PurchaseBalanceAccount': None, 'ItemCode': 'ACC-0000005', 'ItemCycleCounts': []}, {'MinimalStock': 0.0, 'MaximalStock': 0.0, 'MinimalOrder': 0.0, 'StandardAveragePrice': 0.0, 'Locked': 'tNO', 'InventoryAccount': None, 'CostAccount': None, 'TransferAccount': None, 'RevenuesAccount': None, 'VarienceAccount': None, 'DecreasingAccount': None, 'IncreasingAccount': None, 'ReturningAccount': None, 'ExpensesAccount': None, 'EURevenuesAccount': None, 'EUExpensesAccount': None, 'ForeignRevenueAcc': None, 'ForeignExpensAcc': None, 'ExemptIncomeAcc': None, 'PriceDifferenceAcc': None, 'WarehouseCode': 'SW', 'InStock': 0.0, 'Committed': 0.0, 'Ordered': 0.0, 'CountedQuantity': 0.0, 'WasCounted': 'tNO', 'UserSignature': 50, 'Counted': 0.0, 'ExpenseClearingAct': None, 'PurchaseCreditAcc': None, 'EUPurchaseCreditAcc': None, 'ForeignPurchaseCreditAcc': None, 'SalesCreditAcc': None, 'SalesCreditEUAcc': None, 'ExemptedCredits': None, 'SalesCreditForeignAcc': None, 'ExpenseOffsettingAccount': None, 'WipAccount': None, 'ExchangeRateDifferencesAcct': None, 'GoodsClearingAcct': None, 'NegativeInventoryAdjustmentAccount': None, 'CostInflationOffsetAccount': None, 'GLDecreaseAcct': None, 'GLIncreaseAcct': None, 'PAReturnAcct': None, 'PurchaseAcct': None, 'PurchaseOffsetAcct': None, 'ShippedGoodsAccount': None, 'StockInflationOffsetAccount': None, 'StockInflationAdjustAccount': None, 'VATInRevenueAccount': None, 'WipVarianceAccount': None, 'CostInflationAccount': None, 'WHIncomingCenvatAccount': None, 'WHOutgoingCenvatAccount': None, 'StockInTransitAccount': None, 'WipOffsetProfitAndLossAccount': None, 'InventoryOffsetProfitAndLossAccount': None, 'DefaultBin': None, 'DefaultBinEnforced': 'tNO', 'PurchaseBalanceAccount': None, 'ItemCode': 'ACC-0000005', 'ItemCycleCounts': []}, {'MinimalStock': 0.0, 'MaximalStock': 0.0, 'MinimalOrder': 0.0, 'StandardAveragePrice': 0.0, 'Locked': 'tNO', 'InventoryAccount': None, 'CostAccount': None, 'TransferAccount': None, 'RevenuesAccount': None, 'VarienceAccount': None, 'DecreasingAccount': None, 'IncreasingAccount': None, 'ReturningAccount': None, 'ExpensesAccount': None, 'EURevenuesAccount': None, 'EUExpensesAccount': None, 'ForeignRevenueAcc': None, 'ForeignExpensAcc': None, 'ExemptIncomeAcc': None, 'PriceDifferenceAcc': None, 'WarehouseCode': 'WLS', 'InStock': 0.0, 'Committed': 0.0, 'Ordered': 0.0, 'CountedQuantity': 0.0, 'WasCounted': 'tNO', 'UserSignature': 50, 'Counted': 0.0, 'ExpenseClearingAct': None, 'PurchaseCreditAcc': None, 'EUPurchaseCreditAcc': None, 'ForeignPurchaseCreditAcc': None, 'SalesCreditAcc': None, 'SalesCreditEUAcc': None, 'ExemptedCredits': None, 'SalesCreditForeignAcc': None, 'ExpenseOffsettingAccount': None, 'WipAccount': None, 'ExchangeRateDifferencesAcct': None, 'GoodsClearingAcct': None, 'NegativeInventoryAdjustmentAccount': None, 'CostInflationOffsetAccount': None, 'GLDecreaseAcct': None, 'GLIncreaseAcct': None, 'PAReturnAcct': None, 'PurchaseAcct': None, 'PurchaseOffsetAcct': None, 'ShippedGoodsAccount': None, 'StockInflationOffsetAccount': None, 'StockInflationAdjustAccount': None, 'VATInRevenueAccount': None, 'WipVarianceAccount': None, 'CostInflationAccount': None, 'WHIncomingCenvatAccount': None, 'WHOutgoingCenvatAccount': None, 'StockInTransitAccount': None, 'WipOffsetProfitAndLossAccount': None, 'InventoryOffsetProfitAndLossAccount': None, 'DefaultBin': None, 'DefaultBinEnforced': 'tNO', 'PurchaseBalanceAccount': None, 'ItemCode': 'ACC-0000005', 'ItemCycleCounts': []}, {'MinimalStock': 0.0, 'MaximalStock': 0.0, 'MinimalOrder': 0.0, 'StandardAveragePrice': 0.0, 'Locked': 'tNO', 'InventoryAccount': None, 'CostAccount': None, 'TransferAccount': None, 'RevenuesAccount': None, 'VarienceAccount': None, 'DecreasingAccount': None, 'IncreasingAccount': None, 'ReturningAccount': None, 'ExpensesAccount': None, 'EURevenuesAccount': None, 'EUExpensesAccount': None, 'ForeignRevenueAcc': None, 'ForeignExpensAcc': None, 'ExemptIncomeAcc': None, 'PriceDifferenceAcc': None, 'WarehouseCode': 'WW', 'InStock': 0.0, 'Committed': 0.0, 'Ordered': 0.0, 'CountedQuantity': 0.0, 'WasCounted': 'tNO', 'UserSignature': 50, 'Counted': 0.0, 'ExpenseClearingAct': None, 'PurchaseCreditAcc': None, 'EUPurchaseCreditAcc': None, 'ForeignPurchaseCreditAcc': None, 'SalesCreditAcc': None, 'SalesCreditEUAcc': None, 'ExemptedCredits': None, 'SalesCreditForeignAcc': None, 'ExpenseOffsettingAccount': None, 'WipAccount': None, 'ExchangeRateDifferencesAcct': None, 'GoodsClearingAcct': None, 'NegativeInventoryAdjustmentAccount': None, 'CostInflationOffsetAccount': None, 'GLDecreaseAcct': None, 'GLIncreaseAcct': None, 'PAReturnAcct': None, 'PurchaseAcct': None, 'PurchaseOffsetAcct': None, 'ShippedGoodsAccount': None, 'StockInflationOffsetAccount': None, 'StockInflationAdjustAccount': None, 'VATInRevenueAccount': None, 'WipVarianceAccount': None, 'CostInflationAccount': None, 'WHIncomingCenvatAccount': None, 'WHOutgoingCenvatAccount': None, 'StockInTransitAccount': None, 'WipOffsetProfitAndLossAccount': None, 'InventoryOffsetProfitAndLossAccount': None, 'DefaultBin': None, 'DefaultBinEnforced': 'tNO', 'PurchaseBalanceAccount': None, 'ItemCode': 'ACC-0000005', 'ItemCycleCounts': []}, {'MinimalStock': 0.0, 'MaximalStock': 0.0, 'MinimalOrder': 0.0, 'StandardAveragePrice': 0.0, 'Locked': 'tNO', 'InventoryAccount': None, 'CostAccount': None, 'TransferAccount': None, 'RevenuesAccount': None, 'VarienceAccount': None, 'DecreasingAccount': None, 'IncreasingAccount': None, 'ReturningAccount': None, 'ExpensesAccount': None, 'EURevenuesAccount': None, 'EUExpensesAccount': None, 'ForeignRevenueAcc': None, 'ForeignExpensAcc': None, 'ExemptIncomeAcc': None, 'PriceDifferenceAcc': None, 'WarehouseCode': 'WW-CON', 'InStock': 0.0, 'Committed': 0.0, 'Ordered': 0.0, 'CountedQuantity': 0.0, 'WasCounted': 'tNO', 'UserSignature': 50, 'Counted': 0.0, 'ExpenseClearingAct': None, 'PurchaseCreditAcc': None, 'EUPurchaseCreditAcc': None, 'ForeignPurchaseCreditAcc': None, 'SalesCreditAcc': None, 'SalesCreditEUAcc': None, 'ExemptedCredits': None, 'SalesCreditForeignAcc': None, 'ExpenseOffsettingAccount': None, 'WipAccount': None, 'ExchangeRateDifferencesAcct': None, 'GoodsClearingAcct': None, 'NegativeInventoryAdjustmentAccount': None, 'CostInflationOffsetAccount': None, 'GLDecreaseAcct': None, 'GLIncreaseAcct': None, 'PAReturnAcct': None, 'PurchaseAcct': None, 'PurchaseOffsetAcct': None, 'ShippedGoodsAccount': None, 'StockInflationOffsetAccount': None, 'StockInflationAdjustAccount': None, 'VATInRevenueAccount': None, 'WipVarianceAccount': None, 'CostInflationAccount': None, 'WHIncomingCenvatAccount': None, 'WHOutgoingCenvatAccount': None, 'StockInTransitAccount': None, 'WipOffsetProfitAndLossAccount': None, 'InventoryOffsetProfitAndLossAccount': None, 'DefaultBin': None, 'DefaultBinEnforced': 'tNO', 'PurchaseBalanceAccount': None, 'ItemCode': 'ACC-0000005', 'ItemCycleCounts': []}, {'MinimalStock': 0.0, 'MaximalStock': 0.0, 'MinimalOrder': 0.0, 'StandardAveragePrice': 0.0, 'Locked': 'tNO', 'InventoryAccount': None, 'CostAccount': None, 'TransferAccount': None, 'RevenuesAccount': None, 'VarienceAccount': None, 'DecreasingAccount': None, 'IncreasingAccount': None, 'ReturningAccount': None, 'ExpensesAccount': None, 'EURevenuesAccount': None, 'EUExpensesAccount': None, 'ForeignRevenueAcc': None, 'ForeignExpensAcc': None, 'ExemptIncomeAcc': None, 'PriceDifferenceAcc': None, 'WarehouseCode': 'WW-DAM', 'InStock': 0.0, 'Committed': 0.0, 'Ordered': 0.0, 'CountedQuantity': 0.0, 'WasCounted': 'tNO', 'UserSignature': 50, 'Counted': 0.0, 'ExpenseClearingAct': None, 'PurchaseCreditAcc': None, 'EUPurchaseCreditAcc': None, 'ForeignPurchaseCreditAcc': None, 'SalesCreditAcc': None, 'SalesCreditEUAcc': None, 'ExemptedCredits': None, 'SalesCreditForeignAcc': None, 'ExpenseOffsettingAccount': None, 'WipAccount': None, 'ExchangeRateDifferencesAcct': None, 'GoodsClearingAcct': None, 'NegativeInventoryAdjustmentAccount': None, 'CostInflationOffsetAccount': None, 'GLDecreaseAcct': None, 'GLIncreaseAcct': None, 'PAReturnAcct': None, 'PurchaseAcct': None, 'PurchaseOffsetAcct': None, 'ShippedGoodsAccount': None, 'StockInflationOffsetAccount': None, 'StockInflationAdjustAccount': None, 'VATInRevenueAccount': None, 'WipVarianceAccount': None, 'CostInflationAccount': None, 'WHIncomingCenvatAccount': None, 'WHOutgoingCenvatAccount': None, 'StockInTransitAccount': None, 'WipOffsetProfitAndLossAccount': None, 'InventoryOffsetProfitAndLossAccount': None, 'DefaultBin': None, 'DefaultBinEnforced': 'tNO', 'PurchaseBalanceAccount': None, 'ItemCode': 'ACC-0000005', 'ItemCycleCounts': []}, {'MinimalStock': 0.0, 'MaximalStock': 0.0, 'MinimalOrder': 0.0, 'StandardAveragePrice': 0.0, 'Locked': 'tNO', 'InventoryAccount': None, 'CostAccount': None, 'TransferAccount': None, 'RevenuesAccount': None, 'VarienceAccount': None, 'DecreasingAccount': None, 'IncreasingAccount': None, 'ReturningAccount': None, 'ExpensesAccount': None, 'EURevenuesAccount': None, 'EUExpensesAccount': None, 'ForeignRevenueAcc': None, 'ForeignExpensAcc': None, 'ExemptIncomeAcc': None, 'PriceDifferenceAcc': None, 'WarehouseCode': 'WW-REP', 'InStock': 0.0, 'Committed': 0.0, 'Ordered': 0.0, 'CountedQuantity': 0.0, 'WasCounted': 'tNO', 'UserSignature': 50, 'Counted': 0.0, 'ExpenseClearingAct': None, 'PurchaseCreditAcc': None, 'EUPurchaseCreditAcc': None, 'ForeignPurchaseCreditAcc': None, 'SalesCreditAcc': None, 'SalesCreditEUAcc': None, 'ExemptedCredits': None, 'SalesCreditForeignAcc': None, 'ExpenseOffsettingAccount': None, 'WipAccount': None, 'ExchangeRateDifferencesAcct': None, 'GoodsClearingAcct': None, 'NegativeInventoryAdjustmentAccount': None, 'CostInflationOffsetAccount': None, 'GLDecreaseAcct': None, 'GLIncreaseAcct': None, 'PAReturnAcct': None, 'PurchaseAcct': None, 'PurchaseOffsetAcct': None, 'ShippedGoodsAccount': None, 'StockInflationOffsetAccount': None, 'StockInflationAdjustAccount': None, 'VATInRevenueAccount': None, 'WipVarianceAccount': None, 'CostInflationAccount': None, 'WHIncomingCenvatAccount': None, 'WHOutgoingCenvatAccount': None, 'StockInTransitAccount': None, 'WipOffsetProfitAndLossAccount': None, 'InventoryOffsetProfitAndLossAccount': None, 'DefaultBin': None, 'DefaultBinEnforced': 'tNO', 'PurchaseBalanceAccount': None, 'ItemCode': 'ACC-0000005', 'ItemCycleCounts': []}, {'MinimalStock': 0.0, 'MaximalStock': 0.0, 'MinimalOrder': 0.0, 'StandardAveragePrice': 0.0, 'Locked': 'tNO', 'InventoryAccount': None, 'CostAccount': None, 'TransferAccount': None, 'RevenuesAccount': None, 'VarienceAccount': None, 'DecreasingAccount': None, 'IncreasingAccount': None, 'ReturningAccount': None, 'ExpensesAccount': None, 'EURevenuesAccount': None, 'EUExpensesAccount': None, 'ForeignRevenueAcc': None, 'ForeignExpensAcc': None, 'ExemptIncomeAcc': None, 'PriceDifferenceAcc': None, 'WarehouseCode': 'WW-SAM', 'InStock': 0.0, 'Committed': 0.0, 'Ordered': 0.0, 'CountedQuantity': 0.0, 'WasCounted': 'tNO', 'UserSignature': 50, 'Counted': 0.0, 'ExpenseClearingAct': None, 'PurchaseCreditAcc': None, 'EUPurchaseCreditAcc': None, 'ForeignPurchaseCreditAcc': None, 'SalesCreditAcc': None, 'SalesCreditEUAcc': None, 'ExemptedCredits': None, 'SalesCreditForeignAcc': None, 'ExpenseOffsettingAccount': None, 'WipAccount': None, 'ExchangeRateDifferencesAcct': None, 'GoodsClearingAcct': None, 'NegativeInventoryAdjustmentAccount': None, 'CostInflationOffsetAccount': None, 'GLDecreaseAcct': None, 'GLIncreaseAcct': None, 'PAReturnAcct': None, 'PurchaseAcct': None, 'PurchaseOffsetAcct': None, 'ShippedGoodsAccount': None, 'StockInflationOffsetAccount': None, 'StockInflationAdjustAccount': None, 'VATInRevenueAccount': None, 'WipVarianceAccount': None, 'CostInflationAccount': None, 'WHIncomingCenvatAccount': None, 'WHOutgoingCenvatAccount': None, 'StockInTransitAccount': None, 'WipOffsetProfitAndLossAccount': None, 'InventoryOffsetProfitAndLossAccount': None, 'DefaultBin': None, 'DefaultBinEnforced': 'tNO', 'PurchaseBalanceAccount': None, 'ItemCode': 'ACC-0000005', 'ItemCycleCounts': []}, {'MinimalStock': 0.0, 'MaximalStock': 0.0, 'MinimalOrder': 0.0, 'StandardAveragePrice': 0.0, 'Locked': 'tNO', 'InventoryAccount': None, 'CostAccount': None, 'TransferAccount': None, 'RevenuesAccount': None, 'VarienceAccount': None, 'DecreasingAccount': None, 'IncreasingAccount': None, 'ReturningAccount': None, 'ExpensesAccount': None, 'EURevenuesAccount': None, 'EUExpensesAccount': None, 'ForeignRevenueAcc': None, 'ForeignExpensAcc': None, 'ExemptIncomeAcc': None, 'PriceDifferenceAcc': None, 'WarehouseCode': 'WW-WIP', 'InStock': 0.0, 'Committed': 0.0, 'Ordered': 0.0, 'CountedQuantity': 0.0, 'WasCounted': 'tNO', 'UserSignature': 50, 'Counted': 0.0, 'ExpenseClearingAct': None, 'PurchaseCreditAcc': None, 'EUPurchaseCreditAcc': None, 'ForeignPurchaseCreditAcc': None, 'SalesCreditAcc': None, 'SalesCreditEUAcc': None, 'ExemptedCredits': None, 'SalesCreditForeignAcc': None, 'ExpenseOffsettingAccount': None, 'WipAccount': None, 'ExchangeRateDifferencesAcct': None, 'GoodsClearingAcct': None, 'NegativeInventoryAdjustmentAccount': None, 'CostInflationOffsetAccount': None, 'GLDecreaseAcct': None, 'GLIncreaseAcct': None, 'PAReturnAcct': None, 'PurchaseAcct': None, 'PurchaseOffsetAcct': None, 'ShippedGoodsAccount': None, 'StockInflationOffsetAccount': None, 'StockInflationAdjustAccount': None, 'VATInRevenueAccount': None, 'WipVarianceAccount': None, 'CostInflationAccount': None, 'WHIncomingCenvatAccount': None, 'WHOutgoingCenvatAccount': None, 'StockInTransitAccount': None, 'WipOffsetProfitAndLossAccount': None, 'InventoryOffsetProfitAndLossAccount': None, 'DefaultBin': None, 'DefaultBinEnforced': 'tNO', 'PurchaseBalanceAccount': None, 'ItemCode': 'ACC-0000005', 'ItemCycleCounts': []}, {'MinimalStock': 0.0, 'MaximalStock': 0.0, 'MinimalOrder': 0.0, 'StandardAveragePrice': 0.0, 'Locked': 'tNO', 'InventoryAccount': None, 'CostAccount': None, 'TransferAccount': None, 'RevenuesAccount': None, 'VarienceAccount': None, 'DecreasingAccount': None, 'IncreasingAccount': None, 'ReturningAccount': None, 'ExpensesAccount': None, 'EURevenuesAccount': None, 'EUExpensesAccount': None, 'ForeignRevenueAcc': None, 'ForeignExpensAcc': None, 'ExemptIncomeAcc': None, 'PriceDifferenceAcc': None, 'WarehouseCode': 'ZW', 'InStock': 0.0, 'Committed': 0.0, 'Ordered': 0.0, 'CountedQuantity': 0.0, 'WasCounted': 'tNO', 'UserSignature': 50, 'Counted': 0.0, 'ExpenseClearingAct': None, 'PurchaseCreditAcc': None, 'EUPurchaseCreditAcc': None, 'ForeignPurchaseCreditAcc': None, 'SalesCreditAcc': None, 'SalesCreditEUAcc': None, 'ExemptedCredits': None, 'SalesCreditForeignAcc': None, 'ExpenseOffsettingAccount': None, 'WipAccount': None, 'ExchangeRateDifferencesAcct': None, 'GoodsClearingAcct': None, 'NegativeInventoryAdjustmentAccount': None, 'CostInflationOffsetAccount': None, 'GLDecreaseAcct': None, 'GLIncreaseAcct': None, 'PAReturnAcct': None, 'PurchaseAcct': None, 'PurchaseOffsetAcct': None, 'ShippedGoodsAccount': None, 'StockInflationOffsetAccount': None, 'StockInflationAdjustAccount': None, 'VATInRevenueAccount': None, 'WipVarianceAccount': None, 'CostInflationAccount': None, 'WHIncomingCenvatAccount': None, 'WHOutgoingCenvatAccount': None, 'StockInTransitAccount': None, 'WipOffsetProfitAndLossAccount': None, 'InventoryOffsetProfitAndLossAccount': None, 'DefaultBin': None, 'DefaultBinEnforced': 'tNO', 'PurchaseBalanceAccount': None, 'ItemCode': 'ACC-0000005', 'ItemCycleCounts': []}], 'ItemPreferredVendors': [], 'ItemLocalizationInfos': [], 'ItemProjects': [], 'ItemDistributionRules': [], 'ItemAttributeGroups': [], 'ItemDepreciationParameters': [], 'ItemPeriodControls': [], 'ItemUnitOfMeasurementCollection': [{'UoMType': 'iutInventory', 'UoMEntry': 1, 'DefaultBarcode': 0, 'DefaultPackage': None, 'Length1': 0.0, 'Length1Unit': None, 'Length2': 0.0, 'Length2Unit': None, 'Width1': 0.0, 'Width1Unit': None, 'Width2': 0.0, 'Width2Unit': None, 'Height1': 0.0, 'Height1Unit': None, 'Height2': 0.0, 'Height2Unit': None, 'Volume': 0.0, 'VolumeUnit': None, 'Weight1': 0.0, 'Weight1Unit': None, 'Weight2': 0.0, 'Weight2Unit': None, 'ItemUoMPackageCollection': []}, {'UoMType': 'iutPurchasing', 'UoMEntry': 1, 'DefaultBarcode': 0, 'DefaultPackage': None, 'Length1': 0.0, 'Length1Unit': None, 'Length2': 0.0, 'Length2Unit': None, 'Width1': 0.0, 'Width1Unit': None, 'Width2': 0.0, 'Width2Unit': None, 'Height1': 0.0, 'Height1Unit': None, 'Height2': 0.0, 'Height2Unit': None, 'Volume': 0.0, 'VolumeUnit': 2, 'Weight1': 0.0, 'Weight1Unit': None, 'Weight2': 0.0, 'Weight2Unit': None, 'ItemUoMPackageCollection': []}, {'UoMType': 'iutPurchasing', 'UoMEntry': 8, 'DefaultBarcode': None, 'DefaultPackage': None, 'Length1': 0.0, 'Length1Unit': None, 'Length2': 0.0, 'Length2Unit': None, 'Width1': 0.0, 'Width1Unit': None, 'Width2': 0.0, 'Width2Unit': None, 'Height1': 0.0, 'Height1Unit': None, 'Height2': 0.0, 'Height2Unit': None, 'Volume': 0.0, 'VolumeUnit': 4, 'Weight1': 0.0, 'Weight1Unit': None, 'Weight2': 0.0, 'Weight2Unit': None, 'ItemUoMPackageCollection': []}, {'UoMType': 'iutSales', 'UoMEntry': 1, 'DefaultBarcode': 0, 'DefaultPackage': None, 'Length1': 0.0, 'Length1Unit': None, 'Length2': 0.0, 'Length2Unit': None, 'Width1': 0.0, 'Width1Unit': None, 'Width2': 0.0, 'Width2Unit': None, 'Height1': 0.0, 'Height1Unit': None, 'Height2': 0.0, 'Height2Unit': None, 'Volume': 0.0, 'VolumeUnit': 2, 'Weight1': 0.0, 'Weight1Unit': None, 'Weight2': 0.0, 'Weight2Unit': None, 'ItemUoMPackageCollection': []}, {'UoMType': 'iutSales', 'UoMEntry': 8, 'DefaultBarcode': None, 'DefaultPackage': None, 'Length1': 0.0, 'Length1Unit': None, 'Length2': 0.0, 'Length2Unit': None, 'Width1': 0.0, 'Width1Unit': None, 'Width2': 0.0, 'Width2Unit': None, 'Height1': 0.0, 'Height1Unit': None, 'Height2': 0.0, 'Height2Unit': None, 'Volume': 0.0, 'VolumeUnit': 4, 'Weight1': 0.0, 'Weight1Unit': None, 'Weight2': 0.0, 'Weight2Unit': None, 'ItemUoMPackageCollection': []}], 'ItemBarCodeCollection': [], 'ItemIntrastatExtension': {'ItemCode': 'ACC-0000005', 'CommodityCode': None, 'SupplementaryUnit': None, 'FactorOfSupplementaryUnit': 0.0, 'ImportRegionState': 0, 'ExportRegionState': 0, 'ImportNatureOfTransaction': None, 'ExportNatureOfTransaction': None, 'ImportStatisticalProcedure': None, 'ExportStatisticalProcedure': None, 'CountryOfOrigin': None, 'ServiceCode': None, 'Type': 'dDocument_Items', 'ServiceSupplyMethod': 'ssmImmediate', 'ServicePaymentMethod': 'spmOther', 'ImportRegionCountry': 'GB', 'ExportRegionCountry': 'GB', 'UseWeightInCalculation': 'tYES', 'IntrastatRelevant': 'tNO', 'StatisticalCode': None}}]}, 'status': 'success'}
2025-08-05 18:06:05,499 - sync_service - INFO - API Call: {'service': 'shopify', 'endpoint': 'graphql_local', 'request': {'query': '\n        query getOrders($first: Int!) {\n            orders(first: $first) {\n                edges {\n                    node {\n                        id\n                        name\n                        createdAt\n                    }\n                }\n            }\n        }\n        ', 'variables': {'first': 1}}, 'response': None, 'status': None}
2025-08-05 18:06:06,063 - sync_service - INFO - API Call: {'service': 'shopify', 'endpoint': 'graphql_local', 'request': None, 'response': {'orders': {'edges': [{'node': {'id': 'gid://shopify/Order/6170973569090', 'name': '#1001', 'createdAt': '2025-05-15T08:35:47Z'}}]}}, 'status': 'success'}
2025-08-05 18:06:06,075 - sync_service - INFO - API Call: {'service': 'shopify', 'endpoint': 'graphql_local', 'request': {'query': '\n            query getOrders($first: Int!, $after: String) {\n                orders(first: $first, after: $after, sortKey: CREATED_AT, reverse: true) {\n                    edges {\n                        node {\n                            id\n                            name\n                            createdAt\n                            tags\n                            totalPriceSet {\n                                shopMoney {\n                                    amount\n                                    currencyCode\n                                }\n                            }\n                            subtotalPriceSet {\n                                shopMoney {\n                                    amount\n                                    currencyCode\n                                }\n                            }\n                            totalTaxSet {\n                                shopMoney {\n                                    amount\n                                    currencyCode\n                                }\n                            }\n                            totalShippingPriceSet {\n                                shopMoney {\n                                    amount\n                                    currencyCode\n                                }\n                            }\n                            customer {\n                                id\n                                firstName\n                                lastName\n                                email\n                                phone\n                                addresses {\n                                    address1\n                                    address2\n                                    city\n                                    province\n                                    zip\n                                    country\n                                    phone\n                                }\n                            }\n                            shippingAddress {\n                                address1\n                                address2\n                                city\n                                province\n                                zip\n                                country\n                                phone\n                            }\n                            billingAddress {\n                                address1\n                                address2\n                                city\n                                province\n                                zip\n                                country\n                                phone\n                            }\n                            lineItems(first: 50) {\n                                edges {\n                                    node {\n                                        id\n                                        quantity\n                                        sku\n                                        title\n                                        variant {\n                                            id\n                                            sku\n                                            price\n                                            product {\n                                                id\n                                                title\n                                            }\n                                        }\n                                        discountedTotalSet {\n                                            shopMoney {\n                                                amount\n                                                currencyCode\n                                            }\n                                        }\n                                    }\n                                }\n                            }\n                            note\n                        }\n                    }\n                    pageInfo {\n                        hasNextPage\n                        endCursor\n                    }\n                }\n            }\n            ', 'variables': {'first': 20, 'after': None}}, 'response': None, 'status': None}
2025-08-05 18:06:06,905 - sync_service - INFO - API Call: {'service': 'shopify', 'endpoint': 'graphql_local', 'request': None, 'response': {'orders': {'edges': [{'node': {'id': 'gid://shopify/Order/6318310686786', 'name': '#1480', 'createdAt': '2025-08-05T09:59:13Z', 'tags': [], 'totalPriceSet': {'shopMoney': {'amount': '5200.0', 'currencyCode': 'EGP'}}, 'subtotalPriceSet': {'shopMoney': {'amount': '5000.0', 'currencyCode': 'EGP'}}, 'totalTaxSet': {'shopMoney': {'amount': '0.0', 'currencyCode': 'EGP'}}, 'totalShippingPriceSet': {'shopMoney': {'amount': '200.0', 'currencyCode': 'EGP'}}, 'customer': {'id': 'gid://shopify/Customer/8037256233026', 'firstName': 'Omnia', 'lastName': 'Ezz Elarab', 'email': 'nezzelarab@ezz-elarab.com', 'phone': None, 'addresses': [{'address1': 'Palm hills 6th october, phase 1', 'address2': 'Villa b53', 'city': 'Giza', 'province': '6th of October', 'zip': '00000', 'country': 'Egypt', 'phone': '00201003370743'}]}, 'shippingAddress': {'address1': 'Palm hills 6th october, phase 1', 'address2': 'Villa b53', 'city': 'Giza', 'province': '6th of October', 'zip': '00000', 'country': 'Egypt', 'phone': '00201003370743'}, 'billingAddress': {'address1': 'Palm hills 6th october, phase 1', 'address2': 'Villa b53', 'city': 'Giza', 'province': '6th of October', 'zip': '00000', 'country': 'Egypt', 'phone': '00201003370743'}, 'lineItems': {'edges': [{'node': {'id': 'gid://shopify/LineItem/15830693707842', 'quantity': 1, 'sku': 'FG-0000632', 'title': 'Ember Earrings', 'variant': {'id': 'gid://shopify/ProductVariant/42194952650818', 'sku': 'FG-0000632', 'price': '5000.00', 'product': {'id': 'gid://shopify/Product/7490852847682', 'title': 'Ember Earrings'}}, 'discountedTotalSet': {'shopMoney': {'amount': '5000.0', 'currencyCode': 'EGP'}}}}]}, 'note': None}}, {'node': {'id': 'gid://shopify/Order/6318078263362', 'name': '#1479', 'createdAt': '2025-08-05T04:44:47Z', 'tags': [], 'totalPriceSet': {'shopMoney': {'amount': '7460.0', 'currencyCode': 'EGP'}}, 'subtotalPriceSet': {'shopMoney': {'amount': '7300.0', 'currencyCode': 'EGP'}}, 'totalTaxSet': {'shopMoney': {'amount': '0.0', 'currencyCode': 'EGP'}}, 'totalShippingPriceSet': {'shopMoney': {'amount': '160.0', 'currencyCode': 'EGP'}}, 'customer': {'id': 'gid://shopify/Customer/8035661905986', 'firstName': 'Ziad', 'lastName': 'Fawi', 'email': 'ziadfawi6@gmail.com', 'phone': None, 'addresses': [{'address1': None, 'address2': None, 'city': None, 'province': None, 'zip': None, 'country': 'Egypt', 'phone': None}, {'address1': '46 soultan street behind ices hospital', 'address2': 'Number of the apartment 17', 'city': 'Alexandria', 'province': 'Alexandria', 'zip': None, 'country': 'Egypt', 'phone': '01271088966'}]}, 'shippingAddress': {'address1': '46 soultan street behind ices hospital', 'address2': 'Number of the apartment 17', 'city': 'Alexandria', 'province': 'Alexandria', 'zip': None, 'country': 'Egypt', 'phone': '01271088966'}, 'billingAddress': {'address1': '46 soultan street behind ices hospital', 'address2': 'Number of the apartment 17', 'city': 'Alexandria', 'province': 'Alexandria', 'zip': None, 'country': 'Egypt', 'phone': '01271088966'}, 'lineItems': {'edges': [{'node': {'id': 'gid://shopify/LineItem/15830286434370', 'quantity': 1, 'sku': 'FG-0000077', 'title': 'Sulla Luna Mix Earrings', 'variant': {'id': 'gid://shopify/ProductVariant/42003146276930', 'sku': 'FG-0000077', 'price': '7300.00', 'product': {'id': 'gid://shopify/Product/7442022203458', 'title': 'Sulla Luna Mix Earrings'}}, 'discountedTotalSet': {'shopMoney': {'amount': '7300.0', 'currencyCode': 'EGP'}}}}]}, 'note': None}}, {'node': {'id': 'gid://shopify/Order/6317218398274', 'name': '#1478', 'createdAt': '2025-08-04T18:33:12Z', 'tags': [], 'totalPriceSet': {'shopMoney': {'amount': '2880.0', 'currencyCode': 'EGP'}}, 'subtotalPriceSet': {'shopMoney': {'amount': '2880.0', 'currencyCode': 'EGP'}}, 'totalTaxSet': {'shopMoney': {'amount': '0.0', 'currencyCode': 'EGP'}}, 'totalShippingPriceSet': {'shopMoney': {'amount': '0.0', 'currencyCode': 'EGP'}}, 'customer': {'id': 'gid://shopify/Customer/8032449527874', 'firstName': 'Mahmoud', 'lastName': 'Ayman', 'email': 'mahmoudayman80@yahoo.com', 'phone': None, 'addresses': [{'address1': None, 'address2': None, 'city': None, 'province': None, 'zip': None, 'country': 'Egypt', 'phone': None}, {'address1': '5370 el mokattam', 'address2': None, 'city': 'Cairo', 'province': 'Cairo', 'zip': None, 'country': 'Egypt', 'phone': '01111346333'}]}, 'shippingAddress': None, 'billingAddress': {'address1': '5370 el mokattam', 'address2': None, 'city': 'Cairo', 'province': 'Cairo', 'zip': None, 'country': 'Egypt', 'phone': '01111346333'}, 'lineItems': {'edges': [{'node': {'id': 'gid://shopify/LineItem/15828170047554', 'quantity': 1, 'sku': 'FG-0000589', 'title': 'Una Ring', 'variant': {'id': 'gid://shopify/ProductVariant/42003153518658', 'sku': 'FG-0000589', 'price': '3200.00', 'product': {'id': 'gid://shopify/Product/7442026070082', 'title': 'Una Ring'}}, 'discountedTotalSet': {'shopMoney': {'amount': '3200.0', 'currencyCode': 'EGP'}}}}]}, 'note': None}}, {'node': {'id': 'gid://shopify/Order/6317035520066', 'name': '#1477', 'createdAt': '2025-08-04T16:50:11Z', 'tags': [], 'totalPriceSet': {'shopMoney': {'amount': '5060.0', 'currencyCode': 'EGP'}}, 'subtotalPriceSet': {'shopMoney': {'amount': '4900.0', 'currencyCode': 'EGP'}}, 'totalTaxSet': {'shopMoney': {'amount': '0.0', 'currencyCode': 'EGP'}}, 'totalShippingPriceSet': {'shopMoney': {'amount': '160.0', 'currencyCode': 'EGP'}}, 'customer': {'id': 'gid://shopify/Customer/8031975374914', 'firstName': 'Passant', 'lastName': 'Dawood', 'email': 'passantdawood@gmail.com', 'phone': None, 'addresses': [{'address1': '399 elguish road san stefano grand plaza', 'address2': '1', 'city': 'Alexandria', 'province': 'Alexandria', 'zip': None, 'country': 'Egypt', 'phone': '01223100564'}]}, 'shippingAddress': {'address1': '399 elguish road san stefano grand plaza', 'address2': '1', 'city': 'Alexandria', 'province': 'Alexandria', 'zip': None, 'country': 'Egypt', 'phone': '01223100564'}, 'billingAddress': {'address1': '399 elguish road san stefano grand plaza', 'address2': '1', 'city': 'Alexandria', 'province': 'Alexandria', 'zip': None, 'country': 'Egypt', 'phone': '01223100564'}, 'lineItems': {'edges': [{'node': {'id': 'gid://shopify/LineItem/15827708805186', 'quantity': 1, 'sku': 'FG-0000688', 'title': 'Multi-way Halo Ring', 'variant': {'id': 'gid://shopify/ProductVariant/42194980896834', 'sku': 'FG-0000688', 'price': '4900.00', 'product': {'id': 'gid://shopify/Product/7490853339202', 'title': 'Multi-way Halo Ring'}}, 'discountedTotalSet': {'shopMoney': {'amount': '4900.0', 'currencyCode': 'EGP'}}}}]}, 'note': None}}, {'node': {'id': 'gid://shopify/Order/6317030244418', 'name': '#1476', 'createdAt': '2025-08-04T16:47:03Z', 'tags': [], 'totalPriceSet': {'shopMoney': {'amount': '5320.0', 'currencyCode': 'EGP'}}, 'subtotalPriceSet': {'shopMoney': {'amount': '5200.0', 'currencyCode': 'EGP'}}, 'totalTaxSet': {'shopMoney': {'amount': '0.0', 'currencyCode': 'EGP'}}, 'totalShippingPriceSet': {'shopMoney': {'amount': '120.0', 'currencyCode': 'EGP'}}, 'customer': {'id': 'gid://shopify/Customer/8031970918466', 'firstName': 'Noha', 'lastName': 'Emad', 'email': 'noha@kitshe-eg.com', 'phone': None, 'addresses': [{'address1': 'التجمع الخامس االدور الاول شقه ٤جنوب الأكاديمية أ شارع ان', 'address2': 'التجمع الخامس- جنوب الاكادميه أ شارع انس ابن مالك فيلا ٢٨٦', 'city': 'Cairo', 'province': 'Cairo', 'zip': '11865', 'country': 'Egypt', 'phone': '01200008517'}]}, 'shippingAddress': {'address1': 'التجمع الخامس االدور الاول شقه ٤جنوب الأكاديمية أ شارع ان', 'address2': 'التجمع الخامس- جنوب الاكادميه أ شارع انس ابن مالك فيلا ٢٨٦', 'city': 'Cairo', 'province': 'Cairo', 'zip': '11865', 'country': 'Egypt', 'phone': '01200008517'}, 'billingAddress': {'address1': 'التجمع الخامس االدور الاول شقه ٤جنوب الأكاديمية أ شارع ان', 'address2': 'التجمع الخامس- جنوب الاكادميه أ شارع انس ابن مالك فيلا ٢٨٦', 'city': 'Cairo', 'province': 'Cairo', 'zip': '11865', 'country': 'Egypt', 'phone': '01200008517'}, 'lineItems': {'edges': [{'node': {'id': 'gid://shopify/LineItem/15827697336386', 'quantity': 1, 'sku': 'FG-0000640', 'title': 'Essence Earrings', 'variant': {'id': 'gid://shopify/ProductVariant/42194952945730', 'sku': 'FG-0000640', 'price': '5200.00', 'product': {'id': 'gid://shopify/Product/7490852945986', 'title': 'Essence Earrings'}}, 'discountedTotalSet': {'shopMoney': {'amount': '5200.0', 'currencyCode': 'EGP'}}}}]}, 'note': None}}, {'node': {'id': 'gid://shopify/Order/6316680347714', 'name': '#1475', 'createdAt': '2025-08-04T12:56:00Z', 'tags': [], 'totalPriceSet': {'shopMoney': {'amount': '5120.0', 'currencyCode': 'EGP'}}, 'subtotalPriceSet': {'shopMoney': {'amount': '5000.0', 'currencyCode': 'EGP'}}, 'totalTaxSet': {'shopMoney': {'amount': '0.0', 'currencyCode': 'EGP'}}, 'totalShippingPriceSet': {'shopMoney': {'amount': '120.0', 'currencyCode': 'EGP'}}, 'customer': {'id': 'gid://shopify/Customer/8031264636994', 'firstName': 'Hanan', 'lastName': 'HASSAN', 'email': 'hananhassan1204@gmail.com', 'phone': None, 'addresses': [{'address1': 'القاهرة الجديدة / كمبوند سوديك ڤيليت عمارة واحد إف شقة أرضي زيرو أربعة', 'address2': '04 الدور الارضي', 'city': 'القاهرة', 'province': 'Cairo', 'zip': '11511', 'country': 'Egypt', 'phone': '01000340138'}]}, 'shippingAddress': {'address1': 'القاهرة الجديدة / كمبوند سوديك ڤيليت عمارة واحد إف شقة أرضي زيرو أربعة', 'address2': '04 الدور الارضي', 'city': 'القاهرة', 'province': 'Cairo', 'zip': '11511', 'country': 'Egypt', 'phone': '01000340138'}, 'billingAddress': {'address1': 'القاهرة الجديدة / كمبوند سوديك ڤيليت عمارة واحد إف شقة أرضي زيرو أربعة', 'address2': '04 الدور الارضي', 'city': 'القاهرة', 'province': 'Cairo', 'zip': '11511', 'country': 'Egypt', 'phone': '01000340138'}, 'lineItems': {'edges': [{'node': {'id': 'gid://shopify/LineItem/15826901237826', 'quantity': 1, 'sku': 'FG-0000632', 'title': 'Ember Earrings', 'variant': {'id': 'gid://shopify/ProductVariant/42194952650818', 'sku': 'FG-0000632', 'price': '5000.00', 'product': {'id': 'gid://shopify/Product/7490852847682', 'title': 'Ember Earrings'}}, 'discountedTotalSet': {'shopMoney': {'amount': '5000.0', 'currencyCode': 'EGP'}}}}]}, 'note': None}}, {'node': {'id': 'gid://shopify/Order/6316580536386', 'name': '#1474', 'createdAt': '2025-08-04T11:08:05Z', 'tags': [], 'totalPriceSet': {'shopMoney': {'amount': '6020.0', 'currencyCode': 'EGP'}}, 'subtotalPriceSet': {'shopMoney': {'amount': '5900.0', 'currencyCode': 'EGP'}}, 'totalTaxSet': {'shopMoney': {'amount': '0.0', 'currencyCode': 'EGP'}}, 'totalShippingPriceSet': {'shopMoney': {'amount': '120.0', 'currencyCode': 'EGP'}}, 'customer': {'id': 'gid://shopify/Customer/8031120457794', 'firstName': 'Nourhan', 'lastName': 'Swellam', 'email': 'swellam@aucegypt.edu', 'phone': None, 'addresses': [{'address1': '144 el banafseg 11 ', 'address2': 'Villa 144', 'city': 'Cairo', 'province': 'Cairo', 'zip': '11341', 'country': 'Egypt', 'phone': '+201003928976'}]}, 'shippingAddress': {'address1': '144 el banafseg 11', 'address2': 'Villa 144', 'city': 'Cairo', 'province': 'Cairo', 'zip': '11341', 'country': 'Egypt', 'phone': '+201003928976'}, 'billingAddress': {'address1': '144 el banafseg 11', 'address2': 'Villa 144', 'city': 'Cairo', 'province': 'Cairo', 'zip': '11341', 'country': 'Egypt', 'phone': '+201003928976'}, 'lineItems': {'edges': [{'node': {'id': 'gid://shopify/LineItem/15826707382338', 'quantity': 1, 'sku': 'FG-0000369', 'title': 'Mini Sahara Mix Hoop', 'variant': {'id': 'gid://shopify/ProductVariant/42003146997826', 'sku': 'FG-0000369', 'price': '5900.00', 'product': {'id': 'gid://shopify/Product/7442022989890', 'title': 'Mini Sahara Mix Hoop'}}, 'discountedTotalSet': {'shopMoney': {'amount': '5900.0', 'currencyCode': 'EGP'}}}}]}, 'note': None}}, {'node': {'id': 'gid://shopify/Order/6315006394434', 'name': '#1473', 'createdAt': '2025-08-03T15:21:25Z', 'tags': [], 'totalPriceSet': {'shopMoney': {'amount': '4420.0', 'currencyCode': 'EGP'}}, 'subtotalPriceSet': {'shopMoney': {'amount': '4300.0', 'currencyCode': 'EGP'}}, 'totalTaxSet': {'shopMoney': {'amount': '0.0', 'currencyCode': 'EGP'}}, 'totalShippingPriceSet': {'shopMoney': {'amount': '120.0', 'currencyCode': 'EGP'}}, 'customer': {'id': 'gid://shopify/Customer/8015867478082', 'firstName': 'Yomna', 'lastName': 'Sherif', 'email': 'yomna.sherif.nawal@gmail.com', 'phone': None, 'addresses': [{'address1': 'Group 15 , building 5 , apartment 22', 'address2': 'Group 15 , building 5 , apartment 22', 'city': 'Rehab City', 'province': 'Cairo', 'zip': '0000', 'country': 'Egypt', 'phone': '+201003988787'}, {'address1': None, 'address2': None, 'city': None, 'province': None, 'zip': None, 'country': 'Egypt', 'phone': None}]}, 'shippingAddress': {'address1': 'Group 15 , building 5 , apartment 22', 'address2': 'Group 15 , building 5 , apartment 22', 'city': 'Rehab City', 'province': 'Cairo', 'zip': '0000', 'country': 'Egypt', 'phone': '+201003988787'}, 'billingAddress': {'address1': 'Group 15 , building 5 , apartment 22', 'address2': 'Group 15 , building 5 , apartment 22', 'city': 'Rehab City', 'province': 'Cairo', 'zip': '0000', 'country': 'Egypt', 'phone': '+201003988787'}, 'lineItems': {'edges': [{'node': {'id': 'gid://shopify/LineItem/15822752055362', 'quantity': 1, 'sku': 'FG-0000499', 'title': 'Cassandra Mix Pinky Ring', 'variant': {'id': 'gid://shopify/ProductVariant/42003149815874', 'sku': 'FG-0000499', 'price': '4300.00', 'product': {'id': 'gid://shopify/Product/7442024235074', 'title': 'Cassandra Mix Pinky Ring'}}, 'discountedTotalSet': {'shopMoney': {'amount': '4300.0', 'currencyCode': 'EGP'}}}}]}, 'note': None}}, {'node': {'id': 'gid://shopify/Order/6314877780034', 'name': '#1472', 'createdAt': '2025-08-03T13:47:12Z', 'tags': [], 'totalPriceSet': {'shopMoney': {'amount': '121.0', 'currencyCode': 'EGP'}}, 'subtotalPriceSet': {'shopMoney': {'amount': '1.0', 'currencyCode': 'EGP'}}, 'totalTaxSet': {'shopMoney': {'amount': '0.0', 'currencyCode': 'EGP'}}, 'totalShippingPriceSet': {'shopMoney': {'amount': '120.0', 'currencyCode': 'EGP'}}, 'customer': {'id': 'gid://shopify/Customer/7539785334850', 'firstName': 'Karim', 'lastName': 'Wafik', 'email': 'karimwafik.kw@gmail.com', 'phone': None, 'addresses': [{'address1': '97 Marghany st., Heliopolis, Cairo, Egypt', 'address2': None, 'city': 'Cairo', 'province': 'Cairo', 'zip': '21113', 'country': 'Egypt', 'phone': '+201005527292'}, {'address1': 'Stone Residence Compound 306, Third Settlement', 'address2': '9', 'city': 'Cairo', 'province': 'Cairo', 'zip': None, 'country': 'Egypt', 'phone': '01005527292'}]}, 'shippingAddress': {'address1': 'Stone Residence Compound 306, Third Settlement', 'address2': '9', 'city': 'Cairo', 'province': 'Cairo', 'zip': None, 'country': 'Egypt', 'phone': '01005527292'}, 'billingAddress': {'address1': 'Stone Residence Compound 306, Third Settlement', 'address2': '9', 'city': 'Cairo', 'province': 'Cairo', 'zip': None, 'country': 'Egypt', 'phone': '01005527292'}, 'lineItems': {'edges': [{'node': {'id': 'gid://shopify/LineItem/15822411366466', 'quantity': 1, 'sku': None, 'title': 'karim test', 'variant': {'id': 'gid://shopify/ProductVariant/42361056985154', 'sku': None, 'price': '1.00', 'product': {'id': 'gid://shopify/Product/7522803515458', 'title': 'karim test'}}, 'discountedTotalSet': {'shopMoney': {'amount': '1.0', 'currencyCode': 'EGP'}}}}]}, 'note': None}}, {'node': {'id': 'gid://shopify/Order/6314801463362', 'name': '#1471', 'createdAt': '2025-08-03T12:37:41Z', 'tags': [], 'totalPriceSet': {'shopMoney': {'amount': '4620.0', 'currencyCode': 'EGP'}}, 'subtotalPriceSet': {'shopMoney': {'amount': '4500.0', 'currencyCode': 'EGP'}}, 'totalTaxSet': {'shopMoney': {'amount': '0.0', 'currencyCode': 'EGP'}}, 'totalShippingPriceSet': {'shopMoney': {'amount': '120.0', 'currencyCode': 'EGP'}}, 'customer': {'id': 'gid://shopify/Customer/8028986572866', 'firstName': 'Manal', 'lastName': 'Dorgham', 'email': 'manaldorgham4@gmail.com', 'phone': None, 'addresses': [{'address1': 'Moon valley compound. New Cairo', 'address2': '45 D', 'city': 'Cairo', 'province': 'Cairo', 'zip': None, 'country': 'Egypt', 'phone': '01222455309'}]}, 'shippingAddress': {'address1': 'Moon valley compound. New Cairo', 'address2': '45 D', 'city': 'Cairo', 'province': 'Cairo', 'zip': None, 'country': 'Egypt', 'phone': '01222455309'}, 'billingAddress': {'address1': 'Moon valley compound. New Cairo', 'address2': '45 D', 'city': 'Cairo', 'province': 'Cairo', 'zip': None, 'country': 'Egypt', 'phone': '01222455309'}, 'lineItems': {'edges': [{'node': {'id': 'gid://shopify/LineItem/15822235631682', 'quantity': 1, 'sku': 'FG-0000544', 'title': 'Floway ring set', 'variant': {'id': 'gid://shopify/ProductVariant/42003150602306', 'sku': 'FG-0000544', 'price': '4500.00', 'product': {'id': 'gid://shopify/Product/7442024890434', 'title': 'Floway ring set'}}, 'discountedTotalSet': {'shopMoney': {'amount': '4500.0', 'currencyCode': 'EGP'}}}}]}, 'note': None}}, {'node': {'id': 'gid://shopify/Order/6314790420546', 'name': '#1470', 'createdAt': '2025-08-03T12:26:20Z', 'tags': [], 'totalPriceSet': {'shopMoney': {'amount': '7600.0', 'currencyCode': 'EGP'}}, 'subtotalPriceSet': {'shopMoney': {'amount': '7600.0', 'currencyCode': 'EGP'}}, 'totalTaxSet': {'shopMoney': {'amount': '0.0', 'currencyCode': 'EGP'}}, 'totalShippingPriceSet': {'shopMoney': {'amount': '0.0', 'currencyCode': 'EGP'}}, 'customer': {'id': 'gid://shopify/Customer/7539785334850', 'firstName': 'Karim', 'lastName': 'Wafik', 'email': 'karimwafik.kw@gmail.com', 'phone': None, 'addresses': [{'address1': '97 Marghany st., Heliopolis, Cairo, Egypt', 'address2': None, 'city': 'Cairo', 'province': 'Cairo', 'zip': '21113', 'country': 'Egypt', 'phone': '+201005527292'}, {'address1': 'Stone Residence Compound 306, Third Settlement', 'address2': '9', 'city': 'Cairo', 'province': 'Cairo', 'zip': None, 'country': 'Egypt', 'phone': '01005527292'}]}, 'shippingAddress': None, 'billingAddress': None, 'lineItems': {'edges': [{'node': {'id': 'gid://shopify/LineItem/15822212661314', 'quantity': 1, 'sku': 'FG-0000645', 'title': 'Flare Earrings', 'variant': {'id': 'gid://shopify/ProductVariant/42277872271426', 'sku': 'FG-0000645', 'price': '3800.00', 'product': {'id': 'gid://shopify/Product/7506409586754', 'title': 'Flare Earrings'}}, 'discountedTotalSet': {'shopMoney': {'amount': '3800.0', 'currencyCode': 'EGP'}}}}, {'node': {'id': 'gid://shopify/LineItem/15822221770818', 'quantity': 1, 'sku': None, 'title': 'Gift Card', 'variant': None, 'discountedTotalSet': {'shopMoney': {'amount': '3800.0', 'currencyCode': 'EGP'}}}}]}, 'note': None}}, {'node': {'id': 'gid://shopify/Order/6314786357314', 'name': '#1469', 'createdAt': '2025-08-03T12:21:46Z', 'tags': [], 'totalPriceSet': {'shopMoney': {'amount': '6900.0', 'currencyCode': 'EGP'}}, 'subtotalPriceSet': {'shopMoney': {'amount': '6900.0', 'currencyCode': 'EGP'}}, 'totalTaxSet': {'shopMoney': {'amount': '0.0', 'currencyCode': 'EGP'}}, 'totalShippingPriceSet': {'shopMoney': {'amount': '0.0', 'currencyCode': 'EGP'}}, 'customer': None, 'shippingAddress': None, 'billingAddress': None, 'lineItems': {'edges': [{'node': {'id': 'gid://shopify/LineItem/15822205321282', 'quantity': 1, 'sku': 'FG-0000345', 'title': 'Mini Harmonia Earrings', 'variant': {'id': 'gid://shopify/ProductVariant/42003146801218', 'sku': 'FG-0000345', 'price': '6900.00', 'product': {'id': 'gid://shopify/Product/7442022793282', 'title': 'Mini Harmonia Earrings'}}, 'discountedTotalSet': {'shopMoney': {'amount': '6900.0', 'currencyCode': 'EGP'}}}}]}, 'note': None}}, {'node': {'id': 'gid://shopify/Order/6314775969858', 'name': '#1468', 'createdAt': '2025-08-03T12:12:09Z', 'tags': [], 'totalPriceSet': {'shopMoney': {'amount': '2920.0', 'currencyCode': 'EGP'}}, 'subtotalPriceSet': {'shopMoney': {'amount': '2800.0', 'currencyCode': 'EGP'}}, 'totalTaxSet': {'shopMoney': {'amount': '0.0', 'currencyCode': 'EGP'}}, 'totalShippingPriceSet': {'shopMoney': {'amount': '120.0', 'currencyCode': 'EGP'}}, 'customer': {'id': 'gid://shopify/Customer/8028955639874', 'firstName': 'Mariam', 'lastName': 'Mackawy', 'email': 'mariammackawy5@gmail.com', 'phone': None, 'addresses': [{'address1': 'الرحاب ٢، مجموعة ١٣١، عمارة ٢٠، شقة ٤١', 'address2': '41 El Rehab2, Group 131, Building 20, Apartment', 'city': 'Cairo', 'province': 'Cairo', 'zip': '11511', 'country': 'Egypt', 'phone': '01285358540'}]}, 'shippingAddress': {'address1': 'الرحاب ٢، مجموعة ١٣١، عمارة ٢٠، شقة ٤١', 'address2': '41 El Rehab2, Group 131, Building 20, Apartment', 'city': 'Cairo', 'province': 'Cairo', 'zip': '11511', 'country': 'Egypt', 'phone': '01285358540'}, 'billingAddress': {'address1': 'الرحاب ٢، مجموعة ١٣١، عمارة ٢٠، شقة ٤١', 'address2': '41 El Rehab2, Group 131, Building 20, Apartment', 'city': 'Cairo', 'province': 'Cairo', 'zip': '11511', 'country': 'Egypt', 'phone': '01285358540'}, 'lineItems': {'edges': [{'node': {'id': 'gid://shopify/LineItem/15822184742978', 'quantity': 1, 'sku': 'FG-0000498', 'title': 'Cassandra Pinky Ring', 'variant': {'id': 'gid://shopify/ProductVariant/42003149881410', 'sku': 'FG-0000498', 'price': '2800.00', 'product': {'id': 'gid://shopify/Product/7442024300610', 'title': 'Cassandra Pinky Ring'}}, 'discountedTotalSet': {'shopMoney': {'amount': '2800.0', 'currencyCode': 'EGP'}}}}]}, 'note': None}}, {'node': {'id': 'gid://shopify/Order/6314438000706', 'name': '#1467', 'createdAt': '2025-08-03T04:32:29Z', 'tags': [], 'totalPriceSet': {'shopMoney': {'amount': '3200.0', 'currencyCode': 'EGP'}}, 'subtotalPriceSet': {'shopMoney': {'amount': '3200.0', 'currencyCode': 'EGP'}}, 'totalTaxSet': {'shopMoney': {'amount': '0.0', 'currencyCode': 'EGP'}}, 'totalShippingPriceSet': {'shopMoney': {'amount': '0.0', 'currencyCode': 'EGP'}}, 'customer': {'id': 'gid://shopify/Customer/8026031751234', 'firstName': 'sally', 'lastName': 'monir', 'email': 'sallymonir@yahoo.com', 'phone': None, 'addresses': [{'address1': '113, st. 17, First Area, fifth zone, fifth settlement', 'address2': '2', 'city': 'New Cairo', 'province': 'Cairo', 'zip': None, 'country': 'Egypt', 'phone': '+201273099926'}]}, 'shippingAddress': None, 'billingAddress': {'address1': '113, st. 17, First Area, fifth zone, fifth settlement', 'address2': '2', 'city': 'New Cairo', 'province': 'Cairo', 'zip': None, 'country': 'Egypt', 'phone': '+201273099926'}, 'lineItems': {'edges': [{'node': {'id': 'gid://shopify/LineItem/15821581156418', 'quantity': 1, 'sku': 'FG-0000468', 'title': 'Frost Ring', 'variant': {'id': 'gid://shopify/ProductVariant/42003151618114', 'sku': 'FG-0000468', 'price': '3200.00', 'product': {'id': 'gid://shopify/Product/7442025381954', 'title': 'Frost Ring'}}, 'discountedTotalSet': {'shopMoney': {'amount': '3200.0', 'currencyCode': 'EGP'}}}}]}, 'note': None}}, {'node': {'id': 'gid://shopify/Order/6312813002818', 'name': '#1466', 'createdAt': '2025-08-02T11:04:39Z', 'tags': [], 'totalPriceSet': {'shopMoney': {'amount': '4420.0', 'currencyCode': 'EGP'}}, 'subtotalPriceSet': {'shopMoney': {'amount': '4300.0', 'currencyCode': 'EGP'}}, 'totalTaxSet': {'shopMoney': {'amount': '0.0', 'currencyCode': 'EGP'}}, 'totalShippingPriceSet': {'shopMoney': {'amount': '120.0', 'currencyCode': 'EGP'}}, 'customer': {'id': 'gid://shopify/Customer/8026480607298', 'firstName': 'Nadine', 'lastName': 'GALAL', 'email': 'nadinegalal09@gmail.com', 'phone': None, 'addresses': [{'address1': 'امام ٣١ شارع ابراهيم حلمي الدور ٣ شقة ١١', 'address2': 'الدور ٣ شقة ١١', 'city': 'Alexandria', 'province': 'Alexandria', 'zip': None, 'country': 'Egypt', 'phone': '01284444565'}]}, 'shippingAddress': {'address1': 'امام ٣١ شارع ابراهيم حلمي الدور ٣ شقة ١١', 'address2': 'الدور ٣ شقة ١١', 'city': 'Alexandria', 'province': 'Alexandria', 'zip': None, 'country': 'Egypt', 'phone': '01284444565'}, 'billingAddress': {'address1': 'امام ٣١ شارع ابراهيم حلمي الدور ٣ شقة ١١', 'address2': 'الدور ٣ شقة ١١', 'city': 'Alexandria', 'province': 'Alexandria', 'zip': None, 'country': 'Egypt', 'phone': '01284444565'}, 'lineItems': {'edges': [{'node': {'id': 'gid://shopify/LineItem/15817138307138', 'quantity': 1, 'sku': 'FG-0000499', 'title': 'Cassandra Mix Pinky Ring', 'variant': {'id': 'gid://shopify/ProductVariant/42003149815874', 'sku': 'FG-0000499', 'price': '4300.00', 'product': {'id': 'gid://shopify/Product/7442024235074', 'title': 'Cassandra Mix Pinky Ring'}}, 'discountedTotalSet': {'shopMoney': {'amount': '4300.0', 'currencyCode': 'EGP'}}}}]}, 'note': None}}, {'node': {'id': 'gid://shopify/Order/6312140603458', 'name': '#1465', 'createdAt': '2025-08-01T23:27:00Z', 'tags': [], 'totalPriceSet': {'shopMoney': {'amount': '8860.0', 'currencyCode': 'EGP'}}, 'subtotalPriceSet': {'shopMoney': {'amount': '8700.0', 'currencyCode': 'EGP'}}, 'totalTaxSet': {'shopMoney': {'amount': '0.0', 'currencyCode': 'EGP'}}, 'totalShippingPriceSet': {'shopMoney': {'amount': '160.0', 'currencyCode': 'EGP'}}, 'customer': {'id': 'gid://shopify/Customer/8024664145986', 'firstName': 'Mai', 'lastName': 'Aladdin', 'email': 'mayyo69@gmail.com', 'phone': None, 'addresses': [{'address1': 'Sohag - shar2', 'address2': None, 'city': 'Sohag', 'province': 'Sohag', 'zip': None, 'country': 'Egypt', 'phone': '01027733614'}]}, 'shippingAddress': {'address1': 'Sohag - shar2', 'address2': None, 'city': 'Sohag', 'province': 'Sohag', 'zip': None, 'country': 'Egypt', 'phone': '01027733614'}, 'billingAddress': {'address1': 'Sohag - shar2', 'address2': None, 'city': 'Sohag', 'province': 'Sohag', 'zip': None, 'country': 'Egypt', 'phone': '01027733614'}, 'lineItems': {'edges': [{'node': {'id': 'gid://shopify/LineItem/15815787151426', 'quantity': 1, 'sku': 'FG-0000498', 'title': 'Cassandra Pinky Ring', 'variant': {'id': 'gid://shopify/ProductVariant/42003149881410', 'sku': 'FG-0000498', 'price': '2800.00', 'product': {'id': 'gid://shopify/Product/7442024300610', 'title': 'Cassandra Pinky Ring'}}, 'discountedTotalSet': {'shopMoney': {'amount': '2800.0', 'currencyCode': 'EGP'}}}}, {'node': {'id': 'gid://shopify/LineItem/15815787184194', 'quantity': 1, 'sku': 'FG-0000575', 'title': 'Janus Cuff', 'variant': {'id': 'gid://shopify/ProductVariant/42003153256514', 'sku': 'FG-0000575', 'price': '5900.00', 'product': {'id': 'gid://shopify/Product/7442025906242', 'title': 'Janus Cuff'}}, 'discountedTotalSet': {'shopMoney': {'amount': '5900.0', 'currencyCode': 'EGP'}}}}]}, 'note': None}}, {'node': {'id': 'gid://shopify/Order/6311861026882', 'name': '#1464', 'createdAt': '2025-08-01T20:45:45Z', 'tags': [], 'totalPriceSet': {'shopMoney': {'amount': '4800.0', 'currencyCode': 'EGP'}}, 'subtotalPriceSet': {'shopMoney': {'amount': '4800.0', 'currencyCode': 'EGP'}}, 'totalTaxSet': {'shopMoney': {'amount': '0.0', 'currencyCode': 'EGP'}}, 'totalShippingPriceSet': {'shopMoney': {'amount': '0.0', 'currencyCode': 'EGP'}}, 'customer': {'id': 'gid://shopify/Customer/8024130191426', 'firstName': 'Ibrahim', 'lastName': 'ElGohary', 'email': 'hima22may@hotmail.com', 'phone': None, 'addresses': [{'address1': 'Wady compound', 'address2': 'Home', 'city': 'Cairo', 'province': 'Cairo', 'zip': None, 'country': 'Egypt', 'phone': '01007217010'}]}, 'shippingAddress': None, 'billingAddress': {'address1': 'Wady compound', 'address2': 'Home', 'city': 'Cairo', 'province': 'Cairo', 'zip': None, 'country': 'Egypt', 'phone': '01007217010'}, 'lineItems': {'edges': [{'node': {'id': 'gid://shopify/LineItem/15815036600386', 'quantity': 1, 'sku': 'FG-0000075', 'title': 'Sulla Luna Earrings', 'variant': {'id': 'gid://shopify/ProductVariant/42003146211394', 'sku': 'FG-0000075', 'price': '4800.00', 'product': {'id': 'gid://shopify/Product/7442022170690', 'title': 'Sulla Luna Earrings'}}, 'discountedTotalSet': {'shopMoney': {'amount': '4800.0', 'currencyCode': 'EGP'}}}}]}, 'note': None}}, {'node': {'id': 'gid://shopify/Order/6311162380354', 'name': '#1463', 'createdAt': '2025-08-01T15:19:07Z', 'tags': [], 'totalPriceSet': {'shopMoney': {'amount': '7460.0', 'currencyCode': 'EGP'}}, 'subtotalPriceSet': {'shopMoney': {'amount': '7300.0', 'currencyCode': 'EGP'}}, 'totalTaxSet': {'shopMoney': {'amount': '0.0', 'currencyCode': 'EGP'}}, 'totalShippingPriceSet': {'shopMoney': {'amount': '160.0', 'currencyCode': 'EGP'}}, 'customer': {'id': 'gid://shopify/Customer/8022959784002', 'firstName': 'Nahed', 'lastName': 'Mohamed', 'email': 'nahedmohamed714@gmail.com', 'phone': None, 'addresses': [{'address1': 'العصافره بحرى الاسكندريه شارع اطلس عماره ١١ مكرر بجوار سوبر ناركت تسالى جاد امام مايوركا كافيه', 'address2': 'الدور التامن شقه ١٥', 'city': 'alexandria', 'province': 'Alexandria', 'zip': None, 'country': 'Egypt', 'phone': '+201284002489'}]}, 'shippingAddress': {'address1': 'العصافره بحرى الاسكندريه شارع اطلس عماره ١١ مكرر بجوار سوبر ناركت تسالى جاد امام مايوركا كافيه', 'address2': 'الدور التامن شقه ١٥', 'city': 'alexandria', 'province': 'Alexandria', 'zip': None, 'country': 'Egypt', 'phone': '+201284002489'}, 'billingAddress': {'address1': 'العصافره بحرى الاسكندريه شارع اطلس عماره ١١ مكرر بجوار سوبر ناركت تسالى جاد امام مايوركا كافيه', 'address2': 'الدور التامن شقه ١٥', 'city': 'alexandria', 'province': 'Alexandria', 'zip': None, 'country': 'Egypt', 'phone': '+201284002489'}, 'lineItems': {'edges': [{'node': {'id': 'gid://shopify/LineItem/15813349867586', 'quantity': 1, 'sku': 'FG-0000077', 'title': 'Sulla Luna Mix Earrings', 'variant': {'id': 'gid://shopify/ProductVariant/42003146276930', 'sku': 'FG-0000077', 'price': '7300.00', 'product': {'id': 'gid://shopify/Product/7442022203458', 'title': 'Sulla Luna Mix Earrings'}}, 'discountedTotalSet': {'shopMoney': {'amount': '7300.0', 'currencyCode': 'EGP'}}}}]}, 'note': None}}, {'node': {'id': 'gid://shopify/Order/6308680728642', 'name': '#1462', 'createdAt': '2025-07-31T09:58:23Z', 'tags': [], 'totalPriceSet': {'shopMoney': {'amount': '25900.0', 'currencyCode': 'EGP'}}, 'subtotalPriceSet': {'shopMoney': {'amount': '25700.0', 'currencyCode': 'EGP'}}, 'totalTaxSet': {'shopMoney': {'amount': '0.0', 'currencyCode': 'EGP'}}, 'totalShippingPriceSet': {'shopMoney': {'amount': '200.0', 'currencyCode': 'EGP'}}, 'customer': {'id': 'gid://shopify/Customer/8016631660610', 'firstName': 'Mohamed', 'lastName': 'Maher', 'email': 'm.maher525@gmail.com', 'phone': None, 'addresses': [{'address1': None, 'address2': None, 'city': None, 'province': None, 'zip': None, 'country': 'Egypt', 'phone': None}, {'address1': 'الهضبة الوسطى الحي الثالث كمباوند ديار سيتي 3 خلف مدرسة ريماس', 'address2': 'عمارة 2 شقة 20 بوابة 3', 'city': 'Al Mokkatam', 'province': 'Cairo', 'zip': None, 'country': 'Egypt', 'phone': '01069987443'}]}, 'shippingAddress': {'address1': 'الهضبة الوسطى الحي الثالث كمباوند ديار سيتي 3 خلف مدرسة ريماس', 'address2': 'عمارة 2 شقة 20 بوابة 3', 'city': 'Al Mokkatam', 'province': 'Cairo', 'zip': None, 'country': 'Egypt', 'phone': '01069987443'}, 'billingAddress': {'address1': 'الهضبة الوسطى الحي الثالث كمباوند ديار سيتي 3 خلف مدرسة ريماس', 'address2': 'عمارة 2 شقة 20 بوابة 3', 'city': 'Al Mokkatam', 'province': 'Cairo', 'zip': None, 'country': 'Egypt', 'phone': '01069987443'}, 'lineItems': {'edges': [{'node': {'id': 'gid://shopify/LineItem/15807895044162', 'quantity': 1, 'sku': 'FG-0000512', 'title': 'Riverstone Bracelet', 'variant': {'id': 'gid://shopify/ProductVariant/42003152404546', 'sku': 'FG-0000512', 'price': '5000.00', 'product': {'id': 'gid://shopify/Product/7442025611330', 'title': 'Riverstone Bracelet'}}, 'discountedTotalSet': {'shopMoney': {'amount': '5000.0', 'currencyCode': 'EGP'}}}}, {'node': {'id': 'gid://shopify/LineItem/15807895076930', 'quantity': 1, 'sku': 'FG-0000571', 'title': 'Riverstone Ring Mix', 'variant': {'id': 'gid://shopify/ProductVariant/42003150995522', 'sku': 'FG-0000571', 'price': '3900.00', 'product': {'id': 'gid://shopify/Product/7442025152578', 'title': 'Riverstone Ring Mix'}}, 'discountedTotalSet': {'shopMoney': {'amount': '3900.0', 'currencyCode': 'EGP'}}}}, {'node': {'id': 'gid://shopify/LineItem/15807895109698', 'quantity': 1, 'sku': 'FG-0000568', 'title': 'Riverstone Necklace Mix', 'variant': {'id': 'gid://shopify/ProductVariant/42003150962754', 'sku': 'FG-0000568', 'price': '16800.00', 'product': {'id': 'gid://shopify/Product/7442025119810', 'title': 'Riverstone Necklace Mix'}}, 'discountedTotalSet': {'shopMoney': {'amount': '16800.0', 'currencyCode': 'EGP'}}}}]}, 'note': None}}, {'node': {'id': 'gid://shopify/Order/6308073570370', 'name': '#1461', 'createdAt': '2025-07-30T23:37:58Z', 'tags': [], 'totalPriceSet': {'shopMoney': {'amount': '6700.0', 'currencyCode': 'EGP'}}, 'subtotalPriceSet': {'shopMoney': {'amount': '6500.0', 'currencyCode': 'EGP'}}, 'totalTaxSet': {'shopMoney': {'amount': '0.0', 'currencyCode': 'EGP'}}, 'totalShippingPriceSet': {'shopMoney': {'amount': '200.0', 'currencyCode': 'EGP'}}, 'customer': {'id': 'gid://shopify/Customer/8015808462914', 'firstName': 'farouk', 'lastName': 'yehia', 'email': 'farouky01@gmail.com', 'phone': None, 'addresses': [{'address1': 'mesaha sq', 'address2': '5 mesaha sq, 15th floor', 'city': 'giza', 'province': 'Cairo', 'zip': '12611', 'country': 'Egypt', 'phone': '+201060520013'}]}, 'shippingAddress': {'address1': 'mesaha sq', 'address2': '5 mesaha sq, 15th floor', 'city': 'giza', 'province': 'Cairo', 'zip': '12611', 'country': 'Egypt', 'phone': '+201060520013'}, 'billingAddress': {'address1': 'mesaha sq', 'address2': '5 mesaha sq, 15th floor', 'city': 'giza', 'province': 'Cairo', 'zip': '12611', 'country': 'Egypt', 'phone': '+201060520013'}, 'lineItems': {'edges': [{'node': {'id': 'gid://shopify/LineItem/15806636818498', 'quantity': 1, 'sku': 'FG-0000408', 'title': 'Nightfall Earrings', 'variant': {'id': 'gid://shopify/ProductVariant/42003148996674', 'sku': 'FG-0000408', 'price': '6500.00', 'product': {'id': 'gid://shopify/Product/7442023841858', 'title': 'Nightfall Earrings'}}, 'discountedTotalSet': {'shopMoney': {'amount': '6500.0', 'currencyCode': 'EGP'}}}}]}, 'note': None}}], 'pageInfo': {'hasNextPage': True, 'endCursor': 'eyJsYXN0X2lkIjo2MzA4MDczNTcwMzcwLCJsYXN0X3ZhbHVlIjoiMjAyNS0wNy0zMCAyMzozNzo1OC45MDkxNTcifQ=='}}}, 'status': 'success'}
2025-08-05 18:06:06,913 - sync_service - INFO - Retrieved 20 total orders, 20 unsynced orders from Shopify store local
2025-08-05 18:06:06,915 - sync_service - INFO - Processing order: #1480
2025-08-05 18:06:06,915 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'BusinessPartners', 'request': {'method': 'GET', 'url': 'https://10.0.0.100:50000/b1s/v1/BusinessPartners', 'data': None, 'params': {'$filter': "Phone1 eq '00201003370743' or Phone2 eq '00201003370743' or Cellular eq '00201003370743'", '$top': 1}}, 'response': None, 'status': None}
2025-08-05 18:06:07,705 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'BusinessPartners', 'request': None, 'response': {'odata.metadata': 'https://10.0.0.100:50000/b1s/v1/$metadata#BusinessPartners', 'value': [{'CardCode': 'C0021031', 'CardName': 'Omnia Ezz Elarab', 'CardType': 'cCustomer', 'GroupCode': 100, 'Address': None, 'ZipCode': None, 'MailAddress': 'Palm hills 6th october, phase 1 Villa b53', 'MailZipCode': '00000', 'Phone1': None, 'Phone2': None, 'Fax': None, 'ContactPerson': None, 'Notes': None, 'PayTermsGrpCode': -1, 'CreditLimit': 0.0, 'MaxCommitment': 0.0, 'DiscountPercent': 0.0, 'VatLiable': 'vLiable', 'FederalTaxID': None, 'DeductibleAtSource': 'tNO', 'DeductionPercent': 0.0, 'DeductionValidUntil': None, 'PriceListNum': 1, 'IntrestRatePercent': 0.0, 'CommissionPercent': 0.0, 'CommissionGroupCode': 0, 'FreeText': None, 'SalesPersonCode': -1, 'Currency': 'EGP', 'RateDiffAccount': None, 'Cellular': '00201003370743', 'AvarageLate': None, 'City': None, 'County': None, 'Country': 'EG', 'MailCity': 'Giza', 'MailCounty': None, 'MailCountry': 'EG', 'EmailAddress': None, 'Picture': None, 'DefaultAccount': None, 'DefaultBranch': None, 'DefaultBankCode': '-1', 'AdditionalID': None, 'Pager': None, 'FatherCard': None, 'CardForeignName': None, 'FatherType': 'cPayments_sum', 'DeductionOffice': None, 'ExportCode': None, 'MinIntrest': 0.0, 'CurrentAccountBalance': 0.0, 'OpenDeliveryNotesBalance': 0.0, 'OpenOrdersBalance': 0.0, 'OpenChecksBalance': 0.0, 'VatGroup': None, 'ShippingType': None, 'Password': None, 'Indicator': None, 'IBAN': None, 'CreditCardCode': -1, 'CreditCardNum': '', 'CreditCardExpiration': None, 'DebitorAccount': '10601110', 'OpenOpportunities': None, 'Valid': 'tYES', 'ValidFrom': None, 'ValidTo': None, 'ValidRemarks': None, 'Frozen': 'tNO', 'FrozenFrom': None, 'FrozenTo': None, 'FrozenRemarks': None, 'Block': None, 'BillToState': None, 'ShipToState': None, 'ExemptNum': None, 'Priority': -1, 'FormCode1099': None, 'Box1099': None, 'PeymentMethodCode': None, 'BackOrder': 'tYES', 'PartialDelivery': 'tYES', 'BlockDunning': 'tNO', 'BankCountry': None, 'HouseBank': 'CIB', 'HouseBankCountry': 'EG', 'HouseBankAccount': '100029997769', 'ShipToDefault': 'Omnia Ezz Elarab 1', 'DunningLevel': None, 'DunningDate': None, 'CollectionAuthorization': 'tNO', 'DME': None, 'InstructionKey': None, 'SinglePayment': 'tNO', 'ISRBillerID': None, 'PaymentBlock': 'tNO', 'ReferenceDetails': None, 'HouseBankBranch': 'New Cairo', 'OwnerIDNumber': None, 'PaymentBlockDescription': -1, 'TaxExemptionLetterNum': None, 'MaxAmountOfExemption': 0.0, 'ExemptionValidityDateFrom': None, 'ExemptionValidityDateTo': None, 'LinkedBusinessPartner': None, 'LastMultiReconciliationNum': None, 'DeferredTax': 'tNO', 'Equalization': 'tNO', 'SubjectToWithholdingTax': 'boNO', 'CertificateNumber': None, 'ExpirationDate': None, 'NationalInsuranceNum': None, 'AccrualCriteria': 'tNO', 'WTCode': None, 'BillToBuildingFloorRoom': None, 'DownPaymentClearAct': '20101212', 'ChannelBP': None, 'DefaultTechnician': None, 'BilltoDefault': None, 'CustomerBillofExchangDisc': None, 'Territory': None, 'ShipToBuildingFloorRoom': '', 'CustomerBillofExchangPres': None, 'ProjectCode': None, 'VatGroupLatinAmerica': None, 'DunningTerm': None, 'Website': None, 'OtherReceivablePayable': None, 'BillofExchangeonCollection': None, 'CompanyPrivate': 'cCompany', 'LanguageCode': 8, 'UnpaidBillofExchange': None, 'WithholdingTaxDeductionGroup': -1, 'ClosingDateProcedureNumber': None, 'Profession': None, 'BankChargesAllocationCode': None, 'TaxRoundingRule': 'trr_CompanyDefault', 'Properties1': 'tNO', 'Properties2': 'tNO', 'Properties3': 'tNO', 'Properties4': 'tNO', 'Properties5': 'tNO', 'Properties6': 'tNO', 'Properties7': 'tNO', 'Properties8': 'tNO', 'Properties9': 'tNO', 'Properties10': 'tNO', 'Properties11': 'tNO', 'Properties12': 'tNO', 'Properties13': 'tNO', 'Properties14': 'tNO', 'Properties15': 'tNO', 'Properties16': 'tNO', 'Properties17': 'tNO', 'Properties18': 'tNO', 'Properties19': 'tNO', 'Properties20': 'tNO', 'Properties21': 'tNO', 'Properties22': 'tNO', 'Properties23': 'tNO', 'Properties24': 'tNO', 'Properties25': 'tNO', 'Properties26': 'tNO', 'Properties27': 'tNO', 'Properties28': 'tNO', 'Properties29': 'tNO', 'Properties30': 'tNO', 'Properties31': 'tNO', 'Properties32': 'tNO', 'Properties33': 'tNO', 'Properties34': 'tNO', 'Properties35': 'tNO', 'Properties36': 'tNO', 'Properties37': 'tNO', 'Properties38': 'tNO', 'Properties39': 'tNO', 'Properties40': 'tNO', 'Properties41': 'tNO', 'Properties42': 'tNO', 'Properties43': 'tNO', 'Properties44': 'tNO', 'Properties45': 'tNO', 'Properties46': 'tNO', 'Properties47': 'tNO', 'Properties48': 'tNO', 'Properties49': 'tNO', 'Properties50': 'tNO', 'Properties51': 'tNO', 'Properties52': 'tNO', 'Properties53': 'tNO', 'Properties54': 'tNO', 'Properties55': 'tNO', 'Properties56': 'tNO', 'Properties57': 'tNO', 'Properties58': 'tNO', 'Properties59': 'tNO', 'Properties60': 'tNO', 'Properties61': 'tNO', 'Properties62': 'tNO', 'Properties63': 'tNO', 'Properties64': 'tNO', 'CompanyRegistrationNumber': None, 'VerificationNumber': None, 'DiscountBaseObject': 'dgboNone', 'DiscountRelations': 'dgrLowestDiscount', 'TypeReport': 'atCompany', 'ThresholdOverlook': 'tNO', 'SurchargeOverlook': 'tNO', 'DownPaymentInterimAccount': None, 'OperationCode347': 'ocSalesOrServicesRevenues', 'InsuranceOperation347': 'tNO', 'HierarchicalDeduction': 'tNO', 'ShaamGroup': 'sgServicesAndAsset', 'WithholdingTaxCertified': 'tNO', 'BookkeepingCertified': 'tNO', 'PlanningGroup': None, 'Affiliate': 'tNO', 'Industry': None, 'VatIDNum': None, 'DatevAccount': None, 'DatevFirstDataEntry': 'tYES', 'UseShippedGoodsAccount': 'tNO', 'GTSRegNo': None, 'GTSBankAccountNo': None, 'GTSBillingAddrTel': None, 'ETaxWebSite': None, 'HouseBankIBAN': None, 'VATRegistrationNumber': None, 'RepresentativeName': None, 'IndustryType': None, 'BusinessType': None, 'Series': 87, 'AutomaticPosting': 'apNo', 'InterestAccount': None, 'FeeAccount': None, 'CampaignNumber': None, 'AliasName': None, 'DefaultBlanketAgreementNumber': None, 'EffectiveDiscount': 'dgrLowestDiscount', 'NoDiscounts': 'tNO', 'EffectivePrice': 'epDefaultPriority', 'EffectivePriceConsidersPriceBeforeDiscount': 'tNO', 'GlobalLocationNumber': None, 'EDISenderID': None, 'EDIRecipientID': None, 'ResidenNumber': 'rntSpanishFiscalID', 'RelationshipCode': None, 'RelationshipDateFrom': None, 'RelationshipDateTill': None, 'UnifiedFederalTaxID': None, 'AttachmentEntry': None, 'TypeOfOperation': None, 'EndorsableChecksFromBP': 'tYES', 'AcceptsEndorsedChecks': 'tNO', 'OwnerCode': None, 'BlockSendingMarketingContent': 'tNO', 'AgentCode': None, 'PriceMode': 'pmNet', 'EDocGenerationType': None, 'EDocStreet': None, 'EDocStreetNumber': None, 'EDocBuildingNumber': None, 'EDocZipCode': None, 'EDocCity': None, 'EDocCountry': None, 'EDocDistrict': None, 'EDocRepresentativeFirstName': None, 'EDocRepresentativeSurname': None, 'EDocRepresentativeCompany': None, 'EDocRepresentativeFiscalCode': None, 'EDocRepresentativeAdditionalId': None, 'EDocPECAddress': None, 'IPACodeForPA': None, 'UpdateDate': '2025-08-05', 'UpdateTime': '18:02:59', 'ExemptionMaxAmountValidationType': 'emaIndividual', 'ECommerceMerchantID': None, 'UseBillToAddrToDetermineTax': 'tNO', 'CreateDate': '2025-08-05', 'CreateTime': '18:02:59', 'DefaultTransporterEntry': None, 'DefaultTransporterLineNumber': None, 'FCERelevant': 'tNO', 'FCEValidateBaseDelivery': 'tNO', 'MainUsage': None, 'EBooksVATExemptionCause': None, 'U_BP_Old': None, 'U_SBO_BPType': 'Person', 'ElectronicProtocols': [], 'BPAddresses': [{'AddressName': 'Omnia Ezz Elarab 1', 'Street': 'Palm hills 6th october, phase 1 Villa b53', 'Block': None, 'ZipCode': '00000', 'City': 'Giza', 'County': None, 'Country': 'EG', 'State': None, 'FederalTaxID': None, 'TaxCode': None, 'BuildingFloorRoom': None, 'AddressType': 'bo_ShipTo', 'AddressName2': None, 'AddressName3': None, 'TypeOfAddress': None, 'StreetNo': None, 'BPCode': 'C0021031', 'RowNum': 0, 'GlobalLocationNumber': None, 'Nationality': None, 'TaxOffice': None, 'GSTIN': None, 'GstType': None, 'CreateDate': '2025-08-05', 'CreateTime': '18:02:59', 'MYFType': None, 'TaasEnabled': 'tYES'}], 'ContactEmployees': [], 'BPAccountReceivablePaybleCollection': [], 'BPPaymentMethods': [], 'BPWithholdingTaxCollection': [], 'BPPaymentDates': [], 'BPBranchAssignment': [], 'BPBankAccounts': [], 'BPFiscalTaxIDCollection': [], 'DiscountGroups': [], 'BPIntrastatExtension': {}, 'BPBlockSendingMarketingContents': []}]}, 'status': 'success'}
2025-08-05 18:06:07,708 - sync_service - INFO - Found existing customer: C0021031
2025-08-05 18:06:07,715 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'Invoices', 'request': {'method': 'POST', 'url': 'https://10.0.0.100:50000/b1s/v1/Invoices', 'data': {'DocDate': '2025-08-05', 'CardCode': 'C0021031', 'NumAtCard': '', 'Comments': '', 'ShipToCode': 'Omnia Ezz Elarab Address 1', 'U_Shopify_Order_ID': '#1480', 'SalesPersonCode': 97, 'DocumentLines': [{'ItemCode': 'FG-0000632', 'Quantity': 1, 'UnitPrice': 5000.0, 'WarehouseCode': 'Wh-0020'}], 'DocumentAdditionalExpenses': [{'ExpenseCode': 1, 'LineTotal': 200.0, 'Remarks': 'Shipping fee'}]}, 'params': None}, 'response': None, 'status': None}
2025-08-05 18:06:08,833 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'Invoices', 'request': None, 'response': {'status_code': 404, 'text': '{\n   "error" : {\n      "code" : -2028,\n      "message" : {\n         "lang" : "en-us",\n         "value" : "No matching records found (ODBC -2028)"\n      }\n   }\n}\n'}, 'status': 'failure'}
2025-08-05 18:06:08,835 - sync_service - ERROR - Failed to create invoice in SAP: HTTP 404: {
   "error" : {
      "code" : -2028,
      "message" : {
         "lang" : "en-us",
         "value" : "No matching records found (ODBC -2028)"
      }
   }
}

2025-08-05 18:06:49,218 - sync_service - INFO - Initialized Shopify client for store: Local Store (local)
2025-08-05 18:06:49,229 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'login', 'request': {'company': 'JudeBenHalim_Test', 'user': 'manager'}, 'response': None, 'status': None}
2025-08-05 18:06:49,970 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'login', 'request': None, 'response': {'status': 'success'}, 'status': 'success'}
2025-08-05 18:06:49,972 - sync_service - INFO - SAP login successful
2025-08-05 18:06:49,974 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'Warehouses', 'request': {'method': 'GET', 'url': 'https://10.0.0.100:50000/b1s/v1/Warehouses', 'data': None, 'params': None}, 'response': None, 'status': None}
2025-08-05 18:06:50,682 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'Warehouses', 'request': None, 'response': {'odata.metadata': 'https://10.0.0.100:50000/b1s/v1/$metadata#Warehouses', 'value': [{'Street': None, 'StockInflationOffsetAccount': '', 'ZipCode': None, 'DecreasingAccount': '', 'PurchaseAccount': '', 'EURevenuesAccount': '', 'ReturningAccount': '', 'ShippedGoodsAccount': '', 'StockInflationAdjustAccount': '', 'AllowUseTax': 'tNO', 'CostInflationAccount': '', 'ForeignExpensesAccount': '', 'EUExpensesAccount': '', 'CostInflationOffsetAccount': '', 'ExpensesClearingAccount': '', 'PurchaseReturningAccount': '', 'VATInRevenueAccount': '', 'FederalTaxID': None, 'Location': 3, 'Block': None, 'ExpenseAccount': '', 'DecreaseGLAccount': '', 'RevenuesAccount': '', 'TaxGroup': None, 'ExemptRevenuesAccount': '', 'PurchaseOffsetAccount': '', 'CostOfGoodsSold': '50101001', 'WarehouseCode': '5A', 'State': '', 'City': None, 'PriceDifferencesAccount': '50101001', 'VarianceAccount': '', 'Country': None, 'IncreaseGLAccount': '', 'ExchangeRateDifferencesAccount': '', 'WIPMaterialAccount': '', 'WarehouseName': 'Water Way', 'DropShip': 'tNO', 'WIPMaterialVarianceAccount': '', 'TransfersAcc': '20101513', 'InternalKey': None, 'ForeignRevenuesAcc': '', 'BuildingFloorRoom': None, 'County': None, 'Nettable': 'tYES', 'IncreasingAcc': '', 'ExpenseOffsetingAct': '', 'GoodsClearingAcc': '', 'StockAccount': '10501310', 'BusinessPlaceID': None, 'PurchaseCreditAcc': '', 'EUPurchaseCreditAcc': '', 'ForeignPurchaseCreditAcc': '', 'SalesCreditAcc': '', 'SalesCreditEUAcc': '', 'ExemptedCredits': '', 'SalesCreditForeignAcc': '', 'NegativeInventoryAdjustmentAccount': '', 'WHShipToName': None, 'Excisable': 'tNO', 'WHIncomingCenvatAccount': '', 'WHOutgoingCenvatAccount': '', 'StockInTransitAccount': '', 'WipOffsetProfitAndLossAccount': '', 'InventoryOffsetProfitAndLossAccount': '', 'AddressType': None, 'StreetNo': None, 'Storekeeper': None, 'Shipper': None, 'ManageSerialAndBatchNumbers': 'tNO', 'GlobalLocationNumber': None, 'EnableBinLocations': 'tYES', 'BinLocCodeSeparator': '-', 'DefaultBin': 8, 'DefaultBinEnforced': 'tNO', 'AutoAllocOnIssue': 'whsBinSingleChoiceOnly', 'EnableReceivingBinLocations': 'tNO', 'ReceivingBinLocationsBy': 'rblmBinLocationCodeOrder', 'PurchaseBalanceAccount': '', 'Inactive': 'tNO', 'RestrictReceiptToEmptyBinLocation': 'tYES', 'ReceiveUpToMaxQuantity': 'tNO', 'AutoAllocOnReceipt': 'aaormDefaultBin', 'ReceiveUpToMaxWeight': 'tNO', 'ReceiveUpToMethod': 'rutmMaximumQty', 'U_ShopifyInventoryIDLocal': None, 'U_ShopifyInventoryIDInternational': None}, {'Street': None, 'StockInflationOffsetAccount': '', 'ZipCode': None, 'DecreasingAccount': '', 'PurchaseAccount': '', 'EURevenuesAccount': '', 'ReturningAccount': '', 'ShippedGoodsAccount': '', 'StockInflationAdjustAccount': '', 'AllowUseTax': 'tNO', 'CostInflationAccount': '', 'ForeignExpensesAccount': '', 'EUExpensesAccount': '', 'CostInflationOffsetAccount': '', 'ExpensesClearingAccount': '', 'PurchaseReturningAccount': '', 'VATInRevenueAccount': '', 'FederalTaxID': None, 'Location': 7, 'Block': None, 'ExpenseAccount': '', 'DecreaseGLAccount': '', 'RevenuesAccount': '', 'TaxGroup': None, 'ExemptRevenuesAccount': '', 'PurchaseOffsetAccount': '', 'CostOfGoodsSold': '50101001', 'WarehouseCode': 'Arkan', 'State': '', 'City': None, 'PriceDifferencesAccount': '50101001', 'VarianceAccount': '', 'Country': None, 'IncreaseGLAccount': '', 'ExchangeRateDifferencesAccount': '', 'WIPMaterialAccount': '', 'WarehouseName': 'Arkan', 'DropShip': 'tNO', 'WIPMaterialVarianceAccount': '', 'TransfersAcc': '20101513', 'InternalKey': None, 'ForeignRevenuesAcc': '', 'BuildingFloorRoom': None, 'County': None, 'Nettable': 'tYES', 'IncreasingAcc': '', 'ExpenseOffsetingAct': '', 'GoodsClearingAcc': '', 'StockAccount': '10501310', 'BusinessPlaceID': None, 'PurchaseCreditAcc': '', 'EUPurchaseCreditAcc': '', 'ForeignPurchaseCreditAcc': '', 'SalesCreditAcc': '', 'SalesCreditEUAcc': '', 'ExemptedCredits': '', 'SalesCreditForeignAcc': '', 'NegativeInventoryAdjustmentAccount': '', 'WHShipToName': None, 'Excisable': 'tNO', 'WHIncomingCenvatAccount': '', 'WHOutgoingCenvatAccount': '', 'StockInTransitAccount': '', 'WipOffsetProfitAndLossAccount': '', 'InventoryOffsetProfitAndLossAccount': '', 'AddressType': None, 'StreetNo': None, 'Storekeeper': None, 'Shipper': None, 'ManageSerialAndBatchNumbers': 'tNO', 'GlobalLocationNumber': None, 'EnableBinLocations': 'tYES', 'BinLocCodeSeparator': '-', 'DefaultBin': 20, 'DefaultBinEnforced': 'tNO', 'AutoAllocOnIssue': 'whsBinSingleChoiceOnly', 'EnableReceivingBinLocations': 'tNO', 'ReceivingBinLocationsBy': 'rblmBinLocationCodeOrder', 'PurchaseBalanceAccount': '', 'Inactive': 'tNO', 'RestrictReceiptToEmptyBinLocation': 'tYES', 'ReceiveUpToMaxQuantity': 'tNO', 'AutoAllocOnReceipt': 'aaormDefaultBin', 'ReceiveUpToMaxWeight': 'tNO', 'ReceiveUpToMethod': 'rutmMaximumQty', 'U_ShopifyInventoryIDLocal': None, 'U_ShopifyInventoryIDInternational': None}, {'Street': None, 'StockInflationOffsetAccount': '', 'ZipCode': None, 'DecreasingAccount': '', 'PurchaseAccount': '', 'EURevenuesAccount': '', 'ReturningAccount': '', 'ShippedGoodsAccount': '', 'StockInflationAdjustAccount': '', 'AllowUseTax': 'tNO', 'CostInflationAccount': '', 'ForeignExpensesAccount': '', 'EUExpensesAccount': '', 'CostInflationOffsetAccount': '', 'ExpensesClearingAccount': '', 'PurchaseReturningAccount': '', 'VATInRevenueAccount': '', 'FederalTaxID': None, 'Location': 4, 'Block': None, 'ExpenseAccount': '', 'DecreaseGLAccount': '', 'RevenuesAccount': '', 'TaxGroup': None, 'ExemptRevenuesAccount': '', 'PurchaseOffsetAccount': '', 'CostOfGoodsSold': '50101001', 'WarehouseCode': 'DIP', 'State': '', 'City': None, 'PriceDifferencesAccount': '50101001', 'VarianceAccount': '', 'Country': None, 'IncreaseGLAccount': '', 'ExchangeRateDifferencesAccount': '', 'WIPMaterialAccount': '', 'WarehouseName': 'Diplomatics', 'DropShip': 'tNO', 'WIPMaterialVarianceAccount': '', 'TransfersAcc': '20101513', 'InternalKey': None, 'ForeignRevenuesAcc': '', 'BuildingFloorRoom': None, 'County': None, 'Nettable': 'tYES', 'IncreasingAcc': '', 'ExpenseOffsetingAct': '', 'GoodsClearingAcc': '', 'StockAccount': '10501310', 'BusinessPlaceID': None, 'PurchaseCreditAcc': '', 'EUPurchaseCreditAcc': '', 'ForeignPurchaseCreditAcc': '', 'SalesCreditAcc': '', 'SalesCreditEUAcc': '', 'ExemptedCredits': '', 'SalesCreditForeignAcc': '', 'NegativeInventoryAdjustmentAccount': '', 'WHShipToName': None, 'Excisable': 'tNO', 'WHIncomingCenvatAccount': '', 'WHOutgoingCenvatAccount': '', 'StockInTransitAccount': '', 'WipOffsetProfitAndLossAccount': '', 'InventoryOffsetProfitAndLossAccount': '', 'AddressType': None, 'StreetNo': None, 'Storekeeper': None, 'Shipper': None, 'ManageSerialAndBatchNumbers': 'tNO', 'GlobalLocationNumber': None, 'EnableBinLocations': 'tYES', 'BinLocCodeSeparator': '-', 'DefaultBin': 11, 'DefaultBinEnforced': 'tNO', 'AutoAllocOnIssue': 'whsBinSingleChoiceOnly', 'EnableReceivingBinLocations': 'tNO', 'ReceivingBinLocationsBy': 'rblmBinLocationCodeOrder', 'PurchaseBalanceAccount': '', 'Inactive': 'tNO', 'RestrictReceiptToEmptyBinLocation': 'tYES', 'ReceiveUpToMaxQuantity': 'tNO', 'AutoAllocOnReceipt': 'aaormDefaultBin', 'ReceiveUpToMaxWeight': 'tNO', 'ReceiveUpToMethod': 'rutmMaximumQty', 'U_ShopifyInventoryIDLocal': None, 'U_ShopifyInventoryIDInternational': None}, {'Street': None, 'StockInflationOffsetAccount': '', 'ZipCode': None, 'DecreasingAccount': '', 'PurchaseAccount': '', 'EURevenuesAccount': '', 'ReturningAccount': '', 'ShippedGoodsAccount': '', 'StockInflationAdjustAccount': '', 'AllowUseTax': 'tNO', 'CostInflationAccount': '', 'ForeignExpensesAccount': '', 'EUExpensesAccount': '', 'CostInflationOffsetAccount': '', 'ExpensesClearingAccount': '', 'PurchaseReturningAccount': '', 'VATInRevenueAccount': '', 'FederalTaxID': None, 'Location': 1, 'Block': None, 'ExpenseAccount': '', 'DecreaseGLAccount': '', 'RevenuesAccount': '', 'TaxGroup': None, 'ExemptRevenuesAccount': '', 'PurchaseOffsetAccount': '', 'CostOfGoodsSold': '50101001', 'WarehouseCode': 'INC', 'State': '', 'City': None, 'PriceDifferencesAccount': '50101001', 'VarianceAccount': '', 'Country': None, 'IncreaseGLAccount': '', 'ExchangeRateDifferencesAccount': '', 'WIPMaterialAccount': '', 'WarehouseName': 'Incoming Warehouse', 'DropShip': 'tNO', 'WIPMaterialVarianceAccount': '', 'TransfersAcc': '20101513', 'InternalKey': None, 'ForeignRevenuesAcc': '', 'BuildingFloorRoom': None, 'County': None, 'Nettable': 'tYES', 'IncreasingAcc': '', 'ExpenseOffsetingAct': '', 'GoodsClearingAcc': '', 'StockAccount': '10501310', 'BusinessPlaceID': None, 'PurchaseCreditAcc': '', 'EUPurchaseCreditAcc': '', 'ForeignPurchaseCreditAcc': '', 'SalesCreditAcc': '', 'SalesCreditEUAcc': '', 'ExemptedCredits': '', 'SalesCreditForeignAcc': '', 'NegativeInventoryAdjustmentAccount': '', 'WHShipToName': None, 'Excisable': 'tNO', 'WHIncomingCenvatAccount': '', 'WHOutgoingCenvatAccount': '', 'StockInTransitAccount': '', 'WipOffsetProfitAndLossAccount': '', 'InventoryOffsetProfitAndLossAccount': '', 'AddressType': None, 'StreetNo': None, 'Storekeeper': None, 'Shipper': None, 'ManageSerialAndBatchNumbers': 'tNO', 'GlobalLocationNumber': None, 'EnableBinLocations': 'tNO', 'BinLocCodeSeparator': '-', 'DefaultBin': None, 'DefaultBinEnforced': 'tNO', 'AutoAllocOnIssue': 'whsBinSingleChoiceOnly', 'EnableReceivingBinLocations': 'tNO', 'ReceivingBinLocationsBy': 'rblmBinLocationCodeOrder', 'PurchaseBalanceAccount': '', 'Inactive': 'tNO', 'RestrictReceiptToEmptyBinLocation': 'tYES', 'ReceiveUpToMaxQuantity': 'tNO', 'AutoAllocOnReceipt': 'aaormDefaultBin', 'ReceiveUpToMaxWeight': 'tNO', 'ReceiveUpToMethod': 'rutmMaximumQty', 'U_ShopifyInventoryIDLocal': None, 'U_ShopifyInventoryIDInternational': None}, {'Street': None, 'StockInflationOffsetAccount': '', 'ZipCode': None, 'DecreasingAccount': '', 'PurchaseAccount': '', 'EURevenuesAccount': '', 'ReturningAccount': '', 'ShippedGoodsAccount': '', 'StockInflationAdjustAccount': '', 'AllowUseTax': 'tNO', 'CostInflationAccount': '', 'ForeignExpensesAccount': '', 'EUExpensesAccount': '', 'CostInflationOffsetAccount': '', 'ExpensesClearingAccount': '', 'PurchaseReturningAccount': '', 'VATInRevenueAccount': '', 'FederalTaxID': None, 'Location': 1, 'Block': None, 'ExpenseAccount': '', 'DecreaseGLAccount': '', 'RevenuesAccount': '', 'TaxGroup': None, 'ExemptRevenuesAccount': '', 'PurchaseOffsetAccount': '', 'CostOfGoodsSold': '50101001', 'WarehouseCode': 'ONL', 'State': '', 'City': None, 'PriceDifferencesAccount': '50101001', 'VarianceAccount': '', 'Country': None, 'IncreaseGLAccount': '', 'ExchangeRateDifferencesAccount': '', 'WIPMaterialAccount': '', 'WarehouseName': 'Online Sales', 'DropShip': 'tNO', 'WIPMaterialVarianceAccount': '', 'TransfersAcc': '20101513', 'InternalKey': None, 'ForeignRevenuesAcc': '', 'BuildingFloorRoom': None, 'County': None, 'Nettable': 'tYES', 'IncreasingAcc': '', 'ExpenseOffsetingAct': '', 'GoodsClearingAcc': '', 'StockAccount': '10501312', 'BusinessPlaceID': None, 'PurchaseCreditAcc': '', 'EUPurchaseCreditAcc': '', 'ForeignPurchaseCreditAcc': '', 'SalesCreditAcc': '', 'SalesCreditEUAcc': '', 'ExemptedCredits': '', 'SalesCreditForeignAcc': '', 'NegativeInventoryAdjustmentAccount': '', 'WHShipToName': None, 'Excisable': 'tNO', 'WHIncomingCenvatAccount': '', 'WHOutgoingCenvatAccount': '', 'StockInTransitAccount': '', 'WipOffsetProfitAndLossAccount': '', 'InventoryOffsetProfitAndLossAccount': '', 'AddressType': None, 'StreetNo': None, 'Storekeeper': None, 'Shipper': None, 'ManageSerialAndBatchNumbers': 'tNO', 'GlobalLocationNumber': None, 'EnableBinLocations': 'tNO', 'BinLocCodeSeparator': '-', 'DefaultBin': None, 'DefaultBinEnforced': 'tNO', 'AutoAllocOnIssue': 'whsBinSingleChoiceOnly', 'EnableReceivingBinLocations': 'tNO', 'ReceivingBinLocationsBy': 'rblmBinLocationCodeOrder', 'PurchaseBalanceAccount': '', 'Inactive': 'tNO', 'RestrictReceiptToEmptyBinLocation': 'tYES', 'ReceiveUpToMaxQuantity': 'tNO', 'AutoAllocOnReceipt': 'aaormDefaultBin', 'ReceiveUpToMaxWeight': 'tNO', 'ReceiveUpToMethod': 'rutmMaximumQty', 'U_ShopifyInventoryIDLocal': None, 'U_ShopifyInventoryIDInternational': None}, {'Street': None, 'StockInflationOffsetAccount': '', 'ZipCode': None, 'DecreasingAccount': '', 'PurchaseAccount': '', 'EURevenuesAccount': '', 'ReturningAccount': '', 'ShippedGoodsAccount': '', 'StockInflationAdjustAccount': '', 'AllowUseTax': 'tNO', 'CostInflationAccount': '', 'ForeignExpensesAccount': '', 'EUExpensesAccount': '', 'CostInflationOffsetAccount': '', 'ExpensesClearingAccount': '', 'PurchaseReturningAccount': '', 'VATInRevenueAccount': '', 'FederalTaxID': None, 'Location': 6, 'Block': None, 'ExpenseAccount': '', 'DecreaseGLAccount': '', 'RevenuesAccount': '', 'TaxGroup': None, 'ExemptRevenuesAccount': '', 'PurchaseOffsetAccount': '', 'CostOfGoodsSold': '50101001', 'WarehouseCode': 'PHO', 'State': '', 'City': None, 'PriceDifferencesAccount': '50101001', 'VarianceAccount': '', 'Country': None, 'IncreaseGLAccount': '', 'ExchangeRateDifferencesAccount': '', 'WIPMaterialAccount': '', 'WarehouseName': 'Photography', 'DropShip': 'tNO', 'WIPMaterialVarianceAccount': '', 'TransfersAcc': '20101513', 'InternalKey': None, 'ForeignRevenuesAcc': '', 'BuildingFloorRoom': None, 'County': None, 'Nettable': 'tYES', 'IncreasingAcc': '', 'ExpenseOffsetingAct': '', 'GoodsClearingAcc': '', 'StockAccount': '10501310', 'BusinessPlaceID': None, 'PurchaseCreditAcc': '', 'EUPurchaseCreditAcc': '', 'ForeignPurchaseCreditAcc': '', 'SalesCreditAcc': '', 'SalesCreditEUAcc': '', 'ExemptedCredits': '', 'SalesCreditForeignAcc': '', 'NegativeInventoryAdjustmentAccount': '', 'WHShipToName': None, 'Excisable': 'tNO', 'WHIncomingCenvatAccount': '', 'WHOutgoingCenvatAccount': '', 'StockInTransitAccount': '', 'WipOffsetProfitAndLossAccount': '', 'InventoryOffsetProfitAndLossAccount': '', 'AddressType': None, 'StreetNo': None, 'Storekeeper': None, 'Shipper': None, 'ManageSerialAndBatchNumbers': 'tNO', 'GlobalLocationNumber': None, 'EnableBinLocations': 'tYES', 'BinLocCodeSeparator': '-', 'DefaultBin': None, 'DefaultBinEnforced': 'tNO', 'AutoAllocOnIssue': 'whsBinSingleChoiceOnly', 'EnableReceivingBinLocations': 'tNO', 'ReceivingBinLocationsBy': 'rblmBinLocationCodeOrder', 'PurchaseBalanceAccount': '', 'Inactive': 'tYES', 'RestrictReceiptToEmptyBinLocation': 'tYES', 'ReceiveUpToMaxQuantity': 'tNO', 'AutoAllocOnReceipt': 'aaormDefaultBin', 'ReceiveUpToMaxWeight': 'tNO', 'ReceiveUpToMethod': 'rutmMaximumQty', 'U_ShopifyInventoryIDLocal': None, 'U_ShopifyInventoryIDInternational': None}, {'Street': None, 'StockInflationOffsetAccount': '', 'ZipCode': None, 'DecreasingAccount': '', 'PurchaseAccount': '', 'EURevenuesAccount': '', 'ReturningAccount': '', 'ShippedGoodsAccount': '6100103', 'StockInflationAdjustAccount': '', 'AllowUseTax': 'tNO', 'CostInflationAccount': '', 'ForeignExpensesAccount': '', 'EUExpensesAccount': '', 'CostInflationOffsetAccount': '', 'ExpensesClearingAccount': '', 'PurchaseReturningAccount': '', 'VATInRevenueAccount': '', 'FederalTaxID': None, 'Location': None, 'Block': None, 'ExpenseAccount': '', 'DecreaseGLAccount': '', 'RevenuesAccount': '', 'TaxGroup': None, 'ExemptRevenuesAccount': '', 'PurchaseOffsetAccount': '', 'CostOfGoodsSold': '50101001', 'WarehouseCode': 'PHO-EX', 'State': '', 'City': None, 'PriceDifferencesAccount': '50101001', 'VarianceAccount': '', 'Country': None, 'IncreaseGLAccount': '', 'ExchangeRateDifferencesAccount': '', 'WIPMaterialAccount': '10501281', 'WarehouseName': 'PHO-EXTERNAL', 'DropShip': 'tNO', 'WIPMaterialVarianceAccount': '', 'TransfersAcc': '20101513', 'InternalKey': None, 'ForeignRevenuesAcc': '', 'BuildingFloorRoom': None, 'County': None, 'Nettable': 'tYES', 'IncreasingAcc': '', 'ExpenseOffsetingAct': '', 'GoodsClearingAcc': '', 'StockAccount': '10501310', 'BusinessPlaceID': None, 'PurchaseCreditAcc': '50101001', 'EUPurchaseCreditAcc': '50101001', 'ForeignPurchaseCreditAcc': '50101001', 'SalesCreditAcc': '40101101', 'SalesCreditEUAcc': '40101101', 'ExemptedCredits': '', 'SalesCreditForeignAcc': '40101101', 'NegativeInventoryAdjustmentAccount': '', 'WHShipToName': None, 'Excisable': 'tNO', 'WHIncomingCenvatAccount': '', 'WHOutgoingCenvatAccount': '', 'StockInTransitAccount': '20101515', 'WipOffsetProfitAndLossAccount': '', 'InventoryOffsetProfitAndLossAccount': '', 'AddressType': None, 'StreetNo': None, 'Storekeeper': None, 'Shipper': None, 'ManageSerialAndBatchNumbers': 'tNO', 'GlobalLocationNumber': None, 'EnableBinLocations': 'tYES', 'BinLocCodeSeparator': '-', 'DefaultBin': None, 'DefaultBinEnforced': 'tNO', 'AutoAllocOnIssue': 'whsBinSingleChoiceOnly', 'EnableReceivingBinLocations': 'tNO', 'ReceivingBinLocationsBy': 'rblmBinLocationCodeOrder', 'PurchaseBalanceAccount': '', 'Inactive': 'tNO', 'RestrictReceiptToEmptyBinLocation': 'tYES', 'ReceiveUpToMaxQuantity': 'tNO', 'AutoAllocOnReceipt': 'aaormDefaultBin', 'ReceiveUpToMaxWeight': 'tNO', 'ReceiveUpToMethod': 'rutmMaximumQty', 'U_ShopifyInventoryIDLocal': None, 'U_ShopifyInventoryIDInternational': None}, {'Street': None, 'StockInflationOffsetAccount': '', 'ZipCode': None, 'DecreasingAccount': '', 'PurchaseAccount': '', 'EURevenuesAccount': '', 'ReturningAccount': '', 'ShippedGoodsAccount': '6100103', 'StockInflationAdjustAccount': '', 'AllowUseTax': 'tNO', 'CostInflationAccount': '', 'ForeignExpensesAccount': '', 'EUExpensesAccount': '', 'CostInflationOffsetAccount': '', 'ExpensesClearingAccount': '', 'PurchaseReturningAccount': '', 'VATInRevenueAccount': '', 'FederalTaxID': None, 'Location': None, 'Block': None, 'ExpenseAccount': '', 'DecreaseGLAccount': '', 'RevenuesAccount': '', 'TaxGroup': None, 'ExemptRevenuesAccount': '', 'PurchaseOffsetAccount': '', 'CostOfGoodsSold': '50101001', 'WarehouseCode': 'PHO-IN', 'State': '', 'City': None, 'PriceDifferencesAccount': '50101001', 'VarianceAccount': '', 'Country': None, 'IncreaseGLAccount': '', 'ExchangeRateDifferencesAccount': '', 'WIPMaterialAccount': '10501281', 'WarehouseName': 'PHO-INTERNAL', 'DropShip': 'tNO', 'WIPMaterialVarianceAccount': '', 'TransfersAcc': '20101513', 'InternalKey': None, 'ForeignRevenuesAcc': '', 'BuildingFloorRoom': None, 'County': None, 'Nettable': 'tYES', 'IncreasingAcc': '', 'ExpenseOffsetingAct': '', 'GoodsClearingAcc': '', 'StockAccount': '10501310', 'BusinessPlaceID': None, 'PurchaseCreditAcc': '50101001', 'EUPurchaseCreditAcc': '50101001', 'ForeignPurchaseCreditAcc': '50101001', 'SalesCreditAcc': '40101101', 'SalesCreditEUAcc': '40101101', 'ExemptedCredits': '', 'SalesCreditForeignAcc': '40101101', 'NegativeInventoryAdjustmentAccount': '', 'WHShipToName': None, 'Excisable': 'tNO', 'WHIncomingCenvatAccount': '', 'WHOutgoingCenvatAccount': '', 'StockInTransitAccount': '20101515', 'WipOffsetProfitAndLossAccount': '', 'InventoryOffsetProfitAndLossAccount': '', 'AddressType': None, 'StreetNo': None, 'Storekeeper': None, 'Shipper': None, 'ManageSerialAndBatchNumbers': 'tNO', 'GlobalLocationNumber': None, 'EnableBinLocations': 'tNO', 'BinLocCodeSeparator': '-', 'DefaultBin': None, 'DefaultBinEnforced': 'tNO', 'AutoAllocOnIssue': 'whsBinSingleChoiceOnly', 'EnableReceivingBinLocations': 'tNO', 'ReceivingBinLocationsBy': 'rblmBinLocationCodeOrder', 'PurchaseBalanceAccount': '', 'Inactive': 'tNO', 'RestrictReceiptToEmptyBinLocation': 'tYES', 'ReceiveUpToMaxQuantity': 'tNO', 'AutoAllocOnReceipt': 'aaormDefaultBin', 'ReceiveUpToMaxWeight': 'tNO', 'ReceiveUpToMethod': 'rutmMaximumQty', 'U_ShopifyInventoryIDLocal': None, 'U_ShopifyInventoryIDInternational': None}, {'Street': None, 'StockInflationOffsetAccount': '', 'ZipCode': None, 'DecreasingAccount': '', 'PurchaseAccount': '', 'EURevenuesAccount': '', 'ReturningAccount': '', 'ShippedGoodsAccount': '', 'StockInflationAdjustAccount': '', 'AllowUseTax': 'tNO', 'CostInflationAccount': '', 'ForeignExpensesAccount': '', 'EUExpensesAccount': '', 'CostInflationOffsetAccount': '', 'ExpensesClearingAccount': '', 'PurchaseReturningAccount': '', 'VATInRevenueAccount': '', 'FederalTaxID': None, 'Location': 5, 'Block': None, 'ExpenseAccount': '', 'DecreaseGLAccount': '', 'RevenuesAccount': '', 'TaxGroup': None, 'ExemptRevenuesAccount': '', 'PurchaseOffsetAccount': '', 'CostOfGoodsSold': '50101001', 'WarehouseCode': 'QCW', 'State': '', 'City': None, 'PriceDifferencesAccount': '50101001', 'VarianceAccount': '', 'Country': None, 'IncreaseGLAccount': '', 'ExchangeRateDifferencesAccount': '', 'WIPMaterialAccount': '', 'WarehouseName': 'Quality Control', 'DropShip': 'tNO', 'WIPMaterialVarianceAccount': '', 'TransfersAcc': '20101513', 'InternalKey': None, 'ForeignRevenuesAcc': '', 'BuildingFloorRoom': None, 'County': None, 'Nettable': 'tYES', 'IncreasingAcc': '', 'ExpenseOffsetingAct': '', 'GoodsClearingAcc': '', 'StockAccount': '10501211', 'BusinessPlaceID': None, 'PurchaseCreditAcc': '', 'EUPurchaseCreditAcc': '', 'ForeignPurchaseCreditAcc': '', 'SalesCreditAcc': '', 'SalesCreditEUAcc': '', 'ExemptedCredits': '', 'SalesCreditForeignAcc': '', 'NegativeInventoryAdjustmentAccount': '', 'WHShipToName': None, 'Excisable': 'tNO', 'WHIncomingCenvatAccount': '', 'WHOutgoingCenvatAccount': '', 'StockInTransitAccount': '', 'WipOffsetProfitAndLossAccount': '', 'InventoryOffsetProfitAndLossAccount': '', 'AddressType': None, 'StreetNo': None, 'Storekeeper': None, 'Shipper': None, 'ManageSerialAndBatchNumbers': 'tNO', 'GlobalLocationNumber': None, 'EnableBinLocations': 'tNO', 'BinLocCodeSeparator': '-', 'DefaultBin': None, 'DefaultBinEnforced': 'tNO', 'AutoAllocOnIssue': 'whsBinSingleChoiceOnly', 'EnableReceivingBinLocations': 'tNO', 'ReceivingBinLocationsBy': 'rblmBinLocationCodeOrder', 'PurchaseBalanceAccount': '', 'Inactive': 'tYES', 'RestrictReceiptToEmptyBinLocation': 'tYES', 'ReceiveUpToMaxQuantity': 'tNO', 'AutoAllocOnReceipt': 'aaormDefaultBin', 'ReceiveUpToMaxWeight': 'tNO', 'ReceiveUpToMethod': 'rutmMaximumQty', 'U_ShopifyInventoryIDLocal': None, 'U_ShopifyInventoryIDInternational': None}, {'Street': None, 'StockInflationOffsetAccount': '', 'ZipCode': None, 'DecreasingAccount': '', 'PurchaseAccount': '', 'EURevenuesAccount': '', 'ReturningAccount': '', 'ShippedGoodsAccount': '', 'StockInflationAdjustAccount': '', 'AllowUseTax': 'tNO', 'CostInflationAccount': '', 'ForeignExpensesAccount': '', 'EUExpensesAccount': '', 'CostInflationOffsetAccount': '', 'ExpensesClearingAccount': '', 'PurchaseReturningAccount': '', 'VATInRevenueAccount': '', 'FederalTaxID': None, 'Location': 1, 'Block': None, 'ExpenseAccount': '', 'DecreaseGLAccount': '', 'RevenuesAccount': '', 'TaxGroup': None, 'ExemptRevenuesAccount': '', 'PurchaseOffsetAccount': '', 'CostOfGoodsSold': '50101001', 'WarehouseCode': 'RTW', 'State': '', 'City': None, 'PriceDifferencesAccount': '50101001', 'VarianceAccount': '', 'Country': None, 'IncreaseGLAccount': '', 'ExchangeRateDifferencesAccount': '', 'WIPMaterialAccount': '', 'WarehouseName': 'Retailer Warehouse', 'DropShip': 'tNO', 'WIPMaterialVarianceAccount': '', 'TransfersAcc': '20101513', 'InternalKey': None, 'ForeignRevenuesAcc': '', 'BuildingFloorRoom': None, 'County': None, 'Nettable': 'tYES', 'IncreasingAcc': '', 'ExpenseOffsetingAct': '', 'GoodsClearingAcc': '', 'StockAccount': '10501310', 'BusinessPlaceID': None, 'PurchaseCreditAcc': '', 'EUPurchaseCreditAcc': '', 'ForeignPurchaseCreditAcc': '', 'SalesCreditAcc': '', 'SalesCreditEUAcc': '', 'ExemptedCredits': '', 'SalesCreditForeignAcc': '', 'NegativeInventoryAdjustmentAccount': '', 'WHShipToName': None, 'Excisable': 'tNO', 'WHIncomingCenvatAccount': '', 'WHOutgoingCenvatAccount': '', 'StockInTransitAccount': '', 'WipOffsetProfitAndLossAccount': '', 'InventoryOffsetProfitAndLossAccount': '', 'AddressType': None, 'StreetNo': None, 'Storekeeper': None, 'Shipper': None, 'ManageSerialAndBatchNumbers': 'tNO', 'GlobalLocationNumber': None, 'EnableBinLocations': 'tNO', 'BinLocCodeSeparator': '-', 'DefaultBin': None, 'DefaultBinEnforced': 'tNO', 'AutoAllocOnIssue': 'whsBinSingleChoiceOnly', 'EnableReceivingBinLocations': 'tNO', 'ReceivingBinLocationsBy': 'rblmBinLocationCodeOrder', 'PurchaseBalanceAccount': '', 'Inactive': 'tNO', 'RestrictReceiptToEmptyBinLocation': 'tYES', 'ReceiveUpToMaxQuantity': 'tNO', 'AutoAllocOnReceipt': 'aaormDefaultBin', 'ReceiveUpToMaxWeight': 'tNO', 'ReceiveUpToMethod': 'rutmMaximumQty', 'U_ShopifyInventoryIDLocal': None, 'U_ShopifyInventoryIDInternational': None}, {'Street': None, 'StockInflationOffsetAccount': '', 'ZipCode': None, 'DecreasingAccount': '', 'PurchaseAccount': '', 'EURevenuesAccount': '', 'ReturningAccount': '', 'ShippedGoodsAccount': '', 'StockInflationAdjustAccount': '', 'AllowUseTax': 'tNO', 'CostInflationAccount': '', 'ForeignExpensesAccount': '', 'EUExpensesAccount': '', 'CostInflationOffsetAccount': '', 'ExpensesClearingAccount': '', 'PurchaseReturningAccount': '', 'VATInRevenueAccount': '', 'FederalTaxID': None, 'Location': 1, 'Block': None, 'ExpenseAccount': '', 'DecreaseGLAccount': '', 'RevenuesAccount': '', 'TaxGroup': None, 'ExemptRevenuesAccount': '', 'PurchaseOffsetAccount': '', 'CostOfGoodsSold': '50101001', 'WarehouseCode': 'RTWH', 'State': '', 'City': None, 'PriceDifferencesAccount': '50101001', 'VarianceAccount': '', 'Country': None, 'IncreaseGLAccount': '', 'ExchangeRateDifferencesAccount': '', 'WIPMaterialAccount': '', 'WarehouseName': 'Retailer Warehouse', 'DropShip': 'tNO', 'WIPMaterialVarianceAccount': '', 'TransfersAcc': '20101513', 'InternalKey': None, 'ForeignRevenuesAcc': '', 'BuildingFloorRoom': None, 'County': None, 'Nettable': 'tYES', 'IncreasingAcc': '', 'ExpenseOffsetingAct': '', 'GoodsClearingAcc': '', 'StockAccount': '10501310', 'BusinessPlaceID': None, 'PurchaseCreditAcc': '', 'EUPurchaseCreditAcc': '', 'ForeignPurchaseCreditAcc': '', 'SalesCreditAcc': '', 'SalesCreditEUAcc': '', 'ExemptedCredits': '', 'SalesCreditForeignAcc': '', 'NegativeInventoryAdjustmentAccount': '', 'WHShipToName': None, 'Excisable': 'tNO', 'WHIncomingCenvatAccount': '', 'WHOutgoingCenvatAccount': '', 'StockInTransitAccount': '', 'WipOffsetProfitAndLossAccount': '', 'InventoryOffsetProfitAndLossAccount': '', 'AddressType': None, 'StreetNo': None, 'Storekeeper': None, 'Shipper': None, 'ManageSerialAndBatchNumbers': 'tNO', 'GlobalLocationNumber': None, 'EnableBinLocations': 'tYES', 'BinLocCodeSeparator': '-', 'DefaultBin': 41, 'DefaultBinEnforced': 'tNO', 'AutoAllocOnIssue': 'whsBinSingleChoiceOnly', 'EnableReceivingBinLocations': 'tNO', 'ReceivingBinLocationsBy': 'rblmBinLocationCodeOrder', 'PurchaseBalanceAccount': '', 'Inactive': 'tNO', 'RestrictReceiptToEmptyBinLocation': 'tYES', 'ReceiveUpToMaxQuantity': 'tNO', 'AutoAllocOnReceipt': 'aaormDefaultBin', 'ReceiveUpToMaxWeight': 'tNO', 'ReceiveUpToMethod': 'rutmMaximumQty', 'U_ShopifyInventoryIDLocal': None, 'U_ShopifyInventoryIDInternational': None}, {'Street': None, 'StockInflationOffsetAccount': '', 'ZipCode': None, 'DecreasingAccount': '', 'PurchaseAccount': '', 'EURevenuesAccount': '', 'ReturningAccount': '', 'ShippedGoodsAccount': '', 'StockInflationAdjustAccount': '', 'AllowUseTax': 'tNO', 'CostInflationAccount': '', 'ForeignExpensesAccount': '', 'EUExpensesAccount': '', 'CostInflationOffsetAccount': '', 'ExpensesClearingAccount': '', 'PurchaseReturningAccount': '', 'VATInRevenueAccount': '', 'FederalTaxID': None, 'Location': 1, 'Block': None, 'ExpenseAccount': '', 'DecreaseGLAccount': '', 'RevenuesAccount': '', 'TaxGroup': None, 'ExemptRevenuesAccount': '', 'PurchaseOffsetAccount': '', 'CostOfGoodsSold': '50101001', 'WarehouseCode': 'SW', 'State': '', 'City': None, 'PriceDifferencesAccount': '50101001', 'VarianceAccount': '', 'Country': None, 'IncreaseGLAccount': '', 'ExchangeRateDifferencesAccount': '', 'WIPMaterialAccount': '', 'WarehouseName': 'Show Room', 'DropShip': 'tNO', 'WIPMaterialVarianceAccount': '', 'TransfersAcc': '20101513', 'InternalKey': None, 'ForeignRevenuesAcc': '', 'BuildingFloorRoom': None, 'County': None, 'Nettable': 'tYES', 'IncreasingAcc': '', 'ExpenseOffsetingAct': '', 'GoodsClearingAcc': '', 'StockAccount': '10501310', 'BusinessPlaceID': None, 'PurchaseCreditAcc': '', 'EUPurchaseCreditAcc': '', 'ForeignPurchaseCreditAcc': '', 'SalesCreditAcc': '', 'SalesCreditEUAcc': '', 'ExemptedCredits': '', 'SalesCreditForeignAcc': '', 'NegativeInventoryAdjustmentAccount': '', 'WHShipToName': None, 'Excisable': 'tNO', 'WHIncomingCenvatAccount': '', 'WHOutgoingCenvatAccount': '', 'StockInTransitAccount': '', 'WipOffsetProfitAndLossAccount': '', 'InventoryOffsetProfitAndLossAccount': '', 'AddressType': None, 'StreetNo': None, 'Storekeeper': None, 'Shipper': None, 'ManageSerialAndBatchNumbers': 'tNO', 'GlobalLocationNumber': None, 'EnableBinLocations': 'tYES', 'BinLocCodeSeparator': '-', 'DefaultBin': 2, 'DefaultBinEnforced': 'tNO', 'AutoAllocOnIssue': 'whsBinBinCodeOrder', 'EnableReceivingBinLocations': 'tNO', 'ReceivingBinLocationsBy': 'rblmBinLocationCodeOrder', 'PurchaseBalanceAccount': '', 'Inactive': 'tNO', 'RestrictReceiptToEmptyBinLocation': 'tYES', 'ReceiveUpToMaxQuantity': 'tNO', 'AutoAllocOnReceipt': 'aaormDefaultBin', 'ReceiveUpToMaxWeight': 'tNO', 'ReceiveUpToMethod': 'rutmMaximumQty', 'U_ShopifyInventoryIDLocal': None, 'U_ShopifyInventoryIDInternational': None}, {'Street': None, 'StockInflationOffsetAccount': '', 'ZipCode': None, 'DecreasingAccount': '', 'PurchaseAccount': '', 'EURevenuesAccount': '', 'ReturningAccount': '', 'ShippedGoodsAccount': '', 'StockInflationAdjustAccount': '', 'AllowUseTax': 'tNO', 'CostInflationAccount': '', 'ForeignExpensesAccount': '', 'EUExpensesAccount': '', 'CostInflationOffsetAccount': '', 'ExpensesClearingAccount': '', 'PurchaseReturningAccount': '', 'VATInRevenueAccount': '', 'FederalTaxID': None, 'Location': 1, 'Block': None, 'ExpenseAccount': '', 'DecreaseGLAccount': '', 'RevenuesAccount': '', 'TaxGroup': None, 'ExemptRevenuesAccount': '', 'PurchaseOffsetAccount': '', 'CostOfGoodsSold': '50101001', 'WarehouseCode': 'WLS', 'State': '', 'City': None, 'PriceDifferencesAccount': '50101001', 'VarianceAccount': '', 'Country': None, 'IncreaseGLAccount': '', 'ExchangeRateDifferencesAccount': '', 'WIPMaterialAccount': '', 'WarehouseName': 'Whole Sales', 'DropShip': 'tNO', 'WIPMaterialVarianceAccount': '', 'TransfersAcc': '20101513', 'InternalKey': None, 'ForeignRevenuesAcc': '', 'BuildingFloorRoom': None, 'County': None, 'Nettable': 'tYES', 'IncreasingAcc': '', 'ExpenseOffsetingAct': '', 'GoodsClearingAcc': '', 'StockAccount': '10501310', 'BusinessPlaceID': None, 'PurchaseCreditAcc': '', 'EUPurchaseCreditAcc': '', 'ForeignPurchaseCreditAcc': '', 'SalesCreditAcc': '', 'SalesCreditEUAcc': '', 'ExemptedCredits': '', 'SalesCreditForeignAcc': '', 'NegativeInventoryAdjustmentAccount': '', 'WHShipToName': None, 'Excisable': 'tNO', 'WHIncomingCenvatAccount': '', 'WHOutgoingCenvatAccount': '', 'StockInTransitAccount': '', 'WipOffsetProfitAndLossAccount': '', 'InventoryOffsetProfitAndLossAccount': '', 'AddressType': None, 'StreetNo': None, 'Storekeeper': None, 'Shipper': None, 'ManageSerialAndBatchNumbers': 'tNO', 'GlobalLocationNumber': None, 'EnableBinLocations': 'tNO', 'BinLocCodeSeparator': '-', 'DefaultBin': None, 'DefaultBinEnforced': 'tNO', 'AutoAllocOnIssue': 'whsBinSingleChoiceOnly', 'EnableReceivingBinLocations': 'tNO', 'ReceivingBinLocationsBy': 'rblmBinLocationCodeOrder', 'PurchaseBalanceAccount': '', 'Inactive': 'tNO', 'RestrictReceiptToEmptyBinLocation': 'tYES', 'ReceiveUpToMaxQuantity': 'tNO', 'AutoAllocOnReceipt': 'aaormDefaultBin', 'ReceiveUpToMaxWeight': 'tNO', 'ReceiveUpToMethod': 'rutmMaximumQty', 'U_ShopifyInventoryIDLocal': None, 'U_ShopifyInventoryIDInternational': None}, {'Street': None, 'StockInflationOffsetAccount': '', 'ZipCode': None, 'DecreasingAccount': '', 'PurchaseAccount': '', 'EURevenuesAccount': '', 'ReturningAccount': '', 'ShippedGoodsAccount': '', 'StockInflationAdjustAccount': '', 'AllowUseTax': 'tNO', 'CostInflationAccount': '', 'ForeignExpensesAccount': '', 'EUExpensesAccount': '', 'CostInflationOffsetAccount': '', 'ExpensesClearingAccount': '', 'PurchaseReturningAccount': '', 'VATInRevenueAccount': '', 'FederalTaxID': None, 'Location': 5, 'Block': None, 'ExpenseAccount': '', 'DecreaseGLAccount': '', 'RevenuesAccount': '', 'TaxGroup': None, 'ExemptRevenuesAccount': '', 'PurchaseOffsetAccount': '', 'CostOfGoodsSold': '50101001', 'WarehouseCode': 'WW', 'State': '', 'City': None, 'PriceDifferencesAccount': '50101001', 'VarianceAccount': '', 'Country': None, 'IncreaseGLAccount': '', 'ExchangeRateDifferencesAccount': '', 'WIPMaterialAccount': '', 'WarehouseName': 'Work Shop', 'DropShip': 'tNO', 'WIPMaterialVarianceAccount': '', 'TransfersAcc': '20101513', 'InternalKey': None, 'ForeignRevenuesAcc': '', 'BuildingFloorRoom': None, 'County': None, 'Nettable': 'tYES', 'IncreasingAcc': '', 'ExpenseOffsetingAct': '', 'GoodsClearingAcc': '', 'StockAccount': '10501310', 'BusinessPlaceID': None, 'PurchaseCreditAcc': '', 'EUPurchaseCreditAcc': '', 'ForeignPurchaseCreditAcc': '', 'SalesCreditAcc': '', 'SalesCreditEUAcc': '', 'ExemptedCredits': '', 'SalesCreditForeignAcc': '', 'NegativeInventoryAdjustmentAccount': '', 'WHShipToName': None, 'Excisable': 'tNO', 'WHIncomingCenvatAccount': '', 'WHOutgoingCenvatAccount': '', 'StockInTransitAccount': '', 'WipOffsetProfitAndLossAccount': '', 'InventoryOffsetProfitAndLossAccount': '', 'AddressType': None, 'StreetNo': None, 'Storekeeper': None, 'Shipper': None, 'ManageSerialAndBatchNumbers': 'tNO', 'GlobalLocationNumber': None, 'EnableBinLocations': 'tNO', 'BinLocCodeSeparator': '-', 'DefaultBin': None, 'DefaultBinEnforced': 'tNO', 'AutoAllocOnIssue': 'whsBinSingleChoiceOnly', 'EnableReceivingBinLocations': 'tNO', 'ReceivingBinLocationsBy': 'rblmBinLocationCodeOrder', 'PurchaseBalanceAccount': '', 'Inactive': 'tNO', 'RestrictReceiptToEmptyBinLocation': 'tYES', 'ReceiveUpToMaxQuantity': 'tNO', 'AutoAllocOnReceipt': 'aaormDefaultBin', 'ReceiveUpToMaxWeight': 'tNO', 'ReceiveUpToMethod': 'rutmMaximumQty', 'U_ShopifyInventoryIDLocal': None, 'U_ShopifyInventoryIDInternational': None}, {'Street': None, 'StockInflationOffsetAccount': '', 'ZipCode': None, 'DecreasingAccount': '', 'PurchaseAccount': '', 'EURevenuesAccount': '40101101', 'ReturningAccount': '10501310', 'ShippedGoodsAccount': '6100103', 'StockInflationAdjustAccount': '', 'AllowUseTax': 'tNO', 'CostInflationAccount': '', 'ForeignExpensesAccount': '50101001', 'EUExpensesAccount': '50101001', 'CostInflationOffsetAccount': '', 'ExpensesClearingAccount': '', 'PurchaseReturningAccount': '', 'VATInRevenueAccount': '', 'FederalTaxID': None, 'Location': 5, 'Block': None, 'ExpenseAccount': '50101001', 'DecreaseGLAccount': '', 'RevenuesAccount': '40101101', 'TaxGroup': None, 'ExemptRevenuesAccount': '', 'PurchaseOffsetAccount': '', 'CostOfGoodsSold': '50101001', 'WarehouseCode': 'WW-CON', 'State': '', 'City': None, 'PriceDifferencesAccount': '50101001', 'VarianceAccount': '', 'Country': None, 'IncreaseGLAccount': '', 'ExchangeRateDifferencesAccount': '', 'WIPMaterialAccount': '10501281', 'WarehouseName': 'WKS - Consignment', 'DropShip': 'tNO', 'WIPMaterialVarianceAccount': '', 'TransfersAcc': '20101513', 'InternalKey': None, 'ForeignRevenuesAcc': '40101101', 'BuildingFloorRoom': None, 'County': None, 'Nettable': 'tYES', 'IncreasingAcc': '', 'ExpenseOffsetingAct': '', 'GoodsClearingAcc': '10501210', 'StockAccount': '10501310', 'BusinessPlaceID': None, 'PurchaseCreditAcc': '50101001', 'EUPurchaseCreditAcc': '50101001', 'ForeignPurchaseCreditAcc': '50101001', 'SalesCreditAcc': '40101101', 'SalesCreditEUAcc': '40101101', 'ExemptedCredits': '', 'SalesCreditForeignAcc': '40101101', 'NegativeInventoryAdjustmentAccount': '', 'WHShipToName': None, 'Excisable': 'tNO', 'WHIncomingCenvatAccount': '', 'WHOutgoingCenvatAccount': '', 'StockInTransitAccount': '20101515', 'WipOffsetProfitAndLossAccount': '', 'InventoryOffsetProfitAndLossAccount': '', 'AddressType': None, 'StreetNo': None, 'Storekeeper': None, 'Shipper': None, 'ManageSerialAndBatchNumbers': 'tNO', 'GlobalLocationNumber': None, 'EnableBinLocations': 'tNO', 'BinLocCodeSeparator': '-', 'DefaultBin': None, 'DefaultBinEnforced': 'tNO', 'AutoAllocOnIssue': 'whsBinSingleChoiceOnly', 'EnableReceivingBinLocations': 'tNO', 'ReceivingBinLocationsBy': 'rblmBinLocationCodeOrder', 'PurchaseBalanceAccount': '', 'Inactive': 'tNO', 'RestrictReceiptToEmptyBinLocation': 'tYES', 'ReceiveUpToMaxQuantity': 'tNO', 'AutoAllocOnReceipt': 'aaormDefaultBin', 'ReceiveUpToMaxWeight': 'tNO', 'ReceiveUpToMethod': 'rutmMaximumQty', 'U_ShopifyInventoryIDLocal': None, 'U_ShopifyInventoryIDInternational': None}, {'Street': None, 'StockInflationOffsetAccount': '', 'ZipCode': None, 'DecreasingAccount': '', 'PurchaseAccount': '', 'EURevenuesAccount': '40101101', 'ReturningAccount': '10501310', 'ShippedGoodsAccount': '6100103', 'StockInflationAdjustAccount': '', 'AllowUseTax': 'tNO', 'CostInflationAccount': '', 'ForeignExpensesAccount': '50101001', 'EUExpensesAccount': '50101001', 'CostInflationOffsetAccount': '', 'ExpensesClearingAccount': '', 'PurchaseReturningAccount': '', 'VATInRevenueAccount': '', 'FederalTaxID': None, 'Location': 5, 'Block': None, 'ExpenseAccount': '50101001', 'DecreaseGLAccount': '', 'RevenuesAccount': '40101101', 'TaxGroup': None, 'ExemptRevenuesAccount': '', 'PurchaseOffsetAccount': '', 'CostOfGoodsSold': '50101001', 'WarehouseCode': 'WW-DAM', 'State': '', 'City': None, 'PriceDifferencesAccount': '50101001', 'VarianceAccount': '', 'Country': None, 'IncreaseGLAccount': '', 'ExchangeRateDifferencesAccount': '', 'WIPMaterialAccount': '10501281', 'WarehouseName': 'WW-Damage', 'DropShip': 'tNO', 'WIPMaterialVarianceAccount': '', 'TransfersAcc': '20101513', 'InternalKey': None, 'ForeignRevenuesAcc': '40101101', 'BuildingFloorRoom': None, 'County': None, 'Nettable': 'tYES', 'IncreasingAcc': '', 'ExpenseOffsetingAct': '', 'GoodsClearingAcc': '10501210', 'StockAccount': '10501310', 'BusinessPlaceID': None, 'PurchaseCreditAcc': '50101001', 'EUPurchaseCreditAcc': '50101001', 'ForeignPurchaseCreditAcc': '50101001', 'SalesCreditAcc': '40101101', 'SalesCreditEUAcc': '40101101', 'ExemptedCredits': '', 'SalesCreditForeignAcc': '40101101', 'NegativeInventoryAdjustmentAccount': '', 'WHShipToName': None, 'Excisable': 'tNO', 'WHIncomingCenvatAccount': '', 'WHOutgoingCenvatAccount': '', 'StockInTransitAccount': '20101515', 'WipOffsetProfitAndLossAccount': '', 'InventoryOffsetProfitAndLossAccount': '', 'AddressType': None, 'StreetNo': None, 'Storekeeper': None, 'Shipper': None, 'ManageSerialAndBatchNumbers': 'tNO', 'GlobalLocationNumber': None, 'EnableBinLocations': 'tNO', 'BinLocCodeSeparator': '-', 'DefaultBin': None, 'DefaultBinEnforced': 'tNO', 'AutoAllocOnIssue': 'whsBinSingleChoiceOnly', 'EnableReceivingBinLocations': 'tNO', 'ReceivingBinLocationsBy': 'rblmBinLocationCodeOrder', 'PurchaseBalanceAccount': '', 'Inactive': 'tNO', 'RestrictReceiptToEmptyBinLocation': 'tYES', 'ReceiveUpToMaxQuantity': 'tNO', 'AutoAllocOnReceipt': 'aaormDefaultBin', 'ReceiveUpToMaxWeight': 'tNO', 'ReceiveUpToMethod': 'rutmMaximumQty', 'U_ShopifyInventoryIDLocal': None, 'U_ShopifyInventoryIDInternational': None}, {'Street': None, 'StockInflationOffsetAccount': '', 'ZipCode': None, 'DecreasingAccount': '', 'PurchaseAccount': '', 'EURevenuesAccount': '40101101', 'ReturningAccount': '10501310', 'ShippedGoodsAccount': '6100103', 'StockInflationAdjustAccount': '', 'AllowUseTax': 'tNO', 'CostInflationAccount': '', 'ForeignExpensesAccount': '50101001', 'EUExpensesAccount': '50101001', 'CostInflationOffsetAccount': '', 'ExpensesClearingAccount': '', 'PurchaseReturningAccount': '', 'VATInRevenueAccount': '', 'FederalTaxID': None, 'Location': 5, 'Block': None, 'ExpenseAccount': '50101001', 'DecreaseGLAccount': '', 'RevenuesAccount': '40101101', 'TaxGroup': None, 'ExemptRevenuesAccount': '', 'PurchaseOffsetAccount': '', 'CostOfGoodsSold': '50101001', 'WarehouseCode': 'WW-REP', 'State': '', 'City': None, 'PriceDifferencesAccount': '50101001', 'VarianceAccount': '', 'Country': None, 'IncreaseGLAccount': '', 'ExchangeRateDifferencesAccount': '', 'WIPMaterialAccount': '10501281', 'WarehouseName': 'WW-Repaire', 'DropShip': 'tNO', 'WIPMaterialVarianceAccount': '', 'TransfersAcc': '20101513', 'InternalKey': None, 'ForeignRevenuesAcc': '40101101', 'BuildingFloorRoom': None, 'County': None, 'Nettable': 'tYES', 'IncreasingAcc': '', 'ExpenseOffsetingAct': '', 'GoodsClearingAcc': '10501210', 'StockAccount': '10501310', 'BusinessPlaceID': None, 'PurchaseCreditAcc': '50101001', 'EUPurchaseCreditAcc': '50101001', 'ForeignPurchaseCreditAcc': '50101001', 'SalesCreditAcc': '40101101', 'SalesCreditEUAcc': '40101101', 'ExemptedCredits': '', 'SalesCreditForeignAcc': '40101101', 'NegativeInventoryAdjustmentAccount': '', 'WHShipToName': None, 'Excisable': 'tNO', 'WHIncomingCenvatAccount': '', 'WHOutgoingCenvatAccount': '', 'StockInTransitAccount': '20101515', 'WipOffsetProfitAndLossAccount': '', 'InventoryOffsetProfitAndLossAccount': '', 'AddressType': None, 'StreetNo': None, 'Storekeeper': None, 'Shipper': None, 'ManageSerialAndBatchNumbers': 'tNO', 'GlobalLocationNumber': None, 'EnableBinLocations': 'tNO', 'BinLocCodeSeparator': '-', 'DefaultBin': None, 'DefaultBinEnforced': 'tNO', 'AutoAllocOnIssue': 'whsBinSingleChoiceOnly', 'EnableReceivingBinLocations': 'tNO', 'ReceivingBinLocationsBy': 'rblmBinLocationCodeOrder', 'PurchaseBalanceAccount': '', 'Inactive': 'tNO', 'RestrictReceiptToEmptyBinLocation': 'tYES', 'ReceiveUpToMaxQuantity': 'tNO', 'AutoAllocOnReceipt': 'aaormDefaultBin', 'ReceiveUpToMaxWeight': 'tNO', 'ReceiveUpToMethod': 'rutmMaximumQty', 'U_ShopifyInventoryIDLocal': None, 'U_ShopifyInventoryIDInternational': None}, {'Street': None, 'StockInflationOffsetAccount': '', 'ZipCode': None, 'DecreasingAccount': '', 'PurchaseAccount': '', 'EURevenuesAccount': '40101101', 'ReturningAccount': '10501310', 'ShippedGoodsAccount': '6100103', 'StockInflationAdjustAccount': '', 'AllowUseTax': 'tNO', 'CostInflationAccount': '', 'ForeignExpensesAccount': '50101001', 'EUExpensesAccount': '50101001', 'CostInflationOffsetAccount': '', 'ExpensesClearingAccount': '', 'PurchaseReturningAccount': '', 'VATInRevenueAccount': '', 'FederalTaxID': None, 'Location': 5, 'Block': None, 'ExpenseAccount': '50101001', 'DecreaseGLAccount': '', 'RevenuesAccount': '40101101', 'TaxGroup': None, 'ExemptRevenuesAccount': '', 'PurchaseOffsetAccount': '', 'CostOfGoodsSold': '50101001', 'WarehouseCode': 'WW-SAM', 'State': '', 'City': None, 'PriceDifferencesAccount': '50101001', 'VarianceAccount': '', 'Country': None, 'IncreaseGLAccount': '', 'ExchangeRateDifferencesAccount': '', 'WIPMaterialAccount': '10501281', 'WarehouseName': 'WKS - Sample', 'DropShip': 'tNO', 'WIPMaterialVarianceAccount': '', 'TransfersAcc': '20101513', 'InternalKey': None, 'ForeignRevenuesAcc': '40101101', 'BuildingFloorRoom': None, 'County': None, 'Nettable': 'tYES', 'IncreasingAcc': '', 'ExpenseOffsetingAct': '', 'GoodsClearingAcc': '10501210', 'StockAccount': '10501310', 'BusinessPlaceID': None, 'PurchaseCreditAcc': '50101001', 'EUPurchaseCreditAcc': '50101001', 'ForeignPurchaseCreditAcc': '50101001', 'SalesCreditAcc': '40101101', 'SalesCreditEUAcc': '40101101', 'ExemptedCredits': '', 'SalesCreditForeignAcc': '40101101', 'NegativeInventoryAdjustmentAccount': '', 'WHShipToName': None, 'Excisable': 'tNO', 'WHIncomingCenvatAccount': '', 'WHOutgoingCenvatAccount': '', 'StockInTransitAccount': '20101515', 'WipOffsetProfitAndLossAccount': '', 'InventoryOffsetProfitAndLossAccount': '', 'AddressType': None, 'StreetNo': None, 'Storekeeper': None, 'Shipper': None, 'ManageSerialAndBatchNumbers': 'tNO', 'GlobalLocationNumber': None, 'EnableBinLocations': 'tNO', 'BinLocCodeSeparator': '-', 'DefaultBin': None, 'DefaultBinEnforced': 'tNO', 'AutoAllocOnIssue': 'whsBinSingleChoiceOnly', 'EnableReceivingBinLocations': 'tNO', 'ReceivingBinLocationsBy': 'rblmBinLocationCodeOrder', 'PurchaseBalanceAccount': '', 'Inactive': 'tNO', 'RestrictReceiptToEmptyBinLocation': 'tYES', 'ReceiveUpToMaxQuantity': 'tNO', 'AutoAllocOnReceipt': 'aaormDefaultBin', 'ReceiveUpToMaxWeight': 'tNO', 'ReceiveUpToMethod': 'rutmMaximumQty', 'U_ShopifyInventoryIDLocal': None, 'U_ShopifyInventoryIDInternational': None}, {'Street': None, 'StockInflationOffsetAccount': '', 'ZipCode': None, 'DecreasingAccount': '', 'PurchaseAccount': '', 'EURevenuesAccount': '40101101', 'ReturningAccount': '10501310', 'ShippedGoodsAccount': '6100103', 'StockInflationAdjustAccount': '', 'AllowUseTax': 'tNO', 'CostInflationAccount': '', 'ForeignExpensesAccount': '50101001', 'EUExpensesAccount': '50101001', 'CostInflationOffsetAccount': '', 'ExpensesClearingAccount': '', 'PurchaseReturningAccount': '', 'VATInRevenueAccount': '', 'FederalTaxID': None, 'Location': 5, 'Block': None, 'ExpenseAccount': '50101001', 'DecreaseGLAccount': '', 'RevenuesAccount': '40101101', 'TaxGroup': None, 'ExemptRevenuesAccount': '', 'PurchaseOffsetAccount': '', 'CostOfGoodsSold': '50101001', 'WarehouseCode': 'WW-WIP', 'State': '', 'City': None, 'PriceDifferencesAccount': '50101001', 'VarianceAccount': '', 'Country': None, 'IncreaseGLAccount': '', 'ExchangeRateDifferencesAccount': '', 'WIPMaterialAccount': '10501281', 'WarehouseName': 'WKS - WIP', 'DropShip': 'tNO', 'WIPMaterialVarianceAccount': '', 'TransfersAcc': '20101513', 'InternalKey': None, 'ForeignRevenuesAcc': '40101101', 'BuildingFloorRoom': None, 'County': None, 'Nettable': 'tYES', 'IncreasingAcc': '', 'ExpenseOffsetingAct': '', 'GoodsClearingAcc': '10501210', 'StockAccount': '10501310', 'BusinessPlaceID': None, 'PurchaseCreditAcc': '50101001', 'EUPurchaseCreditAcc': '50101001', 'ForeignPurchaseCreditAcc': '50101001', 'SalesCreditAcc': '40101101', 'SalesCreditEUAcc': '40101101', 'ExemptedCredits': '', 'SalesCreditForeignAcc': '40101101', 'NegativeInventoryAdjustmentAccount': '', 'WHShipToName': None, 'Excisable': 'tNO', 'WHIncomingCenvatAccount': '', 'WHOutgoingCenvatAccount': '', 'StockInTransitAccount': '20101515', 'WipOffsetProfitAndLossAccount': '', 'InventoryOffsetProfitAndLossAccount': '', 'AddressType': None, 'StreetNo': None, 'Storekeeper': None, 'Shipper': None, 'ManageSerialAndBatchNumbers': 'tNO', 'GlobalLocationNumber': None, 'EnableBinLocations': 'tNO', 'BinLocCodeSeparator': '-', 'DefaultBin': None, 'DefaultBinEnforced': 'tNO', 'AutoAllocOnIssue': 'whsBinSingleChoiceOnly', 'EnableReceivingBinLocations': 'tNO', 'ReceivingBinLocationsBy': 'rblmBinLocationCodeOrder', 'PurchaseBalanceAccount': '', 'Inactive': 'tNO', 'RestrictReceiptToEmptyBinLocation': 'tYES', 'ReceiveUpToMaxQuantity': 'tNO', 'AutoAllocOnReceipt': 'aaormDefaultBin', 'ReceiveUpToMaxWeight': 'tNO', 'ReceiveUpToMethod': 'rutmMaximumQty', 'U_ShopifyInventoryIDLocal': None, 'U_ShopifyInventoryIDInternational': None}, {'Street': None, 'StockInflationOffsetAccount': '', 'ZipCode': None, 'DecreasingAccount': '', 'PurchaseAccount': '', 'EURevenuesAccount': '', 'ReturningAccount': '', 'ShippedGoodsAccount': '', 'StockInflationAdjustAccount': '', 'AllowUseTax': 'tNO', 'CostInflationAccount': '', 'ForeignExpensesAccount': '', 'EUExpensesAccount': '', 'CostInflationOffsetAccount': '', 'ExpensesClearingAccount': '', 'PurchaseReturningAccount': '', 'VATInRevenueAccount': '', 'FederalTaxID': None, 'Location': 2, 'Block': None, 'ExpenseAccount': '', 'DecreaseGLAccount': '', 'RevenuesAccount': '', 'TaxGroup': None, 'ExemptRevenuesAccount': '', 'PurchaseOffsetAccount': '', 'CostOfGoodsSold': '50101001', 'WarehouseCode': 'ZW', 'State': '', 'City': None, 'PriceDifferencesAccount': '50101001', 'VarianceAccount': '', 'Country': None, 'IncreaseGLAccount': '', 'ExchangeRateDifferencesAccount': '', 'WIPMaterialAccount': '', 'WarehouseName': 'Zamalek', 'DropShip': 'tNO', 'WIPMaterialVarianceAccount': '', 'TransfersAcc': '20101513', 'InternalKey': None, 'ForeignRevenuesAcc': '', 'BuildingFloorRoom': None, 'County': None, 'Nettable': 'tYES', 'IncreasingAcc': '', 'ExpenseOffsetingAct': '', 'GoodsClearingAcc': '', 'StockAccount': '10501310', 'BusinessPlaceID': None, 'PurchaseCreditAcc': '', 'EUPurchaseCreditAcc': '', 'ForeignPurchaseCreditAcc': '', 'SalesCreditAcc': '', 'SalesCreditEUAcc': '', 'ExemptedCredits': '', 'SalesCreditForeignAcc': '', 'NegativeInventoryAdjustmentAccount': '', 'WHShipToName': None, 'Excisable': 'tNO', 'WHIncomingCenvatAccount': '', 'WHOutgoingCenvatAccount': '', 'StockInTransitAccount': '', 'WipOffsetProfitAndLossAccount': '', 'InventoryOffsetProfitAndLossAccount': '', 'AddressType': None, 'StreetNo': None, 'Storekeeper': None, 'Shipper': None, 'ManageSerialAndBatchNumbers': 'tNO', 'GlobalLocationNumber': None, 'EnableBinLocations': 'tYES', 'BinLocCodeSeparator': '-', 'DefaultBin': 14, 'DefaultBinEnforced': 'tNO', 'AutoAllocOnIssue': 'whsBinSingleChoiceOnly', 'EnableReceivingBinLocations': 'tNO', 'ReceivingBinLocationsBy': 'rblmBinLocationCodeOrder', 'PurchaseBalanceAccount': '', 'Inactive': 'tNO', 'RestrictReceiptToEmptyBinLocation': 'tYES', 'ReceiveUpToMaxQuantity': 'tNO', 'AutoAllocOnReceipt': 'aaormDefaultBin', 'ReceiveUpToMaxWeight': 'tNO', 'ReceiveUpToMethod': 'rutmMaximumQty', 'U_ShopifyInventoryIDLocal': None, 'U_ShopifyInventoryIDInternational': None}], 'odata.nextLink': 'Warehouses?$skip=20'}, 'status': 'success'}
2025-08-05 18:06:50,755 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'Items', 'request': {'method': 'GET', 'url': 'https://10.0.0.100:50000/b1s/v1/Items', 'data': None, 'params': {'$top': 5}}, 'response': None, 'status': None}
2025-08-05 18:06:51,672 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'Items', 'request': None, 'response': {'odata.metadata': 'https://10.0.0.100:50000/b1s/v1/$metadata#Items', 'value': [{'ItemCode': 'ACC-0000001', 'ItemName': 'Ring Holder With Slit 5*5cm', 'ForeignName': None, 'ItemsGroupCode': 110, 'CustomsGroupCode': -1, 'SalesVATGroup': 'X0', 'BarCode': None, 'VatLiable': 'tYES', 'PurchaseItem': 'tYES', 'SalesItem': 'tNO', 'InventoryItem': 'tYES', 'IncomeAccount': None, 'ExemptIncomeAccount': None, 'ExpanseAccount': None, 'Mainsupplier': None, 'SupplierCatalogNo': None, 'DesiredInventory': 0.0, 'MinInventory': 50.0, 'Picture': None, 'User_Text': None, 'SerialNum': None, 'CommissionPercent': 0.0, 'CommissionSum': 0.0, 'CommissionGroup': 0, 'TreeType': 'iNotATree', 'AssetItem': 'tNO', 'DataExportCode': None, 'Manufacturer': -1, 'QuantityOnStock': 35.0, 'QuantityOrderedFromVendors': 0.0, 'QuantityOrderedByCustomers': 0.0, 'ManageSerialNumbers': 'tNO', 'ManageBatchNumbers': 'tNO', 'Valid': 'tYES', 'ValidFrom': None, 'ValidTo': None, 'ValidRemarks': None, 'Frozen': 'tNO', 'FrozenFrom': None, 'FrozenTo': None, 'FrozenRemarks': None, 'SalesUnit': None, 'SalesItemsPerUnit': 1.0, 'SalesPackagingUnit': None, 'SalesQtyPerPackUnit': 1.0, 'SalesUnitLength': None, 'SalesLengthUnit': None, 'SalesUnitWidth': None, 'SalesWidthUnit': None, 'SalesUnitHeight': None, 'SalesHeightUnit': None, 'SalesUnitVolume': 0.0, 'SalesVolumeUnit': 4, 'SalesUnitWeight': None, 'SalesWeightUnit': None, 'PurchaseUnit': None, 'PurchaseItemsPerUnit': 1.0, 'PurchasePackagingUnit': None, 'PurchaseQtyPerPackUnit': 1.0, 'PurchaseUnitLength': None, 'PurchaseLengthUnit': None, 'PurchaseUnitWidth': None, 'PurchaseWidthUnit': None, 'PurchaseUnitHeight': None, 'PurchaseHeightUnit': None, 'PurchaseUnitVolume': 0.0, 'PurchaseVolumeUnit': 4, 'PurchaseUnitWeight': None, 'PurchaseWeightUnit': None, 'PurchaseVATGroup': 'X1', 'SalesFactor1': 1.0, 'SalesFactor2': 1.0, 'SalesFactor3': 1.0, 'SalesFactor4': 1.0, 'PurchaseFactor1': 1.0, 'PurchaseFactor2': 1.0, 'PurchaseFactor3': 1.0, 'PurchaseFactor4': 1.0, 'MovingAveragePrice': 0.0, 'ForeignRevenuesAccount': None, 'ECRevenuesAccount': None, 'ForeignExpensesAccount': None, 'ECExpensesAccount': None, 'AvgStdPrice': 0.0, 'DefaultWarehouse': None, 'ShipType': None, 'GLMethod': 'glm_ItemClass', 'TaxType': 'tt_Yes', 'MaxInventory': 0.0, 'ManageStockByWarehouse': 'tYES', 'PurchaseHeightUnit1': None, 'PurchaseUnitHeight1': None, 'PurchaseLengthUnit1': None, 'PurchaseUnitLength1': None, 'PurchaseWeightUnit1': None, 'PurchaseUnitWeight1': None, 'PurchaseWidthUnit1': None, 'PurchaseUnitWidth1': None, 'SalesHeightUnit1': None, 'SalesUnitHeight1': None, 'SalesLengthUnit1': None, 'SalesUnitLength1': None, 'SalesWeightUnit1': None, 'SalesUnitWeight1': None, 'SalesWidthUnit1': None, 'SalesUnitWidth1': None, 'ForceSelectionOfSerialNumber': 'tYES', 'ManageSerialNumbersOnReleaseOnly': 'tNO', 'WTLiable': 'tNO', 'CostAccountingMethod': 'bis_MovingAverage', 'SWW': None, 'WarrantyTemplate': '', 'IndirectTax': 'tNO', 'ArTaxCode': None, 'ApTaxCode': None, 'BaseUnitName': None, 'ItemCountryOrg': None, 'IssueMethod': 'im_Backflush', 'SRIAndBatchManageMethod': 'bomm_OnEveryTransaction', 'IsPhantom': 'tNO', 'InventoryUOM': 'Piece', 'PlanningSystem': 'bop_None', 'ProcurementMethod': 'bom_Buy', 'ComponentWarehouse': 'bomcw_BOM', 'OrderIntervals': None, 'OrderMultiple': 0.0, 'LeadTime': None, 'MinOrderQuantity': 0.0, 'ItemType': 'itItems', 'ItemClass': 'itcMaterial', 'OutgoingServiceCode': -1, 'IncomingServiceCode': -1, 'ServiceGroup': -1, 'NCMCode': -1, 'MaterialType': 'mt_FinishedGoods', 'MaterialGroup': -1, 'ProductSource': '', 'Properties1': 'tNO', 'Properties2': 'tNO', 'Properties3': 'tNO', 'Properties4': 'tNO', 'Properties5': 'tNO', 'Properties6': 'tNO', 'Properties7': 'tNO', 'Properties8': 'tNO', 'Properties9': 'tNO', 'Properties10': 'tNO', 'Properties11': 'tNO', 'Properties12': 'tNO', 'Properties13': 'tNO', 'Properties14': 'tNO', 'Properties15': 'tNO', 'Properties16': 'tNO', 'Properties17': 'tNO', 'Properties18': 'tNO', 'Properties19': 'tNO', 'Properties20': 'tNO', 'Properties21': 'tNO', 'Properties22': 'tNO', 'Properties23': 'tNO', 'Properties24': 'tNO', 'Properties25': 'tNO', 'Properties26': 'tNO', 'Properties27': 'tNO', 'Properties28': 'tNO', 'Properties29': 'tNO', 'Properties30': 'tNO', 'Properties31': 'tNO', 'Properties32': 'tNO', 'Properties33': 'tNO', 'Properties34': 'tNO', 'Properties35': 'tNO', 'Properties36': 'tNO', 'Properties37': 'tNO', 'Properties38': 'tNO', 'Properties39': 'tNO', 'Properties40': 'tNO', 'Properties41': 'tNO', 'Properties42': 'tNO', 'Properties43': 'tNO', 'Properties44': 'tNO', 'Properties45': 'tNO', 'Properties46': 'tNO', 'Properties47': 'tNO', 'Properties48': 'tNO', 'Properties49': 'tNO', 'Properties50': 'tNO', 'Properties51': 'tNO', 'Properties52': 'tNO', 'Properties53': 'tNO', 'Properties54': 'tNO', 'Properties55': 'tNO', 'Properties56': 'tNO', 'Properties57': 'tNO', 'Properties58': 'tNO', 'Properties59': 'tNO', 'Properties60': 'tNO', 'Properties61': 'tNO', 'Properties62': 'tNO', 'Properties63': 'tNO', 'Properties64': 'tNO', 'AutoCreateSerialNumbersOnRelease': 'tNO', 'DNFEntry': -1, 'GTSItemSpec': None, 'GTSItemTaxCategory': None, 'FuelID': None, 'BeverageTableCode': '', 'BeverageGroupCode': '', 'BeverageCommercialBrandCode': None, 'Series': 119, 'ToleranceDays': None, 'TypeOfAdvancedRules': 'toarGeneral', 'IssuePrimarilyBy': 'ipbBinLocations', 'NoDiscounts': 'tNO', 'AssetClass': '', 'AssetGroup': '', 'InventoryNumber': '', 'Technician': None, 'Employee': None, 'Location': None, 'AssetStatus': 'New', 'CapitalizationDate': None, 'StatisticalAsset': 'tNO', 'Cession': 'tNO', 'DeactivateAfterUsefulLife': 'tNO', 'ManageByQuantity': 'tNO', 'UoMGroupEntry': 1, 'InventoryUoMEntry': 1, 'DefaultSalesUoMEntry': None, 'DefaultPurchasingUoMEntry': None, 'DepreciationGroup': None, 'AssetSerialNumber': '', 'InventoryWeight': None, 'InventoryWeightUnit': None, 'InventoryWeight1': None, 'InventoryWeightUnit1': None, 'DefaultCountingUnit': 'Piece', 'CountingItemsPerUnit': 1.0, 'DefaultCountingUoMEntry': 1, 'Excisable': 'tNO', 'ChapterID': -1, 'ScsCode': None, 'SpProdType': None, 'ProdStdCost': 0.0, 'InCostRollup': 'tYES', 'VirtualAssetItem': 'tNO', 'EnforceAssetSerialNumbers': 'tNO', 'AttachmentEntry': None, 'LinkedResource': None, 'UpdateDate': '2025-05-17', 'UpdateTime': '16:02:59', 'GSTRelevnt': 'tNO', 'SACEntry': -1, 'GSTTaxCategory': 'gtc_Regular', 'ServiceCategoryEntry': -1, 'CapitalGoodsOnHoldPercent': None, 'CapitalGoodsOnHoldLimit': None, 'AssessableValue': 0.0, 'AssVal4WTR': 0.0, 'SOIExcisable': 'se_NotExcisable', 'TNVED': None, 'ImportedItem': 'tNO', 'PricingUnit': 1, 'CreateDate': '2025-01-26', 'CreateTime': '09:33:07', 'U_MfgH': None, 'U_Collection': None, 'U_OldCode': None, 'U_ItemsCat': None, 'U_NumberofSet': None, 'U_NileCode': None, 'U_TransferProductionLinkExclude': None, 'U_SBO_CodeType': 'GS1', 'U_SBO_EGSCode': None, 'U_ShopifyColor': None, 'U_SalesChannel': None, 'U_ShopifyItemIDLocal': None, 'U_ShopifyItemIDInternational': None, 'U_ParentCommercialName': None, 'ItemPrices': [{'PriceList': 1, 'Price': 0.0, 'Currency': '', 'AdditionalPrice1': 0.0, 'AdditionalCurrency1': '', 'AdditionalPrice2': 0.0, 'AdditionalCurrency2': '', 'BasePriceList': 1, 'Factor': 1.0, 'UoMPrices': []}, {'PriceList': 2, 'Price': 0.0, 'Currency': '', 'AdditionalPrice1': 0.0, 'AdditionalCurrency1': '', 'AdditionalPrice2': 0.0, 'AdditionalCurrency2': '', 'BasePriceList': 1, 'Factor': 0.4, 'UoMPrices': []}, {'PriceList': 3, 'Price': 0.0, 'Currency': '', 'AdditionalPrice1': 0.0, 'AdditionalCurrency1': '', 'AdditionalPrice2': 0.0, 'AdditionalCurrency2': '', 'BasePriceList': 3, 'Factor': 1.0, 'UoMPrices': []}, {'PriceList': 4, 'Price': 0.0, 'Currency': '', 'AdditionalPrice1': 0.0, 'AdditionalCurrency1': '', 'AdditionalPrice2': 0.0, 'AdditionalCurrency2': '', 'BasePriceList': 4, 'Factor': 1.0, 'UoMPrices': []}, {'PriceList': 5, 'Price': 0.0, 'Currency': '', 'AdditionalPrice1': 0.0, 'AdditionalCurrency1': '', 'AdditionalPrice2': 0.0, 'AdditionalCurrency2': '', 'BasePriceList': 5, 'Factor': 1.0, 'UoMPrices': []}, {'PriceList': 6, 'Price': 0.0, 'Currency': '', 'AdditionalPrice1': 0.0, 'AdditionalCurrency1': '', 'AdditionalPrice2': 0.0, 'AdditionalCurrency2': '', 'BasePriceList': 6, 'Factor': 1.0, 'UoMPrices': []}, {'PriceList': 7, 'Price': 0.0, 'Currency': '', 'AdditionalPrice1': 0.0, 'AdditionalCurrency1': '', 'AdditionalPrice2': 0.0, 'AdditionalCurrency2': '', 'BasePriceList': 7, 'Factor': 1.0, 'UoMPrices': []}, {'PriceList': 8, 'Price': 0.0, 'Currency': '', 'AdditionalPrice1': 0.0, 'AdditionalCurrency1': '', 'AdditionalPrice2': 0.0, 'AdditionalCurrency2': '', 'BasePriceList': 8, 'Factor': 1.0, 'UoMPrices': []}, {'PriceList': 9, 'Price': 0.0, 'Currency': '', 'AdditionalPrice1': 0.0, 'AdditionalCurrency1': '', 'AdditionalPrice2': 0.0, 'AdditionalCurrency2': '', 'BasePriceList': 9, 'Factor': 1.0, 'UoMPrices': []}, {'PriceList': 10, 'Price': 0.0, 'Currency': '', 'AdditionalPrice1': 0.0, 'AdditionalCurrency1': '', 'AdditionalPrice2': 0.0, 'AdditionalCurrency2': '', 'BasePriceList': 10, 'Factor': 1.0, 'UoMPrices': []}], 'ItemWarehouseInfoCollection': [{'MinimalStock': 30.0, 'MaximalStock': 0.0, 'MinimalOrder': 0.0, 'StandardAveragePrice': 180.0, 'Locked': 'tNO', 'InventoryAccount': None, 'CostAccount': None, 'TransferAccount': None, 'RevenuesAccount': None, 'VarienceAccount': None, 'DecreasingAccount': None, 'IncreasingAccount': None, 'ReturningAccount': None, 'ExpensesAccount': None, 'EURevenuesAccount': None, 'EUExpensesAccount': None, 'ForeignRevenueAcc': None, 'ForeignExpensAcc': None, 'ExemptIncomeAcc': None, 'PriceDifferenceAcc': None, 'WarehouseCode': '5A', 'InStock': 25.0, 'Committed': 0.0, 'Ordered': 0.0, 'CountedQuantity': 0.0, 'WasCounted': 'tNO', 'UserSignature': 50, 'Counted': 0.0, 'ExpenseClearingAct': None, 'PurchaseCreditAcc': None, 'EUPurchaseCreditAcc': None, 'ForeignPurchaseCreditAcc': None, 'SalesCreditAcc': None, 'SalesCreditEUAcc': None, 'ExemptedCredits': None, 'SalesCreditForeignAcc': None, 'ExpenseOffsettingAccount': None, 'WipAccount': None, 'ExchangeRateDifferencesAcct': None, 'GoodsClearingAcct': None, 'NegativeInventoryAdjustmentAccount': None, 'CostInflationOffsetAccount': None, 'GLDecreaseAcct': None, 'GLIncreaseAcct': None, 'PAReturnAcct': None, 'PurchaseAcct': None, 'PurchaseOffsetAcct': None, 'ShippedGoodsAccount': None, 'StockInflationOffsetAccount': None, 'StockInflationAdjustAccount': None, 'VATInRevenueAccount': None, 'WipVarianceAccount': None, 'CostInflationAccount': None, 'WHIncomingCenvatAccount': None, 'WHOutgoingCenvatAccount': None, 'StockInTransitAccount': None, 'WipOffsetProfitAndLossAccount': None, 'InventoryOffsetProfitAndLossAccount': None, 'DefaultBin': None, 'DefaultBinEnforced': 'tNO', 'PurchaseBalanceAccount': None, 'ItemCode': 'ACC-0000001', 'ItemCycleCounts': []}, {'MinimalStock': 20.0, 'MaximalStock': 0.0, 'MinimalOrder': 0.0, 'StandardAveragePrice': 180.0, 'Locked': 'tNO', 'InventoryAccount': None, 'CostAccount': None, 'TransferAccount': None, 'RevenuesAccount': None, 'VarienceAccount': None, 'DecreasingAccount': None, 'IncreasingAccount': None, 'ReturningAccount': None, 'ExpensesAccount': None, 'EURevenuesAccount': None, 'EUExpensesAccount': None, 'ForeignRevenueAcc': None, 'ForeignExpensAcc': None, 'ExemptIncomeAcc': None, 'PriceDifferenceAcc': None, 'WarehouseCode': 'Arkan', 'InStock': 10.0, 'Committed': 0.0, 'Ordered': 0.0, 'CountedQuantity': 0.0, 'WasCounted': 'tNO', 'UserSignature': 50, 'Counted': 0.0, 'ExpenseClearingAct': None, 'PurchaseCreditAcc': None, 'EUPurchaseCreditAcc': None, 'ForeignPurchaseCreditAcc': None, 'SalesCreditAcc': None, 'SalesCreditEUAcc': None, 'ExemptedCredits': None, 'SalesCreditForeignAcc': None, 'ExpenseOffsettingAccount': None, 'WipAccount': None, 'ExchangeRateDifferencesAcct': None, 'GoodsClearingAcct': None, 'NegativeInventoryAdjustmentAccount': None, 'CostInflationOffsetAccount': None, 'GLDecreaseAcct': None, 'GLIncreaseAcct': None, 'PAReturnAcct': None, 'PurchaseAcct': None, 'PurchaseOffsetAcct': None, 'ShippedGoodsAccount': None, 'StockInflationOffsetAccount': None, 'StockInflationAdjustAccount': None, 'VATInRevenueAccount': None, 'WipVarianceAccount': None, 'CostInflationAccount': None, 'WHIncomingCenvatAccount': None, 'WHOutgoingCenvatAccount': None, 'StockInTransitAccount': None, 'WipOffsetProfitAndLossAccount': None, 'InventoryOffsetProfitAndLossAccount': None, 'DefaultBin': None, 'DefaultBinEnforced': 'tNO', 'PurchaseBalanceAccount': None, 'ItemCode': 'ACC-0000001', 'ItemCycleCounts': []}, {'MinimalStock': 0.0, 'MaximalStock': 0.0, 'MinimalOrder': 0.0, 'StandardAveragePrice': 0.0, 'Locked': 'tNO', 'InventoryAccount': None, 'CostAccount': None, 'TransferAccount': None, 'RevenuesAccount': None, 'VarienceAccount': None, 'DecreasingAccount': None, 'IncreasingAccount': None, 'ReturningAccount': None, 'ExpensesAccount': None, 'EURevenuesAccount': None, 'EUExpensesAccount': None, 'ForeignRevenueAcc': None, 'ForeignExpensAcc': None, 'ExemptIncomeAcc': None, 'PriceDifferenceAcc': None, 'WarehouseCode': 'DIP', 'InStock': 0.0, 'Committed': 0.0, 'Ordered': 0.0, 'CountedQuantity': 0.0, 'WasCounted': 'tNO', 'UserSignature': 50, 'Counted': 0.0, 'ExpenseClearingAct': None, 'PurchaseCreditAcc': None, 'EUPurchaseCreditAcc': None, 'ForeignPurchaseCreditAcc': None, 'SalesCreditAcc': None, 'SalesCreditEUAcc': None, 'ExemptedCredits': None, 'SalesCreditForeignAcc': None, 'ExpenseOffsettingAccount': None, 'WipAccount': None, 'ExchangeRateDifferencesAcct': None, 'GoodsClearingAcct': None, 'NegativeInventoryAdjustmentAccount': None, 'CostInflationOffsetAccount': None, 'GLDecreaseAcct': None, 'GLIncreaseAcct': None, 'PAReturnAcct': None, 'PurchaseAcct': None, 'PurchaseOffsetAcct': None, 'ShippedGoodsAccount': None, 'StockInflationOffsetAccount': None, 'StockInflationAdjustAccount': None, 'VATInRevenueAccount': None, 'WipVarianceAccount': None, 'CostInflationAccount': None, 'WHIncomingCenvatAccount': None, 'WHOutgoingCenvatAccount': None, 'StockInTransitAccount': None, 'WipOffsetProfitAndLossAccount': None, 'InventoryOffsetProfitAndLossAccount': None, 'DefaultBin': None, 'DefaultBinEnforced': 'tNO', 'PurchaseBalanceAccount': None, 'ItemCode': 'ACC-0000001', 'ItemCycleCounts': []}, {'MinimalStock': 0.0, 'MaximalStock': 0.0, 'MinimalOrder': 0.0, 'StandardAveragePrice': 180.0, 'Locked': 'tNO', 'InventoryAccount': None, 'CostAccount': None, 'TransferAccount': None, 'RevenuesAccount': None, 'VarienceAccount': None, 'DecreasingAccount': None, 'IncreasingAccount': None, 'ReturningAccount': None, 'ExpensesAccount': None, 'EURevenuesAccount': None, 'EUExpensesAccount': None, 'ForeignRevenueAcc': None, 'ForeignExpensAcc': None, 'ExemptIncomeAcc': None, 'PriceDifferenceAcc': None, 'WarehouseCode': 'INC', 'InStock': 0.0, 'Committed': 0.0, 'Ordered': 0.0, 'CountedQuantity': 0.0, 'WasCounted': 'tNO', 'UserSignature': 50, 'Counted': 0.0, 'ExpenseClearingAct': None, 'PurchaseCreditAcc': None, 'EUPurchaseCreditAcc': None, 'ForeignPurchaseCreditAcc': None, 'SalesCreditAcc': None, 'SalesCreditEUAcc': None, 'ExemptedCredits': None, 'SalesCreditForeignAcc': None, 'ExpenseOffsettingAccount': None, 'WipAccount': None, 'ExchangeRateDifferencesAcct': None, 'GoodsClearingAcct': None, 'NegativeInventoryAdjustmentAccount': None, 'CostInflationOffsetAccount': None, 'GLDecreaseAcct': None, 'GLIncreaseAcct': None, 'PAReturnAcct': None, 'PurchaseAcct': None, 'PurchaseOffsetAcct': None, 'ShippedGoodsAccount': None, 'StockInflationOffsetAccount': None, 'StockInflationAdjustAccount': None, 'VATInRevenueAccount': None, 'WipVarianceAccount': None, 'CostInflationAccount': None, 'WHIncomingCenvatAccount': None, 'WHOutgoingCenvatAccount': None, 'StockInTransitAccount': None, 'WipOffsetProfitAndLossAccount': None, 'InventoryOffsetProfitAndLossAccount': None, 'DefaultBin': None, 'DefaultBinEnforced': 'tNO', 'PurchaseBalanceAccount': None, 'ItemCode': 'ACC-0000001', 'ItemCycleCounts': []}, {'MinimalStock': 0.0, 'MaximalStock': 0.0, 'MinimalOrder': 0.0, 'StandardAveragePrice': 0.0, 'Locked': 'tNO', 'InventoryAccount': None, 'CostAccount': None, 'TransferAccount': None, 'RevenuesAccount': None, 'VarienceAccount': None, 'DecreasingAccount': None, 'IncreasingAccount': None, 'ReturningAccount': None, 'ExpensesAccount': None, 'EURevenuesAccount': None, 'EUExpensesAccount': None, 'ForeignRevenueAcc': None, 'ForeignExpensAcc': None, 'ExemptIncomeAcc': None, 'PriceDifferenceAcc': None, 'WarehouseCode': 'ONL', 'InStock': 0.0, 'Committed': 0.0, 'Ordered': 0.0, 'CountedQuantity': 0.0, 'WasCounted': 'tNO', 'UserSignature': 50, 'Counted': 0.0, 'ExpenseClearingAct': None, 'PurchaseCreditAcc': None, 'EUPurchaseCreditAcc': None, 'ForeignPurchaseCreditAcc': None, 'SalesCreditAcc': None, 'SalesCreditEUAcc': None, 'ExemptedCredits': None, 'SalesCreditForeignAcc': None, 'ExpenseOffsettingAccount': None, 'WipAccount': None, 'ExchangeRateDifferencesAcct': None, 'GoodsClearingAcct': None, 'NegativeInventoryAdjustmentAccount': None, 'CostInflationOffsetAccount': None, 'GLDecreaseAcct': None, 'GLIncreaseAcct': None, 'PAReturnAcct': None, 'PurchaseAcct': None, 'PurchaseOffsetAcct': None, 'ShippedGoodsAccount': None, 'StockInflationOffsetAccount': None, 'StockInflationAdjustAccount': None, 'VATInRevenueAccount': None, 'WipVarianceAccount': None, 'CostInflationAccount': None, 'WHIncomingCenvatAccount': None, 'WHOutgoingCenvatAccount': None, 'StockInTransitAccount': None, 'WipOffsetProfitAndLossAccount': None, 'InventoryOffsetProfitAndLossAccount': None, 'DefaultBin': None, 'DefaultBinEnforced': 'tNO', 'PurchaseBalanceAccount': None, 'ItemCode': 'ACC-0000001', 'ItemCycleCounts': []}, {'MinimalStock': 0.0, 'MaximalStock': 0.0, 'MinimalOrder': 0.0, 'StandardAveragePrice': 0.0, 'Locked': 'tNO', 'InventoryAccount': None, 'CostAccount': None, 'TransferAccount': None, 'RevenuesAccount': None, 'VarienceAccount': None, 'DecreasingAccount': None, 'IncreasingAccount': None, 'ReturningAccount': None, 'ExpensesAccount': None, 'EURevenuesAccount': None, 'EUExpensesAccount': None, 'ForeignRevenueAcc': None, 'ForeignExpensAcc': None, 'ExemptIncomeAcc': None, 'PriceDifferenceAcc': None, 'WarehouseCode': 'PHO', 'InStock': 0.0, 'Committed': 0.0, 'Ordered': 0.0, 'CountedQuantity': 0.0, 'WasCounted': 'tNO', 'UserSignature': 50, 'Counted': 0.0, 'ExpenseClearingAct': None, 'PurchaseCreditAcc': None, 'EUPurchaseCreditAcc': None, 'ForeignPurchaseCreditAcc': None, 'SalesCreditAcc': None, 'SalesCreditEUAcc': None, 'ExemptedCredits': None, 'SalesCreditForeignAcc': None, 'ExpenseOffsettingAccount': None, 'WipAccount': None, 'ExchangeRateDifferencesAcct': None, 'GoodsClearingAcct': None, 'NegativeInventoryAdjustmentAccount': None, 'CostInflationOffsetAccount': None, 'GLDecreaseAcct': None, 'GLIncreaseAcct': None, 'PAReturnAcct': None, 'PurchaseAcct': None, 'PurchaseOffsetAcct': None, 'ShippedGoodsAccount': None, 'StockInflationOffsetAccount': None, 'StockInflationAdjustAccount': None, 'VATInRevenueAccount': None, 'WipVarianceAccount': None, 'CostInflationAccount': None, 'WHIncomingCenvatAccount': None, 'WHOutgoingCenvatAccount': None, 'StockInTransitAccount': None, 'WipOffsetProfitAndLossAccount': None, 'InventoryOffsetProfitAndLossAccount': None, 'DefaultBin': None, 'DefaultBinEnforced': 'tNO', 'PurchaseBalanceAccount': None, 'ItemCode': 'ACC-0000001', 'ItemCycleCounts': []}, {'MinimalStock': 0.0, 'MaximalStock': 0.0, 'MinimalOrder': 0.0, 'StandardAveragePrice': 0.0, 'Locked': 'tNO', 'InventoryAccount': None, 'CostAccount': None, 'TransferAccount': None, 'RevenuesAccount': None, 'VarienceAccount': None, 'DecreasingAccount': None, 'IncreasingAccount': None, 'ReturningAccount': None, 'ExpensesAccount': None, 'EURevenuesAccount': None, 'EUExpensesAccount': None, 'ForeignRevenueAcc': None, 'ForeignExpensAcc': None, 'ExemptIncomeAcc': None, 'PriceDifferenceAcc': None, 'WarehouseCode': 'PHO-EX', 'InStock': 0.0, 'Committed': 0.0, 'Ordered': 0.0, 'CountedQuantity': 0.0, 'WasCounted': 'tNO', 'UserSignature': 1, 'Counted': 0.0, 'ExpenseClearingAct': None, 'PurchaseCreditAcc': None, 'EUPurchaseCreditAcc': None, 'ForeignPurchaseCreditAcc': None, 'SalesCreditAcc': None, 'SalesCreditEUAcc': None, 'ExemptedCredits': None, 'SalesCreditForeignAcc': None, 'ExpenseOffsettingAccount': None, 'WipAccount': None, 'ExchangeRateDifferencesAcct': None, 'GoodsClearingAcct': None, 'NegativeInventoryAdjustmentAccount': None, 'CostInflationOffsetAccount': None, 'GLDecreaseAcct': None, 'GLIncreaseAcct': None, 'PAReturnAcct': None, 'PurchaseAcct': None, 'PurchaseOffsetAcct': None, 'ShippedGoodsAccount': None, 'StockInflationOffsetAccount': None, 'StockInflationAdjustAccount': None, 'VATInRevenueAccount': None, 'WipVarianceAccount': None, 'CostInflationAccount': None, 'WHIncomingCenvatAccount': None, 'WHOutgoingCenvatAccount': None, 'StockInTransitAccount': None, 'WipOffsetProfitAndLossAccount': None, 'InventoryOffsetProfitAndLossAccount': None, 'DefaultBin': None, 'DefaultBinEnforced': 'tNO', 'PurchaseBalanceAccount': None, 'ItemCode': 'ACC-0000001', 'ItemCycleCounts': []}, {'MinimalStock': 0.0, 'MaximalStock': 0.0, 'MinimalOrder': 0.0, 'StandardAveragePrice': 0.0, 'Locked': 'tNO', 'InventoryAccount': None, 'CostAccount': None, 'TransferAccount': None, 'RevenuesAccount': None, 'VarienceAccount': None, 'DecreasingAccount': None, 'IncreasingAccount': None, 'ReturningAccount': None, 'ExpensesAccount': None, 'EURevenuesAccount': None, 'EUExpensesAccount': None, 'ForeignRevenueAcc': None, 'ForeignExpensAcc': None, 'ExemptIncomeAcc': None, 'PriceDifferenceAcc': None, 'WarehouseCode': 'PHO-IN', 'InStock': 0.0, 'Committed': 0.0, 'Ordered': 0.0, 'CountedQuantity': 0.0, 'WasCounted': 'tNO', 'UserSignature': 1, 'Counted': 0.0, 'ExpenseClearingAct': None, 'PurchaseCreditAcc': None, 'EUPurchaseCreditAcc': None, 'ForeignPurchaseCreditAcc': None, 'SalesCreditAcc': None, 'SalesCreditEUAcc': None, 'ExemptedCredits': None, 'SalesCreditForeignAcc': None, 'ExpenseOffsettingAccount': None, 'WipAccount': None, 'ExchangeRateDifferencesAcct': None, 'GoodsClearingAcct': None, 'NegativeInventoryAdjustmentAccount': None, 'CostInflationOffsetAccount': None, 'GLDecreaseAcct': None, 'GLIncreaseAcct': None, 'PAReturnAcct': None, 'PurchaseAcct': None, 'PurchaseOffsetAcct': None, 'ShippedGoodsAccount': None, 'StockInflationOffsetAccount': None, 'StockInflationAdjustAccount': None, 'VATInRevenueAccount': None, 'WipVarianceAccount': None, 'CostInflationAccount': None, 'WHIncomingCenvatAccount': None, 'WHOutgoingCenvatAccount': None, 'StockInTransitAccount': None, 'WipOffsetProfitAndLossAccount': None, 'InventoryOffsetProfitAndLossAccount': None, 'DefaultBin': None, 'DefaultBinEnforced': 'tNO', 'PurchaseBalanceAccount': None, 'ItemCode': 'ACC-0000001', 'ItemCycleCounts': []}, {'MinimalStock': 0.0, 'MaximalStock': 0.0, 'MinimalOrder': 0.0, 'StandardAveragePrice': 0.0, 'Locked': 'tNO', 'InventoryAccount': None, 'CostAccount': None, 'TransferAccount': None, 'RevenuesAccount': None, 'VarienceAccount': None, 'DecreasingAccount': None, 'IncreasingAccount': None, 'ReturningAccount': None, 'ExpensesAccount': None, 'EURevenuesAccount': None, 'EUExpensesAccount': None, 'ForeignRevenueAcc': None, 'ForeignExpensAcc': None, 'ExemptIncomeAcc': None, 'PriceDifferenceAcc': None, 'WarehouseCode': 'RTW', 'InStock': 0.0, 'Committed': 0.0, 'Ordered': 0.0, 'CountedQuantity': 0.0, 'WasCounted': 'tNO', 'UserSignature': 50, 'Counted': 0.0, 'ExpenseClearingAct': None, 'PurchaseCreditAcc': None, 'EUPurchaseCreditAcc': None, 'ForeignPurchaseCreditAcc': None, 'SalesCreditAcc': None, 'SalesCreditEUAcc': None, 'ExemptedCredits': None, 'SalesCreditForeignAcc': None, 'ExpenseOffsettingAccount': None, 'WipAccount': None, 'ExchangeRateDifferencesAcct': None, 'GoodsClearingAcct': None, 'NegativeInventoryAdjustmentAccount': None, 'CostInflationOffsetAccount': None, 'GLDecreaseAcct': None, 'GLIncreaseAcct': None, 'PAReturnAcct': None, 'PurchaseAcct': None, 'PurchaseOffsetAcct': None, 'ShippedGoodsAccount': None, 'StockInflationOffsetAccount': None, 'StockInflationAdjustAccount': None, 'VATInRevenueAccount': None, 'WipVarianceAccount': None, 'CostInflationAccount': None, 'WHIncomingCenvatAccount': None, 'WHOutgoingCenvatAccount': None, 'StockInTransitAccount': None, 'WipOffsetProfitAndLossAccount': None, 'InventoryOffsetProfitAndLossAccount': None, 'DefaultBin': None, 'DefaultBinEnforced': 'tNO', 'PurchaseBalanceAccount': None, 'ItemCode': 'ACC-0000001', 'ItemCycleCounts': []}, {'MinimalStock': 0.0, 'MaximalStock': 0.0, 'MinimalOrder': 0.0, 'StandardAveragePrice': 0.0, 'Locked': 'tNO', 'InventoryAccount': None, 'CostAccount': None, 'TransferAccount': None, 'RevenuesAccount': None, 'VarienceAccount': None, 'DecreasingAccount': None, 'IncreasingAccount': None, 'ReturningAccount': None, 'ExpensesAccount': None, 'EURevenuesAccount': None, 'EUExpensesAccount': None, 'ForeignRevenueAcc': None, 'ForeignExpensAcc': None, 'ExemptIncomeAcc': None, 'PriceDifferenceAcc': None, 'WarehouseCode': 'RTWH', 'InStock': 0.0, 'Committed': 0.0, 'Ordered': 0.0, 'CountedQuantity': 0.0, 'WasCounted': 'tNO', 'UserSignature': 1, 'Counted': 0.0, 'ExpenseClearingAct': None, 'PurchaseCreditAcc': None, 'EUPurchaseCreditAcc': None, 'ForeignPurchaseCreditAcc': None, 'SalesCreditAcc': None, 'SalesCreditEUAcc': None, 'ExemptedCredits': None, 'SalesCreditForeignAcc': None, 'ExpenseOffsettingAccount': None, 'WipAccount': None, 'ExchangeRateDifferencesAcct': None, 'GoodsClearingAcct': None, 'NegativeInventoryAdjustmentAccount': None, 'CostInflationOffsetAccount': None, 'GLDecreaseAcct': None, 'GLIncreaseAcct': None, 'PAReturnAcct': None, 'PurchaseAcct': None, 'PurchaseOffsetAcct': None, 'ShippedGoodsAccount': None, 'StockInflationOffsetAccount': None, 'StockInflationAdjustAccount': None, 'VATInRevenueAccount': None, 'WipVarianceAccount': None, 'CostInflationAccount': None, 'WHIncomingCenvatAccount': None, 'WHOutgoingCenvatAccount': None, 'StockInTransitAccount': None, 'WipOffsetProfitAndLossAccount': None, 'InventoryOffsetProfitAndLossAccount': None, 'DefaultBin': None, 'DefaultBinEnforced': 'tNO', 'PurchaseBalanceAccount': None, 'ItemCode': 'ACC-0000001', 'ItemCycleCounts': []}, {'MinimalStock': 0.0, 'MaximalStock': 0.0, 'MinimalOrder': 0.0, 'StandardAveragePrice': 0.0, 'Locked': 'tNO', 'InventoryAccount': None, 'CostAccount': None, 'TransferAccount': None, 'RevenuesAccount': None, 'VarienceAccount': None, 'DecreasingAccount': None, 'IncreasingAccount': None, 'ReturningAccount': None, 'ExpensesAccount': None, 'EURevenuesAccount': None, 'EUExpensesAccount': None, 'ForeignRevenueAcc': None, 'ForeignExpensAcc': None, 'ExemptIncomeAcc': None, 'PriceDifferenceAcc': None, 'WarehouseCode': 'SW', 'InStock': 0.0, 'Committed': 0.0, 'Ordered': 0.0, 'CountedQuantity': 0.0, 'WasCounted': 'tNO', 'UserSignature': 50, 'Counted': 0.0, 'ExpenseClearingAct': None, 'PurchaseCreditAcc': None, 'EUPurchaseCreditAcc': None, 'ForeignPurchaseCreditAcc': None, 'SalesCreditAcc': None, 'SalesCreditEUAcc': None, 'ExemptedCredits': None, 'SalesCreditForeignAcc': None, 'ExpenseOffsettingAccount': None, 'WipAccount': None, 'ExchangeRateDifferencesAcct': None, 'GoodsClearingAcct': None, 'NegativeInventoryAdjustmentAccount': None, 'CostInflationOffsetAccount': None, 'GLDecreaseAcct': None, 'GLIncreaseAcct': None, 'PAReturnAcct': None, 'PurchaseAcct': None, 'PurchaseOffsetAcct': None, 'ShippedGoodsAccount': None, 'StockInflationOffsetAccount': None, 'StockInflationAdjustAccount': None, 'VATInRevenueAccount': None, 'WipVarianceAccount': None, 'CostInflationAccount': None, 'WHIncomingCenvatAccount': None, 'WHOutgoingCenvatAccount': None, 'StockInTransitAccount': None, 'WipOffsetProfitAndLossAccount': None, 'InventoryOffsetProfitAndLossAccount': None, 'DefaultBin': None, 'DefaultBinEnforced': 'tNO', 'PurchaseBalanceAccount': None, 'ItemCode': 'ACC-0000001', 'ItemCycleCounts': []}, {'MinimalStock': 0.0, 'MaximalStock': 0.0, 'MinimalOrder': 0.0, 'StandardAveragePrice': 0.0, 'Locked': 'tNO', 'InventoryAccount': None, 'CostAccount': None, 'TransferAccount': None, 'RevenuesAccount': None, 'VarienceAccount': None, 'DecreasingAccount': None, 'IncreasingAccount': None, 'ReturningAccount': None, 'ExpensesAccount': None, 'EURevenuesAccount': None, 'EUExpensesAccount': None, 'ForeignRevenueAcc': None, 'ForeignExpensAcc': None, 'ExemptIncomeAcc': None, 'PriceDifferenceAcc': None, 'WarehouseCode': 'WLS', 'InStock': 0.0, 'Committed': 0.0, 'Ordered': 0.0, 'CountedQuantity': 0.0, 'WasCounted': 'tNO', 'UserSignature': 50, 'Counted': 0.0, 'ExpenseClearingAct': None, 'PurchaseCreditAcc': None, 'EUPurchaseCreditAcc': None, 'ForeignPurchaseCreditAcc': None, 'SalesCreditAcc': None, 'SalesCreditEUAcc': None, 'ExemptedCredits': None, 'SalesCreditForeignAcc': None, 'ExpenseOffsettingAccount': None, 'WipAccount': None, 'ExchangeRateDifferencesAcct': None, 'GoodsClearingAcct': None, 'NegativeInventoryAdjustmentAccount': None, 'CostInflationOffsetAccount': None, 'GLDecreaseAcct': None, 'GLIncreaseAcct': None, 'PAReturnAcct': None, 'PurchaseAcct': None, 'PurchaseOffsetAcct': None, 'ShippedGoodsAccount': None, 'StockInflationOffsetAccount': None, 'StockInflationAdjustAccount': None, 'VATInRevenueAccount': None, 'WipVarianceAccount': None, 'CostInflationAccount': None, 'WHIncomingCenvatAccount': None, 'WHOutgoingCenvatAccount': None, 'StockInTransitAccount': None, 'WipOffsetProfitAndLossAccount': None, 'InventoryOffsetProfitAndLossAccount': None, 'DefaultBin': None, 'DefaultBinEnforced': 'tNO', 'PurchaseBalanceAccount': None, 'ItemCode': 'ACC-0000001', 'ItemCycleCounts': []}, {'MinimalStock': 0.0, 'MaximalStock': 0.0, 'MinimalOrder': 0.0, 'StandardAveragePrice': 0.0, 'Locked': 'tNO', 'InventoryAccount': None, 'CostAccount': None, 'TransferAccount': None, 'RevenuesAccount': None, 'VarienceAccount': None, 'DecreasingAccount': None, 'IncreasingAccount': None, 'ReturningAccount': None, 'ExpensesAccount': None, 'EURevenuesAccount': None, 'EUExpensesAccount': None, 'ForeignRevenueAcc': None, 'ForeignExpensAcc': None, 'ExemptIncomeAcc': None, 'PriceDifferenceAcc': None, 'WarehouseCode': 'WW', 'InStock': 0.0, 'Committed': 0.0, 'Ordered': 0.0, 'CountedQuantity': 0.0, 'WasCounted': 'tNO', 'UserSignature': 50, 'Counted': 0.0, 'ExpenseClearingAct': None, 'PurchaseCreditAcc': None, 'EUPurchaseCreditAcc': None, 'ForeignPurchaseCreditAcc': None, 'SalesCreditAcc': None, 'SalesCreditEUAcc': None, 'ExemptedCredits': None, 'SalesCreditForeignAcc': None, 'ExpenseOffsettingAccount': None, 'WipAccount': None, 'ExchangeRateDifferencesAcct': None, 'GoodsClearingAcct': None, 'NegativeInventoryAdjustmentAccount': None, 'CostInflationOffsetAccount': None, 'GLDecreaseAcct': None, 'GLIncreaseAcct': None, 'PAReturnAcct': None, 'PurchaseAcct': None, 'PurchaseOffsetAcct': None, 'ShippedGoodsAccount': None, 'StockInflationOffsetAccount': None, 'StockInflationAdjustAccount': None, 'VATInRevenueAccount': None, 'WipVarianceAccount': None, 'CostInflationAccount': None, 'WHIncomingCenvatAccount': None, 'WHOutgoingCenvatAccount': None, 'StockInTransitAccount': None, 'WipOffsetProfitAndLossAccount': None, 'InventoryOffsetProfitAndLossAccount': None, 'DefaultBin': None, 'DefaultBinEnforced': 'tNO', 'PurchaseBalanceAccount': None, 'ItemCode': 'ACC-0000001', 'ItemCycleCounts': []}, {'MinimalStock': 0.0, 'MaximalStock': 0.0, 'MinimalOrder': 0.0, 'StandardAveragePrice': 0.0, 'Locked': 'tNO', 'InventoryAccount': None, 'CostAccount': None, 'TransferAccount': None, 'RevenuesAccount': None, 'VarienceAccount': None, 'DecreasingAccount': None, 'IncreasingAccount': None, 'ReturningAccount': None, 'ExpensesAccount': None, 'EURevenuesAccount': None, 'EUExpensesAccount': None, 'ForeignRevenueAcc': None, 'ForeignExpensAcc': None, 'ExemptIncomeAcc': None, 'PriceDifferenceAcc': None, 'WarehouseCode': 'WW-CON', 'InStock': 0.0, 'Committed': 0.0, 'Ordered': 0.0, 'CountedQuantity': 0.0, 'WasCounted': 'tNO', 'UserSignature': 50, 'Counted': 0.0, 'ExpenseClearingAct': None, 'PurchaseCreditAcc': None, 'EUPurchaseCreditAcc': None, 'ForeignPurchaseCreditAcc': None, 'SalesCreditAcc': None, 'SalesCreditEUAcc': None, 'ExemptedCredits': None, 'SalesCreditForeignAcc': None, 'ExpenseOffsettingAccount': None, 'WipAccount': None, 'ExchangeRateDifferencesAcct': None, 'GoodsClearingAcct': None, 'NegativeInventoryAdjustmentAccount': None, 'CostInflationOffsetAccount': None, 'GLDecreaseAcct': None, 'GLIncreaseAcct': None, 'PAReturnAcct': None, 'PurchaseAcct': None, 'PurchaseOffsetAcct': None, 'ShippedGoodsAccount': None, 'StockInflationOffsetAccount': None, 'StockInflationAdjustAccount': None, 'VATInRevenueAccount': None, 'WipVarianceAccount': None, 'CostInflationAccount': None, 'WHIncomingCenvatAccount': None, 'WHOutgoingCenvatAccount': None, 'StockInTransitAccount': None, 'WipOffsetProfitAndLossAccount': None, 'InventoryOffsetProfitAndLossAccount': None, 'DefaultBin': None, 'DefaultBinEnforced': 'tNO', 'PurchaseBalanceAccount': None, 'ItemCode': 'ACC-0000001', 'ItemCycleCounts': []}, {'MinimalStock': 0.0, 'MaximalStock': 0.0, 'MinimalOrder': 0.0, 'StandardAveragePrice': 0.0, 'Locked': 'tNO', 'InventoryAccount': None, 'CostAccount': None, 'TransferAccount': None, 'RevenuesAccount': None, 'VarienceAccount': None, 'DecreasingAccount': None, 'IncreasingAccount': None, 'ReturningAccount': None, 'ExpensesAccount': None, 'EURevenuesAccount': None, 'EUExpensesAccount': None, 'ForeignRevenueAcc': None, 'ForeignExpensAcc': None, 'ExemptIncomeAcc': None, 'PriceDifferenceAcc': None, 'WarehouseCode': 'WW-DAM', 'InStock': 0.0, 'Committed': 0.0, 'Ordered': 0.0, 'CountedQuantity': 0.0, 'WasCounted': 'tNO', 'UserSignature': 50, 'Counted': 0.0, 'ExpenseClearingAct': None, 'PurchaseCreditAcc': None, 'EUPurchaseCreditAcc': None, 'ForeignPurchaseCreditAcc': None, 'SalesCreditAcc': None, 'SalesCreditEUAcc': None, 'ExemptedCredits': None, 'SalesCreditForeignAcc': None, 'ExpenseOffsettingAccount': None, 'WipAccount': None, 'ExchangeRateDifferencesAcct': None, 'GoodsClearingAcct': None, 'NegativeInventoryAdjustmentAccount': None, 'CostInflationOffsetAccount': None, 'GLDecreaseAcct': None, 'GLIncreaseAcct': None, 'PAReturnAcct': None, 'PurchaseAcct': None, 'PurchaseOffsetAcct': None, 'ShippedGoodsAccount': None, 'StockInflationOffsetAccount': None, 'StockInflationAdjustAccount': None, 'VATInRevenueAccount': None, 'WipVarianceAccount': None, 'CostInflationAccount': None, 'WHIncomingCenvatAccount': None, 'WHOutgoingCenvatAccount': None, 'StockInTransitAccount': None, 'WipOffsetProfitAndLossAccount': None, 'InventoryOffsetProfitAndLossAccount': None, 'DefaultBin': None, 'DefaultBinEnforced': 'tNO', 'PurchaseBalanceAccount': None, 'ItemCode': 'ACC-0000001', 'ItemCycleCounts': []}, {'MinimalStock': 0.0, 'MaximalStock': 0.0, 'MinimalOrder': 0.0, 'StandardAveragePrice': 0.0, 'Locked': 'tNO', 'InventoryAccount': None, 'CostAccount': None, 'TransferAccount': None, 'RevenuesAccount': None, 'VarienceAccount': None, 'DecreasingAccount': None, 'IncreasingAccount': None, 'ReturningAccount': None, 'ExpensesAccount': None, 'EURevenuesAccount': None, 'EUExpensesAccount': None, 'ForeignRevenueAcc': None, 'ForeignExpensAcc': None, 'ExemptIncomeAcc': None, 'PriceDifferenceAcc': None, 'WarehouseCode': 'WW-REP', 'InStock': 0.0, 'Committed': 0.0, 'Ordered': 0.0, 'CountedQuantity': 0.0, 'WasCounted': 'tNO', 'UserSignature': 50, 'Counted': 0.0, 'ExpenseClearingAct': None, 'PurchaseCreditAcc': None, 'EUPurchaseCreditAcc': None, 'ForeignPurchaseCreditAcc': None, 'SalesCreditAcc': None, 'SalesCreditEUAcc': None, 'ExemptedCredits': None, 'SalesCreditForeignAcc': None, 'ExpenseOffsettingAccount': None, 'WipAccount': None, 'ExchangeRateDifferencesAcct': None, 'GoodsClearingAcct': None, 'NegativeInventoryAdjustmentAccount': None, 'CostInflationOffsetAccount': None, 'GLDecreaseAcct': None, 'GLIncreaseAcct': None, 'PAReturnAcct': None, 'PurchaseAcct': None, 'PurchaseOffsetAcct': None, 'ShippedGoodsAccount': None, 'StockInflationOffsetAccount': None, 'StockInflationAdjustAccount': None, 'VATInRevenueAccount': None, 'WipVarianceAccount': None, 'CostInflationAccount': None, 'WHIncomingCenvatAccount': None, 'WHOutgoingCenvatAccount': None, 'StockInTransitAccount': None, 'WipOffsetProfitAndLossAccount': None, 'InventoryOffsetProfitAndLossAccount': None, 'DefaultBin': None, 'DefaultBinEnforced': 'tNO', 'PurchaseBalanceAccount': None, 'ItemCode': 'ACC-0000001', 'ItemCycleCounts': []}, {'MinimalStock': 0.0, 'MaximalStock': 0.0, 'MinimalOrder': 0.0, 'StandardAveragePrice': 0.0, 'Locked': 'tNO', 'InventoryAccount': None, 'CostAccount': None, 'TransferAccount': None, 'RevenuesAccount': None, 'VarienceAccount': None, 'DecreasingAccount': None, 'IncreasingAccount': None, 'ReturningAccount': None, 'ExpensesAccount': None, 'EURevenuesAccount': None, 'EUExpensesAccount': None, 'ForeignRevenueAcc': None, 'ForeignExpensAcc': None, 'ExemptIncomeAcc': None, 'PriceDifferenceAcc': None, 'WarehouseCode': 'WW-SAM', 'InStock': 0.0, 'Committed': 0.0, 'Ordered': 0.0, 'CountedQuantity': 0.0, 'WasCounted': 'tNO', 'UserSignature': 50, 'Counted': 0.0, 'ExpenseClearingAct': None, 'PurchaseCreditAcc': None, 'EUPurchaseCreditAcc': None, 'ForeignPurchaseCreditAcc': None, 'SalesCreditAcc': None, 'SalesCreditEUAcc': None, 'ExemptedCredits': None, 'SalesCreditForeignAcc': None, 'ExpenseOffsettingAccount': None, 'WipAccount': None, 'ExchangeRateDifferencesAcct': None, 'GoodsClearingAcct': None, 'NegativeInventoryAdjustmentAccount': None, 'CostInflationOffsetAccount': None, 'GLDecreaseAcct': None, 'GLIncreaseAcct': None, 'PAReturnAcct': None, 'PurchaseAcct': None, 'PurchaseOffsetAcct': None, 'ShippedGoodsAccount': None, 'StockInflationOffsetAccount': None, 'StockInflationAdjustAccount': None, 'VATInRevenueAccount': None, 'WipVarianceAccount': None, 'CostInflationAccount': None, 'WHIncomingCenvatAccount': None, 'WHOutgoingCenvatAccount': None, 'StockInTransitAccount': None, 'WipOffsetProfitAndLossAccount': None, 'InventoryOffsetProfitAndLossAccount': None, 'DefaultBin': None, 'DefaultBinEnforced': 'tNO', 'PurchaseBalanceAccount': None, 'ItemCode': 'ACC-0000001', 'ItemCycleCounts': []}, {'MinimalStock': 0.0, 'MaximalStock': 0.0, 'MinimalOrder': 0.0, 'StandardAveragePrice': 0.0, 'Locked': 'tNO', 'InventoryAccount': None, 'CostAccount': None, 'TransferAccount': None, 'RevenuesAccount': None, 'VarienceAccount': None, 'DecreasingAccount': None, 'IncreasingAccount': None, 'ReturningAccount': None, 'ExpensesAccount': None, 'EURevenuesAccount': None, 'EUExpensesAccount': None, 'ForeignRevenueAcc': None, 'ForeignExpensAcc': None, 'ExemptIncomeAcc': None, 'PriceDifferenceAcc': None, 'WarehouseCode': 'WW-WIP', 'InStock': 0.0, 'Committed': 0.0, 'Ordered': 0.0, 'CountedQuantity': 0.0, 'WasCounted': 'tNO', 'UserSignature': 50, 'Counted': 0.0, 'ExpenseClearingAct': None, 'PurchaseCreditAcc': None, 'EUPurchaseCreditAcc': None, 'ForeignPurchaseCreditAcc': None, 'SalesCreditAcc': None, 'SalesCreditEUAcc': None, 'ExemptedCredits': None, 'SalesCreditForeignAcc': None, 'ExpenseOffsettingAccount': None, 'WipAccount': None, 'ExchangeRateDifferencesAcct': None, 'GoodsClearingAcct': None, 'NegativeInventoryAdjustmentAccount': None, 'CostInflationOffsetAccount': None, 'GLDecreaseAcct': None, 'GLIncreaseAcct': None, 'PAReturnAcct': None, 'PurchaseAcct': None, 'PurchaseOffsetAcct': None, 'ShippedGoodsAccount': None, 'StockInflationOffsetAccount': None, 'StockInflationAdjustAccount': None, 'VATInRevenueAccount': None, 'WipVarianceAccount': None, 'CostInflationAccount': None, 'WHIncomingCenvatAccount': None, 'WHOutgoingCenvatAccount': None, 'StockInTransitAccount': None, 'WipOffsetProfitAndLossAccount': None, 'InventoryOffsetProfitAndLossAccount': None, 'DefaultBin': None, 'DefaultBinEnforced': 'tNO', 'PurchaseBalanceAccount': None, 'ItemCode': 'ACC-0000001', 'ItemCycleCounts': []}, {'MinimalStock': 0.0, 'MaximalStock': 0.0, 'MinimalOrder': 0.0, 'StandardAveragePrice': 0.0, 'Locked': 'tNO', 'InventoryAccount': None, 'CostAccount': None, 'TransferAccount': None, 'RevenuesAccount': None, 'VarienceAccount': None, 'DecreasingAccount': None, 'IncreasingAccount': None, 'ReturningAccount': None, 'ExpensesAccount': None, 'EURevenuesAccount': None, 'EUExpensesAccount': None, 'ForeignRevenueAcc': None, 'ForeignExpensAcc': None, 'ExemptIncomeAcc': None, 'PriceDifferenceAcc': None, 'WarehouseCode': 'ZW', 'InStock': 0.0, 'Committed': 0.0, 'Ordered': 0.0, 'CountedQuantity': 0.0, 'WasCounted': 'tNO', 'UserSignature': 50, 'Counted': 0.0, 'ExpenseClearingAct': None, 'PurchaseCreditAcc': None, 'EUPurchaseCreditAcc': None, 'ForeignPurchaseCreditAcc': None, 'SalesCreditAcc': None, 'SalesCreditEUAcc': None, 'ExemptedCredits': None, 'SalesCreditForeignAcc': None, 'ExpenseOffsettingAccount': None, 'WipAccount': None, 'ExchangeRateDifferencesAcct': None, 'GoodsClearingAcct': None, 'NegativeInventoryAdjustmentAccount': None, 'CostInflationOffsetAccount': None, 'GLDecreaseAcct': None, 'GLIncreaseAcct': None, 'PAReturnAcct': None, 'PurchaseAcct': None, 'PurchaseOffsetAcct': None, 'ShippedGoodsAccount': None, 'StockInflationOffsetAccount': None, 'StockInflationAdjustAccount': None, 'VATInRevenueAccount': None, 'WipVarianceAccount': None, 'CostInflationAccount': None, 'WHIncomingCenvatAccount': None, 'WHOutgoingCenvatAccount': None, 'StockInTransitAccount': None, 'WipOffsetProfitAndLossAccount': None, 'InventoryOffsetProfitAndLossAccount': None, 'DefaultBin': None, 'DefaultBinEnforced': 'tNO', 'PurchaseBalanceAccount': None, 'ItemCode': 'ACC-0000001', 'ItemCycleCounts': []}], 'ItemPreferredVendors': [], 'ItemLocalizationInfos': [], 'ItemProjects': [], 'ItemDistributionRules': [], 'ItemAttributeGroups': [], 'ItemDepreciationParameters': [], 'ItemPeriodControls': [], 'ItemUnitOfMeasurementCollection': [{'UoMType': 'iutInventory', 'UoMEntry': 1, 'DefaultBarcode': None, 'DefaultPackage': None, 'Length1': 0.0, 'Length1Unit': None, 'Length2': 0.0, 'Length2Unit': None, 'Width1': 0.0, 'Width1Unit': None, 'Width2': 0.0, 'Width2Unit': None, 'Height1': 0.0, 'Height1Unit': None, 'Height2': 0.0, 'Height2Unit': None, 'Volume': 0.0, 'VolumeUnit': None, 'Weight1': 0.0, 'Weight1Unit': None, 'Weight2': 0.0, 'Weight2Unit': None, 'ItemUoMPackageCollection': []}, {'UoMType': 'iutPurchasing', 'UoMEntry': 1, 'DefaultBarcode': None, 'DefaultPackage': None, 'Length1': 0.0, 'Length1Unit': None, 'Length2': 0.0, 'Length2Unit': None, 'Width1': 0.0, 'Width1Unit': None, 'Width2': 0.0, 'Width2Unit': None, 'Height1': 0.0, 'Height1Unit': None, 'Height2': 0.0, 'Height2Unit': None, 'Volume': 0.0, 'VolumeUnit': 2, 'Weight1': 0.0, 'Weight1Unit': None, 'Weight2': 0.0, 'Weight2Unit': None, 'ItemUoMPackageCollection': []}, {'UoMType': 'iutPurchasing', 'UoMEntry': 8, 'DefaultBarcode': None, 'DefaultPackage': None, 'Length1': 0.0, 'Length1Unit': None, 'Length2': 0.0, 'Length2Unit': None, 'Width1': 0.0, 'Width1Unit': None, 'Width2': 0.0, 'Width2Unit': None, 'Height1': 0.0, 'Height1Unit': None, 'Height2': 0.0, 'Height2Unit': None, 'Volume': 0.0, 'VolumeUnit': 4, 'Weight1': 0.0, 'Weight1Unit': None, 'Weight2': 0.0, 'Weight2Unit': None, 'ItemUoMPackageCollection': []}, {'UoMType': 'iutSales', 'UoMEntry': 1, 'DefaultBarcode': None, 'DefaultPackage': None, 'Length1': 0.0, 'Length1Unit': None, 'Length2': 0.0, 'Length2Unit': None, 'Width1': 0.0, 'Width1Unit': None, 'Width2': 0.0, 'Width2Unit': None, 'Height1': 0.0, 'Height1Unit': None, 'Height2': 0.0, 'Height2Unit': None, 'Volume': 0.0, 'VolumeUnit': 2, 'Weight1': 0.0, 'Weight1Unit': None, 'Weight2': 0.0, 'Weight2Unit': None, 'ItemUoMPackageCollection': []}, {'UoMType': 'iutSales', 'UoMEntry': 8, 'DefaultBarcode': None, 'DefaultPackage': None, 'Length1': 0.0, 'Length1Unit': None, 'Length2': 0.0, 'Length2Unit': None, 'Width1': 0.0, 'Width1Unit': None, 'Width2': 0.0, 'Width2Unit': None, 'Height1': 0.0, 'Height1Unit': None, 'Height2': 0.0, 'Height2Unit': None, 'Volume': 0.0, 'VolumeUnit': 4, 'Weight1': 0.0, 'Weight1Unit': None, 'Weight2': 0.0, 'Weight2Unit': None, 'ItemUoMPackageCollection': []}], 'ItemBarCodeCollection': [], 'ItemIntrastatExtension': {'ItemCode': 'ACC-0000001', 'CommodityCode': None, 'SupplementaryUnit': None, 'FactorOfSupplementaryUnit': 0.0, 'ImportRegionState': 0, 'ExportRegionState': 0, 'ImportNatureOfTransaction': None, 'ExportNatureOfTransaction': None, 'ImportStatisticalProcedure': None, 'ExportStatisticalProcedure': None, 'CountryOfOrigin': None, 'ServiceCode': None, 'Type': 'dDocument_Items', 'ServiceSupplyMethod': 'ssmImmediate', 'ServicePaymentMethod': 'spmOther', 'ImportRegionCountry': 'GB', 'ExportRegionCountry': 'GB', 'UseWeightInCalculation': 'tYES', 'IntrastatRelevant': 'tNO', 'StatisticalCode': None}}, {'ItemCode': 'ACC-0000002', 'ItemName': 'Square With 2 Slits 10*10cm', 'ForeignName': None, 'ItemsGroupCode': 110, 'CustomsGroupCode': -1, 'SalesVATGroup': 'X0', 'BarCode': None, 'VatLiable': 'tYES', 'PurchaseItem': 'tYES', 'SalesItem': 'tNO', 'InventoryItem': 'tYES', 'IncomeAccount': None, 'ExemptIncomeAccount': None, 'ExpanseAccount': None, 'Mainsupplier': None, 'SupplierCatalogNo': None, 'DesiredInventory': 0.0, 'MinInventory': 0.0, 'Picture': None, 'User_Text': None, 'SerialNum': None, 'CommissionPercent': 0.0, 'CommissionSum': 0.0, 'CommissionGroup': 0, 'TreeType': 'iNotATree', 'AssetItem': 'tNO', 'DataExportCode': None, 'Manufacturer': -1, 'QuantityOnStock': 10.0, 'QuantityOrderedFromVendors': 0.0, 'QuantityOrderedByCustomers': 0.0, 'ManageSerialNumbers': 'tNO', 'ManageBatchNumbers': 'tNO', 'Valid': 'tYES', 'ValidFrom': None, 'ValidTo': None, 'ValidRemarks': None, 'Frozen': 'tNO', 'FrozenFrom': None, 'FrozenTo': None, 'FrozenRemarks': None, 'SalesUnit': None, 'SalesItemsPerUnit': 1.0, 'SalesPackagingUnit': None, 'SalesQtyPerPackUnit': 1.0, 'SalesUnitLength': None, 'SalesLengthUnit': None, 'SalesUnitWidth': None, 'SalesWidthUnit': None, 'SalesUnitHeight': None, 'SalesHeightUnit': None, 'SalesUnitVolume': 0.0, 'SalesVolumeUnit': 4, 'SalesUnitWeight': None, 'SalesWeightUnit': None, 'PurchaseUnit': None, 'PurchaseItemsPerUnit': 1.0, 'PurchasePackagingUnit': None, 'PurchaseQtyPerPackUnit': 1.0, 'PurchaseUnitLength': None, 'PurchaseLengthUnit': None, 'PurchaseUnitWidth': None, 'PurchaseWidthUnit': None, 'PurchaseUnitHeight': None, 'PurchaseHeightUnit': None, 'PurchaseUnitVolume': 0.0, 'PurchaseVolumeUnit': 4, 'PurchaseUnitWeight': None, 'PurchaseWeightUnit': None, 'PurchaseVATGroup': 'X1', 'SalesFactor1': 1.0, 'SalesFactor2': 1.0, 'SalesFactor3': 1.0, 'SalesFactor4': 1.0, 'PurchaseFactor1': 1.0, 'PurchaseFactor2': 1.0, 'PurchaseFactor3': 1.0, 'PurchaseFactor4': 1.0, 'MovingAveragePrice': 0.0, 'ForeignRevenuesAccount': None, 'ECRevenuesAccount': None, 'ForeignExpensesAccount': None, 'ECExpensesAccount': None, 'AvgStdPrice': 0.0, 'DefaultWarehouse': None, 'ShipType': None, 'GLMethod': 'glm_ItemClass', 'TaxType': 'tt_Yes', 'MaxInventory': 0.0, 'ManageStockByWarehouse': 'tNO', 'PurchaseHeightUnit1': None, 'PurchaseUnitHeight1': None, 'PurchaseLengthUnit1': None, 'PurchaseUnitLength1': None, 'PurchaseWeightUnit1': None, 'PurchaseUnitWeight1': None, 'PurchaseWidthUnit1': None, 'PurchaseUnitWidth1': None, 'SalesHeightUnit1': None, 'SalesUnitHeight1': None, 'SalesLengthUnit1': None, 'SalesUnitLength1': None, 'SalesWeightUnit1': None, 'SalesUnitWeight1': None, 'SalesWidthUnit1': None, 'SalesUnitWidth1': None, 'ForceSelectionOfSerialNumber': 'tYES', 'ManageSerialNumbersOnReleaseOnly': 'tNO', 'WTLiable': 'tNO', 'CostAccountingMethod': 'bis_MovingAverage', 'SWW': None, 'WarrantyTemplate': '', 'IndirectTax': 'tNO', 'ArTaxCode': None, 'ApTaxCode': None, 'BaseUnitName': None, 'ItemCountryOrg': None, 'IssueMethod': 'im_Backflush', 'SRIAndBatchManageMethod': 'bomm_OnEveryTransaction', 'IsPhantom': 'tNO', 'InventoryUOM': 'Piece', 'PlanningSystem': 'bop_None', 'ProcurementMethod': 'bom_Buy', 'ComponentWarehouse': 'bomcw_BOM', 'OrderIntervals': None, 'OrderMultiple': 0.0, 'LeadTime': None, 'MinOrderQuantity': 0.0, 'ItemType': 'itItems', 'ItemClass': 'itcMaterial', 'OutgoingServiceCode': -1, 'IncomingServiceCode': -1, 'ServiceGroup': -1, 'NCMCode': -1, 'MaterialType': 'mt_FinishedGoods', 'MaterialGroup': -1, 'ProductSource': '', 'Properties1': 'tNO', 'Properties2': 'tNO', 'Properties3': 'tNO', 'Properties4': 'tNO', 'Properties5': 'tNO', 'Properties6': 'tNO', 'Properties7': 'tNO', 'Properties8': 'tNO', 'Properties9': 'tNO', 'Properties10': 'tNO', 'Properties11': 'tNO', 'Properties12': 'tNO', 'Properties13': 'tNO', 'Properties14': 'tNO', 'Properties15': 'tNO', 'Properties16': 'tNO', 'Properties17': 'tNO', 'Properties18': 'tNO', 'Properties19': 'tNO', 'Properties20': 'tNO', 'Properties21': 'tNO', 'Properties22': 'tNO', 'Properties23': 'tNO', 'Properties24': 'tNO', 'Properties25': 'tNO', 'Properties26': 'tNO', 'Properties27': 'tNO', 'Properties28': 'tNO', 'Properties29': 'tNO', 'Properties30': 'tNO', 'Properties31': 'tNO', 'Properties32': 'tNO', 'Properties33': 'tNO', 'Properties34': 'tNO', 'Properties35': 'tNO', 'Properties36': 'tNO', 'Properties37': 'tNO', 'Properties38': 'tNO', 'Properties39': 'tNO', 'Properties40': 'tNO', 'Properties41': 'tNO', 'Properties42': 'tNO', 'Properties43': 'tNO', 'Properties44': 'tNO', 'Properties45': 'tNO', 'Properties46': 'tNO', 'Properties47': 'tNO', 'Properties48': 'tNO', 'Properties49': 'tNO', 'Properties50': 'tNO', 'Properties51': 'tNO', 'Properties52': 'tNO', 'Properties53': 'tNO', 'Properties54': 'tNO', 'Properties55': 'tNO', 'Properties56': 'tNO', 'Properties57': 'tNO', 'Properties58': 'tNO', 'Properties59': 'tNO', 'Properties60': 'tNO', 'Properties61': 'tNO', 'Properties62': 'tNO', 'Properties63': 'tNO', 'Properties64': 'tNO', 'AutoCreateSerialNumbersOnRelease': 'tNO', 'DNFEntry': -1, 'GTSItemSpec': None, 'GTSItemTaxCategory': None, 'FuelID': None, 'BeverageTableCode': '', 'BeverageGroupCode': '', 'BeverageCommercialBrandCode': None, 'Series': 119, 'ToleranceDays': None, 'TypeOfAdvancedRules': 'toarGeneral', 'IssuePrimarilyBy': 'ipbBinLocations', 'NoDiscounts': 'tNO', 'AssetClass': '', 'AssetGroup': '', 'InventoryNumber': '', 'Technician': None, 'Employee': None, 'Location': None, 'AssetStatus': 'New', 'CapitalizationDate': None, 'StatisticalAsset': 'tNO', 'Cession': 'tNO', 'DeactivateAfterUsefulLife': 'tNO', 'ManageByQuantity': 'tNO', 'UoMGroupEntry': 1, 'InventoryUoMEntry': 1, 'DefaultSalesUoMEntry': None, 'DefaultPurchasingUoMEntry': None, 'DepreciationGroup': None, 'AssetSerialNumber': '', 'InventoryWeight': None, 'InventoryWeightUnit': None, 'InventoryWeight1': None, 'InventoryWeightUnit1': None, 'DefaultCountingUnit': 'Piece', 'CountingItemsPerUnit': 1.0, 'DefaultCountingUoMEntry': 1, 'Excisable': 'tNO', 'ChapterID': -1, 'ScsCode': None, 'SpProdType': None, 'ProdStdCost': 0.0, 'InCostRollup': 'tYES', 'VirtualAssetItem': 'tNO', 'EnforceAssetSerialNumbers': 'tNO', 'AttachmentEntry': None, 'LinkedResource': None, 'UpdateDate': '2025-01-27', 'UpdateTime': '11:24:02', 'GSTRelevnt': 'tNO', 'SACEntry': -1, 'GSTTaxCategory': 'gtc_Regular', 'ServiceCategoryEntry': -1, 'CapitalGoodsOnHoldPercent': 0.0, 'CapitalGoodsOnHoldLimit': 0.0, 'AssessableValue': 0.0, 'AssVal4WTR': 0.0, 'SOIExcisable': 'se_NotExcisable', 'TNVED': None, 'ImportedItem': 'tNO', 'PricingUnit': 1, 'CreateDate': '2025-01-26', 'CreateTime': '09:34:00', 'U_MfgH': None, 'U_Collection': None, 'U_OldCode': None, 'U_ItemsCat': None, 'U_NumberofSet': None, 'U_NileCode': None, 'U_TransferProductionLinkExclude': None, 'U_SBO_CodeType': 'GS1', 'U_SBO_EGSCode': None, 'U_ShopifyColor': None, 'U_SalesChannel': None, 'U_ShopifyItemIDLocal': None, 'U_ShopifyItemIDInternational': None, 'U_ParentCommercialName': None, 'ItemPrices': [{'PriceList': 1, 'Price': 0.0, 'Currency': None, 'AdditionalPrice1': 0.0, 'AdditionalCurrency1': None, 'AdditionalPrice2': 0.0, 'AdditionalCurrency2': None, 'BasePriceList': 1, 'Factor': 1.0, 'UoMPrices': []}, {'PriceList': 2, 'Price': 0.0, 'Currency': None, 'AdditionalPrice1': 0.0, 'AdditionalCurrency1': None, 'AdditionalPrice2': 0.0, 'AdditionalCurrency2': None, 'BasePriceList': 1, 'Factor': 0.4, 'UoMPrices': []}, {'PriceList': 3, 'Price': 0.0, 'Currency': None, 'AdditionalPrice1': 0.0, 'AdditionalCurrency1': None, 'AdditionalPrice2': 0.0, 'AdditionalCurrency2': None, 'BasePriceList': 3, 'Factor': 1.0, 'UoMPrices': []}, {'PriceList': 4, 'Price': 0.0, 'Currency': None, 'AdditionalPrice1': 0.0, 'AdditionalCurrency1': None, 'AdditionalPrice2': 0.0, 'AdditionalCurrency2': None, 'BasePriceList': 4, 'Factor': 1.0, 'UoMPrices': []}, {'PriceList': 5, 'Price': 0.0, 'Currency': None, 'AdditionalPrice1': 0.0, 'AdditionalCurrency1': None, 'AdditionalPrice2': 0.0, 'AdditionalCurrency2': None, 'BasePriceList': 5, 'Factor': 1.0, 'UoMPrices': []}, {'PriceList': 6, 'Price': 0.0, 'Currency': None, 'AdditionalPrice1': 0.0, 'AdditionalCurrency1': None, 'AdditionalPrice2': 0.0, 'AdditionalCurrency2': None, 'BasePriceList': 6, 'Factor': 1.0, 'UoMPrices': []}, {'PriceList': 7, 'Price': 0.0, 'Currency': None, 'AdditionalPrice1': 0.0, 'AdditionalCurrency1': None, 'AdditionalPrice2': 0.0, 'AdditionalCurrency2': None, 'BasePriceList': 7, 'Factor': 1.0, 'UoMPrices': []}, {'PriceList': 8, 'Price': 0.0, 'Currency': None, 'AdditionalPrice1': 0.0, 'AdditionalCurrency1': None, 'AdditionalPrice2': 0.0, 'AdditionalCurrency2': None, 'BasePriceList': 8, 'Factor': 1.0, 'UoMPrices': []}, {'PriceList': 9, 'Price': 0.0, 'Currency': None, 'AdditionalPrice1': 0.0, 'AdditionalCurrency1': None, 'AdditionalPrice2': 0.0, 'AdditionalCurrency2': None, 'BasePriceList': 9, 'Factor': 1.0, 'UoMPrices': []}, {'PriceList': 10, 'Price': 0.0, 'Currency': None, 'AdditionalPrice1': 0.0, 'AdditionalCurrency1': None, 'AdditionalPrice2': 0.0, 'AdditionalCurrency2': None, 'BasePriceList': 10, 'Factor': 1.0, 'UoMPrices': []}], 'ItemWarehouseInfoCollection': [{'MinimalStock': 0.0, 'MaximalStock': 0.0, 'MinimalOrder': 0.0, 'StandardAveragePrice': 250.0, 'Locked': 'tNO', 'InventoryAccount': None, 'CostAccount': None, 'TransferAccount': None, 'RevenuesAccount': None, 'VarienceAccount': None, 'DecreasingAccount': None, 'IncreasingAccount': None, 'ReturningAccount': None, 'ExpensesAccount': None, 'EURevenuesAccount': None, 'EUExpensesAccount': None, 'ForeignRevenueAcc': None, 'ForeignExpensAcc': None, 'ExemptIncomeAcc': None, 'PriceDifferenceAcc': None, 'WarehouseCode': '5A', 'InStock': 7.0, 'Committed': 0.0, 'Ordered': 0.0, 'CountedQuantity': 0.0, 'WasCounted': 'tNO', 'UserSignature': 50, 'Counted': 0.0, 'ExpenseClearingAct': None, 'PurchaseCreditAcc': None, 'EUPurchaseCreditAcc': None, 'ForeignPurchaseCreditAcc': None, 'SalesCreditAcc': None, 'SalesCreditEUAcc': None, 'ExemptedCredits': None, 'SalesCreditForeignAcc': None, 'ExpenseOffsettingAccount': None, 'WipAccount': None, 'ExchangeRateDifferencesAcct': None, 'GoodsClearingAcct': None, 'NegativeInventoryAdjustmentAccount': None, 'CostInflationOffsetAccount': None, 'GLDecreaseAcct': None, 'GLIncreaseAcct': None, 'PAReturnAcct': None, 'PurchaseAcct': None, 'PurchaseOffsetAcct': None, 'ShippedGoodsAccount': None, 'StockInflationOffsetAccount': None, 'StockInflationAdjustAccount': None, 'VATInRevenueAccount': None, 'WipVarianceAccount': None, 'CostInflationAccount': None, 'WHIncomingCenvatAccount': None, 'WHOutgoingCenvatAccount': None, 'StockInTransitAccount': None, 'WipOffsetProfitAndLossAccount': None, 'InventoryOffsetProfitAndLossAccount': None, 'DefaultBin': None, 'DefaultBinEnforced': 'tNO', 'PurchaseBalanceAccount': None, 'ItemCode': 'ACC-0000002', 'ItemCycleCounts': []}, {'MinimalStock': 0.0, 'MaximalStock': 0.0, 'MinimalOrder': 0.0, 'StandardAveragePrice': 250.0, 'Locked': 'tNO', 'InventoryAccount': None, 'CostAccount': None, 'TransferAccount': None, 'RevenuesAccount': None, 'VarienceAccount': None, 'DecreasingAccount': None, 'IncreasingAccount': None, 'ReturningAccount': None, 'ExpensesAccount': None, 'EURevenuesAccount': None, 'EUExpensesAccount': None, 'ForeignRevenueAcc': None, 'ForeignExpensAcc': None, 'ExemptIncomeAcc': None, 'PriceDifferenceAcc': None, 'WarehouseCode': 'Arkan', 'InStock': 3.0, 'Committed': 0.0, 'Ordered': 0.0, 'CountedQuantity': 0.0, 'WasCounted': 'tNO', 'UserSignature': 50, 'Counted': 0.0, 'ExpenseClearingAct': None, 'PurchaseCreditAcc': None, 'EUPurchaseCreditAcc': None, 'ForeignPurchaseCreditAcc': None, 'SalesCreditAcc': None, 'SalesCreditEUAcc': None, 'ExemptedCredits': None, 'SalesCreditForeignAcc': None, 'ExpenseOffsettingAccount': None, 'WipAccount': None, 'ExchangeRateDifferencesAcct': None, 'GoodsClearingAcct': None, 'NegativeInventoryAdjustmentAccount': None, 'CostInflationOffsetAccount': None, 'GLDecreaseAcct': None, 'GLIncreaseAcct': None, 'PAReturnAcct': None, 'PurchaseAcct': None, 'PurchaseOffsetAcct': None, 'ShippedGoodsAccount': None, 'StockInflationOffsetAccount': None, 'StockInflationAdjustAccount': None, 'VATInRevenueAccount': None, 'WipVarianceAccount': None, 'CostInflationAccount': None, 'WHIncomingCenvatAccount': None, 'WHOutgoingCenvatAccount': None, 'StockInTransitAccount': None, 'WipOffsetProfitAndLossAccount': None, 'InventoryOffsetProfitAndLossAccount': None, 'DefaultBin': None, 'DefaultBinEnforced': 'tNO', 'PurchaseBalanceAccount': None, 'ItemCode': 'ACC-0000002', 'ItemCycleCounts': []}, {'MinimalStock': 0.0, 'MaximalStock': 0.0, 'MinimalOrder': 0.0, 'StandardAveragePrice': 0.0, 'Locked': 'tNO', 'InventoryAccount': None, 'CostAccount': None, 'TransferAccount': None, 'RevenuesAccount': None, 'VarienceAccount': None, 'DecreasingAccount': None, 'IncreasingAccount': None, 'ReturningAccount': None, 'ExpensesAccount': None, 'EURevenuesAccount': None, 'EUExpensesAccount': None, 'ForeignRevenueAcc': None, 'ForeignExpensAcc': None, 'ExemptIncomeAcc': None, 'PriceDifferenceAcc': None, 'WarehouseCode': 'DIP', 'InStock': 0.0, 'Committed': 0.0, 'Ordered': 0.0, 'CountedQuantity': 0.0, 'WasCounted': 'tNO', 'UserSignature': 50, 'Counted': 0.0, 'ExpenseClearingAct': None, 'PurchaseCreditAcc': None, 'EUPurchaseCreditAcc': None, 'ForeignPurchaseCreditAcc': None, 'SalesCreditAcc': None, 'SalesCreditEUAcc': None, 'ExemptedCredits': None, 'SalesCreditForeignAcc': None, 'ExpenseOffsettingAccount': None, 'WipAccount': None, 'ExchangeRateDifferencesAcct': None, 'GoodsClearingAcct': None, 'NegativeInventoryAdjustmentAccount': None, 'CostInflationOffsetAccount': None, 'GLDecreaseAcct': None, 'GLIncreaseAcct': None, 'PAReturnAcct': None, 'PurchaseAcct': None, 'PurchaseOffsetAcct': None, 'ShippedGoodsAccount': None, 'StockInflationOffsetAccount': None, 'StockInflationAdjustAccount': None, 'VATInRevenueAccount': None, 'WipVarianceAccount': None, 'CostInflationAccount': None, 'WHIncomingCenvatAccount': None, 'WHOutgoingCenvatAccount': None, 'StockInTransitAccount': None, 'WipOffsetProfitAndLossAccount': None, 'InventoryOffsetProfitAndLossAccount': None, 'DefaultBin': None, 'DefaultBinEnforced': 'tNO', 'PurchaseBalanceAccount': None, 'ItemCode': 'ACC-0000002', 'ItemCycleCounts': []}, {'MinimalStock': 0.0, 'MaximalStock': 0.0, 'MinimalOrder': 0.0, 'StandardAveragePrice': 250.0, 'Locked': 'tNO', 'InventoryAccount': None, 'CostAccount': None, 'TransferAccount': None, 'RevenuesAccount': None, 'VarienceAccount': None, 'DecreasingAccount': None, 'IncreasingAccount': None, 'ReturningAccount': None, 'ExpensesAccount': None, 'EURevenuesAccount': None, 'EUExpensesAccount': None, 'ForeignRevenueAcc': None, 'ForeignExpensAcc': None, 'ExemptIncomeAcc': None, 'PriceDifferenceAcc': None, 'WarehouseCode': 'INC', 'InStock': 0.0, 'Committed': 0.0, 'Ordered': 0.0, 'CountedQuantity': 0.0, 'WasCounted': 'tNO', 'UserSignature': 50, 'Counted': 0.0, 'ExpenseClearingAct': None, 'PurchaseCreditAcc': None, 'EUPurchaseCreditAcc': None, 'ForeignPurchaseCreditAcc': None, 'SalesCreditAcc': None, 'SalesCreditEUAcc': None, 'ExemptedCredits': None, 'SalesCreditForeignAcc': None, 'ExpenseOffsettingAccount': None, 'WipAccount': None, 'ExchangeRateDifferencesAcct': None, 'GoodsClearingAcct': None, 'NegativeInventoryAdjustmentAccount': None, 'CostInflationOffsetAccount': None, 'GLDecreaseAcct': None, 'GLIncreaseAcct': None, 'PAReturnAcct': None, 'PurchaseAcct': None, 'PurchaseOffsetAcct': None, 'ShippedGoodsAccount': None, 'StockInflationOffsetAccount': None, 'StockInflationAdjustAccount': None, 'VATInRevenueAccount': None, 'WipVarianceAccount': None, 'CostInflationAccount': None, 'WHIncomingCenvatAccount': None, 'WHOutgoingCenvatAccount': None, 'StockInTransitAccount': None, 'WipOffsetProfitAndLossAccount': None, 'InventoryOffsetProfitAndLossAccount': None, 'DefaultBin': None, 'DefaultBinEnforced': 'tNO', 'PurchaseBalanceAccount': None, 'ItemCode': 'ACC-0000002', 'ItemCycleCounts': []}, {'MinimalStock': 0.0, 'MaximalStock': 0.0, 'MinimalOrder': 0.0, 'StandardAveragePrice': 0.0, 'Locked': 'tNO', 'InventoryAccount': None, 'CostAccount': None, 'TransferAccount': None, 'RevenuesAccount': None, 'VarienceAccount': None, 'DecreasingAccount': None, 'IncreasingAccount': None, 'ReturningAccount': None, 'ExpensesAccount': None, 'EURevenuesAccount': None, 'EUExpensesAccount': None, 'ForeignRevenueAcc': None, 'ForeignExpensAcc': None, 'ExemptIncomeAcc': None, 'PriceDifferenceAcc': None, 'WarehouseCode': 'ONL', 'InStock': 0.0, 'Committed': 0.0, 'Ordered': 0.0, 'CountedQuantity': 0.0, 'WasCounted': 'tNO', 'UserSignature': 50, 'Counted': 0.0, 'ExpenseClearingAct': None, 'PurchaseCreditAcc': None, 'EUPurchaseCreditAcc': None, 'ForeignPurchaseCreditAcc': None, 'SalesCreditAcc': None, 'SalesCreditEUAcc': None, 'ExemptedCredits': None, 'SalesCreditForeignAcc': None, 'ExpenseOffsettingAccount': None, 'WipAccount': None, 'ExchangeRateDifferencesAcct': None, 'GoodsClearingAcct': None, 'NegativeInventoryAdjustmentAccount': None, 'CostInflationOffsetAccount': None, 'GLDecreaseAcct': None, 'GLIncreaseAcct': None, 'PAReturnAcct': None, 'PurchaseAcct': None, 'PurchaseOffsetAcct': None, 'ShippedGoodsAccount': None, 'StockInflationOffsetAccount': None, 'StockInflationAdjustAccount': None, 'VATInRevenueAccount': None, 'WipVarianceAccount': None, 'CostInflationAccount': None, 'WHIncomingCenvatAccount': None, 'WHOutgoingCenvatAccount': None, 'StockInTransitAccount': None, 'WipOffsetProfitAndLossAccount': None, 'InventoryOffsetProfitAndLossAccount': None, 'DefaultBin': None, 'DefaultBinEnforced': 'tNO', 'PurchaseBalanceAccount': None, 'ItemCode': 'ACC-0000002', 'ItemCycleCounts': []}, {'MinimalStock': 0.0, 'MaximalStock': 0.0, 'MinimalOrder': 0.0, 'StandardAveragePrice': 0.0, 'Locked': 'tNO', 'InventoryAccount': None, 'CostAccount': None, 'TransferAccount': None, 'RevenuesAccount': None, 'VarienceAccount': None, 'DecreasingAccount': None, 'IncreasingAccount': None, 'ReturningAccount': None, 'ExpensesAccount': None, 'EURevenuesAccount': None, 'EUExpensesAccount': None, 'ForeignRevenueAcc': None, 'ForeignExpensAcc': None, 'ExemptIncomeAcc': None, 'PriceDifferenceAcc': None, 'WarehouseCode': 'PHO', 'InStock': 0.0, 'Committed': 0.0, 'Ordered': 0.0, 'CountedQuantity': 0.0, 'WasCounted': 'tNO', 'UserSignature': 50, 'Counted': 0.0, 'ExpenseClearingAct': None, 'PurchaseCreditAcc': None, 'EUPurchaseCreditAcc': None, 'ForeignPurchaseCreditAcc': None, 'SalesCreditAcc': None, 'SalesCreditEUAcc': None, 'ExemptedCredits': None, 'SalesCreditForeignAcc': None, 'ExpenseOffsettingAccount': None, 'WipAccount': None, 'ExchangeRateDifferencesAcct': None, 'GoodsClearingAcct': None, 'NegativeInventoryAdjustmentAccount': None, 'CostInflationOffsetAccount': None, 'GLDecreaseAcct': None, 'GLIncreaseAcct': None, 'PAReturnAcct': None, 'PurchaseAcct': None, 'PurchaseOffsetAcct': None, 'ShippedGoodsAccount': None, 'StockInflationOffsetAccount': None, 'StockInflationAdjustAccount': None, 'VATInRevenueAccount': None, 'WipVarianceAccount': None, 'CostInflationAccount': None, 'WHIncomingCenvatAccount': None, 'WHOutgoingCenvatAccount': None, 'StockInTransitAccount': None, 'WipOffsetProfitAndLossAccount': None, 'InventoryOffsetProfitAndLossAccount': None, 'DefaultBin': None, 'DefaultBinEnforced': 'tNO', 'PurchaseBalanceAccount': None, 'ItemCode': 'ACC-0000002', 'ItemCycleCounts': []}, {'MinimalStock': 0.0, 'MaximalStock': 0.0, 'MinimalOrder': 0.0, 'StandardAveragePrice': 0.0, 'Locked': 'tNO', 'InventoryAccount': None, 'CostAccount': None, 'TransferAccount': None, 'RevenuesAccount': None, 'VarienceAccount': None, 'DecreasingAccount': None, 'IncreasingAccount': None, 'ReturningAccount': None, 'ExpensesAccount': None, 'EURevenuesAccount': None, 'EUExpensesAccount': None, 'ForeignRevenueAcc': None, 'ForeignExpensAcc': None, 'ExemptIncomeAcc': None, 'PriceDifferenceAcc': None, 'WarehouseCode': 'PHO-EX', 'InStock': 0.0, 'Committed': 0.0, 'Ordered': 0.0, 'CountedQuantity': 0.0, 'WasCounted': 'tNO', 'UserSignature': 1, 'Counted': 0.0, 'ExpenseClearingAct': None, 'PurchaseCreditAcc': None, 'EUPurchaseCreditAcc': None, 'ForeignPurchaseCreditAcc': None, 'SalesCreditAcc': None, 'SalesCreditEUAcc': None, 'ExemptedCredits': None, 'SalesCreditForeignAcc': None, 'ExpenseOffsettingAccount': None, 'WipAccount': None, 'ExchangeRateDifferencesAcct': None, 'GoodsClearingAcct': None, 'NegativeInventoryAdjustmentAccount': None, 'CostInflationOffsetAccount': None, 'GLDecreaseAcct': None, 'GLIncreaseAcct': None, 'PAReturnAcct': None, 'PurchaseAcct': None, 'PurchaseOffsetAcct': None, 'ShippedGoodsAccount': None, 'StockInflationOffsetAccount': None, 'StockInflationAdjustAccount': None, 'VATInRevenueAccount': None, 'WipVarianceAccount': None, 'CostInflationAccount': None, 'WHIncomingCenvatAccount': None, 'WHOutgoingCenvatAccount': None, 'StockInTransitAccount': None, 'WipOffsetProfitAndLossAccount': None, 'InventoryOffsetProfitAndLossAccount': None, 'DefaultBin': None, 'DefaultBinEnforced': 'tNO', 'PurchaseBalanceAccount': None, 'ItemCode': 'ACC-0000002', 'ItemCycleCounts': []}, {'MinimalStock': 0.0, 'MaximalStock': 0.0, 'MinimalOrder': 0.0, 'StandardAveragePrice': 0.0, 'Locked': 'tNO', 'InventoryAccount': None, 'CostAccount': None, 'TransferAccount': None, 'RevenuesAccount': None, 'VarienceAccount': None, 'DecreasingAccount': None, 'IncreasingAccount': None, 'ReturningAccount': None, 'ExpensesAccount': None, 'EURevenuesAccount': None, 'EUExpensesAccount': None, 'ForeignRevenueAcc': None, 'ForeignExpensAcc': None, 'ExemptIncomeAcc': None, 'PriceDifferenceAcc': None, 'WarehouseCode': 'PHO-IN', 'InStock': 0.0, 'Committed': 0.0, 'Ordered': 0.0, 'CountedQuantity': 0.0, 'WasCounted': 'tNO', 'UserSignature': 1, 'Counted': 0.0, 'ExpenseClearingAct': None, 'PurchaseCreditAcc': None, 'EUPurchaseCreditAcc': None, 'ForeignPurchaseCreditAcc': None, 'SalesCreditAcc': None, 'SalesCreditEUAcc': None, 'ExemptedCredits': None, 'SalesCreditForeignAcc': None, 'ExpenseOffsettingAccount': None, 'WipAccount': None, 'ExchangeRateDifferencesAcct': None, 'GoodsClearingAcct': None, 'NegativeInventoryAdjustmentAccount': None, 'CostInflationOffsetAccount': None, 'GLDecreaseAcct': None, 'GLIncreaseAcct': None, 'PAReturnAcct': None, 'PurchaseAcct': None, 'PurchaseOffsetAcct': None, 'ShippedGoodsAccount': None, 'StockInflationOffsetAccount': None, 'StockInflationAdjustAccount': None, 'VATInRevenueAccount': None, 'WipVarianceAccount': None, 'CostInflationAccount': None, 'WHIncomingCenvatAccount': None, 'WHOutgoingCenvatAccount': None, 'StockInTransitAccount': None, 'WipOffsetProfitAndLossAccount': None, 'InventoryOffsetProfitAndLossAccount': None, 'DefaultBin': None, 'DefaultBinEnforced': 'tNO', 'PurchaseBalanceAccount': None, 'ItemCode': 'ACC-0000002', 'ItemCycleCounts': []}, {'MinimalStock': 0.0, 'MaximalStock': 0.0, 'MinimalOrder': 0.0, 'StandardAveragePrice': 0.0, 'Locked': 'tNO', 'InventoryAccount': None, 'CostAccount': None, 'TransferAccount': None, 'RevenuesAccount': None, 'VarienceAccount': None, 'DecreasingAccount': None, 'IncreasingAccount': None, 'ReturningAccount': None, 'ExpensesAccount': None, 'EURevenuesAccount': None, 'EUExpensesAccount': None, 'ForeignRevenueAcc': None, 'ForeignExpensAcc': None, 'ExemptIncomeAcc': None, 'PriceDifferenceAcc': None, 'WarehouseCode': 'RTW', 'InStock': 0.0, 'Committed': 0.0, 'Ordered': 0.0, 'CountedQuantity': 0.0, 'WasCounted': 'tNO', 'UserSignature': 50, 'Counted': 0.0, 'ExpenseClearingAct': None, 'PurchaseCreditAcc': None, 'EUPurchaseCreditAcc': None, 'ForeignPurchaseCreditAcc': None, 'SalesCreditAcc': None, 'SalesCreditEUAcc': None, 'ExemptedCredits': None, 'SalesCreditForeignAcc': None, 'ExpenseOffsettingAccount': None, 'WipAccount': None, 'ExchangeRateDifferencesAcct': None, 'GoodsClearingAcct': None, 'NegativeInventoryAdjustmentAccount': None, 'CostInflationOffsetAccount': None, 'GLDecreaseAcct': None, 'GLIncreaseAcct': None, 'PAReturnAcct': None, 'PurchaseAcct': None, 'PurchaseOffsetAcct': None, 'ShippedGoodsAccount': None, 'StockInflationOffsetAccount': None, 'StockInflationAdjustAccount': None, 'VATInRevenueAccount': None, 'WipVarianceAccount': None, 'CostInflationAccount': None, 'WHIncomingCenvatAccount': None, 'WHOutgoingCenvatAccount': None, 'StockInTransitAccount': None, 'WipOffsetProfitAndLossAccount': None, 'InventoryOffsetProfitAndLossAccount': None, 'DefaultBin': None, 'DefaultBinEnforced': 'tNO', 'PurchaseBalanceAccount': None, 'ItemCode': 'ACC-0000002', 'ItemCycleCounts': []}, {'MinimalStock': 0.0, 'MaximalStock': 0.0, 'MinimalOrder': 0.0, 'StandardAveragePrice': 0.0, 'Locked': 'tNO', 'InventoryAccount': None, 'CostAccount': None, 'TransferAccount': None, 'RevenuesAccount': None, 'VarienceAccount': None, 'DecreasingAccount': None, 'IncreasingAccount': None, 'ReturningAccount': None, 'ExpensesAccount': None, 'EURevenuesAccount': None, 'EUExpensesAccount': None, 'ForeignRevenueAcc': None, 'ForeignExpensAcc': None, 'ExemptIncomeAcc': None, 'PriceDifferenceAcc': None, 'WarehouseCode': 'RTWH', 'InStock': 0.0, 'Committed': 0.0, 'Ordered': 0.0, 'CountedQuantity': 0.0, 'WasCounted': 'tNO', 'UserSignature': 1, 'Counted': 0.0, 'ExpenseClearingAct': None, 'PurchaseCreditAcc': None, 'EUPurchaseCreditAcc': None, 'ForeignPurchaseCreditAcc': None, 'SalesCreditAcc': None, 'SalesCreditEUAcc': None, 'ExemptedCredits': None, 'SalesCreditForeignAcc': None, 'ExpenseOffsettingAccount': None, 'WipAccount': None, 'ExchangeRateDifferencesAcct': None, 'GoodsClearingAcct': None, 'NegativeInventoryAdjustmentAccount': None, 'CostInflationOffsetAccount': None, 'GLDecreaseAcct': None, 'GLIncreaseAcct': None, 'PAReturnAcct': None, 'PurchaseAcct': None, 'PurchaseOffsetAcct': None, 'ShippedGoodsAccount': None, 'StockInflationOffsetAccount': None, 'StockInflationAdjustAccount': None, 'VATInRevenueAccount': None, 'WipVarianceAccount': None, 'CostInflationAccount': None, 'WHIncomingCenvatAccount': None, 'WHOutgoingCenvatAccount': None, 'StockInTransitAccount': None, 'WipOffsetProfitAndLossAccount': None, 'InventoryOffsetProfitAndLossAccount': None, 'DefaultBin': None, 'DefaultBinEnforced': 'tNO', 'PurchaseBalanceAccount': None, 'ItemCode': 'ACC-0000002', 'ItemCycleCounts': []}, {'MinimalStock': 0.0, 'MaximalStock': 0.0, 'MinimalOrder': 0.0, 'StandardAveragePrice': 0.0, 'Locked': 'tNO', 'InventoryAccount': None, 'CostAccount': None, 'TransferAccount': None, 'RevenuesAccount': None, 'VarienceAccount': None, 'DecreasingAccount': None, 'IncreasingAccount': None, 'ReturningAccount': None, 'ExpensesAccount': None, 'EURevenuesAccount': None, 'EUExpensesAccount': None, 'ForeignRevenueAcc': None, 'ForeignExpensAcc': None, 'ExemptIncomeAcc': None, 'PriceDifferenceAcc': None, 'WarehouseCode': 'SW', 'InStock': 0.0, 'Committed': 0.0, 'Ordered': 0.0, 'CountedQuantity': 0.0, 'WasCounted': 'tNO', 'UserSignature': 50, 'Counted': 0.0, 'ExpenseClearingAct': None, 'PurchaseCreditAcc': None, 'EUPurchaseCreditAcc': None, 'ForeignPurchaseCreditAcc': None, 'SalesCreditAcc': None, 'SalesCreditEUAcc': None, 'ExemptedCredits': None, 'SalesCreditForeignAcc': None, 'ExpenseOffsettingAccount': None, 'WipAccount': None, 'ExchangeRateDifferencesAcct': None, 'GoodsClearingAcct': None, 'NegativeInventoryAdjustmentAccount': None, 'CostInflationOffsetAccount': None, 'GLDecreaseAcct': None, 'GLIncreaseAcct': None, 'PAReturnAcct': None, 'PurchaseAcct': None, 'PurchaseOffsetAcct': None, 'ShippedGoodsAccount': None, 'StockInflationOffsetAccount': None, 'StockInflationAdjustAccount': None, 'VATInRevenueAccount': None, 'WipVarianceAccount': None, 'CostInflationAccount': None, 'WHIncomingCenvatAccount': None, 'WHOutgoingCenvatAccount': None, 'StockInTransitAccount': None, 'WipOffsetProfitAndLossAccount': None, 'InventoryOffsetProfitAndLossAccount': None, 'DefaultBin': None, 'DefaultBinEnforced': 'tNO', 'PurchaseBalanceAccount': None, 'ItemCode': 'ACC-0000002', 'ItemCycleCounts': []}, {'MinimalStock': 0.0, 'MaximalStock': 0.0, 'MinimalOrder': 0.0, 'StandardAveragePrice': 0.0, 'Locked': 'tNO', 'InventoryAccount': None, 'CostAccount': None, 'TransferAccount': None, 'RevenuesAccount': None, 'VarienceAccount': None, 'DecreasingAccount': None, 'IncreasingAccount': None, 'ReturningAccount': None, 'ExpensesAccount': None, 'EURevenuesAccount': None, 'EUExpensesAccount': None, 'ForeignRevenueAcc': None, 'ForeignExpensAcc': None, 'ExemptIncomeAcc': None, 'PriceDifferenceAcc': None, 'WarehouseCode': 'WLS', 'InStock': 0.0, 'Committed': 0.0, 'Ordered': 0.0, 'CountedQuantity': 0.0, 'WasCounted': 'tNO', 'UserSignature': 50, 'Counted': 0.0, 'ExpenseClearingAct': None, 'PurchaseCreditAcc': None, 'EUPurchaseCreditAcc': None, 'ForeignPurchaseCreditAcc': None, 'SalesCreditAcc': None, 'SalesCreditEUAcc': None, 'ExemptedCredits': None, 'SalesCreditForeignAcc': None, 'ExpenseOffsettingAccount': None, 'WipAccount': None, 'ExchangeRateDifferencesAcct': None, 'GoodsClearingAcct': None, 'NegativeInventoryAdjustmentAccount': None, 'CostInflationOffsetAccount': None, 'GLDecreaseAcct': None, 'GLIncreaseAcct': None, 'PAReturnAcct': None, 'PurchaseAcct': None, 'PurchaseOffsetAcct': None, 'ShippedGoodsAccount': None, 'StockInflationOffsetAccount': None, 'StockInflationAdjustAccount': None, 'VATInRevenueAccount': None, 'WipVarianceAccount': None, 'CostInflationAccount': None, 'WHIncomingCenvatAccount': None, 'WHOutgoingCenvatAccount': None, 'StockInTransitAccount': None, 'WipOffsetProfitAndLossAccount': None, 'InventoryOffsetProfitAndLossAccount': None, 'DefaultBin': None, 'DefaultBinEnforced': 'tNO', 'PurchaseBalanceAccount': None, 'ItemCode': 'ACC-0000002', 'ItemCycleCounts': []}, {'MinimalStock': 0.0, 'MaximalStock': 0.0, 'MinimalOrder': 0.0, 'StandardAveragePrice': 0.0, 'Locked': 'tNO', 'InventoryAccount': None, 'CostAccount': None, 'TransferAccount': None, 'RevenuesAccount': None, 'VarienceAccount': None, 'DecreasingAccount': None, 'IncreasingAccount': None, 'ReturningAccount': None, 'ExpensesAccount': None, 'EURevenuesAccount': None, 'EUExpensesAccount': None, 'ForeignRevenueAcc': None, 'ForeignExpensAcc': None, 'ExemptIncomeAcc': None, 'PriceDifferenceAcc': None, 'WarehouseCode': 'WW', 'InStock': 0.0, 'Committed': 0.0, 'Ordered': 0.0, 'CountedQuantity': 0.0, 'WasCounted': 'tNO', 'UserSignature': 50, 'Counted': 0.0, 'ExpenseClearingAct': None, 'PurchaseCreditAcc': None, 'EUPurchaseCreditAcc': None, 'ForeignPurchaseCreditAcc': None, 'SalesCreditAcc': None, 'SalesCreditEUAcc': None, 'ExemptedCredits': None, 'SalesCreditForeignAcc': None, 'ExpenseOffsettingAccount': None, 'WipAccount': None, 'ExchangeRateDifferencesAcct': None, 'GoodsClearingAcct': None, 'NegativeInventoryAdjustmentAccount': None, 'CostInflationOffsetAccount': None, 'GLDecreaseAcct': None, 'GLIncreaseAcct': None, 'PAReturnAcct': None, 'PurchaseAcct': None, 'PurchaseOffsetAcct': None, 'ShippedGoodsAccount': None, 'StockInflationOffsetAccount': None, 'StockInflationAdjustAccount': None, 'VATInRevenueAccount': None, 'WipVarianceAccount': None, 'CostInflationAccount': None, 'WHIncomingCenvatAccount': None, 'WHOutgoingCenvatAccount': None, 'StockInTransitAccount': None, 'WipOffsetProfitAndLossAccount': None, 'InventoryOffsetProfitAndLossAccount': None, 'DefaultBin': None, 'DefaultBinEnforced': 'tNO', 'PurchaseBalanceAccount': None, 'ItemCode': 'ACC-0000002', 'ItemCycleCounts': []}, {'MinimalStock': 0.0, 'MaximalStock': 0.0, 'MinimalOrder': 0.0, 'StandardAveragePrice': 0.0, 'Locked': 'tNO', 'InventoryAccount': None, 'CostAccount': None, 'TransferAccount': None, 'RevenuesAccount': None, 'VarienceAccount': None, 'DecreasingAccount': None, 'IncreasingAccount': None, 'ReturningAccount': None, 'ExpensesAccount': None, 'EURevenuesAccount': None, 'EUExpensesAccount': None, 'ForeignRevenueAcc': None, 'ForeignExpensAcc': None, 'ExemptIncomeAcc': None, 'PriceDifferenceAcc': None, 'WarehouseCode': 'WW-CON', 'InStock': 0.0, 'Committed': 0.0, 'Ordered': 0.0, 'CountedQuantity': 0.0, 'WasCounted': 'tNO', 'UserSignature': 50, 'Counted': 0.0, 'ExpenseClearingAct': None, 'PurchaseCreditAcc': None, 'EUPurchaseCreditAcc': None, 'ForeignPurchaseCreditAcc': None, 'SalesCreditAcc': None, 'SalesCreditEUAcc': None, 'ExemptedCredits': None, 'SalesCreditForeignAcc': None, 'ExpenseOffsettingAccount': None, 'WipAccount': None, 'ExchangeRateDifferencesAcct': None, 'GoodsClearingAcct': None, 'NegativeInventoryAdjustmentAccount': None, 'CostInflationOffsetAccount': None, 'GLDecreaseAcct': None, 'GLIncreaseAcct': None, 'PAReturnAcct': None, 'PurchaseAcct': None, 'PurchaseOffsetAcct': None, 'ShippedGoodsAccount': None, 'StockInflationOffsetAccount': None, 'StockInflationAdjustAccount': None, 'VATInRevenueAccount': None, 'WipVarianceAccount': None, 'CostInflationAccount': None, 'WHIncomingCenvatAccount': None, 'WHOutgoingCenvatAccount': None, 'StockInTransitAccount': None, 'WipOffsetProfitAndLossAccount': None, 'InventoryOffsetProfitAndLossAccount': None, 'DefaultBin': None, 'DefaultBinEnforced': 'tNO', 'PurchaseBalanceAccount': None, 'ItemCode': 'ACC-0000002', 'ItemCycleCounts': []}, {'MinimalStock': 0.0, 'MaximalStock': 0.0, 'MinimalOrder': 0.0, 'StandardAveragePrice': 0.0, 'Locked': 'tNO', 'InventoryAccount': None, 'CostAccount': None, 'TransferAccount': None, 'RevenuesAccount': None, 'VarienceAccount': None, 'DecreasingAccount': None, 'IncreasingAccount': None, 'ReturningAccount': None, 'ExpensesAccount': None, 'EURevenuesAccount': None, 'EUExpensesAccount': None, 'ForeignRevenueAcc': None, 'ForeignExpensAcc': None, 'ExemptIncomeAcc': None, 'PriceDifferenceAcc': None, 'WarehouseCode': 'WW-DAM', 'InStock': 0.0, 'Committed': 0.0, 'Ordered': 0.0, 'CountedQuantity': 0.0, 'WasCounted': 'tNO', 'UserSignature': 50, 'Counted': 0.0, 'ExpenseClearingAct': None, 'PurchaseCreditAcc': None, 'EUPurchaseCreditAcc': None, 'ForeignPurchaseCreditAcc': None, 'SalesCreditAcc': None, 'SalesCreditEUAcc': None, 'ExemptedCredits': None, 'SalesCreditForeignAcc': None, 'ExpenseOffsettingAccount': None, 'WipAccount': None, 'ExchangeRateDifferencesAcct': None, 'GoodsClearingAcct': None, 'NegativeInventoryAdjustmentAccount': None, 'CostInflationOffsetAccount': None, 'GLDecreaseAcct': None, 'GLIncreaseAcct': None, 'PAReturnAcct': None, 'PurchaseAcct': None, 'PurchaseOffsetAcct': None, 'ShippedGoodsAccount': None, 'StockInflationOffsetAccount': None, 'StockInflationAdjustAccount': None, 'VATInRevenueAccount': None, 'WipVarianceAccount': None, 'CostInflationAccount': None, 'WHIncomingCenvatAccount': None, 'WHOutgoingCenvatAccount': None, 'StockInTransitAccount': None, 'WipOffsetProfitAndLossAccount': None, 'InventoryOffsetProfitAndLossAccount': None, 'DefaultBin': None, 'DefaultBinEnforced': 'tNO', 'PurchaseBalanceAccount': None, 'ItemCode': 'ACC-0000002', 'ItemCycleCounts': []}, {'MinimalStock': 0.0, 'MaximalStock': 0.0, 'MinimalOrder': 0.0, 'StandardAveragePrice': 0.0, 'Locked': 'tNO', 'InventoryAccount': None, 'CostAccount': None, 'TransferAccount': None, 'RevenuesAccount': None, 'VarienceAccount': None, 'DecreasingAccount': None, 'IncreasingAccount': None, 'ReturningAccount': None, 'ExpensesAccount': None, 'EURevenuesAccount': None, 'EUExpensesAccount': None, 'ForeignRevenueAcc': None, 'ForeignExpensAcc': None, 'ExemptIncomeAcc': None, 'PriceDifferenceAcc': None, 'WarehouseCode': 'WW-REP', 'InStock': 0.0, 'Committed': 0.0, 'Ordered': 0.0, 'CountedQuantity': 0.0, 'WasCounted': 'tNO', 'UserSignature': 50, 'Counted': 0.0, 'ExpenseClearingAct': None, 'PurchaseCreditAcc': None, 'EUPurchaseCreditAcc': None, 'ForeignPurchaseCreditAcc': None, 'SalesCreditAcc': None, 'SalesCreditEUAcc': None, 'ExemptedCredits': None, 'SalesCreditForeignAcc': None, 'ExpenseOffsettingAccount': None, 'WipAccount': None, 'ExchangeRateDifferencesAcct': None, 'GoodsClearingAcct': None, 'NegativeInventoryAdjustmentAccount': None, 'CostInflationOffsetAccount': None, 'GLDecreaseAcct': None, 'GLIncreaseAcct': None, 'PAReturnAcct': None, 'PurchaseAcct': None, 'PurchaseOffsetAcct': None, 'ShippedGoodsAccount': None, 'StockInflationOffsetAccount': None, 'StockInflationAdjustAccount': None, 'VATInRevenueAccount': None, 'WipVarianceAccount': None, 'CostInflationAccount': None, 'WHIncomingCenvatAccount': None, 'WHOutgoingCenvatAccount': None, 'StockInTransitAccount': None, 'WipOffsetProfitAndLossAccount': None, 'InventoryOffsetProfitAndLossAccount': None, 'DefaultBin': None, 'DefaultBinEnforced': 'tNO', 'PurchaseBalanceAccount': None, 'ItemCode': 'ACC-0000002', 'ItemCycleCounts': []}, {'MinimalStock': 0.0, 'MaximalStock': 0.0, 'MinimalOrder': 0.0, 'StandardAveragePrice': 0.0, 'Locked': 'tNO', 'InventoryAccount': None, 'CostAccount': None, 'TransferAccount': None, 'RevenuesAccount': None, 'VarienceAccount': None, 'DecreasingAccount': None, 'IncreasingAccount': None, 'ReturningAccount': None, 'ExpensesAccount': None, 'EURevenuesAccount': None, 'EUExpensesAccount': None, 'ForeignRevenueAcc': None, 'ForeignExpensAcc': None, 'ExemptIncomeAcc': None, 'PriceDifferenceAcc': None, 'WarehouseCode': 'WW-SAM', 'InStock': 0.0, 'Committed': 0.0, 'Ordered': 0.0, 'CountedQuantity': 0.0, 'WasCounted': 'tNO', 'UserSignature': 50, 'Counted': 0.0, 'ExpenseClearingAct': None, 'PurchaseCreditAcc': None, 'EUPurchaseCreditAcc': None, 'ForeignPurchaseCreditAcc': None, 'SalesCreditAcc': None, 'SalesCreditEUAcc': None, 'ExemptedCredits': None, 'SalesCreditForeignAcc': None, 'ExpenseOffsettingAccount': None, 'WipAccount': None, 'ExchangeRateDifferencesAcct': None, 'GoodsClearingAcct': None, 'NegativeInventoryAdjustmentAccount': None, 'CostInflationOffsetAccount': None, 'GLDecreaseAcct': None, 'GLIncreaseAcct': None, 'PAReturnAcct': None, 'PurchaseAcct': None, 'PurchaseOffsetAcct': None, 'ShippedGoodsAccount': None, 'StockInflationOffsetAccount': None, 'StockInflationAdjustAccount': None, 'VATInRevenueAccount': None, 'WipVarianceAccount': None, 'CostInflationAccount': None, 'WHIncomingCenvatAccount': None, 'WHOutgoingCenvatAccount': None, 'StockInTransitAccount': None, 'WipOffsetProfitAndLossAccount': None, 'InventoryOffsetProfitAndLossAccount': None, 'DefaultBin': None, 'DefaultBinEnforced': 'tNO', 'PurchaseBalanceAccount': None, 'ItemCode': 'ACC-0000002', 'ItemCycleCounts': []}, {'MinimalStock': 0.0, 'MaximalStock': 0.0, 'MinimalOrder': 0.0, 'StandardAveragePrice': 0.0, 'Locked': 'tNO', 'InventoryAccount': None, 'CostAccount': None, 'TransferAccount': None, 'RevenuesAccount': None, 'VarienceAccount': None, 'DecreasingAccount': None, 'IncreasingAccount': None, 'ReturningAccount': None, 'ExpensesAccount': None, 'EURevenuesAccount': None, 'EUExpensesAccount': None, 'ForeignRevenueAcc': None, 'ForeignExpensAcc': None, 'ExemptIncomeAcc': None, 'PriceDifferenceAcc': None, 'WarehouseCode': 'WW-WIP', 'InStock': 0.0, 'Committed': 0.0, 'Ordered': 0.0, 'CountedQuantity': 0.0, 'WasCounted': 'tNO', 'UserSignature': 50, 'Counted': 0.0, 'ExpenseClearingAct': None, 'PurchaseCreditAcc': None, 'EUPurchaseCreditAcc': None, 'ForeignPurchaseCreditAcc': None, 'SalesCreditAcc': None, 'SalesCreditEUAcc': None, 'ExemptedCredits': None, 'SalesCreditForeignAcc': None, 'ExpenseOffsettingAccount': None, 'WipAccount': None, 'ExchangeRateDifferencesAcct': None, 'GoodsClearingAcct': None, 'NegativeInventoryAdjustmentAccount': None, 'CostInflationOffsetAccount': None, 'GLDecreaseAcct': None, 'GLIncreaseAcct': None, 'PAReturnAcct': None, 'PurchaseAcct': None, 'PurchaseOffsetAcct': None, 'ShippedGoodsAccount': None, 'StockInflationOffsetAccount': None, 'StockInflationAdjustAccount': None, 'VATInRevenueAccount': None, 'WipVarianceAccount': None, 'CostInflationAccount': None, 'WHIncomingCenvatAccount': None, 'WHOutgoingCenvatAccount': None, 'StockInTransitAccount': None, 'WipOffsetProfitAndLossAccount': None, 'InventoryOffsetProfitAndLossAccount': None, 'DefaultBin': None, 'DefaultBinEnforced': 'tNO', 'PurchaseBalanceAccount': None, 'ItemCode': 'ACC-0000002', 'ItemCycleCounts': []}, {'MinimalStock': 0.0, 'MaximalStock': 0.0, 'MinimalOrder': 0.0, 'StandardAveragePrice': 0.0, 'Locked': 'tNO', 'InventoryAccount': None, 'CostAccount': None, 'TransferAccount': None, 'RevenuesAccount': None, 'VarienceAccount': None, 'DecreasingAccount': None, 'IncreasingAccount': None, 'ReturningAccount': None, 'ExpensesAccount': None, 'EURevenuesAccount': None, 'EUExpensesAccount': None, 'ForeignRevenueAcc': None, 'ForeignExpensAcc': None, 'ExemptIncomeAcc': None, 'PriceDifferenceAcc': None, 'WarehouseCode': 'ZW', 'InStock': 0.0, 'Committed': 0.0, 'Ordered': 0.0, 'CountedQuantity': 0.0, 'WasCounted': 'tNO', 'UserSignature': 50, 'Counted': 0.0, 'ExpenseClearingAct': None, 'PurchaseCreditAcc': None, 'EUPurchaseCreditAcc': None, 'ForeignPurchaseCreditAcc': None, 'SalesCreditAcc': None, 'SalesCreditEUAcc': None, 'ExemptedCredits': None, 'SalesCreditForeignAcc': None, 'ExpenseOffsettingAccount': None, 'WipAccount': None, 'ExchangeRateDifferencesAcct': None, 'GoodsClearingAcct': None, 'NegativeInventoryAdjustmentAccount': None, 'CostInflationOffsetAccount': None, 'GLDecreaseAcct': None, 'GLIncreaseAcct': None, 'PAReturnAcct': None, 'PurchaseAcct': None, 'PurchaseOffsetAcct': None, 'ShippedGoodsAccount': None, 'StockInflationOffsetAccount': None, 'StockInflationAdjustAccount': None, 'VATInRevenueAccount': None, 'WipVarianceAccount': None, 'CostInflationAccount': None, 'WHIncomingCenvatAccount': None, 'WHOutgoingCenvatAccount': None, 'StockInTransitAccount': None, 'WipOffsetProfitAndLossAccount': None, 'InventoryOffsetProfitAndLossAccount': None, 'DefaultBin': None, 'DefaultBinEnforced': 'tNO', 'PurchaseBalanceAccount': None, 'ItemCode': 'ACC-0000002', 'ItemCycleCounts': []}], 'ItemPreferredVendors': [], 'ItemLocalizationInfos': [], 'ItemProjects': [], 'ItemDistributionRules': [], 'ItemAttributeGroups': [], 'ItemDepreciationParameters': [], 'ItemPeriodControls': [], 'ItemUnitOfMeasurementCollection': [{'UoMType': 'iutInventory', 'UoMEntry': 1, 'DefaultBarcode': 0, 'DefaultPackage': None, 'Length1': 0.0, 'Length1Unit': None, 'Length2': 0.0, 'Length2Unit': None, 'Width1': 0.0, 'Width1Unit': None, 'Width2': 0.0, 'Width2Unit': None, 'Height1': 0.0, 'Height1Unit': None, 'Height2': 0.0, 'Height2Unit': None, 'Volume': 0.0, 'VolumeUnit': None, 'Weight1': 0.0, 'Weight1Unit': None, 'Weight2': 0.0, 'Weight2Unit': None, 'ItemUoMPackageCollection': []}, {'UoMType': 'iutPurchasing', 'UoMEntry': 1, 'DefaultBarcode': 0, 'DefaultPackage': None, 'Length1': 0.0, 'Length1Unit': None, 'Length2': 0.0, 'Length2Unit': None, 'Width1': 0.0, 'Width1Unit': None, 'Width2': 0.0, 'Width2Unit': None, 'Height1': 0.0, 'Height1Unit': None, 'Height2': 0.0, 'Height2Unit': None, 'Volume': 0.0, 'VolumeUnit': 2, 'Weight1': 0.0, 'Weight1Unit': None, 'Weight2': 0.0, 'Weight2Unit': None, 'ItemUoMPackageCollection': []}, {'UoMType': 'iutPurchasing', 'UoMEntry': 8, 'DefaultBarcode': None, 'DefaultPackage': None, 'Length1': 0.0, 'Length1Unit': None, 'Length2': 0.0, 'Length2Unit': None, 'Width1': 0.0, 'Width1Unit': None, 'Width2': 0.0, 'Width2Unit': None, 'Height1': 0.0, 'Height1Unit': None, 'Height2': 0.0, 'Height2Unit': None, 'Volume': 0.0, 'VolumeUnit': 4, 'Weight1': 0.0, 'Weight1Unit': None, 'Weight2': 0.0, 'Weight2Unit': None, 'ItemUoMPackageCollection': []}, {'UoMType': 'iutSales', 'UoMEntry': 1, 'DefaultBarcode': 0, 'DefaultPackage': None, 'Length1': 0.0, 'Length1Unit': None, 'Length2': 0.0, 'Length2Unit': None, 'Width1': 0.0, 'Width1Unit': None, 'Width2': 0.0, 'Width2Unit': None, 'Height1': 0.0, 'Height1Unit': None, 'Height2': 0.0, 'Height2Unit': None, 'Volume': 0.0, 'VolumeUnit': 2, 'Weight1': 0.0, 'Weight1Unit': None, 'Weight2': 0.0, 'Weight2Unit': None, 'ItemUoMPackageCollection': []}, {'UoMType': 'iutSales', 'UoMEntry': 8, 'DefaultBarcode': None, 'DefaultPackage': None, 'Length1': 0.0, 'Length1Unit': None, 'Length2': 0.0, 'Length2Unit': None, 'Width1': 0.0, 'Width1Unit': None, 'Width2': 0.0, 'Width2Unit': None, 'Height1': 0.0, 'Height1Unit': None, 'Height2': 0.0, 'Height2Unit': None, 'Volume': 0.0, 'VolumeUnit': 4, 'Weight1': 0.0, 'Weight1Unit': None, 'Weight2': 0.0, 'Weight2Unit': None, 'ItemUoMPackageCollection': []}], 'ItemBarCodeCollection': [], 'ItemIntrastatExtension': {'ItemCode': 'ACC-0000002', 'CommodityCode': None, 'SupplementaryUnit': None, 'FactorOfSupplementaryUnit': 0.0, 'ImportRegionState': 0, 'ExportRegionState': 0, 'ImportNatureOfTransaction': None, 'ExportNatureOfTransaction': None, 'ImportStatisticalProcedure': None, 'ExportStatisticalProcedure': None, 'CountryOfOrigin': None, 'ServiceCode': None, 'Type': 'dDocument_Items', 'ServiceSupplyMethod': 'ssmImmediate', 'ServicePaymentMethod': 'spmOther', 'ImportRegionCountry': 'GB', 'ExportRegionCountry': 'GB', 'UseWeightInCalculation': 'tYES', 'IntrastatRelevant': 'tNO', 'StatisticalCode': None}}, {'ItemCode': 'ACC-0000003', 'ItemName': 'Square With 1 Slits 10*10 CM', 'ForeignName': None, 'ItemsGroupCode': 110, 'CustomsGroupCode': -1, 'SalesVATGroup': 'X0', 'BarCode': None, 'VatLiable': 'tYES', 'PurchaseItem': 'tYES', 'SalesItem': 'tNO', 'InventoryItem': 'tYES', 'IncomeAccount': None, 'ExemptIncomeAccount': None, 'ExpanseAccount': None, 'Mainsupplier': None, 'SupplierCatalogNo': None, 'DesiredInventory': 0.0, 'MinInventory': 0.0, 'Picture': None, 'User_Text': None, 'SerialNum': None, 'CommissionPercent': 0.0, 'CommissionSum': 0.0, 'CommissionGroup': 0, 'TreeType': 'iNotATree', 'AssetItem': 'tNO', 'DataExportCode': None, 'Manufacturer': -1, 'QuantityOnStock': 17.0, 'QuantityOrderedFromVendors': 0.0, 'QuantityOrderedByCustomers': 0.0, 'ManageSerialNumbers': 'tNO', 'ManageBatchNumbers': 'tNO', 'Valid': 'tYES', 'ValidFrom': None, 'ValidTo': None, 'ValidRemarks': None, 'Frozen': 'tNO', 'FrozenFrom': None, 'FrozenTo': None, 'FrozenRemarks': None, 'SalesUnit': None, 'SalesItemsPerUnit': 1.0, 'SalesPackagingUnit': None, 'SalesQtyPerPackUnit': 1.0, 'SalesUnitLength': None, 'SalesLengthUnit': None, 'SalesUnitWidth': None, 'SalesWidthUnit': None, 'SalesUnitHeight': None, 'SalesHeightUnit': None, 'SalesUnitVolume': 0.0, 'SalesVolumeUnit': 4, 'SalesUnitWeight': None, 'SalesWeightUnit': None, 'PurchaseUnit': None, 'PurchaseItemsPerUnit': 1.0, 'PurchasePackagingUnit': None, 'PurchaseQtyPerPackUnit': 1.0, 'PurchaseUnitLength': None, 'PurchaseLengthUnit': None, 'PurchaseUnitWidth': None, 'PurchaseWidthUnit': None, 'PurchaseUnitHeight': None, 'PurchaseHeightUnit': None, 'PurchaseUnitVolume': 0.0, 'PurchaseVolumeUnit': 4, 'PurchaseUnitWeight': None, 'PurchaseWeightUnit': None, 'PurchaseVATGroup': 'X1', 'SalesFactor1': 1.0, 'SalesFactor2': 1.0, 'SalesFactor3': 1.0, 'SalesFactor4': 1.0, 'PurchaseFactor1': 1.0, 'PurchaseFactor2': 1.0, 'PurchaseFactor3': 1.0, 'PurchaseFactor4': 1.0, 'MovingAveragePrice': 0.0, 'ForeignRevenuesAccount': None, 'ECRevenuesAccount': None, 'ForeignExpensesAccount': None, 'ECExpensesAccount': None, 'AvgStdPrice': 0.0, 'DefaultWarehouse': None, 'ShipType': None, 'GLMethod': 'glm_ItemClass', 'TaxType': 'tt_Yes', 'MaxInventory': 0.0, 'ManageStockByWarehouse': 'tNO', 'PurchaseHeightUnit1': None, 'PurchaseUnitHeight1': None, 'PurchaseLengthUnit1': None, 'PurchaseUnitLength1': None, 'PurchaseWeightUnit1': None, 'PurchaseUnitWeight1': None, 'PurchaseWidthUnit1': None, 'PurchaseUnitWidth1': None, 'SalesHeightUnit1': None, 'SalesUnitHeight1': None, 'SalesLengthUnit1': None, 'SalesUnitLength1': None, 'SalesWeightUnit1': None, 'SalesUnitWeight1': None, 'SalesWidthUnit1': None, 'SalesUnitWidth1': None, 'ForceSelectionOfSerialNumber': 'tYES', 'ManageSerialNumbersOnReleaseOnly': 'tNO', 'WTLiable': 'tNO', 'CostAccountingMethod': 'bis_MovingAverage', 'SWW': None, 'WarrantyTemplate': '', 'IndirectTax': 'tNO', 'ArTaxCode': None, 'ApTaxCode': None, 'BaseUnitName': None, 'ItemCountryOrg': None, 'IssueMethod': 'im_Backflush', 'SRIAndBatchManageMethod': 'bomm_OnEveryTransaction', 'IsPhantom': 'tNO', 'InventoryUOM': 'Piece', 'PlanningSystem': 'bop_None', 'ProcurementMethod': 'bom_Buy', 'ComponentWarehouse': 'bomcw_BOM', 'OrderIntervals': None, 'OrderMultiple': 0.0, 'LeadTime': None, 'MinOrderQuantity': 0.0, 'ItemType': 'itItems', 'ItemClass': 'itcMaterial', 'OutgoingServiceCode': -1, 'IncomingServiceCode': -1, 'ServiceGroup': -1, 'NCMCode': -1, 'MaterialType': 'mt_FinishedGoods', 'MaterialGroup': -1, 'ProductSource': '', 'Properties1': 'tNO', 'Properties2': 'tNO', 'Properties3': 'tNO', 'Properties4': 'tNO', 'Properties5': 'tNO', 'Properties6': 'tNO', 'Properties7': 'tNO', 'Properties8': 'tNO', 'Properties9': 'tNO', 'Properties10': 'tNO', 'Properties11': 'tNO', 'Properties12': 'tNO', 'Properties13': 'tNO', 'Properties14': 'tNO', 'Properties15': 'tNO', 'Properties16': 'tNO', 'Properties17': 'tNO', 'Properties18': 'tNO', 'Properties19': 'tNO', 'Properties20': 'tNO', 'Properties21': 'tNO', 'Properties22': 'tNO', 'Properties23': 'tNO', 'Properties24': 'tNO', 'Properties25': 'tNO', 'Properties26': 'tNO', 'Properties27': 'tNO', 'Properties28': 'tNO', 'Properties29': 'tNO', 'Properties30': 'tNO', 'Properties31': 'tNO', 'Properties32': 'tNO', 'Properties33': 'tNO', 'Properties34': 'tNO', 'Properties35': 'tNO', 'Properties36': 'tNO', 'Properties37': 'tNO', 'Properties38': 'tNO', 'Properties39': 'tNO', 'Properties40': 'tNO', 'Properties41': 'tNO', 'Properties42': 'tNO', 'Properties43': 'tNO', 'Properties44': 'tNO', 'Properties45': 'tNO', 'Properties46': 'tNO', 'Properties47': 'tNO', 'Properties48': 'tNO', 'Properties49': 'tNO', 'Properties50': 'tNO', 'Properties51': 'tNO', 'Properties52': 'tNO', 'Properties53': 'tNO', 'Properties54': 'tNO', 'Properties55': 'tNO', 'Properties56': 'tNO', 'Properties57': 'tNO', 'Properties58': 'tNO', 'Properties59': 'tNO', 'Properties60': 'tNO', 'Properties61': 'tNO', 'Properties62': 'tNO', 'Properties63': 'tNO', 'Properties64': 'tNO', 'AutoCreateSerialNumbersOnRelease': 'tNO', 'DNFEntry': -1, 'GTSItemSpec': None, 'GTSItemTaxCategory': None, 'FuelID': None, 'BeverageTableCode': '', 'BeverageGroupCode': '', 'BeverageCommercialBrandCode': None, 'Series': 119, 'ToleranceDays': None, 'TypeOfAdvancedRules': 'toarGeneral', 'IssuePrimarilyBy': 'ipbBinLocations', 'NoDiscounts': 'tNO', 'AssetClass': '', 'AssetGroup': '', 'InventoryNumber': '', 'Technician': None, 'Employee': None, 'Location': None, 'AssetStatus': 'New', 'CapitalizationDate': None, 'StatisticalAsset': 'tNO', 'Cession': 'tNO', 'DeactivateAfterUsefulLife': 'tNO', 'ManageByQuantity': 'tNO', 'UoMGroupEntry': 1, 'InventoryUoMEntry': 1, 'DefaultSalesUoMEntry': None, 'DefaultPurchasingUoMEntry': None, 'DepreciationGroup': None, 'AssetSerialNumber': '', 'InventoryWeight': None, 'InventoryWeightUnit': None, 'InventoryWeight1': None, 'InventoryWeightUnit1': None, 'DefaultCountingUnit': 'Piece', 'CountingItemsPerUnit': 1.0, 'DefaultCountingUoMEntry': 1, 'Excisable': 'tNO', 'ChapterID': -1, 'ScsCode': None, 'SpProdType': None, 'ProdStdCost': 0.0, 'InCostRollup': 'tYES', 'VirtualAssetItem': 'tNO', 'EnforceAssetSerialNumbers': 'tNO', 'AttachmentEntry': None, 'LinkedResource': None, 'UpdateDate': '2025-01-26', 'UpdateTime': '09:34:55', 'GSTRelevnt': 'tNO', 'SACEntry': -1, 'GSTTaxCategory': 'gtc_Regular', 'ServiceCategoryEntry': -1, 'CapitalGoodsOnHoldPercent': 0.0, 'CapitalGoodsOnHoldLimit': 0.0, 'AssessableValue': 0.0, 'AssVal4WTR': 0.0, 'SOIExcisable': 'se_NotExcisable', 'TNVED': None, 'ImportedItem': 'tNO', 'PricingUnit': 1, 'CreateDate': '2025-01-26', 'CreateTime': '09:34:55', 'U_MfgH': None, 'U_Collection': None, 'U_OldCode': None, 'U_ItemsCat': None, 'U_NumberofSet': None, 'U_NileCode': None, 'U_TransferProductionLinkExclude': None, 'U_SBO_CodeType': 'GS1', 'U_SBO_EGSCode': None, 'U_ShopifyColor': None, 'U_SalesChannel': None, 'U_ShopifyItemIDLocal': None, 'U_ShopifyItemIDInternational': None, 'U_ParentCommercialName': None, 'ItemPrices': [{'PriceList': 1, 'Price': 0.0, 'Currency': None, 'AdditionalPrice1': 0.0, 'AdditionalCurrency1': None, 'AdditionalPrice2': 0.0, 'AdditionalCurrency2': None, 'BasePriceList': 1, 'Factor': 1.0, 'UoMPrices': []}, {'PriceList': 2, 'Price': 0.0, 'Currency': None, 'AdditionalPrice1': 0.0, 'AdditionalCurrency1': None, 'AdditionalPrice2': 0.0, 'AdditionalCurrency2': None, 'BasePriceList': 1, 'Factor': 0.4, 'UoMPrices': []}, {'PriceList': 3, 'Price': 0.0, 'Currency': None, 'AdditionalPrice1': 0.0, 'AdditionalCurrency1': None, 'AdditionalPrice2': 0.0, 'AdditionalCurrency2': None, 'BasePriceList': 3, 'Factor': 1.0, 'UoMPrices': []}, {'PriceList': 4, 'Price': 0.0, 'Currency': None, 'AdditionalPrice1': 0.0, 'AdditionalCurrency1': None, 'AdditionalPrice2': 0.0, 'AdditionalCurrency2': None, 'BasePriceList': 4, 'Factor': 1.0, 'UoMPrices': []}, {'PriceList': 5, 'Price': 0.0, 'Currency': None, 'AdditionalPrice1': 0.0, 'AdditionalCurrency1': None, 'AdditionalPrice2': 0.0, 'AdditionalCurrency2': None, 'BasePriceList': 5, 'Factor': 1.0, 'UoMPrices': []}, {'PriceList': 6, 'Price': 0.0, 'Currency': None, 'AdditionalPrice1': 0.0, 'AdditionalCurrency1': None, 'AdditionalPrice2': 0.0, 'AdditionalCurrency2': None, 'BasePriceList': 6, 'Factor': 1.0, 'UoMPrices': []}, {'PriceList': 7, 'Price': 0.0, 'Currency': None, 'AdditionalPrice1': 0.0, 'AdditionalCurrency1': None, 'AdditionalPrice2': 0.0, 'AdditionalCurrency2': None, 'BasePriceList': 7, 'Factor': 1.0, 'UoMPrices': []}, {'PriceList': 8, 'Price': 0.0, 'Currency': None, 'AdditionalPrice1': 0.0, 'AdditionalCurrency1': None, 'AdditionalPrice2': 0.0, 'AdditionalCurrency2': None, 'BasePriceList': 8, 'Factor': 1.0, 'UoMPrices': []}, {'PriceList': 9, 'Price': 0.0, 'Currency': None, 'AdditionalPrice1': 0.0, 'AdditionalCurrency1': None, 'AdditionalPrice2': 0.0, 'AdditionalCurrency2': None, 'BasePriceList': 9, 'Factor': 1.0, 'UoMPrices': []}, {'PriceList': 10, 'Price': 0.0, 'Currency': None, 'AdditionalPrice1': 0.0, 'AdditionalCurrency1': None, 'AdditionalPrice2': 0.0, 'AdditionalCurrency2': None, 'BasePriceList': 10, 'Factor': 1.0, 'UoMPrices': []}], 'ItemWarehouseInfoCollection': [{'MinimalStock': 0.0, 'MaximalStock': 0.0, 'MinimalOrder': 0.0, 'StandardAveragePrice': 250.0, 'Locked': 'tNO', 'InventoryAccount': None, 'CostAccount': None, 'TransferAccount': None, 'RevenuesAccount': None, 'VarienceAccount': None, 'DecreasingAccount': None, 'IncreasingAccount': None, 'ReturningAccount': None, 'ExpensesAccount': None, 'EURevenuesAccount': None, 'EUExpensesAccount': None, 'ForeignRevenueAcc': None, 'ForeignExpensAcc': None, 'ExemptIncomeAcc': None, 'PriceDifferenceAcc': None, 'WarehouseCode': '5A', 'InStock': 3.0, 'Committed': 0.0, 'Ordered': 0.0, 'CountedQuantity': 0.0, 'WasCounted': 'tNO', 'UserSignature': 50, 'Counted': 0.0, 'ExpenseClearingAct': None, 'PurchaseCreditAcc': None, 'EUPurchaseCreditAcc': None, 'ForeignPurchaseCreditAcc': None, 'SalesCreditAcc': None, 'SalesCreditEUAcc': None, 'ExemptedCredits': None, 'SalesCreditForeignAcc': None, 'ExpenseOffsettingAccount': None, 'WipAccount': None, 'ExchangeRateDifferencesAcct': None, 'GoodsClearingAcct': None, 'NegativeInventoryAdjustmentAccount': None, 'CostInflationOffsetAccount': None, 'GLDecreaseAcct': None, 'GLIncreaseAcct': None, 'PAReturnAcct': None, 'PurchaseAcct': None, 'PurchaseOffsetAcct': None, 'ShippedGoodsAccount': None, 'StockInflationOffsetAccount': None, 'StockInflationAdjustAccount': None, 'VATInRevenueAccount': None, 'WipVarianceAccount': None, 'CostInflationAccount': None, 'WHIncomingCenvatAccount': None, 'WHOutgoingCenvatAccount': None, 'StockInTransitAccount': None, 'WipOffsetProfitAndLossAccount': None, 'InventoryOffsetProfitAndLossAccount': None, 'DefaultBin': None, 'DefaultBinEnforced': 'tNO', 'PurchaseBalanceAccount': None, 'ItemCode': 'ACC-0000003', 'ItemCycleCounts': []}, {'MinimalStock': 0.0, 'MaximalStock': 0.0, 'MinimalOrder': 0.0, 'StandardAveragePrice': 250.0, 'Locked': 'tNO', 'InventoryAccount': None, 'CostAccount': None, 'TransferAccount': None, 'RevenuesAccount': None, 'VarienceAccount': None, 'DecreasingAccount': None, 'IncreasingAccount': None, 'ReturningAccount': None, 'ExpensesAccount': None, 'EURevenuesAccount': None, 'EUExpensesAccount': None, 'ForeignRevenueAcc': None, 'ForeignExpensAcc': None, 'ExemptIncomeAcc': None, 'PriceDifferenceAcc': None, 'WarehouseCode': 'Arkan', 'InStock': 14.0, 'Committed': 0.0, 'Ordered': 0.0, 'CountedQuantity': 0.0, 'WasCounted': 'tNO', 'UserSignature': 50, 'Counted': 0.0, 'ExpenseClearingAct': None, 'PurchaseCreditAcc': None, 'EUPurchaseCreditAcc': None, 'ForeignPurchaseCreditAcc': None, 'SalesCreditAcc': None, 'SalesCreditEUAcc': None, 'ExemptedCredits': None, 'SalesCreditForeignAcc': None, 'ExpenseOffsettingAccount': None, 'WipAccount': None, 'ExchangeRateDifferencesAcct': None, 'GoodsClearingAcct': None, 'NegativeInventoryAdjustmentAccount': None, 'CostInflationOffsetAccount': None, 'GLDecreaseAcct': None, 'GLIncreaseAcct': None, 'PAReturnAcct': None, 'PurchaseAcct': None, 'PurchaseOffsetAcct': None, 'ShippedGoodsAccount': None, 'StockInflationOffsetAccount': None, 'StockInflationAdjustAccount': None, 'VATInRevenueAccount': None, 'WipVarianceAccount': None, 'CostInflationAccount': None, 'WHIncomingCenvatAccount': None, 'WHOutgoingCenvatAccount': None, 'StockInTransitAccount': None, 'WipOffsetProfitAndLossAccount': None, 'InventoryOffsetProfitAndLossAccount': None, 'DefaultBin': None, 'DefaultBinEnforced': 'tNO', 'PurchaseBalanceAccount': None, 'ItemCode': 'ACC-0000003', 'ItemCycleCounts': []}, {'MinimalStock': 0.0, 'MaximalStock': 0.0, 'MinimalOrder': 0.0, 'StandardAveragePrice': 0.0, 'Locked': 'tNO', 'InventoryAccount': None, 'CostAccount': None, 'TransferAccount': None, 'RevenuesAccount': None, 'VarienceAccount': None, 'DecreasingAccount': None, 'IncreasingAccount': None, 'ReturningAccount': None, 'ExpensesAccount': None, 'EURevenuesAccount': None, 'EUExpensesAccount': None, 'ForeignRevenueAcc': None, 'ForeignExpensAcc': None, 'ExemptIncomeAcc': None, 'PriceDifferenceAcc': None, 'WarehouseCode': 'DIP', 'InStock': 0.0, 'Committed': 0.0, 'Ordered': 0.0, 'CountedQuantity': 0.0, 'WasCounted': 'tNO', 'UserSignature': 50, 'Counted': 0.0, 'ExpenseClearingAct': None, 'PurchaseCreditAcc': None, 'EUPurchaseCreditAcc': None, 'ForeignPurchaseCreditAcc': None, 'SalesCreditAcc': None, 'SalesCreditEUAcc': None, 'ExemptedCredits': None, 'SalesCreditForeignAcc': None, 'ExpenseOffsettingAccount': None, 'WipAccount': None, 'ExchangeRateDifferencesAcct': None, 'GoodsClearingAcct': None, 'NegativeInventoryAdjustmentAccount': None, 'CostInflationOffsetAccount': None, 'GLDecreaseAcct': None, 'GLIncreaseAcct': None, 'PAReturnAcct': None, 'PurchaseAcct': None, 'PurchaseOffsetAcct': None, 'ShippedGoodsAccount': None, 'StockInflationOffsetAccount': None, 'StockInflationAdjustAccount': None, 'VATInRevenueAccount': None, 'WipVarianceAccount': None, 'CostInflationAccount': None, 'WHIncomingCenvatAccount': None, 'WHOutgoingCenvatAccount': None, 'StockInTransitAccount': None, 'WipOffsetProfitAndLossAccount': None, 'InventoryOffsetProfitAndLossAccount': None, 'DefaultBin': None, 'DefaultBinEnforced': 'tNO', 'PurchaseBalanceAccount': None, 'ItemCode': 'ACC-0000003', 'ItemCycleCounts': []}, {'MinimalStock': 0.0, 'MaximalStock': 0.0, 'MinimalOrder': 0.0, 'StandardAveragePrice': 250.0, 'Locked': 'tNO', 'InventoryAccount': None, 'CostAccount': None, 'TransferAccount': None, 'RevenuesAccount': None, 'VarienceAccount': None, 'DecreasingAccount': None, 'IncreasingAccount': None, 'ReturningAccount': None, 'ExpensesAccount': None, 'EURevenuesAccount': None, 'EUExpensesAccount': None, 'ForeignRevenueAcc': None, 'ForeignExpensAcc': None, 'ExemptIncomeAcc': None, 'PriceDifferenceAcc': None, 'WarehouseCode': 'INC', 'InStock': 0.0, 'Committed': 0.0, 'Ordered': 0.0, 'CountedQuantity': 0.0, 'WasCounted': 'tNO', 'UserSignature': 50, 'Counted': 0.0, 'ExpenseClearingAct': None, 'PurchaseCreditAcc': None, 'EUPurchaseCreditAcc': None, 'ForeignPurchaseCreditAcc': None, 'SalesCreditAcc': None, 'SalesCreditEUAcc': None, 'ExemptedCredits': None, 'SalesCreditForeignAcc': None, 'ExpenseOffsettingAccount': None, 'WipAccount': None, 'ExchangeRateDifferencesAcct': None, 'GoodsClearingAcct': None, 'NegativeInventoryAdjustmentAccount': None, 'CostInflationOffsetAccount': None, 'GLDecreaseAcct': None, 'GLIncreaseAcct': None, 'PAReturnAcct': None, 'PurchaseAcct': None, 'PurchaseOffsetAcct': None, 'ShippedGoodsAccount': None, 'StockInflationOffsetAccount': None, 'StockInflationAdjustAccount': None, 'VATInRevenueAccount': None, 'WipVarianceAccount': None, 'CostInflationAccount': None, 'WHIncomingCenvatAccount': None, 'WHOutgoingCenvatAccount': None, 'StockInTransitAccount': None, 'WipOffsetProfitAndLossAccount': None, 'InventoryOffsetProfitAndLossAccount': None, 'DefaultBin': None, 'DefaultBinEnforced': 'tNO', 'PurchaseBalanceAccount': None, 'ItemCode': 'ACC-0000003', 'ItemCycleCounts': []}, {'MinimalStock': 0.0, 'MaximalStock': 0.0, 'MinimalOrder': 0.0, 'StandardAveragePrice': 0.0, 'Locked': 'tNO', 'InventoryAccount': None, 'CostAccount': None, 'TransferAccount': None, 'RevenuesAccount': None, 'VarienceAccount': None, 'DecreasingAccount': None, 'IncreasingAccount': None, 'ReturningAccount': None, 'ExpensesAccount': None, 'EURevenuesAccount': None, 'EUExpensesAccount': None, 'ForeignRevenueAcc': None, 'ForeignExpensAcc': None, 'ExemptIncomeAcc': None, 'PriceDifferenceAcc': None, 'WarehouseCode': 'ONL', 'InStock': 0.0, 'Committed': 0.0, 'Ordered': 0.0, 'CountedQuantity': 0.0, 'WasCounted': 'tNO', 'UserSignature': 50, 'Counted': 0.0, 'ExpenseClearingAct': None, 'PurchaseCreditAcc': None, 'EUPurchaseCreditAcc': None, 'ForeignPurchaseCreditAcc': None, 'SalesCreditAcc': None, 'SalesCreditEUAcc': None, 'ExemptedCredits': None, 'SalesCreditForeignAcc': None, 'ExpenseOffsettingAccount': None, 'WipAccount': None, 'ExchangeRateDifferencesAcct': None, 'GoodsClearingAcct': None, 'NegativeInventoryAdjustmentAccount': None, 'CostInflationOffsetAccount': None, 'GLDecreaseAcct': None, 'GLIncreaseAcct': None, 'PAReturnAcct': None, 'PurchaseAcct': None, 'PurchaseOffsetAcct': None, 'ShippedGoodsAccount': None, 'StockInflationOffsetAccount': None, 'StockInflationAdjustAccount': None, 'VATInRevenueAccount': None, 'WipVarianceAccount': None, 'CostInflationAccount': None, 'WHIncomingCenvatAccount': None, 'WHOutgoingCenvatAccount': None, 'StockInTransitAccount': None, 'WipOffsetProfitAndLossAccount': None, 'InventoryOffsetProfitAndLossAccount': None, 'DefaultBin': None, 'DefaultBinEnforced': 'tNO', 'PurchaseBalanceAccount': None, 'ItemCode': 'ACC-0000003', 'ItemCycleCounts': []}, {'MinimalStock': 0.0, 'MaximalStock': 0.0, 'MinimalOrder': 0.0, 'StandardAveragePrice': 0.0, 'Locked': 'tNO', 'InventoryAccount': None, 'CostAccount': None, 'TransferAccount': None, 'RevenuesAccount': None, 'VarienceAccount': None, 'DecreasingAccount': None, 'IncreasingAccount': None, 'ReturningAccount': None, 'ExpensesAccount': None, 'EURevenuesAccount': None, 'EUExpensesAccount': None, 'ForeignRevenueAcc': None, 'ForeignExpensAcc': None, 'ExemptIncomeAcc': None, 'PriceDifferenceAcc': None, 'WarehouseCode': 'PHO', 'InStock': 0.0, 'Committed': 0.0, 'Ordered': 0.0, 'CountedQuantity': 0.0, 'WasCounted': 'tNO', 'UserSignature': 50, 'Counted': 0.0, 'ExpenseClearingAct': None, 'PurchaseCreditAcc': None, 'EUPurchaseCreditAcc': None, 'ForeignPurchaseCreditAcc': None, 'SalesCreditAcc': None, 'SalesCreditEUAcc': None, 'ExemptedCredits': None, 'SalesCreditForeignAcc': None, 'ExpenseOffsettingAccount': None, 'WipAccount': None, 'ExchangeRateDifferencesAcct': None, 'GoodsClearingAcct': None, 'NegativeInventoryAdjustmentAccount': None, 'CostInflationOffsetAccount': None, 'GLDecreaseAcct': None, 'GLIncreaseAcct': None, 'PAReturnAcct': None, 'PurchaseAcct': None, 'PurchaseOffsetAcct': None, 'ShippedGoodsAccount': None, 'StockInflationOffsetAccount': None, 'StockInflationAdjustAccount': None, 'VATInRevenueAccount': None, 'WipVarianceAccount': None, 'CostInflationAccount': None, 'WHIncomingCenvatAccount': None, 'WHOutgoingCenvatAccount': None, 'StockInTransitAccount': None, 'WipOffsetProfitAndLossAccount': None, 'InventoryOffsetProfitAndLossAccount': None, 'DefaultBin': None, 'DefaultBinEnforced': 'tNO', 'PurchaseBalanceAccount': None, 'ItemCode': 'ACC-0000003', 'ItemCycleCounts': []}, {'MinimalStock': 0.0, 'MaximalStock': 0.0, 'MinimalOrder': 0.0, 'StandardAveragePrice': 0.0, 'Locked': 'tNO', 'InventoryAccount': None, 'CostAccount': None, 'TransferAccount': None, 'RevenuesAccount': None, 'VarienceAccount': None, 'DecreasingAccount': None, 'IncreasingAccount': None, 'ReturningAccount': None, 'ExpensesAccount': None, 'EURevenuesAccount': None, 'EUExpensesAccount': None, 'ForeignRevenueAcc': None, 'ForeignExpensAcc': None, 'ExemptIncomeAcc': None, 'PriceDifferenceAcc': None, 'WarehouseCode': 'PHO-EX', 'InStock': 0.0, 'Committed': 0.0, 'Ordered': 0.0, 'CountedQuantity': 0.0, 'WasCounted': 'tNO', 'UserSignature': 1, 'Counted': 0.0, 'ExpenseClearingAct': None, 'PurchaseCreditAcc': None, 'EUPurchaseCreditAcc': None, 'ForeignPurchaseCreditAcc': None, 'SalesCreditAcc': None, 'SalesCreditEUAcc': None, 'ExemptedCredits': None, 'SalesCreditForeignAcc': None, 'ExpenseOffsettingAccount': None, 'WipAccount': None, 'ExchangeRateDifferencesAcct': None, 'GoodsClearingAcct': None, 'NegativeInventoryAdjustmentAccount': None, 'CostInflationOffsetAccount': None, 'GLDecreaseAcct': None, 'GLIncreaseAcct': None, 'PAReturnAcct': None, 'PurchaseAcct': None, 'PurchaseOffsetAcct': None, 'ShippedGoodsAccount': None, 'StockInflationOffsetAccount': None, 'StockInflationAdjustAccount': None, 'VATInRevenueAccount': None, 'WipVarianceAccount': None, 'CostInflationAccount': None, 'WHIncomingCenvatAccount': None, 'WHOutgoingCenvatAccount': None, 'StockInTransitAccount': None, 'WipOffsetProfitAndLossAccount': None, 'InventoryOffsetProfitAndLossAccount': None, 'DefaultBin': None, 'DefaultBinEnforced': 'tNO', 'PurchaseBalanceAccount': None, 'ItemCode': 'ACC-0000003', 'ItemCycleCounts': []}, {'MinimalStock': 0.0, 'MaximalStock': 0.0, 'MinimalOrder': 0.0, 'StandardAveragePrice': 0.0, 'Locked': 'tNO', 'InventoryAccount': None, 'CostAccount': None, 'TransferAccount': None, 'RevenuesAccount': None, 'VarienceAccount': None, 'DecreasingAccount': None, 'IncreasingAccount': None, 'ReturningAccount': None, 'ExpensesAccount': None, 'EURevenuesAccount': None, 'EUExpensesAccount': None, 'ForeignRevenueAcc': None, 'ForeignExpensAcc': None, 'ExemptIncomeAcc': None, 'PriceDifferenceAcc': None, 'WarehouseCode': 'PHO-IN', 'InStock': 0.0, 'Committed': 0.0, 'Ordered': 0.0, 'CountedQuantity': 0.0, 'WasCounted': 'tNO', 'UserSignature': 1, 'Counted': 0.0, 'ExpenseClearingAct': None, 'PurchaseCreditAcc': None, 'EUPurchaseCreditAcc': None, 'ForeignPurchaseCreditAcc': None, 'SalesCreditAcc': None, 'SalesCreditEUAcc': None, 'ExemptedCredits': None, 'SalesCreditForeignAcc': None, 'ExpenseOffsettingAccount': None, 'WipAccount': None, 'ExchangeRateDifferencesAcct': None, 'GoodsClearingAcct': None, 'NegativeInventoryAdjustmentAccount': None, 'CostInflationOffsetAccount': None, 'GLDecreaseAcct': None, 'GLIncreaseAcct': None, 'PAReturnAcct': None, 'PurchaseAcct': None, 'PurchaseOffsetAcct': None, 'ShippedGoodsAccount': None, 'StockInflationOffsetAccount': None, 'StockInflationAdjustAccount': None, 'VATInRevenueAccount': None, 'WipVarianceAccount': None, 'CostInflationAccount': None, 'WHIncomingCenvatAccount': None, 'WHOutgoingCenvatAccount': None, 'StockInTransitAccount': None, 'WipOffsetProfitAndLossAccount': None, 'InventoryOffsetProfitAndLossAccount': None, 'DefaultBin': None, 'DefaultBinEnforced': 'tNO', 'PurchaseBalanceAccount': None, 'ItemCode': 'ACC-0000003', 'ItemCycleCounts': []}, {'MinimalStock': 0.0, 'MaximalStock': 0.0, 'MinimalOrder': 0.0, 'StandardAveragePrice': 0.0, 'Locked': 'tNO', 'InventoryAccount': None, 'CostAccount': None, 'TransferAccount': None, 'RevenuesAccount': None, 'VarienceAccount': None, 'DecreasingAccount': None, 'IncreasingAccount': None, 'ReturningAccount': None, 'ExpensesAccount': None, 'EURevenuesAccount': None, 'EUExpensesAccount': None, 'ForeignRevenueAcc': None, 'ForeignExpensAcc': None, 'ExemptIncomeAcc': None, 'PriceDifferenceAcc': None, 'WarehouseCode': 'RTW', 'InStock': 0.0, 'Committed': 0.0, 'Ordered': 0.0, 'CountedQuantity': 0.0, 'WasCounted': 'tNO', 'UserSignature': 50, 'Counted': 0.0, 'ExpenseClearingAct': None, 'PurchaseCreditAcc': None, 'EUPurchaseCreditAcc': None, 'ForeignPurchaseCreditAcc': None, 'SalesCreditAcc': None, 'SalesCreditEUAcc': None, 'ExemptedCredits': None, 'SalesCreditForeignAcc': None, 'ExpenseOffsettingAccount': None, 'WipAccount': None, 'ExchangeRateDifferencesAcct': None, 'GoodsClearingAcct': None, 'NegativeInventoryAdjustmentAccount': None, 'CostInflationOffsetAccount': None, 'GLDecreaseAcct': None, 'GLIncreaseAcct': None, 'PAReturnAcct': None, 'PurchaseAcct': None, 'PurchaseOffsetAcct': None, 'ShippedGoodsAccount': None, 'StockInflationOffsetAccount': None, 'StockInflationAdjustAccount': None, 'VATInRevenueAccount': None, 'WipVarianceAccount': None, 'CostInflationAccount': None, 'WHIncomingCenvatAccount': None, 'WHOutgoingCenvatAccount': None, 'StockInTransitAccount': None, 'WipOffsetProfitAndLossAccount': None, 'InventoryOffsetProfitAndLossAccount': None, 'DefaultBin': None, 'DefaultBinEnforced': 'tNO', 'PurchaseBalanceAccount': None, 'ItemCode': 'ACC-0000003', 'ItemCycleCounts': []}, {'MinimalStock': 0.0, 'MaximalStock': 0.0, 'MinimalOrder': 0.0, 'StandardAveragePrice': 0.0, 'Locked': 'tNO', 'InventoryAccount': None, 'CostAccount': None, 'TransferAccount': None, 'RevenuesAccount': None, 'VarienceAccount': None, 'DecreasingAccount': None, 'IncreasingAccount': None, 'ReturningAccount': None, 'ExpensesAccount': None, 'EURevenuesAccount': None, 'EUExpensesAccount': None, 'ForeignRevenueAcc': None, 'ForeignExpensAcc': None, 'ExemptIncomeAcc': None, 'PriceDifferenceAcc': None, 'WarehouseCode': 'RTWH', 'InStock': 0.0, 'Committed': 0.0, 'Ordered': 0.0, 'CountedQuantity': 0.0, 'WasCounted': 'tNO', 'UserSignature': 1, 'Counted': 0.0, 'ExpenseClearingAct': None, 'PurchaseCreditAcc': None, 'EUPurchaseCreditAcc': None, 'ForeignPurchaseCreditAcc': None, 'SalesCreditAcc': None, 'SalesCreditEUAcc': None, 'ExemptedCredits': None, 'SalesCreditForeignAcc': None, 'ExpenseOffsettingAccount': None, 'WipAccount': None, 'ExchangeRateDifferencesAcct': None, 'GoodsClearingAcct': None, 'NegativeInventoryAdjustmentAccount': None, 'CostInflationOffsetAccount': None, 'GLDecreaseAcct': None, 'GLIncreaseAcct': None, 'PAReturnAcct': None, 'PurchaseAcct': None, 'PurchaseOffsetAcct': None, 'ShippedGoodsAccount': None, 'StockInflationOffsetAccount': None, 'StockInflationAdjustAccount': None, 'VATInRevenueAccount': None, 'WipVarianceAccount': None, 'CostInflationAccount': None, 'WHIncomingCenvatAccount': None, 'WHOutgoingCenvatAccount': None, 'StockInTransitAccount': None, 'WipOffsetProfitAndLossAccount': None, 'InventoryOffsetProfitAndLossAccount': None, 'DefaultBin': None, 'DefaultBinEnforced': 'tNO', 'PurchaseBalanceAccount': None, 'ItemCode': 'ACC-0000003', 'ItemCycleCounts': []}, {'MinimalStock': 0.0, 'MaximalStock': 0.0, 'MinimalOrder': 0.0, 'StandardAveragePrice': 0.0, 'Locked': 'tNO', 'InventoryAccount': None, 'CostAccount': None, 'TransferAccount': None, 'RevenuesAccount': None, 'VarienceAccount': None, 'DecreasingAccount': None, 'IncreasingAccount': None, 'ReturningAccount': None, 'ExpensesAccount': None, 'EURevenuesAccount': None, 'EUExpensesAccount': None, 'ForeignRevenueAcc': None, 'ForeignExpensAcc': None, 'ExemptIncomeAcc': None, 'PriceDifferenceAcc': None, 'WarehouseCode': 'SW', 'InStock': 0.0, 'Committed': 0.0, 'Ordered': 0.0, 'CountedQuantity': 0.0, 'WasCounted': 'tNO', 'UserSignature': 50, 'Counted': 0.0, 'ExpenseClearingAct': None, 'PurchaseCreditAcc': None, 'EUPurchaseCreditAcc': None, 'ForeignPurchaseCreditAcc': None, 'SalesCreditAcc': None, 'SalesCreditEUAcc': None, 'ExemptedCredits': None, 'SalesCreditForeignAcc': None, 'ExpenseOffsettingAccount': None, 'WipAccount': None, 'ExchangeRateDifferencesAcct': None, 'GoodsClearingAcct': None, 'NegativeInventoryAdjustmentAccount': None, 'CostInflationOffsetAccount': None, 'GLDecreaseAcct': None, 'GLIncreaseAcct': None, 'PAReturnAcct': None, 'PurchaseAcct': None, 'PurchaseOffsetAcct': None, 'ShippedGoodsAccount': None, 'StockInflationOffsetAccount': None, 'StockInflationAdjustAccount': None, 'VATInRevenueAccount': None, 'WipVarianceAccount': None, 'CostInflationAccount': None, 'WHIncomingCenvatAccount': None, 'WHOutgoingCenvatAccount': None, 'StockInTransitAccount': None, 'WipOffsetProfitAndLossAccount': None, 'InventoryOffsetProfitAndLossAccount': None, 'DefaultBin': None, 'DefaultBinEnforced': 'tNO', 'PurchaseBalanceAccount': None, 'ItemCode': 'ACC-0000003', 'ItemCycleCounts': []}, {'MinimalStock': 0.0, 'MaximalStock': 0.0, 'MinimalOrder': 0.0, 'StandardAveragePrice': 0.0, 'Locked': 'tNO', 'InventoryAccount': None, 'CostAccount': None, 'TransferAccount': None, 'RevenuesAccount': None, 'VarienceAccount': None, 'DecreasingAccount': None, 'IncreasingAccount': None, 'ReturningAccount': None, 'ExpensesAccount': None, 'EURevenuesAccount': None, 'EUExpensesAccount': None, 'ForeignRevenueAcc': None, 'ForeignExpensAcc': None, 'ExemptIncomeAcc': None, 'PriceDifferenceAcc': None, 'WarehouseCode': 'WLS', 'InStock': 0.0, 'Committed': 0.0, 'Ordered': 0.0, 'CountedQuantity': 0.0, 'WasCounted': 'tNO', 'UserSignature': 50, 'Counted': 0.0, 'ExpenseClearingAct': None, 'PurchaseCreditAcc': None, 'EUPurchaseCreditAcc': None, 'ForeignPurchaseCreditAcc': None, 'SalesCreditAcc': None, 'SalesCreditEUAcc': None, 'ExemptedCredits': None, 'SalesCreditForeignAcc': None, 'ExpenseOffsettingAccount': None, 'WipAccount': None, 'ExchangeRateDifferencesAcct': None, 'GoodsClearingAcct': None, 'NegativeInventoryAdjustmentAccount': None, 'CostInflationOffsetAccount': None, 'GLDecreaseAcct': None, 'GLIncreaseAcct': None, 'PAReturnAcct': None, 'PurchaseAcct': None, 'PurchaseOffsetAcct': None, 'ShippedGoodsAccount': None, 'StockInflationOffsetAccount': None, 'StockInflationAdjustAccount': None, 'VATInRevenueAccount': None, 'WipVarianceAccount': None, 'CostInflationAccount': None, 'WHIncomingCenvatAccount': None, 'WHOutgoingCenvatAccount': None, 'StockInTransitAccount': None, 'WipOffsetProfitAndLossAccount': None, 'InventoryOffsetProfitAndLossAccount': None, 'DefaultBin': None, 'DefaultBinEnforced': 'tNO', 'PurchaseBalanceAccount': None, 'ItemCode': 'ACC-0000003', 'ItemCycleCounts': []}, {'MinimalStock': 0.0, 'MaximalStock': 0.0, 'MinimalOrder': 0.0, 'StandardAveragePrice': 0.0, 'Locked': 'tNO', 'InventoryAccount': None, 'CostAccount': None, 'TransferAccount': None, 'RevenuesAccount': None, 'VarienceAccount': None, 'DecreasingAccount': None, 'IncreasingAccount': None, 'ReturningAccount': None, 'ExpensesAccount': None, 'EURevenuesAccount': None, 'EUExpensesAccount': None, 'ForeignRevenueAcc': None, 'ForeignExpensAcc': None, 'ExemptIncomeAcc': None, 'PriceDifferenceAcc': None, 'WarehouseCode': 'WW', 'InStock': 0.0, 'Committed': 0.0, 'Ordered': 0.0, 'CountedQuantity': 0.0, 'WasCounted': 'tNO', 'UserSignature': 50, 'Counted': 0.0, 'ExpenseClearingAct': None, 'PurchaseCreditAcc': None, 'EUPurchaseCreditAcc': None, 'ForeignPurchaseCreditAcc': None, 'SalesCreditAcc': None, 'SalesCreditEUAcc': None, 'ExemptedCredits': None, 'SalesCreditForeignAcc': None, 'ExpenseOffsettingAccount': None, 'WipAccount': None, 'ExchangeRateDifferencesAcct': None, 'GoodsClearingAcct': None, 'NegativeInventoryAdjustmentAccount': None, 'CostInflationOffsetAccount': None, 'GLDecreaseAcct': None, 'GLIncreaseAcct': None, 'PAReturnAcct': None, 'PurchaseAcct': None, 'PurchaseOffsetAcct': None, 'ShippedGoodsAccount': None, 'StockInflationOffsetAccount': None, 'StockInflationAdjustAccount': None, 'VATInRevenueAccount': None, 'WipVarianceAccount': None, 'CostInflationAccount': None, 'WHIncomingCenvatAccount': None, 'WHOutgoingCenvatAccount': None, 'StockInTransitAccount': None, 'WipOffsetProfitAndLossAccount': None, 'InventoryOffsetProfitAndLossAccount': None, 'DefaultBin': None, 'DefaultBinEnforced': 'tNO', 'PurchaseBalanceAccount': None, 'ItemCode': 'ACC-0000003', 'ItemCycleCounts': []}, {'MinimalStock': 0.0, 'MaximalStock': 0.0, 'MinimalOrder': 0.0, 'StandardAveragePrice': 0.0, 'Locked': 'tNO', 'InventoryAccount': None, 'CostAccount': None, 'TransferAccount': None, 'RevenuesAccount': None, 'VarienceAccount': None, 'DecreasingAccount': None, 'IncreasingAccount': None, 'ReturningAccount': None, 'ExpensesAccount': None, 'EURevenuesAccount': None, 'EUExpensesAccount': None, 'ForeignRevenueAcc': None, 'ForeignExpensAcc': None, 'ExemptIncomeAcc': None, 'PriceDifferenceAcc': None, 'WarehouseCode': 'WW-CON', 'InStock': 0.0, 'Committed': 0.0, 'Ordered': 0.0, 'CountedQuantity': 0.0, 'WasCounted': 'tNO', 'UserSignature': 50, 'Counted': 0.0, 'ExpenseClearingAct': None, 'PurchaseCreditAcc': None, 'EUPurchaseCreditAcc': None, 'ForeignPurchaseCreditAcc': None, 'SalesCreditAcc': None, 'SalesCreditEUAcc': None, 'ExemptedCredits': None, 'SalesCreditForeignAcc': None, 'ExpenseOffsettingAccount': None, 'WipAccount': None, 'ExchangeRateDifferencesAcct': None, 'GoodsClearingAcct': None, 'NegativeInventoryAdjustmentAccount': None, 'CostInflationOffsetAccount': None, 'GLDecreaseAcct': None, 'GLIncreaseAcct': None, 'PAReturnAcct': None, 'PurchaseAcct': None, 'PurchaseOffsetAcct': None, 'ShippedGoodsAccount': None, 'StockInflationOffsetAccount': None, 'StockInflationAdjustAccount': None, 'VATInRevenueAccount': None, 'WipVarianceAccount': None, 'CostInflationAccount': None, 'WHIncomingCenvatAccount': None, 'WHOutgoingCenvatAccount': None, 'StockInTransitAccount': None, 'WipOffsetProfitAndLossAccount': None, 'InventoryOffsetProfitAndLossAccount': None, 'DefaultBin': None, 'DefaultBinEnforced': 'tNO', 'PurchaseBalanceAccount': None, 'ItemCode': 'ACC-0000003', 'ItemCycleCounts': []}, {'MinimalStock': 0.0, 'MaximalStock': 0.0, 'MinimalOrder': 0.0, 'StandardAveragePrice': 0.0, 'Locked': 'tNO', 'InventoryAccount': None, 'CostAccount': None, 'TransferAccount': None, 'RevenuesAccount': None, 'VarienceAccount': None, 'DecreasingAccount': None, 'IncreasingAccount': None, 'ReturningAccount': None, 'ExpensesAccount': None, 'EURevenuesAccount': None, 'EUExpensesAccount': None, 'ForeignRevenueAcc': None, 'ForeignExpensAcc': None, 'ExemptIncomeAcc': None, 'PriceDifferenceAcc': None, 'WarehouseCode': 'WW-DAM', 'InStock': 0.0, 'Committed': 0.0, 'Ordered': 0.0, 'CountedQuantity': 0.0, 'WasCounted': 'tNO', 'UserSignature': 50, 'Counted': 0.0, 'ExpenseClearingAct': None, 'PurchaseCreditAcc': None, 'EUPurchaseCreditAcc': None, 'ForeignPurchaseCreditAcc': None, 'SalesCreditAcc': None, 'SalesCreditEUAcc': None, 'ExemptedCredits': None, 'SalesCreditForeignAcc': None, 'ExpenseOffsettingAccount': None, 'WipAccount': None, 'ExchangeRateDifferencesAcct': None, 'GoodsClearingAcct': None, 'NegativeInventoryAdjustmentAccount': None, 'CostInflationOffsetAccount': None, 'GLDecreaseAcct': None, 'GLIncreaseAcct': None, 'PAReturnAcct': None, 'PurchaseAcct': None, 'PurchaseOffsetAcct': None, 'ShippedGoodsAccount': None, 'StockInflationOffsetAccount': None, 'StockInflationAdjustAccount': None, 'VATInRevenueAccount': None, 'WipVarianceAccount': None, 'CostInflationAccount': None, 'WHIncomingCenvatAccount': None, 'WHOutgoingCenvatAccount': None, 'StockInTransitAccount': None, 'WipOffsetProfitAndLossAccount': None, 'InventoryOffsetProfitAndLossAccount': None, 'DefaultBin': None, 'DefaultBinEnforced': 'tNO', 'PurchaseBalanceAccount': None, 'ItemCode': 'ACC-0000003', 'ItemCycleCounts': []}, {'MinimalStock': 0.0, 'MaximalStock': 0.0, 'MinimalOrder': 0.0, 'StandardAveragePrice': 0.0, 'Locked': 'tNO', 'InventoryAccount': None, 'CostAccount': None, 'TransferAccount': None, 'RevenuesAccount': None, 'VarienceAccount': None, 'DecreasingAccount': None, 'IncreasingAccount': None, 'ReturningAccount': None, 'ExpensesAccount': None, 'EURevenuesAccount': None, 'EUExpensesAccount': None, 'ForeignRevenueAcc': None, 'ForeignExpensAcc': None, 'ExemptIncomeAcc': None, 'PriceDifferenceAcc': None, 'WarehouseCode': 'WW-REP', 'InStock': 0.0, 'Committed': 0.0, 'Ordered': 0.0, 'CountedQuantity': 0.0, 'WasCounted': 'tNO', 'UserSignature': 50, 'Counted': 0.0, 'ExpenseClearingAct': None, 'PurchaseCreditAcc': None, 'EUPurchaseCreditAcc': None, 'ForeignPurchaseCreditAcc': None, 'SalesCreditAcc': None, 'SalesCreditEUAcc': None, 'ExemptedCredits': None, 'SalesCreditForeignAcc': None, 'ExpenseOffsettingAccount': None, 'WipAccount': None, 'ExchangeRateDifferencesAcct': None, 'GoodsClearingAcct': None, 'NegativeInventoryAdjustmentAccount': None, 'CostInflationOffsetAccount': None, 'GLDecreaseAcct': None, 'GLIncreaseAcct': None, 'PAReturnAcct': None, 'PurchaseAcct': None, 'PurchaseOffsetAcct': None, 'ShippedGoodsAccount': None, 'StockInflationOffsetAccount': None, 'StockInflationAdjustAccount': None, 'VATInRevenueAccount': None, 'WipVarianceAccount': None, 'CostInflationAccount': None, 'WHIncomingCenvatAccount': None, 'WHOutgoingCenvatAccount': None, 'StockInTransitAccount': None, 'WipOffsetProfitAndLossAccount': None, 'InventoryOffsetProfitAndLossAccount': None, 'DefaultBin': None, 'DefaultBinEnforced': 'tNO', 'PurchaseBalanceAccount': None, 'ItemCode': 'ACC-0000003', 'ItemCycleCounts': []}, {'MinimalStock': 0.0, 'MaximalStock': 0.0, 'MinimalOrder': 0.0, 'StandardAveragePrice': 0.0, 'Locked': 'tNO', 'InventoryAccount': None, 'CostAccount': None, 'TransferAccount': None, 'RevenuesAccount': None, 'VarienceAccount': None, 'DecreasingAccount': None, 'IncreasingAccount': None, 'ReturningAccount': None, 'ExpensesAccount': None, 'EURevenuesAccount': None, 'EUExpensesAccount': None, 'ForeignRevenueAcc': None, 'ForeignExpensAcc': None, 'ExemptIncomeAcc': None, 'PriceDifferenceAcc': None, 'WarehouseCode': 'WW-SAM', 'InStock': 0.0, 'Committed': 0.0, 'Ordered': 0.0, 'CountedQuantity': 0.0, 'WasCounted': 'tNO', 'UserSignature': 50, 'Counted': 0.0, 'ExpenseClearingAct': None, 'PurchaseCreditAcc': None, 'EUPurchaseCreditAcc': None, 'ForeignPurchaseCreditAcc': None, 'SalesCreditAcc': None, 'SalesCreditEUAcc': None, 'ExemptedCredits': None, 'SalesCreditForeignAcc': None, 'ExpenseOffsettingAccount': None, 'WipAccount': None, 'ExchangeRateDifferencesAcct': None, 'GoodsClearingAcct': None, 'NegativeInventoryAdjustmentAccount': None, 'CostInflationOffsetAccount': None, 'GLDecreaseAcct': None, 'GLIncreaseAcct': None, 'PAReturnAcct': None, 'PurchaseAcct': None, 'PurchaseOffsetAcct': None, 'ShippedGoodsAccount': None, 'StockInflationOffsetAccount': None, 'StockInflationAdjustAccount': None, 'VATInRevenueAccount': None, 'WipVarianceAccount': None, 'CostInflationAccount': None, 'WHIncomingCenvatAccount': None, 'WHOutgoingCenvatAccount': None, 'StockInTransitAccount': None, 'WipOffsetProfitAndLossAccount': None, 'InventoryOffsetProfitAndLossAccount': None, 'DefaultBin': None, 'DefaultBinEnforced': 'tNO', 'PurchaseBalanceAccount': None, 'ItemCode': 'ACC-0000003', 'ItemCycleCounts': []}, {'MinimalStock': 0.0, 'MaximalStock': 0.0, 'MinimalOrder': 0.0, 'StandardAveragePrice': 0.0, 'Locked': 'tNO', 'InventoryAccount': None, 'CostAccount': None, 'TransferAccount': None, 'RevenuesAccount': None, 'VarienceAccount': None, 'DecreasingAccount': None, 'IncreasingAccount': None, 'ReturningAccount': None, 'ExpensesAccount': None, 'EURevenuesAccount': None, 'EUExpensesAccount': None, 'ForeignRevenueAcc': None, 'ForeignExpensAcc': None, 'ExemptIncomeAcc': None, 'PriceDifferenceAcc': None, 'WarehouseCode': 'WW-WIP', 'InStock': 0.0, 'Committed': 0.0, 'Ordered': 0.0, 'CountedQuantity': 0.0, 'WasCounted': 'tNO', 'UserSignature': 50, 'Counted': 0.0, 'ExpenseClearingAct': None, 'PurchaseCreditAcc': None, 'EUPurchaseCreditAcc': None, 'ForeignPurchaseCreditAcc': None, 'SalesCreditAcc': None, 'SalesCreditEUAcc': None, 'ExemptedCredits': None, 'SalesCreditForeignAcc': None, 'ExpenseOffsettingAccount': None, 'WipAccount': None, 'ExchangeRateDifferencesAcct': None, 'GoodsClearingAcct': None, 'NegativeInventoryAdjustmentAccount': None, 'CostInflationOffsetAccount': None, 'GLDecreaseAcct': None, 'GLIncreaseAcct': None, 'PAReturnAcct': None, 'PurchaseAcct': None, 'PurchaseOffsetAcct': None, 'ShippedGoodsAccount': None, 'StockInflationOffsetAccount': None, 'StockInflationAdjustAccount': None, 'VATInRevenueAccount': None, 'WipVarianceAccount': None, 'CostInflationAccount': None, 'WHIncomingCenvatAccount': None, 'WHOutgoingCenvatAccount': None, 'StockInTransitAccount': None, 'WipOffsetProfitAndLossAccount': None, 'InventoryOffsetProfitAndLossAccount': None, 'DefaultBin': None, 'DefaultBinEnforced': 'tNO', 'PurchaseBalanceAccount': None, 'ItemCode': 'ACC-0000003', 'ItemCycleCounts': []}, {'MinimalStock': 0.0, 'MaximalStock': 0.0, 'MinimalOrder': 0.0, 'StandardAveragePrice': 0.0, 'Locked': 'tNO', 'InventoryAccount': None, 'CostAccount': None, 'TransferAccount': None, 'RevenuesAccount': None, 'VarienceAccount': None, 'DecreasingAccount': None, 'IncreasingAccount': None, 'ReturningAccount': None, 'ExpensesAccount': None, 'EURevenuesAccount': None, 'EUExpensesAccount': None, 'ForeignRevenueAcc': None, 'ForeignExpensAcc': None, 'ExemptIncomeAcc': None, 'PriceDifferenceAcc': None, 'WarehouseCode': 'ZW', 'InStock': 0.0, 'Committed': 0.0, 'Ordered': 0.0, 'CountedQuantity': 0.0, 'WasCounted': 'tNO', 'UserSignature': 50, 'Counted': 0.0, 'ExpenseClearingAct': None, 'PurchaseCreditAcc': None, 'EUPurchaseCreditAcc': None, 'ForeignPurchaseCreditAcc': None, 'SalesCreditAcc': None, 'SalesCreditEUAcc': None, 'ExemptedCredits': None, 'SalesCreditForeignAcc': None, 'ExpenseOffsettingAccount': None, 'WipAccount': None, 'ExchangeRateDifferencesAcct': None, 'GoodsClearingAcct': None, 'NegativeInventoryAdjustmentAccount': None, 'CostInflationOffsetAccount': None, 'GLDecreaseAcct': None, 'GLIncreaseAcct': None, 'PAReturnAcct': None, 'PurchaseAcct': None, 'PurchaseOffsetAcct': None, 'ShippedGoodsAccount': None, 'StockInflationOffsetAccount': None, 'StockInflationAdjustAccount': None, 'VATInRevenueAccount': None, 'WipVarianceAccount': None, 'CostInflationAccount': None, 'WHIncomingCenvatAccount': None, 'WHOutgoingCenvatAccount': None, 'StockInTransitAccount': None, 'WipOffsetProfitAndLossAccount': None, 'InventoryOffsetProfitAndLossAccount': None, 'DefaultBin': None, 'DefaultBinEnforced': 'tNO', 'PurchaseBalanceAccount': None, 'ItemCode': 'ACC-0000003', 'ItemCycleCounts': []}], 'ItemPreferredVendors': [], 'ItemLocalizationInfos': [], 'ItemProjects': [], 'ItemDistributionRules': [], 'ItemAttributeGroups': [], 'ItemDepreciationParameters': [], 'ItemPeriodControls': [], 'ItemUnitOfMeasurementCollection': [{'UoMType': 'iutInventory', 'UoMEntry': 1, 'DefaultBarcode': 0, 'DefaultPackage': None, 'Length1': 0.0, 'Length1Unit': None, 'Length2': 0.0, 'Length2Unit': None, 'Width1': 0.0, 'Width1Unit': None, 'Width2': 0.0, 'Width2Unit': None, 'Height1': 0.0, 'Height1Unit': None, 'Height2': 0.0, 'Height2Unit': None, 'Volume': 0.0, 'VolumeUnit': None, 'Weight1': 0.0, 'Weight1Unit': None, 'Weight2': 0.0, 'Weight2Unit': None, 'ItemUoMPackageCollection': []}, {'UoMType': 'iutPurchasing', 'UoMEntry': 1, 'DefaultBarcode': 0, 'DefaultPackage': None, 'Length1': 0.0, 'Length1Unit': None, 'Length2': 0.0, 'Length2Unit': None, 'Width1': 0.0, 'Width1Unit': None, 'Width2': 0.0, 'Width2Unit': None, 'Height1': 0.0, 'Height1Unit': None, 'Height2': 0.0, 'Height2Unit': None, 'Volume': 0.0, 'VolumeUnit': 2, 'Weight1': 0.0, 'Weight1Unit': None, 'Weight2': 0.0, 'Weight2Unit': None, 'ItemUoMPackageCollection': []}, {'UoMType': 'iutPurchasing', 'UoMEntry': 8, 'DefaultBarcode': None, 'DefaultPackage': None, 'Length1': 0.0, 'Length1Unit': None, 'Length2': 0.0, 'Length2Unit': None, 'Width1': 0.0, 'Width1Unit': None, 'Width2': 0.0, 'Width2Unit': None, 'Height1': 0.0, 'Height1Unit': None, 'Height2': 0.0, 'Height2Unit': None, 'Volume': 0.0, 'VolumeUnit': 4, 'Weight1': 0.0, 'Weight1Unit': None, 'Weight2': 0.0, 'Weight2Unit': None, 'ItemUoMPackageCollection': []}, {'UoMType': 'iutSales', 'UoMEntry': 1, 'DefaultBarcode': 0, 'DefaultPackage': None, 'Length1': 0.0, 'Length1Unit': None, 'Length2': 0.0, 'Length2Unit': None, 'Width1': 0.0, 'Width1Unit': None, 'Width2': 0.0, 'Width2Unit': None, 'Height1': 0.0, 'Height1Unit': None, 'Height2': 0.0, 'Height2Unit': None, 'Volume': 0.0, 'VolumeUnit': 2, 'Weight1': 0.0, 'Weight1Unit': None, 'Weight2': 0.0, 'Weight2Unit': None, 'ItemUoMPackageCollection': []}, {'UoMType': 'iutSales', 'UoMEntry': 8, 'DefaultBarcode': None, 'DefaultPackage': None, 'Length1': 0.0, 'Length1Unit': None, 'Length2': 0.0, 'Length2Unit': None, 'Width1': 0.0, 'Width1Unit': None, 'Width2': 0.0, 'Width2Unit': None, 'Height1': 0.0, 'Height1Unit': None, 'Height2': 0.0, 'Height2Unit': None, 'Volume': 0.0, 'VolumeUnit': 4, 'Weight1': 0.0, 'Weight1Unit': None, 'Weight2': 0.0, 'Weight2Unit': None, 'ItemUoMPackageCollection': []}], 'ItemBarCodeCollection': [], 'ItemIntrastatExtension': {'ItemCode': 'ACC-0000003', 'CommodityCode': None, 'SupplementaryUnit': None, 'FactorOfSupplementaryUnit': 0.0, 'ImportRegionState': 0, 'ExportRegionState': 0, 'ImportNatureOfTransaction': None, 'ExportNatureOfTransaction': None, 'ImportStatisticalProcedure': None, 'ExportStatisticalProcedure': None, 'CountryOfOrigin': None, 'ServiceCode': None, 'Type': 'dDocument_Items', 'ServiceSupplyMethod': 'ssmImmediate', 'ServicePaymentMethod': 'spmOther', 'ImportRegionCountry': 'GB', 'ExportRegionCountry': 'GB', 'UseWeightInCalculation': 'tYES', 'IntrastatRelevant': 'tNO', 'StatisticalCode': None}}, {'ItemCode': 'ACC-0000004', 'ItemName': 'Earring / Bracelet Plates 10*10 CM', 'ForeignName': None, 'ItemsGroupCode': 110, 'CustomsGroupCode': -1, 'SalesVATGroup': 'X0', 'BarCode': None, 'VatLiable': 'tYES', 'PurchaseItem': 'tYES', 'SalesItem': 'tNO', 'InventoryItem': 'tYES', 'IncomeAccount': None, 'ExemptIncomeAccount': None, 'ExpanseAccount': None, 'Mainsupplier': None, 'SupplierCatalogNo': None, 'DesiredInventory': 0.0, 'MinInventory': 0.0, 'Picture': None, 'User_Text': None, 'SerialNum': None, 'CommissionPercent': 0.0, 'CommissionSum': 0.0, 'CommissionGroup': 0, 'TreeType': 'iNotATree', 'AssetItem': 'tNO', 'DataExportCode': None, 'Manufacturer': -1, 'QuantityOnStock': 35.0, 'QuantityOrderedFromVendors': 0.0, 'QuantityOrderedByCustomers': 0.0, 'ManageSerialNumbers': 'tNO', 'ManageBatchNumbers': 'tNO', 'Valid': 'tYES', 'ValidFrom': None, 'ValidTo': None, 'ValidRemarks': None, 'Frozen': 'tNO', 'FrozenFrom': None, 'FrozenTo': None, 'FrozenRemarks': None, 'SalesUnit': None, 'SalesItemsPerUnit': 1.0, 'SalesPackagingUnit': None, 'SalesQtyPerPackUnit': 1.0, 'SalesUnitLength': None, 'SalesLengthUnit': None, 'SalesUnitWidth': None, 'SalesWidthUnit': None, 'SalesUnitHeight': None, 'SalesHeightUnit': None, 'SalesUnitVolume': 0.0, 'SalesVolumeUnit': 4, 'SalesUnitWeight': None, 'SalesWeightUnit': None, 'PurchaseUnit': None, 'PurchaseItemsPerUnit': 1.0, 'PurchasePackagingUnit': None, 'PurchaseQtyPerPackUnit': 1.0, 'PurchaseUnitLength': None, 'PurchaseLengthUnit': None, 'PurchaseUnitWidth': None, 'PurchaseWidthUnit': None, 'PurchaseUnitHeight': None, 'PurchaseHeightUnit': None, 'PurchaseUnitVolume': 0.0, 'PurchaseVolumeUnit': 4, 'PurchaseUnitWeight': None, 'PurchaseWeightUnit': None, 'PurchaseVATGroup': 'X1', 'SalesFactor1': 1.0, 'SalesFactor2': 1.0, 'SalesFactor3': 1.0, 'SalesFactor4': 1.0, 'PurchaseFactor1': 1.0, 'PurchaseFactor2': 1.0, 'PurchaseFactor3': 1.0, 'PurchaseFactor4': 1.0, 'MovingAveragePrice': 0.0, 'ForeignRevenuesAccount': None, 'ECRevenuesAccount': None, 'ForeignExpensesAccount': None, 'ECExpensesAccount': None, 'AvgStdPrice': 0.0, 'DefaultWarehouse': None, 'ShipType': None, 'GLMethod': 'glm_ItemClass', 'TaxType': 'tt_Yes', 'MaxInventory': 0.0, 'ManageStockByWarehouse': 'tNO', 'PurchaseHeightUnit1': None, 'PurchaseUnitHeight1': None, 'PurchaseLengthUnit1': None, 'PurchaseUnitLength1': None, 'PurchaseWeightUnit1': None, 'PurchaseUnitWeight1': None, 'PurchaseWidthUnit1': None, 'PurchaseUnitWidth1': None, 'SalesHeightUnit1': None, 'SalesUnitHeight1': None, 'SalesLengthUnit1': None, 'SalesUnitLength1': None, 'SalesWeightUnit1': None, 'SalesUnitWeight1': None, 'SalesWidthUnit1': None, 'SalesUnitWidth1': None, 'ForceSelectionOfSerialNumber': 'tYES', 'ManageSerialNumbersOnReleaseOnly': 'tNO', 'WTLiable': 'tNO', 'CostAccountingMethod': 'bis_MovingAverage', 'SWW': None, 'WarrantyTemplate': '', 'IndirectTax': 'tNO', 'ArTaxCode': None, 'ApTaxCode': None, 'BaseUnitName': None, 'ItemCountryOrg': None, 'IssueMethod': 'im_Backflush', 'SRIAndBatchManageMethod': 'bomm_OnEveryTransaction', 'IsPhantom': 'tNO', 'InventoryUOM': 'Piece', 'PlanningSystem': 'bop_None', 'ProcurementMethod': 'bom_Buy', 'ComponentWarehouse': 'bomcw_BOM', 'OrderIntervals': None, 'OrderMultiple': 0.0, 'LeadTime': None, 'MinOrderQuantity': 0.0, 'ItemType': 'itItems', 'ItemClass': 'itcMaterial', 'OutgoingServiceCode': -1, 'IncomingServiceCode': -1, 'ServiceGroup': -1, 'NCMCode': -1, 'MaterialType': 'mt_FinishedGoods', 'MaterialGroup': -1, 'ProductSource': '', 'Properties1': 'tNO', 'Properties2': 'tNO', 'Properties3': 'tNO', 'Properties4': 'tNO', 'Properties5': 'tNO', 'Properties6': 'tNO', 'Properties7': 'tNO', 'Properties8': 'tNO', 'Properties9': 'tNO', 'Properties10': 'tNO', 'Properties11': 'tNO', 'Properties12': 'tNO', 'Properties13': 'tNO', 'Properties14': 'tNO', 'Properties15': 'tNO', 'Properties16': 'tNO', 'Properties17': 'tNO', 'Properties18': 'tNO', 'Properties19': 'tNO', 'Properties20': 'tNO', 'Properties21': 'tNO', 'Properties22': 'tNO', 'Properties23': 'tNO', 'Properties24': 'tNO', 'Properties25': 'tNO', 'Properties26': 'tNO', 'Properties27': 'tNO', 'Properties28': 'tNO', 'Properties29': 'tNO', 'Properties30': 'tNO', 'Properties31': 'tNO', 'Properties32': 'tNO', 'Properties33': 'tNO', 'Properties34': 'tNO', 'Properties35': 'tNO', 'Properties36': 'tNO', 'Properties37': 'tNO', 'Properties38': 'tNO', 'Properties39': 'tNO', 'Properties40': 'tNO', 'Properties41': 'tNO', 'Properties42': 'tNO', 'Properties43': 'tNO', 'Properties44': 'tNO', 'Properties45': 'tNO', 'Properties46': 'tNO', 'Properties47': 'tNO', 'Properties48': 'tNO', 'Properties49': 'tNO', 'Properties50': 'tNO', 'Properties51': 'tNO', 'Properties52': 'tNO', 'Properties53': 'tNO', 'Properties54': 'tNO', 'Properties55': 'tNO', 'Properties56': 'tNO', 'Properties57': 'tNO', 'Properties58': 'tNO', 'Properties59': 'tNO', 'Properties60': 'tNO', 'Properties61': 'tNO', 'Properties62': 'tNO', 'Properties63': 'tNO', 'Properties64': 'tNO', 'AutoCreateSerialNumbersOnRelease': 'tNO', 'DNFEntry': -1, 'GTSItemSpec': None, 'GTSItemTaxCategory': None, 'FuelID': None, 'BeverageTableCode': '', 'BeverageGroupCode': '', 'BeverageCommercialBrandCode': None, 'Series': 119, 'ToleranceDays': None, 'TypeOfAdvancedRules': 'toarGeneral', 'IssuePrimarilyBy': 'ipbBinLocations', 'NoDiscounts': 'tNO', 'AssetClass': '', 'AssetGroup': '', 'InventoryNumber': '', 'Technician': None, 'Employee': None, 'Location': None, 'AssetStatus': 'New', 'CapitalizationDate': None, 'StatisticalAsset': 'tNO', 'Cession': 'tNO', 'DeactivateAfterUsefulLife': 'tNO', 'ManageByQuantity': 'tNO', 'UoMGroupEntry': 1, 'InventoryUoMEntry': 1, 'DefaultSalesUoMEntry': None, 'DefaultPurchasingUoMEntry': None, 'DepreciationGroup': None, 'AssetSerialNumber': '', 'InventoryWeight': None, 'InventoryWeightUnit': None, 'InventoryWeight1': None, 'InventoryWeightUnit1': None, 'DefaultCountingUnit': 'Piece', 'CountingItemsPerUnit': 1.0, 'DefaultCountingUoMEntry': 1, 'Excisable': 'tNO', 'ChapterID': -1, 'ScsCode': None, 'SpProdType': None, 'ProdStdCost': 0.0, 'InCostRollup': 'tYES', 'VirtualAssetItem': 'tNO', 'EnforceAssetSerialNumbers': 'tNO', 'AttachmentEntry': None, 'LinkedResource': None, 'UpdateDate': '2025-01-26', 'UpdateTime': '09:35:56', 'GSTRelevnt': 'tNO', 'SACEntry': -1, 'GSTTaxCategory': 'gtc_Regular', 'ServiceCategoryEntry': -1, 'CapitalGoodsOnHoldPercent': 0.0, 'CapitalGoodsOnHoldLimit': 0.0, 'AssessableValue': 0.0, 'AssVal4WTR': 0.0, 'SOIExcisable': 'se_NotExcisable', 'TNVED': None, 'ImportedItem': 'tNO', 'PricingUnit': 1, 'CreateDate': '2025-01-26', 'CreateTime': '09:35:56', 'U_MfgH': None, 'U_Collection': None, 'U_OldCode': None, 'U_ItemsCat': None, 'U_NumberofSet': None, 'U_NileCode': None, 'U_TransferProductionLinkExclude': None, 'U_SBO_CodeType': 'GS1', 'U_SBO_EGSCode': None, 'U_ShopifyColor': None, 'U_SalesChannel': None, 'U_ShopifyItemIDLocal': None, 'U_ShopifyItemIDInternational': None, 'U_ParentCommercialName': None, 'ItemPrices': [{'PriceList': 1, 'Price': 0.0, 'Currency': None, 'AdditionalPrice1': 0.0, 'AdditionalCurrency1': None, 'AdditionalPrice2': 0.0, 'AdditionalCurrency2': None, 'BasePriceList': 1, 'Factor': 1.0, 'UoMPrices': []}, {'PriceList': 2, 'Price': 0.0, 'Currency': None, 'AdditionalPrice1': 0.0, 'AdditionalCurrency1': None, 'AdditionalPrice2': 0.0, 'AdditionalCurrency2': None, 'BasePriceList': 1, 'Factor': 0.4, 'UoMPrices': []}, {'PriceList': 3, 'Price': 0.0, 'Currency': None, 'AdditionalPrice1': 0.0, 'AdditionalCurrency1': None, 'AdditionalPrice2': 0.0, 'AdditionalCurrency2': None, 'BasePriceList': 3, 'Factor': 1.0, 'UoMPrices': []}, {'PriceList': 4, 'Price': 0.0, 'Currency': None, 'AdditionalPrice1': 0.0, 'AdditionalCurrency1': None, 'AdditionalPrice2': 0.0, 'AdditionalCurrency2': None, 'BasePriceList': 4, 'Factor': 1.0, 'UoMPrices': []}, {'PriceList': 5, 'Price': 0.0, 'Currency': None, 'AdditionalPrice1': 0.0, 'AdditionalCurrency1': None, 'AdditionalPrice2': 0.0, 'AdditionalCurrency2': None, 'BasePriceList': 5, 'Factor': 1.0, 'UoMPrices': []}, {'PriceList': 6, 'Price': 0.0, 'Currency': None, 'AdditionalPrice1': 0.0, 'AdditionalCurrency1': None, 'AdditionalPrice2': 0.0, 'AdditionalCurrency2': None, 'BasePriceList': 6, 'Factor': 1.0, 'UoMPrices': []}, {'PriceList': 7, 'Price': 0.0, 'Currency': None, 'AdditionalPrice1': 0.0, 'AdditionalCurrency1': None, 'AdditionalPrice2': 0.0, 'AdditionalCurrency2': None, 'BasePriceList': 7, 'Factor': 1.0, 'UoMPrices': []}, {'PriceList': 8, 'Price': 0.0, 'Currency': None, 'AdditionalPrice1': 0.0, 'AdditionalCurrency1': None, 'AdditionalPrice2': 0.0, 'AdditionalCurrency2': None, 'BasePriceList': 8, 'Factor': 1.0, 'UoMPrices': []}, {'PriceList': 9, 'Price': 0.0, 'Currency': None, 'AdditionalPrice1': 0.0, 'AdditionalCurrency1': None, 'AdditionalPrice2': 0.0, 'AdditionalCurrency2': None, 'BasePriceList': 9, 'Factor': 1.0, 'UoMPrices': []}, {'PriceList': 10, 'Price': 0.0, 'Currency': None, 'AdditionalPrice1': 0.0, 'AdditionalCurrency1': None, 'AdditionalPrice2': 0.0, 'AdditionalCurrency2': None, 'BasePriceList': 10, 'Factor': 1.0, 'UoMPrices': []}], 'ItemWarehouseInfoCollection': [{'MinimalStock': 0.0, 'MaximalStock': 0.0, 'MinimalOrder': 0.0, 'StandardAveragePrice': 180.0, 'Locked': 'tNO', 'InventoryAccount': None, 'CostAccount': None, 'TransferAccount': None, 'RevenuesAccount': None, 'VarienceAccount': None, 'DecreasingAccount': None, 'IncreasingAccount': None, 'ReturningAccount': None, 'ExpensesAccount': None, 'EURevenuesAccount': None, 'EUExpensesAccount': None, 'ForeignRevenueAcc': None, 'ForeignExpensAcc': None, 'ExemptIncomeAcc': None, 'PriceDifferenceAcc': None, 'WarehouseCode': '5A', 'InStock': 17.0, 'Committed': 0.0, 'Ordered': 0.0, 'CountedQuantity': 0.0, 'WasCounted': 'tNO', 'UserSignature': 50, 'Counted': 0.0, 'ExpenseClearingAct': None, 'PurchaseCreditAcc': None, 'EUPurchaseCreditAcc': None, 'ForeignPurchaseCreditAcc': None, 'SalesCreditAcc': None, 'SalesCreditEUAcc': None, 'ExemptedCredits': None, 'SalesCreditForeignAcc': None, 'ExpenseOffsettingAccount': None, 'WipAccount': None, 'ExchangeRateDifferencesAcct': None, 'GoodsClearingAcct': None, 'NegativeInventoryAdjustmentAccount': None, 'CostInflationOffsetAccount': None, 'GLDecreaseAcct': None, 'GLIncreaseAcct': None, 'PAReturnAcct': None, 'PurchaseAcct': None, 'PurchaseOffsetAcct': None, 'ShippedGoodsAccount': None, 'StockInflationOffsetAccount': None, 'StockInflationAdjustAccount': None, 'VATInRevenueAccount': None, 'WipVarianceAccount': None, 'CostInflationAccount': None, 'WHIncomingCenvatAccount': None, 'WHOutgoingCenvatAccount': None, 'StockInTransitAccount': None, 'WipOffsetProfitAndLossAccount': None, 'InventoryOffsetProfitAndLossAccount': None, 'DefaultBin': None, 'DefaultBinEnforced': 'tNO', 'PurchaseBalanceAccount': None, 'ItemCode': 'ACC-0000004', 'ItemCycleCounts': []}, {'MinimalStock': 0.0, 'MaximalStock': 0.0, 'MinimalOrder': 0.0, 'StandardAveragePrice': 180.0, 'Locked': 'tNO', 'InventoryAccount': None, 'CostAccount': None, 'TransferAccount': None, 'RevenuesAccount': None, 'VarienceAccount': None, 'DecreasingAccount': None, 'IncreasingAccount': None, 'ReturningAccount': None, 'ExpensesAccount': None, 'EURevenuesAccount': None, 'EUExpensesAccount': None, 'ForeignRevenueAcc': None, 'ForeignExpensAcc': None, 'ExemptIncomeAcc': None, 'PriceDifferenceAcc': None, 'WarehouseCode': 'Arkan', 'InStock': 18.0, 'Committed': 0.0, 'Ordered': 0.0, 'CountedQuantity': 0.0, 'WasCounted': 'tNO', 'UserSignature': 50, 'Counted': 0.0, 'ExpenseClearingAct': None, 'PurchaseCreditAcc': None, 'EUPurchaseCreditAcc': None, 'ForeignPurchaseCreditAcc': None, 'SalesCreditAcc': None, 'SalesCreditEUAcc': None, 'ExemptedCredits': None, 'SalesCreditForeignAcc': None, 'ExpenseOffsettingAccount': None, 'WipAccount': None, 'ExchangeRateDifferencesAcct': None, 'GoodsClearingAcct': None, 'NegativeInventoryAdjustmentAccount': None, 'CostInflationOffsetAccount': None, 'GLDecreaseAcct': None, 'GLIncreaseAcct': None, 'PAReturnAcct': None, 'PurchaseAcct': None, 'PurchaseOffsetAcct': None, 'ShippedGoodsAccount': None, 'StockInflationOffsetAccount': None, 'StockInflationAdjustAccount': None, 'VATInRevenueAccount': None, 'WipVarianceAccount': None, 'CostInflationAccount': None, 'WHIncomingCenvatAccount': None, 'WHOutgoingCenvatAccount': None, 'StockInTransitAccount': None, 'WipOffsetProfitAndLossAccount': None, 'InventoryOffsetProfitAndLossAccount': None, 'DefaultBin': None, 'DefaultBinEnforced': 'tNO', 'PurchaseBalanceAccount': None, 'ItemCode': 'ACC-0000004', 'ItemCycleCounts': []}, {'MinimalStock': 0.0, 'MaximalStock': 0.0, 'MinimalOrder': 0.0, 'StandardAveragePrice': 0.0, 'Locked': 'tNO', 'InventoryAccount': None, 'CostAccount': None, 'TransferAccount': None, 'RevenuesAccount': None, 'VarienceAccount': None, 'DecreasingAccount': None, 'IncreasingAccount': None, 'ReturningAccount': None, 'ExpensesAccount': None, 'EURevenuesAccount': None, 'EUExpensesAccount': None, 'ForeignRevenueAcc': None, 'ForeignExpensAcc': None, 'ExemptIncomeAcc': None, 'PriceDifferenceAcc': None, 'WarehouseCode': 'DIP', 'InStock': 0.0, 'Committed': 0.0, 'Ordered': 0.0, 'CountedQuantity': 0.0, 'WasCounted': 'tNO', 'UserSignature': 50, 'Counted': 0.0, 'ExpenseClearingAct': None, 'PurchaseCreditAcc': None, 'EUPurchaseCreditAcc': None, 'ForeignPurchaseCreditAcc': None, 'SalesCreditAcc': None, 'SalesCreditEUAcc': None, 'ExemptedCredits': None, 'SalesCreditForeignAcc': None, 'ExpenseOffsettingAccount': None, 'WipAccount': None, 'ExchangeRateDifferencesAcct': None, 'GoodsClearingAcct': None, 'NegativeInventoryAdjustmentAccount': None, 'CostInflationOffsetAccount': None, 'GLDecreaseAcct': None, 'GLIncreaseAcct': None, 'PAReturnAcct': None, 'PurchaseAcct': None, 'PurchaseOffsetAcct': None, 'ShippedGoodsAccount': None, 'StockInflationOffsetAccount': None, 'StockInflationAdjustAccount': None, 'VATInRevenueAccount': None, 'WipVarianceAccount': None, 'CostInflationAccount': None, 'WHIncomingCenvatAccount': None, 'WHOutgoingCenvatAccount': None, 'StockInTransitAccount': None, 'WipOffsetProfitAndLossAccount': None, 'InventoryOffsetProfitAndLossAccount': None, 'DefaultBin': None, 'DefaultBinEnforced': 'tNO', 'PurchaseBalanceAccount': None, 'ItemCode': 'ACC-0000004', 'ItemCycleCounts': []}, {'MinimalStock': 0.0, 'MaximalStock': 0.0, 'MinimalOrder': 0.0, 'StandardAveragePrice': 180.0, 'Locked': 'tNO', 'InventoryAccount': None, 'CostAccount': None, 'TransferAccount': None, 'RevenuesAccount': None, 'VarienceAccount': None, 'DecreasingAccount': None, 'IncreasingAccount': None, 'ReturningAccount': None, 'ExpensesAccount': None, 'EURevenuesAccount': None, 'EUExpensesAccount': None, 'ForeignRevenueAcc': None, 'ForeignExpensAcc': None, 'ExemptIncomeAcc': None, 'PriceDifferenceAcc': None, 'WarehouseCode': 'INC', 'InStock': 0.0, 'Committed': 0.0, 'Ordered': 0.0, 'CountedQuantity': 0.0, 'WasCounted': 'tNO', 'UserSignature': 50, 'Counted': 0.0, 'ExpenseClearingAct': None, 'PurchaseCreditAcc': None, 'EUPurchaseCreditAcc': None, 'ForeignPurchaseCreditAcc': None, 'SalesCreditAcc': None, 'SalesCreditEUAcc': None, 'ExemptedCredits': None, 'SalesCreditForeignAcc': None, 'ExpenseOffsettingAccount': None, 'WipAccount': None, 'ExchangeRateDifferencesAcct': None, 'GoodsClearingAcct': None, 'NegativeInventoryAdjustmentAccount': None, 'CostInflationOffsetAccount': None, 'GLDecreaseAcct': None, 'GLIncreaseAcct': None, 'PAReturnAcct': None, 'PurchaseAcct': None, 'PurchaseOffsetAcct': None, 'ShippedGoodsAccount': None, 'StockInflationOffsetAccount': None, 'StockInflationAdjustAccount': None, 'VATInRevenueAccount': None, 'WipVarianceAccount': None, 'CostInflationAccount': None, 'WHIncomingCenvatAccount': None, 'WHOutgoingCenvatAccount': None, 'StockInTransitAccount': None, 'WipOffsetProfitAndLossAccount': None, 'InventoryOffsetProfitAndLossAccount': None, 'DefaultBin': None, 'DefaultBinEnforced': 'tNO', 'PurchaseBalanceAccount': None, 'ItemCode': 'ACC-0000004', 'ItemCycleCounts': []}, {'MinimalStock': 0.0, 'MaximalStock': 0.0, 'MinimalOrder': 0.0, 'StandardAveragePrice': 0.0, 'Locked': 'tNO', 'InventoryAccount': None, 'CostAccount': None, 'TransferAccount': None, 'RevenuesAccount': None, 'VarienceAccount': None, 'DecreasingAccount': None, 'IncreasingAccount': None, 'ReturningAccount': None, 'ExpensesAccount': None, 'EURevenuesAccount': None, 'EUExpensesAccount': None, 'ForeignRevenueAcc': None, 'ForeignExpensAcc': None, 'ExemptIncomeAcc': None, 'PriceDifferenceAcc': None, 'WarehouseCode': 'ONL', 'InStock': 0.0, 'Committed': 0.0, 'Ordered': 0.0, 'CountedQuantity': 0.0, 'WasCounted': 'tNO', 'UserSignature': 50, 'Counted': 0.0, 'ExpenseClearingAct': None, 'PurchaseCreditAcc': None, 'EUPurchaseCreditAcc': None, 'ForeignPurchaseCreditAcc': None, 'SalesCreditAcc': None, 'SalesCreditEUAcc': None, 'ExemptedCredits': None, 'SalesCreditForeignAcc': None, 'ExpenseOffsettingAccount': None, 'WipAccount': None, 'ExchangeRateDifferencesAcct': None, 'GoodsClearingAcct': None, 'NegativeInventoryAdjustmentAccount': None, 'CostInflationOffsetAccount': None, 'GLDecreaseAcct': None, 'GLIncreaseAcct': None, 'PAReturnAcct': None, 'PurchaseAcct': None, 'PurchaseOffsetAcct': None, 'ShippedGoodsAccount': None, 'StockInflationOffsetAccount': None, 'StockInflationAdjustAccount': None, 'VATInRevenueAccount': None, 'WipVarianceAccount': None, 'CostInflationAccount': None, 'WHIncomingCenvatAccount': None, 'WHOutgoingCenvatAccount': None, 'StockInTransitAccount': None, 'WipOffsetProfitAndLossAccount': None, 'InventoryOffsetProfitAndLossAccount': None, 'DefaultBin': None, 'DefaultBinEnforced': 'tNO', 'PurchaseBalanceAccount': None, 'ItemCode': 'ACC-0000004', 'ItemCycleCounts': []}, {'MinimalStock': 0.0, 'MaximalStock': 0.0, 'MinimalOrder': 0.0, 'StandardAveragePrice': 0.0, 'Locked': 'tNO', 'InventoryAccount': None, 'CostAccount': None, 'TransferAccount': None, 'RevenuesAccount': None, 'VarienceAccount': None, 'DecreasingAccount': None, 'IncreasingAccount': None, 'ReturningAccount': None, 'ExpensesAccount': None, 'EURevenuesAccount': None, 'EUExpensesAccount': None, 'ForeignRevenueAcc': None, 'ForeignExpensAcc': None, 'ExemptIncomeAcc': None, 'PriceDifferenceAcc': None, 'WarehouseCode': 'PHO', 'InStock': 0.0, 'Committed': 0.0, 'Ordered': 0.0, 'CountedQuantity': 0.0, 'WasCounted': 'tNO', 'UserSignature': 50, 'Counted': 0.0, 'ExpenseClearingAct': None, 'PurchaseCreditAcc': None, 'EUPurchaseCreditAcc': None, 'ForeignPurchaseCreditAcc': None, 'SalesCreditAcc': None, 'SalesCreditEUAcc': None, 'ExemptedCredits': None, 'SalesCreditForeignAcc': None, 'ExpenseOffsettingAccount': None, 'WipAccount': None, 'ExchangeRateDifferencesAcct': None, 'GoodsClearingAcct': None, 'NegativeInventoryAdjustmentAccount': None, 'CostInflationOffsetAccount': None, 'GLDecreaseAcct': None, 'GLIncreaseAcct': None, 'PAReturnAcct': None, 'PurchaseAcct': None, 'PurchaseOffsetAcct': None, 'ShippedGoodsAccount': None, 'StockInflationOffsetAccount': None, 'StockInflationAdjustAccount': None, 'VATInRevenueAccount': None, 'WipVarianceAccount': None, 'CostInflationAccount': None, 'WHIncomingCenvatAccount': None, 'WHOutgoingCenvatAccount': None, 'StockInTransitAccount': None, 'WipOffsetProfitAndLossAccount': None, 'InventoryOffsetProfitAndLossAccount': None, 'DefaultBin': None, 'DefaultBinEnforced': 'tNO', 'PurchaseBalanceAccount': None, 'ItemCode': 'ACC-0000004', 'ItemCycleCounts': []}, {'MinimalStock': 0.0, 'MaximalStock': 0.0, 'MinimalOrder': 0.0, 'StandardAveragePrice': 0.0, 'Locked': 'tNO', 'InventoryAccount': None, 'CostAccount': None, 'TransferAccount': None, 'RevenuesAccount': None, 'VarienceAccount': None, 'DecreasingAccount': None, 'IncreasingAccount': None, 'ReturningAccount': None, 'ExpensesAccount': None, 'EURevenuesAccount': None, 'EUExpensesAccount': None, 'ForeignRevenueAcc': None, 'ForeignExpensAcc': None, 'ExemptIncomeAcc': None, 'PriceDifferenceAcc': None, 'WarehouseCode': 'PHO-EX', 'InStock': 0.0, 'Committed': 0.0, 'Ordered': 0.0, 'CountedQuantity': 0.0, 'WasCounted': 'tNO', 'UserSignature': 1, 'Counted': 0.0, 'ExpenseClearingAct': None, 'PurchaseCreditAcc': None, 'EUPurchaseCreditAcc': None, 'ForeignPurchaseCreditAcc': None, 'SalesCreditAcc': None, 'SalesCreditEUAcc': None, 'ExemptedCredits': None, 'SalesCreditForeignAcc': None, 'ExpenseOffsettingAccount': None, 'WipAccount': None, 'ExchangeRateDifferencesAcct': None, 'GoodsClearingAcct': None, 'NegativeInventoryAdjustmentAccount': None, 'CostInflationOffsetAccount': None, 'GLDecreaseAcct': None, 'GLIncreaseAcct': None, 'PAReturnAcct': None, 'PurchaseAcct': None, 'PurchaseOffsetAcct': None, 'ShippedGoodsAccount': None, 'StockInflationOffsetAccount': None, 'StockInflationAdjustAccount': None, 'VATInRevenueAccount': None, 'WipVarianceAccount': None, 'CostInflationAccount': None, 'WHIncomingCenvatAccount': None, 'WHOutgoingCenvatAccount': None, 'StockInTransitAccount': None, 'WipOffsetProfitAndLossAccount': None, 'InventoryOffsetProfitAndLossAccount': None, 'DefaultBin': None, 'DefaultBinEnforced': 'tNO', 'PurchaseBalanceAccount': None, 'ItemCode': 'ACC-0000004', 'ItemCycleCounts': []}, {'MinimalStock': 0.0, 'MaximalStock': 0.0, 'MinimalOrder': 0.0, 'StandardAveragePrice': 0.0, 'Locked': 'tNO', 'InventoryAccount': None, 'CostAccount': None, 'TransferAccount': None, 'RevenuesAccount': None, 'VarienceAccount': None, 'DecreasingAccount': None, 'IncreasingAccount': None, 'ReturningAccount': None, 'ExpensesAccount': None, 'EURevenuesAccount': None, 'EUExpensesAccount': None, 'ForeignRevenueAcc': None, 'ForeignExpensAcc': None, 'ExemptIncomeAcc': None, 'PriceDifferenceAcc': None, 'WarehouseCode': 'PHO-IN', 'InStock': 0.0, 'Committed': 0.0, 'Ordered': 0.0, 'CountedQuantity': 0.0, 'WasCounted': 'tNO', 'UserSignature': 1, 'Counted': 0.0, 'ExpenseClearingAct': None, 'PurchaseCreditAcc': None, 'EUPurchaseCreditAcc': None, 'ForeignPurchaseCreditAcc': None, 'SalesCreditAcc': None, 'SalesCreditEUAcc': None, 'ExemptedCredits': None, 'SalesCreditForeignAcc': None, 'ExpenseOffsettingAccount': None, 'WipAccount': None, 'ExchangeRateDifferencesAcct': None, 'GoodsClearingAcct': None, 'NegativeInventoryAdjustmentAccount': None, 'CostInflationOffsetAccount': None, 'GLDecreaseAcct': None, 'GLIncreaseAcct': None, 'PAReturnAcct': None, 'PurchaseAcct': None, 'PurchaseOffsetAcct': None, 'ShippedGoodsAccount': None, 'StockInflationOffsetAccount': None, 'StockInflationAdjustAccount': None, 'VATInRevenueAccount': None, 'WipVarianceAccount': None, 'CostInflationAccount': None, 'WHIncomingCenvatAccount': None, 'WHOutgoingCenvatAccount': None, 'StockInTransitAccount': None, 'WipOffsetProfitAndLossAccount': None, 'InventoryOffsetProfitAndLossAccount': None, 'DefaultBin': None, 'DefaultBinEnforced': 'tNO', 'PurchaseBalanceAccount': None, 'ItemCode': 'ACC-0000004', 'ItemCycleCounts': []}, {'MinimalStock': 0.0, 'MaximalStock': 0.0, 'MinimalOrder': 0.0, 'StandardAveragePrice': 0.0, 'Locked': 'tNO', 'InventoryAccount': None, 'CostAccount': None, 'TransferAccount': None, 'RevenuesAccount': None, 'VarienceAccount': None, 'DecreasingAccount': None, 'IncreasingAccount': None, 'ReturningAccount': None, 'ExpensesAccount': None, 'EURevenuesAccount': None, 'EUExpensesAccount': None, 'ForeignRevenueAcc': None, 'ForeignExpensAcc': None, 'ExemptIncomeAcc': None, 'PriceDifferenceAcc': None, 'WarehouseCode': 'RTW', 'InStock': 0.0, 'Committed': 0.0, 'Ordered': 0.0, 'CountedQuantity': 0.0, 'WasCounted': 'tNO', 'UserSignature': 50, 'Counted': 0.0, 'ExpenseClearingAct': None, 'PurchaseCreditAcc': None, 'EUPurchaseCreditAcc': None, 'ForeignPurchaseCreditAcc': None, 'SalesCreditAcc': None, 'SalesCreditEUAcc': None, 'ExemptedCredits': None, 'SalesCreditForeignAcc': None, 'ExpenseOffsettingAccount': None, 'WipAccount': None, 'ExchangeRateDifferencesAcct': None, 'GoodsClearingAcct': None, 'NegativeInventoryAdjustmentAccount': None, 'CostInflationOffsetAccount': None, 'GLDecreaseAcct': None, 'GLIncreaseAcct': None, 'PAReturnAcct': None, 'PurchaseAcct': None, 'PurchaseOffsetAcct': None, 'ShippedGoodsAccount': None, 'StockInflationOffsetAccount': None, 'StockInflationAdjustAccount': None, 'VATInRevenueAccount': None, 'WipVarianceAccount': None, 'CostInflationAccount': None, 'WHIncomingCenvatAccount': None, 'WHOutgoingCenvatAccount': None, 'StockInTransitAccount': None, 'WipOffsetProfitAndLossAccount': None, 'InventoryOffsetProfitAndLossAccount': None, 'DefaultBin': None, 'DefaultBinEnforced': 'tNO', 'PurchaseBalanceAccount': None, 'ItemCode': 'ACC-0000004', 'ItemCycleCounts': []}, {'MinimalStock': 0.0, 'MaximalStock': 0.0, 'MinimalOrder': 0.0, 'StandardAveragePrice': 0.0, 'Locked': 'tNO', 'InventoryAccount': None, 'CostAccount': None, 'TransferAccount': None, 'RevenuesAccount': None, 'VarienceAccount': None, 'DecreasingAccount': None, 'IncreasingAccount': None, 'ReturningAccount': None, 'ExpensesAccount': None, 'EURevenuesAccount': None, 'EUExpensesAccount': None, 'ForeignRevenueAcc': None, 'ForeignExpensAcc': None, 'ExemptIncomeAcc': None, 'PriceDifferenceAcc': None, 'WarehouseCode': 'RTWH', 'InStock': 0.0, 'Committed': 0.0, 'Ordered': 0.0, 'CountedQuantity': 0.0, 'WasCounted': 'tNO', 'UserSignature': 1, 'Counted': 0.0, 'ExpenseClearingAct': None, 'PurchaseCreditAcc': None, 'EUPurchaseCreditAcc': None, 'ForeignPurchaseCreditAcc': None, 'SalesCreditAcc': None, 'SalesCreditEUAcc': None, 'ExemptedCredits': None, 'SalesCreditForeignAcc': None, 'ExpenseOffsettingAccount': None, 'WipAccount': None, 'ExchangeRateDifferencesAcct': None, 'GoodsClearingAcct': None, 'NegativeInventoryAdjustmentAccount': None, 'CostInflationOffsetAccount': None, 'GLDecreaseAcct': None, 'GLIncreaseAcct': None, 'PAReturnAcct': None, 'PurchaseAcct': None, 'PurchaseOffsetAcct': None, 'ShippedGoodsAccount': None, 'StockInflationOffsetAccount': None, 'StockInflationAdjustAccount': None, 'VATInRevenueAccount': None, 'WipVarianceAccount': None, 'CostInflationAccount': None, 'WHIncomingCenvatAccount': None, 'WHOutgoingCenvatAccount': None, 'StockInTransitAccount': None, 'WipOffsetProfitAndLossAccount': None, 'InventoryOffsetProfitAndLossAccount': None, 'DefaultBin': None, 'DefaultBinEnforced': 'tNO', 'PurchaseBalanceAccount': None, 'ItemCode': 'ACC-0000004', 'ItemCycleCounts': []}, {'MinimalStock': 0.0, 'MaximalStock': 0.0, 'MinimalOrder': 0.0, 'StandardAveragePrice': 0.0, 'Locked': 'tNO', 'InventoryAccount': None, 'CostAccount': None, 'TransferAccount': None, 'RevenuesAccount': None, 'VarienceAccount': None, 'DecreasingAccount': None, 'IncreasingAccount': None, 'ReturningAccount': None, 'ExpensesAccount': None, 'EURevenuesAccount': None, 'EUExpensesAccount': None, 'ForeignRevenueAcc': None, 'ForeignExpensAcc': None, 'ExemptIncomeAcc': None, 'PriceDifferenceAcc': None, 'WarehouseCode': 'SW', 'InStock': 0.0, 'Committed': 0.0, 'Ordered': 0.0, 'CountedQuantity': 0.0, 'WasCounted': 'tNO', 'UserSignature': 50, 'Counted': 0.0, 'ExpenseClearingAct': None, 'PurchaseCreditAcc': None, 'EUPurchaseCreditAcc': None, 'ForeignPurchaseCreditAcc': None, 'SalesCreditAcc': None, 'SalesCreditEUAcc': None, 'ExemptedCredits': None, 'SalesCreditForeignAcc': None, 'ExpenseOffsettingAccount': None, 'WipAccount': None, 'ExchangeRateDifferencesAcct': None, 'GoodsClearingAcct': None, 'NegativeInventoryAdjustmentAccount': None, 'CostInflationOffsetAccount': None, 'GLDecreaseAcct': None, 'GLIncreaseAcct': None, 'PAReturnAcct': None, 'PurchaseAcct': None, 'PurchaseOffsetAcct': None, 'ShippedGoodsAccount': None, 'StockInflationOffsetAccount': None, 'StockInflationAdjustAccount': None, 'VATInRevenueAccount': None, 'WipVarianceAccount': None, 'CostInflationAccount': None, 'WHIncomingCenvatAccount': None, 'WHOutgoingCenvatAccount': None, 'StockInTransitAccount': None, 'WipOffsetProfitAndLossAccount': None, 'InventoryOffsetProfitAndLossAccount': None, 'DefaultBin': None, 'DefaultBinEnforced': 'tNO', 'PurchaseBalanceAccount': None, 'ItemCode': 'ACC-0000004', 'ItemCycleCounts': []}, {'MinimalStock': 0.0, 'MaximalStock': 0.0, 'MinimalOrder': 0.0, 'StandardAveragePrice': 0.0, 'Locked': 'tNO', 'InventoryAccount': None, 'CostAccount': None, 'TransferAccount': None, 'RevenuesAccount': None, 'VarienceAccount': None, 'DecreasingAccount': None, 'IncreasingAccount': None, 'ReturningAccount': None, 'ExpensesAccount': None, 'EURevenuesAccount': None, 'EUExpensesAccount': None, 'ForeignRevenueAcc': None, 'ForeignExpensAcc': None, 'ExemptIncomeAcc': None, 'PriceDifferenceAcc': None, 'WarehouseCode': 'WLS', 'InStock': 0.0, 'Committed': 0.0, 'Ordered': 0.0, 'CountedQuantity': 0.0, 'WasCounted': 'tNO', 'UserSignature': 50, 'Counted': 0.0, 'ExpenseClearingAct': None, 'PurchaseCreditAcc': None, 'EUPurchaseCreditAcc': None, 'ForeignPurchaseCreditAcc': None, 'SalesCreditAcc': None, 'SalesCreditEUAcc': None, 'ExemptedCredits': None, 'SalesCreditForeignAcc': None, 'ExpenseOffsettingAccount': None, 'WipAccount': None, 'ExchangeRateDifferencesAcct': None, 'GoodsClearingAcct': None, 'NegativeInventoryAdjustmentAccount': None, 'CostInflationOffsetAccount': None, 'GLDecreaseAcct': None, 'GLIncreaseAcct': None, 'PAReturnAcct': None, 'PurchaseAcct': None, 'PurchaseOffsetAcct': None, 'ShippedGoodsAccount': None, 'StockInflationOffsetAccount': None, 'StockInflationAdjustAccount': None, 'VATInRevenueAccount': None, 'WipVarianceAccount': None, 'CostInflationAccount': None, 'WHIncomingCenvatAccount': None, 'WHOutgoingCenvatAccount': None, 'StockInTransitAccount': None, 'WipOffsetProfitAndLossAccount': None, 'InventoryOffsetProfitAndLossAccount': None, 'DefaultBin': None, 'DefaultBinEnforced': 'tNO', 'PurchaseBalanceAccount': None, 'ItemCode': 'ACC-0000004', 'ItemCycleCounts': []}, {'MinimalStock': 0.0, 'MaximalStock': 0.0, 'MinimalOrder': 0.0, 'StandardAveragePrice': 0.0, 'Locked': 'tNO', 'InventoryAccount': None, 'CostAccount': None, 'TransferAccount': None, 'RevenuesAccount': None, 'VarienceAccount': None, 'DecreasingAccount': None, 'IncreasingAccount': None, 'ReturningAccount': None, 'ExpensesAccount': None, 'EURevenuesAccount': None, 'EUExpensesAccount': None, 'ForeignRevenueAcc': None, 'ForeignExpensAcc': None, 'ExemptIncomeAcc': None, 'PriceDifferenceAcc': None, 'WarehouseCode': 'WW', 'InStock': 0.0, 'Committed': 0.0, 'Ordered': 0.0, 'CountedQuantity': 0.0, 'WasCounted': 'tNO', 'UserSignature': 50, 'Counted': 0.0, 'ExpenseClearingAct': None, 'PurchaseCreditAcc': None, 'EUPurchaseCreditAcc': None, 'ForeignPurchaseCreditAcc': None, 'SalesCreditAcc': None, 'SalesCreditEUAcc': None, 'ExemptedCredits': None, 'SalesCreditForeignAcc': None, 'ExpenseOffsettingAccount': None, 'WipAccount': None, 'ExchangeRateDifferencesAcct': None, 'GoodsClearingAcct': None, 'NegativeInventoryAdjustmentAccount': None, 'CostInflationOffsetAccount': None, 'GLDecreaseAcct': None, 'GLIncreaseAcct': None, 'PAReturnAcct': None, 'PurchaseAcct': None, 'PurchaseOffsetAcct': None, 'ShippedGoodsAccount': None, 'StockInflationOffsetAccount': None, 'StockInflationAdjustAccount': None, 'VATInRevenueAccount': None, 'WipVarianceAccount': None, 'CostInflationAccount': None, 'WHIncomingCenvatAccount': None, 'WHOutgoingCenvatAccount': None, 'StockInTransitAccount': None, 'WipOffsetProfitAndLossAccount': None, 'InventoryOffsetProfitAndLossAccount': None, 'DefaultBin': None, 'DefaultBinEnforced': 'tNO', 'PurchaseBalanceAccount': None, 'ItemCode': 'ACC-0000004', 'ItemCycleCounts': []}, {'MinimalStock': 0.0, 'MaximalStock': 0.0, 'MinimalOrder': 0.0, 'StandardAveragePrice': 0.0, 'Locked': 'tNO', 'InventoryAccount': None, 'CostAccount': None, 'TransferAccount': None, 'RevenuesAccount': None, 'VarienceAccount': None, 'DecreasingAccount': None, 'IncreasingAccount': None, 'ReturningAccount': None, 'ExpensesAccount': None, 'EURevenuesAccount': None, 'EUExpensesAccount': None, 'ForeignRevenueAcc': None, 'ForeignExpensAcc': None, 'ExemptIncomeAcc': None, 'PriceDifferenceAcc': None, 'WarehouseCode': 'WW-CON', 'InStock': 0.0, 'Committed': 0.0, 'Ordered': 0.0, 'CountedQuantity': 0.0, 'WasCounted': 'tNO', 'UserSignature': 50, 'Counted': 0.0, 'ExpenseClearingAct': None, 'PurchaseCreditAcc': None, 'EUPurchaseCreditAcc': None, 'ForeignPurchaseCreditAcc': None, 'SalesCreditAcc': None, 'SalesCreditEUAcc': None, 'ExemptedCredits': None, 'SalesCreditForeignAcc': None, 'ExpenseOffsettingAccount': None, 'WipAccount': None, 'ExchangeRateDifferencesAcct': None, 'GoodsClearingAcct': None, 'NegativeInventoryAdjustmentAccount': None, 'CostInflationOffsetAccount': None, 'GLDecreaseAcct': None, 'GLIncreaseAcct': None, 'PAReturnAcct': None, 'PurchaseAcct': None, 'PurchaseOffsetAcct': None, 'ShippedGoodsAccount': None, 'StockInflationOffsetAccount': None, 'StockInflationAdjustAccount': None, 'VATInRevenueAccount': None, 'WipVarianceAccount': None, 'CostInflationAccount': None, 'WHIncomingCenvatAccount': None, 'WHOutgoingCenvatAccount': None, 'StockInTransitAccount': None, 'WipOffsetProfitAndLossAccount': None, 'InventoryOffsetProfitAndLossAccount': None, 'DefaultBin': None, 'DefaultBinEnforced': 'tNO', 'PurchaseBalanceAccount': None, 'ItemCode': 'ACC-0000004', 'ItemCycleCounts': []}, {'MinimalStock': 0.0, 'MaximalStock': 0.0, 'MinimalOrder': 0.0, 'StandardAveragePrice': 0.0, 'Locked': 'tNO', 'InventoryAccount': None, 'CostAccount': None, 'TransferAccount': None, 'RevenuesAccount': None, 'VarienceAccount': None, 'DecreasingAccount': None, 'IncreasingAccount': None, 'ReturningAccount': None, 'ExpensesAccount': None, 'EURevenuesAccount': None, 'EUExpensesAccount': None, 'ForeignRevenueAcc': None, 'ForeignExpensAcc': None, 'ExemptIncomeAcc': None, 'PriceDifferenceAcc': None, 'WarehouseCode': 'WW-DAM', 'InStock': 0.0, 'Committed': 0.0, 'Ordered': 0.0, 'CountedQuantity': 0.0, 'WasCounted': 'tNO', 'UserSignature': 50, 'Counted': 0.0, 'ExpenseClearingAct': None, 'PurchaseCreditAcc': None, 'EUPurchaseCreditAcc': None, 'ForeignPurchaseCreditAcc': None, 'SalesCreditAcc': None, 'SalesCreditEUAcc': None, 'ExemptedCredits': None, 'SalesCreditForeignAcc': None, 'ExpenseOffsettingAccount': None, 'WipAccount': None, 'ExchangeRateDifferencesAcct': None, 'GoodsClearingAcct': None, 'NegativeInventoryAdjustmentAccount': None, 'CostInflationOffsetAccount': None, 'GLDecreaseAcct': None, 'GLIncreaseAcct': None, 'PAReturnAcct': None, 'PurchaseAcct': None, 'PurchaseOffsetAcct': None, 'ShippedGoodsAccount': None, 'StockInflationOffsetAccount': None, 'StockInflationAdjustAccount': None, 'VATInRevenueAccount': None, 'WipVarianceAccount': None, 'CostInflationAccount': None, 'WHIncomingCenvatAccount': None, 'WHOutgoingCenvatAccount': None, 'StockInTransitAccount': None, 'WipOffsetProfitAndLossAccount': None, 'InventoryOffsetProfitAndLossAccount': None, 'DefaultBin': None, 'DefaultBinEnforced': 'tNO', 'PurchaseBalanceAccount': None, 'ItemCode': 'ACC-0000004', 'ItemCycleCounts': []}, {'MinimalStock': 0.0, 'MaximalStock': 0.0, 'MinimalOrder': 0.0, 'StandardAveragePrice': 0.0, 'Locked': 'tNO', 'InventoryAccount': None, 'CostAccount': None, 'TransferAccount': None, 'RevenuesAccount': None, 'VarienceAccount': None, 'DecreasingAccount': None, 'IncreasingAccount': None, 'ReturningAccount': None, 'ExpensesAccount': None, 'EURevenuesAccount': None, 'EUExpensesAccount': None, 'ForeignRevenueAcc': None, 'ForeignExpensAcc': None, 'ExemptIncomeAcc': None, 'PriceDifferenceAcc': None, 'WarehouseCode': 'WW-REP', 'InStock': 0.0, 'Committed': 0.0, 'Ordered': 0.0, 'CountedQuantity': 0.0, 'WasCounted': 'tNO', 'UserSignature': 50, 'Counted': 0.0, 'ExpenseClearingAct': None, 'PurchaseCreditAcc': None, 'EUPurchaseCreditAcc': None, 'ForeignPurchaseCreditAcc': None, 'SalesCreditAcc': None, 'SalesCreditEUAcc': None, 'ExemptedCredits': None, 'SalesCreditForeignAcc': None, 'ExpenseOffsettingAccount': None, 'WipAccount': None, 'ExchangeRateDifferencesAcct': None, 'GoodsClearingAcct': None, 'NegativeInventoryAdjustmentAccount': None, 'CostInflationOffsetAccount': None, 'GLDecreaseAcct': None, 'GLIncreaseAcct': None, 'PAReturnAcct': None, 'PurchaseAcct': None, 'PurchaseOffsetAcct': None, 'ShippedGoodsAccount': None, 'StockInflationOffsetAccount': None, 'StockInflationAdjustAccount': None, 'VATInRevenueAccount': None, 'WipVarianceAccount': None, 'CostInflationAccount': None, 'WHIncomingCenvatAccount': None, 'WHOutgoingCenvatAccount': None, 'StockInTransitAccount': None, 'WipOffsetProfitAndLossAccount': None, 'InventoryOffsetProfitAndLossAccount': None, 'DefaultBin': None, 'DefaultBinEnforced': 'tNO', 'PurchaseBalanceAccount': None, 'ItemCode': 'ACC-0000004', 'ItemCycleCounts': []}, {'MinimalStock': 0.0, 'MaximalStock': 0.0, 'MinimalOrder': 0.0, 'StandardAveragePrice': 0.0, 'Locked': 'tNO', 'InventoryAccount': None, 'CostAccount': None, 'TransferAccount': None, 'RevenuesAccount': None, 'VarienceAccount': None, 'DecreasingAccount': None, 'IncreasingAccount': None, 'ReturningAccount': None, 'ExpensesAccount': None, 'EURevenuesAccount': None, 'EUExpensesAccount': None, 'ForeignRevenueAcc': None, 'ForeignExpensAcc': None, 'ExemptIncomeAcc': None, 'PriceDifferenceAcc': None, 'WarehouseCode': 'WW-SAM', 'InStock': 0.0, 'Committed': 0.0, 'Ordered': 0.0, 'CountedQuantity': 0.0, 'WasCounted': 'tNO', 'UserSignature': 50, 'Counted': 0.0, 'ExpenseClearingAct': None, 'PurchaseCreditAcc': None, 'EUPurchaseCreditAcc': None, 'ForeignPurchaseCreditAcc': None, 'SalesCreditAcc': None, 'SalesCreditEUAcc': None, 'ExemptedCredits': None, 'SalesCreditForeignAcc': None, 'ExpenseOffsettingAccount': None, 'WipAccount': None, 'ExchangeRateDifferencesAcct': None, 'GoodsClearingAcct': None, 'NegativeInventoryAdjustmentAccount': None, 'CostInflationOffsetAccount': None, 'GLDecreaseAcct': None, 'GLIncreaseAcct': None, 'PAReturnAcct': None, 'PurchaseAcct': None, 'PurchaseOffsetAcct': None, 'ShippedGoodsAccount': None, 'StockInflationOffsetAccount': None, 'StockInflationAdjustAccount': None, 'VATInRevenueAccount': None, 'WipVarianceAccount': None, 'CostInflationAccount': None, 'WHIncomingCenvatAccount': None, 'WHOutgoingCenvatAccount': None, 'StockInTransitAccount': None, 'WipOffsetProfitAndLossAccount': None, 'InventoryOffsetProfitAndLossAccount': None, 'DefaultBin': None, 'DefaultBinEnforced': 'tNO', 'PurchaseBalanceAccount': None, 'ItemCode': 'ACC-0000004', 'ItemCycleCounts': []}, {'MinimalStock': 0.0, 'MaximalStock': 0.0, 'MinimalOrder': 0.0, 'StandardAveragePrice': 0.0, 'Locked': 'tNO', 'InventoryAccount': None, 'CostAccount': None, 'TransferAccount': None, 'RevenuesAccount': None, 'VarienceAccount': None, 'DecreasingAccount': None, 'IncreasingAccount': None, 'ReturningAccount': None, 'ExpensesAccount': None, 'EURevenuesAccount': None, 'EUExpensesAccount': None, 'ForeignRevenueAcc': None, 'ForeignExpensAcc': None, 'ExemptIncomeAcc': None, 'PriceDifferenceAcc': None, 'WarehouseCode': 'WW-WIP', 'InStock': 0.0, 'Committed': 0.0, 'Ordered': 0.0, 'CountedQuantity': 0.0, 'WasCounted': 'tNO', 'UserSignature': 50, 'Counted': 0.0, 'ExpenseClearingAct': None, 'PurchaseCreditAcc': None, 'EUPurchaseCreditAcc': None, 'ForeignPurchaseCreditAcc': None, 'SalesCreditAcc': None, 'SalesCreditEUAcc': None, 'ExemptedCredits': None, 'SalesCreditForeignAcc': None, 'ExpenseOffsettingAccount': None, 'WipAccount': None, 'ExchangeRateDifferencesAcct': None, 'GoodsClearingAcct': None, 'NegativeInventoryAdjustmentAccount': None, 'CostInflationOffsetAccount': None, 'GLDecreaseAcct': None, 'GLIncreaseAcct': None, 'PAReturnAcct': None, 'PurchaseAcct': None, 'PurchaseOffsetAcct': None, 'ShippedGoodsAccount': None, 'StockInflationOffsetAccount': None, 'StockInflationAdjustAccount': None, 'VATInRevenueAccount': None, 'WipVarianceAccount': None, 'CostInflationAccount': None, 'WHIncomingCenvatAccount': None, 'WHOutgoingCenvatAccount': None, 'StockInTransitAccount': None, 'WipOffsetProfitAndLossAccount': None, 'InventoryOffsetProfitAndLossAccount': None, 'DefaultBin': None, 'DefaultBinEnforced': 'tNO', 'PurchaseBalanceAccount': None, 'ItemCode': 'ACC-0000004', 'ItemCycleCounts': []}, {'MinimalStock': 0.0, 'MaximalStock': 0.0, 'MinimalOrder': 0.0, 'StandardAveragePrice': 0.0, 'Locked': 'tNO', 'InventoryAccount': None, 'CostAccount': None, 'TransferAccount': None, 'RevenuesAccount': None, 'VarienceAccount': None, 'DecreasingAccount': None, 'IncreasingAccount': None, 'ReturningAccount': None, 'ExpensesAccount': None, 'EURevenuesAccount': None, 'EUExpensesAccount': None, 'ForeignRevenueAcc': None, 'ForeignExpensAcc': None, 'ExemptIncomeAcc': None, 'PriceDifferenceAcc': None, 'WarehouseCode': 'ZW', 'InStock': 0.0, 'Committed': 0.0, 'Ordered': 0.0, 'CountedQuantity': 0.0, 'WasCounted': 'tNO', 'UserSignature': 50, 'Counted': 0.0, 'ExpenseClearingAct': None, 'PurchaseCreditAcc': None, 'EUPurchaseCreditAcc': None, 'ForeignPurchaseCreditAcc': None, 'SalesCreditAcc': None, 'SalesCreditEUAcc': None, 'ExemptedCredits': None, 'SalesCreditForeignAcc': None, 'ExpenseOffsettingAccount': None, 'WipAccount': None, 'ExchangeRateDifferencesAcct': None, 'GoodsClearingAcct': None, 'NegativeInventoryAdjustmentAccount': None, 'CostInflationOffsetAccount': None, 'GLDecreaseAcct': None, 'GLIncreaseAcct': None, 'PAReturnAcct': None, 'PurchaseAcct': None, 'PurchaseOffsetAcct': None, 'ShippedGoodsAccount': None, 'StockInflationOffsetAccount': None, 'StockInflationAdjustAccount': None, 'VATInRevenueAccount': None, 'WipVarianceAccount': None, 'CostInflationAccount': None, 'WHIncomingCenvatAccount': None, 'WHOutgoingCenvatAccount': None, 'StockInTransitAccount': None, 'WipOffsetProfitAndLossAccount': None, 'InventoryOffsetProfitAndLossAccount': None, 'DefaultBin': None, 'DefaultBinEnforced': 'tNO', 'PurchaseBalanceAccount': None, 'ItemCode': 'ACC-0000004', 'ItemCycleCounts': []}], 'ItemPreferredVendors': [], 'ItemLocalizationInfos': [], 'ItemProjects': [], 'ItemDistributionRules': [], 'ItemAttributeGroups': [], 'ItemDepreciationParameters': [], 'ItemPeriodControls': [], 'ItemUnitOfMeasurementCollection': [{'UoMType': 'iutInventory', 'UoMEntry': 1, 'DefaultBarcode': 0, 'DefaultPackage': None, 'Length1': 0.0, 'Length1Unit': None, 'Length2': 0.0, 'Length2Unit': None, 'Width1': 0.0, 'Width1Unit': None, 'Width2': 0.0, 'Width2Unit': None, 'Height1': 0.0, 'Height1Unit': None, 'Height2': 0.0, 'Height2Unit': None, 'Volume': 0.0, 'VolumeUnit': None, 'Weight1': 0.0, 'Weight1Unit': None, 'Weight2': 0.0, 'Weight2Unit': None, 'ItemUoMPackageCollection': []}, {'UoMType': 'iutPurchasing', 'UoMEntry': 1, 'DefaultBarcode': 0, 'DefaultPackage': None, 'Length1': 0.0, 'Length1Unit': None, 'Length2': 0.0, 'Length2Unit': None, 'Width1': 0.0, 'Width1Unit': None, 'Width2': 0.0, 'Width2Unit': None, 'Height1': 0.0, 'Height1Unit': None, 'Height2': 0.0, 'Height2Unit': None, 'Volume': 0.0, 'VolumeUnit': 2, 'Weight1': 0.0, 'Weight1Unit': None, 'Weight2': 0.0, 'Weight2Unit': None, 'ItemUoMPackageCollection': []}, {'UoMType': 'iutPurchasing', 'UoMEntry': 8, 'DefaultBarcode': None, 'DefaultPackage': None, 'Length1': 0.0, 'Length1Unit': None, 'Length2': 0.0, 'Length2Unit': None, 'Width1': 0.0, 'Width1Unit': None, 'Width2': 0.0, 'Width2Unit': None, 'Height1': 0.0, 'Height1Unit': None, 'Height2': 0.0, 'Height2Unit': None, 'Volume': 0.0, 'VolumeUnit': 4, 'Weight1': 0.0, 'Weight1Unit': None, 'Weight2': 0.0, 'Weight2Unit': None, 'ItemUoMPackageCollection': []}, {'UoMType': 'iutSales', 'UoMEntry': 1, 'DefaultBarcode': 0, 'DefaultPackage': None, 'Length1': 0.0, 'Length1Unit': None, 'Length2': 0.0, 'Length2Unit': None, 'Width1': 0.0, 'Width1Unit': None, 'Width2': 0.0, 'Width2Unit': None, 'Height1': 0.0, 'Height1Unit': None, 'Height2': 0.0, 'Height2Unit': None, 'Volume': 0.0, 'VolumeUnit': 2, 'Weight1': 0.0, 'Weight1Unit': None, 'Weight2': 0.0, 'Weight2Unit': None, 'ItemUoMPackageCollection': []}, {'UoMType': 'iutSales', 'UoMEntry': 8, 'DefaultBarcode': None, 'DefaultPackage': None, 'Length1': 0.0, 'Length1Unit': None, 'Length2': 0.0, 'Length2Unit': None, 'Width1': 0.0, 'Width1Unit': None, 'Width2': 0.0, 'Width2Unit': None, 'Height1': 0.0, 'Height1Unit': None, 'Height2': 0.0, 'Height2Unit': None, 'Volume': 0.0, 'VolumeUnit': 4, 'Weight1': 0.0, 'Weight1Unit': None, 'Weight2': 0.0, 'Weight2Unit': None, 'ItemUoMPackageCollection': []}], 'ItemBarCodeCollection': [], 'ItemIntrastatExtension': {'ItemCode': 'ACC-0000004', 'CommodityCode': None, 'SupplementaryUnit': None, 'FactorOfSupplementaryUnit': 0.0, 'ImportRegionState': 0, 'ExportRegionState': 0, 'ImportNatureOfTransaction': None, 'ExportNatureOfTransaction': None, 'ImportStatisticalProcedure': None, 'ExportStatisticalProcedure': None, 'CountryOfOrigin': None, 'ServiceCode': None, 'Type': 'dDocument_Items', 'ServiceSupplyMethod': 'ssmImmediate', 'ServicePaymentMethod': 'spmOther', 'ImportRegionCountry': 'GB', 'ExportRegionCountry': 'GB', 'UseWeightInCalculation': 'tYES', 'IntrastatRelevant': 'tNO', 'StatisticalCode': None}}, {'ItemCode': 'ACC-0000005', 'ItemName': 'Earring Stand ( Fabric Holder ) 7.5*7.5 CM base + 7.5 CM Heigh', 'ForeignName': None, 'ItemsGroupCode': 110, 'CustomsGroupCode': -1, 'SalesVATGroup': 'X0', 'BarCode': None, 'VatLiable': 'tYES', 'PurchaseItem': 'tYES', 'SalesItem': 'tNO', 'InventoryItem': 'tYES', 'IncomeAccount': None, 'ExemptIncomeAccount': None, 'ExpanseAccount': None, 'Mainsupplier': None, 'SupplierCatalogNo': None, 'DesiredInventory': 0.0, 'MinInventory': 0.0, 'Picture': None, 'User_Text': None, 'SerialNum': None, 'CommissionPercent': 0.0, 'CommissionSum': 0.0, 'CommissionGroup': 0, 'TreeType': 'iNotATree', 'AssetItem': 'tNO', 'DataExportCode': None, 'Manufacturer': -1, 'QuantityOnStock': 50.0, 'QuantityOrderedFromVendors': 0.0, 'QuantityOrderedByCustomers': 0.0, 'ManageSerialNumbers': 'tNO', 'ManageBatchNumbers': 'tNO', 'Valid': 'tYES', 'ValidFrom': None, 'ValidTo': None, 'ValidRemarks': None, 'Frozen': 'tNO', 'FrozenFrom': None, 'FrozenTo': None, 'FrozenRemarks': None, 'SalesUnit': None, 'SalesItemsPerUnit': 1.0, 'SalesPackagingUnit': None, 'SalesQtyPerPackUnit': 1.0, 'SalesUnitLength': None, 'SalesLengthUnit': None, 'SalesUnitWidth': None, 'SalesWidthUnit': None, 'SalesUnitHeight': None, 'SalesHeightUnit': None, 'SalesUnitVolume': 0.0, 'SalesVolumeUnit': 4, 'SalesUnitWeight': None, 'SalesWeightUnit': None, 'PurchaseUnit': None, 'PurchaseItemsPerUnit': 1.0, 'PurchasePackagingUnit': None, 'PurchaseQtyPerPackUnit': 1.0, 'PurchaseUnitLength': None, 'PurchaseLengthUnit': None, 'PurchaseUnitWidth': None, 'PurchaseWidthUnit': None, 'PurchaseUnitHeight': None, 'PurchaseHeightUnit': None, 'PurchaseUnitVolume': 0.0, 'PurchaseVolumeUnit': 4, 'PurchaseUnitWeight': None, 'PurchaseWeightUnit': None, 'PurchaseVATGroup': 'X1', 'SalesFactor1': 1.0, 'SalesFactor2': 1.0, 'SalesFactor3': 1.0, 'SalesFactor4': 1.0, 'PurchaseFactor1': 1.0, 'PurchaseFactor2': 1.0, 'PurchaseFactor3': 1.0, 'PurchaseFactor4': 1.0, 'MovingAveragePrice': 0.0, 'ForeignRevenuesAccount': None, 'ECRevenuesAccount': None, 'ForeignExpensesAccount': None, 'ECExpensesAccount': None, 'AvgStdPrice': 0.0, 'DefaultWarehouse': None, 'ShipType': None, 'GLMethod': 'glm_ItemClass', 'TaxType': 'tt_Yes', 'MaxInventory': 0.0, 'ManageStockByWarehouse': 'tNO', 'PurchaseHeightUnit1': None, 'PurchaseUnitHeight1': None, 'PurchaseLengthUnit1': None, 'PurchaseUnitLength1': None, 'PurchaseWeightUnit1': None, 'PurchaseUnitWeight1': None, 'PurchaseWidthUnit1': None, 'PurchaseUnitWidth1': None, 'SalesHeightUnit1': None, 'SalesUnitHeight1': None, 'SalesLengthUnit1': None, 'SalesUnitLength1': None, 'SalesWeightUnit1': None, 'SalesUnitWeight1': None, 'SalesWidthUnit1': None, 'SalesUnitWidth1': None, 'ForceSelectionOfSerialNumber': 'tYES', 'ManageSerialNumbersOnReleaseOnly': 'tNO', 'WTLiable': 'tNO', 'CostAccountingMethod': 'bis_MovingAverage', 'SWW': None, 'WarrantyTemplate': '', 'IndirectTax': 'tNO', 'ArTaxCode': None, 'ApTaxCode': None, 'BaseUnitName': None, 'ItemCountryOrg': None, 'IssueMethod': 'im_Backflush', 'SRIAndBatchManageMethod': 'bomm_OnEveryTransaction', 'IsPhantom': 'tNO', 'InventoryUOM': 'Piece', 'PlanningSystem': 'bop_None', 'ProcurementMethod': 'bom_Buy', 'ComponentWarehouse': 'bomcw_BOM', 'OrderIntervals': None, 'OrderMultiple': 0.0, 'LeadTime': None, 'MinOrderQuantity': 0.0, 'ItemType': 'itItems', 'ItemClass': 'itcMaterial', 'OutgoingServiceCode': -1, 'IncomingServiceCode': -1, 'ServiceGroup': -1, 'NCMCode': -1, 'MaterialType': 'mt_FinishedGoods', 'MaterialGroup': -1, 'ProductSource': '', 'Properties1': 'tNO', 'Properties2': 'tNO', 'Properties3': 'tNO', 'Properties4': 'tNO', 'Properties5': 'tNO', 'Properties6': 'tNO', 'Properties7': 'tNO', 'Properties8': 'tNO', 'Properties9': 'tNO', 'Properties10': 'tNO', 'Properties11': 'tNO', 'Properties12': 'tNO', 'Properties13': 'tNO', 'Properties14': 'tNO', 'Properties15': 'tNO', 'Properties16': 'tNO', 'Properties17': 'tNO', 'Properties18': 'tNO', 'Properties19': 'tNO', 'Properties20': 'tNO', 'Properties21': 'tNO', 'Properties22': 'tNO', 'Properties23': 'tNO', 'Properties24': 'tNO', 'Properties25': 'tNO', 'Properties26': 'tNO', 'Properties27': 'tNO', 'Properties28': 'tNO', 'Properties29': 'tNO', 'Properties30': 'tNO', 'Properties31': 'tNO', 'Properties32': 'tNO', 'Properties33': 'tNO', 'Properties34': 'tNO', 'Properties35': 'tNO', 'Properties36': 'tNO', 'Properties37': 'tNO', 'Properties38': 'tNO', 'Properties39': 'tNO', 'Properties40': 'tNO', 'Properties41': 'tNO', 'Properties42': 'tNO', 'Properties43': 'tNO', 'Properties44': 'tNO', 'Properties45': 'tNO', 'Properties46': 'tNO', 'Properties47': 'tNO', 'Properties48': 'tNO', 'Properties49': 'tNO', 'Properties50': 'tNO', 'Properties51': 'tNO', 'Properties52': 'tNO', 'Properties53': 'tNO', 'Properties54': 'tNO', 'Properties55': 'tNO', 'Properties56': 'tNO', 'Properties57': 'tNO', 'Properties58': 'tNO', 'Properties59': 'tNO', 'Properties60': 'tNO', 'Properties61': 'tNO', 'Properties62': 'tNO', 'Properties63': 'tNO', 'Properties64': 'tNO', 'AutoCreateSerialNumbersOnRelease': 'tNO', 'DNFEntry': -1, 'GTSItemSpec': None, 'GTSItemTaxCategory': None, 'FuelID': None, 'BeverageTableCode': '', 'BeverageGroupCode': '', 'BeverageCommercialBrandCode': None, 'Series': 119, 'ToleranceDays': None, 'TypeOfAdvancedRules': 'toarGeneral', 'IssuePrimarilyBy': 'ipbBinLocations', 'NoDiscounts': 'tNO', 'AssetClass': '', 'AssetGroup': '', 'InventoryNumber': '', 'Technician': None, 'Employee': None, 'Location': None, 'AssetStatus': 'New', 'CapitalizationDate': None, 'StatisticalAsset': 'tNO', 'Cession': 'tNO', 'DeactivateAfterUsefulLife': 'tNO', 'ManageByQuantity': 'tNO', 'UoMGroupEntry': 1, 'InventoryUoMEntry': 1, 'DefaultSalesUoMEntry': None, 'DefaultPurchasingUoMEntry': None, 'DepreciationGroup': None, 'AssetSerialNumber': '', 'InventoryWeight': None, 'InventoryWeightUnit': None, 'InventoryWeight1': None, 'InventoryWeightUnit1': None, 'DefaultCountingUnit': 'Piece', 'CountingItemsPerUnit': 1.0, 'DefaultCountingUoMEntry': 1, 'Excisable': 'tNO', 'ChapterID': -1, 'ScsCode': None, 'SpProdType': None, 'ProdStdCost': 0.0, 'InCostRollup': 'tYES', 'VirtualAssetItem': 'tNO', 'EnforceAssetSerialNumbers': 'tNO', 'AttachmentEntry': None, 'LinkedResource': None, 'UpdateDate': '2025-01-26', 'UpdateTime': '09:40:52', 'GSTRelevnt': 'tNO', 'SACEntry': -1, 'GSTTaxCategory': 'gtc_Regular', 'ServiceCategoryEntry': -1, 'CapitalGoodsOnHoldPercent': 0.0, 'CapitalGoodsOnHoldLimit': 0.0, 'AssessableValue': 0.0, 'AssVal4WTR': 0.0, 'SOIExcisable': 'se_NotExcisable', 'TNVED': None, 'ImportedItem': 'tNO', 'PricingUnit': 1, 'CreateDate': '2025-01-26', 'CreateTime': '09:40:52', 'U_MfgH': None, 'U_Collection': None, 'U_OldCode': None, 'U_ItemsCat': None, 'U_NumberofSet': None, 'U_NileCode': None, 'U_TransferProductionLinkExclude': None, 'U_SBO_CodeType': 'GS1', 'U_SBO_EGSCode': None, 'U_ShopifyColor': None, 'U_SalesChannel': None, 'U_ShopifyItemIDLocal': None, 'U_ShopifyItemIDInternational': None, 'U_ParentCommercialName': None, 'ItemPrices': [{'PriceList': 1, 'Price': 0.0, 'Currency': None, 'AdditionalPrice1': 0.0, 'AdditionalCurrency1': None, 'AdditionalPrice2': 0.0, 'AdditionalCurrency2': None, 'BasePriceList': 1, 'Factor': 1.0, 'UoMPrices': []}, {'PriceList': 2, 'Price': 0.0, 'Currency': None, 'AdditionalPrice1': 0.0, 'AdditionalCurrency1': None, 'AdditionalPrice2': 0.0, 'AdditionalCurrency2': None, 'BasePriceList': 1, 'Factor': 0.4, 'UoMPrices': []}, {'PriceList': 3, 'Price': 0.0, 'Currency': None, 'AdditionalPrice1': 0.0, 'AdditionalCurrency1': None, 'AdditionalPrice2': 0.0, 'AdditionalCurrency2': None, 'BasePriceList': 3, 'Factor': 1.0, 'UoMPrices': []}, {'PriceList': 4, 'Price': 0.0, 'Currency': None, 'AdditionalPrice1': 0.0, 'AdditionalCurrency1': None, 'AdditionalPrice2': 0.0, 'AdditionalCurrency2': None, 'BasePriceList': 4, 'Factor': 1.0, 'UoMPrices': []}, {'PriceList': 5, 'Price': 0.0, 'Currency': None, 'AdditionalPrice1': 0.0, 'AdditionalCurrency1': None, 'AdditionalPrice2': 0.0, 'AdditionalCurrency2': None, 'BasePriceList': 5, 'Factor': 1.0, 'UoMPrices': []}, {'PriceList': 6, 'Price': 0.0, 'Currency': None, 'AdditionalPrice1': 0.0, 'AdditionalCurrency1': None, 'AdditionalPrice2': 0.0, 'AdditionalCurrency2': None, 'BasePriceList': 6, 'Factor': 1.0, 'UoMPrices': []}, {'PriceList': 7, 'Price': 0.0, 'Currency': None, 'AdditionalPrice1': 0.0, 'AdditionalCurrency1': None, 'AdditionalPrice2': 0.0, 'AdditionalCurrency2': None, 'BasePriceList': 7, 'Factor': 1.0, 'UoMPrices': []}, {'PriceList': 8, 'Price': 0.0, 'Currency': None, 'AdditionalPrice1': 0.0, 'AdditionalCurrency1': None, 'AdditionalPrice2': 0.0, 'AdditionalCurrency2': None, 'BasePriceList': 8, 'Factor': 1.0, 'UoMPrices': []}, {'PriceList': 9, 'Price': 0.0, 'Currency': None, 'AdditionalPrice1': 0.0, 'AdditionalCurrency1': None, 'AdditionalPrice2': 0.0, 'AdditionalCurrency2': None, 'BasePriceList': 9, 'Factor': 1.0, 'UoMPrices': []}, {'PriceList': 10, 'Price': 0.0, 'Currency': None, 'AdditionalPrice1': 0.0, 'AdditionalCurrency1': None, 'AdditionalPrice2': 0.0, 'AdditionalCurrency2': None, 'BasePriceList': 10, 'Factor': 1.0, 'UoMPrices': []}], 'ItemWarehouseInfoCollection': [{'MinimalStock': 0.0, 'MaximalStock': 0.0, 'MinimalOrder': 0.0, 'StandardAveragePrice': 180.0, 'Locked': 'tNO', 'InventoryAccount': None, 'CostAccount': None, 'TransferAccount': None, 'RevenuesAccount': None, 'VarienceAccount': None, 'DecreasingAccount': None, 'IncreasingAccount': None, 'ReturningAccount': None, 'ExpensesAccount': None, 'EURevenuesAccount': None, 'EUExpensesAccount': None, 'ForeignRevenueAcc': None, 'ForeignExpensAcc': None, 'ExemptIncomeAcc': None, 'PriceDifferenceAcc': None, 'WarehouseCode': '5A', 'InStock': 25.0, 'Committed': 0.0, 'Ordered': 0.0, 'CountedQuantity': 0.0, 'WasCounted': 'tNO', 'UserSignature': 50, 'Counted': 0.0, 'ExpenseClearingAct': None, 'PurchaseCreditAcc': None, 'EUPurchaseCreditAcc': None, 'ForeignPurchaseCreditAcc': None, 'SalesCreditAcc': None, 'SalesCreditEUAcc': None, 'ExemptedCredits': None, 'SalesCreditForeignAcc': None, 'ExpenseOffsettingAccount': None, 'WipAccount': None, 'ExchangeRateDifferencesAcct': None, 'GoodsClearingAcct': None, 'NegativeInventoryAdjustmentAccount': None, 'CostInflationOffsetAccount': None, 'GLDecreaseAcct': None, 'GLIncreaseAcct': None, 'PAReturnAcct': None, 'PurchaseAcct': None, 'PurchaseOffsetAcct': None, 'ShippedGoodsAccount': None, 'StockInflationOffsetAccount': None, 'StockInflationAdjustAccount': None, 'VATInRevenueAccount': None, 'WipVarianceAccount': None, 'CostInflationAccount': None, 'WHIncomingCenvatAccount': None, 'WHOutgoingCenvatAccount': None, 'StockInTransitAccount': None, 'WipOffsetProfitAndLossAccount': None, 'InventoryOffsetProfitAndLossAccount': None, 'DefaultBin': None, 'DefaultBinEnforced': 'tNO', 'PurchaseBalanceAccount': None, 'ItemCode': 'ACC-0000005', 'ItemCycleCounts': []}, {'MinimalStock': 0.0, 'MaximalStock': 0.0, 'MinimalOrder': 0.0, 'StandardAveragePrice': 180.0, 'Locked': 'tNO', 'InventoryAccount': None, 'CostAccount': None, 'TransferAccount': None, 'RevenuesAccount': None, 'VarienceAccount': None, 'DecreasingAccount': None, 'IncreasingAccount': None, 'ReturningAccount': None, 'ExpensesAccount': None, 'EURevenuesAccount': None, 'EUExpensesAccount': None, 'ForeignRevenueAcc': None, 'ForeignExpensAcc': None, 'ExemptIncomeAcc': None, 'PriceDifferenceAcc': None, 'WarehouseCode': 'Arkan', 'InStock': 25.0, 'Committed': 0.0, 'Ordered': 0.0, 'CountedQuantity': 0.0, 'WasCounted': 'tNO', 'UserSignature': 50, 'Counted': 0.0, 'ExpenseClearingAct': None, 'PurchaseCreditAcc': None, 'EUPurchaseCreditAcc': None, 'ForeignPurchaseCreditAcc': None, 'SalesCreditAcc': None, 'SalesCreditEUAcc': None, 'ExemptedCredits': None, 'SalesCreditForeignAcc': None, 'ExpenseOffsettingAccount': None, 'WipAccount': None, 'ExchangeRateDifferencesAcct': None, 'GoodsClearingAcct': None, 'NegativeInventoryAdjustmentAccount': None, 'CostInflationOffsetAccount': None, 'GLDecreaseAcct': None, 'GLIncreaseAcct': None, 'PAReturnAcct': None, 'PurchaseAcct': None, 'PurchaseOffsetAcct': None, 'ShippedGoodsAccount': None, 'StockInflationOffsetAccount': None, 'StockInflationAdjustAccount': None, 'VATInRevenueAccount': None, 'WipVarianceAccount': None, 'CostInflationAccount': None, 'WHIncomingCenvatAccount': None, 'WHOutgoingCenvatAccount': None, 'StockInTransitAccount': None, 'WipOffsetProfitAndLossAccount': None, 'InventoryOffsetProfitAndLossAccount': None, 'DefaultBin': None, 'DefaultBinEnforced': 'tNO', 'PurchaseBalanceAccount': None, 'ItemCode': 'ACC-0000005', 'ItemCycleCounts': []}, {'MinimalStock': 0.0, 'MaximalStock': 0.0, 'MinimalOrder': 0.0, 'StandardAveragePrice': 0.0, 'Locked': 'tNO', 'InventoryAccount': None, 'CostAccount': None, 'TransferAccount': None, 'RevenuesAccount': None, 'VarienceAccount': None, 'DecreasingAccount': None, 'IncreasingAccount': None, 'ReturningAccount': None, 'ExpensesAccount': None, 'EURevenuesAccount': None, 'EUExpensesAccount': None, 'ForeignRevenueAcc': None, 'ForeignExpensAcc': None, 'ExemptIncomeAcc': None, 'PriceDifferenceAcc': None, 'WarehouseCode': 'DIP', 'InStock': 0.0, 'Committed': 0.0, 'Ordered': 0.0, 'CountedQuantity': 0.0, 'WasCounted': 'tNO', 'UserSignature': 50, 'Counted': 0.0, 'ExpenseClearingAct': None, 'PurchaseCreditAcc': None, 'EUPurchaseCreditAcc': None, 'ForeignPurchaseCreditAcc': None, 'SalesCreditAcc': None, 'SalesCreditEUAcc': None, 'ExemptedCredits': None, 'SalesCreditForeignAcc': None, 'ExpenseOffsettingAccount': None, 'WipAccount': None, 'ExchangeRateDifferencesAcct': None, 'GoodsClearingAcct': None, 'NegativeInventoryAdjustmentAccount': None, 'CostInflationOffsetAccount': None, 'GLDecreaseAcct': None, 'GLIncreaseAcct': None, 'PAReturnAcct': None, 'PurchaseAcct': None, 'PurchaseOffsetAcct': None, 'ShippedGoodsAccount': None, 'StockInflationOffsetAccount': None, 'StockInflationAdjustAccount': None, 'VATInRevenueAccount': None, 'WipVarianceAccount': None, 'CostInflationAccount': None, 'WHIncomingCenvatAccount': None, 'WHOutgoingCenvatAccount': None, 'StockInTransitAccount': None, 'WipOffsetProfitAndLossAccount': None, 'InventoryOffsetProfitAndLossAccount': None, 'DefaultBin': None, 'DefaultBinEnforced': 'tNO', 'PurchaseBalanceAccount': None, 'ItemCode': 'ACC-0000005', 'ItemCycleCounts': []}, {'MinimalStock': 0.0, 'MaximalStock': 0.0, 'MinimalOrder': 0.0, 'StandardAveragePrice': 180.0, 'Locked': 'tNO', 'InventoryAccount': None, 'CostAccount': None, 'TransferAccount': None, 'RevenuesAccount': None, 'VarienceAccount': None, 'DecreasingAccount': None, 'IncreasingAccount': None, 'ReturningAccount': None, 'ExpensesAccount': None, 'EURevenuesAccount': None, 'EUExpensesAccount': None, 'ForeignRevenueAcc': None, 'ForeignExpensAcc': None, 'ExemptIncomeAcc': None, 'PriceDifferenceAcc': None, 'WarehouseCode': 'INC', 'InStock': 0.0, 'Committed': 0.0, 'Ordered': 0.0, 'CountedQuantity': 0.0, 'WasCounted': 'tNO', 'UserSignature': 50, 'Counted': 0.0, 'ExpenseClearingAct': None, 'PurchaseCreditAcc': None, 'EUPurchaseCreditAcc': None, 'ForeignPurchaseCreditAcc': None, 'SalesCreditAcc': None, 'SalesCreditEUAcc': None, 'ExemptedCredits': None, 'SalesCreditForeignAcc': None, 'ExpenseOffsettingAccount': None, 'WipAccount': None, 'ExchangeRateDifferencesAcct': None, 'GoodsClearingAcct': None, 'NegativeInventoryAdjustmentAccount': None, 'CostInflationOffsetAccount': None, 'GLDecreaseAcct': None, 'GLIncreaseAcct': None, 'PAReturnAcct': None, 'PurchaseAcct': None, 'PurchaseOffsetAcct': None, 'ShippedGoodsAccount': None, 'StockInflationOffsetAccount': None, 'StockInflationAdjustAccount': None, 'VATInRevenueAccount': None, 'WipVarianceAccount': None, 'CostInflationAccount': None, 'WHIncomingCenvatAccount': None, 'WHOutgoingCenvatAccount': None, 'StockInTransitAccount': None, 'WipOffsetProfitAndLossAccount': None, 'InventoryOffsetProfitAndLossAccount': None, 'DefaultBin': None, 'DefaultBinEnforced': 'tNO', 'PurchaseBalanceAccount': None, 'ItemCode': 'ACC-0000005', 'ItemCycleCounts': []}, {'MinimalStock': 0.0, 'MaximalStock': 0.0, 'MinimalOrder': 0.0, 'StandardAveragePrice': 0.0, 'Locked': 'tNO', 'InventoryAccount': None, 'CostAccount': None, 'TransferAccount': None, 'RevenuesAccount': None, 'VarienceAccount': None, 'DecreasingAccount': None, 'IncreasingAccount': None, 'ReturningAccount': None, 'ExpensesAccount': None, 'EURevenuesAccount': None, 'EUExpensesAccount': None, 'ForeignRevenueAcc': None, 'ForeignExpensAcc': None, 'ExemptIncomeAcc': None, 'PriceDifferenceAcc': None, 'WarehouseCode': 'ONL', 'InStock': 0.0, 'Committed': 0.0, 'Ordered': 0.0, 'CountedQuantity': 0.0, 'WasCounted': 'tNO', 'UserSignature': 50, 'Counted': 0.0, 'ExpenseClearingAct': None, 'PurchaseCreditAcc': None, 'EUPurchaseCreditAcc': None, 'ForeignPurchaseCreditAcc': None, 'SalesCreditAcc': None, 'SalesCreditEUAcc': None, 'ExemptedCredits': None, 'SalesCreditForeignAcc': None, 'ExpenseOffsettingAccount': None, 'WipAccount': None, 'ExchangeRateDifferencesAcct': None, 'GoodsClearingAcct': None, 'NegativeInventoryAdjustmentAccount': None, 'CostInflationOffsetAccount': None, 'GLDecreaseAcct': None, 'GLIncreaseAcct': None, 'PAReturnAcct': None, 'PurchaseAcct': None, 'PurchaseOffsetAcct': None, 'ShippedGoodsAccount': None, 'StockInflationOffsetAccount': None, 'StockInflationAdjustAccount': None, 'VATInRevenueAccount': None, 'WipVarianceAccount': None, 'CostInflationAccount': None, 'WHIncomingCenvatAccount': None, 'WHOutgoingCenvatAccount': None, 'StockInTransitAccount': None, 'WipOffsetProfitAndLossAccount': None, 'InventoryOffsetProfitAndLossAccount': None, 'DefaultBin': None, 'DefaultBinEnforced': 'tNO', 'PurchaseBalanceAccount': None, 'ItemCode': 'ACC-0000005', 'ItemCycleCounts': []}, {'MinimalStock': 0.0, 'MaximalStock': 0.0, 'MinimalOrder': 0.0, 'StandardAveragePrice': 0.0, 'Locked': 'tNO', 'InventoryAccount': None, 'CostAccount': None, 'TransferAccount': None, 'RevenuesAccount': None, 'VarienceAccount': None, 'DecreasingAccount': None, 'IncreasingAccount': None, 'ReturningAccount': None, 'ExpensesAccount': None, 'EURevenuesAccount': None, 'EUExpensesAccount': None, 'ForeignRevenueAcc': None, 'ForeignExpensAcc': None, 'ExemptIncomeAcc': None, 'PriceDifferenceAcc': None, 'WarehouseCode': 'PHO', 'InStock': 0.0, 'Committed': 0.0, 'Ordered': 0.0, 'CountedQuantity': 0.0, 'WasCounted': 'tNO', 'UserSignature': 50, 'Counted': 0.0, 'ExpenseClearingAct': None, 'PurchaseCreditAcc': None, 'EUPurchaseCreditAcc': None, 'ForeignPurchaseCreditAcc': None, 'SalesCreditAcc': None, 'SalesCreditEUAcc': None, 'ExemptedCredits': None, 'SalesCreditForeignAcc': None, 'ExpenseOffsettingAccount': None, 'WipAccount': None, 'ExchangeRateDifferencesAcct': None, 'GoodsClearingAcct': None, 'NegativeInventoryAdjustmentAccount': None, 'CostInflationOffsetAccount': None, 'GLDecreaseAcct': None, 'GLIncreaseAcct': None, 'PAReturnAcct': None, 'PurchaseAcct': None, 'PurchaseOffsetAcct': None, 'ShippedGoodsAccount': None, 'StockInflationOffsetAccount': None, 'StockInflationAdjustAccount': None, 'VATInRevenueAccount': None, 'WipVarianceAccount': None, 'CostInflationAccount': None, 'WHIncomingCenvatAccount': None, 'WHOutgoingCenvatAccount': None, 'StockInTransitAccount': None, 'WipOffsetProfitAndLossAccount': None, 'InventoryOffsetProfitAndLossAccount': None, 'DefaultBin': None, 'DefaultBinEnforced': 'tNO', 'PurchaseBalanceAccount': None, 'ItemCode': 'ACC-0000005', 'ItemCycleCounts': []}, {'MinimalStock': 0.0, 'MaximalStock': 0.0, 'MinimalOrder': 0.0, 'StandardAveragePrice': 0.0, 'Locked': 'tNO', 'InventoryAccount': None, 'CostAccount': None, 'TransferAccount': None, 'RevenuesAccount': None, 'VarienceAccount': None, 'DecreasingAccount': None, 'IncreasingAccount': None, 'ReturningAccount': None, 'ExpensesAccount': None, 'EURevenuesAccount': None, 'EUExpensesAccount': None, 'ForeignRevenueAcc': None, 'ForeignExpensAcc': None, 'ExemptIncomeAcc': None, 'PriceDifferenceAcc': None, 'WarehouseCode': 'PHO-EX', 'InStock': 0.0, 'Committed': 0.0, 'Ordered': 0.0, 'CountedQuantity': 0.0, 'WasCounted': 'tNO', 'UserSignature': 1, 'Counted': 0.0, 'ExpenseClearingAct': None, 'PurchaseCreditAcc': None, 'EUPurchaseCreditAcc': None, 'ForeignPurchaseCreditAcc': None, 'SalesCreditAcc': None, 'SalesCreditEUAcc': None, 'ExemptedCredits': None, 'SalesCreditForeignAcc': None, 'ExpenseOffsettingAccount': None, 'WipAccount': None, 'ExchangeRateDifferencesAcct': None, 'GoodsClearingAcct': None, 'NegativeInventoryAdjustmentAccount': None, 'CostInflationOffsetAccount': None, 'GLDecreaseAcct': None, 'GLIncreaseAcct': None, 'PAReturnAcct': None, 'PurchaseAcct': None, 'PurchaseOffsetAcct': None, 'ShippedGoodsAccount': None, 'StockInflationOffsetAccount': None, 'StockInflationAdjustAccount': None, 'VATInRevenueAccount': None, 'WipVarianceAccount': None, 'CostInflationAccount': None, 'WHIncomingCenvatAccount': None, 'WHOutgoingCenvatAccount': None, 'StockInTransitAccount': None, 'WipOffsetProfitAndLossAccount': None, 'InventoryOffsetProfitAndLossAccount': None, 'DefaultBin': None, 'DefaultBinEnforced': 'tNO', 'PurchaseBalanceAccount': None, 'ItemCode': 'ACC-0000005', 'ItemCycleCounts': []}, {'MinimalStock': 0.0, 'MaximalStock': 0.0, 'MinimalOrder': 0.0, 'StandardAveragePrice': 0.0, 'Locked': 'tNO', 'InventoryAccount': None, 'CostAccount': None, 'TransferAccount': None, 'RevenuesAccount': None, 'VarienceAccount': None, 'DecreasingAccount': None, 'IncreasingAccount': None, 'ReturningAccount': None, 'ExpensesAccount': None, 'EURevenuesAccount': None, 'EUExpensesAccount': None, 'ForeignRevenueAcc': None, 'ForeignExpensAcc': None, 'ExemptIncomeAcc': None, 'PriceDifferenceAcc': None, 'WarehouseCode': 'PHO-IN', 'InStock': 0.0, 'Committed': 0.0, 'Ordered': 0.0, 'CountedQuantity': 0.0, 'WasCounted': 'tNO', 'UserSignature': 1, 'Counted': 0.0, 'ExpenseClearingAct': None, 'PurchaseCreditAcc': None, 'EUPurchaseCreditAcc': None, 'ForeignPurchaseCreditAcc': None, 'SalesCreditAcc': None, 'SalesCreditEUAcc': None, 'ExemptedCredits': None, 'SalesCreditForeignAcc': None, 'ExpenseOffsettingAccount': None, 'WipAccount': None, 'ExchangeRateDifferencesAcct': None, 'GoodsClearingAcct': None, 'NegativeInventoryAdjustmentAccount': None, 'CostInflationOffsetAccount': None, 'GLDecreaseAcct': None, 'GLIncreaseAcct': None, 'PAReturnAcct': None, 'PurchaseAcct': None, 'PurchaseOffsetAcct': None, 'ShippedGoodsAccount': None, 'StockInflationOffsetAccount': None, 'StockInflationAdjustAccount': None, 'VATInRevenueAccount': None, 'WipVarianceAccount': None, 'CostInflationAccount': None, 'WHIncomingCenvatAccount': None, 'WHOutgoingCenvatAccount': None, 'StockInTransitAccount': None, 'WipOffsetProfitAndLossAccount': None, 'InventoryOffsetProfitAndLossAccount': None, 'DefaultBin': None, 'DefaultBinEnforced': 'tNO', 'PurchaseBalanceAccount': None, 'ItemCode': 'ACC-0000005', 'ItemCycleCounts': []}, {'MinimalStock': 0.0, 'MaximalStock': 0.0, 'MinimalOrder': 0.0, 'StandardAveragePrice': 0.0, 'Locked': 'tNO', 'InventoryAccount': None, 'CostAccount': None, 'TransferAccount': None, 'RevenuesAccount': None, 'VarienceAccount': None, 'DecreasingAccount': None, 'IncreasingAccount': None, 'ReturningAccount': None, 'ExpensesAccount': None, 'EURevenuesAccount': None, 'EUExpensesAccount': None, 'ForeignRevenueAcc': None, 'ForeignExpensAcc': None, 'ExemptIncomeAcc': None, 'PriceDifferenceAcc': None, 'WarehouseCode': 'RTW', 'InStock': 0.0, 'Committed': 0.0, 'Ordered': 0.0, 'CountedQuantity': 0.0, 'WasCounted': 'tNO', 'UserSignature': 50, 'Counted': 0.0, 'ExpenseClearingAct': None, 'PurchaseCreditAcc': None, 'EUPurchaseCreditAcc': None, 'ForeignPurchaseCreditAcc': None, 'SalesCreditAcc': None, 'SalesCreditEUAcc': None, 'ExemptedCredits': None, 'SalesCreditForeignAcc': None, 'ExpenseOffsettingAccount': None, 'WipAccount': None, 'ExchangeRateDifferencesAcct': None, 'GoodsClearingAcct': None, 'NegativeInventoryAdjustmentAccount': None, 'CostInflationOffsetAccount': None, 'GLDecreaseAcct': None, 'GLIncreaseAcct': None, 'PAReturnAcct': None, 'PurchaseAcct': None, 'PurchaseOffsetAcct': None, 'ShippedGoodsAccount': None, 'StockInflationOffsetAccount': None, 'StockInflationAdjustAccount': None, 'VATInRevenueAccount': None, 'WipVarianceAccount': None, 'CostInflationAccount': None, 'WHIncomingCenvatAccount': None, 'WHOutgoingCenvatAccount': None, 'StockInTransitAccount': None, 'WipOffsetProfitAndLossAccount': None, 'InventoryOffsetProfitAndLossAccount': None, 'DefaultBin': None, 'DefaultBinEnforced': 'tNO', 'PurchaseBalanceAccount': None, 'ItemCode': 'ACC-0000005', 'ItemCycleCounts': []}, {'MinimalStock': 0.0, 'MaximalStock': 0.0, 'MinimalOrder': 0.0, 'StandardAveragePrice': 0.0, 'Locked': 'tNO', 'InventoryAccount': None, 'CostAccount': None, 'TransferAccount': None, 'RevenuesAccount': None, 'VarienceAccount': None, 'DecreasingAccount': None, 'IncreasingAccount': None, 'ReturningAccount': None, 'ExpensesAccount': None, 'EURevenuesAccount': None, 'EUExpensesAccount': None, 'ForeignRevenueAcc': None, 'ForeignExpensAcc': None, 'ExemptIncomeAcc': None, 'PriceDifferenceAcc': None, 'WarehouseCode': 'RTWH', 'InStock': 0.0, 'Committed': 0.0, 'Ordered': 0.0, 'CountedQuantity': 0.0, 'WasCounted': 'tNO', 'UserSignature': 1, 'Counted': 0.0, 'ExpenseClearingAct': None, 'PurchaseCreditAcc': None, 'EUPurchaseCreditAcc': None, 'ForeignPurchaseCreditAcc': None, 'SalesCreditAcc': None, 'SalesCreditEUAcc': None, 'ExemptedCredits': None, 'SalesCreditForeignAcc': None, 'ExpenseOffsettingAccount': None, 'WipAccount': None, 'ExchangeRateDifferencesAcct': None, 'GoodsClearingAcct': None, 'NegativeInventoryAdjustmentAccount': None, 'CostInflationOffsetAccount': None, 'GLDecreaseAcct': None, 'GLIncreaseAcct': None, 'PAReturnAcct': None, 'PurchaseAcct': None, 'PurchaseOffsetAcct': None, 'ShippedGoodsAccount': None, 'StockInflationOffsetAccount': None, 'StockInflationAdjustAccount': None, 'VATInRevenueAccount': None, 'WipVarianceAccount': None, 'CostInflationAccount': None, 'WHIncomingCenvatAccount': None, 'WHOutgoingCenvatAccount': None, 'StockInTransitAccount': None, 'WipOffsetProfitAndLossAccount': None, 'InventoryOffsetProfitAndLossAccount': None, 'DefaultBin': None, 'DefaultBinEnforced': 'tNO', 'PurchaseBalanceAccount': None, 'ItemCode': 'ACC-0000005', 'ItemCycleCounts': []}, {'MinimalStock': 0.0, 'MaximalStock': 0.0, 'MinimalOrder': 0.0, 'StandardAveragePrice': 0.0, 'Locked': 'tNO', 'InventoryAccount': None, 'CostAccount': None, 'TransferAccount': None, 'RevenuesAccount': None, 'VarienceAccount': None, 'DecreasingAccount': None, 'IncreasingAccount': None, 'ReturningAccount': None, 'ExpensesAccount': None, 'EURevenuesAccount': None, 'EUExpensesAccount': None, 'ForeignRevenueAcc': None, 'ForeignExpensAcc': None, 'ExemptIncomeAcc': None, 'PriceDifferenceAcc': None, 'WarehouseCode': 'SW', 'InStock': 0.0, 'Committed': 0.0, 'Ordered': 0.0, 'CountedQuantity': 0.0, 'WasCounted': 'tNO', 'UserSignature': 50, 'Counted': 0.0, 'ExpenseClearingAct': None, 'PurchaseCreditAcc': None, 'EUPurchaseCreditAcc': None, 'ForeignPurchaseCreditAcc': None, 'SalesCreditAcc': None, 'SalesCreditEUAcc': None, 'ExemptedCredits': None, 'SalesCreditForeignAcc': None, 'ExpenseOffsettingAccount': None, 'WipAccount': None, 'ExchangeRateDifferencesAcct': None, 'GoodsClearingAcct': None, 'NegativeInventoryAdjustmentAccount': None, 'CostInflationOffsetAccount': None, 'GLDecreaseAcct': None, 'GLIncreaseAcct': None, 'PAReturnAcct': None, 'PurchaseAcct': None, 'PurchaseOffsetAcct': None, 'ShippedGoodsAccount': None, 'StockInflationOffsetAccount': None, 'StockInflationAdjustAccount': None, 'VATInRevenueAccount': None, 'WipVarianceAccount': None, 'CostInflationAccount': None, 'WHIncomingCenvatAccount': None, 'WHOutgoingCenvatAccount': None, 'StockInTransitAccount': None, 'WipOffsetProfitAndLossAccount': None, 'InventoryOffsetProfitAndLossAccount': None, 'DefaultBin': None, 'DefaultBinEnforced': 'tNO', 'PurchaseBalanceAccount': None, 'ItemCode': 'ACC-0000005', 'ItemCycleCounts': []}, {'MinimalStock': 0.0, 'MaximalStock': 0.0, 'MinimalOrder': 0.0, 'StandardAveragePrice': 0.0, 'Locked': 'tNO', 'InventoryAccount': None, 'CostAccount': None, 'TransferAccount': None, 'RevenuesAccount': None, 'VarienceAccount': None, 'DecreasingAccount': None, 'IncreasingAccount': None, 'ReturningAccount': None, 'ExpensesAccount': None, 'EURevenuesAccount': None, 'EUExpensesAccount': None, 'ForeignRevenueAcc': None, 'ForeignExpensAcc': None, 'ExemptIncomeAcc': None, 'PriceDifferenceAcc': None, 'WarehouseCode': 'WLS', 'InStock': 0.0, 'Committed': 0.0, 'Ordered': 0.0, 'CountedQuantity': 0.0, 'WasCounted': 'tNO', 'UserSignature': 50, 'Counted': 0.0, 'ExpenseClearingAct': None, 'PurchaseCreditAcc': None, 'EUPurchaseCreditAcc': None, 'ForeignPurchaseCreditAcc': None, 'SalesCreditAcc': None, 'SalesCreditEUAcc': None, 'ExemptedCredits': None, 'SalesCreditForeignAcc': None, 'ExpenseOffsettingAccount': None, 'WipAccount': None, 'ExchangeRateDifferencesAcct': None, 'GoodsClearingAcct': None, 'NegativeInventoryAdjustmentAccount': None, 'CostInflationOffsetAccount': None, 'GLDecreaseAcct': None, 'GLIncreaseAcct': None, 'PAReturnAcct': None, 'PurchaseAcct': None, 'PurchaseOffsetAcct': None, 'ShippedGoodsAccount': None, 'StockInflationOffsetAccount': None, 'StockInflationAdjustAccount': None, 'VATInRevenueAccount': None, 'WipVarianceAccount': None, 'CostInflationAccount': None, 'WHIncomingCenvatAccount': None, 'WHOutgoingCenvatAccount': None, 'StockInTransitAccount': None, 'WipOffsetProfitAndLossAccount': None, 'InventoryOffsetProfitAndLossAccount': None, 'DefaultBin': None, 'DefaultBinEnforced': 'tNO', 'PurchaseBalanceAccount': None, 'ItemCode': 'ACC-0000005', 'ItemCycleCounts': []}, {'MinimalStock': 0.0, 'MaximalStock': 0.0, 'MinimalOrder': 0.0, 'StandardAveragePrice': 0.0, 'Locked': 'tNO', 'InventoryAccount': None, 'CostAccount': None, 'TransferAccount': None, 'RevenuesAccount': None, 'VarienceAccount': None, 'DecreasingAccount': None, 'IncreasingAccount': None, 'ReturningAccount': None, 'ExpensesAccount': None, 'EURevenuesAccount': None, 'EUExpensesAccount': None, 'ForeignRevenueAcc': None, 'ForeignExpensAcc': None, 'ExemptIncomeAcc': None, 'PriceDifferenceAcc': None, 'WarehouseCode': 'WW', 'InStock': 0.0, 'Committed': 0.0, 'Ordered': 0.0, 'CountedQuantity': 0.0, 'WasCounted': 'tNO', 'UserSignature': 50, 'Counted': 0.0, 'ExpenseClearingAct': None, 'PurchaseCreditAcc': None, 'EUPurchaseCreditAcc': None, 'ForeignPurchaseCreditAcc': None, 'SalesCreditAcc': None, 'SalesCreditEUAcc': None, 'ExemptedCredits': None, 'SalesCreditForeignAcc': None, 'ExpenseOffsettingAccount': None, 'WipAccount': None, 'ExchangeRateDifferencesAcct': None, 'GoodsClearingAcct': None, 'NegativeInventoryAdjustmentAccount': None, 'CostInflationOffsetAccount': None, 'GLDecreaseAcct': None, 'GLIncreaseAcct': None, 'PAReturnAcct': None, 'PurchaseAcct': None, 'PurchaseOffsetAcct': None, 'ShippedGoodsAccount': None, 'StockInflationOffsetAccount': None, 'StockInflationAdjustAccount': None, 'VATInRevenueAccount': None, 'WipVarianceAccount': None, 'CostInflationAccount': None, 'WHIncomingCenvatAccount': None, 'WHOutgoingCenvatAccount': None, 'StockInTransitAccount': None, 'WipOffsetProfitAndLossAccount': None, 'InventoryOffsetProfitAndLossAccount': None, 'DefaultBin': None, 'DefaultBinEnforced': 'tNO', 'PurchaseBalanceAccount': None, 'ItemCode': 'ACC-0000005', 'ItemCycleCounts': []}, {'MinimalStock': 0.0, 'MaximalStock': 0.0, 'MinimalOrder': 0.0, 'StandardAveragePrice': 0.0, 'Locked': 'tNO', 'InventoryAccount': None, 'CostAccount': None, 'TransferAccount': None, 'RevenuesAccount': None, 'VarienceAccount': None, 'DecreasingAccount': None, 'IncreasingAccount': None, 'ReturningAccount': None, 'ExpensesAccount': None, 'EURevenuesAccount': None, 'EUExpensesAccount': None, 'ForeignRevenueAcc': None, 'ForeignExpensAcc': None, 'ExemptIncomeAcc': None, 'PriceDifferenceAcc': None, 'WarehouseCode': 'WW-CON', 'InStock': 0.0, 'Committed': 0.0, 'Ordered': 0.0, 'CountedQuantity': 0.0, 'WasCounted': 'tNO', 'UserSignature': 50, 'Counted': 0.0, 'ExpenseClearingAct': None, 'PurchaseCreditAcc': None, 'EUPurchaseCreditAcc': None, 'ForeignPurchaseCreditAcc': None, 'SalesCreditAcc': None, 'SalesCreditEUAcc': None, 'ExemptedCredits': None, 'SalesCreditForeignAcc': None, 'ExpenseOffsettingAccount': None, 'WipAccount': None, 'ExchangeRateDifferencesAcct': None, 'GoodsClearingAcct': None, 'NegativeInventoryAdjustmentAccount': None, 'CostInflationOffsetAccount': None, 'GLDecreaseAcct': None, 'GLIncreaseAcct': None, 'PAReturnAcct': None, 'PurchaseAcct': None, 'PurchaseOffsetAcct': None, 'ShippedGoodsAccount': None, 'StockInflationOffsetAccount': None, 'StockInflationAdjustAccount': None, 'VATInRevenueAccount': None, 'WipVarianceAccount': None, 'CostInflationAccount': None, 'WHIncomingCenvatAccount': None, 'WHOutgoingCenvatAccount': None, 'StockInTransitAccount': None, 'WipOffsetProfitAndLossAccount': None, 'InventoryOffsetProfitAndLossAccount': None, 'DefaultBin': None, 'DefaultBinEnforced': 'tNO', 'PurchaseBalanceAccount': None, 'ItemCode': 'ACC-0000005', 'ItemCycleCounts': []}, {'MinimalStock': 0.0, 'MaximalStock': 0.0, 'MinimalOrder': 0.0, 'StandardAveragePrice': 0.0, 'Locked': 'tNO', 'InventoryAccount': None, 'CostAccount': None, 'TransferAccount': None, 'RevenuesAccount': None, 'VarienceAccount': None, 'DecreasingAccount': None, 'IncreasingAccount': None, 'ReturningAccount': None, 'ExpensesAccount': None, 'EURevenuesAccount': None, 'EUExpensesAccount': None, 'ForeignRevenueAcc': None, 'ForeignExpensAcc': None, 'ExemptIncomeAcc': None, 'PriceDifferenceAcc': None, 'WarehouseCode': 'WW-DAM', 'InStock': 0.0, 'Committed': 0.0, 'Ordered': 0.0, 'CountedQuantity': 0.0, 'WasCounted': 'tNO', 'UserSignature': 50, 'Counted': 0.0, 'ExpenseClearingAct': None, 'PurchaseCreditAcc': None, 'EUPurchaseCreditAcc': None, 'ForeignPurchaseCreditAcc': None, 'SalesCreditAcc': None, 'SalesCreditEUAcc': None, 'ExemptedCredits': None, 'SalesCreditForeignAcc': None, 'ExpenseOffsettingAccount': None, 'WipAccount': None, 'ExchangeRateDifferencesAcct': None, 'GoodsClearingAcct': None, 'NegativeInventoryAdjustmentAccount': None, 'CostInflationOffsetAccount': None, 'GLDecreaseAcct': None, 'GLIncreaseAcct': None, 'PAReturnAcct': None, 'PurchaseAcct': None, 'PurchaseOffsetAcct': None, 'ShippedGoodsAccount': None, 'StockInflationOffsetAccount': None, 'StockInflationAdjustAccount': None, 'VATInRevenueAccount': None, 'WipVarianceAccount': None, 'CostInflationAccount': None, 'WHIncomingCenvatAccount': None, 'WHOutgoingCenvatAccount': None, 'StockInTransitAccount': None, 'WipOffsetProfitAndLossAccount': None, 'InventoryOffsetProfitAndLossAccount': None, 'DefaultBin': None, 'DefaultBinEnforced': 'tNO', 'PurchaseBalanceAccount': None, 'ItemCode': 'ACC-0000005', 'ItemCycleCounts': []}, {'MinimalStock': 0.0, 'MaximalStock': 0.0, 'MinimalOrder': 0.0, 'StandardAveragePrice': 0.0, 'Locked': 'tNO', 'InventoryAccount': None, 'CostAccount': None, 'TransferAccount': None, 'RevenuesAccount': None, 'VarienceAccount': None, 'DecreasingAccount': None, 'IncreasingAccount': None, 'ReturningAccount': None, 'ExpensesAccount': None, 'EURevenuesAccount': None, 'EUExpensesAccount': None, 'ForeignRevenueAcc': None, 'ForeignExpensAcc': None, 'ExemptIncomeAcc': None, 'PriceDifferenceAcc': None, 'WarehouseCode': 'WW-REP', 'InStock': 0.0, 'Committed': 0.0, 'Ordered': 0.0, 'CountedQuantity': 0.0, 'WasCounted': 'tNO', 'UserSignature': 50, 'Counted': 0.0, 'ExpenseClearingAct': None, 'PurchaseCreditAcc': None, 'EUPurchaseCreditAcc': None, 'ForeignPurchaseCreditAcc': None, 'SalesCreditAcc': None, 'SalesCreditEUAcc': None, 'ExemptedCredits': None, 'SalesCreditForeignAcc': None, 'ExpenseOffsettingAccount': None, 'WipAccount': None, 'ExchangeRateDifferencesAcct': None, 'GoodsClearingAcct': None, 'NegativeInventoryAdjustmentAccount': None, 'CostInflationOffsetAccount': None, 'GLDecreaseAcct': None, 'GLIncreaseAcct': None, 'PAReturnAcct': None, 'PurchaseAcct': None, 'PurchaseOffsetAcct': None, 'ShippedGoodsAccount': None, 'StockInflationOffsetAccount': None, 'StockInflationAdjustAccount': None, 'VATInRevenueAccount': None, 'WipVarianceAccount': None, 'CostInflationAccount': None, 'WHIncomingCenvatAccount': None, 'WHOutgoingCenvatAccount': None, 'StockInTransitAccount': None, 'WipOffsetProfitAndLossAccount': None, 'InventoryOffsetProfitAndLossAccount': None, 'DefaultBin': None, 'DefaultBinEnforced': 'tNO', 'PurchaseBalanceAccount': None, 'ItemCode': 'ACC-0000005', 'ItemCycleCounts': []}, {'MinimalStock': 0.0, 'MaximalStock': 0.0, 'MinimalOrder': 0.0, 'StandardAveragePrice': 0.0, 'Locked': 'tNO', 'InventoryAccount': None, 'CostAccount': None, 'TransferAccount': None, 'RevenuesAccount': None, 'VarienceAccount': None, 'DecreasingAccount': None, 'IncreasingAccount': None, 'ReturningAccount': None, 'ExpensesAccount': None, 'EURevenuesAccount': None, 'EUExpensesAccount': None, 'ForeignRevenueAcc': None, 'ForeignExpensAcc': None, 'ExemptIncomeAcc': None, 'PriceDifferenceAcc': None, 'WarehouseCode': 'WW-SAM', 'InStock': 0.0, 'Committed': 0.0, 'Ordered': 0.0, 'CountedQuantity': 0.0, 'WasCounted': 'tNO', 'UserSignature': 50, 'Counted': 0.0, 'ExpenseClearingAct': None, 'PurchaseCreditAcc': None, 'EUPurchaseCreditAcc': None, 'ForeignPurchaseCreditAcc': None, 'SalesCreditAcc': None, 'SalesCreditEUAcc': None, 'ExemptedCredits': None, 'SalesCreditForeignAcc': None, 'ExpenseOffsettingAccount': None, 'WipAccount': None, 'ExchangeRateDifferencesAcct': None, 'GoodsClearingAcct': None, 'NegativeInventoryAdjustmentAccount': None, 'CostInflationOffsetAccount': None, 'GLDecreaseAcct': None, 'GLIncreaseAcct': None, 'PAReturnAcct': None, 'PurchaseAcct': None, 'PurchaseOffsetAcct': None, 'ShippedGoodsAccount': None, 'StockInflationOffsetAccount': None, 'StockInflationAdjustAccount': None, 'VATInRevenueAccount': None, 'WipVarianceAccount': None, 'CostInflationAccount': None, 'WHIncomingCenvatAccount': None, 'WHOutgoingCenvatAccount': None, 'StockInTransitAccount': None, 'WipOffsetProfitAndLossAccount': None, 'InventoryOffsetProfitAndLossAccount': None, 'DefaultBin': None, 'DefaultBinEnforced': 'tNO', 'PurchaseBalanceAccount': None, 'ItemCode': 'ACC-0000005', 'ItemCycleCounts': []}, {'MinimalStock': 0.0, 'MaximalStock': 0.0, 'MinimalOrder': 0.0, 'StandardAveragePrice': 0.0, 'Locked': 'tNO', 'InventoryAccount': None, 'CostAccount': None, 'TransferAccount': None, 'RevenuesAccount': None, 'VarienceAccount': None, 'DecreasingAccount': None, 'IncreasingAccount': None, 'ReturningAccount': None, 'ExpensesAccount': None, 'EURevenuesAccount': None, 'EUExpensesAccount': None, 'ForeignRevenueAcc': None, 'ForeignExpensAcc': None, 'ExemptIncomeAcc': None, 'PriceDifferenceAcc': None, 'WarehouseCode': 'WW-WIP', 'InStock': 0.0, 'Committed': 0.0, 'Ordered': 0.0, 'CountedQuantity': 0.0, 'WasCounted': 'tNO', 'UserSignature': 50, 'Counted': 0.0, 'ExpenseClearingAct': None, 'PurchaseCreditAcc': None, 'EUPurchaseCreditAcc': None, 'ForeignPurchaseCreditAcc': None, 'SalesCreditAcc': None, 'SalesCreditEUAcc': None, 'ExemptedCredits': None, 'SalesCreditForeignAcc': None, 'ExpenseOffsettingAccount': None, 'WipAccount': None, 'ExchangeRateDifferencesAcct': None, 'GoodsClearingAcct': None, 'NegativeInventoryAdjustmentAccount': None, 'CostInflationOffsetAccount': None, 'GLDecreaseAcct': None, 'GLIncreaseAcct': None, 'PAReturnAcct': None, 'PurchaseAcct': None, 'PurchaseOffsetAcct': None, 'ShippedGoodsAccount': None, 'StockInflationOffsetAccount': None, 'StockInflationAdjustAccount': None, 'VATInRevenueAccount': None, 'WipVarianceAccount': None, 'CostInflationAccount': None, 'WHIncomingCenvatAccount': None, 'WHOutgoingCenvatAccount': None, 'StockInTransitAccount': None, 'WipOffsetProfitAndLossAccount': None, 'InventoryOffsetProfitAndLossAccount': None, 'DefaultBin': None, 'DefaultBinEnforced': 'tNO', 'PurchaseBalanceAccount': None, 'ItemCode': 'ACC-0000005', 'ItemCycleCounts': []}, {'MinimalStock': 0.0, 'MaximalStock': 0.0, 'MinimalOrder': 0.0, 'StandardAveragePrice': 0.0, 'Locked': 'tNO', 'InventoryAccount': None, 'CostAccount': None, 'TransferAccount': None, 'RevenuesAccount': None, 'VarienceAccount': None, 'DecreasingAccount': None, 'IncreasingAccount': None, 'ReturningAccount': None, 'ExpensesAccount': None, 'EURevenuesAccount': None, 'EUExpensesAccount': None, 'ForeignRevenueAcc': None, 'ForeignExpensAcc': None, 'ExemptIncomeAcc': None, 'PriceDifferenceAcc': None, 'WarehouseCode': 'ZW', 'InStock': 0.0, 'Committed': 0.0, 'Ordered': 0.0, 'CountedQuantity': 0.0, 'WasCounted': 'tNO', 'UserSignature': 50, 'Counted': 0.0, 'ExpenseClearingAct': None, 'PurchaseCreditAcc': None, 'EUPurchaseCreditAcc': None, 'ForeignPurchaseCreditAcc': None, 'SalesCreditAcc': None, 'SalesCreditEUAcc': None, 'ExemptedCredits': None, 'SalesCreditForeignAcc': None, 'ExpenseOffsettingAccount': None, 'WipAccount': None, 'ExchangeRateDifferencesAcct': None, 'GoodsClearingAcct': None, 'NegativeInventoryAdjustmentAccount': None, 'CostInflationOffsetAccount': None, 'GLDecreaseAcct': None, 'GLIncreaseAcct': None, 'PAReturnAcct': None, 'PurchaseAcct': None, 'PurchaseOffsetAcct': None, 'ShippedGoodsAccount': None, 'StockInflationOffsetAccount': None, 'StockInflationAdjustAccount': None, 'VATInRevenueAccount': None, 'WipVarianceAccount': None, 'CostInflationAccount': None, 'WHIncomingCenvatAccount': None, 'WHOutgoingCenvatAccount': None, 'StockInTransitAccount': None, 'WipOffsetProfitAndLossAccount': None, 'InventoryOffsetProfitAndLossAccount': None, 'DefaultBin': None, 'DefaultBinEnforced': 'tNO', 'PurchaseBalanceAccount': None, 'ItemCode': 'ACC-0000005', 'ItemCycleCounts': []}], 'ItemPreferredVendors': [], 'ItemLocalizationInfos': [], 'ItemProjects': [], 'ItemDistributionRules': [], 'ItemAttributeGroups': [], 'ItemDepreciationParameters': [], 'ItemPeriodControls': [], 'ItemUnitOfMeasurementCollection': [{'UoMType': 'iutInventory', 'UoMEntry': 1, 'DefaultBarcode': 0, 'DefaultPackage': None, 'Length1': 0.0, 'Length1Unit': None, 'Length2': 0.0, 'Length2Unit': None, 'Width1': 0.0, 'Width1Unit': None, 'Width2': 0.0, 'Width2Unit': None, 'Height1': 0.0, 'Height1Unit': None, 'Height2': 0.0, 'Height2Unit': None, 'Volume': 0.0, 'VolumeUnit': None, 'Weight1': 0.0, 'Weight1Unit': None, 'Weight2': 0.0, 'Weight2Unit': None, 'ItemUoMPackageCollection': []}, {'UoMType': 'iutPurchasing', 'UoMEntry': 1, 'DefaultBarcode': 0, 'DefaultPackage': None, 'Length1': 0.0, 'Length1Unit': None, 'Length2': 0.0, 'Length2Unit': None, 'Width1': 0.0, 'Width1Unit': None, 'Width2': 0.0, 'Width2Unit': None, 'Height1': 0.0, 'Height1Unit': None, 'Height2': 0.0, 'Height2Unit': None, 'Volume': 0.0, 'VolumeUnit': 2, 'Weight1': 0.0, 'Weight1Unit': None, 'Weight2': 0.0, 'Weight2Unit': None, 'ItemUoMPackageCollection': []}, {'UoMType': 'iutPurchasing', 'UoMEntry': 8, 'DefaultBarcode': None, 'DefaultPackage': None, 'Length1': 0.0, 'Length1Unit': None, 'Length2': 0.0, 'Length2Unit': None, 'Width1': 0.0, 'Width1Unit': None, 'Width2': 0.0, 'Width2Unit': None, 'Height1': 0.0, 'Height1Unit': None, 'Height2': 0.0, 'Height2Unit': None, 'Volume': 0.0, 'VolumeUnit': 4, 'Weight1': 0.0, 'Weight1Unit': None, 'Weight2': 0.0, 'Weight2Unit': None, 'ItemUoMPackageCollection': []}, {'UoMType': 'iutSales', 'UoMEntry': 1, 'DefaultBarcode': 0, 'DefaultPackage': None, 'Length1': 0.0, 'Length1Unit': None, 'Length2': 0.0, 'Length2Unit': None, 'Width1': 0.0, 'Width1Unit': None, 'Width2': 0.0, 'Width2Unit': None, 'Height1': 0.0, 'Height1Unit': None, 'Height2': 0.0, 'Height2Unit': None, 'Volume': 0.0, 'VolumeUnit': 2, 'Weight1': 0.0, 'Weight1Unit': None, 'Weight2': 0.0, 'Weight2Unit': None, 'ItemUoMPackageCollection': []}, {'UoMType': 'iutSales', 'UoMEntry': 8, 'DefaultBarcode': None, 'DefaultPackage': None, 'Length1': 0.0, 'Length1Unit': None, 'Length2': 0.0, 'Length2Unit': None, 'Width1': 0.0, 'Width1Unit': None, 'Width2': 0.0, 'Width2Unit': None, 'Height1': 0.0, 'Height1Unit': None, 'Height2': 0.0, 'Height2Unit': None, 'Volume': 0.0, 'VolumeUnit': 4, 'Weight1': 0.0, 'Weight1Unit': None, 'Weight2': 0.0, 'Weight2Unit': None, 'ItemUoMPackageCollection': []}], 'ItemBarCodeCollection': [], 'ItemIntrastatExtension': {'ItemCode': 'ACC-0000005', 'CommodityCode': None, 'SupplementaryUnit': None, 'FactorOfSupplementaryUnit': 0.0, 'ImportRegionState': 0, 'ExportRegionState': 0, 'ImportNatureOfTransaction': None, 'ExportNatureOfTransaction': None, 'ImportStatisticalProcedure': None, 'ExportStatisticalProcedure': None, 'CountryOfOrigin': None, 'ServiceCode': None, 'Type': 'dDocument_Items', 'ServiceSupplyMethod': 'ssmImmediate', 'ServicePaymentMethod': 'spmOther', 'ImportRegionCountry': 'GB', 'ExportRegionCountry': 'GB', 'UseWeightInCalculation': 'tYES', 'IntrastatRelevant': 'tNO', 'StatisticalCode': None}}]}, 'status': 'success'}
2025-08-05 18:06:51,758 - sync_service - INFO - API Call: {'service': 'shopify', 'endpoint': 'graphql_local', 'request': {'query': '\n        query getOrders($first: Int!) {\n            orders(first: $first) {\n                edges {\n                    node {\n                        id\n                        name\n                        createdAt\n                    }\n                }\n            }\n        }\n        ', 'variables': {'first': 1}}, 'response': None, 'status': None}
2025-08-05 18:07:01,776 - sync_service - ERROR - GraphQL query error for store local: 
2025-08-05 18:07:02,532 - sync_service - INFO - SAP logging client login successful
2025-08-05 18:07:03,198 - sync_service - INFO - API log added to SAP: shopify - /admin/api/graphql_local - failure
2025-08-05 18:07:03,205 - sync_service - INFO - API Call: {'service': 'shopify', 'endpoint': 'graphql_local', 'request': {'query': '\n            query getOrders($first: Int!, $after: String) {\n                orders(first: $first, after: $after, sortKey: CREATED_AT, reverse: true) {\n                    edges {\n                        node {\n                            id\n                            name\n                            createdAt\n                            tags\n                            totalPriceSet {\n                                shopMoney {\n                                    amount\n                                    currencyCode\n                                }\n                            }\n                            subtotalPriceSet {\n                                shopMoney {\n                                    amount\n                                    currencyCode\n                                }\n                            }\n                            totalTaxSet {\n                                shopMoney {\n                                    amount\n                                    currencyCode\n                                }\n                            }\n                            totalShippingPriceSet {\n                                shopMoney {\n                                    amount\n                                    currencyCode\n                                }\n                            }\n                            customer {\n                                id\n                                firstName\n                                lastName\n                                email\n                                phone\n                                addresses {\n                                    address1\n                                    address2\n                                    city\n                                    province\n                                    zip\n                                    country\n                                    phone\n                                }\n                            }\n                            shippingAddress {\n                                address1\n                                address2\n                                city\n                                province\n                                zip\n                                country\n                                phone\n                            }\n                            billingAddress {\n                                address1\n                                address2\n                                city\n                                province\n                                zip\n                                country\n                                phone\n                            }\n                            lineItems(first: 50) {\n                                edges {\n                                    node {\n                                        id\n                                        quantity\n                                        sku\n                                        title\n                                        variant {\n                                            id\n                                            sku\n                                            price\n                                            product {\n                                                id\n                                                title\n                                            }\n                                        }\n                                        discountedTotalSet {\n                                            shopMoney {\n                                                amount\n                                                currencyCode\n                                            }\n                                        }\n                                    }\n                                }\n                            }\n                            note\n                        }\n                    }\n                    pageInfo {\n                        hasNextPage\n                        endCursor\n                    }\n                }\n            }\n            ', 'variables': {'first': 20, 'after': None}}, 'response': None, 'status': None}
2025-08-05 18:07:03,924 - sync_service - INFO - API Call: {'service': 'shopify', 'endpoint': 'graphql_local', 'request': None, 'response': {'orders': {'edges': [{'node': {'id': 'gid://shopify/Order/6318310686786', 'name': '#1480', 'createdAt': '2025-08-05T09:59:13Z', 'tags': [], 'totalPriceSet': {'shopMoney': {'amount': '5200.0', 'currencyCode': 'EGP'}}, 'subtotalPriceSet': {'shopMoney': {'amount': '5000.0', 'currencyCode': 'EGP'}}, 'totalTaxSet': {'shopMoney': {'amount': '0.0', 'currencyCode': 'EGP'}}, 'totalShippingPriceSet': {'shopMoney': {'amount': '200.0', 'currencyCode': 'EGP'}}, 'customer': {'id': 'gid://shopify/Customer/8037256233026', 'firstName': 'Omnia', 'lastName': 'Ezz Elarab', 'email': 'nezzelarab@ezz-elarab.com', 'phone': None, 'addresses': [{'address1': 'Palm hills 6th october, phase 1', 'address2': 'Villa b53', 'city': 'Giza', 'province': '6th of October', 'zip': '00000', 'country': 'Egypt', 'phone': '00201003370743'}]}, 'shippingAddress': {'address1': 'Palm hills 6th october, phase 1', 'address2': 'Villa b53', 'city': 'Giza', 'province': '6th of October', 'zip': '00000', 'country': 'Egypt', 'phone': '00201003370743'}, 'billingAddress': {'address1': 'Palm hills 6th october, phase 1', 'address2': 'Villa b53', 'city': 'Giza', 'province': '6th of October', 'zip': '00000', 'country': 'Egypt', 'phone': '00201003370743'}, 'lineItems': {'edges': [{'node': {'id': 'gid://shopify/LineItem/15830693707842', 'quantity': 1, 'sku': 'FG-0000632', 'title': 'Ember Earrings', 'variant': {'id': 'gid://shopify/ProductVariant/42194952650818', 'sku': 'FG-0000632', 'price': '5000.00', 'product': {'id': 'gid://shopify/Product/7490852847682', 'title': 'Ember Earrings'}}, 'discountedTotalSet': {'shopMoney': {'amount': '5000.0', 'currencyCode': 'EGP'}}}}]}, 'note': None}}, {'node': {'id': 'gid://shopify/Order/6318078263362', 'name': '#1479', 'createdAt': '2025-08-05T04:44:47Z', 'tags': [], 'totalPriceSet': {'shopMoney': {'amount': '7460.0', 'currencyCode': 'EGP'}}, 'subtotalPriceSet': {'shopMoney': {'amount': '7300.0', 'currencyCode': 'EGP'}}, 'totalTaxSet': {'shopMoney': {'amount': '0.0', 'currencyCode': 'EGP'}}, 'totalShippingPriceSet': {'shopMoney': {'amount': '160.0', 'currencyCode': 'EGP'}}, 'customer': {'id': 'gid://shopify/Customer/8035661905986', 'firstName': 'Ziad', 'lastName': 'Fawi', 'email': 'ziadfawi6@gmail.com', 'phone': None, 'addresses': [{'address1': None, 'address2': None, 'city': None, 'province': None, 'zip': None, 'country': 'Egypt', 'phone': None}, {'address1': '46 soultan street behind ices hospital', 'address2': 'Number of the apartment 17', 'city': 'Alexandria', 'province': 'Alexandria', 'zip': None, 'country': 'Egypt', 'phone': '01271088966'}]}, 'shippingAddress': {'address1': '46 soultan street behind ices hospital', 'address2': 'Number of the apartment 17', 'city': 'Alexandria', 'province': 'Alexandria', 'zip': None, 'country': 'Egypt', 'phone': '01271088966'}, 'billingAddress': {'address1': '46 soultan street behind ices hospital', 'address2': 'Number of the apartment 17', 'city': 'Alexandria', 'province': 'Alexandria', 'zip': None, 'country': 'Egypt', 'phone': '01271088966'}, 'lineItems': {'edges': [{'node': {'id': 'gid://shopify/LineItem/15830286434370', 'quantity': 1, 'sku': 'FG-0000077', 'title': 'Sulla Luna Mix Earrings', 'variant': {'id': 'gid://shopify/ProductVariant/42003146276930', 'sku': 'FG-0000077', 'price': '7300.00', 'product': {'id': 'gid://shopify/Product/7442022203458', 'title': 'Sulla Luna Mix Earrings'}}, 'discountedTotalSet': {'shopMoney': {'amount': '7300.0', 'currencyCode': 'EGP'}}}}]}, 'note': None}}, {'node': {'id': 'gid://shopify/Order/6317218398274', 'name': '#1478', 'createdAt': '2025-08-04T18:33:12Z', 'tags': [], 'totalPriceSet': {'shopMoney': {'amount': '2880.0', 'currencyCode': 'EGP'}}, 'subtotalPriceSet': {'shopMoney': {'amount': '2880.0', 'currencyCode': 'EGP'}}, 'totalTaxSet': {'shopMoney': {'amount': '0.0', 'currencyCode': 'EGP'}}, 'totalShippingPriceSet': {'shopMoney': {'amount': '0.0', 'currencyCode': 'EGP'}}, 'customer': {'id': 'gid://shopify/Customer/8032449527874', 'firstName': 'Mahmoud', 'lastName': 'Ayman', 'email': 'mahmoudayman80@yahoo.com', 'phone': None, 'addresses': [{'address1': None, 'address2': None, 'city': None, 'province': None, 'zip': None, 'country': 'Egypt', 'phone': None}, {'address1': '5370 el mokattam', 'address2': None, 'city': 'Cairo', 'province': 'Cairo', 'zip': None, 'country': 'Egypt', 'phone': '01111346333'}]}, 'shippingAddress': None, 'billingAddress': {'address1': '5370 el mokattam', 'address2': None, 'city': 'Cairo', 'province': 'Cairo', 'zip': None, 'country': 'Egypt', 'phone': '01111346333'}, 'lineItems': {'edges': [{'node': {'id': 'gid://shopify/LineItem/15828170047554', 'quantity': 1, 'sku': 'FG-0000589', 'title': 'Una Ring', 'variant': {'id': 'gid://shopify/ProductVariant/42003153518658', 'sku': 'FG-0000589', 'price': '3200.00', 'product': {'id': 'gid://shopify/Product/7442026070082', 'title': 'Una Ring'}}, 'discountedTotalSet': {'shopMoney': {'amount': '3200.0', 'currencyCode': 'EGP'}}}}]}, 'note': None}}, {'node': {'id': 'gid://shopify/Order/6317035520066', 'name': '#1477', 'createdAt': '2025-08-04T16:50:11Z', 'tags': [], 'totalPriceSet': {'shopMoney': {'amount': '5060.0', 'currencyCode': 'EGP'}}, 'subtotalPriceSet': {'shopMoney': {'amount': '4900.0', 'currencyCode': 'EGP'}}, 'totalTaxSet': {'shopMoney': {'amount': '0.0', 'currencyCode': 'EGP'}}, 'totalShippingPriceSet': {'shopMoney': {'amount': '160.0', 'currencyCode': 'EGP'}}, 'customer': {'id': 'gid://shopify/Customer/8031975374914', 'firstName': 'Passant', 'lastName': 'Dawood', 'email': 'passantdawood@gmail.com', 'phone': None, 'addresses': [{'address1': '399 elguish road san stefano grand plaza', 'address2': '1', 'city': 'Alexandria', 'province': 'Alexandria', 'zip': None, 'country': 'Egypt', 'phone': '01223100564'}]}, 'shippingAddress': {'address1': '399 elguish road san stefano grand plaza', 'address2': '1', 'city': 'Alexandria', 'province': 'Alexandria', 'zip': None, 'country': 'Egypt', 'phone': '01223100564'}, 'billingAddress': {'address1': '399 elguish road san stefano grand plaza', 'address2': '1', 'city': 'Alexandria', 'province': 'Alexandria', 'zip': None, 'country': 'Egypt', 'phone': '01223100564'}, 'lineItems': {'edges': [{'node': {'id': 'gid://shopify/LineItem/15827708805186', 'quantity': 1, 'sku': 'FG-0000688', 'title': 'Multi-way Halo Ring', 'variant': {'id': 'gid://shopify/ProductVariant/42194980896834', 'sku': 'FG-0000688', 'price': '4900.00', 'product': {'id': 'gid://shopify/Product/7490853339202', 'title': 'Multi-way Halo Ring'}}, 'discountedTotalSet': {'shopMoney': {'amount': '4900.0', 'currencyCode': 'EGP'}}}}]}, 'note': None}}, {'node': {'id': 'gid://shopify/Order/6317030244418', 'name': '#1476', 'createdAt': '2025-08-04T16:47:03Z', 'tags': [], 'totalPriceSet': {'shopMoney': {'amount': '5320.0', 'currencyCode': 'EGP'}}, 'subtotalPriceSet': {'shopMoney': {'amount': '5200.0', 'currencyCode': 'EGP'}}, 'totalTaxSet': {'shopMoney': {'amount': '0.0', 'currencyCode': 'EGP'}}, 'totalShippingPriceSet': {'shopMoney': {'amount': '120.0', 'currencyCode': 'EGP'}}, 'customer': {'id': 'gid://shopify/Customer/8031970918466', 'firstName': 'Noha', 'lastName': 'Emad', 'email': 'noha@kitshe-eg.com', 'phone': None, 'addresses': [{'address1': 'التجمع الخامس االدور الاول شقه ٤جنوب الأكاديمية أ شارع ان', 'address2': 'التجمع الخامس- جنوب الاكادميه أ شارع انس ابن مالك فيلا ٢٨٦', 'city': 'Cairo', 'province': 'Cairo', 'zip': '11865', 'country': 'Egypt', 'phone': '01200008517'}]}, 'shippingAddress': {'address1': 'التجمع الخامس االدور الاول شقه ٤جنوب الأكاديمية أ شارع ان', 'address2': 'التجمع الخامس- جنوب الاكادميه أ شارع انس ابن مالك فيلا ٢٨٦', 'city': 'Cairo', 'province': 'Cairo', 'zip': '11865', 'country': 'Egypt', 'phone': '01200008517'}, 'billingAddress': {'address1': 'التجمع الخامس االدور الاول شقه ٤جنوب الأكاديمية أ شارع ان', 'address2': 'التجمع الخامس- جنوب الاكادميه أ شارع انس ابن مالك فيلا ٢٨٦', 'city': 'Cairo', 'province': 'Cairo', 'zip': '11865', 'country': 'Egypt', 'phone': '01200008517'}, 'lineItems': {'edges': [{'node': {'id': 'gid://shopify/LineItem/15827697336386', 'quantity': 1, 'sku': 'FG-0000640', 'title': 'Essence Earrings', 'variant': {'id': 'gid://shopify/ProductVariant/42194952945730', 'sku': 'FG-0000640', 'price': '5200.00', 'product': {'id': 'gid://shopify/Product/7490852945986', 'title': 'Essence Earrings'}}, 'discountedTotalSet': {'shopMoney': {'amount': '5200.0', 'currencyCode': 'EGP'}}}}]}, 'note': None}}, {'node': {'id': 'gid://shopify/Order/6316680347714', 'name': '#1475', 'createdAt': '2025-08-04T12:56:00Z', 'tags': [], 'totalPriceSet': {'shopMoney': {'amount': '5120.0', 'currencyCode': 'EGP'}}, 'subtotalPriceSet': {'shopMoney': {'amount': '5000.0', 'currencyCode': 'EGP'}}, 'totalTaxSet': {'shopMoney': {'amount': '0.0', 'currencyCode': 'EGP'}}, 'totalShippingPriceSet': {'shopMoney': {'amount': '120.0', 'currencyCode': 'EGP'}}, 'customer': {'id': 'gid://shopify/Customer/8031264636994', 'firstName': 'Hanan', 'lastName': 'HASSAN', 'email': 'hananhassan1204@gmail.com', 'phone': None, 'addresses': [{'address1': 'القاهرة الجديدة / كمبوند سوديك ڤيليت عمارة واحد إف شقة أرضي زيرو أربعة', 'address2': '04 الدور الارضي', 'city': 'القاهرة', 'province': 'Cairo', 'zip': '11511', 'country': 'Egypt', 'phone': '01000340138'}]}, 'shippingAddress': {'address1': 'القاهرة الجديدة / كمبوند سوديك ڤيليت عمارة واحد إف شقة أرضي زيرو أربعة', 'address2': '04 الدور الارضي', 'city': 'القاهرة', 'province': 'Cairo', 'zip': '11511', 'country': 'Egypt', 'phone': '01000340138'}, 'billingAddress': {'address1': 'القاهرة الجديدة / كمبوند سوديك ڤيليت عمارة واحد إف شقة أرضي زيرو أربعة', 'address2': '04 الدور الارضي', 'city': 'القاهرة', 'province': 'Cairo', 'zip': '11511', 'country': 'Egypt', 'phone': '01000340138'}, 'lineItems': {'edges': [{'node': {'id': 'gid://shopify/LineItem/15826901237826', 'quantity': 1, 'sku': 'FG-0000632', 'title': 'Ember Earrings', 'variant': {'id': 'gid://shopify/ProductVariant/42194952650818', 'sku': 'FG-0000632', 'price': '5000.00', 'product': {'id': 'gid://shopify/Product/7490852847682', 'title': 'Ember Earrings'}}, 'discountedTotalSet': {'shopMoney': {'amount': '5000.0', 'currencyCode': 'EGP'}}}}]}, 'note': None}}, {'node': {'id': 'gid://shopify/Order/6316580536386', 'name': '#1474', 'createdAt': '2025-08-04T11:08:05Z', 'tags': [], 'totalPriceSet': {'shopMoney': {'amount': '6020.0', 'currencyCode': 'EGP'}}, 'subtotalPriceSet': {'shopMoney': {'amount': '5900.0', 'currencyCode': 'EGP'}}, 'totalTaxSet': {'shopMoney': {'amount': '0.0', 'currencyCode': 'EGP'}}, 'totalShippingPriceSet': {'shopMoney': {'amount': '120.0', 'currencyCode': 'EGP'}}, 'customer': {'id': 'gid://shopify/Customer/8031120457794', 'firstName': 'Nourhan', 'lastName': 'Swellam', 'email': 'swellam@aucegypt.edu', 'phone': None, 'addresses': [{'address1': '144 el banafseg 11 ', 'address2': 'Villa 144', 'city': 'Cairo', 'province': 'Cairo', 'zip': '11341', 'country': 'Egypt', 'phone': '+201003928976'}]}, 'shippingAddress': {'address1': '144 el banafseg 11', 'address2': 'Villa 144', 'city': 'Cairo', 'province': 'Cairo', 'zip': '11341', 'country': 'Egypt', 'phone': '+201003928976'}, 'billingAddress': {'address1': '144 el banafseg 11', 'address2': 'Villa 144', 'city': 'Cairo', 'province': 'Cairo', 'zip': '11341', 'country': 'Egypt', 'phone': '+201003928976'}, 'lineItems': {'edges': [{'node': {'id': 'gid://shopify/LineItem/15826707382338', 'quantity': 1, 'sku': 'FG-0000369', 'title': 'Mini Sahara Mix Hoop', 'variant': {'id': 'gid://shopify/ProductVariant/42003146997826', 'sku': 'FG-0000369', 'price': '5900.00', 'product': {'id': 'gid://shopify/Product/7442022989890', 'title': 'Mini Sahara Mix Hoop'}}, 'discountedTotalSet': {'shopMoney': {'amount': '5900.0', 'currencyCode': 'EGP'}}}}]}, 'note': None}}, {'node': {'id': 'gid://shopify/Order/6315006394434', 'name': '#1473', 'createdAt': '2025-08-03T15:21:25Z', 'tags': [], 'totalPriceSet': {'shopMoney': {'amount': '4420.0', 'currencyCode': 'EGP'}}, 'subtotalPriceSet': {'shopMoney': {'amount': '4300.0', 'currencyCode': 'EGP'}}, 'totalTaxSet': {'shopMoney': {'amount': '0.0', 'currencyCode': 'EGP'}}, 'totalShippingPriceSet': {'shopMoney': {'amount': '120.0', 'currencyCode': 'EGP'}}, 'customer': {'id': 'gid://shopify/Customer/8015867478082', 'firstName': 'Yomna', 'lastName': 'Sherif', 'email': 'yomna.sherif.nawal@gmail.com', 'phone': None, 'addresses': [{'address1': 'Group 15 , building 5 , apartment 22', 'address2': 'Group 15 , building 5 , apartment 22', 'city': 'Rehab City', 'province': 'Cairo', 'zip': '0000', 'country': 'Egypt', 'phone': '+201003988787'}, {'address1': None, 'address2': None, 'city': None, 'province': None, 'zip': None, 'country': 'Egypt', 'phone': None}]}, 'shippingAddress': {'address1': 'Group 15 , building 5 , apartment 22', 'address2': 'Group 15 , building 5 , apartment 22', 'city': 'Rehab City', 'province': 'Cairo', 'zip': '0000', 'country': 'Egypt', 'phone': '+201003988787'}, 'billingAddress': {'address1': 'Group 15 , building 5 , apartment 22', 'address2': 'Group 15 , building 5 , apartment 22', 'city': 'Rehab City', 'province': 'Cairo', 'zip': '0000', 'country': 'Egypt', 'phone': '+201003988787'}, 'lineItems': {'edges': [{'node': {'id': 'gid://shopify/LineItem/15822752055362', 'quantity': 1, 'sku': 'FG-0000499', 'title': 'Cassandra Mix Pinky Ring', 'variant': {'id': 'gid://shopify/ProductVariant/42003149815874', 'sku': 'FG-0000499', 'price': '4300.00', 'product': {'id': 'gid://shopify/Product/7442024235074', 'title': 'Cassandra Mix Pinky Ring'}}, 'discountedTotalSet': {'shopMoney': {'amount': '4300.0', 'currencyCode': 'EGP'}}}}]}, 'note': None}}, {'node': {'id': 'gid://shopify/Order/6314877780034', 'name': '#1472', 'createdAt': '2025-08-03T13:47:12Z', 'tags': [], 'totalPriceSet': {'shopMoney': {'amount': '121.0', 'currencyCode': 'EGP'}}, 'subtotalPriceSet': {'shopMoney': {'amount': '1.0', 'currencyCode': 'EGP'}}, 'totalTaxSet': {'shopMoney': {'amount': '0.0', 'currencyCode': 'EGP'}}, 'totalShippingPriceSet': {'shopMoney': {'amount': '120.0', 'currencyCode': 'EGP'}}, 'customer': {'id': 'gid://shopify/Customer/7539785334850', 'firstName': 'Karim', 'lastName': 'Wafik', 'email': 'karimwafik.kw@gmail.com', 'phone': None, 'addresses': [{'address1': '97 Marghany st., Heliopolis, Cairo, Egypt', 'address2': None, 'city': 'Cairo', 'province': 'Cairo', 'zip': '21113', 'country': 'Egypt', 'phone': '+201005527292'}, {'address1': 'Stone Residence Compound 306, Third Settlement', 'address2': '9', 'city': 'Cairo', 'province': 'Cairo', 'zip': None, 'country': 'Egypt', 'phone': '01005527292'}]}, 'shippingAddress': {'address1': 'Stone Residence Compound 306, Third Settlement', 'address2': '9', 'city': 'Cairo', 'province': 'Cairo', 'zip': None, 'country': 'Egypt', 'phone': '01005527292'}, 'billingAddress': {'address1': 'Stone Residence Compound 306, Third Settlement', 'address2': '9', 'city': 'Cairo', 'province': 'Cairo', 'zip': None, 'country': 'Egypt', 'phone': '01005527292'}, 'lineItems': {'edges': [{'node': {'id': 'gid://shopify/LineItem/15822411366466', 'quantity': 1, 'sku': None, 'title': 'karim test', 'variant': {'id': 'gid://shopify/ProductVariant/42361056985154', 'sku': None, 'price': '1.00', 'product': {'id': 'gid://shopify/Product/7522803515458', 'title': 'karim test'}}, 'discountedTotalSet': {'shopMoney': {'amount': '1.0', 'currencyCode': 'EGP'}}}}]}, 'note': None}}, {'node': {'id': 'gid://shopify/Order/6314801463362', 'name': '#1471', 'createdAt': '2025-08-03T12:37:41Z', 'tags': [], 'totalPriceSet': {'shopMoney': {'amount': '4620.0', 'currencyCode': 'EGP'}}, 'subtotalPriceSet': {'shopMoney': {'amount': '4500.0', 'currencyCode': 'EGP'}}, 'totalTaxSet': {'shopMoney': {'amount': '0.0', 'currencyCode': 'EGP'}}, 'totalShippingPriceSet': {'shopMoney': {'amount': '120.0', 'currencyCode': 'EGP'}}, 'customer': {'id': 'gid://shopify/Customer/8028986572866', 'firstName': 'Manal', 'lastName': 'Dorgham', 'email': 'manaldorgham4@gmail.com', 'phone': None, 'addresses': [{'address1': 'Moon valley compound. New Cairo', 'address2': '45 D', 'city': 'Cairo', 'province': 'Cairo', 'zip': None, 'country': 'Egypt', 'phone': '01222455309'}]}, 'shippingAddress': {'address1': 'Moon valley compound. New Cairo', 'address2': '45 D', 'city': 'Cairo', 'province': 'Cairo', 'zip': None, 'country': 'Egypt', 'phone': '01222455309'}, 'billingAddress': {'address1': 'Moon valley compound. New Cairo', 'address2': '45 D', 'city': 'Cairo', 'province': 'Cairo', 'zip': None, 'country': 'Egypt', 'phone': '01222455309'}, 'lineItems': {'edges': [{'node': {'id': 'gid://shopify/LineItem/15822235631682', 'quantity': 1, 'sku': 'FG-0000544', 'title': 'Floway ring set', 'variant': {'id': 'gid://shopify/ProductVariant/42003150602306', 'sku': 'FG-0000544', 'price': '4500.00', 'product': {'id': 'gid://shopify/Product/7442024890434', 'title': 'Floway ring set'}}, 'discountedTotalSet': {'shopMoney': {'amount': '4500.0', 'currencyCode': 'EGP'}}}}]}, 'note': None}}, {'node': {'id': 'gid://shopify/Order/6314790420546', 'name': '#1470', 'createdAt': '2025-08-03T12:26:20Z', 'tags': [], 'totalPriceSet': {'shopMoney': {'amount': '7600.0', 'currencyCode': 'EGP'}}, 'subtotalPriceSet': {'shopMoney': {'amount': '7600.0', 'currencyCode': 'EGP'}}, 'totalTaxSet': {'shopMoney': {'amount': '0.0', 'currencyCode': 'EGP'}}, 'totalShippingPriceSet': {'shopMoney': {'amount': '0.0', 'currencyCode': 'EGP'}}, 'customer': {'id': 'gid://shopify/Customer/7539785334850', 'firstName': 'Karim', 'lastName': 'Wafik', 'email': 'karimwafik.kw@gmail.com', 'phone': None, 'addresses': [{'address1': '97 Marghany st., Heliopolis, Cairo, Egypt', 'address2': None, 'city': 'Cairo', 'province': 'Cairo', 'zip': '21113', 'country': 'Egypt', 'phone': '+201005527292'}, {'address1': 'Stone Residence Compound 306, Third Settlement', 'address2': '9', 'city': 'Cairo', 'province': 'Cairo', 'zip': None, 'country': 'Egypt', 'phone': '01005527292'}]}, 'shippingAddress': None, 'billingAddress': None, 'lineItems': {'edges': [{'node': {'id': 'gid://shopify/LineItem/15822212661314', 'quantity': 1, 'sku': 'FG-0000645', 'title': 'Flare Earrings', 'variant': {'id': 'gid://shopify/ProductVariant/42277872271426', 'sku': 'FG-0000645', 'price': '3800.00', 'product': {'id': 'gid://shopify/Product/7506409586754', 'title': 'Flare Earrings'}}, 'discountedTotalSet': {'shopMoney': {'amount': '3800.0', 'currencyCode': 'EGP'}}}}, {'node': {'id': 'gid://shopify/LineItem/15822221770818', 'quantity': 1, 'sku': None, 'title': 'Gift Card', 'variant': None, 'discountedTotalSet': {'shopMoney': {'amount': '3800.0', 'currencyCode': 'EGP'}}}}]}, 'note': None}}, {'node': {'id': 'gid://shopify/Order/6314786357314', 'name': '#1469', 'createdAt': '2025-08-03T12:21:46Z', 'tags': [], 'totalPriceSet': {'shopMoney': {'amount': '6900.0', 'currencyCode': 'EGP'}}, 'subtotalPriceSet': {'shopMoney': {'amount': '6900.0', 'currencyCode': 'EGP'}}, 'totalTaxSet': {'shopMoney': {'amount': '0.0', 'currencyCode': 'EGP'}}, 'totalShippingPriceSet': {'shopMoney': {'amount': '0.0', 'currencyCode': 'EGP'}}, 'customer': None, 'shippingAddress': None, 'billingAddress': None, 'lineItems': {'edges': [{'node': {'id': 'gid://shopify/LineItem/15822205321282', 'quantity': 1, 'sku': 'FG-0000345', 'title': 'Mini Harmonia Earrings', 'variant': {'id': 'gid://shopify/ProductVariant/42003146801218', 'sku': 'FG-0000345', 'price': '6900.00', 'product': {'id': 'gid://shopify/Product/7442022793282', 'title': 'Mini Harmonia Earrings'}}, 'discountedTotalSet': {'shopMoney': {'amount': '6900.0', 'currencyCode': 'EGP'}}}}]}, 'note': None}}, {'node': {'id': 'gid://shopify/Order/6314775969858', 'name': '#1468', 'createdAt': '2025-08-03T12:12:09Z', 'tags': [], 'totalPriceSet': {'shopMoney': {'amount': '2920.0', 'currencyCode': 'EGP'}}, 'subtotalPriceSet': {'shopMoney': {'amount': '2800.0', 'currencyCode': 'EGP'}}, 'totalTaxSet': {'shopMoney': {'amount': '0.0', 'currencyCode': 'EGP'}}, 'totalShippingPriceSet': {'shopMoney': {'amount': '120.0', 'currencyCode': 'EGP'}}, 'customer': {'id': 'gid://shopify/Customer/8028955639874', 'firstName': 'Mariam', 'lastName': 'Mackawy', 'email': 'mariammackawy5@gmail.com', 'phone': None, 'addresses': [{'address1': 'الرحاب ٢، مجموعة ١٣١، عمارة ٢٠، شقة ٤١', 'address2': '41 El Rehab2, Group 131, Building 20, Apartment', 'city': 'Cairo', 'province': 'Cairo', 'zip': '11511', 'country': 'Egypt', 'phone': '01285358540'}]}, 'shippingAddress': {'address1': 'الرحاب ٢، مجموعة ١٣١، عمارة ٢٠، شقة ٤١', 'address2': '41 El Rehab2, Group 131, Building 20, Apartment', 'city': 'Cairo', 'province': 'Cairo', 'zip': '11511', 'country': 'Egypt', 'phone': '01285358540'}, 'billingAddress': {'address1': 'الرحاب ٢، مجموعة ١٣١، عمارة ٢٠، شقة ٤١', 'address2': '41 El Rehab2, Group 131, Building 20, Apartment', 'city': 'Cairo', 'province': 'Cairo', 'zip': '11511', 'country': 'Egypt', 'phone': '01285358540'}, 'lineItems': {'edges': [{'node': {'id': 'gid://shopify/LineItem/15822184742978', 'quantity': 1, 'sku': 'FG-0000498', 'title': 'Cassandra Pinky Ring', 'variant': {'id': 'gid://shopify/ProductVariant/42003149881410', 'sku': 'FG-0000498', 'price': '2800.00', 'product': {'id': 'gid://shopify/Product/7442024300610', 'title': 'Cassandra Pinky Ring'}}, 'discountedTotalSet': {'shopMoney': {'amount': '2800.0', 'currencyCode': 'EGP'}}}}]}, 'note': None}}, {'node': {'id': 'gid://shopify/Order/6314438000706', 'name': '#1467', 'createdAt': '2025-08-03T04:32:29Z', 'tags': [], 'totalPriceSet': {'shopMoney': {'amount': '3200.0', 'currencyCode': 'EGP'}}, 'subtotalPriceSet': {'shopMoney': {'amount': '3200.0', 'currencyCode': 'EGP'}}, 'totalTaxSet': {'shopMoney': {'amount': '0.0', 'currencyCode': 'EGP'}}, 'totalShippingPriceSet': {'shopMoney': {'amount': '0.0', 'currencyCode': 'EGP'}}, 'customer': {'id': 'gid://shopify/Customer/8026031751234', 'firstName': 'sally', 'lastName': 'monir', 'email': 'sallymonir@yahoo.com', 'phone': None, 'addresses': [{'address1': '113, st. 17, First Area, fifth zone, fifth settlement', 'address2': '2', 'city': 'New Cairo', 'province': 'Cairo', 'zip': None, 'country': 'Egypt', 'phone': '+201273099926'}]}, 'shippingAddress': None, 'billingAddress': {'address1': '113, st. 17, First Area, fifth zone, fifth settlement', 'address2': '2', 'city': 'New Cairo', 'province': 'Cairo', 'zip': None, 'country': 'Egypt', 'phone': '+201273099926'}, 'lineItems': {'edges': [{'node': {'id': 'gid://shopify/LineItem/15821581156418', 'quantity': 1, 'sku': 'FG-0000468', 'title': 'Frost Ring', 'variant': {'id': 'gid://shopify/ProductVariant/42003151618114', 'sku': 'FG-0000468', 'price': '3200.00', 'product': {'id': 'gid://shopify/Product/7442025381954', 'title': 'Frost Ring'}}, 'discountedTotalSet': {'shopMoney': {'amount': '3200.0', 'currencyCode': 'EGP'}}}}]}, 'note': None}}, {'node': {'id': 'gid://shopify/Order/6312813002818', 'name': '#1466', 'createdAt': '2025-08-02T11:04:39Z', 'tags': [], 'totalPriceSet': {'shopMoney': {'amount': '4420.0', 'currencyCode': 'EGP'}}, 'subtotalPriceSet': {'shopMoney': {'amount': '4300.0', 'currencyCode': 'EGP'}}, 'totalTaxSet': {'shopMoney': {'amount': '0.0', 'currencyCode': 'EGP'}}, 'totalShippingPriceSet': {'shopMoney': {'amount': '120.0', 'currencyCode': 'EGP'}}, 'customer': {'id': 'gid://shopify/Customer/8026480607298', 'firstName': 'Nadine', 'lastName': 'GALAL', 'email': 'nadinegalal09@gmail.com', 'phone': None, 'addresses': [{'address1': 'امام ٣١ شارع ابراهيم حلمي الدور ٣ شقة ١١', 'address2': 'الدور ٣ شقة ١١', 'city': 'Alexandria', 'province': 'Alexandria', 'zip': None, 'country': 'Egypt', 'phone': '01284444565'}]}, 'shippingAddress': {'address1': 'امام ٣١ شارع ابراهيم حلمي الدور ٣ شقة ١١', 'address2': 'الدور ٣ شقة ١١', 'city': 'Alexandria', 'province': 'Alexandria', 'zip': None, 'country': 'Egypt', 'phone': '01284444565'}, 'billingAddress': {'address1': 'امام ٣١ شارع ابراهيم حلمي الدور ٣ شقة ١١', 'address2': 'الدور ٣ شقة ١١', 'city': 'Alexandria', 'province': 'Alexandria', 'zip': None, 'country': 'Egypt', 'phone': '01284444565'}, 'lineItems': {'edges': [{'node': {'id': 'gid://shopify/LineItem/15817138307138', 'quantity': 1, 'sku': 'FG-0000499', 'title': 'Cassandra Mix Pinky Ring', 'variant': {'id': 'gid://shopify/ProductVariant/42003149815874', 'sku': 'FG-0000499', 'price': '4300.00', 'product': {'id': 'gid://shopify/Product/7442024235074', 'title': 'Cassandra Mix Pinky Ring'}}, 'discountedTotalSet': {'shopMoney': {'amount': '4300.0', 'currencyCode': 'EGP'}}}}]}, 'note': None}}, {'node': {'id': 'gid://shopify/Order/6312140603458', 'name': '#1465', 'createdAt': '2025-08-01T23:27:00Z', 'tags': [], 'totalPriceSet': {'shopMoney': {'amount': '8860.0', 'currencyCode': 'EGP'}}, 'subtotalPriceSet': {'shopMoney': {'amount': '8700.0', 'currencyCode': 'EGP'}}, 'totalTaxSet': {'shopMoney': {'amount': '0.0', 'currencyCode': 'EGP'}}, 'totalShippingPriceSet': {'shopMoney': {'amount': '160.0', 'currencyCode': 'EGP'}}, 'customer': {'id': 'gid://shopify/Customer/8024664145986', 'firstName': 'Mai', 'lastName': 'Aladdin', 'email': 'mayyo69@gmail.com', 'phone': None, 'addresses': [{'address1': 'Sohag - shar2', 'address2': None, 'city': 'Sohag', 'province': 'Sohag', 'zip': None, 'country': 'Egypt', 'phone': '01027733614'}]}, 'shippingAddress': {'address1': 'Sohag - shar2', 'address2': None, 'city': 'Sohag', 'province': 'Sohag', 'zip': None, 'country': 'Egypt', 'phone': '01027733614'}, 'billingAddress': {'address1': 'Sohag - shar2', 'address2': None, 'city': 'Sohag', 'province': 'Sohag', 'zip': None, 'country': 'Egypt', 'phone': '01027733614'}, 'lineItems': {'edges': [{'node': {'id': 'gid://shopify/LineItem/15815787151426', 'quantity': 1, 'sku': 'FG-0000498', 'title': 'Cassandra Pinky Ring', 'variant': {'id': 'gid://shopify/ProductVariant/42003149881410', 'sku': 'FG-0000498', 'price': '2800.00', 'product': {'id': 'gid://shopify/Product/7442024300610', 'title': 'Cassandra Pinky Ring'}}, 'discountedTotalSet': {'shopMoney': {'amount': '2800.0', 'currencyCode': 'EGP'}}}}, {'node': {'id': 'gid://shopify/LineItem/15815787184194', 'quantity': 1, 'sku': 'FG-0000575', 'title': 'Janus Cuff', 'variant': {'id': 'gid://shopify/ProductVariant/42003153256514', 'sku': 'FG-0000575', 'price': '5900.00', 'product': {'id': 'gid://shopify/Product/7442025906242', 'title': 'Janus Cuff'}}, 'discountedTotalSet': {'shopMoney': {'amount': '5900.0', 'currencyCode': 'EGP'}}}}]}, 'note': None}}, {'node': {'id': 'gid://shopify/Order/6311861026882', 'name': '#1464', 'createdAt': '2025-08-01T20:45:45Z', 'tags': [], 'totalPriceSet': {'shopMoney': {'amount': '4800.0', 'currencyCode': 'EGP'}}, 'subtotalPriceSet': {'shopMoney': {'amount': '4800.0', 'currencyCode': 'EGP'}}, 'totalTaxSet': {'shopMoney': {'amount': '0.0', 'currencyCode': 'EGP'}}, 'totalShippingPriceSet': {'shopMoney': {'amount': '0.0', 'currencyCode': 'EGP'}}, 'customer': {'id': 'gid://shopify/Customer/8024130191426', 'firstName': 'Ibrahim', 'lastName': 'ElGohary', 'email': 'hima22may@hotmail.com', 'phone': None, 'addresses': [{'address1': 'Wady compound', 'address2': 'Home', 'city': 'Cairo', 'province': 'Cairo', 'zip': None, 'country': 'Egypt', 'phone': '01007217010'}]}, 'shippingAddress': None, 'billingAddress': {'address1': 'Wady compound', 'address2': 'Home', 'city': 'Cairo', 'province': 'Cairo', 'zip': None, 'country': 'Egypt', 'phone': '01007217010'}, 'lineItems': {'edges': [{'node': {'id': 'gid://shopify/LineItem/15815036600386', 'quantity': 1, 'sku': 'FG-0000075', 'title': 'Sulla Luna Earrings', 'variant': {'id': 'gid://shopify/ProductVariant/42003146211394', 'sku': 'FG-0000075', 'price': '4800.00', 'product': {'id': 'gid://shopify/Product/7442022170690', 'title': 'Sulla Luna Earrings'}}, 'discountedTotalSet': {'shopMoney': {'amount': '4800.0', 'currencyCode': 'EGP'}}}}]}, 'note': None}}, {'node': {'id': 'gid://shopify/Order/6311162380354', 'name': '#1463', 'createdAt': '2025-08-01T15:19:07Z', 'tags': [], 'totalPriceSet': {'shopMoney': {'amount': '7460.0', 'currencyCode': 'EGP'}}, 'subtotalPriceSet': {'shopMoney': {'amount': '7300.0', 'currencyCode': 'EGP'}}, 'totalTaxSet': {'shopMoney': {'amount': '0.0', 'currencyCode': 'EGP'}}, 'totalShippingPriceSet': {'shopMoney': {'amount': '160.0', 'currencyCode': 'EGP'}}, 'customer': {'id': 'gid://shopify/Customer/8022959784002', 'firstName': 'Nahed', 'lastName': 'Mohamed', 'email': 'nahedmohamed714@gmail.com', 'phone': None, 'addresses': [{'address1': 'العصافره بحرى الاسكندريه شارع اطلس عماره ١١ مكرر بجوار سوبر ناركت تسالى جاد امام مايوركا كافيه', 'address2': 'الدور التامن شقه ١٥', 'city': 'alexandria', 'province': 'Alexandria', 'zip': None, 'country': 'Egypt', 'phone': '+201284002489'}]}, 'shippingAddress': {'address1': 'العصافره بحرى الاسكندريه شارع اطلس عماره ١١ مكرر بجوار سوبر ناركت تسالى جاد امام مايوركا كافيه', 'address2': 'الدور التامن شقه ١٥', 'city': 'alexandria', 'province': 'Alexandria', 'zip': None, 'country': 'Egypt', 'phone': '+201284002489'}, 'billingAddress': {'address1': 'العصافره بحرى الاسكندريه شارع اطلس عماره ١١ مكرر بجوار سوبر ناركت تسالى جاد امام مايوركا كافيه', 'address2': 'الدور التامن شقه ١٥', 'city': 'alexandria', 'province': 'Alexandria', 'zip': None, 'country': 'Egypt', 'phone': '+201284002489'}, 'lineItems': {'edges': [{'node': {'id': 'gid://shopify/LineItem/15813349867586', 'quantity': 1, 'sku': 'FG-0000077', 'title': 'Sulla Luna Mix Earrings', 'variant': {'id': 'gid://shopify/ProductVariant/42003146276930', 'sku': 'FG-0000077', 'price': '7300.00', 'product': {'id': 'gid://shopify/Product/7442022203458', 'title': 'Sulla Luna Mix Earrings'}}, 'discountedTotalSet': {'shopMoney': {'amount': '7300.0', 'currencyCode': 'EGP'}}}}]}, 'note': None}}, {'node': {'id': 'gid://shopify/Order/6308680728642', 'name': '#1462', 'createdAt': '2025-07-31T09:58:23Z', 'tags': [], 'totalPriceSet': {'shopMoney': {'amount': '25900.0', 'currencyCode': 'EGP'}}, 'subtotalPriceSet': {'shopMoney': {'amount': '25700.0', 'currencyCode': 'EGP'}}, 'totalTaxSet': {'shopMoney': {'amount': '0.0', 'currencyCode': 'EGP'}}, 'totalShippingPriceSet': {'shopMoney': {'amount': '200.0', 'currencyCode': 'EGP'}}, 'customer': {'id': 'gid://shopify/Customer/8016631660610', 'firstName': 'Mohamed', 'lastName': 'Maher', 'email': 'm.maher525@gmail.com', 'phone': None, 'addresses': [{'address1': None, 'address2': None, 'city': None, 'province': None, 'zip': None, 'country': 'Egypt', 'phone': None}, {'address1': 'الهضبة الوسطى الحي الثالث كمباوند ديار سيتي 3 خلف مدرسة ريماس', 'address2': 'عمارة 2 شقة 20 بوابة 3', 'city': 'Al Mokkatam', 'province': 'Cairo', 'zip': None, 'country': 'Egypt', 'phone': '01069987443'}]}, 'shippingAddress': {'address1': 'الهضبة الوسطى الحي الثالث كمباوند ديار سيتي 3 خلف مدرسة ريماس', 'address2': 'عمارة 2 شقة 20 بوابة 3', 'city': 'Al Mokkatam', 'province': 'Cairo', 'zip': None, 'country': 'Egypt', 'phone': '01069987443'}, 'billingAddress': {'address1': 'الهضبة الوسطى الحي الثالث كمباوند ديار سيتي 3 خلف مدرسة ريماس', 'address2': 'عمارة 2 شقة 20 بوابة 3', 'city': 'Al Mokkatam', 'province': 'Cairo', 'zip': None, 'country': 'Egypt', 'phone': '01069987443'}, 'lineItems': {'edges': [{'node': {'id': 'gid://shopify/LineItem/15807895044162', 'quantity': 1, 'sku': 'FG-0000512', 'title': 'Riverstone Bracelet', 'variant': {'id': 'gid://shopify/ProductVariant/42003152404546', 'sku': 'FG-0000512', 'price': '5000.00', 'product': {'id': 'gid://shopify/Product/7442025611330', 'title': 'Riverstone Bracelet'}}, 'discountedTotalSet': {'shopMoney': {'amount': '5000.0', 'currencyCode': 'EGP'}}}}, {'node': {'id': 'gid://shopify/LineItem/15807895076930', 'quantity': 1, 'sku': 'FG-0000571', 'title': 'Riverstone Ring Mix', 'variant': {'id': 'gid://shopify/ProductVariant/42003150995522', 'sku': 'FG-0000571', 'price': '3900.00', 'product': {'id': 'gid://shopify/Product/7442025152578', 'title': 'Riverstone Ring Mix'}}, 'discountedTotalSet': {'shopMoney': {'amount': '3900.0', 'currencyCode': 'EGP'}}}}, {'node': {'id': 'gid://shopify/LineItem/15807895109698', 'quantity': 1, 'sku': 'FG-0000568', 'title': 'Riverstone Necklace Mix', 'variant': {'id': 'gid://shopify/ProductVariant/42003150962754', 'sku': 'FG-0000568', 'price': '16800.00', 'product': {'id': 'gid://shopify/Product/7442025119810', 'title': 'Riverstone Necklace Mix'}}, 'discountedTotalSet': {'shopMoney': {'amount': '16800.0', 'currencyCode': 'EGP'}}}}]}, 'note': None}}, {'node': {'id': 'gid://shopify/Order/6308073570370', 'name': '#1461', 'createdAt': '2025-07-30T23:37:58Z', 'tags': [], 'totalPriceSet': {'shopMoney': {'amount': '6700.0', 'currencyCode': 'EGP'}}, 'subtotalPriceSet': {'shopMoney': {'amount': '6500.0', 'currencyCode': 'EGP'}}, 'totalTaxSet': {'shopMoney': {'amount': '0.0', 'currencyCode': 'EGP'}}, 'totalShippingPriceSet': {'shopMoney': {'amount': '200.0', 'currencyCode': 'EGP'}}, 'customer': {'id': 'gid://shopify/Customer/8015808462914', 'firstName': 'farouk', 'lastName': 'yehia', 'email': 'farouky01@gmail.com', 'phone': None, 'addresses': [{'address1': 'mesaha sq', 'address2': '5 mesaha sq, 15th floor', 'city': 'giza', 'province': 'Cairo', 'zip': '12611', 'country': 'Egypt', 'phone': '+201060520013'}]}, 'shippingAddress': {'address1': 'mesaha sq', 'address2': '5 mesaha sq, 15th floor', 'city': 'giza', 'province': 'Cairo', 'zip': '12611', 'country': 'Egypt', 'phone': '+201060520013'}, 'billingAddress': {'address1': 'mesaha sq', 'address2': '5 mesaha sq, 15th floor', 'city': 'giza', 'province': 'Cairo', 'zip': '12611', 'country': 'Egypt', 'phone': '+201060520013'}, 'lineItems': {'edges': [{'node': {'id': 'gid://shopify/LineItem/15806636818498', 'quantity': 1, 'sku': 'FG-0000408', 'title': 'Nightfall Earrings', 'variant': {'id': 'gid://shopify/ProductVariant/42003148996674', 'sku': 'FG-0000408', 'price': '6500.00', 'product': {'id': 'gid://shopify/Product/7442023841858', 'title': 'Nightfall Earrings'}}, 'discountedTotalSet': {'shopMoney': {'amount': '6500.0', 'currencyCode': 'EGP'}}}}]}, 'note': None}}], 'pageInfo': {'hasNextPage': True, 'endCursor': 'eyJsYXN0X2lkIjo2MzA4MDczNTcwMzcwLCJsYXN0X3ZhbHVlIjoiMjAyNS0wNy0zMCAyMzozNzo1OC45MDkxNTcifQ=='}}}, 'status': 'success'}
2025-08-05 18:07:03,933 - sync_service - INFO - Retrieved 20 total orders, 20 unsynced orders from Shopify store local
2025-08-05 18:07:03,933 - sync_service - INFO - Processing order: #1480
2025-08-05 18:07:03,935 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'BusinessPartners', 'request': {'method': 'GET', 'url': 'https://10.0.0.100:50000/b1s/v1/BusinessPartners', 'data': None, 'params': {'$filter': "Phone1 eq '00201003370743' or Phone2 eq '00201003370743' or Cellular eq '00201003370743'", '$top': 1}}, 'response': None, 'status': None}
2025-08-05 18:07:04,689 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'BusinessPartners', 'request': None, 'response': {'odata.metadata': 'https://10.0.0.100:50000/b1s/v1/$metadata#BusinessPartners', 'value': [{'CardCode': 'C0021031', 'CardName': 'Omnia Ezz Elarab', 'CardType': 'cCustomer', 'GroupCode': 100, 'Address': None, 'ZipCode': None, 'MailAddress': 'Palm hills 6th october, phase 1 Villa b53', 'MailZipCode': '00000', 'Phone1': None, 'Phone2': None, 'Fax': None, 'ContactPerson': None, 'Notes': None, 'PayTermsGrpCode': -1, 'CreditLimit': 0.0, 'MaxCommitment': 0.0, 'DiscountPercent': 0.0, 'VatLiable': 'vLiable', 'FederalTaxID': None, 'DeductibleAtSource': 'tNO', 'DeductionPercent': 0.0, 'DeductionValidUntil': None, 'PriceListNum': 1, 'IntrestRatePercent': 0.0, 'CommissionPercent': 0.0, 'CommissionGroupCode': 0, 'FreeText': None, 'SalesPersonCode': -1, 'Currency': 'EGP', 'RateDiffAccount': None, 'Cellular': '00201003370743', 'AvarageLate': None, 'City': None, 'County': None, 'Country': 'EG', 'MailCity': 'Giza', 'MailCounty': None, 'MailCountry': 'EG', 'EmailAddress': None, 'Picture': None, 'DefaultAccount': None, 'DefaultBranch': None, 'DefaultBankCode': '-1', 'AdditionalID': None, 'Pager': None, 'FatherCard': None, 'CardForeignName': None, 'FatherType': 'cPayments_sum', 'DeductionOffice': None, 'ExportCode': None, 'MinIntrest': 0.0, 'CurrentAccountBalance': 0.0, 'OpenDeliveryNotesBalance': 0.0, 'OpenOrdersBalance': 0.0, 'OpenChecksBalance': 0.0, 'VatGroup': None, 'ShippingType': None, 'Password': None, 'Indicator': None, 'IBAN': None, 'CreditCardCode': -1, 'CreditCardNum': '', 'CreditCardExpiration': None, 'DebitorAccount': '10601110', 'OpenOpportunities': None, 'Valid': 'tYES', 'ValidFrom': None, 'ValidTo': None, 'ValidRemarks': None, 'Frozen': 'tNO', 'FrozenFrom': None, 'FrozenTo': None, 'FrozenRemarks': None, 'Block': None, 'BillToState': None, 'ShipToState': None, 'ExemptNum': None, 'Priority': -1, 'FormCode1099': None, 'Box1099': None, 'PeymentMethodCode': None, 'BackOrder': 'tYES', 'PartialDelivery': 'tYES', 'BlockDunning': 'tNO', 'BankCountry': None, 'HouseBank': 'CIB', 'HouseBankCountry': 'EG', 'HouseBankAccount': '100029997769', 'ShipToDefault': 'Omnia Ezz Elarab 1', 'DunningLevel': None, 'DunningDate': None, 'CollectionAuthorization': 'tNO', 'DME': None, 'InstructionKey': None, 'SinglePayment': 'tNO', 'ISRBillerID': None, 'PaymentBlock': 'tNO', 'ReferenceDetails': None, 'HouseBankBranch': 'New Cairo', 'OwnerIDNumber': None, 'PaymentBlockDescription': -1, 'TaxExemptionLetterNum': None, 'MaxAmountOfExemption': 0.0, 'ExemptionValidityDateFrom': None, 'ExemptionValidityDateTo': None, 'LinkedBusinessPartner': None, 'LastMultiReconciliationNum': None, 'DeferredTax': 'tNO', 'Equalization': 'tNO', 'SubjectToWithholdingTax': 'boNO', 'CertificateNumber': None, 'ExpirationDate': None, 'NationalInsuranceNum': None, 'AccrualCriteria': 'tNO', 'WTCode': None, 'BillToBuildingFloorRoom': None, 'DownPaymentClearAct': '20101212', 'ChannelBP': None, 'DefaultTechnician': None, 'BilltoDefault': None, 'CustomerBillofExchangDisc': None, 'Territory': None, 'ShipToBuildingFloorRoom': '', 'CustomerBillofExchangPres': None, 'ProjectCode': None, 'VatGroupLatinAmerica': None, 'DunningTerm': None, 'Website': None, 'OtherReceivablePayable': None, 'BillofExchangeonCollection': None, 'CompanyPrivate': 'cCompany', 'LanguageCode': 8, 'UnpaidBillofExchange': None, 'WithholdingTaxDeductionGroup': -1, 'ClosingDateProcedureNumber': None, 'Profession': None, 'BankChargesAllocationCode': None, 'TaxRoundingRule': 'trr_CompanyDefault', 'Properties1': 'tNO', 'Properties2': 'tNO', 'Properties3': 'tNO', 'Properties4': 'tNO', 'Properties5': 'tNO', 'Properties6': 'tNO', 'Properties7': 'tNO', 'Properties8': 'tNO', 'Properties9': 'tNO', 'Properties10': 'tNO', 'Properties11': 'tNO', 'Properties12': 'tNO', 'Properties13': 'tNO', 'Properties14': 'tNO', 'Properties15': 'tNO', 'Properties16': 'tNO', 'Properties17': 'tNO', 'Properties18': 'tNO', 'Properties19': 'tNO', 'Properties20': 'tNO', 'Properties21': 'tNO', 'Properties22': 'tNO', 'Properties23': 'tNO', 'Properties24': 'tNO', 'Properties25': 'tNO', 'Properties26': 'tNO', 'Properties27': 'tNO', 'Properties28': 'tNO', 'Properties29': 'tNO', 'Properties30': 'tNO', 'Properties31': 'tNO', 'Properties32': 'tNO', 'Properties33': 'tNO', 'Properties34': 'tNO', 'Properties35': 'tNO', 'Properties36': 'tNO', 'Properties37': 'tNO', 'Properties38': 'tNO', 'Properties39': 'tNO', 'Properties40': 'tNO', 'Properties41': 'tNO', 'Properties42': 'tNO', 'Properties43': 'tNO', 'Properties44': 'tNO', 'Properties45': 'tNO', 'Properties46': 'tNO', 'Properties47': 'tNO', 'Properties48': 'tNO', 'Properties49': 'tNO', 'Properties50': 'tNO', 'Properties51': 'tNO', 'Properties52': 'tNO', 'Properties53': 'tNO', 'Properties54': 'tNO', 'Properties55': 'tNO', 'Properties56': 'tNO', 'Properties57': 'tNO', 'Properties58': 'tNO', 'Properties59': 'tNO', 'Properties60': 'tNO', 'Properties61': 'tNO', 'Properties62': 'tNO', 'Properties63': 'tNO', 'Properties64': 'tNO', 'CompanyRegistrationNumber': None, 'VerificationNumber': None, 'DiscountBaseObject': 'dgboNone', 'DiscountRelations': 'dgrLowestDiscount', 'TypeReport': 'atCompany', 'ThresholdOverlook': 'tNO', 'SurchargeOverlook': 'tNO', 'DownPaymentInterimAccount': None, 'OperationCode347': 'ocSalesOrServicesRevenues', 'InsuranceOperation347': 'tNO', 'HierarchicalDeduction': 'tNO', 'ShaamGroup': 'sgServicesAndAsset', 'WithholdingTaxCertified': 'tNO', 'BookkeepingCertified': 'tNO', 'PlanningGroup': None, 'Affiliate': 'tNO', 'Industry': None, 'VatIDNum': None, 'DatevAccount': None, 'DatevFirstDataEntry': 'tYES', 'UseShippedGoodsAccount': 'tNO', 'GTSRegNo': None, 'GTSBankAccountNo': None, 'GTSBillingAddrTel': None, 'ETaxWebSite': None, 'HouseBankIBAN': None, 'VATRegistrationNumber': None, 'RepresentativeName': None, 'IndustryType': None, 'BusinessType': None, 'Series': 87, 'AutomaticPosting': 'apNo', 'InterestAccount': None, 'FeeAccount': None, 'CampaignNumber': None, 'AliasName': None, 'DefaultBlanketAgreementNumber': None, 'EffectiveDiscount': 'dgrLowestDiscount', 'NoDiscounts': 'tNO', 'EffectivePrice': 'epDefaultPriority', 'EffectivePriceConsidersPriceBeforeDiscount': 'tNO', 'GlobalLocationNumber': None, 'EDISenderID': None, 'EDIRecipientID': None, 'ResidenNumber': 'rntSpanishFiscalID', 'RelationshipCode': None, 'RelationshipDateFrom': None, 'RelationshipDateTill': None, 'UnifiedFederalTaxID': None, 'AttachmentEntry': None, 'TypeOfOperation': None, 'EndorsableChecksFromBP': 'tYES', 'AcceptsEndorsedChecks': 'tNO', 'OwnerCode': None, 'BlockSendingMarketingContent': 'tNO', 'AgentCode': None, 'PriceMode': 'pmNet', 'EDocGenerationType': None, 'EDocStreet': None, 'EDocStreetNumber': None, 'EDocBuildingNumber': None, 'EDocZipCode': None, 'EDocCity': None, 'EDocCountry': None, 'EDocDistrict': None, 'EDocRepresentativeFirstName': None, 'EDocRepresentativeSurname': None, 'EDocRepresentativeCompany': None, 'EDocRepresentativeFiscalCode': None, 'EDocRepresentativeAdditionalId': None, 'EDocPECAddress': None, 'IPACodeForPA': None, 'UpdateDate': '2025-08-05', 'UpdateTime': '18:02:59', 'ExemptionMaxAmountValidationType': 'emaIndividual', 'ECommerceMerchantID': None, 'UseBillToAddrToDetermineTax': 'tNO', 'CreateDate': '2025-08-05', 'CreateTime': '18:02:59', 'DefaultTransporterEntry': None, 'DefaultTransporterLineNumber': None, 'FCERelevant': 'tNO', 'FCEValidateBaseDelivery': 'tNO', 'MainUsage': None, 'EBooksVATExemptionCause': None, 'U_BP_Old': None, 'U_SBO_BPType': 'Person', 'ElectronicProtocols': [], 'BPAddresses': [{'AddressName': 'Omnia Ezz Elarab 1', 'Street': 'Palm hills 6th october, phase 1 Villa b53', 'Block': None, 'ZipCode': '00000', 'City': 'Giza', 'County': None, 'Country': 'EG', 'State': None, 'FederalTaxID': None, 'TaxCode': None, 'BuildingFloorRoom': None, 'AddressType': 'bo_ShipTo', 'AddressName2': None, 'AddressName3': None, 'TypeOfAddress': None, 'StreetNo': None, 'BPCode': 'C0021031', 'RowNum': 0, 'GlobalLocationNumber': None, 'Nationality': None, 'TaxOffice': None, 'GSTIN': None, 'GstType': None, 'CreateDate': '2025-08-05', 'CreateTime': '18:02:59', 'MYFType': None, 'TaasEnabled': 'tYES'}], 'ContactEmployees': [], 'BPAccountReceivablePaybleCollection': [], 'BPPaymentMethods': [], 'BPWithholdingTaxCollection': [], 'BPPaymentDates': [], 'BPBranchAssignment': [], 'BPBankAccounts': [], 'BPFiscalTaxIDCollection': [], 'DiscountGroups': [], 'BPIntrastatExtension': {}, 'BPBlockSendingMarketingContents': []}]}, 'status': 'success'}
2025-08-05 18:07:04,692 - sync_service - INFO - Found existing customer: C0021031
2025-08-05 18:07:04,693 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'Invoices', 'request': {'method': 'POST', 'url': 'https://10.0.0.100:50000/b1s/v1/Invoices', 'data': {'DocDate': '2025-08-05', 'CardCode': 'C0021031', 'NumAtCard': '', 'Comments': '', 'ShipToCode': 'Omnia Ezz Elarab Address 1', 'U_Shopify_Order_ID': '#1480', 'SalesPersonCode': 97, 'DocumentLines': [{'ItemCode': 'ACC-0000001', 'Quantity': 1, 'UnitPrice': 5000.0, 'WarehouseCode': '5A'}], 'DocumentAdditionalExpenses': [{'ExpenseCode': 1, 'LineTotal': 200.0, 'Remarks': 'Shipping fee'}]}, 'params': None}, 'response': None, 'status': None}
2025-08-05 18:07:05,749 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'Invoices', 'request': None, 'response': {'status_code': 404, 'text': '{\n   "error" : {\n      "code" : -2028,\n      "message" : {\n         "lang" : "en-us",\n         "value" : "No matching records found (ODBC -2028)"\n      }\n   }\n}\n'}, 'status': 'failure'}
2025-08-05 18:07:05,750 - sync_service - ERROR - Failed to create invoice in SAP: HTTP 404: {
   "error" : {
      "code" : -2028,
      "message" : {
         "lang" : "en-us",
         "value" : "No matching records found (ODBC -2028)"
      }
   }
}

2025-08-05 18:08:13,291 - sync_service - INFO - Initialized Shopify client for store: Local Store (local)
2025-08-05 18:08:13,296 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'login', 'request': {'company': 'JudeBenHalim_Test', 'user': 'manager'}, 'response': None, 'status': None}
2025-08-05 18:08:14,034 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'login', 'request': None, 'response': {'status': 'success'}, 'status': 'success'}
2025-08-05 18:08:14,036 - sync_service - INFO - SAP login successful
2025-08-05 18:08:14,036 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'Warehouses', 'request': {'method': 'GET', 'url': 'https://10.0.0.100:50000/b1s/v1/Warehouses', 'data': None, 'params': None}, 'response': None, 'status': None}
2025-08-05 18:08:14,738 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'Warehouses', 'request': None, 'response': {'odata.metadata': 'https://10.0.0.100:50000/b1s/v1/$metadata#Warehouses', 'value': [{'Street': None, 'StockInflationOffsetAccount': '', 'ZipCode': None, 'DecreasingAccount': '', 'PurchaseAccount': '', 'EURevenuesAccount': '', 'ReturningAccount': '', 'ShippedGoodsAccount': '', 'StockInflationAdjustAccount': '', 'AllowUseTax': 'tNO', 'CostInflationAccount': '', 'ForeignExpensesAccount': '', 'EUExpensesAccount': '', 'CostInflationOffsetAccount': '', 'ExpensesClearingAccount': '', 'PurchaseReturningAccount': '', 'VATInRevenueAccount': '', 'FederalTaxID': None, 'Location': 3, 'Block': None, 'ExpenseAccount': '', 'DecreaseGLAccount': '', 'RevenuesAccount': '', 'TaxGroup': None, 'ExemptRevenuesAccount': '', 'PurchaseOffsetAccount': '', 'CostOfGoodsSold': '50101001', 'WarehouseCode': '5A', 'State': '', 'City': None, 'PriceDifferencesAccount': '50101001', 'VarianceAccount': '', 'Country': None, 'IncreaseGLAccount': '', 'ExchangeRateDifferencesAccount': '', 'WIPMaterialAccount': '', 'WarehouseName': 'Water Way', 'DropShip': 'tNO', 'WIPMaterialVarianceAccount': '', 'TransfersAcc': '20101513', 'InternalKey': None, 'ForeignRevenuesAcc': '', 'BuildingFloorRoom': None, 'County': None, 'Nettable': 'tYES', 'IncreasingAcc': '', 'ExpenseOffsetingAct': '', 'GoodsClearingAcc': '', 'StockAccount': '10501310', 'BusinessPlaceID': None, 'PurchaseCreditAcc': '', 'EUPurchaseCreditAcc': '', 'ForeignPurchaseCreditAcc': '', 'SalesCreditAcc': '', 'SalesCreditEUAcc': '', 'ExemptedCredits': '', 'SalesCreditForeignAcc': '', 'NegativeInventoryAdjustmentAccount': '', 'WHShipToName': None, 'Excisable': 'tNO', 'WHIncomingCenvatAccount': '', 'WHOutgoingCenvatAccount': '', 'StockInTransitAccount': '', 'WipOffsetProfitAndLossAccount': '', 'InventoryOffsetProfitAndLossAccount': '', 'AddressType': None, 'StreetNo': None, 'Storekeeper': None, 'Shipper': None, 'ManageSerialAndBatchNumbers': 'tNO', 'GlobalLocationNumber': None, 'EnableBinLocations': 'tYES', 'BinLocCodeSeparator': '-', 'DefaultBin': 8, 'DefaultBinEnforced': 'tNO', 'AutoAllocOnIssue': 'whsBinSingleChoiceOnly', 'EnableReceivingBinLocations': 'tNO', 'ReceivingBinLocationsBy': 'rblmBinLocationCodeOrder', 'PurchaseBalanceAccount': '', 'Inactive': 'tNO', 'RestrictReceiptToEmptyBinLocation': 'tYES', 'ReceiveUpToMaxQuantity': 'tNO', 'AutoAllocOnReceipt': 'aaormDefaultBin', 'ReceiveUpToMaxWeight': 'tNO', 'ReceiveUpToMethod': 'rutmMaximumQty', 'U_ShopifyInventoryIDLocal': None, 'U_ShopifyInventoryIDInternational': None}, {'Street': None, 'StockInflationOffsetAccount': '', 'ZipCode': None, 'DecreasingAccount': '', 'PurchaseAccount': '', 'EURevenuesAccount': '', 'ReturningAccount': '', 'ShippedGoodsAccount': '', 'StockInflationAdjustAccount': '', 'AllowUseTax': 'tNO', 'CostInflationAccount': '', 'ForeignExpensesAccount': '', 'EUExpensesAccount': '', 'CostInflationOffsetAccount': '', 'ExpensesClearingAccount': '', 'PurchaseReturningAccount': '', 'VATInRevenueAccount': '', 'FederalTaxID': None, 'Location': 7, 'Block': None, 'ExpenseAccount': '', 'DecreaseGLAccount': '', 'RevenuesAccount': '', 'TaxGroup': None, 'ExemptRevenuesAccount': '', 'PurchaseOffsetAccount': '', 'CostOfGoodsSold': '50101001', 'WarehouseCode': 'Arkan', 'State': '', 'City': None, 'PriceDifferencesAccount': '50101001', 'VarianceAccount': '', 'Country': None, 'IncreaseGLAccount': '', 'ExchangeRateDifferencesAccount': '', 'WIPMaterialAccount': '', 'WarehouseName': 'Arkan', 'DropShip': 'tNO', 'WIPMaterialVarianceAccount': '', 'TransfersAcc': '20101513', 'InternalKey': None, 'ForeignRevenuesAcc': '', 'BuildingFloorRoom': None, 'County': None, 'Nettable': 'tYES', 'IncreasingAcc': '', 'ExpenseOffsetingAct': '', 'GoodsClearingAcc': '', 'StockAccount': '10501310', 'BusinessPlaceID': None, 'PurchaseCreditAcc': '', 'EUPurchaseCreditAcc': '', 'ForeignPurchaseCreditAcc': '', 'SalesCreditAcc': '', 'SalesCreditEUAcc': '', 'ExemptedCredits': '', 'SalesCreditForeignAcc': '', 'NegativeInventoryAdjustmentAccount': '', 'WHShipToName': None, 'Excisable': 'tNO', 'WHIncomingCenvatAccount': '', 'WHOutgoingCenvatAccount': '', 'StockInTransitAccount': '', 'WipOffsetProfitAndLossAccount': '', 'InventoryOffsetProfitAndLossAccount': '', 'AddressType': None, 'StreetNo': None, 'Storekeeper': None, 'Shipper': None, 'ManageSerialAndBatchNumbers': 'tNO', 'GlobalLocationNumber': None, 'EnableBinLocations': 'tYES', 'BinLocCodeSeparator': '-', 'DefaultBin': 20, 'DefaultBinEnforced': 'tNO', 'AutoAllocOnIssue': 'whsBinSingleChoiceOnly', 'EnableReceivingBinLocations': 'tNO', 'ReceivingBinLocationsBy': 'rblmBinLocationCodeOrder', 'PurchaseBalanceAccount': '', 'Inactive': 'tNO', 'RestrictReceiptToEmptyBinLocation': 'tYES', 'ReceiveUpToMaxQuantity': 'tNO', 'AutoAllocOnReceipt': 'aaormDefaultBin', 'ReceiveUpToMaxWeight': 'tNO', 'ReceiveUpToMethod': 'rutmMaximumQty', 'U_ShopifyInventoryIDLocal': None, 'U_ShopifyInventoryIDInternational': None}, {'Street': None, 'StockInflationOffsetAccount': '', 'ZipCode': None, 'DecreasingAccount': '', 'PurchaseAccount': '', 'EURevenuesAccount': '', 'ReturningAccount': '', 'ShippedGoodsAccount': '', 'StockInflationAdjustAccount': '', 'AllowUseTax': 'tNO', 'CostInflationAccount': '', 'ForeignExpensesAccount': '', 'EUExpensesAccount': '', 'CostInflationOffsetAccount': '', 'ExpensesClearingAccount': '', 'PurchaseReturningAccount': '', 'VATInRevenueAccount': '', 'FederalTaxID': None, 'Location': 4, 'Block': None, 'ExpenseAccount': '', 'DecreaseGLAccount': '', 'RevenuesAccount': '', 'TaxGroup': None, 'ExemptRevenuesAccount': '', 'PurchaseOffsetAccount': '', 'CostOfGoodsSold': '50101001', 'WarehouseCode': 'DIP', 'State': '', 'City': None, 'PriceDifferencesAccount': '50101001', 'VarianceAccount': '', 'Country': None, 'IncreaseGLAccount': '', 'ExchangeRateDifferencesAccount': '', 'WIPMaterialAccount': '', 'WarehouseName': 'Diplomatics', 'DropShip': 'tNO', 'WIPMaterialVarianceAccount': '', 'TransfersAcc': '20101513', 'InternalKey': None, 'ForeignRevenuesAcc': '', 'BuildingFloorRoom': None, 'County': None, 'Nettable': 'tYES', 'IncreasingAcc': '', 'ExpenseOffsetingAct': '', 'GoodsClearingAcc': '', 'StockAccount': '10501310', 'BusinessPlaceID': None, 'PurchaseCreditAcc': '', 'EUPurchaseCreditAcc': '', 'ForeignPurchaseCreditAcc': '', 'SalesCreditAcc': '', 'SalesCreditEUAcc': '', 'ExemptedCredits': '', 'SalesCreditForeignAcc': '', 'NegativeInventoryAdjustmentAccount': '', 'WHShipToName': None, 'Excisable': 'tNO', 'WHIncomingCenvatAccount': '', 'WHOutgoingCenvatAccount': '', 'StockInTransitAccount': '', 'WipOffsetProfitAndLossAccount': '', 'InventoryOffsetProfitAndLossAccount': '', 'AddressType': None, 'StreetNo': None, 'Storekeeper': None, 'Shipper': None, 'ManageSerialAndBatchNumbers': 'tNO', 'GlobalLocationNumber': None, 'EnableBinLocations': 'tYES', 'BinLocCodeSeparator': '-', 'DefaultBin': 11, 'DefaultBinEnforced': 'tNO', 'AutoAllocOnIssue': 'whsBinSingleChoiceOnly', 'EnableReceivingBinLocations': 'tNO', 'ReceivingBinLocationsBy': 'rblmBinLocationCodeOrder', 'PurchaseBalanceAccount': '', 'Inactive': 'tNO', 'RestrictReceiptToEmptyBinLocation': 'tYES', 'ReceiveUpToMaxQuantity': 'tNO', 'AutoAllocOnReceipt': 'aaormDefaultBin', 'ReceiveUpToMaxWeight': 'tNO', 'ReceiveUpToMethod': 'rutmMaximumQty', 'U_ShopifyInventoryIDLocal': None, 'U_ShopifyInventoryIDInternational': None}, {'Street': None, 'StockInflationOffsetAccount': '', 'ZipCode': None, 'DecreasingAccount': '', 'PurchaseAccount': '', 'EURevenuesAccount': '', 'ReturningAccount': '', 'ShippedGoodsAccount': '', 'StockInflationAdjustAccount': '', 'AllowUseTax': 'tNO', 'CostInflationAccount': '', 'ForeignExpensesAccount': '', 'EUExpensesAccount': '', 'CostInflationOffsetAccount': '', 'ExpensesClearingAccount': '', 'PurchaseReturningAccount': '', 'VATInRevenueAccount': '', 'FederalTaxID': None, 'Location': 1, 'Block': None, 'ExpenseAccount': '', 'DecreaseGLAccount': '', 'RevenuesAccount': '', 'TaxGroup': None, 'ExemptRevenuesAccount': '', 'PurchaseOffsetAccount': '', 'CostOfGoodsSold': '50101001', 'WarehouseCode': 'INC', 'State': '', 'City': None, 'PriceDifferencesAccount': '50101001', 'VarianceAccount': '', 'Country': None, 'IncreaseGLAccount': '', 'ExchangeRateDifferencesAccount': '', 'WIPMaterialAccount': '', 'WarehouseName': 'Incoming Warehouse', 'DropShip': 'tNO', 'WIPMaterialVarianceAccount': '', 'TransfersAcc': '20101513', 'InternalKey': None, 'ForeignRevenuesAcc': '', 'BuildingFloorRoom': None, 'County': None, 'Nettable': 'tYES', 'IncreasingAcc': '', 'ExpenseOffsetingAct': '', 'GoodsClearingAcc': '', 'StockAccount': '10501310', 'BusinessPlaceID': None, 'PurchaseCreditAcc': '', 'EUPurchaseCreditAcc': '', 'ForeignPurchaseCreditAcc': '', 'SalesCreditAcc': '', 'SalesCreditEUAcc': '', 'ExemptedCredits': '', 'SalesCreditForeignAcc': '', 'NegativeInventoryAdjustmentAccount': '', 'WHShipToName': None, 'Excisable': 'tNO', 'WHIncomingCenvatAccount': '', 'WHOutgoingCenvatAccount': '', 'StockInTransitAccount': '', 'WipOffsetProfitAndLossAccount': '', 'InventoryOffsetProfitAndLossAccount': '', 'AddressType': None, 'StreetNo': None, 'Storekeeper': None, 'Shipper': None, 'ManageSerialAndBatchNumbers': 'tNO', 'GlobalLocationNumber': None, 'EnableBinLocations': 'tNO', 'BinLocCodeSeparator': '-', 'DefaultBin': None, 'DefaultBinEnforced': 'tNO', 'AutoAllocOnIssue': 'whsBinSingleChoiceOnly', 'EnableReceivingBinLocations': 'tNO', 'ReceivingBinLocationsBy': 'rblmBinLocationCodeOrder', 'PurchaseBalanceAccount': '', 'Inactive': 'tNO', 'RestrictReceiptToEmptyBinLocation': 'tYES', 'ReceiveUpToMaxQuantity': 'tNO', 'AutoAllocOnReceipt': 'aaormDefaultBin', 'ReceiveUpToMaxWeight': 'tNO', 'ReceiveUpToMethod': 'rutmMaximumQty', 'U_ShopifyInventoryIDLocal': None, 'U_ShopifyInventoryIDInternational': None}, {'Street': None, 'StockInflationOffsetAccount': '', 'ZipCode': None, 'DecreasingAccount': '', 'PurchaseAccount': '', 'EURevenuesAccount': '', 'ReturningAccount': '', 'ShippedGoodsAccount': '', 'StockInflationAdjustAccount': '', 'AllowUseTax': 'tNO', 'CostInflationAccount': '', 'ForeignExpensesAccount': '', 'EUExpensesAccount': '', 'CostInflationOffsetAccount': '', 'ExpensesClearingAccount': '', 'PurchaseReturningAccount': '', 'VATInRevenueAccount': '', 'FederalTaxID': None, 'Location': 1, 'Block': None, 'ExpenseAccount': '', 'DecreaseGLAccount': '', 'RevenuesAccount': '', 'TaxGroup': None, 'ExemptRevenuesAccount': '', 'PurchaseOffsetAccount': '', 'CostOfGoodsSold': '50101001', 'WarehouseCode': 'ONL', 'State': '', 'City': None, 'PriceDifferencesAccount': '50101001', 'VarianceAccount': '', 'Country': None, 'IncreaseGLAccount': '', 'ExchangeRateDifferencesAccount': '', 'WIPMaterialAccount': '', 'WarehouseName': 'Online Sales', 'DropShip': 'tNO', 'WIPMaterialVarianceAccount': '', 'TransfersAcc': '20101513', 'InternalKey': None, 'ForeignRevenuesAcc': '', 'BuildingFloorRoom': None, 'County': None, 'Nettable': 'tYES', 'IncreasingAcc': '', 'ExpenseOffsetingAct': '', 'GoodsClearingAcc': '', 'StockAccount': '10501312', 'BusinessPlaceID': None, 'PurchaseCreditAcc': '', 'EUPurchaseCreditAcc': '', 'ForeignPurchaseCreditAcc': '', 'SalesCreditAcc': '', 'SalesCreditEUAcc': '', 'ExemptedCredits': '', 'SalesCreditForeignAcc': '', 'NegativeInventoryAdjustmentAccount': '', 'WHShipToName': None, 'Excisable': 'tNO', 'WHIncomingCenvatAccount': '', 'WHOutgoingCenvatAccount': '', 'StockInTransitAccount': '', 'WipOffsetProfitAndLossAccount': '', 'InventoryOffsetProfitAndLossAccount': '', 'AddressType': None, 'StreetNo': None, 'Storekeeper': None, 'Shipper': None, 'ManageSerialAndBatchNumbers': 'tNO', 'GlobalLocationNumber': None, 'EnableBinLocations': 'tNO', 'BinLocCodeSeparator': '-', 'DefaultBin': None, 'DefaultBinEnforced': 'tNO', 'AutoAllocOnIssue': 'whsBinSingleChoiceOnly', 'EnableReceivingBinLocations': 'tNO', 'ReceivingBinLocationsBy': 'rblmBinLocationCodeOrder', 'PurchaseBalanceAccount': '', 'Inactive': 'tNO', 'RestrictReceiptToEmptyBinLocation': 'tYES', 'ReceiveUpToMaxQuantity': 'tNO', 'AutoAllocOnReceipt': 'aaormDefaultBin', 'ReceiveUpToMaxWeight': 'tNO', 'ReceiveUpToMethod': 'rutmMaximumQty', 'U_ShopifyInventoryIDLocal': None, 'U_ShopifyInventoryIDInternational': None}, {'Street': None, 'StockInflationOffsetAccount': '', 'ZipCode': None, 'DecreasingAccount': '', 'PurchaseAccount': '', 'EURevenuesAccount': '', 'ReturningAccount': '', 'ShippedGoodsAccount': '', 'StockInflationAdjustAccount': '', 'AllowUseTax': 'tNO', 'CostInflationAccount': '', 'ForeignExpensesAccount': '', 'EUExpensesAccount': '', 'CostInflationOffsetAccount': '', 'ExpensesClearingAccount': '', 'PurchaseReturningAccount': '', 'VATInRevenueAccount': '', 'FederalTaxID': None, 'Location': 6, 'Block': None, 'ExpenseAccount': '', 'DecreaseGLAccount': '', 'RevenuesAccount': '', 'TaxGroup': None, 'ExemptRevenuesAccount': '', 'PurchaseOffsetAccount': '', 'CostOfGoodsSold': '50101001', 'WarehouseCode': 'PHO', 'State': '', 'City': None, 'PriceDifferencesAccount': '50101001', 'VarianceAccount': '', 'Country': None, 'IncreaseGLAccount': '', 'ExchangeRateDifferencesAccount': '', 'WIPMaterialAccount': '', 'WarehouseName': 'Photography', 'DropShip': 'tNO', 'WIPMaterialVarianceAccount': '', 'TransfersAcc': '20101513', 'InternalKey': None, 'ForeignRevenuesAcc': '', 'BuildingFloorRoom': None, 'County': None, 'Nettable': 'tYES', 'IncreasingAcc': '', 'ExpenseOffsetingAct': '', 'GoodsClearingAcc': '', 'StockAccount': '10501310', 'BusinessPlaceID': None, 'PurchaseCreditAcc': '', 'EUPurchaseCreditAcc': '', 'ForeignPurchaseCreditAcc': '', 'SalesCreditAcc': '', 'SalesCreditEUAcc': '', 'ExemptedCredits': '', 'SalesCreditForeignAcc': '', 'NegativeInventoryAdjustmentAccount': '', 'WHShipToName': None, 'Excisable': 'tNO', 'WHIncomingCenvatAccount': '', 'WHOutgoingCenvatAccount': '', 'StockInTransitAccount': '', 'WipOffsetProfitAndLossAccount': '', 'InventoryOffsetProfitAndLossAccount': '', 'AddressType': None, 'StreetNo': None, 'Storekeeper': None, 'Shipper': None, 'ManageSerialAndBatchNumbers': 'tNO', 'GlobalLocationNumber': None, 'EnableBinLocations': 'tYES', 'BinLocCodeSeparator': '-', 'DefaultBin': None, 'DefaultBinEnforced': 'tNO', 'AutoAllocOnIssue': 'whsBinSingleChoiceOnly', 'EnableReceivingBinLocations': 'tNO', 'ReceivingBinLocationsBy': 'rblmBinLocationCodeOrder', 'PurchaseBalanceAccount': '', 'Inactive': 'tYES', 'RestrictReceiptToEmptyBinLocation': 'tYES', 'ReceiveUpToMaxQuantity': 'tNO', 'AutoAllocOnReceipt': 'aaormDefaultBin', 'ReceiveUpToMaxWeight': 'tNO', 'ReceiveUpToMethod': 'rutmMaximumQty', 'U_ShopifyInventoryIDLocal': None, 'U_ShopifyInventoryIDInternational': None}, {'Street': None, 'StockInflationOffsetAccount': '', 'ZipCode': None, 'DecreasingAccount': '', 'PurchaseAccount': '', 'EURevenuesAccount': '', 'ReturningAccount': '', 'ShippedGoodsAccount': '6100103', 'StockInflationAdjustAccount': '', 'AllowUseTax': 'tNO', 'CostInflationAccount': '', 'ForeignExpensesAccount': '', 'EUExpensesAccount': '', 'CostInflationOffsetAccount': '', 'ExpensesClearingAccount': '', 'PurchaseReturningAccount': '', 'VATInRevenueAccount': '', 'FederalTaxID': None, 'Location': None, 'Block': None, 'ExpenseAccount': '', 'DecreaseGLAccount': '', 'RevenuesAccount': '', 'TaxGroup': None, 'ExemptRevenuesAccount': '', 'PurchaseOffsetAccount': '', 'CostOfGoodsSold': '50101001', 'WarehouseCode': 'PHO-EX', 'State': '', 'City': None, 'PriceDifferencesAccount': '50101001', 'VarianceAccount': '', 'Country': None, 'IncreaseGLAccount': '', 'ExchangeRateDifferencesAccount': '', 'WIPMaterialAccount': '10501281', 'WarehouseName': 'PHO-EXTERNAL', 'DropShip': 'tNO', 'WIPMaterialVarianceAccount': '', 'TransfersAcc': '20101513', 'InternalKey': None, 'ForeignRevenuesAcc': '', 'BuildingFloorRoom': None, 'County': None, 'Nettable': 'tYES', 'IncreasingAcc': '', 'ExpenseOffsetingAct': '', 'GoodsClearingAcc': '', 'StockAccount': '10501310', 'BusinessPlaceID': None, 'PurchaseCreditAcc': '50101001', 'EUPurchaseCreditAcc': '50101001', 'ForeignPurchaseCreditAcc': '50101001', 'SalesCreditAcc': '40101101', 'SalesCreditEUAcc': '40101101', 'ExemptedCredits': '', 'SalesCreditForeignAcc': '40101101', 'NegativeInventoryAdjustmentAccount': '', 'WHShipToName': None, 'Excisable': 'tNO', 'WHIncomingCenvatAccount': '', 'WHOutgoingCenvatAccount': '', 'StockInTransitAccount': '20101515', 'WipOffsetProfitAndLossAccount': '', 'InventoryOffsetProfitAndLossAccount': '', 'AddressType': None, 'StreetNo': None, 'Storekeeper': None, 'Shipper': None, 'ManageSerialAndBatchNumbers': 'tNO', 'GlobalLocationNumber': None, 'EnableBinLocations': 'tYES', 'BinLocCodeSeparator': '-', 'DefaultBin': None, 'DefaultBinEnforced': 'tNO', 'AutoAllocOnIssue': 'whsBinSingleChoiceOnly', 'EnableReceivingBinLocations': 'tNO', 'ReceivingBinLocationsBy': 'rblmBinLocationCodeOrder', 'PurchaseBalanceAccount': '', 'Inactive': 'tNO', 'RestrictReceiptToEmptyBinLocation': 'tYES', 'ReceiveUpToMaxQuantity': 'tNO', 'AutoAllocOnReceipt': 'aaormDefaultBin', 'ReceiveUpToMaxWeight': 'tNO', 'ReceiveUpToMethod': 'rutmMaximumQty', 'U_ShopifyInventoryIDLocal': None, 'U_ShopifyInventoryIDInternational': None}, {'Street': None, 'StockInflationOffsetAccount': '', 'ZipCode': None, 'DecreasingAccount': '', 'PurchaseAccount': '', 'EURevenuesAccount': '', 'ReturningAccount': '', 'ShippedGoodsAccount': '6100103', 'StockInflationAdjustAccount': '', 'AllowUseTax': 'tNO', 'CostInflationAccount': '', 'ForeignExpensesAccount': '', 'EUExpensesAccount': '', 'CostInflationOffsetAccount': '', 'ExpensesClearingAccount': '', 'PurchaseReturningAccount': '', 'VATInRevenueAccount': '', 'FederalTaxID': None, 'Location': None, 'Block': None, 'ExpenseAccount': '', 'DecreaseGLAccount': '', 'RevenuesAccount': '', 'TaxGroup': None, 'ExemptRevenuesAccount': '', 'PurchaseOffsetAccount': '', 'CostOfGoodsSold': '50101001', 'WarehouseCode': 'PHO-IN', 'State': '', 'City': None, 'PriceDifferencesAccount': '50101001', 'VarianceAccount': '', 'Country': None, 'IncreaseGLAccount': '', 'ExchangeRateDifferencesAccount': '', 'WIPMaterialAccount': '10501281', 'WarehouseName': 'PHO-INTERNAL', 'DropShip': 'tNO', 'WIPMaterialVarianceAccount': '', 'TransfersAcc': '20101513', 'InternalKey': None, 'ForeignRevenuesAcc': '', 'BuildingFloorRoom': None, 'County': None, 'Nettable': 'tYES', 'IncreasingAcc': '', 'ExpenseOffsetingAct': '', 'GoodsClearingAcc': '', 'StockAccount': '10501310', 'BusinessPlaceID': None, 'PurchaseCreditAcc': '50101001', 'EUPurchaseCreditAcc': '50101001', 'ForeignPurchaseCreditAcc': '50101001', 'SalesCreditAcc': '40101101', 'SalesCreditEUAcc': '40101101', 'ExemptedCredits': '', 'SalesCreditForeignAcc': '40101101', 'NegativeInventoryAdjustmentAccount': '', 'WHShipToName': None, 'Excisable': 'tNO', 'WHIncomingCenvatAccount': '', 'WHOutgoingCenvatAccount': '', 'StockInTransitAccount': '20101515', 'WipOffsetProfitAndLossAccount': '', 'InventoryOffsetProfitAndLossAccount': '', 'AddressType': None, 'StreetNo': None, 'Storekeeper': None, 'Shipper': None, 'ManageSerialAndBatchNumbers': 'tNO', 'GlobalLocationNumber': None, 'EnableBinLocations': 'tNO', 'BinLocCodeSeparator': '-', 'DefaultBin': None, 'DefaultBinEnforced': 'tNO', 'AutoAllocOnIssue': 'whsBinSingleChoiceOnly', 'EnableReceivingBinLocations': 'tNO', 'ReceivingBinLocationsBy': 'rblmBinLocationCodeOrder', 'PurchaseBalanceAccount': '', 'Inactive': 'tNO', 'RestrictReceiptToEmptyBinLocation': 'tYES', 'ReceiveUpToMaxQuantity': 'tNO', 'AutoAllocOnReceipt': 'aaormDefaultBin', 'ReceiveUpToMaxWeight': 'tNO', 'ReceiveUpToMethod': 'rutmMaximumQty', 'U_ShopifyInventoryIDLocal': None, 'U_ShopifyInventoryIDInternational': None}, {'Street': None, 'StockInflationOffsetAccount': '', 'ZipCode': None, 'DecreasingAccount': '', 'PurchaseAccount': '', 'EURevenuesAccount': '', 'ReturningAccount': '', 'ShippedGoodsAccount': '', 'StockInflationAdjustAccount': '', 'AllowUseTax': 'tNO', 'CostInflationAccount': '', 'ForeignExpensesAccount': '', 'EUExpensesAccount': '', 'CostInflationOffsetAccount': '', 'ExpensesClearingAccount': '', 'PurchaseReturningAccount': '', 'VATInRevenueAccount': '', 'FederalTaxID': None, 'Location': 5, 'Block': None, 'ExpenseAccount': '', 'DecreaseGLAccount': '', 'RevenuesAccount': '', 'TaxGroup': None, 'ExemptRevenuesAccount': '', 'PurchaseOffsetAccount': '', 'CostOfGoodsSold': '50101001', 'WarehouseCode': 'QCW', 'State': '', 'City': None, 'PriceDifferencesAccount': '50101001', 'VarianceAccount': '', 'Country': None, 'IncreaseGLAccount': '', 'ExchangeRateDifferencesAccount': '', 'WIPMaterialAccount': '', 'WarehouseName': 'Quality Control', 'DropShip': 'tNO', 'WIPMaterialVarianceAccount': '', 'TransfersAcc': '20101513', 'InternalKey': None, 'ForeignRevenuesAcc': '', 'BuildingFloorRoom': None, 'County': None, 'Nettable': 'tYES', 'IncreasingAcc': '', 'ExpenseOffsetingAct': '', 'GoodsClearingAcc': '', 'StockAccount': '10501211', 'BusinessPlaceID': None, 'PurchaseCreditAcc': '', 'EUPurchaseCreditAcc': '', 'ForeignPurchaseCreditAcc': '', 'SalesCreditAcc': '', 'SalesCreditEUAcc': '', 'ExemptedCredits': '', 'SalesCreditForeignAcc': '', 'NegativeInventoryAdjustmentAccount': '', 'WHShipToName': None, 'Excisable': 'tNO', 'WHIncomingCenvatAccount': '', 'WHOutgoingCenvatAccount': '', 'StockInTransitAccount': '', 'WipOffsetProfitAndLossAccount': '', 'InventoryOffsetProfitAndLossAccount': '', 'AddressType': None, 'StreetNo': None, 'Storekeeper': None, 'Shipper': None, 'ManageSerialAndBatchNumbers': 'tNO', 'GlobalLocationNumber': None, 'EnableBinLocations': 'tNO', 'BinLocCodeSeparator': '-', 'DefaultBin': None, 'DefaultBinEnforced': 'tNO', 'AutoAllocOnIssue': 'whsBinSingleChoiceOnly', 'EnableReceivingBinLocations': 'tNO', 'ReceivingBinLocationsBy': 'rblmBinLocationCodeOrder', 'PurchaseBalanceAccount': '', 'Inactive': 'tYES', 'RestrictReceiptToEmptyBinLocation': 'tYES', 'ReceiveUpToMaxQuantity': 'tNO', 'AutoAllocOnReceipt': 'aaormDefaultBin', 'ReceiveUpToMaxWeight': 'tNO', 'ReceiveUpToMethod': 'rutmMaximumQty', 'U_ShopifyInventoryIDLocal': None, 'U_ShopifyInventoryIDInternational': None}, {'Street': None, 'StockInflationOffsetAccount': '', 'ZipCode': None, 'DecreasingAccount': '', 'PurchaseAccount': '', 'EURevenuesAccount': '', 'ReturningAccount': '', 'ShippedGoodsAccount': '', 'StockInflationAdjustAccount': '', 'AllowUseTax': 'tNO', 'CostInflationAccount': '', 'ForeignExpensesAccount': '', 'EUExpensesAccount': '', 'CostInflationOffsetAccount': '', 'ExpensesClearingAccount': '', 'PurchaseReturningAccount': '', 'VATInRevenueAccount': '', 'FederalTaxID': None, 'Location': 1, 'Block': None, 'ExpenseAccount': '', 'DecreaseGLAccount': '', 'RevenuesAccount': '', 'TaxGroup': None, 'ExemptRevenuesAccount': '', 'PurchaseOffsetAccount': '', 'CostOfGoodsSold': '50101001', 'WarehouseCode': 'RTW', 'State': '', 'City': None, 'PriceDifferencesAccount': '50101001', 'VarianceAccount': '', 'Country': None, 'IncreaseGLAccount': '', 'ExchangeRateDifferencesAccount': '', 'WIPMaterialAccount': '', 'WarehouseName': 'Retailer Warehouse', 'DropShip': 'tNO', 'WIPMaterialVarianceAccount': '', 'TransfersAcc': '20101513', 'InternalKey': None, 'ForeignRevenuesAcc': '', 'BuildingFloorRoom': None, 'County': None, 'Nettable': 'tYES', 'IncreasingAcc': '', 'ExpenseOffsetingAct': '', 'GoodsClearingAcc': '', 'StockAccount': '10501310', 'BusinessPlaceID': None, 'PurchaseCreditAcc': '', 'EUPurchaseCreditAcc': '', 'ForeignPurchaseCreditAcc': '', 'SalesCreditAcc': '', 'SalesCreditEUAcc': '', 'ExemptedCredits': '', 'SalesCreditForeignAcc': '', 'NegativeInventoryAdjustmentAccount': '', 'WHShipToName': None, 'Excisable': 'tNO', 'WHIncomingCenvatAccount': '', 'WHOutgoingCenvatAccount': '', 'StockInTransitAccount': '', 'WipOffsetProfitAndLossAccount': '', 'InventoryOffsetProfitAndLossAccount': '', 'AddressType': None, 'StreetNo': None, 'Storekeeper': None, 'Shipper': None, 'ManageSerialAndBatchNumbers': 'tNO', 'GlobalLocationNumber': None, 'EnableBinLocations': 'tNO', 'BinLocCodeSeparator': '-', 'DefaultBin': None, 'DefaultBinEnforced': 'tNO', 'AutoAllocOnIssue': 'whsBinSingleChoiceOnly', 'EnableReceivingBinLocations': 'tNO', 'ReceivingBinLocationsBy': 'rblmBinLocationCodeOrder', 'PurchaseBalanceAccount': '', 'Inactive': 'tNO', 'RestrictReceiptToEmptyBinLocation': 'tYES', 'ReceiveUpToMaxQuantity': 'tNO', 'AutoAllocOnReceipt': 'aaormDefaultBin', 'ReceiveUpToMaxWeight': 'tNO', 'ReceiveUpToMethod': 'rutmMaximumQty', 'U_ShopifyInventoryIDLocal': None, 'U_ShopifyInventoryIDInternational': None}, {'Street': None, 'StockInflationOffsetAccount': '', 'ZipCode': None, 'DecreasingAccount': '', 'PurchaseAccount': '', 'EURevenuesAccount': '', 'ReturningAccount': '', 'ShippedGoodsAccount': '', 'StockInflationAdjustAccount': '', 'AllowUseTax': 'tNO', 'CostInflationAccount': '', 'ForeignExpensesAccount': '', 'EUExpensesAccount': '', 'CostInflationOffsetAccount': '', 'ExpensesClearingAccount': '', 'PurchaseReturningAccount': '', 'VATInRevenueAccount': '', 'FederalTaxID': None, 'Location': 1, 'Block': None, 'ExpenseAccount': '', 'DecreaseGLAccount': '', 'RevenuesAccount': '', 'TaxGroup': None, 'ExemptRevenuesAccount': '', 'PurchaseOffsetAccount': '', 'CostOfGoodsSold': '50101001', 'WarehouseCode': 'RTWH', 'State': '', 'City': None, 'PriceDifferencesAccount': '50101001', 'VarianceAccount': '', 'Country': None, 'IncreaseGLAccount': '', 'ExchangeRateDifferencesAccount': '', 'WIPMaterialAccount': '', 'WarehouseName': 'Retailer Warehouse', 'DropShip': 'tNO', 'WIPMaterialVarianceAccount': '', 'TransfersAcc': '20101513', 'InternalKey': None, 'ForeignRevenuesAcc': '', 'BuildingFloorRoom': None, 'County': None, 'Nettable': 'tYES', 'IncreasingAcc': '', 'ExpenseOffsetingAct': '', 'GoodsClearingAcc': '', 'StockAccount': '10501310', 'BusinessPlaceID': None, 'PurchaseCreditAcc': '', 'EUPurchaseCreditAcc': '', 'ForeignPurchaseCreditAcc': '', 'SalesCreditAcc': '', 'SalesCreditEUAcc': '', 'ExemptedCredits': '', 'SalesCreditForeignAcc': '', 'NegativeInventoryAdjustmentAccount': '', 'WHShipToName': None, 'Excisable': 'tNO', 'WHIncomingCenvatAccount': '', 'WHOutgoingCenvatAccount': '', 'StockInTransitAccount': '', 'WipOffsetProfitAndLossAccount': '', 'InventoryOffsetProfitAndLossAccount': '', 'AddressType': None, 'StreetNo': None, 'Storekeeper': None, 'Shipper': None, 'ManageSerialAndBatchNumbers': 'tNO', 'GlobalLocationNumber': None, 'EnableBinLocations': 'tYES', 'BinLocCodeSeparator': '-', 'DefaultBin': 41, 'DefaultBinEnforced': 'tNO', 'AutoAllocOnIssue': 'whsBinSingleChoiceOnly', 'EnableReceivingBinLocations': 'tNO', 'ReceivingBinLocationsBy': 'rblmBinLocationCodeOrder', 'PurchaseBalanceAccount': '', 'Inactive': 'tNO', 'RestrictReceiptToEmptyBinLocation': 'tYES', 'ReceiveUpToMaxQuantity': 'tNO', 'AutoAllocOnReceipt': 'aaormDefaultBin', 'ReceiveUpToMaxWeight': 'tNO', 'ReceiveUpToMethod': 'rutmMaximumQty', 'U_ShopifyInventoryIDLocal': None, 'U_ShopifyInventoryIDInternational': None}, {'Street': None, 'StockInflationOffsetAccount': '', 'ZipCode': None, 'DecreasingAccount': '', 'PurchaseAccount': '', 'EURevenuesAccount': '', 'ReturningAccount': '', 'ShippedGoodsAccount': '', 'StockInflationAdjustAccount': '', 'AllowUseTax': 'tNO', 'CostInflationAccount': '', 'ForeignExpensesAccount': '', 'EUExpensesAccount': '', 'CostInflationOffsetAccount': '', 'ExpensesClearingAccount': '', 'PurchaseReturningAccount': '', 'VATInRevenueAccount': '', 'FederalTaxID': None, 'Location': 1, 'Block': None, 'ExpenseAccount': '', 'DecreaseGLAccount': '', 'RevenuesAccount': '', 'TaxGroup': None, 'ExemptRevenuesAccount': '', 'PurchaseOffsetAccount': '', 'CostOfGoodsSold': '50101001', 'WarehouseCode': 'SW', 'State': '', 'City': None, 'PriceDifferencesAccount': '50101001', 'VarianceAccount': '', 'Country': None, 'IncreaseGLAccount': '', 'ExchangeRateDifferencesAccount': '', 'WIPMaterialAccount': '', 'WarehouseName': 'Show Room', 'DropShip': 'tNO', 'WIPMaterialVarianceAccount': '', 'TransfersAcc': '20101513', 'InternalKey': None, 'ForeignRevenuesAcc': '', 'BuildingFloorRoom': None, 'County': None, 'Nettable': 'tYES', 'IncreasingAcc': '', 'ExpenseOffsetingAct': '', 'GoodsClearingAcc': '', 'StockAccount': '10501310', 'BusinessPlaceID': None, 'PurchaseCreditAcc': '', 'EUPurchaseCreditAcc': '', 'ForeignPurchaseCreditAcc': '', 'SalesCreditAcc': '', 'SalesCreditEUAcc': '', 'ExemptedCredits': '', 'SalesCreditForeignAcc': '', 'NegativeInventoryAdjustmentAccount': '', 'WHShipToName': None, 'Excisable': 'tNO', 'WHIncomingCenvatAccount': '', 'WHOutgoingCenvatAccount': '', 'StockInTransitAccount': '', 'WipOffsetProfitAndLossAccount': '', 'InventoryOffsetProfitAndLossAccount': '', 'AddressType': None, 'StreetNo': None, 'Storekeeper': None, 'Shipper': None, 'ManageSerialAndBatchNumbers': 'tNO', 'GlobalLocationNumber': None, 'EnableBinLocations': 'tYES', 'BinLocCodeSeparator': '-', 'DefaultBin': 2, 'DefaultBinEnforced': 'tNO', 'AutoAllocOnIssue': 'whsBinBinCodeOrder', 'EnableReceivingBinLocations': 'tNO', 'ReceivingBinLocationsBy': 'rblmBinLocationCodeOrder', 'PurchaseBalanceAccount': '', 'Inactive': 'tNO', 'RestrictReceiptToEmptyBinLocation': 'tYES', 'ReceiveUpToMaxQuantity': 'tNO', 'AutoAllocOnReceipt': 'aaormDefaultBin', 'ReceiveUpToMaxWeight': 'tNO', 'ReceiveUpToMethod': 'rutmMaximumQty', 'U_ShopifyInventoryIDLocal': None, 'U_ShopifyInventoryIDInternational': None}, {'Street': None, 'StockInflationOffsetAccount': '', 'ZipCode': None, 'DecreasingAccount': '', 'PurchaseAccount': '', 'EURevenuesAccount': '', 'ReturningAccount': '', 'ShippedGoodsAccount': '', 'StockInflationAdjustAccount': '', 'AllowUseTax': 'tNO', 'CostInflationAccount': '', 'ForeignExpensesAccount': '', 'EUExpensesAccount': '', 'CostInflationOffsetAccount': '', 'ExpensesClearingAccount': '', 'PurchaseReturningAccount': '', 'VATInRevenueAccount': '', 'FederalTaxID': None, 'Location': 1, 'Block': None, 'ExpenseAccount': '', 'DecreaseGLAccount': '', 'RevenuesAccount': '', 'TaxGroup': None, 'ExemptRevenuesAccount': '', 'PurchaseOffsetAccount': '', 'CostOfGoodsSold': '50101001', 'WarehouseCode': 'WLS', 'State': '', 'City': None, 'PriceDifferencesAccount': '50101001', 'VarianceAccount': '', 'Country': None, 'IncreaseGLAccount': '', 'ExchangeRateDifferencesAccount': '', 'WIPMaterialAccount': '', 'WarehouseName': 'Whole Sales', 'DropShip': 'tNO', 'WIPMaterialVarianceAccount': '', 'TransfersAcc': '20101513', 'InternalKey': None, 'ForeignRevenuesAcc': '', 'BuildingFloorRoom': None, 'County': None, 'Nettable': 'tYES', 'IncreasingAcc': '', 'ExpenseOffsetingAct': '', 'GoodsClearingAcc': '', 'StockAccount': '10501310', 'BusinessPlaceID': None, 'PurchaseCreditAcc': '', 'EUPurchaseCreditAcc': '', 'ForeignPurchaseCreditAcc': '', 'SalesCreditAcc': '', 'SalesCreditEUAcc': '', 'ExemptedCredits': '', 'SalesCreditForeignAcc': '', 'NegativeInventoryAdjustmentAccount': '', 'WHShipToName': None, 'Excisable': 'tNO', 'WHIncomingCenvatAccount': '', 'WHOutgoingCenvatAccount': '', 'StockInTransitAccount': '', 'WipOffsetProfitAndLossAccount': '', 'InventoryOffsetProfitAndLossAccount': '', 'AddressType': None, 'StreetNo': None, 'Storekeeper': None, 'Shipper': None, 'ManageSerialAndBatchNumbers': 'tNO', 'GlobalLocationNumber': None, 'EnableBinLocations': 'tNO', 'BinLocCodeSeparator': '-', 'DefaultBin': None, 'DefaultBinEnforced': 'tNO', 'AutoAllocOnIssue': 'whsBinSingleChoiceOnly', 'EnableReceivingBinLocations': 'tNO', 'ReceivingBinLocationsBy': 'rblmBinLocationCodeOrder', 'PurchaseBalanceAccount': '', 'Inactive': 'tNO', 'RestrictReceiptToEmptyBinLocation': 'tYES', 'ReceiveUpToMaxQuantity': 'tNO', 'AutoAllocOnReceipt': 'aaormDefaultBin', 'ReceiveUpToMaxWeight': 'tNO', 'ReceiveUpToMethod': 'rutmMaximumQty', 'U_ShopifyInventoryIDLocal': None, 'U_ShopifyInventoryIDInternational': None}, {'Street': None, 'StockInflationOffsetAccount': '', 'ZipCode': None, 'DecreasingAccount': '', 'PurchaseAccount': '', 'EURevenuesAccount': '', 'ReturningAccount': '', 'ShippedGoodsAccount': '', 'StockInflationAdjustAccount': '', 'AllowUseTax': 'tNO', 'CostInflationAccount': '', 'ForeignExpensesAccount': '', 'EUExpensesAccount': '', 'CostInflationOffsetAccount': '', 'ExpensesClearingAccount': '', 'PurchaseReturningAccount': '', 'VATInRevenueAccount': '', 'FederalTaxID': None, 'Location': 5, 'Block': None, 'ExpenseAccount': '', 'DecreaseGLAccount': '', 'RevenuesAccount': '', 'TaxGroup': None, 'ExemptRevenuesAccount': '', 'PurchaseOffsetAccount': '', 'CostOfGoodsSold': '50101001', 'WarehouseCode': 'WW', 'State': '', 'City': None, 'PriceDifferencesAccount': '50101001', 'VarianceAccount': '', 'Country': None, 'IncreaseGLAccount': '', 'ExchangeRateDifferencesAccount': '', 'WIPMaterialAccount': '', 'WarehouseName': 'Work Shop', 'DropShip': 'tNO', 'WIPMaterialVarianceAccount': '', 'TransfersAcc': '20101513', 'InternalKey': None, 'ForeignRevenuesAcc': '', 'BuildingFloorRoom': None, 'County': None, 'Nettable': 'tYES', 'IncreasingAcc': '', 'ExpenseOffsetingAct': '', 'GoodsClearingAcc': '', 'StockAccount': '10501310', 'BusinessPlaceID': None, 'PurchaseCreditAcc': '', 'EUPurchaseCreditAcc': '', 'ForeignPurchaseCreditAcc': '', 'SalesCreditAcc': '', 'SalesCreditEUAcc': '', 'ExemptedCredits': '', 'SalesCreditForeignAcc': '', 'NegativeInventoryAdjustmentAccount': '', 'WHShipToName': None, 'Excisable': 'tNO', 'WHIncomingCenvatAccount': '', 'WHOutgoingCenvatAccount': '', 'StockInTransitAccount': '', 'WipOffsetProfitAndLossAccount': '', 'InventoryOffsetProfitAndLossAccount': '', 'AddressType': None, 'StreetNo': None, 'Storekeeper': None, 'Shipper': None, 'ManageSerialAndBatchNumbers': 'tNO', 'GlobalLocationNumber': None, 'EnableBinLocations': 'tNO', 'BinLocCodeSeparator': '-', 'DefaultBin': None, 'DefaultBinEnforced': 'tNO', 'AutoAllocOnIssue': 'whsBinSingleChoiceOnly', 'EnableReceivingBinLocations': 'tNO', 'ReceivingBinLocationsBy': 'rblmBinLocationCodeOrder', 'PurchaseBalanceAccount': '', 'Inactive': 'tNO', 'RestrictReceiptToEmptyBinLocation': 'tYES', 'ReceiveUpToMaxQuantity': 'tNO', 'AutoAllocOnReceipt': 'aaormDefaultBin', 'ReceiveUpToMaxWeight': 'tNO', 'ReceiveUpToMethod': 'rutmMaximumQty', 'U_ShopifyInventoryIDLocal': None, 'U_ShopifyInventoryIDInternational': None}, {'Street': None, 'StockInflationOffsetAccount': '', 'ZipCode': None, 'DecreasingAccount': '', 'PurchaseAccount': '', 'EURevenuesAccount': '40101101', 'ReturningAccount': '10501310', 'ShippedGoodsAccount': '6100103', 'StockInflationAdjustAccount': '', 'AllowUseTax': 'tNO', 'CostInflationAccount': '', 'ForeignExpensesAccount': '50101001', 'EUExpensesAccount': '50101001', 'CostInflationOffsetAccount': '', 'ExpensesClearingAccount': '', 'PurchaseReturningAccount': '', 'VATInRevenueAccount': '', 'FederalTaxID': None, 'Location': 5, 'Block': None, 'ExpenseAccount': '50101001', 'DecreaseGLAccount': '', 'RevenuesAccount': '40101101', 'TaxGroup': None, 'ExemptRevenuesAccount': '', 'PurchaseOffsetAccount': '', 'CostOfGoodsSold': '50101001', 'WarehouseCode': 'WW-CON', 'State': '', 'City': None, 'PriceDifferencesAccount': '50101001', 'VarianceAccount': '', 'Country': None, 'IncreaseGLAccount': '', 'ExchangeRateDifferencesAccount': '', 'WIPMaterialAccount': '10501281', 'WarehouseName': 'WKS - Consignment', 'DropShip': 'tNO', 'WIPMaterialVarianceAccount': '', 'TransfersAcc': '20101513', 'InternalKey': None, 'ForeignRevenuesAcc': '40101101', 'BuildingFloorRoom': None, 'County': None, 'Nettable': 'tYES', 'IncreasingAcc': '', 'ExpenseOffsetingAct': '', 'GoodsClearingAcc': '10501210', 'StockAccount': '10501310', 'BusinessPlaceID': None, 'PurchaseCreditAcc': '50101001', 'EUPurchaseCreditAcc': '50101001', 'ForeignPurchaseCreditAcc': '50101001', 'SalesCreditAcc': '40101101', 'SalesCreditEUAcc': '40101101', 'ExemptedCredits': '', 'SalesCreditForeignAcc': '40101101', 'NegativeInventoryAdjustmentAccount': '', 'WHShipToName': None, 'Excisable': 'tNO', 'WHIncomingCenvatAccount': '', 'WHOutgoingCenvatAccount': '', 'StockInTransitAccount': '20101515', 'WipOffsetProfitAndLossAccount': '', 'InventoryOffsetProfitAndLossAccount': '', 'AddressType': None, 'StreetNo': None, 'Storekeeper': None, 'Shipper': None, 'ManageSerialAndBatchNumbers': 'tNO', 'GlobalLocationNumber': None, 'EnableBinLocations': 'tNO', 'BinLocCodeSeparator': '-', 'DefaultBin': None, 'DefaultBinEnforced': 'tNO', 'AutoAllocOnIssue': 'whsBinSingleChoiceOnly', 'EnableReceivingBinLocations': 'tNO', 'ReceivingBinLocationsBy': 'rblmBinLocationCodeOrder', 'PurchaseBalanceAccount': '', 'Inactive': 'tNO', 'RestrictReceiptToEmptyBinLocation': 'tYES', 'ReceiveUpToMaxQuantity': 'tNO', 'AutoAllocOnReceipt': 'aaormDefaultBin', 'ReceiveUpToMaxWeight': 'tNO', 'ReceiveUpToMethod': 'rutmMaximumQty', 'U_ShopifyInventoryIDLocal': None, 'U_ShopifyInventoryIDInternational': None}, {'Street': None, 'StockInflationOffsetAccount': '', 'ZipCode': None, 'DecreasingAccount': '', 'PurchaseAccount': '', 'EURevenuesAccount': '40101101', 'ReturningAccount': '10501310', 'ShippedGoodsAccount': '6100103', 'StockInflationAdjustAccount': '', 'AllowUseTax': 'tNO', 'CostInflationAccount': '', 'ForeignExpensesAccount': '50101001', 'EUExpensesAccount': '50101001', 'CostInflationOffsetAccount': '', 'ExpensesClearingAccount': '', 'PurchaseReturningAccount': '', 'VATInRevenueAccount': '', 'FederalTaxID': None, 'Location': 5, 'Block': None, 'ExpenseAccount': '50101001', 'DecreaseGLAccount': '', 'RevenuesAccount': '40101101', 'TaxGroup': None, 'ExemptRevenuesAccount': '', 'PurchaseOffsetAccount': '', 'CostOfGoodsSold': '50101001', 'WarehouseCode': 'WW-DAM', 'State': '', 'City': None, 'PriceDifferencesAccount': '50101001', 'VarianceAccount': '', 'Country': None, 'IncreaseGLAccount': '', 'ExchangeRateDifferencesAccount': '', 'WIPMaterialAccount': '10501281', 'WarehouseName': 'WW-Damage', 'DropShip': 'tNO', 'WIPMaterialVarianceAccount': '', 'TransfersAcc': '20101513', 'InternalKey': None, 'ForeignRevenuesAcc': '40101101', 'BuildingFloorRoom': None, 'County': None, 'Nettable': 'tYES', 'IncreasingAcc': '', 'ExpenseOffsetingAct': '', 'GoodsClearingAcc': '10501210', 'StockAccount': '10501310', 'BusinessPlaceID': None, 'PurchaseCreditAcc': '50101001', 'EUPurchaseCreditAcc': '50101001', 'ForeignPurchaseCreditAcc': '50101001', 'SalesCreditAcc': '40101101', 'SalesCreditEUAcc': '40101101', 'ExemptedCredits': '', 'SalesCreditForeignAcc': '40101101', 'NegativeInventoryAdjustmentAccount': '', 'WHShipToName': None, 'Excisable': 'tNO', 'WHIncomingCenvatAccount': '', 'WHOutgoingCenvatAccount': '', 'StockInTransitAccount': '20101515', 'WipOffsetProfitAndLossAccount': '', 'InventoryOffsetProfitAndLossAccount': '', 'AddressType': None, 'StreetNo': None, 'Storekeeper': None, 'Shipper': None, 'ManageSerialAndBatchNumbers': 'tNO', 'GlobalLocationNumber': None, 'EnableBinLocations': 'tNO', 'BinLocCodeSeparator': '-', 'DefaultBin': None, 'DefaultBinEnforced': 'tNO', 'AutoAllocOnIssue': 'whsBinSingleChoiceOnly', 'EnableReceivingBinLocations': 'tNO', 'ReceivingBinLocationsBy': 'rblmBinLocationCodeOrder', 'PurchaseBalanceAccount': '', 'Inactive': 'tNO', 'RestrictReceiptToEmptyBinLocation': 'tYES', 'ReceiveUpToMaxQuantity': 'tNO', 'AutoAllocOnReceipt': 'aaormDefaultBin', 'ReceiveUpToMaxWeight': 'tNO', 'ReceiveUpToMethod': 'rutmMaximumQty', 'U_ShopifyInventoryIDLocal': None, 'U_ShopifyInventoryIDInternational': None}, {'Street': None, 'StockInflationOffsetAccount': '', 'ZipCode': None, 'DecreasingAccount': '', 'PurchaseAccount': '', 'EURevenuesAccount': '40101101', 'ReturningAccount': '10501310', 'ShippedGoodsAccount': '6100103', 'StockInflationAdjustAccount': '', 'AllowUseTax': 'tNO', 'CostInflationAccount': '', 'ForeignExpensesAccount': '50101001', 'EUExpensesAccount': '50101001', 'CostInflationOffsetAccount': '', 'ExpensesClearingAccount': '', 'PurchaseReturningAccount': '', 'VATInRevenueAccount': '', 'FederalTaxID': None, 'Location': 5, 'Block': None, 'ExpenseAccount': '50101001', 'DecreaseGLAccount': '', 'RevenuesAccount': '40101101', 'TaxGroup': None, 'ExemptRevenuesAccount': '', 'PurchaseOffsetAccount': '', 'CostOfGoodsSold': '50101001', 'WarehouseCode': 'WW-REP', 'State': '', 'City': None, 'PriceDifferencesAccount': '50101001', 'VarianceAccount': '', 'Country': None, 'IncreaseGLAccount': '', 'ExchangeRateDifferencesAccount': '', 'WIPMaterialAccount': '10501281', 'WarehouseName': 'WW-Repaire', 'DropShip': 'tNO', 'WIPMaterialVarianceAccount': '', 'TransfersAcc': '20101513', 'InternalKey': None, 'ForeignRevenuesAcc': '40101101', 'BuildingFloorRoom': None, 'County': None, 'Nettable': 'tYES', 'IncreasingAcc': '', 'ExpenseOffsetingAct': '', 'GoodsClearingAcc': '10501210', 'StockAccount': '10501310', 'BusinessPlaceID': None, 'PurchaseCreditAcc': '50101001', 'EUPurchaseCreditAcc': '50101001', 'ForeignPurchaseCreditAcc': '50101001', 'SalesCreditAcc': '40101101', 'SalesCreditEUAcc': '40101101', 'ExemptedCredits': '', 'SalesCreditForeignAcc': '40101101', 'NegativeInventoryAdjustmentAccount': '', 'WHShipToName': None, 'Excisable': 'tNO', 'WHIncomingCenvatAccount': '', 'WHOutgoingCenvatAccount': '', 'StockInTransitAccount': '20101515', 'WipOffsetProfitAndLossAccount': '', 'InventoryOffsetProfitAndLossAccount': '', 'AddressType': None, 'StreetNo': None, 'Storekeeper': None, 'Shipper': None, 'ManageSerialAndBatchNumbers': 'tNO', 'GlobalLocationNumber': None, 'EnableBinLocations': 'tNO', 'BinLocCodeSeparator': '-', 'DefaultBin': None, 'DefaultBinEnforced': 'tNO', 'AutoAllocOnIssue': 'whsBinSingleChoiceOnly', 'EnableReceivingBinLocations': 'tNO', 'ReceivingBinLocationsBy': 'rblmBinLocationCodeOrder', 'PurchaseBalanceAccount': '', 'Inactive': 'tNO', 'RestrictReceiptToEmptyBinLocation': 'tYES', 'ReceiveUpToMaxQuantity': 'tNO', 'AutoAllocOnReceipt': 'aaormDefaultBin', 'ReceiveUpToMaxWeight': 'tNO', 'ReceiveUpToMethod': 'rutmMaximumQty', 'U_ShopifyInventoryIDLocal': None, 'U_ShopifyInventoryIDInternational': None}, {'Street': None, 'StockInflationOffsetAccount': '', 'ZipCode': None, 'DecreasingAccount': '', 'PurchaseAccount': '', 'EURevenuesAccount': '40101101', 'ReturningAccount': '10501310', 'ShippedGoodsAccount': '6100103', 'StockInflationAdjustAccount': '', 'AllowUseTax': 'tNO', 'CostInflationAccount': '', 'ForeignExpensesAccount': '50101001', 'EUExpensesAccount': '50101001', 'CostInflationOffsetAccount': '', 'ExpensesClearingAccount': '', 'PurchaseReturningAccount': '', 'VATInRevenueAccount': '', 'FederalTaxID': None, 'Location': 5, 'Block': None, 'ExpenseAccount': '50101001', 'DecreaseGLAccount': '', 'RevenuesAccount': '40101101', 'TaxGroup': None, 'ExemptRevenuesAccount': '', 'PurchaseOffsetAccount': '', 'CostOfGoodsSold': '50101001', 'WarehouseCode': 'WW-SAM', 'State': '', 'City': None, 'PriceDifferencesAccount': '50101001', 'VarianceAccount': '', 'Country': None, 'IncreaseGLAccount': '', 'ExchangeRateDifferencesAccount': '', 'WIPMaterialAccount': '10501281', 'WarehouseName': 'WKS - Sample', 'DropShip': 'tNO', 'WIPMaterialVarianceAccount': '', 'TransfersAcc': '20101513', 'InternalKey': None, 'ForeignRevenuesAcc': '40101101', 'BuildingFloorRoom': None, 'County': None, 'Nettable': 'tYES', 'IncreasingAcc': '', 'ExpenseOffsetingAct': '', 'GoodsClearingAcc': '10501210', 'StockAccount': '10501310', 'BusinessPlaceID': None, 'PurchaseCreditAcc': '50101001', 'EUPurchaseCreditAcc': '50101001', 'ForeignPurchaseCreditAcc': '50101001', 'SalesCreditAcc': '40101101', 'SalesCreditEUAcc': '40101101', 'ExemptedCredits': '', 'SalesCreditForeignAcc': '40101101', 'NegativeInventoryAdjustmentAccount': '', 'WHShipToName': None, 'Excisable': 'tNO', 'WHIncomingCenvatAccount': '', 'WHOutgoingCenvatAccount': '', 'StockInTransitAccount': '20101515', 'WipOffsetProfitAndLossAccount': '', 'InventoryOffsetProfitAndLossAccount': '', 'AddressType': None, 'StreetNo': None, 'Storekeeper': None, 'Shipper': None, 'ManageSerialAndBatchNumbers': 'tNO', 'GlobalLocationNumber': None, 'EnableBinLocations': 'tNO', 'BinLocCodeSeparator': '-', 'DefaultBin': None, 'DefaultBinEnforced': 'tNO', 'AutoAllocOnIssue': 'whsBinSingleChoiceOnly', 'EnableReceivingBinLocations': 'tNO', 'ReceivingBinLocationsBy': 'rblmBinLocationCodeOrder', 'PurchaseBalanceAccount': '', 'Inactive': 'tNO', 'RestrictReceiptToEmptyBinLocation': 'tYES', 'ReceiveUpToMaxQuantity': 'tNO', 'AutoAllocOnReceipt': 'aaormDefaultBin', 'ReceiveUpToMaxWeight': 'tNO', 'ReceiveUpToMethod': 'rutmMaximumQty', 'U_ShopifyInventoryIDLocal': None, 'U_ShopifyInventoryIDInternational': None}, {'Street': None, 'StockInflationOffsetAccount': '', 'ZipCode': None, 'DecreasingAccount': '', 'PurchaseAccount': '', 'EURevenuesAccount': '40101101', 'ReturningAccount': '10501310', 'ShippedGoodsAccount': '6100103', 'StockInflationAdjustAccount': '', 'AllowUseTax': 'tNO', 'CostInflationAccount': '', 'ForeignExpensesAccount': '50101001', 'EUExpensesAccount': '50101001', 'CostInflationOffsetAccount': '', 'ExpensesClearingAccount': '', 'PurchaseReturningAccount': '', 'VATInRevenueAccount': '', 'FederalTaxID': None, 'Location': 5, 'Block': None, 'ExpenseAccount': '50101001', 'DecreaseGLAccount': '', 'RevenuesAccount': '40101101', 'TaxGroup': None, 'ExemptRevenuesAccount': '', 'PurchaseOffsetAccount': '', 'CostOfGoodsSold': '50101001', 'WarehouseCode': 'WW-WIP', 'State': '', 'City': None, 'PriceDifferencesAccount': '50101001', 'VarianceAccount': '', 'Country': None, 'IncreaseGLAccount': '', 'ExchangeRateDifferencesAccount': '', 'WIPMaterialAccount': '10501281', 'WarehouseName': 'WKS - WIP', 'DropShip': 'tNO', 'WIPMaterialVarianceAccount': '', 'TransfersAcc': '20101513', 'InternalKey': None, 'ForeignRevenuesAcc': '40101101', 'BuildingFloorRoom': None, 'County': None, 'Nettable': 'tYES', 'IncreasingAcc': '', 'ExpenseOffsetingAct': '', 'GoodsClearingAcc': '10501210', 'StockAccount': '10501310', 'BusinessPlaceID': None, 'PurchaseCreditAcc': '50101001', 'EUPurchaseCreditAcc': '50101001', 'ForeignPurchaseCreditAcc': '50101001', 'SalesCreditAcc': '40101101', 'SalesCreditEUAcc': '40101101', 'ExemptedCredits': '', 'SalesCreditForeignAcc': '40101101', 'NegativeInventoryAdjustmentAccount': '', 'WHShipToName': None, 'Excisable': 'tNO', 'WHIncomingCenvatAccount': '', 'WHOutgoingCenvatAccount': '', 'StockInTransitAccount': '20101515', 'WipOffsetProfitAndLossAccount': '', 'InventoryOffsetProfitAndLossAccount': '', 'AddressType': None, 'StreetNo': None, 'Storekeeper': None, 'Shipper': None, 'ManageSerialAndBatchNumbers': 'tNO', 'GlobalLocationNumber': None, 'EnableBinLocations': 'tNO', 'BinLocCodeSeparator': '-', 'DefaultBin': None, 'DefaultBinEnforced': 'tNO', 'AutoAllocOnIssue': 'whsBinSingleChoiceOnly', 'EnableReceivingBinLocations': 'tNO', 'ReceivingBinLocationsBy': 'rblmBinLocationCodeOrder', 'PurchaseBalanceAccount': '', 'Inactive': 'tNO', 'RestrictReceiptToEmptyBinLocation': 'tYES', 'ReceiveUpToMaxQuantity': 'tNO', 'AutoAllocOnReceipt': 'aaormDefaultBin', 'ReceiveUpToMaxWeight': 'tNO', 'ReceiveUpToMethod': 'rutmMaximumQty', 'U_ShopifyInventoryIDLocal': None, 'U_ShopifyInventoryIDInternational': None}, {'Street': None, 'StockInflationOffsetAccount': '', 'ZipCode': None, 'DecreasingAccount': '', 'PurchaseAccount': '', 'EURevenuesAccount': '', 'ReturningAccount': '', 'ShippedGoodsAccount': '', 'StockInflationAdjustAccount': '', 'AllowUseTax': 'tNO', 'CostInflationAccount': '', 'ForeignExpensesAccount': '', 'EUExpensesAccount': '', 'CostInflationOffsetAccount': '', 'ExpensesClearingAccount': '', 'PurchaseReturningAccount': '', 'VATInRevenueAccount': '', 'FederalTaxID': None, 'Location': 2, 'Block': None, 'ExpenseAccount': '', 'DecreaseGLAccount': '', 'RevenuesAccount': '', 'TaxGroup': None, 'ExemptRevenuesAccount': '', 'PurchaseOffsetAccount': '', 'CostOfGoodsSold': '50101001', 'WarehouseCode': 'ZW', 'State': '', 'City': None, 'PriceDifferencesAccount': '50101001', 'VarianceAccount': '', 'Country': None, 'IncreaseGLAccount': '', 'ExchangeRateDifferencesAccount': '', 'WIPMaterialAccount': '', 'WarehouseName': 'Zamalek', 'DropShip': 'tNO', 'WIPMaterialVarianceAccount': '', 'TransfersAcc': '20101513', 'InternalKey': None, 'ForeignRevenuesAcc': '', 'BuildingFloorRoom': None, 'County': None, 'Nettable': 'tYES', 'IncreasingAcc': '', 'ExpenseOffsetingAct': '', 'GoodsClearingAcc': '', 'StockAccount': '10501310', 'BusinessPlaceID': None, 'PurchaseCreditAcc': '', 'EUPurchaseCreditAcc': '', 'ForeignPurchaseCreditAcc': '', 'SalesCreditAcc': '', 'SalesCreditEUAcc': '', 'ExemptedCredits': '', 'SalesCreditForeignAcc': '', 'NegativeInventoryAdjustmentAccount': '', 'WHShipToName': None, 'Excisable': 'tNO', 'WHIncomingCenvatAccount': '', 'WHOutgoingCenvatAccount': '', 'StockInTransitAccount': '', 'WipOffsetProfitAndLossAccount': '', 'InventoryOffsetProfitAndLossAccount': '', 'AddressType': None, 'StreetNo': None, 'Storekeeper': None, 'Shipper': None, 'ManageSerialAndBatchNumbers': 'tNO', 'GlobalLocationNumber': None, 'EnableBinLocations': 'tYES', 'BinLocCodeSeparator': '-', 'DefaultBin': 14, 'DefaultBinEnforced': 'tNO', 'AutoAllocOnIssue': 'whsBinSingleChoiceOnly', 'EnableReceivingBinLocations': 'tNO', 'ReceivingBinLocationsBy': 'rblmBinLocationCodeOrder', 'PurchaseBalanceAccount': '', 'Inactive': 'tNO', 'RestrictReceiptToEmptyBinLocation': 'tYES', 'ReceiveUpToMaxQuantity': 'tNO', 'AutoAllocOnReceipt': 'aaormDefaultBin', 'ReceiveUpToMaxWeight': 'tNO', 'ReceiveUpToMethod': 'rutmMaximumQty', 'U_ShopifyInventoryIDLocal': None, 'U_ShopifyInventoryIDInternational': None}], 'odata.nextLink': 'Warehouses?$skip=20'}, 'status': 'success'}
2025-08-05 18:08:14,752 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'Items', 'request': {'method': 'GET', 'url': 'https://10.0.0.100:50000/b1s/v1/Items', 'data': None, 'params': {'$top': 5}}, 'response': None, 'status': None}
2025-08-05 18:08:15,708 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'Items', 'request': None, 'response': {'odata.metadata': 'https://10.0.0.100:50000/b1s/v1/$metadata#Items', 'value': [{'ItemCode': 'ACC-0000001', 'ItemName': 'Ring Holder With Slit 5*5cm', 'ForeignName': None, 'ItemsGroupCode': 110, 'CustomsGroupCode': -1, 'SalesVATGroup': 'X0', 'BarCode': None, 'VatLiable': 'tYES', 'PurchaseItem': 'tYES', 'SalesItem': 'tNO', 'InventoryItem': 'tYES', 'IncomeAccount': None, 'ExemptIncomeAccount': None, 'ExpanseAccount': None, 'Mainsupplier': None, 'SupplierCatalogNo': None, 'DesiredInventory': 0.0, 'MinInventory': 50.0, 'Picture': None, 'User_Text': None, 'SerialNum': None, 'CommissionPercent': 0.0, 'CommissionSum': 0.0, 'CommissionGroup': 0, 'TreeType': 'iNotATree', 'AssetItem': 'tNO', 'DataExportCode': None, 'Manufacturer': -1, 'QuantityOnStock': 35.0, 'QuantityOrderedFromVendors': 0.0, 'QuantityOrderedByCustomers': 0.0, 'ManageSerialNumbers': 'tNO', 'ManageBatchNumbers': 'tNO', 'Valid': 'tYES', 'ValidFrom': None, 'ValidTo': None, 'ValidRemarks': None, 'Frozen': 'tNO', 'FrozenFrom': None, 'FrozenTo': None, 'FrozenRemarks': None, 'SalesUnit': None, 'SalesItemsPerUnit': 1.0, 'SalesPackagingUnit': None, 'SalesQtyPerPackUnit': 1.0, 'SalesUnitLength': None, 'SalesLengthUnit': None, 'SalesUnitWidth': None, 'SalesWidthUnit': None, 'SalesUnitHeight': None, 'SalesHeightUnit': None, 'SalesUnitVolume': 0.0, 'SalesVolumeUnit': 4, 'SalesUnitWeight': None, 'SalesWeightUnit': None, 'PurchaseUnit': None, 'PurchaseItemsPerUnit': 1.0, 'PurchasePackagingUnit': None, 'PurchaseQtyPerPackUnit': 1.0, 'PurchaseUnitLength': None, 'PurchaseLengthUnit': None, 'PurchaseUnitWidth': None, 'PurchaseWidthUnit': None, 'PurchaseUnitHeight': None, 'PurchaseHeightUnit': None, 'PurchaseUnitVolume': 0.0, 'PurchaseVolumeUnit': 4, 'PurchaseUnitWeight': None, 'PurchaseWeightUnit': None, 'PurchaseVATGroup': 'X1', 'SalesFactor1': 1.0, 'SalesFactor2': 1.0, 'SalesFactor3': 1.0, 'SalesFactor4': 1.0, 'PurchaseFactor1': 1.0, 'PurchaseFactor2': 1.0, 'PurchaseFactor3': 1.0, 'PurchaseFactor4': 1.0, 'MovingAveragePrice': 0.0, 'ForeignRevenuesAccount': None, 'ECRevenuesAccount': None, 'ForeignExpensesAccount': None, 'ECExpensesAccount': None, 'AvgStdPrice': 0.0, 'DefaultWarehouse': None, 'ShipType': None, 'GLMethod': 'glm_ItemClass', 'TaxType': 'tt_Yes', 'MaxInventory': 0.0, 'ManageStockByWarehouse': 'tYES', 'PurchaseHeightUnit1': None, 'PurchaseUnitHeight1': None, 'PurchaseLengthUnit1': None, 'PurchaseUnitLength1': None, 'PurchaseWeightUnit1': None, 'PurchaseUnitWeight1': None, 'PurchaseWidthUnit1': None, 'PurchaseUnitWidth1': None, 'SalesHeightUnit1': None, 'SalesUnitHeight1': None, 'SalesLengthUnit1': None, 'SalesUnitLength1': None, 'SalesWeightUnit1': None, 'SalesUnitWeight1': None, 'SalesWidthUnit1': None, 'SalesUnitWidth1': None, 'ForceSelectionOfSerialNumber': 'tYES', 'ManageSerialNumbersOnReleaseOnly': 'tNO', 'WTLiable': 'tNO', 'CostAccountingMethod': 'bis_MovingAverage', 'SWW': None, 'WarrantyTemplate': '', 'IndirectTax': 'tNO', 'ArTaxCode': None, 'ApTaxCode': None, 'BaseUnitName': None, 'ItemCountryOrg': None, 'IssueMethod': 'im_Backflush', 'SRIAndBatchManageMethod': 'bomm_OnEveryTransaction', 'IsPhantom': 'tNO', 'InventoryUOM': 'Piece', 'PlanningSystem': 'bop_None', 'ProcurementMethod': 'bom_Buy', 'ComponentWarehouse': 'bomcw_BOM', 'OrderIntervals': None, 'OrderMultiple': 0.0, 'LeadTime': None, 'MinOrderQuantity': 0.0, 'ItemType': 'itItems', 'ItemClass': 'itcMaterial', 'OutgoingServiceCode': -1, 'IncomingServiceCode': -1, 'ServiceGroup': -1, 'NCMCode': -1, 'MaterialType': 'mt_FinishedGoods', 'MaterialGroup': -1, 'ProductSource': '', 'Properties1': 'tNO', 'Properties2': 'tNO', 'Properties3': 'tNO', 'Properties4': 'tNO', 'Properties5': 'tNO', 'Properties6': 'tNO', 'Properties7': 'tNO', 'Properties8': 'tNO', 'Properties9': 'tNO', 'Properties10': 'tNO', 'Properties11': 'tNO', 'Properties12': 'tNO', 'Properties13': 'tNO', 'Properties14': 'tNO', 'Properties15': 'tNO', 'Properties16': 'tNO', 'Properties17': 'tNO', 'Properties18': 'tNO', 'Properties19': 'tNO', 'Properties20': 'tNO', 'Properties21': 'tNO', 'Properties22': 'tNO', 'Properties23': 'tNO', 'Properties24': 'tNO', 'Properties25': 'tNO', 'Properties26': 'tNO', 'Properties27': 'tNO', 'Properties28': 'tNO', 'Properties29': 'tNO', 'Properties30': 'tNO', 'Properties31': 'tNO', 'Properties32': 'tNO', 'Properties33': 'tNO', 'Properties34': 'tNO', 'Properties35': 'tNO', 'Properties36': 'tNO', 'Properties37': 'tNO', 'Properties38': 'tNO', 'Properties39': 'tNO', 'Properties40': 'tNO', 'Properties41': 'tNO', 'Properties42': 'tNO', 'Properties43': 'tNO', 'Properties44': 'tNO', 'Properties45': 'tNO', 'Properties46': 'tNO', 'Properties47': 'tNO', 'Properties48': 'tNO', 'Properties49': 'tNO', 'Properties50': 'tNO', 'Properties51': 'tNO', 'Properties52': 'tNO', 'Properties53': 'tNO', 'Properties54': 'tNO', 'Properties55': 'tNO', 'Properties56': 'tNO', 'Properties57': 'tNO', 'Properties58': 'tNO', 'Properties59': 'tNO', 'Properties60': 'tNO', 'Properties61': 'tNO', 'Properties62': 'tNO', 'Properties63': 'tNO', 'Properties64': 'tNO', 'AutoCreateSerialNumbersOnRelease': 'tNO', 'DNFEntry': -1, 'GTSItemSpec': None, 'GTSItemTaxCategory': None, 'FuelID': None, 'BeverageTableCode': '', 'BeverageGroupCode': '', 'BeverageCommercialBrandCode': None, 'Series': 119, 'ToleranceDays': None, 'TypeOfAdvancedRules': 'toarGeneral', 'IssuePrimarilyBy': 'ipbBinLocations', 'NoDiscounts': 'tNO', 'AssetClass': '', 'AssetGroup': '', 'InventoryNumber': '', 'Technician': None, 'Employee': None, 'Location': None, 'AssetStatus': 'New', 'CapitalizationDate': None, 'StatisticalAsset': 'tNO', 'Cession': 'tNO', 'DeactivateAfterUsefulLife': 'tNO', 'ManageByQuantity': 'tNO', 'UoMGroupEntry': 1, 'InventoryUoMEntry': 1, 'DefaultSalesUoMEntry': None, 'DefaultPurchasingUoMEntry': None, 'DepreciationGroup': None, 'AssetSerialNumber': '', 'InventoryWeight': None, 'InventoryWeightUnit': None, 'InventoryWeight1': None, 'InventoryWeightUnit1': None, 'DefaultCountingUnit': 'Piece', 'CountingItemsPerUnit': 1.0, 'DefaultCountingUoMEntry': 1, 'Excisable': 'tNO', 'ChapterID': -1, 'ScsCode': None, 'SpProdType': None, 'ProdStdCost': 0.0, 'InCostRollup': 'tYES', 'VirtualAssetItem': 'tNO', 'EnforceAssetSerialNumbers': 'tNO', 'AttachmentEntry': None, 'LinkedResource': None, 'UpdateDate': '2025-05-17', 'UpdateTime': '16:02:59', 'GSTRelevnt': 'tNO', 'SACEntry': -1, 'GSTTaxCategory': 'gtc_Regular', 'ServiceCategoryEntry': -1, 'CapitalGoodsOnHoldPercent': None, 'CapitalGoodsOnHoldLimit': None, 'AssessableValue': 0.0, 'AssVal4WTR': 0.0, 'SOIExcisable': 'se_NotExcisable', 'TNVED': None, 'ImportedItem': 'tNO', 'PricingUnit': 1, 'CreateDate': '2025-01-26', 'CreateTime': '09:33:07', 'U_MfgH': None, 'U_Collection': None, 'U_OldCode': None, 'U_ItemsCat': None, 'U_NumberofSet': None, 'U_NileCode': None, 'U_TransferProductionLinkExclude': None, 'U_SBO_CodeType': 'GS1', 'U_SBO_EGSCode': None, 'U_ShopifyColor': None, 'U_SalesChannel': None, 'U_ShopifyItemIDLocal': None, 'U_ShopifyItemIDInternational': None, 'U_ParentCommercialName': None, 'ItemPrices': [{'PriceList': 1, 'Price': 0.0, 'Currency': '', 'AdditionalPrice1': 0.0, 'AdditionalCurrency1': '', 'AdditionalPrice2': 0.0, 'AdditionalCurrency2': '', 'BasePriceList': 1, 'Factor': 1.0, 'UoMPrices': []}, {'PriceList': 2, 'Price': 0.0, 'Currency': '', 'AdditionalPrice1': 0.0, 'AdditionalCurrency1': '', 'AdditionalPrice2': 0.0, 'AdditionalCurrency2': '', 'BasePriceList': 1, 'Factor': 0.4, 'UoMPrices': []}, {'PriceList': 3, 'Price': 0.0, 'Currency': '', 'AdditionalPrice1': 0.0, 'AdditionalCurrency1': '', 'AdditionalPrice2': 0.0, 'AdditionalCurrency2': '', 'BasePriceList': 3, 'Factor': 1.0, 'UoMPrices': []}, {'PriceList': 4, 'Price': 0.0, 'Currency': '', 'AdditionalPrice1': 0.0, 'AdditionalCurrency1': '', 'AdditionalPrice2': 0.0, 'AdditionalCurrency2': '', 'BasePriceList': 4, 'Factor': 1.0, 'UoMPrices': []}, {'PriceList': 5, 'Price': 0.0, 'Currency': '', 'AdditionalPrice1': 0.0, 'AdditionalCurrency1': '', 'AdditionalPrice2': 0.0, 'AdditionalCurrency2': '', 'BasePriceList': 5, 'Factor': 1.0, 'UoMPrices': []}, {'PriceList': 6, 'Price': 0.0, 'Currency': '', 'AdditionalPrice1': 0.0, 'AdditionalCurrency1': '', 'AdditionalPrice2': 0.0, 'AdditionalCurrency2': '', 'BasePriceList': 6, 'Factor': 1.0, 'UoMPrices': []}, {'PriceList': 7, 'Price': 0.0, 'Currency': '', 'AdditionalPrice1': 0.0, 'AdditionalCurrency1': '', 'AdditionalPrice2': 0.0, 'AdditionalCurrency2': '', 'BasePriceList': 7, 'Factor': 1.0, 'UoMPrices': []}, {'PriceList': 8, 'Price': 0.0, 'Currency': '', 'AdditionalPrice1': 0.0, 'AdditionalCurrency1': '', 'AdditionalPrice2': 0.0, 'AdditionalCurrency2': '', 'BasePriceList': 8, 'Factor': 1.0, 'UoMPrices': []}, {'PriceList': 9, 'Price': 0.0, 'Currency': '', 'AdditionalPrice1': 0.0, 'AdditionalCurrency1': '', 'AdditionalPrice2': 0.0, 'AdditionalCurrency2': '', 'BasePriceList': 9, 'Factor': 1.0, 'UoMPrices': []}, {'PriceList': 10, 'Price': 0.0, 'Currency': '', 'AdditionalPrice1': 0.0, 'AdditionalCurrency1': '', 'AdditionalPrice2': 0.0, 'AdditionalCurrency2': '', 'BasePriceList': 10, 'Factor': 1.0, 'UoMPrices': []}], 'ItemWarehouseInfoCollection': [{'MinimalStock': 30.0, 'MaximalStock': 0.0, 'MinimalOrder': 0.0, 'StandardAveragePrice': 180.0, 'Locked': 'tNO', 'InventoryAccount': None, 'CostAccount': None, 'TransferAccount': None, 'RevenuesAccount': None, 'VarienceAccount': None, 'DecreasingAccount': None, 'IncreasingAccount': None, 'ReturningAccount': None, 'ExpensesAccount': None, 'EURevenuesAccount': None, 'EUExpensesAccount': None, 'ForeignRevenueAcc': None, 'ForeignExpensAcc': None, 'ExemptIncomeAcc': None, 'PriceDifferenceAcc': None, 'WarehouseCode': '5A', 'InStock': 25.0, 'Committed': 0.0, 'Ordered': 0.0, 'CountedQuantity': 0.0, 'WasCounted': 'tNO', 'UserSignature': 50, 'Counted': 0.0, 'ExpenseClearingAct': None, 'PurchaseCreditAcc': None, 'EUPurchaseCreditAcc': None, 'ForeignPurchaseCreditAcc': None, 'SalesCreditAcc': None, 'SalesCreditEUAcc': None, 'ExemptedCredits': None, 'SalesCreditForeignAcc': None, 'ExpenseOffsettingAccount': None, 'WipAccount': None, 'ExchangeRateDifferencesAcct': None, 'GoodsClearingAcct': None, 'NegativeInventoryAdjustmentAccount': None, 'CostInflationOffsetAccount': None, 'GLDecreaseAcct': None, 'GLIncreaseAcct': None, 'PAReturnAcct': None, 'PurchaseAcct': None, 'PurchaseOffsetAcct': None, 'ShippedGoodsAccount': None, 'StockInflationOffsetAccount': None, 'StockInflationAdjustAccount': None, 'VATInRevenueAccount': None, 'WipVarianceAccount': None, 'CostInflationAccount': None, 'WHIncomingCenvatAccount': None, 'WHOutgoingCenvatAccount': None, 'StockInTransitAccount': None, 'WipOffsetProfitAndLossAccount': None, 'InventoryOffsetProfitAndLossAccount': None, 'DefaultBin': None, 'DefaultBinEnforced': 'tNO', 'PurchaseBalanceAccount': None, 'ItemCode': 'ACC-0000001', 'ItemCycleCounts': []}, {'MinimalStock': 20.0, 'MaximalStock': 0.0, 'MinimalOrder': 0.0, 'StandardAveragePrice': 180.0, 'Locked': 'tNO', 'InventoryAccount': None, 'CostAccount': None, 'TransferAccount': None, 'RevenuesAccount': None, 'VarienceAccount': None, 'DecreasingAccount': None, 'IncreasingAccount': None, 'ReturningAccount': None, 'ExpensesAccount': None, 'EURevenuesAccount': None, 'EUExpensesAccount': None, 'ForeignRevenueAcc': None, 'ForeignExpensAcc': None, 'ExemptIncomeAcc': None, 'PriceDifferenceAcc': None, 'WarehouseCode': 'Arkan', 'InStock': 10.0, 'Committed': 0.0, 'Ordered': 0.0, 'CountedQuantity': 0.0, 'WasCounted': 'tNO', 'UserSignature': 50, 'Counted': 0.0, 'ExpenseClearingAct': None, 'PurchaseCreditAcc': None, 'EUPurchaseCreditAcc': None, 'ForeignPurchaseCreditAcc': None, 'SalesCreditAcc': None, 'SalesCreditEUAcc': None, 'ExemptedCredits': None, 'SalesCreditForeignAcc': None, 'ExpenseOffsettingAccount': None, 'WipAccount': None, 'ExchangeRateDifferencesAcct': None, 'GoodsClearingAcct': None, 'NegativeInventoryAdjustmentAccount': None, 'CostInflationOffsetAccount': None, 'GLDecreaseAcct': None, 'GLIncreaseAcct': None, 'PAReturnAcct': None, 'PurchaseAcct': None, 'PurchaseOffsetAcct': None, 'ShippedGoodsAccount': None, 'StockInflationOffsetAccount': None, 'StockInflationAdjustAccount': None, 'VATInRevenueAccount': None, 'WipVarianceAccount': None, 'CostInflationAccount': None, 'WHIncomingCenvatAccount': None, 'WHOutgoingCenvatAccount': None, 'StockInTransitAccount': None, 'WipOffsetProfitAndLossAccount': None, 'InventoryOffsetProfitAndLossAccount': None, 'DefaultBin': None, 'DefaultBinEnforced': 'tNO', 'PurchaseBalanceAccount': None, 'ItemCode': 'ACC-0000001', 'ItemCycleCounts': []}, {'MinimalStock': 0.0, 'MaximalStock': 0.0, 'MinimalOrder': 0.0, 'StandardAveragePrice': 0.0, 'Locked': 'tNO', 'InventoryAccount': None, 'CostAccount': None, 'TransferAccount': None, 'RevenuesAccount': None, 'VarienceAccount': None, 'DecreasingAccount': None, 'IncreasingAccount': None, 'ReturningAccount': None, 'ExpensesAccount': None, 'EURevenuesAccount': None, 'EUExpensesAccount': None, 'ForeignRevenueAcc': None, 'ForeignExpensAcc': None, 'ExemptIncomeAcc': None, 'PriceDifferenceAcc': None, 'WarehouseCode': 'DIP', 'InStock': 0.0, 'Committed': 0.0, 'Ordered': 0.0, 'CountedQuantity': 0.0, 'WasCounted': 'tNO', 'UserSignature': 50, 'Counted': 0.0, 'ExpenseClearingAct': None, 'PurchaseCreditAcc': None, 'EUPurchaseCreditAcc': None, 'ForeignPurchaseCreditAcc': None, 'SalesCreditAcc': None, 'SalesCreditEUAcc': None, 'ExemptedCredits': None, 'SalesCreditForeignAcc': None, 'ExpenseOffsettingAccount': None, 'WipAccount': None, 'ExchangeRateDifferencesAcct': None, 'GoodsClearingAcct': None, 'NegativeInventoryAdjustmentAccount': None, 'CostInflationOffsetAccount': None, 'GLDecreaseAcct': None, 'GLIncreaseAcct': None, 'PAReturnAcct': None, 'PurchaseAcct': None, 'PurchaseOffsetAcct': None, 'ShippedGoodsAccount': None, 'StockInflationOffsetAccount': None, 'StockInflationAdjustAccount': None, 'VATInRevenueAccount': None, 'WipVarianceAccount': None, 'CostInflationAccount': None, 'WHIncomingCenvatAccount': None, 'WHOutgoingCenvatAccount': None, 'StockInTransitAccount': None, 'WipOffsetProfitAndLossAccount': None, 'InventoryOffsetProfitAndLossAccount': None, 'DefaultBin': None, 'DefaultBinEnforced': 'tNO', 'PurchaseBalanceAccount': None, 'ItemCode': 'ACC-0000001', 'ItemCycleCounts': []}, {'MinimalStock': 0.0, 'MaximalStock': 0.0, 'MinimalOrder': 0.0, 'StandardAveragePrice': 180.0, 'Locked': 'tNO', 'InventoryAccount': None, 'CostAccount': None, 'TransferAccount': None, 'RevenuesAccount': None, 'VarienceAccount': None, 'DecreasingAccount': None, 'IncreasingAccount': None, 'ReturningAccount': None, 'ExpensesAccount': None, 'EURevenuesAccount': None, 'EUExpensesAccount': None, 'ForeignRevenueAcc': None, 'ForeignExpensAcc': None, 'ExemptIncomeAcc': None, 'PriceDifferenceAcc': None, 'WarehouseCode': 'INC', 'InStock': 0.0, 'Committed': 0.0, 'Ordered': 0.0, 'CountedQuantity': 0.0, 'WasCounted': 'tNO', 'UserSignature': 50, 'Counted': 0.0, 'ExpenseClearingAct': None, 'PurchaseCreditAcc': None, 'EUPurchaseCreditAcc': None, 'ForeignPurchaseCreditAcc': None, 'SalesCreditAcc': None, 'SalesCreditEUAcc': None, 'ExemptedCredits': None, 'SalesCreditForeignAcc': None, 'ExpenseOffsettingAccount': None, 'WipAccount': None, 'ExchangeRateDifferencesAcct': None, 'GoodsClearingAcct': None, 'NegativeInventoryAdjustmentAccount': None, 'CostInflationOffsetAccount': None, 'GLDecreaseAcct': None, 'GLIncreaseAcct': None, 'PAReturnAcct': None, 'PurchaseAcct': None, 'PurchaseOffsetAcct': None, 'ShippedGoodsAccount': None, 'StockInflationOffsetAccount': None, 'StockInflationAdjustAccount': None, 'VATInRevenueAccount': None, 'WipVarianceAccount': None, 'CostInflationAccount': None, 'WHIncomingCenvatAccount': None, 'WHOutgoingCenvatAccount': None, 'StockInTransitAccount': None, 'WipOffsetProfitAndLossAccount': None, 'InventoryOffsetProfitAndLossAccount': None, 'DefaultBin': None, 'DefaultBinEnforced': 'tNO', 'PurchaseBalanceAccount': None, 'ItemCode': 'ACC-0000001', 'ItemCycleCounts': []}, {'MinimalStock': 0.0, 'MaximalStock': 0.0, 'MinimalOrder': 0.0, 'StandardAveragePrice': 0.0, 'Locked': 'tNO', 'InventoryAccount': None, 'CostAccount': None, 'TransferAccount': None, 'RevenuesAccount': None, 'VarienceAccount': None, 'DecreasingAccount': None, 'IncreasingAccount': None, 'ReturningAccount': None, 'ExpensesAccount': None, 'EURevenuesAccount': None, 'EUExpensesAccount': None, 'ForeignRevenueAcc': None, 'ForeignExpensAcc': None, 'ExemptIncomeAcc': None, 'PriceDifferenceAcc': None, 'WarehouseCode': 'ONL', 'InStock': 0.0, 'Committed': 0.0, 'Ordered': 0.0, 'CountedQuantity': 0.0, 'WasCounted': 'tNO', 'UserSignature': 50, 'Counted': 0.0, 'ExpenseClearingAct': None, 'PurchaseCreditAcc': None, 'EUPurchaseCreditAcc': None, 'ForeignPurchaseCreditAcc': None, 'SalesCreditAcc': None, 'SalesCreditEUAcc': None, 'ExemptedCredits': None, 'SalesCreditForeignAcc': None, 'ExpenseOffsettingAccount': None, 'WipAccount': None, 'ExchangeRateDifferencesAcct': None, 'GoodsClearingAcct': None, 'NegativeInventoryAdjustmentAccount': None, 'CostInflationOffsetAccount': None, 'GLDecreaseAcct': None, 'GLIncreaseAcct': None, 'PAReturnAcct': None, 'PurchaseAcct': None, 'PurchaseOffsetAcct': None, 'ShippedGoodsAccount': None, 'StockInflationOffsetAccount': None, 'StockInflationAdjustAccount': None, 'VATInRevenueAccount': None, 'WipVarianceAccount': None, 'CostInflationAccount': None, 'WHIncomingCenvatAccount': None, 'WHOutgoingCenvatAccount': None, 'StockInTransitAccount': None, 'WipOffsetProfitAndLossAccount': None, 'InventoryOffsetProfitAndLossAccount': None, 'DefaultBin': None, 'DefaultBinEnforced': 'tNO', 'PurchaseBalanceAccount': None, 'ItemCode': 'ACC-0000001', 'ItemCycleCounts': []}, {'MinimalStock': 0.0, 'MaximalStock': 0.0, 'MinimalOrder': 0.0, 'StandardAveragePrice': 0.0, 'Locked': 'tNO', 'InventoryAccount': None, 'CostAccount': None, 'TransferAccount': None, 'RevenuesAccount': None, 'VarienceAccount': None, 'DecreasingAccount': None, 'IncreasingAccount': None, 'ReturningAccount': None, 'ExpensesAccount': None, 'EURevenuesAccount': None, 'EUExpensesAccount': None, 'ForeignRevenueAcc': None, 'ForeignExpensAcc': None, 'ExemptIncomeAcc': None, 'PriceDifferenceAcc': None, 'WarehouseCode': 'PHO', 'InStock': 0.0, 'Committed': 0.0, 'Ordered': 0.0, 'CountedQuantity': 0.0, 'WasCounted': 'tNO', 'UserSignature': 50, 'Counted': 0.0, 'ExpenseClearingAct': None, 'PurchaseCreditAcc': None, 'EUPurchaseCreditAcc': None, 'ForeignPurchaseCreditAcc': None, 'SalesCreditAcc': None, 'SalesCreditEUAcc': None, 'ExemptedCredits': None, 'SalesCreditForeignAcc': None, 'ExpenseOffsettingAccount': None, 'WipAccount': None, 'ExchangeRateDifferencesAcct': None, 'GoodsClearingAcct': None, 'NegativeInventoryAdjustmentAccount': None, 'CostInflationOffsetAccount': None, 'GLDecreaseAcct': None, 'GLIncreaseAcct': None, 'PAReturnAcct': None, 'PurchaseAcct': None, 'PurchaseOffsetAcct': None, 'ShippedGoodsAccount': None, 'StockInflationOffsetAccount': None, 'StockInflationAdjustAccount': None, 'VATInRevenueAccount': None, 'WipVarianceAccount': None, 'CostInflationAccount': None, 'WHIncomingCenvatAccount': None, 'WHOutgoingCenvatAccount': None, 'StockInTransitAccount': None, 'WipOffsetProfitAndLossAccount': None, 'InventoryOffsetProfitAndLossAccount': None, 'DefaultBin': None, 'DefaultBinEnforced': 'tNO', 'PurchaseBalanceAccount': None, 'ItemCode': 'ACC-0000001', 'ItemCycleCounts': []}, {'MinimalStock': 0.0, 'MaximalStock': 0.0, 'MinimalOrder': 0.0, 'StandardAveragePrice': 0.0, 'Locked': 'tNO', 'InventoryAccount': None, 'CostAccount': None, 'TransferAccount': None, 'RevenuesAccount': None, 'VarienceAccount': None, 'DecreasingAccount': None, 'IncreasingAccount': None, 'ReturningAccount': None, 'ExpensesAccount': None, 'EURevenuesAccount': None, 'EUExpensesAccount': None, 'ForeignRevenueAcc': None, 'ForeignExpensAcc': None, 'ExemptIncomeAcc': None, 'PriceDifferenceAcc': None, 'WarehouseCode': 'PHO-EX', 'InStock': 0.0, 'Committed': 0.0, 'Ordered': 0.0, 'CountedQuantity': 0.0, 'WasCounted': 'tNO', 'UserSignature': 1, 'Counted': 0.0, 'ExpenseClearingAct': None, 'PurchaseCreditAcc': None, 'EUPurchaseCreditAcc': None, 'ForeignPurchaseCreditAcc': None, 'SalesCreditAcc': None, 'SalesCreditEUAcc': None, 'ExemptedCredits': None, 'SalesCreditForeignAcc': None, 'ExpenseOffsettingAccount': None, 'WipAccount': None, 'ExchangeRateDifferencesAcct': None, 'GoodsClearingAcct': None, 'NegativeInventoryAdjustmentAccount': None, 'CostInflationOffsetAccount': None, 'GLDecreaseAcct': None, 'GLIncreaseAcct': None, 'PAReturnAcct': None, 'PurchaseAcct': None, 'PurchaseOffsetAcct': None, 'ShippedGoodsAccount': None, 'StockInflationOffsetAccount': None, 'StockInflationAdjustAccount': None, 'VATInRevenueAccount': None, 'WipVarianceAccount': None, 'CostInflationAccount': None, 'WHIncomingCenvatAccount': None, 'WHOutgoingCenvatAccount': None, 'StockInTransitAccount': None, 'WipOffsetProfitAndLossAccount': None, 'InventoryOffsetProfitAndLossAccount': None, 'DefaultBin': None, 'DefaultBinEnforced': 'tNO', 'PurchaseBalanceAccount': None, 'ItemCode': 'ACC-0000001', 'ItemCycleCounts': []}, {'MinimalStock': 0.0, 'MaximalStock': 0.0, 'MinimalOrder': 0.0, 'StandardAveragePrice': 0.0, 'Locked': 'tNO', 'InventoryAccount': None, 'CostAccount': None, 'TransferAccount': None, 'RevenuesAccount': None, 'VarienceAccount': None, 'DecreasingAccount': None, 'IncreasingAccount': None, 'ReturningAccount': None, 'ExpensesAccount': None, 'EURevenuesAccount': None, 'EUExpensesAccount': None, 'ForeignRevenueAcc': None, 'ForeignExpensAcc': None, 'ExemptIncomeAcc': None, 'PriceDifferenceAcc': None, 'WarehouseCode': 'PHO-IN', 'InStock': 0.0, 'Committed': 0.0, 'Ordered': 0.0, 'CountedQuantity': 0.0, 'WasCounted': 'tNO', 'UserSignature': 1, 'Counted': 0.0, 'ExpenseClearingAct': None, 'PurchaseCreditAcc': None, 'EUPurchaseCreditAcc': None, 'ForeignPurchaseCreditAcc': None, 'SalesCreditAcc': None, 'SalesCreditEUAcc': None, 'ExemptedCredits': None, 'SalesCreditForeignAcc': None, 'ExpenseOffsettingAccount': None, 'WipAccount': None, 'ExchangeRateDifferencesAcct': None, 'GoodsClearingAcct': None, 'NegativeInventoryAdjustmentAccount': None, 'CostInflationOffsetAccount': None, 'GLDecreaseAcct': None, 'GLIncreaseAcct': None, 'PAReturnAcct': None, 'PurchaseAcct': None, 'PurchaseOffsetAcct': None, 'ShippedGoodsAccount': None, 'StockInflationOffsetAccount': None, 'StockInflationAdjustAccount': None, 'VATInRevenueAccount': None, 'WipVarianceAccount': None, 'CostInflationAccount': None, 'WHIncomingCenvatAccount': None, 'WHOutgoingCenvatAccount': None, 'StockInTransitAccount': None, 'WipOffsetProfitAndLossAccount': None, 'InventoryOffsetProfitAndLossAccount': None, 'DefaultBin': None, 'DefaultBinEnforced': 'tNO', 'PurchaseBalanceAccount': None, 'ItemCode': 'ACC-0000001', 'ItemCycleCounts': []}, {'MinimalStock': 0.0, 'MaximalStock': 0.0, 'MinimalOrder': 0.0, 'StandardAveragePrice': 0.0, 'Locked': 'tNO', 'InventoryAccount': None, 'CostAccount': None, 'TransferAccount': None, 'RevenuesAccount': None, 'VarienceAccount': None, 'DecreasingAccount': None, 'IncreasingAccount': None, 'ReturningAccount': None, 'ExpensesAccount': None, 'EURevenuesAccount': None, 'EUExpensesAccount': None, 'ForeignRevenueAcc': None, 'ForeignExpensAcc': None, 'ExemptIncomeAcc': None, 'PriceDifferenceAcc': None, 'WarehouseCode': 'RTW', 'InStock': 0.0, 'Committed': 0.0, 'Ordered': 0.0, 'CountedQuantity': 0.0, 'WasCounted': 'tNO', 'UserSignature': 50, 'Counted': 0.0, 'ExpenseClearingAct': None, 'PurchaseCreditAcc': None, 'EUPurchaseCreditAcc': None, 'ForeignPurchaseCreditAcc': None, 'SalesCreditAcc': None, 'SalesCreditEUAcc': None, 'ExemptedCredits': None, 'SalesCreditForeignAcc': None, 'ExpenseOffsettingAccount': None, 'WipAccount': None, 'ExchangeRateDifferencesAcct': None, 'GoodsClearingAcct': None, 'NegativeInventoryAdjustmentAccount': None, 'CostInflationOffsetAccount': None, 'GLDecreaseAcct': None, 'GLIncreaseAcct': None, 'PAReturnAcct': None, 'PurchaseAcct': None, 'PurchaseOffsetAcct': None, 'ShippedGoodsAccount': None, 'StockInflationOffsetAccount': None, 'StockInflationAdjustAccount': None, 'VATInRevenueAccount': None, 'WipVarianceAccount': None, 'CostInflationAccount': None, 'WHIncomingCenvatAccount': None, 'WHOutgoingCenvatAccount': None, 'StockInTransitAccount': None, 'WipOffsetProfitAndLossAccount': None, 'InventoryOffsetProfitAndLossAccount': None, 'DefaultBin': None, 'DefaultBinEnforced': 'tNO', 'PurchaseBalanceAccount': None, 'ItemCode': 'ACC-0000001', 'ItemCycleCounts': []}, {'MinimalStock': 0.0, 'MaximalStock': 0.0, 'MinimalOrder': 0.0, 'StandardAveragePrice': 0.0, 'Locked': 'tNO', 'InventoryAccount': None, 'CostAccount': None, 'TransferAccount': None, 'RevenuesAccount': None, 'VarienceAccount': None, 'DecreasingAccount': None, 'IncreasingAccount': None, 'ReturningAccount': None, 'ExpensesAccount': None, 'EURevenuesAccount': None, 'EUExpensesAccount': None, 'ForeignRevenueAcc': None, 'ForeignExpensAcc': None, 'ExemptIncomeAcc': None, 'PriceDifferenceAcc': None, 'WarehouseCode': 'RTWH', 'InStock': 0.0, 'Committed': 0.0, 'Ordered': 0.0, 'CountedQuantity': 0.0, 'WasCounted': 'tNO', 'UserSignature': 1, 'Counted': 0.0, 'ExpenseClearingAct': None, 'PurchaseCreditAcc': None, 'EUPurchaseCreditAcc': None, 'ForeignPurchaseCreditAcc': None, 'SalesCreditAcc': None, 'SalesCreditEUAcc': None, 'ExemptedCredits': None, 'SalesCreditForeignAcc': None, 'ExpenseOffsettingAccount': None, 'WipAccount': None, 'ExchangeRateDifferencesAcct': None, 'GoodsClearingAcct': None, 'NegativeInventoryAdjustmentAccount': None, 'CostInflationOffsetAccount': None, 'GLDecreaseAcct': None, 'GLIncreaseAcct': None, 'PAReturnAcct': None, 'PurchaseAcct': None, 'PurchaseOffsetAcct': None, 'ShippedGoodsAccount': None, 'StockInflationOffsetAccount': None, 'StockInflationAdjustAccount': None, 'VATInRevenueAccount': None, 'WipVarianceAccount': None, 'CostInflationAccount': None, 'WHIncomingCenvatAccount': None, 'WHOutgoingCenvatAccount': None, 'StockInTransitAccount': None, 'WipOffsetProfitAndLossAccount': None, 'InventoryOffsetProfitAndLossAccount': None, 'DefaultBin': None, 'DefaultBinEnforced': 'tNO', 'PurchaseBalanceAccount': None, 'ItemCode': 'ACC-0000001', 'ItemCycleCounts': []}, {'MinimalStock': 0.0, 'MaximalStock': 0.0, 'MinimalOrder': 0.0, 'StandardAveragePrice': 0.0, 'Locked': 'tNO', 'InventoryAccount': None, 'CostAccount': None, 'TransferAccount': None, 'RevenuesAccount': None, 'VarienceAccount': None, 'DecreasingAccount': None, 'IncreasingAccount': None, 'ReturningAccount': None, 'ExpensesAccount': None, 'EURevenuesAccount': None, 'EUExpensesAccount': None, 'ForeignRevenueAcc': None, 'ForeignExpensAcc': None, 'ExemptIncomeAcc': None, 'PriceDifferenceAcc': None, 'WarehouseCode': 'SW', 'InStock': 0.0, 'Committed': 0.0, 'Ordered': 0.0, 'CountedQuantity': 0.0, 'WasCounted': 'tNO', 'UserSignature': 50, 'Counted': 0.0, 'ExpenseClearingAct': None, 'PurchaseCreditAcc': None, 'EUPurchaseCreditAcc': None, 'ForeignPurchaseCreditAcc': None, 'SalesCreditAcc': None, 'SalesCreditEUAcc': None, 'ExemptedCredits': None, 'SalesCreditForeignAcc': None, 'ExpenseOffsettingAccount': None, 'WipAccount': None, 'ExchangeRateDifferencesAcct': None, 'GoodsClearingAcct': None, 'NegativeInventoryAdjustmentAccount': None, 'CostInflationOffsetAccount': None, 'GLDecreaseAcct': None, 'GLIncreaseAcct': None, 'PAReturnAcct': None, 'PurchaseAcct': None, 'PurchaseOffsetAcct': None, 'ShippedGoodsAccount': None, 'StockInflationOffsetAccount': None, 'StockInflationAdjustAccount': None, 'VATInRevenueAccount': None, 'WipVarianceAccount': None, 'CostInflationAccount': None, 'WHIncomingCenvatAccount': None, 'WHOutgoingCenvatAccount': None, 'StockInTransitAccount': None, 'WipOffsetProfitAndLossAccount': None, 'InventoryOffsetProfitAndLossAccount': None, 'DefaultBin': None, 'DefaultBinEnforced': 'tNO', 'PurchaseBalanceAccount': None, 'ItemCode': 'ACC-0000001', 'ItemCycleCounts': []}, {'MinimalStock': 0.0, 'MaximalStock': 0.0, 'MinimalOrder': 0.0, 'StandardAveragePrice': 0.0, 'Locked': 'tNO', 'InventoryAccount': None, 'CostAccount': None, 'TransferAccount': None, 'RevenuesAccount': None, 'VarienceAccount': None, 'DecreasingAccount': None, 'IncreasingAccount': None, 'ReturningAccount': None, 'ExpensesAccount': None, 'EURevenuesAccount': None, 'EUExpensesAccount': None, 'ForeignRevenueAcc': None, 'ForeignExpensAcc': None, 'ExemptIncomeAcc': None, 'PriceDifferenceAcc': None, 'WarehouseCode': 'WLS', 'InStock': 0.0, 'Committed': 0.0, 'Ordered': 0.0, 'CountedQuantity': 0.0, 'WasCounted': 'tNO', 'UserSignature': 50, 'Counted': 0.0, 'ExpenseClearingAct': None, 'PurchaseCreditAcc': None, 'EUPurchaseCreditAcc': None, 'ForeignPurchaseCreditAcc': None, 'SalesCreditAcc': None, 'SalesCreditEUAcc': None, 'ExemptedCredits': None, 'SalesCreditForeignAcc': None, 'ExpenseOffsettingAccount': None, 'WipAccount': None, 'ExchangeRateDifferencesAcct': None, 'GoodsClearingAcct': None, 'NegativeInventoryAdjustmentAccount': None, 'CostInflationOffsetAccount': None, 'GLDecreaseAcct': None, 'GLIncreaseAcct': None, 'PAReturnAcct': None, 'PurchaseAcct': None, 'PurchaseOffsetAcct': None, 'ShippedGoodsAccount': None, 'StockInflationOffsetAccount': None, 'StockInflationAdjustAccount': None, 'VATInRevenueAccount': None, 'WipVarianceAccount': None, 'CostInflationAccount': None, 'WHIncomingCenvatAccount': None, 'WHOutgoingCenvatAccount': None, 'StockInTransitAccount': None, 'WipOffsetProfitAndLossAccount': None, 'InventoryOffsetProfitAndLossAccount': None, 'DefaultBin': None, 'DefaultBinEnforced': 'tNO', 'PurchaseBalanceAccount': None, 'ItemCode': 'ACC-0000001', 'ItemCycleCounts': []}, {'MinimalStock': 0.0, 'MaximalStock': 0.0, 'MinimalOrder': 0.0, 'StandardAveragePrice': 0.0, 'Locked': 'tNO', 'InventoryAccount': None, 'CostAccount': None, 'TransferAccount': None, 'RevenuesAccount': None, 'VarienceAccount': None, 'DecreasingAccount': None, 'IncreasingAccount': None, 'ReturningAccount': None, 'ExpensesAccount': None, 'EURevenuesAccount': None, 'EUExpensesAccount': None, 'ForeignRevenueAcc': None, 'ForeignExpensAcc': None, 'ExemptIncomeAcc': None, 'PriceDifferenceAcc': None, 'WarehouseCode': 'WW', 'InStock': 0.0, 'Committed': 0.0, 'Ordered': 0.0, 'CountedQuantity': 0.0, 'WasCounted': 'tNO', 'UserSignature': 50, 'Counted': 0.0, 'ExpenseClearingAct': None, 'PurchaseCreditAcc': None, 'EUPurchaseCreditAcc': None, 'ForeignPurchaseCreditAcc': None, 'SalesCreditAcc': None, 'SalesCreditEUAcc': None, 'ExemptedCredits': None, 'SalesCreditForeignAcc': None, 'ExpenseOffsettingAccount': None, 'WipAccount': None, 'ExchangeRateDifferencesAcct': None, 'GoodsClearingAcct': None, 'NegativeInventoryAdjustmentAccount': None, 'CostInflationOffsetAccount': None, 'GLDecreaseAcct': None, 'GLIncreaseAcct': None, 'PAReturnAcct': None, 'PurchaseAcct': None, 'PurchaseOffsetAcct': None, 'ShippedGoodsAccount': None, 'StockInflationOffsetAccount': None, 'StockInflationAdjustAccount': None, 'VATInRevenueAccount': None, 'WipVarianceAccount': None, 'CostInflationAccount': None, 'WHIncomingCenvatAccount': None, 'WHOutgoingCenvatAccount': None, 'StockInTransitAccount': None, 'WipOffsetProfitAndLossAccount': None, 'InventoryOffsetProfitAndLossAccount': None, 'DefaultBin': None, 'DefaultBinEnforced': 'tNO', 'PurchaseBalanceAccount': None, 'ItemCode': 'ACC-0000001', 'ItemCycleCounts': []}, {'MinimalStock': 0.0, 'MaximalStock': 0.0, 'MinimalOrder': 0.0, 'StandardAveragePrice': 0.0, 'Locked': 'tNO', 'InventoryAccount': None, 'CostAccount': None, 'TransferAccount': None, 'RevenuesAccount': None, 'VarienceAccount': None, 'DecreasingAccount': None, 'IncreasingAccount': None, 'ReturningAccount': None, 'ExpensesAccount': None, 'EURevenuesAccount': None, 'EUExpensesAccount': None, 'ForeignRevenueAcc': None, 'ForeignExpensAcc': None, 'ExemptIncomeAcc': None, 'PriceDifferenceAcc': None, 'WarehouseCode': 'WW-CON', 'InStock': 0.0, 'Committed': 0.0, 'Ordered': 0.0, 'CountedQuantity': 0.0, 'WasCounted': 'tNO', 'UserSignature': 50, 'Counted': 0.0, 'ExpenseClearingAct': None, 'PurchaseCreditAcc': None, 'EUPurchaseCreditAcc': None, 'ForeignPurchaseCreditAcc': None, 'SalesCreditAcc': None, 'SalesCreditEUAcc': None, 'ExemptedCredits': None, 'SalesCreditForeignAcc': None, 'ExpenseOffsettingAccount': None, 'WipAccount': None, 'ExchangeRateDifferencesAcct': None, 'GoodsClearingAcct': None, 'NegativeInventoryAdjustmentAccount': None, 'CostInflationOffsetAccount': None, 'GLDecreaseAcct': None, 'GLIncreaseAcct': None, 'PAReturnAcct': None, 'PurchaseAcct': None, 'PurchaseOffsetAcct': None, 'ShippedGoodsAccount': None, 'StockInflationOffsetAccount': None, 'StockInflationAdjustAccount': None, 'VATInRevenueAccount': None, 'WipVarianceAccount': None, 'CostInflationAccount': None, 'WHIncomingCenvatAccount': None, 'WHOutgoingCenvatAccount': None, 'StockInTransitAccount': None, 'WipOffsetProfitAndLossAccount': None, 'InventoryOffsetProfitAndLossAccount': None, 'DefaultBin': None, 'DefaultBinEnforced': 'tNO', 'PurchaseBalanceAccount': None, 'ItemCode': 'ACC-0000001', 'ItemCycleCounts': []}, {'MinimalStock': 0.0, 'MaximalStock': 0.0, 'MinimalOrder': 0.0, 'StandardAveragePrice': 0.0, 'Locked': 'tNO', 'InventoryAccount': None, 'CostAccount': None, 'TransferAccount': None, 'RevenuesAccount': None, 'VarienceAccount': None, 'DecreasingAccount': None, 'IncreasingAccount': None, 'ReturningAccount': None, 'ExpensesAccount': None, 'EURevenuesAccount': None, 'EUExpensesAccount': None, 'ForeignRevenueAcc': None, 'ForeignExpensAcc': None, 'ExemptIncomeAcc': None, 'PriceDifferenceAcc': None, 'WarehouseCode': 'WW-DAM', 'InStock': 0.0, 'Committed': 0.0, 'Ordered': 0.0, 'CountedQuantity': 0.0, 'WasCounted': 'tNO', 'UserSignature': 50, 'Counted': 0.0, 'ExpenseClearingAct': None, 'PurchaseCreditAcc': None, 'EUPurchaseCreditAcc': None, 'ForeignPurchaseCreditAcc': None, 'SalesCreditAcc': None, 'SalesCreditEUAcc': None, 'ExemptedCredits': None, 'SalesCreditForeignAcc': None, 'ExpenseOffsettingAccount': None, 'WipAccount': None, 'ExchangeRateDifferencesAcct': None, 'GoodsClearingAcct': None, 'NegativeInventoryAdjustmentAccount': None, 'CostInflationOffsetAccount': None, 'GLDecreaseAcct': None, 'GLIncreaseAcct': None, 'PAReturnAcct': None, 'PurchaseAcct': None, 'PurchaseOffsetAcct': None, 'ShippedGoodsAccount': None, 'StockInflationOffsetAccount': None, 'StockInflationAdjustAccount': None, 'VATInRevenueAccount': None, 'WipVarianceAccount': None, 'CostInflationAccount': None, 'WHIncomingCenvatAccount': None, 'WHOutgoingCenvatAccount': None, 'StockInTransitAccount': None, 'WipOffsetProfitAndLossAccount': None, 'InventoryOffsetProfitAndLossAccount': None, 'DefaultBin': None, 'DefaultBinEnforced': 'tNO', 'PurchaseBalanceAccount': None, 'ItemCode': 'ACC-0000001', 'ItemCycleCounts': []}, {'MinimalStock': 0.0, 'MaximalStock': 0.0, 'MinimalOrder': 0.0, 'StandardAveragePrice': 0.0, 'Locked': 'tNO', 'InventoryAccount': None, 'CostAccount': None, 'TransferAccount': None, 'RevenuesAccount': None, 'VarienceAccount': None, 'DecreasingAccount': None, 'IncreasingAccount': None, 'ReturningAccount': None, 'ExpensesAccount': None, 'EURevenuesAccount': None, 'EUExpensesAccount': None, 'ForeignRevenueAcc': None, 'ForeignExpensAcc': None, 'ExemptIncomeAcc': None, 'PriceDifferenceAcc': None, 'WarehouseCode': 'WW-REP', 'InStock': 0.0, 'Committed': 0.0, 'Ordered': 0.0, 'CountedQuantity': 0.0, 'WasCounted': 'tNO', 'UserSignature': 50, 'Counted': 0.0, 'ExpenseClearingAct': None, 'PurchaseCreditAcc': None, 'EUPurchaseCreditAcc': None, 'ForeignPurchaseCreditAcc': None, 'SalesCreditAcc': None, 'SalesCreditEUAcc': None, 'ExemptedCredits': None, 'SalesCreditForeignAcc': None, 'ExpenseOffsettingAccount': None, 'WipAccount': None, 'ExchangeRateDifferencesAcct': None, 'GoodsClearingAcct': None, 'NegativeInventoryAdjustmentAccount': None, 'CostInflationOffsetAccount': None, 'GLDecreaseAcct': None, 'GLIncreaseAcct': None, 'PAReturnAcct': None, 'PurchaseAcct': None, 'PurchaseOffsetAcct': None, 'ShippedGoodsAccount': None, 'StockInflationOffsetAccount': None, 'StockInflationAdjustAccount': None, 'VATInRevenueAccount': None, 'WipVarianceAccount': None, 'CostInflationAccount': None, 'WHIncomingCenvatAccount': None, 'WHOutgoingCenvatAccount': None, 'StockInTransitAccount': None, 'WipOffsetProfitAndLossAccount': None, 'InventoryOffsetProfitAndLossAccount': None, 'DefaultBin': None, 'DefaultBinEnforced': 'tNO', 'PurchaseBalanceAccount': None, 'ItemCode': 'ACC-0000001', 'ItemCycleCounts': []}, {'MinimalStock': 0.0, 'MaximalStock': 0.0, 'MinimalOrder': 0.0, 'StandardAveragePrice': 0.0, 'Locked': 'tNO', 'InventoryAccount': None, 'CostAccount': None, 'TransferAccount': None, 'RevenuesAccount': None, 'VarienceAccount': None, 'DecreasingAccount': None, 'IncreasingAccount': None, 'ReturningAccount': None, 'ExpensesAccount': None, 'EURevenuesAccount': None, 'EUExpensesAccount': None, 'ForeignRevenueAcc': None, 'ForeignExpensAcc': None, 'ExemptIncomeAcc': None, 'PriceDifferenceAcc': None, 'WarehouseCode': 'WW-SAM', 'InStock': 0.0, 'Committed': 0.0, 'Ordered': 0.0, 'CountedQuantity': 0.0, 'WasCounted': 'tNO', 'UserSignature': 50, 'Counted': 0.0, 'ExpenseClearingAct': None, 'PurchaseCreditAcc': None, 'EUPurchaseCreditAcc': None, 'ForeignPurchaseCreditAcc': None, 'SalesCreditAcc': None, 'SalesCreditEUAcc': None, 'ExemptedCredits': None, 'SalesCreditForeignAcc': None, 'ExpenseOffsettingAccount': None, 'WipAccount': None, 'ExchangeRateDifferencesAcct': None, 'GoodsClearingAcct': None, 'NegativeInventoryAdjustmentAccount': None, 'CostInflationOffsetAccount': None, 'GLDecreaseAcct': None, 'GLIncreaseAcct': None, 'PAReturnAcct': None, 'PurchaseAcct': None, 'PurchaseOffsetAcct': None, 'ShippedGoodsAccount': None, 'StockInflationOffsetAccount': None, 'StockInflationAdjustAccount': None, 'VATInRevenueAccount': None, 'WipVarianceAccount': None, 'CostInflationAccount': None, 'WHIncomingCenvatAccount': None, 'WHOutgoingCenvatAccount': None, 'StockInTransitAccount': None, 'WipOffsetProfitAndLossAccount': None, 'InventoryOffsetProfitAndLossAccount': None, 'DefaultBin': None, 'DefaultBinEnforced': 'tNO', 'PurchaseBalanceAccount': None, 'ItemCode': 'ACC-0000001', 'ItemCycleCounts': []}, {'MinimalStock': 0.0, 'MaximalStock': 0.0, 'MinimalOrder': 0.0, 'StandardAveragePrice': 0.0, 'Locked': 'tNO', 'InventoryAccount': None, 'CostAccount': None, 'TransferAccount': None, 'RevenuesAccount': None, 'VarienceAccount': None, 'DecreasingAccount': None, 'IncreasingAccount': None, 'ReturningAccount': None, 'ExpensesAccount': None, 'EURevenuesAccount': None, 'EUExpensesAccount': None, 'ForeignRevenueAcc': None, 'ForeignExpensAcc': None, 'ExemptIncomeAcc': None, 'PriceDifferenceAcc': None, 'WarehouseCode': 'WW-WIP', 'InStock': 0.0, 'Committed': 0.0, 'Ordered': 0.0, 'CountedQuantity': 0.0, 'WasCounted': 'tNO', 'UserSignature': 50, 'Counted': 0.0, 'ExpenseClearingAct': None, 'PurchaseCreditAcc': None, 'EUPurchaseCreditAcc': None, 'ForeignPurchaseCreditAcc': None, 'SalesCreditAcc': None, 'SalesCreditEUAcc': None, 'ExemptedCredits': None, 'SalesCreditForeignAcc': None, 'ExpenseOffsettingAccount': None, 'WipAccount': None, 'ExchangeRateDifferencesAcct': None, 'GoodsClearingAcct': None, 'NegativeInventoryAdjustmentAccount': None, 'CostInflationOffsetAccount': None, 'GLDecreaseAcct': None, 'GLIncreaseAcct': None, 'PAReturnAcct': None, 'PurchaseAcct': None, 'PurchaseOffsetAcct': None, 'ShippedGoodsAccount': None, 'StockInflationOffsetAccount': None, 'StockInflationAdjustAccount': None, 'VATInRevenueAccount': None, 'WipVarianceAccount': None, 'CostInflationAccount': None, 'WHIncomingCenvatAccount': None, 'WHOutgoingCenvatAccount': None, 'StockInTransitAccount': None, 'WipOffsetProfitAndLossAccount': None, 'InventoryOffsetProfitAndLossAccount': None, 'DefaultBin': None, 'DefaultBinEnforced': 'tNO', 'PurchaseBalanceAccount': None, 'ItemCode': 'ACC-0000001', 'ItemCycleCounts': []}, {'MinimalStock': 0.0, 'MaximalStock': 0.0, 'MinimalOrder': 0.0, 'StandardAveragePrice': 0.0, 'Locked': 'tNO', 'InventoryAccount': None, 'CostAccount': None, 'TransferAccount': None, 'RevenuesAccount': None, 'VarienceAccount': None, 'DecreasingAccount': None, 'IncreasingAccount': None, 'ReturningAccount': None, 'ExpensesAccount': None, 'EURevenuesAccount': None, 'EUExpensesAccount': None, 'ForeignRevenueAcc': None, 'ForeignExpensAcc': None, 'ExemptIncomeAcc': None, 'PriceDifferenceAcc': None, 'WarehouseCode': 'ZW', 'InStock': 0.0, 'Committed': 0.0, 'Ordered': 0.0, 'CountedQuantity': 0.0, 'WasCounted': 'tNO', 'UserSignature': 50, 'Counted': 0.0, 'ExpenseClearingAct': None, 'PurchaseCreditAcc': None, 'EUPurchaseCreditAcc': None, 'ForeignPurchaseCreditAcc': None, 'SalesCreditAcc': None, 'SalesCreditEUAcc': None, 'ExemptedCredits': None, 'SalesCreditForeignAcc': None, 'ExpenseOffsettingAccount': None, 'WipAccount': None, 'ExchangeRateDifferencesAcct': None, 'GoodsClearingAcct': None, 'NegativeInventoryAdjustmentAccount': None, 'CostInflationOffsetAccount': None, 'GLDecreaseAcct': None, 'GLIncreaseAcct': None, 'PAReturnAcct': None, 'PurchaseAcct': None, 'PurchaseOffsetAcct': None, 'ShippedGoodsAccount': None, 'StockInflationOffsetAccount': None, 'StockInflationAdjustAccount': None, 'VATInRevenueAccount': None, 'WipVarianceAccount': None, 'CostInflationAccount': None, 'WHIncomingCenvatAccount': None, 'WHOutgoingCenvatAccount': None, 'StockInTransitAccount': None, 'WipOffsetProfitAndLossAccount': None, 'InventoryOffsetProfitAndLossAccount': None, 'DefaultBin': None, 'DefaultBinEnforced': 'tNO', 'PurchaseBalanceAccount': None, 'ItemCode': 'ACC-0000001', 'ItemCycleCounts': []}], 'ItemPreferredVendors': [], 'ItemLocalizationInfos': [], 'ItemProjects': [], 'ItemDistributionRules': [], 'ItemAttributeGroups': [], 'ItemDepreciationParameters': [], 'ItemPeriodControls': [], 'ItemUnitOfMeasurementCollection': [{'UoMType': 'iutInventory', 'UoMEntry': 1, 'DefaultBarcode': None, 'DefaultPackage': None, 'Length1': 0.0, 'Length1Unit': None, 'Length2': 0.0, 'Length2Unit': None, 'Width1': 0.0, 'Width1Unit': None, 'Width2': 0.0, 'Width2Unit': None, 'Height1': 0.0, 'Height1Unit': None, 'Height2': 0.0, 'Height2Unit': None, 'Volume': 0.0, 'VolumeUnit': None, 'Weight1': 0.0, 'Weight1Unit': None, 'Weight2': 0.0, 'Weight2Unit': None, 'ItemUoMPackageCollection': []}, {'UoMType': 'iutPurchasing', 'UoMEntry': 1, 'DefaultBarcode': None, 'DefaultPackage': None, 'Length1': 0.0, 'Length1Unit': None, 'Length2': 0.0, 'Length2Unit': None, 'Width1': 0.0, 'Width1Unit': None, 'Width2': 0.0, 'Width2Unit': None, 'Height1': 0.0, 'Height1Unit': None, 'Height2': 0.0, 'Height2Unit': None, 'Volume': 0.0, 'VolumeUnit': 2, 'Weight1': 0.0, 'Weight1Unit': None, 'Weight2': 0.0, 'Weight2Unit': None, 'ItemUoMPackageCollection': []}, {'UoMType': 'iutPurchasing', 'UoMEntry': 8, 'DefaultBarcode': None, 'DefaultPackage': None, 'Length1': 0.0, 'Length1Unit': None, 'Length2': 0.0, 'Length2Unit': None, 'Width1': 0.0, 'Width1Unit': None, 'Width2': 0.0, 'Width2Unit': None, 'Height1': 0.0, 'Height1Unit': None, 'Height2': 0.0, 'Height2Unit': None, 'Volume': 0.0, 'VolumeUnit': 4, 'Weight1': 0.0, 'Weight1Unit': None, 'Weight2': 0.0, 'Weight2Unit': None, 'ItemUoMPackageCollection': []}, {'UoMType': 'iutSales', 'UoMEntry': 1, 'DefaultBarcode': None, 'DefaultPackage': None, 'Length1': 0.0, 'Length1Unit': None, 'Length2': 0.0, 'Length2Unit': None, 'Width1': 0.0, 'Width1Unit': None, 'Width2': 0.0, 'Width2Unit': None, 'Height1': 0.0, 'Height1Unit': None, 'Height2': 0.0, 'Height2Unit': None, 'Volume': 0.0, 'VolumeUnit': 2, 'Weight1': 0.0, 'Weight1Unit': None, 'Weight2': 0.0, 'Weight2Unit': None, 'ItemUoMPackageCollection': []}, {'UoMType': 'iutSales', 'UoMEntry': 8, 'DefaultBarcode': None, 'DefaultPackage': None, 'Length1': 0.0, 'Length1Unit': None, 'Length2': 0.0, 'Length2Unit': None, 'Width1': 0.0, 'Width1Unit': None, 'Width2': 0.0, 'Width2Unit': None, 'Height1': 0.0, 'Height1Unit': None, 'Height2': 0.0, 'Height2Unit': None, 'Volume': 0.0, 'VolumeUnit': 4, 'Weight1': 0.0, 'Weight1Unit': None, 'Weight2': 0.0, 'Weight2Unit': None, 'ItemUoMPackageCollection': []}], 'ItemBarCodeCollection': [], 'ItemIntrastatExtension': {'ItemCode': 'ACC-0000001', 'CommodityCode': None, 'SupplementaryUnit': None, 'FactorOfSupplementaryUnit': 0.0, 'ImportRegionState': 0, 'ExportRegionState': 0, 'ImportNatureOfTransaction': None, 'ExportNatureOfTransaction': None, 'ImportStatisticalProcedure': None, 'ExportStatisticalProcedure': None, 'CountryOfOrigin': None, 'ServiceCode': None, 'Type': 'dDocument_Items', 'ServiceSupplyMethod': 'ssmImmediate', 'ServicePaymentMethod': 'spmOther', 'ImportRegionCountry': 'GB', 'ExportRegionCountry': 'GB', 'UseWeightInCalculation': 'tYES', 'IntrastatRelevant': 'tNO', 'StatisticalCode': None}}, {'ItemCode': 'ACC-0000002', 'ItemName': 'Square With 2 Slits 10*10cm', 'ForeignName': None, 'ItemsGroupCode': 110, 'CustomsGroupCode': -1, 'SalesVATGroup': 'X0', 'BarCode': None, 'VatLiable': 'tYES', 'PurchaseItem': 'tYES', 'SalesItem': 'tNO', 'InventoryItem': 'tYES', 'IncomeAccount': None, 'ExemptIncomeAccount': None, 'ExpanseAccount': None, 'Mainsupplier': None, 'SupplierCatalogNo': None, 'DesiredInventory': 0.0, 'MinInventory': 0.0, 'Picture': None, 'User_Text': None, 'SerialNum': None, 'CommissionPercent': 0.0, 'CommissionSum': 0.0, 'CommissionGroup': 0, 'TreeType': 'iNotATree', 'AssetItem': 'tNO', 'DataExportCode': None, 'Manufacturer': -1, 'QuantityOnStock': 10.0, 'QuantityOrderedFromVendors': 0.0, 'QuantityOrderedByCustomers': 0.0, 'ManageSerialNumbers': 'tNO', 'ManageBatchNumbers': 'tNO', 'Valid': 'tYES', 'ValidFrom': None, 'ValidTo': None, 'ValidRemarks': None, 'Frozen': 'tNO', 'FrozenFrom': None, 'FrozenTo': None, 'FrozenRemarks': None, 'SalesUnit': None, 'SalesItemsPerUnit': 1.0, 'SalesPackagingUnit': None, 'SalesQtyPerPackUnit': 1.0, 'SalesUnitLength': None, 'SalesLengthUnit': None, 'SalesUnitWidth': None, 'SalesWidthUnit': None, 'SalesUnitHeight': None, 'SalesHeightUnit': None, 'SalesUnitVolume': 0.0, 'SalesVolumeUnit': 4, 'SalesUnitWeight': None, 'SalesWeightUnit': None, 'PurchaseUnit': None, 'PurchaseItemsPerUnit': 1.0, 'PurchasePackagingUnit': None, 'PurchaseQtyPerPackUnit': 1.0, 'PurchaseUnitLength': None, 'PurchaseLengthUnit': None, 'PurchaseUnitWidth': None, 'PurchaseWidthUnit': None, 'PurchaseUnitHeight': None, 'PurchaseHeightUnit': None, 'PurchaseUnitVolume': 0.0, 'PurchaseVolumeUnit': 4, 'PurchaseUnitWeight': None, 'PurchaseWeightUnit': None, 'PurchaseVATGroup': 'X1', 'SalesFactor1': 1.0, 'SalesFactor2': 1.0, 'SalesFactor3': 1.0, 'SalesFactor4': 1.0, 'PurchaseFactor1': 1.0, 'PurchaseFactor2': 1.0, 'PurchaseFactor3': 1.0, 'PurchaseFactor4': 1.0, 'MovingAveragePrice': 0.0, 'ForeignRevenuesAccount': None, 'ECRevenuesAccount': None, 'ForeignExpensesAccount': None, 'ECExpensesAccount': None, 'AvgStdPrice': 0.0, 'DefaultWarehouse': None, 'ShipType': None, 'GLMethod': 'glm_ItemClass', 'TaxType': 'tt_Yes', 'MaxInventory': 0.0, 'ManageStockByWarehouse': 'tNO', 'PurchaseHeightUnit1': None, 'PurchaseUnitHeight1': None, 'PurchaseLengthUnit1': None, 'PurchaseUnitLength1': None, 'PurchaseWeightUnit1': None, 'PurchaseUnitWeight1': None, 'PurchaseWidthUnit1': None, 'PurchaseUnitWidth1': None, 'SalesHeightUnit1': None, 'SalesUnitHeight1': None, 'SalesLengthUnit1': None, 'SalesUnitLength1': None, 'SalesWeightUnit1': None, 'SalesUnitWeight1': None, 'SalesWidthUnit1': None, 'SalesUnitWidth1': None, 'ForceSelectionOfSerialNumber': 'tYES', 'ManageSerialNumbersOnReleaseOnly': 'tNO', 'WTLiable': 'tNO', 'CostAccountingMethod': 'bis_MovingAverage', 'SWW': None, 'WarrantyTemplate': '', 'IndirectTax': 'tNO', 'ArTaxCode': None, 'ApTaxCode': None, 'BaseUnitName': None, 'ItemCountryOrg': None, 'IssueMethod': 'im_Backflush', 'SRIAndBatchManageMethod': 'bomm_OnEveryTransaction', 'IsPhantom': 'tNO', 'InventoryUOM': 'Piece', 'PlanningSystem': 'bop_None', 'ProcurementMethod': 'bom_Buy', 'ComponentWarehouse': 'bomcw_BOM', 'OrderIntervals': None, 'OrderMultiple': 0.0, 'LeadTime': None, 'MinOrderQuantity': 0.0, 'ItemType': 'itItems', 'ItemClass': 'itcMaterial', 'OutgoingServiceCode': -1, 'IncomingServiceCode': -1, 'ServiceGroup': -1, 'NCMCode': -1, 'MaterialType': 'mt_FinishedGoods', 'MaterialGroup': -1, 'ProductSource': '', 'Properties1': 'tNO', 'Properties2': 'tNO', 'Properties3': 'tNO', 'Properties4': 'tNO', 'Properties5': 'tNO', 'Properties6': 'tNO', 'Properties7': 'tNO', 'Properties8': 'tNO', 'Properties9': 'tNO', 'Properties10': 'tNO', 'Properties11': 'tNO', 'Properties12': 'tNO', 'Properties13': 'tNO', 'Properties14': 'tNO', 'Properties15': 'tNO', 'Properties16': 'tNO', 'Properties17': 'tNO', 'Properties18': 'tNO', 'Properties19': 'tNO', 'Properties20': 'tNO', 'Properties21': 'tNO', 'Properties22': 'tNO', 'Properties23': 'tNO', 'Properties24': 'tNO', 'Properties25': 'tNO', 'Properties26': 'tNO', 'Properties27': 'tNO', 'Properties28': 'tNO', 'Properties29': 'tNO', 'Properties30': 'tNO', 'Properties31': 'tNO', 'Properties32': 'tNO', 'Properties33': 'tNO', 'Properties34': 'tNO', 'Properties35': 'tNO', 'Properties36': 'tNO', 'Properties37': 'tNO', 'Properties38': 'tNO', 'Properties39': 'tNO', 'Properties40': 'tNO', 'Properties41': 'tNO', 'Properties42': 'tNO', 'Properties43': 'tNO', 'Properties44': 'tNO', 'Properties45': 'tNO', 'Properties46': 'tNO', 'Properties47': 'tNO', 'Properties48': 'tNO', 'Properties49': 'tNO', 'Properties50': 'tNO', 'Properties51': 'tNO', 'Properties52': 'tNO', 'Properties53': 'tNO', 'Properties54': 'tNO', 'Properties55': 'tNO', 'Properties56': 'tNO', 'Properties57': 'tNO', 'Properties58': 'tNO', 'Properties59': 'tNO', 'Properties60': 'tNO', 'Properties61': 'tNO', 'Properties62': 'tNO', 'Properties63': 'tNO', 'Properties64': 'tNO', 'AutoCreateSerialNumbersOnRelease': 'tNO', 'DNFEntry': -1, 'GTSItemSpec': None, 'GTSItemTaxCategory': None, 'FuelID': None, 'BeverageTableCode': '', 'BeverageGroupCode': '', 'BeverageCommercialBrandCode': None, 'Series': 119, 'ToleranceDays': None, 'TypeOfAdvancedRules': 'toarGeneral', 'IssuePrimarilyBy': 'ipbBinLocations', 'NoDiscounts': 'tNO', 'AssetClass': '', 'AssetGroup': '', 'InventoryNumber': '', 'Technician': None, 'Employee': None, 'Location': None, 'AssetStatus': 'New', 'CapitalizationDate': None, 'StatisticalAsset': 'tNO', 'Cession': 'tNO', 'DeactivateAfterUsefulLife': 'tNO', 'ManageByQuantity': 'tNO', 'UoMGroupEntry': 1, 'InventoryUoMEntry': 1, 'DefaultSalesUoMEntry': None, 'DefaultPurchasingUoMEntry': None, 'DepreciationGroup': None, 'AssetSerialNumber': '', 'InventoryWeight': None, 'InventoryWeightUnit': None, 'InventoryWeight1': None, 'InventoryWeightUnit1': None, 'DefaultCountingUnit': 'Piece', 'CountingItemsPerUnit': 1.0, 'DefaultCountingUoMEntry': 1, 'Excisable': 'tNO', 'ChapterID': -1, 'ScsCode': None, 'SpProdType': None, 'ProdStdCost': 0.0, 'InCostRollup': 'tYES', 'VirtualAssetItem': 'tNO', 'EnforceAssetSerialNumbers': 'tNO', 'AttachmentEntry': None, 'LinkedResource': None, 'UpdateDate': '2025-01-27', 'UpdateTime': '11:24:02', 'GSTRelevnt': 'tNO', 'SACEntry': -1, 'GSTTaxCategory': 'gtc_Regular', 'ServiceCategoryEntry': -1, 'CapitalGoodsOnHoldPercent': 0.0, 'CapitalGoodsOnHoldLimit': 0.0, 'AssessableValue': 0.0, 'AssVal4WTR': 0.0, 'SOIExcisable': 'se_NotExcisable', 'TNVED': None, 'ImportedItem': 'tNO', 'PricingUnit': 1, 'CreateDate': '2025-01-26', 'CreateTime': '09:34:00', 'U_MfgH': None, 'U_Collection': None, 'U_OldCode': None, 'U_ItemsCat': None, 'U_NumberofSet': None, 'U_NileCode': None, 'U_TransferProductionLinkExclude': None, 'U_SBO_CodeType': 'GS1', 'U_SBO_EGSCode': None, 'U_ShopifyColor': None, 'U_SalesChannel': None, 'U_ShopifyItemIDLocal': None, 'U_ShopifyItemIDInternational': None, 'U_ParentCommercialName': None, 'ItemPrices': [{'PriceList': 1, 'Price': 0.0, 'Currency': None, 'AdditionalPrice1': 0.0, 'AdditionalCurrency1': None, 'AdditionalPrice2': 0.0, 'AdditionalCurrency2': None, 'BasePriceList': 1, 'Factor': 1.0, 'UoMPrices': []}, {'PriceList': 2, 'Price': 0.0, 'Currency': None, 'AdditionalPrice1': 0.0, 'AdditionalCurrency1': None, 'AdditionalPrice2': 0.0, 'AdditionalCurrency2': None, 'BasePriceList': 1, 'Factor': 0.4, 'UoMPrices': []}, {'PriceList': 3, 'Price': 0.0, 'Currency': None, 'AdditionalPrice1': 0.0, 'AdditionalCurrency1': None, 'AdditionalPrice2': 0.0, 'AdditionalCurrency2': None, 'BasePriceList': 3, 'Factor': 1.0, 'UoMPrices': []}, {'PriceList': 4, 'Price': 0.0, 'Currency': None, 'AdditionalPrice1': 0.0, 'AdditionalCurrency1': None, 'AdditionalPrice2': 0.0, 'AdditionalCurrency2': None, 'BasePriceList': 4, 'Factor': 1.0, 'UoMPrices': []}, {'PriceList': 5, 'Price': 0.0, 'Currency': None, 'AdditionalPrice1': 0.0, 'AdditionalCurrency1': None, 'AdditionalPrice2': 0.0, 'AdditionalCurrency2': None, 'BasePriceList': 5, 'Factor': 1.0, 'UoMPrices': []}, {'PriceList': 6, 'Price': 0.0, 'Currency': None, 'AdditionalPrice1': 0.0, 'AdditionalCurrency1': None, 'AdditionalPrice2': 0.0, 'AdditionalCurrency2': None, 'BasePriceList': 6, 'Factor': 1.0, 'UoMPrices': []}, {'PriceList': 7, 'Price': 0.0, 'Currency': None, 'AdditionalPrice1': 0.0, 'AdditionalCurrency1': None, 'AdditionalPrice2': 0.0, 'AdditionalCurrency2': None, 'BasePriceList': 7, 'Factor': 1.0, 'UoMPrices': []}, {'PriceList': 8, 'Price': 0.0, 'Currency': None, 'AdditionalPrice1': 0.0, 'AdditionalCurrency1': None, 'AdditionalPrice2': 0.0, 'AdditionalCurrency2': None, 'BasePriceList': 8, 'Factor': 1.0, 'UoMPrices': []}, {'PriceList': 9, 'Price': 0.0, 'Currency': None, 'AdditionalPrice1': 0.0, 'AdditionalCurrency1': None, 'AdditionalPrice2': 0.0, 'AdditionalCurrency2': None, 'BasePriceList': 9, 'Factor': 1.0, 'UoMPrices': []}, {'PriceList': 10, 'Price': 0.0, 'Currency': None, 'AdditionalPrice1': 0.0, 'AdditionalCurrency1': None, 'AdditionalPrice2': 0.0, 'AdditionalCurrency2': None, 'BasePriceList': 10, 'Factor': 1.0, 'UoMPrices': []}], 'ItemWarehouseInfoCollection': [{'MinimalStock': 0.0, 'MaximalStock': 0.0, 'MinimalOrder': 0.0, 'StandardAveragePrice': 250.0, 'Locked': 'tNO', 'InventoryAccount': None, 'CostAccount': None, 'TransferAccount': None, 'RevenuesAccount': None, 'VarienceAccount': None, 'DecreasingAccount': None, 'IncreasingAccount': None, 'ReturningAccount': None, 'ExpensesAccount': None, 'EURevenuesAccount': None, 'EUExpensesAccount': None, 'ForeignRevenueAcc': None, 'ForeignExpensAcc': None, 'ExemptIncomeAcc': None, 'PriceDifferenceAcc': None, 'WarehouseCode': '5A', 'InStock': 7.0, 'Committed': 0.0, 'Ordered': 0.0, 'CountedQuantity': 0.0, 'WasCounted': 'tNO', 'UserSignature': 50, 'Counted': 0.0, 'ExpenseClearingAct': None, 'PurchaseCreditAcc': None, 'EUPurchaseCreditAcc': None, 'ForeignPurchaseCreditAcc': None, 'SalesCreditAcc': None, 'SalesCreditEUAcc': None, 'ExemptedCredits': None, 'SalesCreditForeignAcc': None, 'ExpenseOffsettingAccount': None, 'WipAccount': None, 'ExchangeRateDifferencesAcct': None, 'GoodsClearingAcct': None, 'NegativeInventoryAdjustmentAccount': None, 'CostInflationOffsetAccount': None, 'GLDecreaseAcct': None, 'GLIncreaseAcct': None, 'PAReturnAcct': None, 'PurchaseAcct': None, 'PurchaseOffsetAcct': None, 'ShippedGoodsAccount': None, 'StockInflationOffsetAccount': None, 'StockInflationAdjustAccount': None, 'VATInRevenueAccount': None, 'WipVarianceAccount': None, 'CostInflationAccount': None, 'WHIncomingCenvatAccount': None, 'WHOutgoingCenvatAccount': None, 'StockInTransitAccount': None, 'WipOffsetProfitAndLossAccount': None, 'InventoryOffsetProfitAndLossAccount': None, 'DefaultBin': None, 'DefaultBinEnforced': 'tNO', 'PurchaseBalanceAccount': None, 'ItemCode': 'ACC-0000002', 'ItemCycleCounts': []}, {'MinimalStock': 0.0, 'MaximalStock': 0.0, 'MinimalOrder': 0.0, 'StandardAveragePrice': 250.0, 'Locked': 'tNO', 'InventoryAccount': None, 'CostAccount': None, 'TransferAccount': None, 'RevenuesAccount': None, 'VarienceAccount': None, 'DecreasingAccount': None, 'IncreasingAccount': None, 'ReturningAccount': None, 'ExpensesAccount': None, 'EURevenuesAccount': None, 'EUExpensesAccount': None, 'ForeignRevenueAcc': None, 'ForeignExpensAcc': None, 'ExemptIncomeAcc': None, 'PriceDifferenceAcc': None, 'WarehouseCode': 'Arkan', 'InStock': 3.0, 'Committed': 0.0, 'Ordered': 0.0, 'CountedQuantity': 0.0, 'WasCounted': 'tNO', 'UserSignature': 50, 'Counted': 0.0, 'ExpenseClearingAct': None, 'PurchaseCreditAcc': None, 'EUPurchaseCreditAcc': None, 'ForeignPurchaseCreditAcc': None, 'SalesCreditAcc': None, 'SalesCreditEUAcc': None, 'ExemptedCredits': None, 'SalesCreditForeignAcc': None, 'ExpenseOffsettingAccount': None, 'WipAccount': None, 'ExchangeRateDifferencesAcct': None, 'GoodsClearingAcct': None, 'NegativeInventoryAdjustmentAccount': None, 'CostInflationOffsetAccount': None, 'GLDecreaseAcct': None, 'GLIncreaseAcct': None, 'PAReturnAcct': None, 'PurchaseAcct': None, 'PurchaseOffsetAcct': None, 'ShippedGoodsAccount': None, 'StockInflationOffsetAccount': None, 'StockInflationAdjustAccount': None, 'VATInRevenueAccount': None, 'WipVarianceAccount': None, 'CostInflationAccount': None, 'WHIncomingCenvatAccount': None, 'WHOutgoingCenvatAccount': None, 'StockInTransitAccount': None, 'WipOffsetProfitAndLossAccount': None, 'InventoryOffsetProfitAndLossAccount': None, 'DefaultBin': None, 'DefaultBinEnforced': 'tNO', 'PurchaseBalanceAccount': None, 'ItemCode': 'ACC-0000002', 'ItemCycleCounts': []}, {'MinimalStock': 0.0, 'MaximalStock': 0.0, 'MinimalOrder': 0.0, 'StandardAveragePrice': 0.0, 'Locked': 'tNO', 'InventoryAccount': None, 'CostAccount': None, 'TransferAccount': None, 'RevenuesAccount': None, 'VarienceAccount': None, 'DecreasingAccount': None, 'IncreasingAccount': None, 'ReturningAccount': None, 'ExpensesAccount': None, 'EURevenuesAccount': None, 'EUExpensesAccount': None, 'ForeignRevenueAcc': None, 'ForeignExpensAcc': None, 'ExemptIncomeAcc': None, 'PriceDifferenceAcc': None, 'WarehouseCode': 'DIP', 'InStock': 0.0, 'Committed': 0.0, 'Ordered': 0.0, 'CountedQuantity': 0.0, 'WasCounted': 'tNO', 'UserSignature': 50, 'Counted': 0.0, 'ExpenseClearingAct': None, 'PurchaseCreditAcc': None, 'EUPurchaseCreditAcc': None, 'ForeignPurchaseCreditAcc': None, 'SalesCreditAcc': None, 'SalesCreditEUAcc': None, 'ExemptedCredits': None, 'SalesCreditForeignAcc': None, 'ExpenseOffsettingAccount': None, 'WipAccount': None, 'ExchangeRateDifferencesAcct': None, 'GoodsClearingAcct': None, 'NegativeInventoryAdjustmentAccount': None, 'CostInflationOffsetAccount': None, 'GLDecreaseAcct': None, 'GLIncreaseAcct': None, 'PAReturnAcct': None, 'PurchaseAcct': None, 'PurchaseOffsetAcct': None, 'ShippedGoodsAccount': None, 'StockInflationOffsetAccount': None, 'StockInflationAdjustAccount': None, 'VATInRevenueAccount': None, 'WipVarianceAccount': None, 'CostInflationAccount': None, 'WHIncomingCenvatAccount': None, 'WHOutgoingCenvatAccount': None, 'StockInTransitAccount': None, 'WipOffsetProfitAndLossAccount': None, 'InventoryOffsetProfitAndLossAccount': None, 'DefaultBin': None, 'DefaultBinEnforced': 'tNO', 'PurchaseBalanceAccount': None, 'ItemCode': 'ACC-0000002', 'ItemCycleCounts': []}, {'MinimalStock': 0.0, 'MaximalStock': 0.0, 'MinimalOrder': 0.0, 'StandardAveragePrice': 250.0, 'Locked': 'tNO', 'InventoryAccount': None, 'CostAccount': None, 'TransferAccount': None, 'RevenuesAccount': None, 'VarienceAccount': None, 'DecreasingAccount': None, 'IncreasingAccount': None, 'ReturningAccount': None, 'ExpensesAccount': None, 'EURevenuesAccount': None, 'EUExpensesAccount': None, 'ForeignRevenueAcc': None, 'ForeignExpensAcc': None, 'ExemptIncomeAcc': None, 'PriceDifferenceAcc': None, 'WarehouseCode': 'INC', 'InStock': 0.0, 'Committed': 0.0, 'Ordered': 0.0, 'CountedQuantity': 0.0, 'WasCounted': 'tNO', 'UserSignature': 50, 'Counted': 0.0, 'ExpenseClearingAct': None, 'PurchaseCreditAcc': None, 'EUPurchaseCreditAcc': None, 'ForeignPurchaseCreditAcc': None, 'SalesCreditAcc': None, 'SalesCreditEUAcc': None, 'ExemptedCredits': None, 'SalesCreditForeignAcc': None, 'ExpenseOffsettingAccount': None, 'WipAccount': None, 'ExchangeRateDifferencesAcct': None, 'GoodsClearingAcct': None, 'NegativeInventoryAdjustmentAccount': None, 'CostInflationOffsetAccount': None, 'GLDecreaseAcct': None, 'GLIncreaseAcct': None, 'PAReturnAcct': None, 'PurchaseAcct': None, 'PurchaseOffsetAcct': None, 'ShippedGoodsAccount': None, 'StockInflationOffsetAccount': None, 'StockInflationAdjustAccount': None, 'VATInRevenueAccount': None, 'WipVarianceAccount': None, 'CostInflationAccount': None, 'WHIncomingCenvatAccount': None, 'WHOutgoingCenvatAccount': None, 'StockInTransitAccount': None, 'WipOffsetProfitAndLossAccount': None, 'InventoryOffsetProfitAndLossAccount': None, 'DefaultBin': None, 'DefaultBinEnforced': 'tNO', 'PurchaseBalanceAccount': None, 'ItemCode': 'ACC-0000002', 'ItemCycleCounts': []}, {'MinimalStock': 0.0, 'MaximalStock': 0.0, 'MinimalOrder': 0.0, 'StandardAveragePrice': 0.0, 'Locked': 'tNO', 'InventoryAccount': None, 'CostAccount': None, 'TransferAccount': None, 'RevenuesAccount': None, 'VarienceAccount': None, 'DecreasingAccount': None, 'IncreasingAccount': None, 'ReturningAccount': None, 'ExpensesAccount': None, 'EURevenuesAccount': None, 'EUExpensesAccount': None, 'ForeignRevenueAcc': None, 'ForeignExpensAcc': None, 'ExemptIncomeAcc': None, 'PriceDifferenceAcc': None, 'WarehouseCode': 'ONL', 'InStock': 0.0, 'Committed': 0.0, 'Ordered': 0.0, 'CountedQuantity': 0.0, 'WasCounted': 'tNO', 'UserSignature': 50, 'Counted': 0.0, 'ExpenseClearingAct': None, 'PurchaseCreditAcc': None, 'EUPurchaseCreditAcc': None, 'ForeignPurchaseCreditAcc': None, 'SalesCreditAcc': None, 'SalesCreditEUAcc': None, 'ExemptedCredits': None, 'SalesCreditForeignAcc': None, 'ExpenseOffsettingAccount': None, 'WipAccount': None, 'ExchangeRateDifferencesAcct': None, 'GoodsClearingAcct': None, 'NegativeInventoryAdjustmentAccount': None, 'CostInflationOffsetAccount': None, 'GLDecreaseAcct': None, 'GLIncreaseAcct': None, 'PAReturnAcct': None, 'PurchaseAcct': None, 'PurchaseOffsetAcct': None, 'ShippedGoodsAccount': None, 'StockInflationOffsetAccount': None, 'StockInflationAdjustAccount': None, 'VATInRevenueAccount': None, 'WipVarianceAccount': None, 'CostInflationAccount': None, 'WHIncomingCenvatAccount': None, 'WHOutgoingCenvatAccount': None, 'StockInTransitAccount': None, 'WipOffsetProfitAndLossAccount': None, 'InventoryOffsetProfitAndLossAccount': None, 'DefaultBin': None, 'DefaultBinEnforced': 'tNO', 'PurchaseBalanceAccount': None, 'ItemCode': 'ACC-0000002', 'ItemCycleCounts': []}, {'MinimalStock': 0.0, 'MaximalStock': 0.0, 'MinimalOrder': 0.0, 'StandardAveragePrice': 0.0, 'Locked': 'tNO', 'InventoryAccount': None, 'CostAccount': None, 'TransferAccount': None, 'RevenuesAccount': None, 'VarienceAccount': None, 'DecreasingAccount': None, 'IncreasingAccount': None, 'ReturningAccount': None, 'ExpensesAccount': None, 'EURevenuesAccount': None, 'EUExpensesAccount': None, 'ForeignRevenueAcc': None, 'ForeignExpensAcc': None, 'ExemptIncomeAcc': None, 'PriceDifferenceAcc': None, 'WarehouseCode': 'PHO', 'InStock': 0.0, 'Committed': 0.0, 'Ordered': 0.0, 'CountedQuantity': 0.0, 'WasCounted': 'tNO', 'UserSignature': 50, 'Counted': 0.0, 'ExpenseClearingAct': None, 'PurchaseCreditAcc': None, 'EUPurchaseCreditAcc': None, 'ForeignPurchaseCreditAcc': None, 'SalesCreditAcc': None, 'SalesCreditEUAcc': None, 'ExemptedCredits': None, 'SalesCreditForeignAcc': None, 'ExpenseOffsettingAccount': None, 'WipAccount': None, 'ExchangeRateDifferencesAcct': None, 'GoodsClearingAcct': None, 'NegativeInventoryAdjustmentAccount': None, 'CostInflationOffsetAccount': None, 'GLDecreaseAcct': None, 'GLIncreaseAcct': None, 'PAReturnAcct': None, 'PurchaseAcct': None, 'PurchaseOffsetAcct': None, 'ShippedGoodsAccount': None, 'StockInflationOffsetAccount': None, 'StockInflationAdjustAccount': None, 'VATInRevenueAccount': None, 'WipVarianceAccount': None, 'CostInflationAccount': None, 'WHIncomingCenvatAccount': None, 'WHOutgoingCenvatAccount': None, 'StockInTransitAccount': None, 'WipOffsetProfitAndLossAccount': None, 'InventoryOffsetProfitAndLossAccount': None, 'DefaultBin': None, 'DefaultBinEnforced': 'tNO', 'PurchaseBalanceAccount': None, 'ItemCode': 'ACC-0000002', 'ItemCycleCounts': []}, {'MinimalStock': 0.0, 'MaximalStock': 0.0, 'MinimalOrder': 0.0, 'StandardAveragePrice': 0.0, 'Locked': 'tNO', 'InventoryAccount': None, 'CostAccount': None, 'TransferAccount': None, 'RevenuesAccount': None, 'VarienceAccount': None, 'DecreasingAccount': None, 'IncreasingAccount': None, 'ReturningAccount': None, 'ExpensesAccount': None, 'EURevenuesAccount': None, 'EUExpensesAccount': None, 'ForeignRevenueAcc': None, 'ForeignExpensAcc': None, 'ExemptIncomeAcc': None, 'PriceDifferenceAcc': None, 'WarehouseCode': 'PHO-EX', 'InStock': 0.0, 'Committed': 0.0, 'Ordered': 0.0, 'CountedQuantity': 0.0, 'WasCounted': 'tNO', 'UserSignature': 1, 'Counted': 0.0, 'ExpenseClearingAct': None, 'PurchaseCreditAcc': None, 'EUPurchaseCreditAcc': None, 'ForeignPurchaseCreditAcc': None, 'SalesCreditAcc': None, 'SalesCreditEUAcc': None, 'ExemptedCredits': None, 'SalesCreditForeignAcc': None, 'ExpenseOffsettingAccount': None, 'WipAccount': None, 'ExchangeRateDifferencesAcct': None, 'GoodsClearingAcct': None, 'NegativeInventoryAdjustmentAccount': None, 'CostInflationOffsetAccount': None, 'GLDecreaseAcct': None, 'GLIncreaseAcct': None, 'PAReturnAcct': None, 'PurchaseAcct': None, 'PurchaseOffsetAcct': None, 'ShippedGoodsAccount': None, 'StockInflationOffsetAccount': None, 'StockInflationAdjustAccount': None, 'VATInRevenueAccount': None, 'WipVarianceAccount': None, 'CostInflationAccount': None, 'WHIncomingCenvatAccount': None, 'WHOutgoingCenvatAccount': None, 'StockInTransitAccount': None, 'WipOffsetProfitAndLossAccount': None, 'InventoryOffsetProfitAndLossAccount': None, 'DefaultBin': None, 'DefaultBinEnforced': 'tNO', 'PurchaseBalanceAccount': None, 'ItemCode': 'ACC-0000002', 'ItemCycleCounts': []}, {'MinimalStock': 0.0, 'MaximalStock': 0.0, 'MinimalOrder': 0.0, 'StandardAveragePrice': 0.0, 'Locked': 'tNO', 'InventoryAccount': None, 'CostAccount': None, 'TransferAccount': None, 'RevenuesAccount': None, 'VarienceAccount': None, 'DecreasingAccount': None, 'IncreasingAccount': None, 'ReturningAccount': None, 'ExpensesAccount': None, 'EURevenuesAccount': None, 'EUExpensesAccount': None, 'ForeignRevenueAcc': None, 'ForeignExpensAcc': None, 'ExemptIncomeAcc': None, 'PriceDifferenceAcc': None, 'WarehouseCode': 'PHO-IN', 'InStock': 0.0, 'Committed': 0.0, 'Ordered': 0.0, 'CountedQuantity': 0.0, 'WasCounted': 'tNO', 'UserSignature': 1, 'Counted': 0.0, 'ExpenseClearingAct': None, 'PurchaseCreditAcc': None, 'EUPurchaseCreditAcc': None, 'ForeignPurchaseCreditAcc': None, 'SalesCreditAcc': None, 'SalesCreditEUAcc': None, 'ExemptedCredits': None, 'SalesCreditForeignAcc': None, 'ExpenseOffsettingAccount': None, 'WipAccount': None, 'ExchangeRateDifferencesAcct': None, 'GoodsClearingAcct': None, 'NegativeInventoryAdjustmentAccount': None, 'CostInflationOffsetAccount': None, 'GLDecreaseAcct': None, 'GLIncreaseAcct': None, 'PAReturnAcct': None, 'PurchaseAcct': None, 'PurchaseOffsetAcct': None, 'ShippedGoodsAccount': None, 'StockInflationOffsetAccount': None, 'StockInflationAdjustAccount': None, 'VATInRevenueAccount': None, 'WipVarianceAccount': None, 'CostInflationAccount': None, 'WHIncomingCenvatAccount': None, 'WHOutgoingCenvatAccount': None, 'StockInTransitAccount': None, 'WipOffsetProfitAndLossAccount': None, 'InventoryOffsetProfitAndLossAccount': None, 'DefaultBin': None, 'DefaultBinEnforced': 'tNO', 'PurchaseBalanceAccount': None, 'ItemCode': 'ACC-0000002', 'ItemCycleCounts': []}, {'MinimalStock': 0.0, 'MaximalStock': 0.0, 'MinimalOrder': 0.0, 'StandardAveragePrice': 0.0, 'Locked': 'tNO', 'InventoryAccount': None, 'CostAccount': None, 'TransferAccount': None, 'RevenuesAccount': None, 'VarienceAccount': None, 'DecreasingAccount': None, 'IncreasingAccount': None, 'ReturningAccount': None, 'ExpensesAccount': None, 'EURevenuesAccount': None, 'EUExpensesAccount': None, 'ForeignRevenueAcc': None, 'ForeignExpensAcc': None, 'ExemptIncomeAcc': None, 'PriceDifferenceAcc': None, 'WarehouseCode': 'RTW', 'InStock': 0.0, 'Committed': 0.0, 'Ordered': 0.0, 'CountedQuantity': 0.0, 'WasCounted': 'tNO', 'UserSignature': 50, 'Counted': 0.0, 'ExpenseClearingAct': None, 'PurchaseCreditAcc': None, 'EUPurchaseCreditAcc': None, 'ForeignPurchaseCreditAcc': None, 'SalesCreditAcc': None, 'SalesCreditEUAcc': None, 'ExemptedCredits': None, 'SalesCreditForeignAcc': None, 'ExpenseOffsettingAccount': None, 'WipAccount': None, 'ExchangeRateDifferencesAcct': None, 'GoodsClearingAcct': None, 'NegativeInventoryAdjustmentAccount': None, 'CostInflationOffsetAccount': None, 'GLDecreaseAcct': None, 'GLIncreaseAcct': None, 'PAReturnAcct': None, 'PurchaseAcct': None, 'PurchaseOffsetAcct': None, 'ShippedGoodsAccount': None, 'StockInflationOffsetAccount': None, 'StockInflationAdjustAccount': None, 'VATInRevenueAccount': None, 'WipVarianceAccount': None, 'CostInflationAccount': None, 'WHIncomingCenvatAccount': None, 'WHOutgoingCenvatAccount': None, 'StockInTransitAccount': None, 'WipOffsetProfitAndLossAccount': None, 'InventoryOffsetProfitAndLossAccount': None, 'DefaultBin': None, 'DefaultBinEnforced': 'tNO', 'PurchaseBalanceAccount': None, 'ItemCode': 'ACC-0000002', 'ItemCycleCounts': []}, {'MinimalStock': 0.0, 'MaximalStock': 0.0, 'MinimalOrder': 0.0, 'StandardAveragePrice': 0.0, 'Locked': 'tNO', 'InventoryAccount': None, 'CostAccount': None, 'TransferAccount': None, 'RevenuesAccount': None, 'VarienceAccount': None, 'DecreasingAccount': None, 'IncreasingAccount': None, 'ReturningAccount': None, 'ExpensesAccount': None, 'EURevenuesAccount': None, 'EUExpensesAccount': None, 'ForeignRevenueAcc': None, 'ForeignExpensAcc': None, 'ExemptIncomeAcc': None, 'PriceDifferenceAcc': None, 'WarehouseCode': 'RTWH', 'InStock': 0.0, 'Committed': 0.0, 'Ordered': 0.0, 'CountedQuantity': 0.0, 'WasCounted': 'tNO', 'UserSignature': 1, 'Counted': 0.0, 'ExpenseClearingAct': None, 'PurchaseCreditAcc': None, 'EUPurchaseCreditAcc': None, 'ForeignPurchaseCreditAcc': None, 'SalesCreditAcc': None, 'SalesCreditEUAcc': None, 'ExemptedCredits': None, 'SalesCreditForeignAcc': None, 'ExpenseOffsettingAccount': None, 'WipAccount': None, 'ExchangeRateDifferencesAcct': None, 'GoodsClearingAcct': None, 'NegativeInventoryAdjustmentAccount': None, 'CostInflationOffsetAccount': None, 'GLDecreaseAcct': None, 'GLIncreaseAcct': None, 'PAReturnAcct': None, 'PurchaseAcct': None, 'PurchaseOffsetAcct': None, 'ShippedGoodsAccount': None, 'StockInflationOffsetAccount': None, 'StockInflationAdjustAccount': None, 'VATInRevenueAccount': None, 'WipVarianceAccount': None, 'CostInflationAccount': None, 'WHIncomingCenvatAccount': None, 'WHOutgoingCenvatAccount': None, 'StockInTransitAccount': None, 'WipOffsetProfitAndLossAccount': None, 'InventoryOffsetProfitAndLossAccount': None, 'DefaultBin': None, 'DefaultBinEnforced': 'tNO', 'PurchaseBalanceAccount': None, 'ItemCode': 'ACC-0000002', 'ItemCycleCounts': []}, {'MinimalStock': 0.0, 'MaximalStock': 0.0, 'MinimalOrder': 0.0, 'StandardAveragePrice': 0.0, 'Locked': 'tNO', 'InventoryAccount': None, 'CostAccount': None, 'TransferAccount': None, 'RevenuesAccount': None, 'VarienceAccount': None, 'DecreasingAccount': None, 'IncreasingAccount': None, 'ReturningAccount': None, 'ExpensesAccount': None, 'EURevenuesAccount': None, 'EUExpensesAccount': None, 'ForeignRevenueAcc': None, 'ForeignExpensAcc': None, 'ExemptIncomeAcc': None, 'PriceDifferenceAcc': None, 'WarehouseCode': 'SW', 'InStock': 0.0, 'Committed': 0.0, 'Ordered': 0.0, 'CountedQuantity': 0.0, 'WasCounted': 'tNO', 'UserSignature': 50, 'Counted': 0.0, 'ExpenseClearingAct': None, 'PurchaseCreditAcc': None, 'EUPurchaseCreditAcc': None, 'ForeignPurchaseCreditAcc': None, 'SalesCreditAcc': None, 'SalesCreditEUAcc': None, 'ExemptedCredits': None, 'SalesCreditForeignAcc': None, 'ExpenseOffsettingAccount': None, 'WipAccount': None, 'ExchangeRateDifferencesAcct': None, 'GoodsClearingAcct': None, 'NegativeInventoryAdjustmentAccount': None, 'CostInflationOffsetAccount': None, 'GLDecreaseAcct': None, 'GLIncreaseAcct': None, 'PAReturnAcct': None, 'PurchaseAcct': None, 'PurchaseOffsetAcct': None, 'ShippedGoodsAccount': None, 'StockInflationOffsetAccount': None, 'StockInflationAdjustAccount': None, 'VATInRevenueAccount': None, 'WipVarianceAccount': None, 'CostInflationAccount': None, 'WHIncomingCenvatAccount': None, 'WHOutgoingCenvatAccount': None, 'StockInTransitAccount': None, 'WipOffsetProfitAndLossAccount': None, 'InventoryOffsetProfitAndLossAccount': None, 'DefaultBin': None, 'DefaultBinEnforced': 'tNO', 'PurchaseBalanceAccount': None, 'ItemCode': 'ACC-0000002', 'ItemCycleCounts': []}, {'MinimalStock': 0.0, 'MaximalStock': 0.0, 'MinimalOrder': 0.0, 'StandardAveragePrice': 0.0, 'Locked': 'tNO', 'InventoryAccount': None, 'CostAccount': None, 'TransferAccount': None, 'RevenuesAccount': None, 'VarienceAccount': None, 'DecreasingAccount': None, 'IncreasingAccount': None, 'ReturningAccount': None, 'ExpensesAccount': None, 'EURevenuesAccount': None, 'EUExpensesAccount': None, 'ForeignRevenueAcc': None, 'ForeignExpensAcc': None, 'ExemptIncomeAcc': None, 'PriceDifferenceAcc': None, 'WarehouseCode': 'WLS', 'InStock': 0.0, 'Committed': 0.0, 'Ordered': 0.0, 'CountedQuantity': 0.0, 'WasCounted': 'tNO', 'UserSignature': 50, 'Counted': 0.0, 'ExpenseClearingAct': None, 'PurchaseCreditAcc': None, 'EUPurchaseCreditAcc': None, 'ForeignPurchaseCreditAcc': None, 'SalesCreditAcc': None, 'SalesCreditEUAcc': None, 'ExemptedCredits': None, 'SalesCreditForeignAcc': None, 'ExpenseOffsettingAccount': None, 'WipAccount': None, 'ExchangeRateDifferencesAcct': None, 'GoodsClearingAcct': None, 'NegativeInventoryAdjustmentAccount': None, 'CostInflationOffsetAccount': None, 'GLDecreaseAcct': None, 'GLIncreaseAcct': None, 'PAReturnAcct': None, 'PurchaseAcct': None, 'PurchaseOffsetAcct': None, 'ShippedGoodsAccount': None, 'StockInflationOffsetAccount': None, 'StockInflationAdjustAccount': None, 'VATInRevenueAccount': None, 'WipVarianceAccount': None, 'CostInflationAccount': None, 'WHIncomingCenvatAccount': None, 'WHOutgoingCenvatAccount': None, 'StockInTransitAccount': None, 'WipOffsetProfitAndLossAccount': None, 'InventoryOffsetProfitAndLossAccount': None, 'DefaultBin': None, 'DefaultBinEnforced': 'tNO', 'PurchaseBalanceAccount': None, 'ItemCode': 'ACC-0000002', 'ItemCycleCounts': []}, {'MinimalStock': 0.0, 'MaximalStock': 0.0, 'MinimalOrder': 0.0, 'StandardAveragePrice': 0.0, 'Locked': 'tNO', 'InventoryAccount': None, 'CostAccount': None, 'TransferAccount': None, 'RevenuesAccount': None, 'VarienceAccount': None, 'DecreasingAccount': None, 'IncreasingAccount': None, 'ReturningAccount': None, 'ExpensesAccount': None, 'EURevenuesAccount': None, 'EUExpensesAccount': None, 'ForeignRevenueAcc': None, 'ForeignExpensAcc': None, 'ExemptIncomeAcc': None, 'PriceDifferenceAcc': None, 'WarehouseCode': 'WW', 'InStock': 0.0, 'Committed': 0.0, 'Ordered': 0.0, 'CountedQuantity': 0.0, 'WasCounted': 'tNO', 'UserSignature': 50, 'Counted': 0.0, 'ExpenseClearingAct': None, 'PurchaseCreditAcc': None, 'EUPurchaseCreditAcc': None, 'ForeignPurchaseCreditAcc': None, 'SalesCreditAcc': None, 'SalesCreditEUAcc': None, 'ExemptedCredits': None, 'SalesCreditForeignAcc': None, 'ExpenseOffsettingAccount': None, 'WipAccount': None, 'ExchangeRateDifferencesAcct': None, 'GoodsClearingAcct': None, 'NegativeInventoryAdjustmentAccount': None, 'CostInflationOffsetAccount': None, 'GLDecreaseAcct': None, 'GLIncreaseAcct': None, 'PAReturnAcct': None, 'PurchaseAcct': None, 'PurchaseOffsetAcct': None, 'ShippedGoodsAccount': None, 'StockInflationOffsetAccount': None, 'StockInflationAdjustAccount': None, 'VATInRevenueAccount': None, 'WipVarianceAccount': None, 'CostInflationAccount': None, 'WHIncomingCenvatAccount': None, 'WHOutgoingCenvatAccount': None, 'StockInTransitAccount': None, 'WipOffsetProfitAndLossAccount': None, 'InventoryOffsetProfitAndLossAccount': None, 'DefaultBin': None, 'DefaultBinEnforced': 'tNO', 'PurchaseBalanceAccount': None, 'ItemCode': 'ACC-0000002', 'ItemCycleCounts': []}, {'MinimalStock': 0.0, 'MaximalStock': 0.0, 'MinimalOrder': 0.0, 'StandardAveragePrice': 0.0, 'Locked': 'tNO', 'InventoryAccount': None, 'CostAccount': None, 'TransferAccount': None, 'RevenuesAccount': None, 'VarienceAccount': None, 'DecreasingAccount': None, 'IncreasingAccount': None, 'ReturningAccount': None, 'ExpensesAccount': None, 'EURevenuesAccount': None, 'EUExpensesAccount': None, 'ForeignRevenueAcc': None, 'ForeignExpensAcc': None, 'ExemptIncomeAcc': None, 'PriceDifferenceAcc': None, 'WarehouseCode': 'WW-CON', 'InStock': 0.0, 'Committed': 0.0, 'Ordered': 0.0, 'CountedQuantity': 0.0, 'WasCounted': 'tNO', 'UserSignature': 50, 'Counted': 0.0, 'ExpenseClearingAct': None, 'PurchaseCreditAcc': None, 'EUPurchaseCreditAcc': None, 'ForeignPurchaseCreditAcc': None, 'SalesCreditAcc': None, 'SalesCreditEUAcc': None, 'ExemptedCredits': None, 'SalesCreditForeignAcc': None, 'ExpenseOffsettingAccount': None, 'WipAccount': None, 'ExchangeRateDifferencesAcct': None, 'GoodsClearingAcct': None, 'NegativeInventoryAdjustmentAccount': None, 'CostInflationOffsetAccount': None, 'GLDecreaseAcct': None, 'GLIncreaseAcct': None, 'PAReturnAcct': None, 'PurchaseAcct': None, 'PurchaseOffsetAcct': None, 'ShippedGoodsAccount': None, 'StockInflationOffsetAccount': None, 'StockInflationAdjustAccount': None, 'VATInRevenueAccount': None, 'WipVarianceAccount': None, 'CostInflationAccount': None, 'WHIncomingCenvatAccount': None, 'WHOutgoingCenvatAccount': None, 'StockInTransitAccount': None, 'WipOffsetProfitAndLossAccount': None, 'InventoryOffsetProfitAndLossAccount': None, 'DefaultBin': None, 'DefaultBinEnforced': 'tNO', 'PurchaseBalanceAccount': None, 'ItemCode': 'ACC-0000002', 'ItemCycleCounts': []}, {'MinimalStock': 0.0, 'MaximalStock': 0.0, 'MinimalOrder': 0.0, 'StandardAveragePrice': 0.0, 'Locked': 'tNO', 'InventoryAccount': None, 'CostAccount': None, 'TransferAccount': None, 'RevenuesAccount': None, 'VarienceAccount': None, 'DecreasingAccount': None, 'IncreasingAccount': None, 'ReturningAccount': None, 'ExpensesAccount': None, 'EURevenuesAccount': None, 'EUExpensesAccount': None, 'ForeignRevenueAcc': None, 'ForeignExpensAcc': None, 'ExemptIncomeAcc': None, 'PriceDifferenceAcc': None, 'WarehouseCode': 'WW-DAM', 'InStock': 0.0, 'Committed': 0.0, 'Ordered': 0.0, 'CountedQuantity': 0.0, 'WasCounted': 'tNO', 'UserSignature': 50, 'Counted': 0.0, 'ExpenseClearingAct': None, 'PurchaseCreditAcc': None, 'EUPurchaseCreditAcc': None, 'ForeignPurchaseCreditAcc': None, 'SalesCreditAcc': None, 'SalesCreditEUAcc': None, 'ExemptedCredits': None, 'SalesCreditForeignAcc': None, 'ExpenseOffsettingAccount': None, 'WipAccount': None, 'ExchangeRateDifferencesAcct': None, 'GoodsClearingAcct': None, 'NegativeInventoryAdjustmentAccount': None, 'CostInflationOffsetAccount': None, 'GLDecreaseAcct': None, 'GLIncreaseAcct': None, 'PAReturnAcct': None, 'PurchaseAcct': None, 'PurchaseOffsetAcct': None, 'ShippedGoodsAccount': None, 'StockInflationOffsetAccount': None, 'StockInflationAdjustAccount': None, 'VATInRevenueAccount': None, 'WipVarianceAccount': None, 'CostInflationAccount': None, 'WHIncomingCenvatAccount': None, 'WHOutgoingCenvatAccount': None, 'StockInTransitAccount': None, 'WipOffsetProfitAndLossAccount': None, 'InventoryOffsetProfitAndLossAccount': None, 'DefaultBin': None, 'DefaultBinEnforced': 'tNO', 'PurchaseBalanceAccount': None, 'ItemCode': 'ACC-0000002', 'ItemCycleCounts': []}, {'MinimalStock': 0.0, 'MaximalStock': 0.0, 'MinimalOrder': 0.0, 'StandardAveragePrice': 0.0, 'Locked': 'tNO', 'InventoryAccount': None, 'CostAccount': None, 'TransferAccount': None, 'RevenuesAccount': None, 'VarienceAccount': None, 'DecreasingAccount': None, 'IncreasingAccount': None, 'ReturningAccount': None, 'ExpensesAccount': None, 'EURevenuesAccount': None, 'EUExpensesAccount': None, 'ForeignRevenueAcc': None, 'ForeignExpensAcc': None, 'ExemptIncomeAcc': None, 'PriceDifferenceAcc': None, 'WarehouseCode': 'WW-REP', 'InStock': 0.0, 'Committed': 0.0, 'Ordered': 0.0, 'CountedQuantity': 0.0, 'WasCounted': 'tNO', 'UserSignature': 50, 'Counted': 0.0, 'ExpenseClearingAct': None, 'PurchaseCreditAcc': None, 'EUPurchaseCreditAcc': None, 'ForeignPurchaseCreditAcc': None, 'SalesCreditAcc': None, 'SalesCreditEUAcc': None, 'ExemptedCredits': None, 'SalesCreditForeignAcc': None, 'ExpenseOffsettingAccount': None, 'WipAccount': None, 'ExchangeRateDifferencesAcct': None, 'GoodsClearingAcct': None, 'NegativeInventoryAdjustmentAccount': None, 'CostInflationOffsetAccount': None, 'GLDecreaseAcct': None, 'GLIncreaseAcct': None, 'PAReturnAcct': None, 'PurchaseAcct': None, 'PurchaseOffsetAcct': None, 'ShippedGoodsAccount': None, 'StockInflationOffsetAccount': None, 'StockInflationAdjustAccount': None, 'VATInRevenueAccount': None, 'WipVarianceAccount': None, 'CostInflationAccount': None, 'WHIncomingCenvatAccount': None, 'WHOutgoingCenvatAccount': None, 'StockInTransitAccount': None, 'WipOffsetProfitAndLossAccount': None, 'InventoryOffsetProfitAndLossAccount': None, 'DefaultBin': None, 'DefaultBinEnforced': 'tNO', 'PurchaseBalanceAccount': None, 'ItemCode': 'ACC-0000002', 'ItemCycleCounts': []}, {'MinimalStock': 0.0, 'MaximalStock': 0.0, 'MinimalOrder': 0.0, 'StandardAveragePrice': 0.0, 'Locked': 'tNO', 'InventoryAccount': None, 'CostAccount': None, 'TransferAccount': None, 'RevenuesAccount': None, 'VarienceAccount': None, 'DecreasingAccount': None, 'IncreasingAccount': None, 'ReturningAccount': None, 'ExpensesAccount': None, 'EURevenuesAccount': None, 'EUExpensesAccount': None, 'ForeignRevenueAcc': None, 'ForeignExpensAcc': None, 'ExemptIncomeAcc': None, 'PriceDifferenceAcc': None, 'WarehouseCode': 'WW-SAM', 'InStock': 0.0, 'Committed': 0.0, 'Ordered': 0.0, 'CountedQuantity': 0.0, 'WasCounted': 'tNO', 'UserSignature': 50, 'Counted': 0.0, 'ExpenseClearingAct': None, 'PurchaseCreditAcc': None, 'EUPurchaseCreditAcc': None, 'ForeignPurchaseCreditAcc': None, 'SalesCreditAcc': None, 'SalesCreditEUAcc': None, 'ExemptedCredits': None, 'SalesCreditForeignAcc': None, 'ExpenseOffsettingAccount': None, 'WipAccount': None, 'ExchangeRateDifferencesAcct': None, 'GoodsClearingAcct': None, 'NegativeInventoryAdjustmentAccount': None, 'CostInflationOffsetAccount': None, 'GLDecreaseAcct': None, 'GLIncreaseAcct': None, 'PAReturnAcct': None, 'PurchaseAcct': None, 'PurchaseOffsetAcct': None, 'ShippedGoodsAccount': None, 'StockInflationOffsetAccount': None, 'StockInflationAdjustAccount': None, 'VATInRevenueAccount': None, 'WipVarianceAccount': None, 'CostInflationAccount': None, 'WHIncomingCenvatAccount': None, 'WHOutgoingCenvatAccount': None, 'StockInTransitAccount': None, 'WipOffsetProfitAndLossAccount': None, 'InventoryOffsetProfitAndLossAccount': None, 'DefaultBin': None, 'DefaultBinEnforced': 'tNO', 'PurchaseBalanceAccount': None, 'ItemCode': 'ACC-0000002', 'ItemCycleCounts': []}, {'MinimalStock': 0.0, 'MaximalStock': 0.0, 'MinimalOrder': 0.0, 'StandardAveragePrice': 0.0, 'Locked': 'tNO', 'InventoryAccount': None, 'CostAccount': None, 'TransferAccount': None, 'RevenuesAccount': None, 'VarienceAccount': None, 'DecreasingAccount': None, 'IncreasingAccount': None, 'ReturningAccount': None, 'ExpensesAccount': None, 'EURevenuesAccount': None, 'EUExpensesAccount': None, 'ForeignRevenueAcc': None, 'ForeignExpensAcc': None, 'ExemptIncomeAcc': None, 'PriceDifferenceAcc': None, 'WarehouseCode': 'WW-WIP', 'InStock': 0.0, 'Committed': 0.0, 'Ordered': 0.0, 'CountedQuantity': 0.0, 'WasCounted': 'tNO', 'UserSignature': 50, 'Counted': 0.0, 'ExpenseClearingAct': None, 'PurchaseCreditAcc': None, 'EUPurchaseCreditAcc': None, 'ForeignPurchaseCreditAcc': None, 'SalesCreditAcc': None, 'SalesCreditEUAcc': None, 'ExemptedCredits': None, 'SalesCreditForeignAcc': None, 'ExpenseOffsettingAccount': None, 'WipAccount': None, 'ExchangeRateDifferencesAcct': None, 'GoodsClearingAcct': None, 'NegativeInventoryAdjustmentAccount': None, 'CostInflationOffsetAccount': None, 'GLDecreaseAcct': None, 'GLIncreaseAcct': None, 'PAReturnAcct': None, 'PurchaseAcct': None, 'PurchaseOffsetAcct': None, 'ShippedGoodsAccount': None, 'StockInflationOffsetAccount': None, 'StockInflationAdjustAccount': None, 'VATInRevenueAccount': None, 'WipVarianceAccount': None, 'CostInflationAccount': None, 'WHIncomingCenvatAccount': None, 'WHOutgoingCenvatAccount': None, 'StockInTransitAccount': None, 'WipOffsetProfitAndLossAccount': None, 'InventoryOffsetProfitAndLossAccount': None, 'DefaultBin': None, 'DefaultBinEnforced': 'tNO', 'PurchaseBalanceAccount': None, 'ItemCode': 'ACC-0000002', 'ItemCycleCounts': []}, {'MinimalStock': 0.0, 'MaximalStock': 0.0, 'MinimalOrder': 0.0, 'StandardAveragePrice': 0.0, 'Locked': 'tNO', 'InventoryAccount': None, 'CostAccount': None, 'TransferAccount': None, 'RevenuesAccount': None, 'VarienceAccount': None, 'DecreasingAccount': None, 'IncreasingAccount': None, 'ReturningAccount': None, 'ExpensesAccount': None, 'EURevenuesAccount': None, 'EUExpensesAccount': None, 'ForeignRevenueAcc': None, 'ForeignExpensAcc': None, 'ExemptIncomeAcc': None, 'PriceDifferenceAcc': None, 'WarehouseCode': 'ZW', 'InStock': 0.0, 'Committed': 0.0, 'Ordered': 0.0, 'CountedQuantity': 0.0, 'WasCounted': 'tNO', 'UserSignature': 50, 'Counted': 0.0, 'ExpenseClearingAct': None, 'PurchaseCreditAcc': None, 'EUPurchaseCreditAcc': None, 'ForeignPurchaseCreditAcc': None, 'SalesCreditAcc': None, 'SalesCreditEUAcc': None, 'ExemptedCredits': None, 'SalesCreditForeignAcc': None, 'ExpenseOffsettingAccount': None, 'WipAccount': None, 'ExchangeRateDifferencesAcct': None, 'GoodsClearingAcct': None, 'NegativeInventoryAdjustmentAccount': None, 'CostInflationOffsetAccount': None, 'GLDecreaseAcct': None, 'GLIncreaseAcct': None, 'PAReturnAcct': None, 'PurchaseAcct': None, 'PurchaseOffsetAcct': None, 'ShippedGoodsAccount': None, 'StockInflationOffsetAccount': None, 'StockInflationAdjustAccount': None, 'VATInRevenueAccount': None, 'WipVarianceAccount': None, 'CostInflationAccount': None, 'WHIncomingCenvatAccount': None, 'WHOutgoingCenvatAccount': None, 'StockInTransitAccount': None, 'WipOffsetProfitAndLossAccount': None, 'InventoryOffsetProfitAndLossAccount': None, 'DefaultBin': None, 'DefaultBinEnforced': 'tNO', 'PurchaseBalanceAccount': None, 'ItemCode': 'ACC-0000002', 'ItemCycleCounts': []}], 'ItemPreferredVendors': [], 'ItemLocalizationInfos': [], 'ItemProjects': [], 'ItemDistributionRules': [], 'ItemAttributeGroups': [], 'ItemDepreciationParameters': [], 'ItemPeriodControls': [], 'ItemUnitOfMeasurementCollection': [{'UoMType': 'iutInventory', 'UoMEntry': 1, 'DefaultBarcode': 0, 'DefaultPackage': None, 'Length1': 0.0, 'Length1Unit': None, 'Length2': 0.0, 'Length2Unit': None, 'Width1': 0.0, 'Width1Unit': None, 'Width2': 0.0, 'Width2Unit': None, 'Height1': 0.0, 'Height1Unit': None, 'Height2': 0.0, 'Height2Unit': None, 'Volume': 0.0, 'VolumeUnit': None, 'Weight1': 0.0, 'Weight1Unit': None, 'Weight2': 0.0, 'Weight2Unit': None, 'ItemUoMPackageCollection': []}, {'UoMType': 'iutPurchasing', 'UoMEntry': 1, 'DefaultBarcode': 0, 'DefaultPackage': None, 'Length1': 0.0, 'Length1Unit': None, 'Length2': 0.0, 'Length2Unit': None, 'Width1': 0.0, 'Width1Unit': None, 'Width2': 0.0, 'Width2Unit': None, 'Height1': 0.0, 'Height1Unit': None, 'Height2': 0.0, 'Height2Unit': None, 'Volume': 0.0, 'VolumeUnit': 2, 'Weight1': 0.0, 'Weight1Unit': None, 'Weight2': 0.0, 'Weight2Unit': None, 'ItemUoMPackageCollection': []}, {'UoMType': 'iutPurchasing', 'UoMEntry': 8, 'DefaultBarcode': None, 'DefaultPackage': None, 'Length1': 0.0, 'Length1Unit': None, 'Length2': 0.0, 'Length2Unit': None, 'Width1': 0.0, 'Width1Unit': None, 'Width2': 0.0, 'Width2Unit': None, 'Height1': 0.0, 'Height1Unit': None, 'Height2': 0.0, 'Height2Unit': None, 'Volume': 0.0, 'VolumeUnit': 4, 'Weight1': 0.0, 'Weight1Unit': None, 'Weight2': 0.0, 'Weight2Unit': None, 'ItemUoMPackageCollection': []}, {'UoMType': 'iutSales', 'UoMEntry': 1, 'DefaultBarcode': 0, 'DefaultPackage': None, 'Length1': 0.0, 'Length1Unit': None, 'Length2': 0.0, 'Length2Unit': None, 'Width1': 0.0, 'Width1Unit': None, 'Width2': 0.0, 'Width2Unit': None, 'Height1': 0.0, 'Height1Unit': None, 'Height2': 0.0, 'Height2Unit': None, 'Volume': 0.0, 'VolumeUnit': 2, 'Weight1': 0.0, 'Weight1Unit': None, 'Weight2': 0.0, 'Weight2Unit': None, 'ItemUoMPackageCollection': []}, {'UoMType': 'iutSales', 'UoMEntry': 8, 'DefaultBarcode': None, 'DefaultPackage': None, 'Length1': 0.0, 'Length1Unit': None, 'Length2': 0.0, 'Length2Unit': None, 'Width1': 0.0, 'Width1Unit': None, 'Width2': 0.0, 'Width2Unit': None, 'Height1': 0.0, 'Height1Unit': None, 'Height2': 0.0, 'Height2Unit': None, 'Volume': 0.0, 'VolumeUnit': 4, 'Weight1': 0.0, 'Weight1Unit': None, 'Weight2': 0.0, 'Weight2Unit': None, 'ItemUoMPackageCollection': []}], 'ItemBarCodeCollection': [], 'ItemIntrastatExtension': {'ItemCode': 'ACC-0000002', 'CommodityCode': None, 'SupplementaryUnit': None, 'FactorOfSupplementaryUnit': 0.0, 'ImportRegionState': 0, 'ExportRegionState': 0, 'ImportNatureOfTransaction': None, 'ExportNatureOfTransaction': None, 'ImportStatisticalProcedure': None, 'ExportStatisticalProcedure': None, 'CountryOfOrigin': None, 'ServiceCode': None, 'Type': 'dDocument_Items', 'ServiceSupplyMethod': 'ssmImmediate', 'ServicePaymentMethod': 'spmOther', 'ImportRegionCountry': 'GB', 'ExportRegionCountry': 'GB', 'UseWeightInCalculation': 'tYES', 'IntrastatRelevant': 'tNO', 'StatisticalCode': None}}, {'ItemCode': 'ACC-0000003', 'ItemName': 'Square With 1 Slits 10*10 CM', 'ForeignName': None, 'ItemsGroupCode': 110, 'CustomsGroupCode': -1, 'SalesVATGroup': 'X0', 'BarCode': None, 'VatLiable': 'tYES', 'PurchaseItem': 'tYES', 'SalesItem': 'tNO', 'InventoryItem': 'tYES', 'IncomeAccount': None, 'ExemptIncomeAccount': None, 'ExpanseAccount': None, 'Mainsupplier': None, 'SupplierCatalogNo': None, 'DesiredInventory': 0.0, 'MinInventory': 0.0, 'Picture': None, 'User_Text': None, 'SerialNum': None, 'CommissionPercent': 0.0, 'CommissionSum': 0.0, 'CommissionGroup': 0, 'TreeType': 'iNotATree', 'AssetItem': 'tNO', 'DataExportCode': None, 'Manufacturer': -1, 'QuantityOnStock': 17.0, 'QuantityOrderedFromVendors': 0.0, 'QuantityOrderedByCustomers': 0.0, 'ManageSerialNumbers': 'tNO', 'ManageBatchNumbers': 'tNO', 'Valid': 'tYES', 'ValidFrom': None, 'ValidTo': None, 'ValidRemarks': None, 'Frozen': 'tNO', 'FrozenFrom': None, 'FrozenTo': None, 'FrozenRemarks': None, 'SalesUnit': None, 'SalesItemsPerUnit': 1.0, 'SalesPackagingUnit': None, 'SalesQtyPerPackUnit': 1.0, 'SalesUnitLength': None, 'SalesLengthUnit': None, 'SalesUnitWidth': None, 'SalesWidthUnit': None, 'SalesUnitHeight': None, 'SalesHeightUnit': None, 'SalesUnitVolume': 0.0, 'SalesVolumeUnit': 4, 'SalesUnitWeight': None, 'SalesWeightUnit': None, 'PurchaseUnit': None, 'PurchaseItemsPerUnit': 1.0, 'PurchasePackagingUnit': None, 'PurchaseQtyPerPackUnit': 1.0, 'PurchaseUnitLength': None, 'PurchaseLengthUnit': None, 'PurchaseUnitWidth': None, 'PurchaseWidthUnit': None, 'PurchaseUnitHeight': None, 'PurchaseHeightUnit': None, 'PurchaseUnitVolume': 0.0, 'PurchaseVolumeUnit': 4, 'PurchaseUnitWeight': None, 'PurchaseWeightUnit': None, 'PurchaseVATGroup': 'X1', 'SalesFactor1': 1.0, 'SalesFactor2': 1.0, 'SalesFactor3': 1.0, 'SalesFactor4': 1.0, 'PurchaseFactor1': 1.0, 'PurchaseFactor2': 1.0, 'PurchaseFactor3': 1.0, 'PurchaseFactor4': 1.0, 'MovingAveragePrice': 0.0, 'ForeignRevenuesAccount': None, 'ECRevenuesAccount': None, 'ForeignExpensesAccount': None, 'ECExpensesAccount': None, 'AvgStdPrice': 0.0, 'DefaultWarehouse': None, 'ShipType': None, 'GLMethod': 'glm_ItemClass', 'TaxType': 'tt_Yes', 'MaxInventory': 0.0, 'ManageStockByWarehouse': 'tNO', 'PurchaseHeightUnit1': None, 'PurchaseUnitHeight1': None, 'PurchaseLengthUnit1': None, 'PurchaseUnitLength1': None, 'PurchaseWeightUnit1': None, 'PurchaseUnitWeight1': None, 'PurchaseWidthUnit1': None, 'PurchaseUnitWidth1': None, 'SalesHeightUnit1': None, 'SalesUnitHeight1': None, 'SalesLengthUnit1': None, 'SalesUnitLength1': None, 'SalesWeightUnit1': None, 'SalesUnitWeight1': None, 'SalesWidthUnit1': None, 'SalesUnitWidth1': None, 'ForceSelectionOfSerialNumber': 'tYES', 'ManageSerialNumbersOnReleaseOnly': 'tNO', 'WTLiable': 'tNO', 'CostAccountingMethod': 'bis_MovingAverage', 'SWW': None, 'WarrantyTemplate': '', 'IndirectTax': 'tNO', 'ArTaxCode': None, 'ApTaxCode': None, 'BaseUnitName': None, 'ItemCountryOrg': None, 'IssueMethod': 'im_Backflush', 'SRIAndBatchManageMethod': 'bomm_OnEveryTransaction', 'IsPhantom': 'tNO', 'InventoryUOM': 'Piece', 'PlanningSystem': 'bop_None', 'ProcurementMethod': 'bom_Buy', 'ComponentWarehouse': 'bomcw_BOM', 'OrderIntervals': None, 'OrderMultiple': 0.0, 'LeadTime': None, 'MinOrderQuantity': 0.0, 'ItemType': 'itItems', 'ItemClass': 'itcMaterial', 'OutgoingServiceCode': -1, 'IncomingServiceCode': -1, 'ServiceGroup': -1, 'NCMCode': -1, 'MaterialType': 'mt_FinishedGoods', 'MaterialGroup': -1, 'ProductSource': '', 'Properties1': 'tNO', 'Properties2': 'tNO', 'Properties3': 'tNO', 'Properties4': 'tNO', 'Properties5': 'tNO', 'Properties6': 'tNO', 'Properties7': 'tNO', 'Properties8': 'tNO', 'Properties9': 'tNO', 'Properties10': 'tNO', 'Properties11': 'tNO', 'Properties12': 'tNO', 'Properties13': 'tNO', 'Properties14': 'tNO', 'Properties15': 'tNO', 'Properties16': 'tNO', 'Properties17': 'tNO', 'Properties18': 'tNO', 'Properties19': 'tNO', 'Properties20': 'tNO', 'Properties21': 'tNO', 'Properties22': 'tNO', 'Properties23': 'tNO', 'Properties24': 'tNO', 'Properties25': 'tNO', 'Properties26': 'tNO', 'Properties27': 'tNO', 'Properties28': 'tNO', 'Properties29': 'tNO', 'Properties30': 'tNO', 'Properties31': 'tNO', 'Properties32': 'tNO', 'Properties33': 'tNO', 'Properties34': 'tNO', 'Properties35': 'tNO', 'Properties36': 'tNO', 'Properties37': 'tNO', 'Properties38': 'tNO', 'Properties39': 'tNO', 'Properties40': 'tNO', 'Properties41': 'tNO', 'Properties42': 'tNO', 'Properties43': 'tNO', 'Properties44': 'tNO', 'Properties45': 'tNO', 'Properties46': 'tNO', 'Properties47': 'tNO', 'Properties48': 'tNO', 'Properties49': 'tNO', 'Properties50': 'tNO', 'Properties51': 'tNO', 'Properties52': 'tNO', 'Properties53': 'tNO', 'Properties54': 'tNO', 'Properties55': 'tNO', 'Properties56': 'tNO', 'Properties57': 'tNO', 'Properties58': 'tNO', 'Properties59': 'tNO', 'Properties60': 'tNO', 'Properties61': 'tNO', 'Properties62': 'tNO', 'Properties63': 'tNO', 'Properties64': 'tNO', 'AutoCreateSerialNumbersOnRelease': 'tNO', 'DNFEntry': -1, 'GTSItemSpec': None, 'GTSItemTaxCategory': None, 'FuelID': None, 'BeverageTableCode': '', 'BeverageGroupCode': '', 'BeverageCommercialBrandCode': None, 'Series': 119, 'ToleranceDays': None, 'TypeOfAdvancedRules': 'toarGeneral', 'IssuePrimarilyBy': 'ipbBinLocations', 'NoDiscounts': 'tNO', 'AssetClass': '', 'AssetGroup': '', 'InventoryNumber': '', 'Technician': None, 'Employee': None, 'Location': None, 'AssetStatus': 'New', 'CapitalizationDate': None, 'StatisticalAsset': 'tNO', 'Cession': 'tNO', 'DeactivateAfterUsefulLife': 'tNO', 'ManageByQuantity': 'tNO', 'UoMGroupEntry': 1, 'InventoryUoMEntry': 1, 'DefaultSalesUoMEntry': None, 'DefaultPurchasingUoMEntry': None, 'DepreciationGroup': None, 'AssetSerialNumber': '', 'InventoryWeight': None, 'InventoryWeightUnit': None, 'InventoryWeight1': None, 'InventoryWeightUnit1': None, 'DefaultCountingUnit': 'Piece', 'CountingItemsPerUnit': 1.0, 'DefaultCountingUoMEntry': 1, 'Excisable': 'tNO', 'ChapterID': -1, 'ScsCode': None, 'SpProdType': None, 'ProdStdCost': 0.0, 'InCostRollup': 'tYES', 'VirtualAssetItem': 'tNO', 'EnforceAssetSerialNumbers': 'tNO', 'AttachmentEntry': None, 'LinkedResource': None, 'UpdateDate': '2025-01-26', 'UpdateTime': '09:34:55', 'GSTRelevnt': 'tNO', 'SACEntry': -1, 'GSTTaxCategory': 'gtc_Regular', 'ServiceCategoryEntry': -1, 'CapitalGoodsOnHoldPercent': 0.0, 'CapitalGoodsOnHoldLimit': 0.0, 'AssessableValue': 0.0, 'AssVal4WTR': 0.0, 'SOIExcisable': 'se_NotExcisable', 'TNVED': None, 'ImportedItem': 'tNO', 'PricingUnit': 1, 'CreateDate': '2025-01-26', 'CreateTime': '09:34:55', 'U_MfgH': None, 'U_Collection': None, 'U_OldCode': None, 'U_ItemsCat': None, 'U_NumberofSet': None, 'U_NileCode': None, 'U_TransferProductionLinkExclude': None, 'U_SBO_CodeType': 'GS1', 'U_SBO_EGSCode': None, 'U_ShopifyColor': None, 'U_SalesChannel': None, 'U_ShopifyItemIDLocal': None, 'U_ShopifyItemIDInternational': None, 'U_ParentCommercialName': None, 'ItemPrices': [{'PriceList': 1, 'Price': 0.0, 'Currency': None, 'AdditionalPrice1': 0.0, 'AdditionalCurrency1': None, 'AdditionalPrice2': 0.0, 'AdditionalCurrency2': None, 'BasePriceList': 1, 'Factor': 1.0, 'UoMPrices': []}, {'PriceList': 2, 'Price': 0.0, 'Currency': None, 'AdditionalPrice1': 0.0, 'AdditionalCurrency1': None, 'AdditionalPrice2': 0.0, 'AdditionalCurrency2': None, 'BasePriceList': 1, 'Factor': 0.4, 'UoMPrices': []}, {'PriceList': 3, 'Price': 0.0, 'Currency': None, 'AdditionalPrice1': 0.0, 'AdditionalCurrency1': None, 'AdditionalPrice2': 0.0, 'AdditionalCurrency2': None, 'BasePriceList': 3, 'Factor': 1.0, 'UoMPrices': []}, {'PriceList': 4, 'Price': 0.0, 'Currency': None, 'AdditionalPrice1': 0.0, 'AdditionalCurrency1': None, 'AdditionalPrice2': 0.0, 'AdditionalCurrency2': None, 'BasePriceList': 4, 'Factor': 1.0, 'UoMPrices': []}, {'PriceList': 5, 'Price': 0.0, 'Currency': None, 'AdditionalPrice1': 0.0, 'AdditionalCurrency1': None, 'AdditionalPrice2': 0.0, 'AdditionalCurrency2': None, 'BasePriceList': 5, 'Factor': 1.0, 'UoMPrices': []}, {'PriceList': 6, 'Price': 0.0, 'Currency': None, 'AdditionalPrice1': 0.0, 'AdditionalCurrency1': None, 'AdditionalPrice2': 0.0, 'AdditionalCurrency2': None, 'BasePriceList': 6, 'Factor': 1.0, 'UoMPrices': []}, {'PriceList': 7, 'Price': 0.0, 'Currency': None, 'AdditionalPrice1': 0.0, 'AdditionalCurrency1': None, 'AdditionalPrice2': 0.0, 'AdditionalCurrency2': None, 'BasePriceList': 7, 'Factor': 1.0, 'UoMPrices': []}, {'PriceList': 8, 'Price': 0.0, 'Currency': None, 'AdditionalPrice1': 0.0, 'AdditionalCurrency1': None, 'AdditionalPrice2': 0.0, 'AdditionalCurrency2': None, 'BasePriceList': 8, 'Factor': 1.0, 'UoMPrices': []}, {'PriceList': 9, 'Price': 0.0, 'Currency': None, 'AdditionalPrice1': 0.0, 'AdditionalCurrency1': None, 'AdditionalPrice2': 0.0, 'AdditionalCurrency2': None, 'BasePriceList': 9, 'Factor': 1.0, 'UoMPrices': []}, {'PriceList': 10, 'Price': 0.0, 'Currency': None, 'AdditionalPrice1': 0.0, 'AdditionalCurrency1': None, 'AdditionalPrice2': 0.0, 'AdditionalCurrency2': None, 'BasePriceList': 10, 'Factor': 1.0, 'UoMPrices': []}], 'ItemWarehouseInfoCollection': [{'MinimalStock': 0.0, 'MaximalStock': 0.0, 'MinimalOrder': 0.0, 'StandardAveragePrice': 250.0, 'Locked': 'tNO', 'InventoryAccount': None, 'CostAccount': None, 'TransferAccount': None, 'RevenuesAccount': None, 'VarienceAccount': None, 'DecreasingAccount': None, 'IncreasingAccount': None, 'ReturningAccount': None, 'ExpensesAccount': None, 'EURevenuesAccount': None, 'EUExpensesAccount': None, 'ForeignRevenueAcc': None, 'ForeignExpensAcc': None, 'ExemptIncomeAcc': None, 'PriceDifferenceAcc': None, 'WarehouseCode': '5A', 'InStock': 3.0, 'Committed': 0.0, 'Ordered': 0.0, 'CountedQuantity': 0.0, 'WasCounted': 'tNO', 'UserSignature': 50, 'Counted': 0.0, 'ExpenseClearingAct': None, 'PurchaseCreditAcc': None, 'EUPurchaseCreditAcc': None, 'ForeignPurchaseCreditAcc': None, 'SalesCreditAcc': None, 'SalesCreditEUAcc': None, 'ExemptedCredits': None, 'SalesCreditForeignAcc': None, 'ExpenseOffsettingAccount': None, 'WipAccount': None, 'ExchangeRateDifferencesAcct': None, 'GoodsClearingAcct': None, 'NegativeInventoryAdjustmentAccount': None, 'CostInflationOffsetAccount': None, 'GLDecreaseAcct': None, 'GLIncreaseAcct': None, 'PAReturnAcct': None, 'PurchaseAcct': None, 'PurchaseOffsetAcct': None, 'ShippedGoodsAccount': None, 'StockInflationOffsetAccount': None, 'StockInflationAdjustAccount': None, 'VATInRevenueAccount': None, 'WipVarianceAccount': None, 'CostInflationAccount': None, 'WHIncomingCenvatAccount': None, 'WHOutgoingCenvatAccount': None, 'StockInTransitAccount': None, 'WipOffsetProfitAndLossAccount': None, 'InventoryOffsetProfitAndLossAccount': None, 'DefaultBin': None, 'DefaultBinEnforced': 'tNO', 'PurchaseBalanceAccount': None, 'ItemCode': 'ACC-0000003', 'ItemCycleCounts': []}, {'MinimalStock': 0.0, 'MaximalStock': 0.0, 'MinimalOrder': 0.0, 'StandardAveragePrice': 250.0, 'Locked': 'tNO', 'InventoryAccount': None, 'CostAccount': None, 'TransferAccount': None, 'RevenuesAccount': None, 'VarienceAccount': None, 'DecreasingAccount': None, 'IncreasingAccount': None, 'ReturningAccount': None, 'ExpensesAccount': None, 'EURevenuesAccount': None, 'EUExpensesAccount': None, 'ForeignRevenueAcc': None, 'ForeignExpensAcc': None, 'ExemptIncomeAcc': None, 'PriceDifferenceAcc': None, 'WarehouseCode': 'Arkan', 'InStock': 14.0, 'Committed': 0.0, 'Ordered': 0.0, 'CountedQuantity': 0.0, 'WasCounted': 'tNO', 'UserSignature': 50, 'Counted': 0.0, 'ExpenseClearingAct': None, 'PurchaseCreditAcc': None, 'EUPurchaseCreditAcc': None, 'ForeignPurchaseCreditAcc': None, 'SalesCreditAcc': None, 'SalesCreditEUAcc': None, 'ExemptedCredits': None, 'SalesCreditForeignAcc': None, 'ExpenseOffsettingAccount': None, 'WipAccount': None, 'ExchangeRateDifferencesAcct': None, 'GoodsClearingAcct': None, 'NegativeInventoryAdjustmentAccount': None, 'CostInflationOffsetAccount': None, 'GLDecreaseAcct': None, 'GLIncreaseAcct': None, 'PAReturnAcct': None, 'PurchaseAcct': None, 'PurchaseOffsetAcct': None, 'ShippedGoodsAccount': None, 'StockInflationOffsetAccount': None, 'StockInflationAdjustAccount': None, 'VATInRevenueAccount': None, 'WipVarianceAccount': None, 'CostInflationAccount': None, 'WHIncomingCenvatAccount': None, 'WHOutgoingCenvatAccount': None, 'StockInTransitAccount': None, 'WipOffsetProfitAndLossAccount': None, 'InventoryOffsetProfitAndLossAccount': None, 'DefaultBin': None, 'DefaultBinEnforced': 'tNO', 'PurchaseBalanceAccount': None, 'ItemCode': 'ACC-0000003', 'ItemCycleCounts': []}, {'MinimalStock': 0.0, 'MaximalStock': 0.0, 'MinimalOrder': 0.0, 'StandardAveragePrice': 0.0, 'Locked': 'tNO', 'InventoryAccount': None, 'CostAccount': None, 'TransferAccount': None, 'RevenuesAccount': None, 'VarienceAccount': None, 'DecreasingAccount': None, 'IncreasingAccount': None, 'ReturningAccount': None, 'ExpensesAccount': None, 'EURevenuesAccount': None, 'EUExpensesAccount': None, 'ForeignRevenueAcc': None, 'ForeignExpensAcc': None, 'ExemptIncomeAcc': None, 'PriceDifferenceAcc': None, 'WarehouseCode': 'DIP', 'InStock': 0.0, 'Committed': 0.0, 'Ordered': 0.0, 'CountedQuantity': 0.0, 'WasCounted': 'tNO', 'UserSignature': 50, 'Counted': 0.0, 'ExpenseClearingAct': None, 'PurchaseCreditAcc': None, 'EUPurchaseCreditAcc': None, 'ForeignPurchaseCreditAcc': None, 'SalesCreditAcc': None, 'SalesCreditEUAcc': None, 'ExemptedCredits': None, 'SalesCreditForeignAcc': None, 'ExpenseOffsettingAccount': None, 'WipAccount': None, 'ExchangeRateDifferencesAcct': None, 'GoodsClearingAcct': None, 'NegativeInventoryAdjustmentAccount': None, 'CostInflationOffsetAccount': None, 'GLDecreaseAcct': None, 'GLIncreaseAcct': None, 'PAReturnAcct': None, 'PurchaseAcct': None, 'PurchaseOffsetAcct': None, 'ShippedGoodsAccount': None, 'StockInflationOffsetAccount': None, 'StockInflationAdjustAccount': None, 'VATInRevenueAccount': None, 'WipVarianceAccount': None, 'CostInflationAccount': None, 'WHIncomingCenvatAccount': None, 'WHOutgoingCenvatAccount': None, 'StockInTransitAccount': None, 'WipOffsetProfitAndLossAccount': None, 'InventoryOffsetProfitAndLossAccount': None, 'DefaultBin': None, 'DefaultBinEnforced': 'tNO', 'PurchaseBalanceAccount': None, 'ItemCode': 'ACC-0000003', 'ItemCycleCounts': []}, {'MinimalStock': 0.0, 'MaximalStock': 0.0, 'MinimalOrder': 0.0, 'StandardAveragePrice': 250.0, 'Locked': 'tNO', 'InventoryAccount': None, 'CostAccount': None, 'TransferAccount': None, 'RevenuesAccount': None, 'VarienceAccount': None, 'DecreasingAccount': None, 'IncreasingAccount': None, 'ReturningAccount': None, 'ExpensesAccount': None, 'EURevenuesAccount': None, 'EUExpensesAccount': None, 'ForeignRevenueAcc': None, 'ForeignExpensAcc': None, 'ExemptIncomeAcc': None, 'PriceDifferenceAcc': None, 'WarehouseCode': 'INC', 'InStock': 0.0, 'Committed': 0.0, 'Ordered': 0.0, 'CountedQuantity': 0.0, 'WasCounted': 'tNO', 'UserSignature': 50, 'Counted': 0.0, 'ExpenseClearingAct': None, 'PurchaseCreditAcc': None, 'EUPurchaseCreditAcc': None, 'ForeignPurchaseCreditAcc': None, 'SalesCreditAcc': None, 'SalesCreditEUAcc': None, 'ExemptedCredits': None, 'SalesCreditForeignAcc': None, 'ExpenseOffsettingAccount': None, 'WipAccount': None, 'ExchangeRateDifferencesAcct': None, 'GoodsClearingAcct': None, 'NegativeInventoryAdjustmentAccount': None, 'CostInflationOffsetAccount': None, 'GLDecreaseAcct': None, 'GLIncreaseAcct': None, 'PAReturnAcct': None, 'PurchaseAcct': None, 'PurchaseOffsetAcct': None, 'ShippedGoodsAccount': None, 'StockInflationOffsetAccount': None, 'StockInflationAdjustAccount': None, 'VATInRevenueAccount': None, 'WipVarianceAccount': None, 'CostInflationAccount': None, 'WHIncomingCenvatAccount': None, 'WHOutgoingCenvatAccount': None, 'StockInTransitAccount': None, 'WipOffsetProfitAndLossAccount': None, 'InventoryOffsetProfitAndLossAccount': None, 'DefaultBin': None, 'DefaultBinEnforced': 'tNO', 'PurchaseBalanceAccount': None, 'ItemCode': 'ACC-0000003', 'ItemCycleCounts': []}, {'MinimalStock': 0.0, 'MaximalStock': 0.0, 'MinimalOrder': 0.0, 'StandardAveragePrice': 0.0, 'Locked': 'tNO', 'InventoryAccount': None, 'CostAccount': None, 'TransferAccount': None, 'RevenuesAccount': None, 'VarienceAccount': None, 'DecreasingAccount': None, 'IncreasingAccount': None, 'ReturningAccount': None, 'ExpensesAccount': None, 'EURevenuesAccount': None, 'EUExpensesAccount': None, 'ForeignRevenueAcc': None, 'ForeignExpensAcc': None, 'ExemptIncomeAcc': None, 'PriceDifferenceAcc': None, 'WarehouseCode': 'ONL', 'InStock': 0.0, 'Committed': 0.0, 'Ordered': 0.0, 'CountedQuantity': 0.0, 'WasCounted': 'tNO', 'UserSignature': 50, 'Counted': 0.0, 'ExpenseClearingAct': None, 'PurchaseCreditAcc': None, 'EUPurchaseCreditAcc': None, 'ForeignPurchaseCreditAcc': None, 'SalesCreditAcc': None, 'SalesCreditEUAcc': None, 'ExemptedCredits': None, 'SalesCreditForeignAcc': None, 'ExpenseOffsettingAccount': None, 'WipAccount': None, 'ExchangeRateDifferencesAcct': None, 'GoodsClearingAcct': None, 'NegativeInventoryAdjustmentAccount': None, 'CostInflationOffsetAccount': None, 'GLDecreaseAcct': None, 'GLIncreaseAcct': None, 'PAReturnAcct': None, 'PurchaseAcct': None, 'PurchaseOffsetAcct': None, 'ShippedGoodsAccount': None, 'StockInflationOffsetAccount': None, 'StockInflationAdjustAccount': None, 'VATInRevenueAccount': None, 'WipVarianceAccount': None, 'CostInflationAccount': None, 'WHIncomingCenvatAccount': None, 'WHOutgoingCenvatAccount': None, 'StockInTransitAccount': None, 'WipOffsetProfitAndLossAccount': None, 'InventoryOffsetProfitAndLossAccount': None, 'DefaultBin': None, 'DefaultBinEnforced': 'tNO', 'PurchaseBalanceAccount': None, 'ItemCode': 'ACC-0000003', 'ItemCycleCounts': []}, {'MinimalStock': 0.0, 'MaximalStock': 0.0, 'MinimalOrder': 0.0, 'StandardAveragePrice': 0.0, 'Locked': 'tNO', 'InventoryAccount': None, 'CostAccount': None, 'TransferAccount': None, 'RevenuesAccount': None, 'VarienceAccount': None, 'DecreasingAccount': None, 'IncreasingAccount': None, 'ReturningAccount': None, 'ExpensesAccount': None, 'EURevenuesAccount': None, 'EUExpensesAccount': None, 'ForeignRevenueAcc': None, 'ForeignExpensAcc': None, 'ExemptIncomeAcc': None, 'PriceDifferenceAcc': None, 'WarehouseCode': 'PHO', 'InStock': 0.0, 'Committed': 0.0, 'Ordered': 0.0, 'CountedQuantity': 0.0, 'WasCounted': 'tNO', 'UserSignature': 50, 'Counted': 0.0, 'ExpenseClearingAct': None, 'PurchaseCreditAcc': None, 'EUPurchaseCreditAcc': None, 'ForeignPurchaseCreditAcc': None, 'SalesCreditAcc': None, 'SalesCreditEUAcc': None, 'ExemptedCredits': None, 'SalesCreditForeignAcc': None, 'ExpenseOffsettingAccount': None, 'WipAccount': None, 'ExchangeRateDifferencesAcct': None, 'GoodsClearingAcct': None, 'NegativeInventoryAdjustmentAccount': None, 'CostInflationOffsetAccount': None, 'GLDecreaseAcct': None, 'GLIncreaseAcct': None, 'PAReturnAcct': None, 'PurchaseAcct': None, 'PurchaseOffsetAcct': None, 'ShippedGoodsAccount': None, 'StockInflationOffsetAccount': None, 'StockInflationAdjustAccount': None, 'VATInRevenueAccount': None, 'WipVarianceAccount': None, 'CostInflationAccount': None, 'WHIncomingCenvatAccount': None, 'WHOutgoingCenvatAccount': None, 'StockInTransitAccount': None, 'WipOffsetProfitAndLossAccount': None, 'InventoryOffsetProfitAndLossAccount': None, 'DefaultBin': None, 'DefaultBinEnforced': 'tNO', 'PurchaseBalanceAccount': None, 'ItemCode': 'ACC-0000003', 'ItemCycleCounts': []}, {'MinimalStock': 0.0, 'MaximalStock': 0.0, 'MinimalOrder': 0.0, 'StandardAveragePrice': 0.0, 'Locked': 'tNO', 'InventoryAccount': None, 'CostAccount': None, 'TransferAccount': None, 'RevenuesAccount': None, 'VarienceAccount': None, 'DecreasingAccount': None, 'IncreasingAccount': None, 'ReturningAccount': None, 'ExpensesAccount': None, 'EURevenuesAccount': None, 'EUExpensesAccount': None, 'ForeignRevenueAcc': None, 'ForeignExpensAcc': None, 'ExemptIncomeAcc': None, 'PriceDifferenceAcc': None, 'WarehouseCode': 'PHO-EX', 'InStock': 0.0, 'Committed': 0.0, 'Ordered': 0.0, 'CountedQuantity': 0.0, 'WasCounted': 'tNO', 'UserSignature': 1, 'Counted': 0.0, 'ExpenseClearingAct': None, 'PurchaseCreditAcc': None, 'EUPurchaseCreditAcc': None, 'ForeignPurchaseCreditAcc': None, 'SalesCreditAcc': None, 'SalesCreditEUAcc': None, 'ExemptedCredits': None, 'SalesCreditForeignAcc': None, 'ExpenseOffsettingAccount': None, 'WipAccount': None, 'ExchangeRateDifferencesAcct': None, 'GoodsClearingAcct': None, 'NegativeInventoryAdjustmentAccount': None, 'CostInflationOffsetAccount': None, 'GLDecreaseAcct': None, 'GLIncreaseAcct': None, 'PAReturnAcct': None, 'PurchaseAcct': None, 'PurchaseOffsetAcct': None, 'ShippedGoodsAccount': None, 'StockInflationOffsetAccount': None, 'StockInflationAdjustAccount': None, 'VATInRevenueAccount': None, 'WipVarianceAccount': None, 'CostInflationAccount': None, 'WHIncomingCenvatAccount': None, 'WHOutgoingCenvatAccount': None, 'StockInTransitAccount': None, 'WipOffsetProfitAndLossAccount': None, 'InventoryOffsetProfitAndLossAccount': None, 'DefaultBin': None, 'DefaultBinEnforced': 'tNO', 'PurchaseBalanceAccount': None, 'ItemCode': 'ACC-0000003', 'ItemCycleCounts': []}, {'MinimalStock': 0.0, 'MaximalStock': 0.0, 'MinimalOrder': 0.0, 'StandardAveragePrice': 0.0, 'Locked': 'tNO', 'InventoryAccount': None, 'CostAccount': None, 'TransferAccount': None, 'RevenuesAccount': None, 'VarienceAccount': None, 'DecreasingAccount': None, 'IncreasingAccount': None, 'ReturningAccount': None, 'ExpensesAccount': None, 'EURevenuesAccount': None, 'EUExpensesAccount': None, 'ForeignRevenueAcc': None, 'ForeignExpensAcc': None, 'ExemptIncomeAcc': None, 'PriceDifferenceAcc': None, 'WarehouseCode': 'PHO-IN', 'InStock': 0.0, 'Committed': 0.0, 'Ordered': 0.0, 'CountedQuantity': 0.0, 'WasCounted': 'tNO', 'UserSignature': 1, 'Counted': 0.0, 'ExpenseClearingAct': None, 'PurchaseCreditAcc': None, 'EUPurchaseCreditAcc': None, 'ForeignPurchaseCreditAcc': None, 'SalesCreditAcc': None, 'SalesCreditEUAcc': None, 'ExemptedCredits': None, 'SalesCreditForeignAcc': None, 'ExpenseOffsettingAccount': None, 'WipAccount': None, 'ExchangeRateDifferencesAcct': None, 'GoodsClearingAcct': None, 'NegativeInventoryAdjustmentAccount': None, 'CostInflationOffsetAccount': None, 'GLDecreaseAcct': None, 'GLIncreaseAcct': None, 'PAReturnAcct': None, 'PurchaseAcct': None, 'PurchaseOffsetAcct': None, 'ShippedGoodsAccount': None, 'StockInflationOffsetAccount': None, 'StockInflationAdjustAccount': None, 'VATInRevenueAccount': None, 'WipVarianceAccount': None, 'CostInflationAccount': None, 'WHIncomingCenvatAccount': None, 'WHOutgoingCenvatAccount': None, 'StockInTransitAccount': None, 'WipOffsetProfitAndLossAccount': None, 'InventoryOffsetProfitAndLossAccount': None, 'DefaultBin': None, 'DefaultBinEnforced': 'tNO', 'PurchaseBalanceAccount': None, 'ItemCode': 'ACC-0000003', 'ItemCycleCounts': []}, {'MinimalStock': 0.0, 'MaximalStock': 0.0, 'MinimalOrder': 0.0, 'StandardAveragePrice': 0.0, 'Locked': 'tNO', 'InventoryAccount': None, 'CostAccount': None, 'TransferAccount': None, 'RevenuesAccount': None, 'VarienceAccount': None, 'DecreasingAccount': None, 'IncreasingAccount': None, 'ReturningAccount': None, 'ExpensesAccount': None, 'EURevenuesAccount': None, 'EUExpensesAccount': None, 'ForeignRevenueAcc': None, 'ForeignExpensAcc': None, 'ExemptIncomeAcc': None, 'PriceDifferenceAcc': None, 'WarehouseCode': 'RTW', 'InStock': 0.0, 'Committed': 0.0, 'Ordered': 0.0, 'CountedQuantity': 0.0, 'WasCounted': 'tNO', 'UserSignature': 50, 'Counted': 0.0, 'ExpenseClearingAct': None, 'PurchaseCreditAcc': None, 'EUPurchaseCreditAcc': None, 'ForeignPurchaseCreditAcc': None, 'SalesCreditAcc': None, 'SalesCreditEUAcc': None, 'ExemptedCredits': None, 'SalesCreditForeignAcc': None, 'ExpenseOffsettingAccount': None, 'WipAccount': None, 'ExchangeRateDifferencesAcct': None, 'GoodsClearingAcct': None, 'NegativeInventoryAdjustmentAccount': None, 'CostInflationOffsetAccount': None, 'GLDecreaseAcct': None, 'GLIncreaseAcct': None, 'PAReturnAcct': None, 'PurchaseAcct': None, 'PurchaseOffsetAcct': None, 'ShippedGoodsAccount': None, 'StockInflationOffsetAccount': None, 'StockInflationAdjustAccount': None, 'VATInRevenueAccount': None, 'WipVarianceAccount': None, 'CostInflationAccount': None, 'WHIncomingCenvatAccount': None, 'WHOutgoingCenvatAccount': None, 'StockInTransitAccount': None, 'WipOffsetProfitAndLossAccount': None, 'InventoryOffsetProfitAndLossAccount': None, 'DefaultBin': None, 'DefaultBinEnforced': 'tNO', 'PurchaseBalanceAccount': None, 'ItemCode': 'ACC-0000003', 'ItemCycleCounts': []}, {'MinimalStock': 0.0, 'MaximalStock': 0.0, 'MinimalOrder': 0.0, 'StandardAveragePrice': 0.0, 'Locked': 'tNO', 'InventoryAccount': None, 'CostAccount': None, 'TransferAccount': None, 'RevenuesAccount': None, 'VarienceAccount': None, 'DecreasingAccount': None, 'IncreasingAccount': None, 'ReturningAccount': None, 'ExpensesAccount': None, 'EURevenuesAccount': None, 'EUExpensesAccount': None, 'ForeignRevenueAcc': None, 'ForeignExpensAcc': None, 'ExemptIncomeAcc': None, 'PriceDifferenceAcc': None, 'WarehouseCode': 'RTWH', 'InStock': 0.0, 'Committed': 0.0, 'Ordered': 0.0, 'CountedQuantity': 0.0, 'WasCounted': 'tNO', 'UserSignature': 1, 'Counted': 0.0, 'ExpenseClearingAct': None, 'PurchaseCreditAcc': None, 'EUPurchaseCreditAcc': None, 'ForeignPurchaseCreditAcc': None, 'SalesCreditAcc': None, 'SalesCreditEUAcc': None, 'ExemptedCredits': None, 'SalesCreditForeignAcc': None, 'ExpenseOffsettingAccount': None, 'WipAccount': None, 'ExchangeRateDifferencesAcct': None, 'GoodsClearingAcct': None, 'NegativeInventoryAdjustmentAccount': None, 'CostInflationOffsetAccount': None, 'GLDecreaseAcct': None, 'GLIncreaseAcct': None, 'PAReturnAcct': None, 'PurchaseAcct': None, 'PurchaseOffsetAcct': None, 'ShippedGoodsAccount': None, 'StockInflationOffsetAccount': None, 'StockInflationAdjustAccount': None, 'VATInRevenueAccount': None, 'WipVarianceAccount': None, 'CostInflationAccount': None, 'WHIncomingCenvatAccount': None, 'WHOutgoingCenvatAccount': None, 'StockInTransitAccount': None, 'WipOffsetProfitAndLossAccount': None, 'InventoryOffsetProfitAndLossAccount': None, 'DefaultBin': None, 'DefaultBinEnforced': 'tNO', 'PurchaseBalanceAccount': None, 'ItemCode': 'ACC-0000003', 'ItemCycleCounts': []}, {'MinimalStock': 0.0, 'MaximalStock': 0.0, 'MinimalOrder': 0.0, 'StandardAveragePrice': 0.0, 'Locked': 'tNO', 'InventoryAccount': None, 'CostAccount': None, 'TransferAccount': None, 'RevenuesAccount': None, 'VarienceAccount': None, 'DecreasingAccount': None, 'IncreasingAccount': None, 'ReturningAccount': None, 'ExpensesAccount': None, 'EURevenuesAccount': None, 'EUExpensesAccount': None, 'ForeignRevenueAcc': None, 'ForeignExpensAcc': None, 'ExemptIncomeAcc': None, 'PriceDifferenceAcc': None, 'WarehouseCode': 'SW', 'InStock': 0.0, 'Committed': 0.0, 'Ordered': 0.0, 'CountedQuantity': 0.0, 'WasCounted': 'tNO', 'UserSignature': 50, 'Counted': 0.0, 'ExpenseClearingAct': None, 'PurchaseCreditAcc': None, 'EUPurchaseCreditAcc': None, 'ForeignPurchaseCreditAcc': None, 'SalesCreditAcc': None, 'SalesCreditEUAcc': None, 'ExemptedCredits': None, 'SalesCreditForeignAcc': None, 'ExpenseOffsettingAccount': None, 'WipAccount': None, 'ExchangeRateDifferencesAcct': None, 'GoodsClearingAcct': None, 'NegativeInventoryAdjustmentAccount': None, 'CostInflationOffsetAccount': None, 'GLDecreaseAcct': None, 'GLIncreaseAcct': None, 'PAReturnAcct': None, 'PurchaseAcct': None, 'PurchaseOffsetAcct': None, 'ShippedGoodsAccount': None, 'StockInflationOffsetAccount': None, 'StockInflationAdjustAccount': None, 'VATInRevenueAccount': None, 'WipVarianceAccount': None, 'CostInflationAccount': None, 'WHIncomingCenvatAccount': None, 'WHOutgoingCenvatAccount': None, 'StockInTransitAccount': None, 'WipOffsetProfitAndLossAccount': None, 'InventoryOffsetProfitAndLossAccount': None, 'DefaultBin': None, 'DefaultBinEnforced': 'tNO', 'PurchaseBalanceAccount': None, 'ItemCode': 'ACC-0000003', 'ItemCycleCounts': []}, {'MinimalStock': 0.0, 'MaximalStock': 0.0, 'MinimalOrder': 0.0, 'StandardAveragePrice': 0.0, 'Locked': 'tNO', 'InventoryAccount': None, 'CostAccount': None, 'TransferAccount': None, 'RevenuesAccount': None, 'VarienceAccount': None, 'DecreasingAccount': None, 'IncreasingAccount': None, 'ReturningAccount': None, 'ExpensesAccount': None, 'EURevenuesAccount': None, 'EUExpensesAccount': None, 'ForeignRevenueAcc': None, 'ForeignExpensAcc': None, 'ExemptIncomeAcc': None, 'PriceDifferenceAcc': None, 'WarehouseCode': 'WLS', 'InStock': 0.0, 'Committed': 0.0, 'Ordered': 0.0, 'CountedQuantity': 0.0, 'WasCounted': 'tNO', 'UserSignature': 50, 'Counted': 0.0, 'ExpenseClearingAct': None, 'PurchaseCreditAcc': None, 'EUPurchaseCreditAcc': None, 'ForeignPurchaseCreditAcc': None, 'SalesCreditAcc': None, 'SalesCreditEUAcc': None, 'ExemptedCredits': None, 'SalesCreditForeignAcc': None, 'ExpenseOffsettingAccount': None, 'WipAccount': None, 'ExchangeRateDifferencesAcct': None, 'GoodsClearingAcct': None, 'NegativeInventoryAdjustmentAccount': None, 'CostInflationOffsetAccount': None, 'GLDecreaseAcct': None, 'GLIncreaseAcct': None, 'PAReturnAcct': None, 'PurchaseAcct': None, 'PurchaseOffsetAcct': None, 'ShippedGoodsAccount': None, 'StockInflationOffsetAccount': None, 'StockInflationAdjustAccount': None, 'VATInRevenueAccount': None, 'WipVarianceAccount': None, 'CostInflationAccount': None, 'WHIncomingCenvatAccount': None, 'WHOutgoingCenvatAccount': None, 'StockInTransitAccount': None, 'WipOffsetProfitAndLossAccount': None, 'InventoryOffsetProfitAndLossAccount': None, 'DefaultBin': None, 'DefaultBinEnforced': 'tNO', 'PurchaseBalanceAccount': None, 'ItemCode': 'ACC-0000003', 'ItemCycleCounts': []}, {'MinimalStock': 0.0, 'MaximalStock': 0.0, 'MinimalOrder': 0.0, 'StandardAveragePrice': 0.0, 'Locked': 'tNO', 'InventoryAccount': None, 'CostAccount': None, 'TransferAccount': None, 'RevenuesAccount': None, 'VarienceAccount': None, 'DecreasingAccount': None, 'IncreasingAccount': None, 'ReturningAccount': None, 'ExpensesAccount': None, 'EURevenuesAccount': None, 'EUExpensesAccount': None, 'ForeignRevenueAcc': None, 'ForeignExpensAcc': None, 'ExemptIncomeAcc': None, 'PriceDifferenceAcc': None, 'WarehouseCode': 'WW', 'InStock': 0.0, 'Committed': 0.0, 'Ordered': 0.0, 'CountedQuantity': 0.0, 'WasCounted': 'tNO', 'UserSignature': 50, 'Counted': 0.0, 'ExpenseClearingAct': None, 'PurchaseCreditAcc': None, 'EUPurchaseCreditAcc': None, 'ForeignPurchaseCreditAcc': None, 'SalesCreditAcc': None, 'SalesCreditEUAcc': None, 'ExemptedCredits': None, 'SalesCreditForeignAcc': None, 'ExpenseOffsettingAccount': None, 'WipAccount': None, 'ExchangeRateDifferencesAcct': None, 'GoodsClearingAcct': None, 'NegativeInventoryAdjustmentAccount': None, 'CostInflationOffsetAccount': None, 'GLDecreaseAcct': None, 'GLIncreaseAcct': None, 'PAReturnAcct': None, 'PurchaseAcct': None, 'PurchaseOffsetAcct': None, 'ShippedGoodsAccount': None, 'StockInflationOffsetAccount': None, 'StockInflationAdjustAccount': None, 'VATInRevenueAccount': None, 'WipVarianceAccount': None, 'CostInflationAccount': None, 'WHIncomingCenvatAccount': None, 'WHOutgoingCenvatAccount': None, 'StockInTransitAccount': None, 'WipOffsetProfitAndLossAccount': None, 'InventoryOffsetProfitAndLossAccount': None, 'DefaultBin': None, 'DefaultBinEnforced': 'tNO', 'PurchaseBalanceAccount': None, 'ItemCode': 'ACC-0000003', 'ItemCycleCounts': []}, {'MinimalStock': 0.0, 'MaximalStock': 0.0, 'MinimalOrder': 0.0, 'StandardAveragePrice': 0.0, 'Locked': 'tNO', 'InventoryAccount': None, 'CostAccount': None, 'TransferAccount': None, 'RevenuesAccount': None, 'VarienceAccount': None, 'DecreasingAccount': None, 'IncreasingAccount': None, 'ReturningAccount': None, 'ExpensesAccount': None, 'EURevenuesAccount': None, 'EUExpensesAccount': None, 'ForeignRevenueAcc': None, 'ForeignExpensAcc': None, 'ExemptIncomeAcc': None, 'PriceDifferenceAcc': None, 'WarehouseCode': 'WW-CON', 'InStock': 0.0, 'Committed': 0.0, 'Ordered': 0.0, 'CountedQuantity': 0.0, 'WasCounted': 'tNO', 'UserSignature': 50, 'Counted': 0.0, 'ExpenseClearingAct': None, 'PurchaseCreditAcc': None, 'EUPurchaseCreditAcc': None, 'ForeignPurchaseCreditAcc': None, 'SalesCreditAcc': None, 'SalesCreditEUAcc': None, 'ExemptedCredits': None, 'SalesCreditForeignAcc': None, 'ExpenseOffsettingAccount': None, 'WipAccount': None, 'ExchangeRateDifferencesAcct': None, 'GoodsClearingAcct': None, 'NegativeInventoryAdjustmentAccount': None, 'CostInflationOffsetAccount': None, 'GLDecreaseAcct': None, 'GLIncreaseAcct': None, 'PAReturnAcct': None, 'PurchaseAcct': None, 'PurchaseOffsetAcct': None, 'ShippedGoodsAccount': None, 'StockInflationOffsetAccount': None, 'StockInflationAdjustAccount': None, 'VATInRevenueAccount': None, 'WipVarianceAccount': None, 'CostInflationAccount': None, 'WHIncomingCenvatAccount': None, 'WHOutgoingCenvatAccount': None, 'StockInTransitAccount': None, 'WipOffsetProfitAndLossAccount': None, 'InventoryOffsetProfitAndLossAccount': None, 'DefaultBin': None, 'DefaultBinEnforced': 'tNO', 'PurchaseBalanceAccount': None, 'ItemCode': 'ACC-0000003', 'ItemCycleCounts': []}, {'MinimalStock': 0.0, 'MaximalStock': 0.0, 'MinimalOrder': 0.0, 'StandardAveragePrice': 0.0, 'Locked': 'tNO', 'InventoryAccount': None, 'CostAccount': None, 'TransferAccount': None, 'RevenuesAccount': None, 'VarienceAccount': None, 'DecreasingAccount': None, 'IncreasingAccount': None, 'ReturningAccount': None, 'ExpensesAccount': None, 'EURevenuesAccount': None, 'EUExpensesAccount': None, 'ForeignRevenueAcc': None, 'ForeignExpensAcc': None, 'ExemptIncomeAcc': None, 'PriceDifferenceAcc': None, 'WarehouseCode': 'WW-DAM', 'InStock': 0.0, 'Committed': 0.0, 'Ordered': 0.0, 'CountedQuantity': 0.0, 'WasCounted': 'tNO', 'UserSignature': 50, 'Counted': 0.0, 'ExpenseClearingAct': None, 'PurchaseCreditAcc': None, 'EUPurchaseCreditAcc': None, 'ForeignPurchaseCreditAcc': None, 'SalesCreditAcc': None, 'SalesCreditEUAcc': None, 'ExemptedCredits': None, 'SalesCreditForeignAcc': None, 'ExpenseOffsettingAccount': None, 'WipAccount': None, 'ExchangeRateDifferencesAcct': None, 'GoodsClearingAcct': None, 'NegativeInventoryAdjustmentAccount': None, 'CostInflationOffsetAccount': None, 'GLDecreaseAcct': None, 'GLIncreaseAcct': None, 'PAReturnAcct': None, 'PurchaseAcct': None, 'PurchaseOffsetAcct': None, 'ShippedGoodsAccount': None, 'StockInflationOffsetAccount': None, 'StockInflationAdjustAccount': None, 'VATInRevenueAccount': None, 'WipVarianceAccount': None, 'CostInflationAccount': None, 'WHIncomingCenvatAccount': None, 'WHOutgoingCenvatAccount': None, 'StockInTransitAccount': None, 'WipOffsetProfitAndLossAccount': None, 'InventoryOffsetProfitAndLossAccount': None, 'DefaultBin': None, 'DefaultBinEnforced': 'tNO', 'PurchaseBalanceAccount': None, 'ItemCode': 'ACC-0000003', 'ItemCycleCounts': []}, {'MinimalStock': 0.0, 'MaximalStock': 0.0, 'MinimalOrder': 0.0, 'StandardAveragePrice': 0.0, 'Locked': 'tNO', 'InventoryAccount': None, 'CostAccount': None, 'TransferAccount': None, 'RevenuesAccount': None, 'VarienceAccount': None, 'DecreasingAccount': None, 'IncreasingAccount': None, 'ReturningAccount': None, 'ExpensesAccount': None, 'EURevenuesAccount': None, 'EUExpensesAccount': None, 'ForeignRevenueAcc': None, 'ForeignExpensAcc': None, 'ExemptIncomeAcc': None, 'PriceDifferenceAcc': None, 'WarehouseCode': 'WW-REP', 'InStock': 0.0, 'Committed': 0.0, 'Ordered': 0.0, 'CountedQuantity': 0.0, 'WasCounted': 'tNO', 'UserSignature': 50, 'Counted': 0.0, 'ExpenseClearingAct': None, 'PurchaseCreditAcc': None, 'EUPurchaseCreditAcc': None, 'ForeignPurchaseCreditAcc': None, 'SalesCreditAcc': None, 'SalesCreditEUAcc': None, 'ExemptedCredits': None, 'SalesCreditForeignAcc': None, 'ExpenseOffsettingAccount': None, 'WipAccount': None, 'ExchangeRateDifferencesAcct': None, 'GoodsClearingAcct': None, 'NegativeInventoryAdjustmentAccount': None, 'CostInflationOffsetAccount': None, 'GLDecreaseAcct': None, 'GLIncreaseAcct': None, 'PAReturnAcct': None, 'PurchaseAcct': None, 'PurchaseOffsetAcct': None, 'ShippedGoodsAccount': None, 'StockInflationOffsetAccount': None, 'StockInflationAdjustAccount': None, 'VATInRevenueAccount': None, 'WipVarianceAccount': None, 'CostInflationAccount': None, 'WHIncomingCenvatAccount': None, 'WHOutgoingCenvatAccount': None, 'StockInTransitAccount': None, 'WipOffsetProfitAndLossAccount': None, 'InventoryOffsetProfitAndLossAccount': None, 'DefaultBin': None, 'DefaultBinEnforced': 'tNO', 'PurchaseBalanceAccount': None, 'ItemCode': 'ACC-0000003', 'ItemCycleCounts': []}, {'MinimalStock': 0.0, 'MaximalStock': 0.0, 'MinimalOrder': 0.0, 'StandardAveragePrice': 0.0, 'Locked': 'tNO', 'InventoryAccount': None, 'CostAccount': None, 'TransferAccount': None, 'RevenuesAccount': None, 'VarienceAccount': None, 'DecreasingAccount': None, 'IncreasingAccount': None, 'ReturningAccount': None, 'ExpensesAccount': None, 'EURevenuesAccount': None, 'EUExpensesAccount': None, 'ForeignRevenueAcc': None, 'ForeignExpensAcc': None, 'ExemptIncomeAcc': None, 'PriceDifferenceAcc': None, 'WarehouseCode': 'WW-SAM', 'InStock': 0.0, 'Committed': 0.0, 'Ordered': 0.0, 'CountedQuantity': 0.0, 'WasCounted': 'tNO', 'UserSignature': 50, 'Counted': 0.0, 'ExpenseClearingAct': None, 'PurchaseCreditAcc': None, 'EUPurchaseCreditAcc': None, 'ForeignPurchaseCreditAcc': None, 'SalesCreditAcc': None, 'SalesCreditEUAcc': None, 'ExemptedCredits': None, 'SalesCreditForeignAcc': None, 'ExpenseOffsettingAccount': None, 'WipAccount': None, 'ExchangeRateDifferencesAcct': None, 'GoodsClearingAcct': None, 'NegativeInventoryAdjustmentAccount': None, 'CostInflationOffsetAccount': None, 'GLDecreaseAcct': None, 'GLIncreaseAcct': None, 'PAReturnAcct': None, 'PurchaseAcct': None, 'PurchaseOffsetAcct': None, 'ShippedGoodsAccount': None, 'StockInflationOffsetAccount': None, 'StockInflationAdjustAccount': None, 'VATInRevenueAccount': None, 'WipVarianceAccount': None, 'CostInflationAccount': None, 'WHIncomingCenvatAccount': None, 'WHOutgoingCenvatAccount': None, 'StockInTransitAccount': None, 'WipOffsetProfitAndLossAccount': None, 'InventoryOffsetProfitAndLossAccount': None, 'DefaultBin': None, 'DefaultBinEnforced': 'tNO', 'PurchaseBalanceAccount': None, 'ItemCode': 'ACC-0000003', 'ItemCycleCounts': []}, {'MinimalStock': 0.0, 'MaximalStock': 0.0, 'MinimalOrder': 0.0, 'StandardAveragePrice': 0.0, 'Locked': 'tNO', 'InventoryAccount': None, 'CostAccount': None, 'TransferAccount': None, 'RevenuesAccount': None, 'VarienceAccount': None, 'DecreasingAccount': None, 'IncreasingAccount': None, 'ReturningAccount': None, 'ExpensesAccount': None, 'EURevenuesAccount': None, 'EUExpensesAccount': None, 'ForeignRevenueAcc': None, 'ForeignExpensAcc': None, 'ExemptIncomeAcc': None, 'PriceDifferenceAcc': None, 'WarehouseCode': 'WW-WIP', 'InStock': 0.0, 'Committed': 0.0, 'Ordered': 0.0, 'CountedQuantity': 0.0, 'WasCounted': 'tNO', 'UserSignature': 50, 'Counted': 0.0, 'ExpenseClearingAct': None, 'PurchaseCreditAcc': None, 'EUPurchaseCreditAcc': None, 'ForeignPurchaseCreditAcc': None, 'SalesCreditAcc': None, 'SalesCreditEUAcc': None, 'ExemptedCredits': None, 'SalesCreditForeignAcc': None, 'ExpenseOffsettingAccount': None, 'WipAccount': None, 'ExchangeRateDifferencesAcct': None, 'GoodsClearingAcct': None, 'NegativeInventoryAdjustmentAccount': None, 'CostInflationOffsetAccount': None, 'GLDecreaseAcct': None, 'GLIncreaseAcct': None, 'PAReturnAcct': None, 'PurchaseAcct': None, 'PurchaseOffsetAcct': None, 'ShippedGoodsAccount': None, 'StockInflationOffsetAccount': None, 'StockInflationAdjustAccount': None, 'VATInRevenueAccount': None, 'WipVarianceAccount': None, 'CostInflationAccount': None, 'WHIncomingCenvatAccount': None, 'WHOutgoingCenvatAccount': None, 'StockInTransitAccount': None, 'WipOffsetProfitAndLossAccount': None, 'InventoryOffsetProfitAndLossAccount': None, 'DefaultBin': None, 'DefaultBinEnforced': 'tNO', 'PurchaseBalanceAccount': None, 'ItemCode': 'ACC-0000003', 'ItemCycleCounts': []}, {'MinimalStock': 0.0, 'MaximalStock': 0.0, 'MinimalOrder': 0.0, 'StandardAveragePrice': 0.0, 'Locked': 'tNO', 'InventoryAccount': None, 'CostAccount': None, 'TransferAccount': None, 'RevenuesAccount': None, 'VarienceAccount': None, 'DecreasingAccount': None, 'IncreasingAccount': None, 'ReturningAccount': None, 'ExpensesAccount': None, 'EURevenuesAccount': None, 'EUExpensesAccount': None, 'ForeignRevenueAcc': None, 'ForeignExpensAcc': None, 'ExemptIncomeAcc': None, 'PriceDifferenceAcc': None, 'WarehouseCode': 'ZW', 'InStock': 0.0, 'Committed': 0.0, 'Ordered': 0.0, 'CountedQuantity': 0.0, 'WasCounted': 'tNO', 'UserSignature': 50, 'Counted': 0.0, 'ExpenseClearingAct': None, 'PurchaseCreditAcc': None, 'EUPurchaseCreditAcc': None, 'ForeignPurchaseCreditAcc': None, 'SalesCreditAcc': None, 'SalesCreditEUAcc': None, 'ExemptedCredits': None, 'SalesCreditForeignAcc': None, 'ExpenseOffsettingAccount': None, 'WipAccount': None, 'ExchangeRateDifferencesAcct': None, 'GoodsClearingAcct': None, 'NegativeInventoryAdjustmentAccount': None, 'CostInflationOffsetAccount': None, 'GLDecreaseAcct': None, 'GLIncreaseAcct': None, 'PAReturnAcct': None, 'PurchaseAcct': None, 'PurchaseOffsetAcct': None, 'ShippedGoodsAccount': None, 'StockInflationOffsetAccount': None, 'StockInflationAdjustAccount': None, 'VATInRevenueAccount': None, 'WipVarianceAccount': None, 'CostInflationAccount': None, 'WHIncomingCenvatAccount': None, 'WHOutgoingCenvatAccount': None, 'StockInTransitAccount': None, 'WipOffsetProfitAndLossAccount': None, 'InventoryOffsetProfitAndLossAccount': None, 'DefaultBin': None, 'DefaultBinEnforced': 'tNO', 'PurchaseBalanceAccount': None, 'ItemCode': 'ACC-0000003', 'ItemCycleCounts': []}], 'ItemPreferredVendors': [], 'ItemLocalizationInfos': [], 'ItemProjects': [], 'ItemDistributionRules': [], 'ItemAttributeGroups': [], 'ItemDepreciationParameters': [], 'ItemPeriodControls': [], 'ItemUnitOfMeasurementCollection': [{'UoMType': 'iutInventory', 'UoMEntry': 1, 'DefaultBarcode': 0, 'DefaultPackage': None, 'Length1': 0.0, 'Length1Unit': None, 'Length2': 0.0, 'Length2Unit': None, 'Width1': 0.0, 'Width1Unit': None, 'Width2': 0.0, 'Width2Unit': None, 'Height1': 0.0, 'Height1Unit': None, 'Height2': 0.0, 'Height2Unit': None, 'Volume': 0.0, 'VolumeUnit': None, 'Weight1': 0.0, 'Weight1Unit': None, 'Weight2': 0.0, 'Weight2Unit': None, 'ItemUoMPackageCollection': []}, {'UoMType': 'iutPurchasing', 'UoMEntry': 1, 'DefaultBarcode': 0, 'DefaultPackage': None, 'Length1': 0.0, 'Length1Unit': None, 'Length2': 0.0, 'Length2Unit': None, 'Width1': 0.0, 'Width1Unit': None, 'Width2': 0.0, 'Width2Unit': None, 'Height1': 0.0, 'Height1Unit': None, 'Height2': 0.0, 'Height2Unit': None, 'Volume': 0.0, 'VolumeUnit': 2, 'Weight1': 0.0, 'Weight1Unit': None, 'Weight2': 0.0, 'Weight2Unit': None, 'ItemUoMPackageCollection': []}, {'UoMType': 'iutPurchasing', 'UoMEntry': 8, 'DefaultBarcode': None, 'DefaultPackage': None, 'Length1': 0.0, 'Length1Unit': None, 'Length2': 0.0, 'Length2Unit': None, 'Width1': 0.0, 'Width1Unit': None, 'Width2': 0.0, 'Width2Unit': None, 'Height1': 0.0, 'Height1Unit': None, 'Height2': 0.0, 'Height2Unit': None, 'Volume': 0.0, 'VolumeUnit': 4, 'Weight1': 0.0, 'Weight1Unit': None, 'Weight2': 0.0, 'Weight2Unit': None, 'ItemUoMPackageCollection': []}, {'UoMType': 'iutSales', 'UoMEntry': 1, 'DefaultBarcode': 0, 'DefaultPackage': None, 'Length1': 0.0, 'Length1Unit': None, 'Length2': 0.0, 'Length2Unit': None, 'Width1': 0.0, 'Width1Unit': None, 'Width2': 0.0, 'Width2Unit': None, 'Height1': 0.0, 'Height1Unit': None, 'Height2': 0.0, 'Height2Unit': None, 'Volume': 0.0, 'VolumeUnit': 2, 'Weight1': 0.0, 'Weight1Unit': None, 'Weight2': 0.0, 'Weight2Unit': None, 'ItemUoMPackageCollection': []}, {'UoMType': 'iutSales', 'UoMEntry': 8, 'DefaultBarcode': None, 'DefaultPackage': None, 'Length1': 0.0, 'Length1Unit': None, 'Length2': 0.0, 'Length2Unit': None, 'Width1': 0.0, 'Width1Unit': None, 'Width2': 0.0, 'Width2Unit': None, 'Height1': 0.0, 'Height1Unit': None, 'Height2': 0.0, 'Height2Unit': None, 'Volume': 0.0, 'VolumeUnit': 4, 'Weight1': 0.0, 'Weight1Unit': None, 'Weight2': 0.0, 'Weight2Unit': None, 'ItemUoMPackageCollection': []}], 'ItemBarCodeCollection': [], 'ItemIntrastatExtension': {'ItemCode': 'ACC-0000003', 'CommodityCode': None, 'SupplementaryUnit': None, 'FactorOfSupplementaryUnit': 0.0, 'ImportRegionState': 0, 'ExportRegionState': 0, 'ImportNatureOfTransaction': None, 'ExportNatureOfTransaction': None, 'ImportStatisticalProcedure': None, 'ExportStatisticalProcedure': None, 'CountryOfOrigin': None, 'ServiceCode': None, 'Type': 'dDocument_Items', 'ServiceSupplyMethod': 'ssmImmediate', 'ServicePaymentMethod': 'spmOther', 'ImportRegionCountry': 'GB', 'ExportRegionCountry': 'GB', 'UseWeightInCalculation': 'tYES', 'IntrastatRelevant': 'tNO', 'StatisticalCode': None}}, {'ItemCode': 'ACC-0000004', 'ItemName': 'Earring / Bracelet Plates 10*10 CM', 'ForeignName': None, 'ItemsGroupCode': 110, 'CustomsGroupCode': -1, 'SalesVATGroup': 'X0', 'BarCode': None, 'VatLiable': 'tYES', 'PurchaseItem': 'tYES', 'SalesItem': 'tNO', 'InventoryItem': 'tYES', 'IncomeAccount': None, 'ExemptIncomeAccount': None, 'ExpanseAccount': None, 'Mainsupplier': None, 'SupplierCatalogNo': None, 'DesiredInventory': 0.0, 'MinInventory': 0.0, 'Picture': None, 'User_Text': None, 'SerialNum': None, 'CommissionPercent': 0.0, 'CommissionSum': 0.0, 'CommissionGroup': 0, 'TreeType': 'iNotATree', 'AssetItem': 'tNO', 'DataExportCode': None, 'Manufacturer': -1, 'QuantityOnStock': 35.0, 'QuantityOrderedFromVendors': 0.0, 'QuantityOrderedByCustomers': 0.0, 'ManageSerialNumbers': 'tNO', 'ManageBatchNumbers': 'tNO', 'Valid': 'tYES', 'ValidFrom': None, 'ValidTo': None, 'ValidRemarks': None, 'Frozen': 'tNO', 'FrozenFrom': None, 'FrozenTo': None, 'FrozenRemarks': None, 'SalesUnit': None, 'SalesItemsPerUnit': 1.0, 'SalesPackagingUnit': None, 'SalesQtyPerPackUnit': 1.0, 'SalesUnitLength': None, 'SalesLengthUnit': None, 'SalesUnitWidth': None, 'SalesWidthUnit': None, 'SalesUnitHeight': None, 'SalesHeightUnit': None, 'SalesUnitVolume': 0.0, 'SalesVolumeUnit': 4, 'SalesUnitWeight': None, 'SalesWeightUnit': None, 'PurchaseUnit': None, 'PurchaseItemsPerUnit': 1.0, 'PurchasePackagingUnit': None, 'PurchaseQtyPerPackUnit': 1.0, 'PurchaseUnitLength': None, 'PurchaseLengthUnit': None, 'PurchaseUnitWidth': None, 'PurchaseWidthUnit': None, 'PurchaseUnitHeight': None, 'PurchaseHeightUnit': None, 'PurchaseUnitVolume': 0.0, 'PurchaseVolumeUnit': 4, 'PurchaseUnitWeight': None, 'PurchaseWeightUnit': None, 'PurchaseVATGroup': 'X1', 'SalesFactor1': 1.0, 'SalesFactor2': 1.0, 'SalesFactor3': 1.0, 'SalesFactor4': 1.0, 'PurchaseFactor1': 1.0, 'PurchaseFactor2': 1.0, 'PurchaseFactor3': 1.0, 'PurchaseFactor4': 1.0, 'MovingAveragePrice': 0.0, 'ForeignRevenuesAccount': None, 'ECRevenuesAccount': None, 'ForeignExpensesAccount': None, 'ECExpensesAccount': None, 'AvgStdPrice': 0.0, 'DefaultWarehouse': None, 'ShipType': None, 'GLMethod': 'glm_ItemClass', 'TaxType': 'tt_Yes', 'MaxInventory': 0.0, 'ManageStockByWarehouse': 'tNO', 'PurchaseHeightUnit1': None, 'PurchaseUnitHeight1': None, 'PurchaseLengthUnit1': None, 'PurchaseUnitLength1': None, 'PurchaseWeightUnit1': None, 'PurchaseUnitWeight1': None, 'PurchaseWidthUnit1': None, 'PurchaseUnitWidth1': None, 'SalesHeightUnit1': None, 'SalesUnitHeight1': None, 'SalesLengthUnit1': None, 'SalesUnitLength1': None, 'SalesWeightUnit1': None, 'SalesUnitWeight1': None, 'SalesWidthUnit1': None, 'SalesUnitWidth1': None, 'ForceSelectionOfSerialNumber': 'tYES', 'ManageSerialNumbersOnReleaseOnly': 'tNO', 'WTLiable': 'tNO', 'CostAccountingMethod': 'bis_MovingAverage', 'SWW': None, 'WarrantyTemplate': '', 'IndirectTax': 'tNO', 'ArTaxCode': None, 'ApTaxCode': None, 'BaseUnitName': None, 'ItemCountryOrg': None, 'IssueMethod': 'im_Backflush', 'SRIAndBatchManageMethod': 'bomm_OnEveryTransaction', 'IsPhantom': 'tNO', 'InventoryUOM': 'Piece', 'PlanningSystem': 'bop_None', 'ProcurementMethod': 'bom_Buy', 'ComponentWarehouse': 'bomcw_BOM', 'OrderIntervals': None, 'OrderMultiple': 0.0, 'LeadTime': None, 'MinOrderQuantity': 0.0, 'ItemType': 'itItems', 'ItemClass': 'itcMaterial', 'OutgoingServiceCode': -1, 'IncomingServiceCode': -1, 'ServiceGroup': -1, 'NCMCode': -1, 'MaterialType': 'mt_FinishedGoods', 'MaterialGroup': -1, 'ProductSource': '', 'Properties1': 'tNO', 'Properties2': 'tNO', 'Properties3': 'tNO', 'Properties4': 'tNO', 'Properties5': 'tNO', 'Properties6': 'tNO', 'Properties7': 'tNO', 'Properties8': 'tNO', 'Properties9': 'tNO', 'Properties10': 'tNO', 'Properties11': 'tNO', 'Properties12': 'tNO', 'Properties13': 'tNO', 'Properties14': 'tNO', 'Properties15': 'tNO', 'Properties16': 'tNO', 'Properties17': 'tNO', 'Properties18': 'tNO', 'Properties19': 'tNO', 'Properties20': 'tNO', 'Properties21': 'tNO', 'Properties22': 'tNO', 'Properties23': 'tNO', 'Properties24': 'tNO', 'Properties25': 'tNO', 'Properties26': 'tNO', 'Properties27': 'tNO', 'Properties28': 'tNO', 'Properties29': 'tNO', 'Properties30': 'tNO', 'Properties31': 'tNO', 'Properties32': 'tNO', 'Properties33': 'tNO', 'Properties34': 'tNO', 'Properties35': 'tNO', 'Properties36': 'tNO', 'Properties37': 'tNO', 'Properties38': 'tNO', 'Properties39': 'tNO', 'Properties40': 'tNO', 'Properties41': 'tNO', 'Properties42': 'tNO', 'Properties43': 'tNO', 'Properties44': 'tNO', 'Properties45': 'tNO', 'Properties46': 'tNO', 'Properties47': 'tNO', 'Properties48': 'tNO', 'Properties49': 'tNO', 'Properties50': 'tNO', 'Properties51': 'tNO', 'Properties52': 'tNO', 'Properties53': 'tNO', 'Properties54': 'tNO', 'Properties55': 'tNO', 'Properties56': 'tNO', 'Properties57': 'tNO', 'Properties58': 'tNO', 'Properties59': 'tNO', 'Properties60': 'tNO', 'Properties61': 'tNO', 'Properties62': 'tNO', 'Properties63': 'tNO', 'Properties64': 'tNO', 'AutoCreateSerialNumbersOnRelease': 'tNO', 'DNFEntry': -1, 'GTSItemSpec': None, 'GTSItemTaxCategory': None, 'FuelID': None, 'BeverageTableCode': '', 'BeverageGroupCode': '', 'BeverageCommercialBrandCode': None, 'Series': 119, 'ToleranceDays': None, 'TypeOfAdvancedRules': 'toarGeneral', 'IssuePrimarilyBy': 'ipbBinLocations', 'NoDiscounts': 'tNO', 'AssetClass': '', 'AssetGroup': '', 'InventoryNumber': '', 'Technician': None, 'Employee': None, 'Location': None, 'AssetStatus': 'New', 'CapitalizationDate': None, 'StatisticalAsset': 'tNO', 'Cession': 'tNO', 'DeactivateAfterUsefulLife': 'tNO', 'ManageByQuantity': 'tNO', 'UoMGroupEntry': 1, 'InventoryUoMEntry': 1, 'DefaultSalesUoMEntry': None, 'DefaultPurchasingUoMEntry': None, 'DepreciationGroup': None, 'AssetSerialNumber': '', 'InventoryWeight': None, 'InventoryWeightUnit': None, 'InventoryWeight1': None, 'InventoryWeightUnit1': None, 'DefaultCountingUnit': 'Piece', 'CountingItemsPerUnit': 1.0, 'DefaultCountingUoMEntry': 1, 'Excisable': 'tNO', 'ChapterID': -1, 'ScsCode': None, 'SpProdType': None, 'ProdStdCost': 0.0, 'InCostRollup': 'tYES', 'VirtualAssetItem': 'tNO', 'EnforceAssetSerialNumbers': 'tNO', 'AttachmentEntry': None, 'LinkedResource': None, 'UpdateDate': '2025-01-26', 'UpdateTime': '09:35:56', 'GSTRelevnt': 'tNO', 'SACEntry': -1, 'GSTTaxCategory': 'gtc_Regular', 'ServiceCategoryEntry': -1, 'CapitalGoodsOnHoldPercent': 0.0, 'CapitalGoodsOnHoldLimit': 0.0, 'AssessableValue': 0.0, 'AssVal4WTR': 0.0, 'SOIExcisable': 'se_NotExcisable', 'TNVED': None, 'ImportedItem': 'tNO', 'PricingUnit': 1, 'CreateDate': '2025-01-26', 'CreateTime': '09:35:56', 'U_MfgH': None, 'U_Collection': None, 'U_OldCode': None, 'U_ItemsCat': None, 'U_NumberofSet': None, 'U_NileCode': None, 'U_TransferProductionLinkExclude': None, 'U_SBO_CodeType': 'GS1', 'U_SBO_EGSCode': None, 'U_ShopifyColor': None, 'U_SalesChannel': None, 'U_ShopifyItemIDLocal': None, 'U_ShopifyItemIDInternational': None, 'U_ParentCommercialName': None, 'ItemPrices': [{'PriceList': 1, 'Price': 0.0, 'Currency': None, 'AdditionalPrice1': 0.0, 'AdditionalCurrency1': None, 'AdditionalPrice2': 0.0, 'AdditionalCurrency2': None, 'BasePriceList': 1, 'Factor': 1.0, 'UoMPrices': []}, {'PriceList': 2, 'Price': 0.0, 'Currency': None, 'AdditionalPrice1': 0.0, 'AdditionalCurrency1': None, 'AdditionalPrice2': 0.0, 'AdditionalCurrency2': None, 'BasePriceList': 1, 'Factor': 0.4, 'UoMPrices': []}, {'PriceList': 3, 'Price': 0.0, 'Currency': None, 'AdditionalPrice1': 0.0, 'AdditionalCurrency1': None, 'AdditionalPrice2': 0.0, 'AdditionalCurrency2': None, 'BasePriceList': 3, 'Factor': 1.0, 'UoMPrices': []}, {'PriceList': 4, 'Price': 0.0, 'Currency': None, 'AdditionalPrice1': 0.0, 'AdditionalCurrency1': None, 'AdditionalPrice2': 0.0, 'AdditionalCurrency2': None, 'BasePriceList': 4, 'Factor': 1.0, 'UoMPrices': []}, {'PriceList': 5, 'Price': 0.0, 'Currency': None, 'AdditionalPrice1': 0.0, 'AdditionalCurrency1': None, 'AdditionalPrice2': 0.0, 'AdditionalCurrency2': None, 'BasePriceList': 5, 'Factor': 1.0, 'UoMPrices': []}, {'PriceList': 6, 'Price': 0.0, 'Currency': None, 'AdditionalPrice1': 0.0, 'AdditionalCurrency1': None, 'AdditionalPrice2': 0.0, 'AdditionalCurrency2': None, 'BasePriceList': 6, 'Factor': 1.0, 'UoMPrices': []}, {'PriceList': 7, 'Price': 0.0, 'Currency': None, 'AdditionalPrice1': 0.0, 'AdditionalCurrency1': None, 'AdditionalPrice2': 0.0, 'AdditionalCurrency2': None, 'BasePriceList': 7, 'Factor': 1.0, 'UoMPrices': []}, {'PriceList': 8, 'Price': 0.0, 'Currency': None, 'AdditionalPrice1': 0.0, 'AdditionalCurrency1': None, 'AdditionalPrice2': 0.0, 'AdditionalCurrency2': None, 'BasePriceList': 8, 'Factor': 1.0, 'UoMPrices': []}, {'PriceList': 9, 'Price': 0.0, 'Currency': None, 'AdditionalPrice1': 0.0, 'AdditionalCurrency1': None, 'AdditionalPrice2': 0.0, 'AdditionalCurrency2': None, 'BasePriceList': 9, 'Factor': 1.0, 'UoMPrices': []}, {'PriceList': 10, 'Price': 0.0, 'Currency': None, 'AdditionalPrice1': 0.0, 'AdditionalCurrency1': None, 'AdditionalPrice2': 0.0, 'AdditionalCurrency2': None, 'BasePriceList': 10, 'Factor': 1.0, 'UoMPrices': []}], 'ItemWarehouseInfoCollection': [{'MinimalStock': 0.0, 'MaximalStock': 0.0, 'MinimalOrder': 0.0, 'StandardAveragePrice': 180.0, 'Locked': 'tNO', 'InventoryAccount': None, 'CostAccount': None, 'TransferAccount': None, 'RevenuesAccount': None, 'VarienceAccount': None, 'DecreasingAccount': None, 'IncreasingAccount': None, 'ReturningAccount': None, 'ExpensesAccount': None, 'EURevenuesAccount': None, 'EUExpensesAccount': None, 'ForeignRevenueAcc': None, 'ForeignExpensAcc': None, 'ExemptIncomeAcc': None, 'PriceDifferenceAcc': None, 'WarehouseCode': '5A', 'InStock': 17.0, 'Committed': 0.0, 'Ordered': 0.0, 'CountedQuantity': 0.0, 'WasCounted': 'tNO', 'UserSignature': 50, 'Counted': 0.0, 'ExpenseClearingAct': None, 'PurchaseCreditAcc': None, 'EUPurchaseCreditAcc': None, 'ForeignPurchaseCreditAcc': None, 'SalesCreditAcc': None, 'SalesCreditEUAcc': None, 'ExemptedCredits': None, 'SalesCreditForeignAcc': None, 'ExpenseOffsettingAccount': None, 'WipAccount': None, 'ExchangeRateDifferencesAcct': None, 'GoodsClearingAcct': None, 'NegativeInventoryAdjustmentAccount': None, 'CostInflationOffsetAccount': None, 'GLDecreaseAcct': None, 'GLIncreaseAcct': None, 'PAReturnAcct': None, 'PurchaseAcct': None, 'PurchaseOffsetAcct': None, 'ShippedGoodsAccount': None, 'StockInflationOffsetAccount': None, 'StockInflationAdjustAccount': None, 'VATInRevenueAccount': None, 'WipVarianceAccount': None, 'CostInflationAccount': None, 'WHIncomingCenvatAccount': None, 'WHOutgoingCenvatAccount': None, 'StockInTransitAccount': None, 'WipOffsetProfitAndLossAccount': None, 'InventoryOffsetProfitAndLossAccount': None, 'DefaultBin': None, 'DefaultBinEnforced': 'tNO', 'PurchaseBalanceAccount': None, 'ItemCode': 'ACC-0000004', 'ItemCycleCounts': []}, {'MinimalStock': 0.0, 'MaximalStock': 0.0, 'MinimalOrder': 0.0, 'StandardAveragePrice': 180.0, 'Locked': 'tNO', 'InventoryAccount': None, 'CostAccount': None, 'TransferAccount': None, 'RevenuesAccount': None, 'VarienceAccount': None, 'DecreasingAccount': None, 'IncreasingAccount': None, 'ReturningAccount': None, 'ExpensesAccount': None, 'EURevenuesAccount': None, 'EUExpensesAccount': None, 'ForeignRevenueAcc': None, 'ForeignExpensAcc': None, 'ExemptIncomeAcc': None, 'PriceDifferenceAcc': None, 'WarehouseCode': 'Arkan', 'InStock': 18.0, 'Committed': 0.0, 'Ordered': 0.0, 'CountedQuantity': 0.0, 'WasCounted': 'tNO', 'UserSignature': 50, 'Counted': 0.0, 'ExpenseClearingAct': None, 'PurchaseCreditAcc': None, 'EUPurchaseCreditAcc': None, 'ForeignPurchaseCreditAcc': None, 'SalesCreditAcc': None, 'SalesCreditEUAcc': None, 'ExemptedCredits': None, 'SalesCreditForeignAcc': None, 'ExpenseOffsettingAccount': None, 'WipAccount': None, 'ExchangeRateDifferencesAcct': None, 'GoodsClearingAcct': None, 'NegativeInventoryAdjustmentAccount': None, 'CostInflationOffsetAccount': None, 'GLDecreaseAcct': None, 'GLIncreaseAcct': None, 'PAReturnAcct': None, 'PurchaseAcct': None, 'PurchaseOffsetAcct': None, 'ShippedGoodsAccount': None, 'StockInflationOffsetAccount': None, 'StockInflationAdjustAccount': None, 'VATInRevenueAccount': None, 'WipVarianceAccount': None, 'CostInflationAccount': None, 'WHIncomingCenvatAccount': None, 'WHOutgoingCenvatAccount': None, 'StockInTransitAccount': None, 'WipOffsetProfitAndLossAccount': None, 'InventoryOffsetProfitAndLossAccount': None, 'DefaultBin': None, 'DefaultBinEnforced': 'tNO', 'PurchaseBalanceAccount': None, 'ItemCode': 'ACC-0000004', 'ItemCycleCounts': []}, {'MinimalStock': 0.0, 'MaximalStock': 0.0, 'MinimalOrder': 0.0, 'StandardAveragePrice': 0.0, 'Locked': 'tNO', 'InventoryAccount': None, 'CostAccount': None, 'TransferAccount': None, 'RevenuesAccount': None, 'VarienceAccount': None, 'DecreasingAccount': None, 'IncreasingAccount': None, 'ReturningAccount': None, 'ExpensesAccount': None, 'EURevenuesAccount': None, 'EUExpensesAccount': None, 'ForeignRevenueAcc': None, 'ForeignExpensAcc': None, 'ExemptIncomeAcc': None, 'PriceDifferenceAcc': None, 'WarehouseCode': 'DIP', 'InStock': 0.0, 'Committed': 0.0, 'Ordered': 0.0, 'CountedQuantity': 0.0, 'WasCounted': 'tNO', 'UserSignature': 50, 'Counted': 0.0, 'ExpenseClearingAct': None, 'PurchaseCreditAcc': None, 'EUPurchaseCreditAcc': None, 'ForeignPurchaseCreditAcc': None, 'SalesCreditAcc': None, 'SalesCreditEUAcc': None, 'ExemptedCredits': None, 'SalesCreditForeignAcc': None, 'ExpenseOffsettingAccount': None, 'WipAccount': None, 'ExchangeRateDifferencesAcct': None, 'GoodsClearingAcct': None, 'NegativeInventoryAdjustmentAccount': None, 'CostInflationOffsetAccount': None, 'GLDecreaseAcct': None, 'GLIncreaseAcct': None, 'PAReturnAcct': None, 'PurchaseAcct': None, 'PurchaseOffsetAcct': None, 'ShippedGoodsAccount': None, 'StockInflationOffsetAccount': None, 'StockInflationAdjustAccount': None, 'VATInRevenueAccount': None, 'WipVarianceAccount': None, 'CostInflationAccount': None, 'WHIncomingCenvatAccount': None, 'WHOutgoingCenvatAccount': None, 'StockInTransitAccount': None, 'WipOffsetProfitAndLossAccount': None, 'InventoryOffsetProfitAndLossAccount': None, 'DefaultBin': None, 'DefaultBinEnforced': 'tNO', 'PurchaseBalanceAccount': None, 'ItemCode': 'ACC-0000004', 'ItemCycleCounts': []}, {'MinimalStock': 0.0, 'MaximalStock': 0.0, 'MinimalOrder': 0.0, 'StandardAveragePrice': 180.0, 'Locked': 'tNO', 'InventoryAccount': None, 'CostAccount': None, 'TransferAccount': None, 'RevenuesAccount': None, 'VarienceAccount': None, 'DecreasingAccount': None, 'IncreasingAccount': None, 'ReturningAccount': None, 'ExpensesAccount': None, 'EURevenuesAccount': None, 'EUExpensesAccount': None, 'ForeignRevenueAcc': None, 'ForeignExpensAcc': None, 'ExemptIncomeAcc': None, 'PriceDifferenceAcc': None, 'WarehouseCode': 'INC', 'InStock': 0.0, 'Committed': 0.0, 'Ordered': 0.0, 'CountedQuantity': 0.0, 'WasCounted': 'tNO', 'UserSignature': 50, 'Counted': 0.0, 'ExpenseClearingAct': None, 'PurchaseCreditAcc': None, 'EUPurchaseCreditAcc': None, 'ForeignPurchaseCreditAcc': None, 'SalesCreditAcc': None, 'SalesCreditEUAcc': None, 'ExemptedCredits': None, 'SalesCreditForeignAcc': None, 'ExpenseOffsettingAccount': None, 'WipAccount': None, 'ExchangeRateDifferencesAcct': None, 'GoodsClearingAcct': None, 'NegativeInventoryAdjustmentAccount': None, 'CostInflationOffsetAccount': None, 'GLDecreaseAcct': None, 'GLIncreaseAcct': None, 'PAReturnAcct': None, 'PurchaseAcct': None, 'PurchaseOffsetAcct': None, 'ShippedGoodsAccount': None, 'StockInflationOffsetAccount': None, 'StockInflationAdjustAccount': None, 'VATInRevenueAccount': None, 'WipVarianceAccount': None, 'CostInflationAccount': None, 'WHIncomingCenvatAccount': None, 'WHOutgoingCenvatAccount': None, 'StockInTransitAccount': None, 'WipOffsetProfitAndLossAccount': None, 'InventoryOffsetProfitAndLossAccount': None, 'DefaultBin': None, 'DefaultBinEnforced': 'tNO', 'PurchaseBalanceAccount': None, 'ItemCode': 'ACC-0000004', 'ItemCycleCounts': []}, {'MinimalStock': 0.0, 'MaximalStock': 0.0, 'MinimalOrder': 0.0, 'StandardAveragePrice': 0.0, 'Locked': 'tNO', 'InventoryAccount': None, 'CostAccount': None, 'TransferAccount': None, 'RevenuesAccount': None, 'VarienceAccount': None, 'DecreasingAccount': None, 'IncreasingAccount': None, 'ReturningAccount': None, 'ExpensesAccount': None, 'EURevenuesAccount': None, 'EUExpensesAccount': None, 'ForeignRevenueAcc': None, 'ForeignExpensAcc': None, 'ExemptIncomeAcc': None, 'PriceDifferenceAcc': None, 'WarehouseCode': 'ONL', 'InStock': 0.0, 'Committed': 0.0, 'Ordered': 0.0, 'CountedQuantity': 0.0, 'WasCounted': 'tNO', 'UserSignature': 50, 'Counted': 0.0, 'ExpenseClearingAct': None, 'PurchaseCreditAcc': None, 'EUPurchaseCreditAcc': None, 'ForeignPurchaseCreditAcc': None, 'SalesCreditAcc': None, 'SalesCreditEUAcc': None, 'ExemptedCredits': None, 'SalesCreditForeignAcc': None, 'ExpenseOffsettingAccount': None, 'WipAccount': None, 'ExchangeRateDifferencesAcct': None, 'GoodsClearingAcct': None, 'NegativeInventoryAdjustmentAccount': None, 'CostInflationOffsetAccount': None, 'GLDecreaseAcct': None, 'GLIncreaseAcct': None, 'PAReturnAcct': None, 'PurchaseAcct': None, 'PurchaseOffsetAcct': None, 'ShippedGoodsAccount': None, 'StockInflationOffsetAccount': None, 'StockInflationAdjustAccount': None, 'VATInRevenueAccount': None, 'WipVarianceAccount': None, 'CostInflationAccount': None, 'WHIncomingCenvatAccount': None, 'WHOutgoingCenvatAccount': None, 'StockInTransitAccount': None, 'WipOffsetProfitAndLossAccount': None, 'InventoryOffsetProfitAndLossAccount': None, 'DefaultBin': None, 'DefaultBinEnforced': 'tNO', 'PurchaseBalanceAccount': None, 'ItemCode': 'ACC-0000004', 'ItemCycleCounts': []}, {'MinimalStock': 0.0, 'MaximalStock': 0.0, 'MinimalOrder': 0.0, 'StandardAveragePrice': 0.0, 'Locked': 'tNO', 'InventoryAccount': None, 'CostAccount': None, 'TransferAccount': None, 'RevenuesAccount': None, 'VarienceAccount': None, 'DecreasingAccount': None, 'IncreasingAccount': None, 'ReturningAccount': None, 'ExpensesAccount': None, 'EURevenuesAccount': None, 'EUExpensesAccount': None, 'ForeignRevenueAcc': None, 'ForeignExpensAcc': None, 'ExemptIncomeAcc': None, 'PriceDifferenceAcc': None, 'WarehouseCode': 'PHO', 'InStock': 0.0, 'Committed': 0.0, 'Ordered': 0.0, 'CountedQuantity': 0.0, 'WasCounted': 'tNO', 'UserSignature': 50, 'Counted': 0.0, 'ExpenseClearingAct': None, 'PurchaseCreditAcc': None, 'EUPurchaseCreditAcc': None, 'ForeignPurchaseCreditAcc': None, 'SalesCreditAcc': None, 'SalesCreditEUAcc': None, 'ExemptedCredits': None, 'SalesCreditForeignAcc': None, 'ExpenseOffsettingAccount': None, 'WipAccount': None, 'ExchangeRateDifferencesAcct': None, 'GoodsClearingAcct': None, 'NegativeInventoryAdjustmentAccount': None, 'CostInflationOffsetAccount': None, 'GLDecreaseAcct': None, 'GLIncreaseAcct': None, 'PAReturnAcct': None, 'PurchaseAcct': None, 'PurchaseOffsetAcct': None, 'ShippedGoodsAccount': None, 'StockInflationOffsetAccount': None, 'StockInflationAdjustAccount': None, 'VATInRevenueAccount': None, 'WipVarianceAccount': None, 'CostInflationAccount': None, 'WHIncomingCenvatAccount': None, 'WHOutgoingCenvatAccount': None, 'StockInTransitAccount': None, 'WipOffsetProfitAndLossAccount': None, 'InventoryOffsetProfitAndLossAccount': None, 'DefaultBin': None, 'DefaultBinEnforced': 'tNO', 'PurchaseBalanceAccount': None, 'ItemCode': 'ACC-0000004', 'ItemCycleCounts': []}, {'MinimalStock': 0.0, 'MaximalStock': 0.0, 'MinimalOrder': 0.0, 'StandardAveragePrice': 0.0, 'Locked': 'tNO', 'InventoryAccount': None, 'CostAccount': None, 'TransferAccount': None, 'RevenuesAccount': None, 'VarienceAccount': None, 'DecreasingAccount': None, 'IncreasingAccount': None, 'ReturningAccount': None, 'ExpensesAccount': None, 'EURevenuesAccount': None, 'EUExpensesAccount': None, 'ForeignRevenueAcc': None, 'ForeignExpensAcc': None, 'ExemptIncomeAcc': None, 'PriceDifferenceAcc': None, 'WarehouseCode': 'PHO-EX', 'InStock': 0.0, 'Committed': 0.0, 'Ordered': 0.0, 'CountedQuantity': 0.0, 'WasCounted': 'tNO', 'UserSignature': 1, 'Counted': 0.0, 'ExpenseClearingAct': None, 'PurchaseCreditAcc': None, 'EUPurchaseCreditAcc': None, 'ForeignPurchaseCreditAcc': None, 'SalesCreditAcc': None, 'SalesCreditEUAcc': None, 'ExemptedCredits': None, 'SalesCreditForeignAcc': None, 'ExpenseOffsettingAccount': None, 'WipAccount': None, 'ExchangeRateDifferencesAcct': None, 'GoodsClearingAcct': None, 'NegativeInventoryAdjustmentAccount': None, 'CostInflationOffsetAccount': None, 'GLDecreaseAcct': None, 'GLIncreaseAcct': None, 'PAReturnAcct': None, 'PurchaseAcct': None, 'PurchaseOffsetAcct': None, 'ShippedGoodsAccount': None, 'StockInflationOffsetAccount': None, 'StockInflationAdjustAccount': None, 'VATInRevenueAccount': None, 'WipVarianceAccount': None, 'CostInflationAccount': None, 'WHIncomingCenvatAccount': None, 'WHOutgoingCenvatAccount': None, 'StockInTransitAccount': None, 'WipOffsetProfitAndLossAccount': None, 'InventoryOffsetProfitAndLossAccount': None, 'DefaultBin': None, 'DefaultBinEnforced': 'tNO', 'PurchaseBalanceAccount': None, 'ItemCode': 'ACC-0000004', 'ItemCycleCounts': []}, {'MinimalStock': 0.0, 'MaximalStock': 0.0, 'MinimalOrder': 0.0, 'StandardAveragePrice': 0.0, 'Locked': 'tNO', 'InventoryAccount': None, 'CostAccount': None, 'TransferAccount': None, 'RevenuesAccount': None, 'VarienceAccount': None, 'DecreasingAccount': None, 'IncreasingAccount': None, 'ReturningAccount': None, 'ExpensesAccount': None, 'EURevenuesAccount': None, 'EUExpensesAccount': None, 'ForeignRevenueAcc': None, 'ForeignExpensAcc': None, 'ExemptIncomeAcc': None, 'PriceDifferenceAcc': None, 'WarehouseCode': 'PHO-IN', 'InStock': 0.0, 'Committed': 0.0, 'Ordered': 0.0, 'CountedQuantity': 0.0, 'WasCounted': 'tNO', 'UserSignature': 1, 'Counted': 0.0, 'ExpenseClearingAct': None, 'PurchaseCreditAcc': None, 'EUPurchaseCreditAcc': None, 'ForeignPurchaseCreditAcc': None, 'SalesCreditAcc': None, 'SalesCreditEUAcc': None, 'ExemptedCredits': None, 'SalesCreditForeignAcc': None, 'ExpenseOffsettingAccount': None, 'WipAccount': None, 'ExchangeRateDifferencesAcct': None, 'GoodsClearingAcct': None, 'NegativeInventoryAdjustmentAccount': None, 'CostInflationOffsetAccount': None, 'GLDecreaseAcct': None, 'GLIncreaseAcct': None, 'PAReturnAcct': None, 'PurchaseAcct': None, 'PurchaseOffsetAcct': None, 'ShippedGoodsAccount': None, 'StockInflationOffsetAccount': None, 'StockInflationAdjustAccount': None, 'VATInRevenueAccount': None, 'WipVarianceAccount': None, 'CostInflationAccount': None, 'WHIncomingCenvatAccount': None, 'WHOutgoingCenvatAccount': None, 'StockInTransitAccount': None, 'WipOffsetProfitAndLossAccount': None, 'InventoryOffsetProfitAndLossAccount': None, 'DefaultBin': None, 'DefaultBinEnforced': 'tNO', 'PurchaseBalanceAccount': None, 'ItemCode': 'ACC-0000004', 'ItemCycleCounts': []}, {'MinimalStock': 0.0, 'MaximalStock': 0.0, 'MinimalOrder': 0.0, 'StandardAveragePrice': 0.0, 'Locked': 'tNO', 'InventoryAccount': None, 'CostAccount': None, 'TransferAccount': None, 'RevenuesAccount': None, 'VarienceAccount': None, 'DecreasingAccount': None, 'IncreasingAccount': None, 'ReturningAccount': None, 'ExpensesAccount': None, 'EURevenuesAccount': None, 'EUExpensesAccount': None, 'ForeignRevenueAcc': None, 'ForeignExpensAcc': None, 'ExemptIncomeAcc': None, 'PriceDifferenceAcc': None, 'WarehouseCode': 'RTW', 'InStock': 0.0, 'Committed': 0.0, 'Ordered': 0.0, 'CountedQuantity': 0.0, 'WasCounted': 'tNO', 'UserSignature': 50, 'Counted': 0.0, 'ExpenseClearingAct': None, 'PurchaseCreditAcc': None, 'EUPurchaseCreditAcc': None, 'ForeignPurchaseCreditAcc': None, 'SalesCreditAcc': None, 'SalesCreditEUAcc': None, 'ExemptedCredits': None, 'SalesCreditForeignAcc': None, 'ExpenseOffsettingAccount': None, 'WipAccount': None, 'ExchangeRateDifferencesAcct': None, 'GoodsClearingAcct': None, 'NegativeInventoryAdjustmentAccount': None, 'CostInflationOffsetAccount': None, 'GLDecreaseAcct': None, 'GLIncreaseAcct': None, 'PAReturnAcct': None, 'PurchaseAcct': None, 'PurchaseOffsetAcct': None, 'ShippedGoodsAccount': None, 'StockInflationOffsetAccount': None, 'StockInflationAdjustAccount': None, 'VATInRevenueAccount': None, 'WipVarianceAccount': None, 'CostInflationAccount': None, 'WHIncomingCenvatAccount': None, 'WHOutgoingCenvatAccount': None, 'StockInTransitAccount': None, 'WipOffsetProfitAndLossAccount': None, 'InventoryOffsetProfitAndLossAccount': None, 'DefaultBin': None, 'DefaultBinEnforced': 'tNO', 'PurchaseBalanceAccount': None, 'ItemCode': 'ACC-0000004', 'ItemCycleCounts': []}, {'MinimalStock': 0.0, 'MaximalStock': 0.0, 'MinimalOrder': 0.0, 'StandardAveragePrice': 0.0, 'Locked': 'tNO', 'InventoryAccount': None, 'CostAccount': None, 'TransferAccount': None, 'RevenuesAccount': None, 'VarienceAccount': None, 'DecreasingAccount': None, 'IncreasingAccount': None, 'ReturningAccount': None, 'ExpensesAccount': None, 'EURevenuesAccount': None, 'EUExpensesAccount': None, 'ForeignRevenueAcc': None, 'ForeignExpensAcc': None, 'ExemptIncomeAcc': None, 'PriceDifferenceAcc': None, 'WarehouseCode': 'RTWH', 'InStock': 0.0, 'Committed': 0.0, 'Ordered': 0.0, 'CountedQuantity': 0.0, 'WasCounted': 'tNO', 'UserSignature': 1, 'Counted': 0.0, 'ExpenseClearingAct': None, 'PurchaseCreditAcc': None, 'EUPurchaseCreditAcc': None, 'ForeignPurchaseCreditAcc': None, 'SalesCreditAcc': None, 'SalesCreditEUAcc': None, 'ExemptedCredits': None, 'SalesCreditForeignAcc': None, 'ExpenseOffsettingAccount': None, 'WipAccount': None, 'ExchangeRateDifferencesAcct': None, 'GoodsClearingAcct': None, 'NegativeInventoryAdjustmentAccount': None, 'CostInflationOffsetAccount': None, 'GLDecreaseAcct': None, 'GLIncreaseAcct': None, 'PAReturnAcct': None, 'PurchaseAcct': None, 'PurchaseOffsetAcct': None, 'ShippedGoodsAccount': None, 'StockInflationOffsetAccount': None, 'StockInflationAdjustAccount': None, 'VATInRevenueAccount': None, 'WipVarianceAccount': None, 'CostInflationAccount': None, 'WHIncomingCenvatAccount': None, 'WHOutgoingCenvatAccount': None, 'StockInTransitAccount': None, 'WipOffsetProfitAndLossAccount': None, 'InventoryOffsetProfitAndLossAccount': None, 'DefaultBin': None, 'DefaultBinEnforced': 'tNO', 'PurchaseBalanceAccount': None, 'ItemCode': 'ACC-0000004', 'ItemCycleCounts': []}, {'MinimalStock': 0.0, 'MaximalStock': 0.0, 'MinimalOrder': 0.0, 'StandardAveragePrice': 0.0, 'Locked': 'tNO', 'InventoryAccount': None, 'CostAccount': None, 'TransferAccount': None, 'RevenuesAccount': None, 'VarienceAccount': None, 'DecreasingAccount': None, 'IncreasingAccount': None, 'ReturningAccount': None, 'ExpensesAccount': None, 'EURevenuesAccount': None, 'EUExpensesAccount': None, 'ForeignRevenueAcc': None, 'ForeignExpensAcc': None, 'ExemptIncomeAcc': None, 'PriceDifferenceAcc': None, 'WarehouseCode': 'SW', 'InStock': 0.0, 'Committed': 0.0, 'Ordered': 0.0, 'CountedQuantity': 0.0, 'WasCounted': 'tNO', 'UserSignature': 50, 'Counted': 0.0, 'ExpenseClearingAct': None, 'PurchaseCreditAcc': None, 'EUPurchaseCreditAcc': None, 'ForeignPurchaseCreditAcc': None, 'SalesCreditAcc': None, 'SalesCreditEUAcc': None, 'ExemptedCredits': None, 'SalesCreditForeignAcc': None, 'ExpenseOffsettingAccount': None, 'WipAccount': None, 'ExchangeRateDifferencesAcct': None, 'GoodsClearingAcct': None, 'NegativeInventoryAdjustmentAccount': None, 'CostInflationOffsetAccount': None, 'GLDecreaseAcct': None, 'GLIncreaseAcct': None, 'PAReturnAcct': None, 'PurchaseAcct': None, 'PurchaseOffsetAcct': None, 'ShippedGoodsAccount': None, 'StockInflationOffsetAccount': None, 'StockInflationAdjustAccount': None, 'VATInRevenueAccount': None, 'WipVarianceAccount': None, 'CostInflationAccount': None, 'WHIncomingCenvatAccount': None, 'WHOutgoingCenvatAccount': None, 'StockInTransitAccount': None, 'WipOffsetProfitAndLossAccount': None, 'InventoryOffsetProfitAndLossAccount': None, 'DefaultBin': None, 'DefaultBinEnforced': 'tNO', 'PurchaseBalanceAccount': None, 'ItemCode': 'ACC-0000004', 'ItemCycleCounts': []}, {'MinimalStock': 0.0, 'MaximalStock': 0.0, 'MinimalOrder': 0.0, 'StandardAveragePrice': 0.0, 'Locked': 'tNO', 'InventoryAccount': None, 'CostAccount': None, 'TransferAccount': None, 'RevenuesAccount': None, 'VarienceAccount': None, 'DecreasingAccount': None, 'IncreasingAccount': None, 'ReturningAccount': None, 'ExpensesAccount': None, 'EURevenuesAccount': None, 'EUExpensesAccount': None, 'ForeignRevenueAcc': None, 'ForeignExpensAcc': None, 'ExemptIncomeAcc': None, 'PriceDifferenceAcc': None, 'WarehouseCode': 'WLS', 'InStock': 0.0, 'Committed': 0.0, 'Ordered': 0.0, 'CountedQuantity': 0.0, 'WasCounted': 'tNO', 'UserSignature': 50, 'Counted': 0.0, 'ExpenseClearingAct': None, 'PurchaseCreditAcc': None, 'EUPurchaseCreditAcc': None, 'ForeignPurchaseCreditAcc': None, 'SalesCreditAcc': None, 'SalesCreditEUAcc': None, 'ExemptedCredits': None, 'SalesCreditForeignAcc': None, 'ExpenseOffsettingAccount': None, 'WipAccount': None, 'ExchangeRateDifferencesAcct': None, 'GoodsClearingAcct': None, 'NegativeInventoryAdjustmentAccount': None, 'CostInflationOffsetAccount': None, 'GLDecreaseAcct': None, 'GLIncreaseAcct': None, 'PAReturnAcct': None, 'PurchaseAcct': None, 'PurchaseOffsetAcct': None, 'ShippedGoodsAccount': None, 'StockInflationOffsetAccount': None, 'StockInflationAdjustAccount': None, 'VATInRevenueAccount': None, 'WipVarianceAccount': None, 'CostInflationAccount': None, 'WHIncomingCenvatAccount': None, 'WHOutgoingCenvatAccount': None, 'StockInTransitAccount': None, 'WipOffsetProfitAndLossAccount': None, 'InventoryOffsetProfitAndLossAccount': None, 'DefaultBin': None, 'DefaultBinEnforced': 'tNO', 'PurchaseBalanceAccount': None, 'ItemCode': 'ACC-0000004', 'ItemCycleCounts': []}, {'MinimalStock': 0.0, 'MaximalStock': 0.0, 'MinimalOrder': 0.0, 'StandardAveragePrice': 0.0, 'Locked': 'tNO', 'InventoryAccount': None, 'CostAccount': None, 'TransferAccount': None, 'RevenuesAccount': None, 'VarienceAccount': None, 'DecreasingAccount': None, 'IncreasingAccount': None, 'ReturningAccount': None, 'ExpensesAccount': None, 'EURevenuesAccount': None, 'EUExpensesAccount': None, 'ForeignRevenueAcc': None, 'ForeignExpensAcc': None, 'ExemptIncomeAcc': None, 'PriceDifferenceAcc': None, 'WarehouseCode': 'WW', 'InStock': 0.0, 'Committed': 0.0, 'Ordered': 0.0, 'CountedQuantity': 0.0, 'WasCounted': 'tNO', 'UserSignature': 50, 'Counted': 0.0, 'ExpenseClearingAct': None, 'PurchaseCreditAcc': None, 'EUPurchaseCreditAcc': None, 'ForeignPurchaseCreditAcc': None, 'SalesCreditAcc': None, 'SalesCreditEUAcc': None, 'ExemptedCredits': None, 'SalesCreditForeignAcc': None, 'ExpenseOffsettingAccount': None, 'WipAccount': None, 'ExchangeRateDifferencesAcct': None, 'GoodsClearingAcct': None, 'NegativeInventoryAdjustmentAccount': None, 'CostInflationOffsetAccount': None, 'GLDecreaseAcct': None, 'GLIncreaseAcct': None, 'PAReturnAcct': None, 'PurchaseAcct': None, 'PurchaseOffsetAcct': None, 'ShippedGoodsAccount': None, 'StockInflationOffsetAccount': None, 'StockInflationAdjustAccount': None, 'VATInRevenueAccount': None, 'WipVarianceAccount': None, 'CostInflationAccount': None, 'WHIncomingCenvatAccount': None, 'WHOutgoingCenvatAccount': None, 'StockInTransitAccount': None, 'WipOffsetProfitAndLossAccount': None, 'InventoryOffsetProfitAndLossAccount': None, 'DefaultBin': None, 'DefaultBinEnforced': 'tNO', 'PurchaseBalanceAccount': None, 'ItemCode': 'ACC-0000004', 'ItemCycleCounts': []}, {'MinimalStock': 0.0, 'MaximalStock': 0.0, 'MinimalOrder': 0.0, 'StandardAveragePrice': 0.0, 'Locked': 'tNO', 'InventoryAccount': None, 'CostAccount': None, 'TransferAccount': None, 'RevenuesAccount': None, 'VarienceAccount': None, 'DecreasingAccount': None, 'IncreasingAccount': None, 'ReturningAccount': None, 'ExpensesAccount': None, 'EURevenuesAccount': None, 'EUExpensesAccount': None, 'ForeignRevenueAcc': None, 'ForeignExpensAcc': None, 'ExemptIncomeAcc': None, 'PriceDifferenceAcc': None, 'WarehouseCode': 'WW-CON', 'InStock': 0.0, 'Committed': 0.0, 'Ordered': 0.0, 'CountedQuantity': 0.0, 'WasCounted': 'tNO', 'UserSignature': 50, 'Counted': 0.0, 'ExpenseClearingAct': None, 'PurchaseCreditAcc': None, 'EUPurchaseCreditAcc': None, 'ForeignPurchaseCreditAcc': None, 'SalesCreditAcc': None, 'SalesCreditEUAcc': None, 'ExemptedCredits': None, 'SalesCreditForeignAcc': None, 'ExpenseOffsettingAccount': None, 'WipAccount': None, 'ExchangeRateDifferencesAcct': None, 'GoodsClearingAcct': None, 'NegativeInventoryAdjustmentAccount': None, 'CostInflationOffsetAccount': None, 'GLDecreaseAcct': None, 'GLIncreaseAcct': None, 'PAReturnAcct': None, 'PurchaseAcct': None, 'PurchaseOffsetAcct': None, 'ShippedGoodsAccount': None, 'StockInflationOffsetAccount': None, 'StockInflationAdjustAccount': None, 'VATInRevenueAccount': None, 'WipVarianceAccount': None, 'CostInflationAccount': None, 'WHIncomingCenvatAccount': None, 'WHOutgoingCenvatAccount': None, 'StockInTransitAccount': None, 'WipOffsetProfitAndLossAccount': None, 'InventoryOffsetProfitAndLossAccount': None, 'DefaultBin': None, 'DefaultBinEnforced': 'tNO', 'PurchaseBalanceAccount': None, 'ItemCode': 'ACC-0000004', 'ItemCycleCounts': []}, {'MinimalStock': 0.0, 'MaximalStock': 0.0, 'MinimalOrder': 0.0, 'StandardAveragePrice': 0.0, 'Locked': 'tNO', 'InventoryAccount': None, 'CostAccount': None, 'TransferAccount': None, 'RevenuesAccount': None, 'VarienceAccount': None, 'DecreasingAccount': None, 'IncreasingAccount': None, 'ReturningAccount': None, 'ExpensesAccount': None, 'EURevenuesAccount': None, 'EUExpensesAccount': None, 'ForeignRevenueAcc': None, 'ForeignExpensAcc': None, 'ExemptIncomeAcc': None, 'PriceDifferenceAcc': None, 'WarehouseCode': 'WW-DAM', 'InStock': 0.0, 'Committed': 0.0, 'Ordered': 0.0, 'CountedQuantity': 0.0, 'WasCounted': 'tNO', 'UserSignature': 50, 'Counted': 0.0, 'ExpenseClearingAct': None, 'PurchaseCreditAcc': None, 'EUPurchaseCreditAcc': None, 'ForeignPurchaseCreditAcc': None, 'SalesCreditAcc': None, 'SalesCreditEUAcc': None, 'ExemptedCredits': None, 'SalesCreditForeignAcc': None, 'ExpenseOffsettingAccount': None, 'WipAccount': None, 'ExchangeRateDifferencesAcct': None, 'GoodsClearingAcct': None, 'NegativeInventoryAdjustmentAccount': None, 'CostInflationOffsetAccount': None, 'GLDecreaseAcct': None, 'GLIncreaseAcct': None, 'PAReturnAcct': None, 'PurchaseAcct': None, 'PurchaseOffsetAcct': None, 'ShippedGoodsAccount': None, 'StockInflationOffsetAccount': None, 'StockInflationAdjustAccount': None, 'VATInRevenueAccount': None, 'WipVarianceAccount': None, 'CostInflationAccount': None, 'WHIncomingCenvatAccount': None, 'WHOutgoingCenvatAccount': None, 'StockInTransitAccount': None, 'WipOffsetProfitAndLossAccount': None, 'InventoryOffsetProfitAndLossAccount': None, 'DefaultBin': None, 'DefaultBinEnforced': 'tNO', 'PurchaseBalanceAccount': None, 'ItemCode': 'ACC-0000004', 'ItemCycleCounts': []}, {'MinimalStock': 0.0, 'MaximalStock': 0.0, 'MinimalOrder': 0.0, 'StandardAveragePrice': 0.0, 'Locked': 'tNO', 'InventoryAccount': None, 'CostAccount': None, 'TransferAccount': None, 'RevenuesAccount': None, 'VarienceAccount': None, 'DecreasingAccount': None, 'IncreasingAccount': None, 'ReturningAccount': None, 'ExpensesAccount': None, 'EURevenuesAccount': None, 'EUExpensesAccount': None, 'ForeignRevenueAcc': None, 'ForeignExpensAcc': None, 'ExemptIncomeAcc': None, 'PriceDifferenceAcc': None, 'WarehouseCode': 'WW-REP', 'InStock': 0.0, 'Committed': 0.0, 'Ordered': 0.0, 'CountedQuantity': 0.0, 'WasCounted': 'tNO', 'UserSignature': 50, 'Counted': 0.0, 'ExpenseClearingAct': None, 'PurchaseCreditAcc': None, 'EUPurchaseCreditAcc': None, 'ForeignPurchaseCreditAcc': None, 'SalesCreditAcc': None, 'SalesCreditEUAcc': None, 'ExemptedCredits': None, 'SalesCreditForeignAcc': None, 'ExpenseOffsettingAccount': None, 'WipAccount': None, 'ExchangeRateDifferencesAcct': None, 'GoodsClearingAcct': None, 'NegativeInventoryAdjustmentAccount': None, 'CostInflationOffsetAccount': None, 'GLDecreaseAcct': None, 'GLIncreaseAcct': None, 'PAReturnAcct': None, 'PurchaseAcct': None, 'PurchaseOffsetAcct': None, 'ShippedGoodsAccount': None, 'StockInflationOffsetAccount': None, 'StockInflationAdjustAccount': None, 'VATInRevenueAccount': None, 'WipVarianceAccount': None, 'CostInflationAccount': None, 'WHIncomingCenvatAccount': None, 'WHOutgoingCenvatAccount': None, 'StockInTransitAccount': None, 'WipOffsetProfitAndLossAccount': None, 'InventoryOffsetProfitAndLossAccount': None, 'DefaultBin': None, 'DefaultBinEnforced': 'tNO', 'PurchaseBalanceAccount': None, 'ItemCode': 'ACC-0000004', 'ItemCycleCounts': []}, {'MinimalStock': 0.0, 'MaximalStock': 0.0, 'MinimalOrder': 0.0, 'StandardAveragePrice': 0.0, 'Locked': 'tNO', 'InventoryAccount': None, 'CostAccount': None, 'TransferAccount': None, 'RevenuesAccount': None, 'VarienceAccount': None, 'DecreasingAccount': None, 'IncreasingAccount': None, 'ReturningAccount': None, 'ExpensesAccount': None, 'EURevenuesAccount': None, 'EUExpensesAccount': None, 'ForeignRevenueAcc': None, 'ForeignExpensAcc': None, 'ExemptIncomeAcc': None, 'PriceDifferenceAcc': None, 'WarehouseCode': 'WW-SAM', 'InStock': 0.0, 'Committed': 0.0, 'Ordered': 0.0, 'CountedQuantity': 0.0, 'WasCounted': 'tNO', 'UserSignature': 50, 'Counted': 0.0, 'ExpenseClearingAct': None, 'PurchaseCreditAcc': None, 'EUPurchaseCreditAcc': None, 'ForeignPurchaseCreditAcc': None, 'SalesCreditAcc': None, 'SalesCreditEUAcc': None, 'ExemptedCredits': None, 'SalesCreditForeignAcc': None, 'ExpenseOffsettingAccount': None, 'WipAccount': None, 'ExchangeRateDifferencesAcct': None, 'GoodsClearingAcct': None, 'NegativeInventoryAdjustmentAccount': None, 'CostInflationOffsetAccount': None, 'GLDecreaseAcct': None, 'GLIncreaseAcct': None, 'PAReturnAcct': None, 'PurchaseAcct': None, 'PurchaseOffsetAcct': None, 'ShippedGoodsAccount': None, 'StockInflationOffsetAccount': None, 'StockInflationAdjustAccount': None, 'VATInRevenueAccount': None, 'WipVarianceAccount': None, 'CostInflationAccount': None, 'WHIncomingCenvatAccount': None, 'WHOutgoingCenvatAccount': None, 'StockInTransitAccount': None, 'WipOffsetProfitAndLossAccount': None, 'InventoryOffsetProfitAndLossAccount': None, 'DefaultBin': None, 'DefaultBinEnforced': 'tNO', 'PurchaseBalanceAccount': None, 'ItemCode': 'ACC-0000004', 'ItemCycleCounts': []}, {'MinimalStock': 0.0, 'MaximalStock': 0.0, 'MinimalOrder': 0.0, 'StandardAveragePrice': 0.0, 'Locked': 'tNO', 'InventoryAccount': None, 'CostAccount': None, 'TransferAccount': None, 'RevenuesAccount': None, 'VarienceAccount': None, 'DecreasingAccount': None, 'IncreasingAccount': None, 'ReturningAccount': None, 'ExpensesAccount': None, 'EURevenuesAccount': None, 'EUExpensesAccount': None, 'ForeignRevenueAcc': None, 'ForeignExpensAcc': None, 'ExemptIncomeAcc': None, 'PriceDifferenceAcc': None, 'WarehouseCode': 'WW-WIP', 'InStock': 0.0, 'Committed': 0.0, 'Ordered': 0.0, 'CountedQuantity': 0.0, 'WasCounted': 'tNO', 'UserSignature': 50, 'Counted': 0.0, 'ExpenseClearingAct': None, 'PurchaseCreditAcc': None, 'EUPurchaseCreditAcc': None, 'ForeignPurchaseCreditAcc': None, 'SalesCreditAcc': None, 'SalesCreditEUAcc': None, 'ExemptedCredits': None, 'SalesCreditForeignAcc': None, 'ExpenseOffsettingAccount': None, 'WipAccount': None, 'ExchangeRateDifferencesAcct': None, 'GoodsClearingAcct': None, 'NegativeInventoryAdjustmentAccount': None, 'CostInflationOffsetAccount': None, 'GLDecreaseAcct': None, 'GLIncreaseAcct': None, 'PAReturnAcct': None, 'PurchaseAcct': None, 'PurchaseOffsetAcct': None, 'ShippedGoodsAccount': None, 'StockInflationOffsetAccount': None, 'StockInflationAdjustAccount': None, 'VATInRevenueAccount': None, 'WipVarianceAccount': None, 'CostInflationAccount': None, 'WHIncomingCenvatAccount': None, 'WHOutgoingCenvatAccount': None, 'StockInTransitAccount': None, 'WipOffsetProfitAndLossAccount': None, 'InventoryOffsetProfitAndLossAccount': None, 'DefaultBin': None, 'DefaultBinEnforced': 'tNO', 'PurchaseBalanceAccount': None, 'ItemCode': 'ACC-0000004', 'ItemCycleCounts': []}, {'MinimalStock': 0.0, 'MaximalStock': 0.0, 'MinimalOrder': 0.0, 'StandardAveragePrice': 0.0, 'Locked': 'tNO', 'InventoryAccount': None, 'CostAccount': None, 'TransferAccount': None, 'RevenuesAccount': None, 'VarienceAccount': None, 'DecreasingAccount': None, 'IncreasingAccount': None, 'ReturningAccount': None, 'ExpensesAccount': None, 'EURevenuesAccount': None, 'EUExpensesAccount': None, 'ForeignRevenueAcc': None, 'ForeignExpensAcc': None, 'ExemptIncomeAcc': None, 'PriceDifferenceAcc': None, 'WarehouseCode': 'ZW', 'InStock': 0.0, 'Committed': 0.0, 'Ordered': 0.0, 'CountedQuantity': 0.0, 'WasCounted': 'tNO', 'UserSignature': 50, 'Counted': 0.0, 'ExpenseClearingAct': None, 'PurchaseCreditAcc': None, 'EUPurchaseCreditAcc': None, 'ForeignPurchaseCreditAcc': None, 'SalesCreditAcc': None, 'SalesCreditEUAcc': None, 'ExemptedCredits': None, 'SalesCreditForeignAcc': None, 'ExpenseOffsettingAccount': None, 'WipAccount': None, 'ExchangeRateDifferencesAcct': None, 'GoodsClearingAcct': None, 'NegativeInventoryAdjustmentAccount': None, 'CostInflationOffsetAccount': None, 'GLDecreaseAcct': None, 'GLIncreaseAcct': None, 'PAReturnAcct': None, 'PurchaseAcct': None, 'PurchaseOffsetAcct': None, 'ShippedGoodsAccount': None, 'StockInflationOffsetAccount': None, 'StockInflationAdjustAccount': None, 'VATInRevenueAccount': None, 'WipVarianceAccount': None, 'CostInflationAccount': None, 'WHIncomingCenvatAccount': None, 'WHOutgoingCenvatAccount': None, 'StockInTransitAccount': None, 'WipOffsetProfitAndLossAccount': None, 'InventoryOffsetProfitAndLossAccount': None, 'DefaultBin': None, 'DefaultBinEnforced': 'tNO', 'PurchaseBalanceAccount': None, 'ItemCode': 'ACC-0000004', 'ItemCycleCounts': []}], 'ItemPreferredVendors': [], 'ItemLocalizationInfos': [], 'ItemProjects': [], 'ItemDistributionRules': [], 'ItemAttributeGroups': [], 'ItemDepreciationParameters': [], 'ItemPeriodControls': [], 'ItemUnitOfMeasurementCollection': [{'UoMType': 'iutInventory', 'UoMEntry': 1, 'DefaultBarcode': 0, 'DefaultPackage': None, 'Length1': 0.0, 'Length1Unit': None, 'Length2': 0.0, 'Length2Unit': None, 'Width1': 0.0, 'Width1Unit': None, 'Width2': 0.0, 'Width2Unit': None, 'Height1': 0.0, 'Height1Unit': None, 'Height2': 0.0, 'Height2Unit': None, 'Volume': 0.0, 'VolumeUnit': None, 'Weight1': 0.0, 'Weight1Unit': None, 'Weight2': 0.0, 'Weight2Unit': None, 'ItemUoMPackageCollection': []}, {'UoMType': 'iutPurchasing', 'UoMEntry': 1, 'DefaultBarcode': 0, 'DefaultPackage': None, 'Length1': 0.0, 'Length1Unit': None, 'Length2': 0.0, 'Length2Unit': None, 'Width1': 0.0, 'Width1Unit': None, 'Width2': 0.0, 'Width2Unit': None, 'Height1': 0.0, 'Height1Unit': None, 'Height2': 0.0, 'Height2Unit': None, 'Volume': 0.0, 'VolumeUnit': 2, 'Weight1': 0.0, 'Weight1Unit': None, 'Weight2': 0.0, 'Weight2Unit': None, 'ItemUoMPackageCollection': []}, {'UoMType': 'iutPurchasing', 'UoMEntry': 8, 'DefaultBarcode': None, 'DefaultPackage': None, 'Length1': 0.0, 'Length1Unit': None, 'Length2': 0.0, 'Length2Unit': None, 'Width1': 0.0, 'Width1Unit': None, 'Width2': 0.0, 'Width2Unit': None, 'Height1': 0.0, 'Height1Unit': None, 'Height2': 0.0, 'Height2Unit': None, 'Volume': 0.0, 'VolumeUnit': 4, 'Weight1': 0.0, 'Weight1Unit': None, 'Weight2': 0.0, 'Weight2Unit': None, 'ItemUoMPackageCollection': []}, {'UoMType': 'iutSales', 'UoMEntry': 1, 'DefaultBarcode': 0, 'DefaultPackage': None, 'Length1': 0.0, 'Length1Unit': None, 'Length2': 0.0, 'Length2Unit': None, 'Width1': 0.0, 'Width1Unit': None, 'Width2': 0.0, 'Width2Unit': None, 'Height1': 0.0, 'Height1Unit': None, 'Height2': 0.0, 'Height2Unit': None, 'Volume': 0.0, 'VolumeUnit': 2, 'Weight1': 0.0, 'Weight1Unit': None, 'Weight2': 0.0, 'Weight2Unit': None, 'ItemUoMPackageCollection': []}, {'UoMType': 'iutSales', 'UoMEntry': 8, 'DefaultBarcode': None, 'DefaultPackage': None, 'Length1': 0.0, 'Length1Unit': None, 'Length2': 0.0, 'Length2Unit': None, 'Width1': 0.0, 'Width1Unit': None, 'Width2': 0.0, 'Width2Unit': None, 'Height1': 0.0, 'Height1Unit': None, 'Height2': 0.0, 'Height2Unit': None, 'Volume': 0.0, 'VolumeUnit': 4, 'Weight1': 0.0, 'Weight1Unit': None, 'Weight2': 0.0, 'Weight2Unit': None, 'ItemUoMPackageCollection': []}], 'ItemBarCodeCollection': [], 'ItemIntrastatExtension': {'ItemCode': 'ACC-0000004', 'CommodityCode': None, 'SupplementaryUnit': None, 'FactorOfSupplementaryUnit': 0.0, 'ImportRegionState': 0, 'ExportRegionState': 0, 'ImportNatureOfTransaction': None, 'ExportNatureOfTransaction': None, 'ImportStatisticalProcedure': None, 'ExportStatisticalProcedure': None, 'CountryOfOrigin': None, 'ServiceCode': None, 'Type': 'dDocument_Items', 'ServiceSupplyMethod': 'ssmImmediate', 'ServicePaymentMethod': 'spmOther', 'ImportRegionCountry': 'GB', 'ExportRegionCountry': 'GB', 'UseWeightInCalculation': 'tYES', 'IntrastatRelevant': 'tNO', 'StatisticalCode': None}}, {'ItemCode': 'ACC-0000005', 'ItemName': 'Earring Stand ( Fabric Holder ) 7.5*7.5 CM base + 7.5 CM Heigh', 'ForeignName': None, 'ItemsGroupCode': 110, 'CustomsGroupCode': -1, 'SalesVATGroup': 'X0', 'BarCode': None, 'VatLiable': 'tYES', 'PurchaseItem': 'tYES', 'SalesItem': 'tNO', 'InventoryItem': 'tYES', 'IncomeAccount': None, 'ExemptIncomeAccount': None, 'ExpanseAccount': None, 'Mainsupplier': None, 'SupplierCatalogNo': None, 'DesiredInventory': 0.0, 'MinInventory': 0.0, 'Picture': None, 'User_Text': None, 'SerialNum': None, 'CommissionPercent': 0.0, 'CommissionSum': 0.0, 'CommissionGroup': 0, 'TreeType': 'iNotATree', 'AssetItem': 'tNO', 'DataExportCode': None, 'Manufacturer': -1, 'QuantityOnStock': 50.0, 'QuantityOrderedFromVendors': 0.0, 'QuantityOrderedByCustomers': 0.0, 'ManageSerialNumbers': 'tNO', 'ManageBatchNumbers': 'tNO', 'Valid': 'tYES', 'ValidFrom': None, 'ValidTo': None, 'ValidRemarks': None, 'Frozen': 'tNO', 'FrozenFrom': None, 'FrozenTo': None, 'FrozenRemarks': None, 'SalesUnit': None, 'SalesItemsPerUnit': 1.0, 'SalesPackagingUnit': None, 'SalesQtyPerPackUnit': 1.0, 'SalesUnitLength': None, 'SalesLengthUnit': None, 'SalesUnitWidth': None, 'SalesWidthUnit': None, 'SalesUnitHeight': None, 'SalesHeightUnit': None, 'SalesUnitVolume': 0.0, 'SalesVolumeUnit': 4, 'SalesUnitWeight': None, 'SalesWeightUnit': None, 'PurchaseUnit': None, 'PurchaseItemsPerUnit': 1.0, 'PurchasePackagingUnit': None, 'PurchaseQtyPerPackUnit': 1.0, 'PurchaseUnitLength': None, 'PurchaseLengthUnit': None, 'PurchaseUnitWidth': None, 'PurchaseWidthUnit': None, 'PurchaseUnitHeight': None, 'PurchaseHeightUnit': None, 'PurchaseUnitVolume': 0.0, 'PurchaseVolumeUnit': 4, 'PurchaseUnitWeight': None, 'PurchaseWeightUnit': None, 'PurchaseVATGroup': 'X1', 'SalesFactor1': 1.0, 'SalesFactor2': 1.0, 'SalesFactor3': 1.0, 'SalesFactor4': 1.0, 'PurchaseFactor1': 1.0, 'PurchaseFactor2': 1.0, 'PurchaseFactor3': 1.0, 'PurchaseFactor4': 1.0, 'MovingAveragePrice': 0.0, 'ForeignRevenuesAccount': None, 'ECRevenuesAccount': None, 'ForeignExpensesAccount': None, 'ECExpensesAccount': None, 'AvgStdPrice': 0.0, 'DefaultWarehouse': None, 'ShipType': None, 'GLMethod': 'glm_ItemClass', 'TaxType': 'tt_Yes', 'MaxInventory': 0.0, 'ManageStockByWarehouse': 'tNO', 'PurchaseHeightUnit1': None, 'PurchaseUnitHeight1': None, 'PurchaseLengthUnit1': None, 'PurchaseUnitLength1': None, 'PurchaseWeightUnit1': None, 'PurchaseUnitWeight1': None, 'PurchaseWidthUnit1': None, 'PurchaseUnitWidth1': None, 'SalesHeightUnit1': None, 'SalesUnitHeight1': None, 'SalesLengthUnit1': None, 'SalesUnitLength1': None, 'SalesWeightUnit1': None, 'SalesUnitWeight1': None, 'SalesWidthUnit1': None, 'SalesUnitWidth1': None, 'ForceSelectionOfSerialNumber': 'tYES', 'ManageSerialNumbersOnReleaseOnly': 'tNO', 'WTLiable': 'tNO', 'CostAccountingMethod': 'bis_MovingAverage', 'SWW': None, 'WarrantyTemplate': '', 'IndirectTax': 'tNO', 'ArTaxCode': None, 'ApTaxCode': None, 'BaseUnitName': None, 'ItemCountryOrg': None, 'IssueMethod': 'im_Backflush', 'SRIAndBatchManageMethod': 'bomm_OnEveryTransaction', 'IsPhantom': 'tNO', 'InventoryUOM': 'Piece', 'PlanningSystem': 'bop_None', 'ProcurementMethod': 'bom_Buy', 'ComponentWarehouse': 'bomcw_BOM', 'OrderIntervals': None, 'OrderMultiple': 0.0, 'LeadTime': None, 'MinOrderQuantity': 0.0, 'ItemType': 'itItems', 'ItemClass': 'itcMaterial', 'OutgoingServiceCode': -1, 'IncomingServiceCode': -1, 'ServiceGroup': -1, 'NCMCode': -1, 'MaterialType': 'mt_FinishedGoods', 'MaterialGroup': -1, 'ProductSource': '', 'Properties1': 'tNO', 'Properties2': 'tNO', 'Properties3': 'tNO', 'Properties4': 'tNO', 'Properties5': 'tNO', 'Properties6': 'tNO', 'Properties7': 'tNO', 'Properties8': 'tNO', 'Properties9': 'tNO', 'Properties10': 'tNO', 'Properties11': 'tNO', 'Properties12': 'tNO', 'Properties13': 'tNO', 'Properties14': 'tNO', 'Properties15': 'tNO', 'Properties16': 'tNO', 'Properties17': 'tNO', 'Properties18': 'tNO', 'Properties19': 'tNO', 'Properties20': 'tNO', 'Properties21': 'tNO', 'Properties22': 'tNO', 'Properties23': 'tNO', 'Properties24': 'tNO', 'Properties25': 'tNO', 'Properties26': 'tNO', 'Properties27': 'tNO', 'Properties28': 'tNO', 'Properties29': 'tNO', 'Properties30': 'tNO', 'Properties31': 'tNO', 'Properties32': 'tNO', 'Properties33': 'tNO', 'Properties34': 'tNO', 'Properties35': 'tNO', 'Properties36': 'tNO', 'Properties37': 'tNO', 'Properties38': 'tNO', 'Properties39': 'tNO', 'Properties40': 'tNO', 'Properties41': 'tNO', 'Properties42': 'tNO', 'Properties43': 'tNO', 'Properties44': 'tNO', 'Properties45': 'tNO', 'Properties46': 'tNO', 'Properties47': 'tNO', 'Properties48': 'tNO', 'Properties49': 'tNO', 'Properties50': 'tNO', 'Properties51': 'tNO', 'Properties52': 'tNO', 'Properties53': 'tNO', 'Properties54': 'tNO', 'Properties55': 'tNO', 'Properties56': 'tNO', 'Properties57': 'tNO', 'Properties58': 'tNO', 'Properties59': 'tNO', 'Properties60': 'tNO', 'Properties61': 'tNO', 'Properties62': 'tNO', 'Properties63': 'tNO', 'Properties64': 'tNO', 'AutoCreateSerialNumbersOnRelease': 'tNO', 'DNFEntry': -1, 'GTSItemSpec': None, 'GTSItemTaxCategory': None, 'FuelID': None, 'BeverageTableCode': '', 'BeverageGroupCode': '', 'BeverageCommercialBrandCode': None, 'Series': 119, 'ToleranceDays': None, 'TypeOfAdvancedRules': 'toarGeneral', 'IssuePrimarilyBy': 'ipbBinLocations', 'NoDiscounts': 'tNO', 'AssetClass': '', 'AssetGroup': '', 'InventoryNumber': '', 'Technician': None, 'Employee': None, 'Location': None, 'AssetStatus': 'New', 'CapitalizationDate': None, 'StatisticalAsset': 'tNO', 'Cession': 'tNO', 'DeactivateAfterUsefulLife': 'tNO', 'ManageByQuantity': 'tNO', 'UoMGroupEntry': 1, 'InventoryUoMEntry': 1, 'DefaultSalesUoMEntry': None, 'DefaultPurchasingUoMEntry': None, 'DepreciationGroup': None, 'AssetSerialNumber': '', 'InventoryWeight': None, 'InventoryWeightUnit': None, 'InventoryWeight1': None, 'InventoryWeightUnit1': None, 'DefaultCountingUnit': 'Piece', 'CountingItemsPerUnit': 1.0, 'DefaultCountingUoMEntry': 1, 'Excisable': 'tNO', 'ChapterID': -1, 'ScsCode': None, 'SpProdType': None, 'ProdStdCost': 0.0, 'InCostRollup': 'tYES', 'VirtualAssetItem': 'tNO', 'EnforceAssetSerialNumbers': 'tNO', 'AttachmentEntry': None, 'LinkedResource': None, 'UpdateDate': '2025-01-26', 'UpdateTime': '09:40:52', 'GSTRelevnt': 'tNO', 'SACEntry': -1, 'GSTTaxCategory': 'gtc_Regular', 'ServiceCategoryEntry': -1, 'CapitalGoodsOnHoldPercent': 0.0, 'CapitalGoodsOnHoldLimit': 0.0, 'AssessableValue': 0.0, 'AssVal4WTR': 0.0, 'SOIExcisable': 'se_NotExcisable', 'TNVED': None, 'ImportedItem': 'tNO', 'PricingUnit': 1, 'CreateDate': '2025-01-26', 'CreateTime': '09:40:52', 'U_MfgH': None, 'U_Collection': None, 'U_OldCode': None, 'U_ItemsCat': None, 'U_NumberofSet': None, 'U_NileCode': None, 'U_TransferProductionLinkExclude': None, 'U_SBO_CodeType': 'GS1', 'U_SBO_EGSCode': None, 'U_ShopifyColor': None, 'U_SalesChannel': None, 'U_ShopifyItemIDLocal': None, 'U_ShopifyItemIDInternational': None, 'U_ParentCommercialName': None, 'ItemPrices': [{'PriceList': 1, 'Price': 0.0, 'Currency': None, 'AdditionalPrice1': 0.0, 'AdditionalCurrency1': None, 'AdditionalPrice2': 0.0, 'AdditionalCurrency2': None, 'BasePriceList': 1, 'Factor': 1.0, 'UoMPrices': []}, {'PriceList': 2, 'Price': 0.0, 'Currency': None, 'AdditionalPrice1': 0.0, 'AdditionalCurrency1': None, 'AdditionalPrice2': 0.0, 'AdditionalCurrency2': None, 'BasePriceList': 1, 'Factor': 0.4, 'UoMPrices': []}, {'PriceList': 3, 'Price': 0.0, 'Currency': None, 'AdditionalPrice1': 0.0, 'AdditionalCurrency1': None, 'AdditionalPrice2': 0.0, 'AdditionalCurrency2': None, 'BasePriceList': 3, 'Factor': 1.0, 'UoMPrices': []}, {'PriceList': 4, 'Price': 0.0, 'Currency': None, 'AdditionalPrice1': 0.0, 'AdditionalCurrency1': None, 'AdditionalPrice2': 0.0, 'AdditionalCurrency2': None, 'BasePriceList': 4, 'Factor': 1.0, 'UoMPrices': []}, {'PriceList': 5, 'Price': 0.0, 'Currency': None, 'AdditionalPrice1': 0.0, 'AdditionalCurrency1': None, 'AdditionalPrice2': 0.0, 'AdditionalCurrency2': None, 'BasePriceList': 5, 'Factor': 1.0, 'UoMPrices': []}, {'PriceList': 6, 'Price': 0.0, 'Currency': None, 'AdditionalPrice1': 0.0, 'AdditionalCurrency1': None, 'AdditionalPrice2': 0.0, 'AdditionalCurrency2': None, 'BasePriceList': 6, 'Factor': 1.0, 'UoMPrices': []}, {'PriceList': 7, 'Price': 0.0, 'Currency': None, 'AdditionalPrice1': 0.0, 'AdditionalCurrency1': None, 'AdditionalPrice2': 0.0, 'AdditionalCurrency2': None, 'BasePriceList': 7, 'Factor': 1.0, 'UoMPrices': []}, {'PriceList': 8, 'Price': 0.0, 'Currency': None, 'AdditionalPrice1': 0.0, 'AdditionalCurrency1': None, 'AdditionalPrice2': 0.0, 'AdditionalCurrency2': None, 'BasePriceList': 8, 'Factor': 1.0, 'UoMPrices': []}, {'PriceList': 9, 'Price': 0.0, 'Currency': None, 'AdditionalPrice1': 0.0, 'AdditionalCurrency1': None, 'AdditionalPrice2': 0.0, 'AdditionalCurrency2': None, 'BasePriceList': 9, 'Factor': 1.0, 'UoMPrices': []}, {'PriceList': 10, 'Price': 0.0, 'Currency': None, 'AdditionalPrice1': 0.0, 'AdditionalCurrency1': None, 'AdditionalPrice2': 0.0, 'AdditionalCurrency2': None, 'BasePriceList': 10, 'Factor': 1.0, 'UoMPrices': []}], 'ItemWarehouseInfoCollection': [{'MinimalStock': 0.0, 'MaximalStock': 0.0, 'MinimalOrder': 0.0, 'StandardAveragePrice': 180.0, 'Locked': 'tNO', 'InventoryAccount': None, 'CostAccount': None, 'TransferAccount': None, 'RevenuesAccount': None, 'VarienceAccount': None, 'DecreasingAccount': None, 'IncreasingAccount': None, 'ReturningAccount': None, 'ExpensesAccount': None, 'EURevenuesAccount': None, 'EUExpensesAccount': None, 'ForeignRevenueAcc': None, 'ForeignExpensAcc': None, 'ExemptIncomeAcc': None, 'PriceDifferenceAcc': None, 'WarehouseCode': '5A', 'InStock': 25.0, 'Committed': 0.0, 'Ordered': 0.0, 'CountedQuantity': 0.0, 'WasCounted': 'tNO', 'UserSignature': 50, 'Counted': 0.0, 'ExpenseClearingAct': None, 'PurchaseCreditAcc': None, 'EUPurchaseCreditAcc': None, 'ForeignPurchaseCreditAcc': None, 'SalesCreditAcc': None, 'SalesCreditEUAcc': None, 'ExemptedCredits': None, 'SalesCreditForeignAcc': None, 'ExpenseOffsettingAccount': None, 'WipAccount': None, 'ExchangeRateDifferencesAcct': None, 'GoodsClearingAcct': None, 'NegativeInventoryAdjustmentAccount': None, 'CostInflationOffsetAccount': None, 'GLDecreaseAcct': None, 'GLIncreaseAcct': None, 'PAReturnAcct': None, 'PurchaseAcct': None, 'PurchaseOffsetAcct': None, 'ShippedGoodsAccount': None, 'StockInflationOffsetAccount': None, 'StockInflationAdjustAccount': None, 'VATInRevenueAccount': None, 'WipVarianceAccount': None, 'CostInflationAccount': None, 'WHIncomingCenvatAccount': None, 'WHOutgoingCenvatAccount': None, 'StockInTransitAccount': None, 'WipOffsetProfitAndLossAccount': None, 'InventoryOffsetProfitAndLossAccount': None, 'DefaultBin': None, 'DefaultBinEnforced': 'tNO', 'PurchaseBalanceAccount': None, 'ItemCode': 'ACC-0000005', 'ItemCycleCounts': []}, {'MinimalStock': 0.0, 'MaximalStock': 0.0, 'MinimalOrder': 0.0, 'StandardAveragePrice': 180.0, 'Locked': 'tNO', 'InventoryAccount': None, 'CostAccount': None, 'TransferAccount': None, 'RevenuesAccount': None, 'VarienceAccount': None, 'DecreasingAccount': None, 'IncreasingAccount': None, 'ReturningAccount': None, 'ExpensesAccount': None, 'EURevenuesAccount': None, 'EUExpensesAccount': None, 'ForeignRevenueAcc': None, 'ForeignExpensAcc': None, 'ExemptIncomeAcc': None, 'PriceDifferenceAcc': None, 'WarehouseCode': 'Arkan', 'InStock': 25.0, 'Committed': 0.0, 'Ordered': 0.0, 'CountedQuantity': 0.0, 'WasCounted': 'tNO', 'UserSignature': 50, 'Counted': 0.0, 'ExpenseClearingAct': None, 'PurchaseCreditAcc': None, 'EUPurchaseCreditAcc': None, 'ForeignPurchaseCreditAcc': None, 'SalesCreditAcc': None, 'SalesCreditEUAcc': None, 'ExemptedCredits': None, 'SalesCreditForeignAcc': None, 'ExpenseOffsettingAccount': None, 'WipAccount': None, 'ExchangeRateDifferencesAcct': None, 'GoodsClearingAcct': None, 'NegativeInventoryAdjustmentAccount': None, 'CostInflationOffsetAccount': None, 'GLDecreaseAcct': None, 'GLIncreaseAcct': None, 'PAReturnAcct': None, 'PurchaseAcct': None, 'PurchaseOffsetAcct': None, 'ShippedGoodsAccount': None, 'StockInflationOffsetAccount': None, 'StockInflationAdjustAccount': None, 'VATInRevenueAccount': None, 'WipVarianceAccount': None, 'CostInflationAccount': None, 'WHIncomingCenvatAccount': None, 'WHOutgoingCenvatAccount': None, 'StockInTransitAccount': None, 'WipOffsetProfitAndLossAccount': None, 'InventoryOffsetProfitAndLossAccount': None, 'DefaultBin': None, 'DefaultBinEnforced': 'tNO', 'PurchaseBalanceAccount': None, 'ItemCode': 'ACC-0000005', 'ItemCycleCounts': []}, {'MinimalStock': 0.0, 'MaximalStock': 0.0, 'MinimalOrder': 0.0, 'StandardAveragePrice': 0.0, 'Locked': 'tNO', 'InventoryAccount': None, 'CostAccount': None, 'TransferAccount': None, 'RevenuesAccount': None, 'VarienceAccount': None, 'DecreasingAccount': None, 'IncreasingAccount': None, 'ReturningAccount': None, 'ExpensesAccount': None, 'EURevenuesAccount': None, 'EUExpensesAccount': None, 'ForeignRevenueAcc': None, 'ForeignExpensAcc': None, 'ExemptIncomeAcc': None, 'PriceDifferenceAcc': None, 'WarehouseCode': 'DIP', 'InStock': 0.0, 'Committed': 0.0, 'Ordered': 0.0, 'CountedQuantity': 0.0, 'WasCounted': 'tNO', 'UserSignature': 50, 'Counted': 0.0, 'ExpenseClearingAct': None, 'PurchaseCreditAcc': None, 'EUPurchaseCreditAcc': None, 'ForeignPurchaseCreditAcc': None, 'SalesCreditAcc': None, 'SalesCreditEUAcc': None, 'ExemptedCredits': None, 'SalesCreditForeignAcc': None, 'ExpenseOffsettingAccount': None, 'WipAccount': None, 'ExchangeRateDifferencesAcct': None, 'GoodsClearingAcct': None, 'NegativeInventoryAdjustmentAccount': None, 'CostInflationOffsetAccount': None, 'GLDecreaseAcct': None, 'GLIncreaseAcct': None, 'PAReturnAcct': None, 'PurchaseAcct': None, 'PurchaseOffsetAcct': None, 'ShippedGoodsAccount': None, 'StockInflationOffsetAccount': None, 'StockInflationAdjustAccount': None, 'VATInRevenueAccount': None, 'WipVarianceAccount': None, 'CostInflationAccount': None, 'WHIncomingCenvatAccount': None, 'WHOutgoingCenvatAccount': None, 'StockInTransitAccount': None, 'WipOffsetProfitAndLossAccount': None, 'InventoryOffsetProfitAndLossAccount': None, 'DefaultBin': None, 'DefaultBinEnforced': 'tNO', 'PurchaseBalanceAccount': None, 'ItemCode': 'ACC-0000005', 'ItemCycleCounts': []}, {'MinimalStock': 0.0, 'MaximalStock': 0.0, 'MinimalOrder': 0.0, 'StandardAveragePrice': 180.0, 'Locked': 'tNO', 'InventoryAccount': None, 'CostAccount': None, 'TransferAccount': None, 'RevenuesAccount': None, 'VarienceAccount': None, 'DecreasingAccount': None, 'IncreasingAccount': None, 'ReturningAccount': None, 'ExpensesAccount': None, 'EURevenuesAccount': None, 'EUExpensesAccount': None, 'ForeignRevenueAcc': None, 'ForeignExpensAcc': None, 'ExemptIncomeAcc': None, 'PriceDifferenceAcc': None, 'WarehouseCode': 'INC', 'InStock': 0.0, 'Committed': 0.0, 'Ordered': 0.0, 'CountedQuantity': 0.0, 'WasCounted': 'tNO', 'UserSignature': 50, 'Counted': 0.0, 'ExpenseClearingAct': None, 'PurchaseCreditAcc': None, 'EUPurchaseCreditAcc': None, 'ForeignPurchaseCreditAcc': None, 'SalesCreditAcc': None, 'SalesCreditEUAcc': None, 'ExemptedCredits': None, 'SalesCreditForeignAcc': None, 'ExpenseOffsettingAccount': None, 'WipAccount': None, 'ExchangeRateDifferencesAcct': None, 'GoodsClearingAcct': None, 'NegativeInventoryAdjustmentAccount': None, 'CostInflationOffsetAccount': None, 'GLDecreaseAcct': None, 'GLIncreaseAcct': None, 'PAReturnAcct': None, 'PurchaseAcct': None, 'PurchaseOffsetAcct': None, 'ShippedGoodsAccount': None, 'StockInflationOffsetAccount': None, 'StockInflationAdjustAccount': None, 'VATInRevenueAccount': None, 'WipVarianceAccount': None, 'CostInflationAccount': None, 'WHIncomingCenvatAccount': None, 'WHOutgoingCenvatAccount': None, 'StockInTransitAccount': None, 'WipOffsetProfitAndLossAccount': None, 'InventoryOffsetProfitAndLossAccount': None, 'DefaultBin': None, 'DefaultBinEnforced': 'tNO', 'PurchaseBalanceAccount': None, 'ItemCode': 'ACC-0000005', 'ItemCycleCounts': []}, {'MinimalStock': 0.0, 'MaximalStock': 0.0, 'MinimalOrder': 0.0, 'StandardAveragePrice': 0.0, 'Locked': 'tNO', 'InventoryAccount': None, 'CostAccount': None, 'TransferAccount': None, 'RevenuesAccount': None, 'VarienceAccount': None, 'DecreasingAccount': None, 'IncreasingAccount': None, 'ReturningAccount': None, 'ExpensesAccount': None, 'EURevenuesAccount': None, 'EUExpensesAccount': None, 'ForeignRevenueAcc': None, 'ForeignExpensAcc': None, 'ExemptIncomeAcc': None, 'PriceDifferenceAcc': None, 'WarehouseCode': 'ONL', 'InStock': 0.0, 'Committed': 0.0, 'Ordered': 0.0, 'CountedQuantity': 0.0, 'WasCounted': 'tNO', 'UserSignature': 50, 'Counted': 0.0, 'ExpenseClearingAct': None, 'PurchaseCreditAcc': None, 'EUPurchaseCreditAcc': None, 'ForeignPurchaseCreditAcc': None, 'SalesCreditAcc': None, 'SalesCreditEUAcc': None, 'ExemptedCredits': None, 'SalesCreditForeignAcc': None, 'ExpenseOffsettingAccount': None, 'WipAccount': None, 'ExchangeRateDifferencesAcct': None, 'GoodsClearingAcct': None, 'NegativeInventoryAdjustmentAccount': None, 'CostInflationOffsetAccount': None, 'GLDecreaseAcct': None, 'GLIncreaseAcct': None, 'PAReturnAcct': None, 'PurchaseAcct': None, 'PurchaseOffsetAcct': None, 'ShippedGoodsAccount': None, 'StockInflationOffsetAccount': None, 'StockInflationAdjustAccount': None, 'VATInRevenueAccount': None, 'WipVarianceAccount': None, 'CostInflationAccount': None, 'WHIncomingCenvatAccount': None, 'WHOutgoingCenvatAccount': None, 'StockInTransitAccount': None, 'WipOffsetProfitAndLossAccount': None, 'InventoryOffsetProfitAndLossAccount': None, 'DefaultBin': None, 'DefaultBinEnforced': 'tNO', 'PurchaseBalanceAccount': None, 'ItemCode': 'ACC-0000005', 'ItemCycleCounts': []}, {'MinimalStock': 0.0, 'MaximalStock': 0.0, 'MinimalOrder': 0.0, 'StandardAveragePrice': 0.0, 'Locked': 'tNO', 'InventoryAccount': None, 'CostAccount': None, 'TransferAccount': None, 'RevenuesAccount': None, 'VarienceAccount': None, 'DecreasingAccount': None, 'IncreasingAccount': None, 'ReturningAccount': None, 'ExpensesAccount': None, 'EURevenuesAccount': None, 'EUExpensesAccount': None, 'ForeignRevenueAcc': None, 'ForeignExpensAcc': None, 'ExemptIncomeAcc': None, 'PriceDifferenceAcc': None, 'WarehouseCode': 'PHO', 'InStock': 0.0, 'Committed': 0.0, 'Ordered': 0.0, 'CountedQuantity': 0.0, 'WasCounted': 'tNO', 'UserSignature': 50, 'Counted': 0.0, 'ExpenseClearingAct': None, 'PurchaseCreditAcc': None, 'EUPurchaseCreditAcc': None, 'ForeignPurchaseCreditAcc': None, 'SalesCreditAcc': None, 'SalesCreditEUAcc': None, 'ExemptedCredits': None, 'SalesCreditForeignAcc': None, 'ExpenseOffsettingAccount': None, 'WipAccount': None, 'ExchangeRateDifferencesAcct': None, 'GoodsClearingAcct': None, 'NegativeInventoryAdjustmentAccount': None, 'CostInflationOffsetAccount': None, 'GLDecreaseAcct': None, 'GLIncreaseAcct': None, 'PAReturnAcct': None, 'PurchaseAcct': None, 'PurchaseOffsetAcct': None, 'ShippedGoodsAccount': None, 'StockInflationOffsetAccount': None, 'StockInflationAdjustAccount': None, 'VATInRevenueAccount': None, 'WipVarianceAccount': None, 'CostInflationAccount': None, 'WHIncomingCenvatAccount': None, 'WHOutgoingCenvatAccount': None, 'StockInTransitAccount': None, 'WipOffsetProfitAndLossAccount': None, 'InventoryOffsetProfitAndLossAccount': None, 'DefaultBin': None, 'DefaultBinEnforced': 'tNO', 'PurchaseBalanceAccount': None, 'ItemCode': 'ACC-0000005', 'ItemCycleCounts': []}, {'MinimalStock': 0.0, 'MaximalStock': 0.0, 'MinimalOrder': 0.0, 'StandardAveragePrice': 0.0, 'Locked': 'tNO', 'InventoryAccount': None, 'CostAccount': None, 'TransferAccount': None, 'RevenuesAccount': None, 'VarienceAccount': None, 'DecreasingAccount': None, 'IncreasingAccount': None, 'ReturningAccount': None, 'ExpensesAccount': None, 'EURevenuesAccount': None, 'EUExpensesAccount': None, 'ForeignRevenueAcc': None, 'ForeignExpensAcc': None, 'ExemptIncomeAcc': None, 'PriceDifferenceAcc': None, 'WarehouseCode': 'PHO-EX', 'InStock': 0.0, 'Committed': 0.0, 'Ordered': 0.0, 'CountedQuantity': 0.0, 'WasCounted': 'tNO', 'UserSignature': 1, 'Counted': 0.0, 'ExpenseClearingAct': None, 'PurchaseCreditAcc': None, 'EUPurchaseCreditAcc': None, 'ForeignPurchaseCreditAcc': None, 'SalesCreditAcc': None, 'SalesCreditEUAcc': None, 'ExemptedCredits': None, 'SalesCreditForeignAcc': None, 'ExpenseOffsettingAccount': None, 'WipAccount': None, 'ExchangeRateDifferencesAcct': None, 'GoodsClearingAcct': None, 'NegativeInventoryAdjustmentAccount': None, 'CostInflationOffsetAccount': None, 'GLDecreaseAcct': None, 'GLIncreaseAcct': None, 'PAReturnAcct': None, 'PurchaseAcct': None, 'PurchaseOffsetAcct': None, 'ShippedGoodsAccount': None, 'StockInflationOffsetAccount': None, 'StockInflationAdjustAccount': None, 'VATInRevenueAccount': None, 'WipVarianceAccount': None, 'CostInflationAccount': None, 'WHIncomingCenvatAccount': None, 'WHOutgoingCenvatAccount': None, 'StockInTransitAccount': None, 'WipOffsetProfitAndLossAccount': None, 'InventoryOffsetProfitAndLossAccount': None, 'DefaultBin': None, 'DefaultBinEnforced': 'tNO', 'PurchaseBalanceAccount': None, 'ItemCode': 'ACC-0000005', 'ItemCycleCounts': []}, {'MinimalStock': 0.0, 'MaximalStock': 0.0, 'MinimalOrder': 0.0, 'StandardAveragePrice': 0.0, 'Locked': 'tNO', 'InventoryAccount': None, 'CostAccount': None, 'TransferAccount': None, 'RevenuesAccount': None, 'VarienceAccount': None, 'DecreasingAccount': None, 'IncreasingAccount': None, 'ReturningAccount': None, 'ExpensesAccount': None, 'EURevenuesAccount': None, 'EUExpensesAccount': None, 'ForeignRevenueAcc': None, 'ForeignExpensAcc': None, 'ExemptIncomeAcc': None, 'PriceDifferenceAcc': None, 'WarehouseCode': 'PHO-IN', 'InStock': 0.0, 'Committed': 0.0, 'Ordered': 0.0, 'CountedQuantity': 0.0, 'WasCounted': 'tNO', 'UserSignature': 1, 'Counted': 0.0, 'ExpenseClearingAct': None, 'PurchaseCreditAcc': None, 'EUPurchaseCreditAcc': None, 'ForeignPurchaseCreditAcc': None, 'SalesCreditAcc': None, 'SalesCreditEUAcc': None, 'ExemptedCredits': None, 'SalesCreditForeignAcc': None, 'ExpenseOffsettingAccount': None, 'WipAccount': None, 'ExchangeRateDifferencesAcct': None, 'GoodsClearingAcct': None, 'NegativeInventoryAdjustmentAccount': None, 'CostInflationOffsetAccount': None, 'GLDecreaseAcct': None, 'GLIncreaseAcct': None, 'PAReturnAcct': None, 'PurchaseAcct': None, 'PurchaseOffsetAcct': None, 'ShippedGoodsAccount': None, 'StockInflationOffsetAccount': None, 'StockInflationAdjustAccount': None, 'VATInRevenueAccount': None, 'WipVarianceAccount': None, 'CostInflationAccount': None, 'WHIncomingCenvatAccount': None, 'WHOutgoingCenvatAccount': None, 'StockInTransitAccount': None, 'WipOffsetProfitAndLossAccount': None, 'InventoryOffsetProfitAndLossAccount': None, 'DefaultBin': None, 'DefaultBinEnforced': 'tNO', 'PurchaseBalanceAccount': None, 'ItemCode': 'ACC-0000005', 'ItemCycleCounts': []}, {'MinimalStock': 0.0, 'MaximalStock': 0.0, 'MinimalOrder': 0.0, 'StandardAveragePrice': 0.0, 'Locked': 'tNO', 'InventoryAccount': None, 'CostAccount': None, 'TransferAccount': None, 'RevenuesAccount': None, 'VarienceAccount': None, 'DecreasingAccount': None, 'IncreasingAccount': None, 'ReturningAccount': None, 'ExpensesAccount': None, 'EURevenuesAccount': None, 'EUExpensesAccount': None, 'ForeignRevenueAcc': None, 'ForeignExpensAcc': None, 'ExemptIncomeAcc': None, 'PriceDifferenceAcc': None, 'WarehouseCode': 'RTW', 'InStock': 0.0, 'Committed': 0.0, 'Ordered': 0.0, 'CountedQuantity': 0.0, 'WasCounted': 'tNO', 'UserSignature': 50, 'Counted': 0.0, 'ExpenseClearingAct': None, 'PurchaseCreditAcc': None, 'EUPurchaseCreditAcc': None, 'ForeignPurchaseCreditAcc': None, 'SalesCreditAcc': None, 'SalesCreditEUAcc': None, 'ExemptedCredits': None, 'SalesCreditForeignAcc': None, 'ExpenseOffsettingAccount': None, 'WipAccount': None, 'ExchangeRateDifferencesAcct': None, 'GoodsClearingAcct': None, 'NegativeInventoryAdjustmentAccount': None, 'CostInflationOffsetAccount': None, 'GLDecreaseAcct': None, 'GLIncreaseAcct': None, 'PAReturnAcct': None, 'PurchaseAcct': None, 'PurchaseOffsetAcct': None, 'ShippedGoodsAccount': None, 'StockInflationOffsetAccount': None, 'StockInflationAdjustAccount': None, 'VATInRevenueAccount': None, 'WipVarianceAccount': None, 'CostInflationAccount': None, 'WHIncomingCenvatAccount': None, 'WHOutgoingCenvatAccount': None, 'StockInTransitAccount': None, 'WipOffsetProfitAndLossAccount': None, 'InventoryOffsetProfitAndLossAccount': None, 'DefaultBin': None, 'DefaultBinEnforced': 'tNO', 'PurchaseBalanceAccount': None, 'ItemCode': 'ACC-0000005', 'ItemCycleCounts': []}, {'MinimalStock': 0.0, 'MaximalStock': 0.0, 'MinimalOrder': 0.0, 'StandardAveragePrice': 0.0, 'Locked': 'tNO', 'InventoryAccount': None, 'CostAccount': None, 'TransferAccount': None, 'RevenuesAccount': None, 'VarienceAccount': None, 'DecreasingAccount': None, 'IncreasingAccount': None, 'ReturningAccount': None, 'ExpensesAccount': None, 'EURevenuesAccount': None, 'EUExpensesAccount': None, 'ForeignRevenueAcc': None, 'ForeignExpensAcc': None, 'ExemptIncomeAcc': None, 'PriceDifferenceAcc': None, 'WarehouseCode': 'RTWH', 'InStock': 0.0, 'Committed': 0.0, 'Ordered': 0.0, 'CountedQuantity': 0.0, 'WasCounted': 'tNO', 'UserSignature': 1, 'Counted': 0.0, 'ExpenseClearingAct': None, 'PurchaseCreditAcc': None, 'EUPurchaseCreditAcc': None, 'ForeignPurchaseCreditAcc': None, 'SalesCreditAcc': None, 'SalesCreditEUAcc': None, 'ExemptedCredits': None, 'SalesCreditForeignAcc': None, 'ExpenseOffsettingAccount': None, 'WipAccount': None, 'ExchangeRateDifferencesAcct': None, 'GoodsClearingAcct': None, 'NegativeInventoryAdjustmentAccount': None, 'CostInflationOffsetAccount': None, 'GLDecreaseAcct': None, 'GLIncreaseAcct': None, 'PAReturnAcct': None, 'PurchaseAcct': None, 'PurchaseOffsetAcct': None, 'ShippedGoodsAccount': None, 'StockInflationOffsetAccount': None, 'StockInflationAdjustAccount': None, 'VATInRevenueAccount': None, 'WipVarianceAccount': None, 'CostInflationAccount': None, 'WHIncomingCenvatAccount': None, 'WHOutgoingCenvatAccount': None, 'StockInTransitAccount': None, 'WipOffsetProfitAndLossAccount': None, 'InventoryOffsetProfitAndLossAccount': None, 'DefaultBin': None, 'DefaultBinEnforced': 'tNO', 'PurchaseBalanceAccount': None, 'ItemCode': 'ACC-0000005', 'ItemCycleCounts': []}, {'MinimalStock': 0.0, 'MaximalStock': 0.0, 'MinimalOrder': 0.0, 'StandardAveragePrice': 0.0, 'Locked': 'tNO', 'InventoryAccount': None, 'CostAccount': None, 'TransferAccount': None, 'RevenuesAccount': None, 'VarienceAccount': None, 'DecreasingAccount': None, 'IncreasingAccount': None, 'ReturningAccount': None, 'ExpensesAccount': None, 'EURevenuesAccount': None, 'EUExpensesAccount': None, 'ForeignRevenueAcc': None, 'ForeignExpensAcc': None, 'ExemptIncomeAcc': None, 'PriceDifferenceAcc': None, 'WarehouseCode': 'SW', 'InStock': 0.0, 'Committed': 0.0, 'Ordered': 0.0, 'CountedQuantity': 0.0, 'WasCounted': 'tNO', 'UserSignature': 50, 'Counted': 0.0, 'ExpenseClearingAct': None, 'PurchaseCreditAcc': None, 'EUPurchaseCreditAcc': None, 'ForeignPurchaseCreditAcc': None, 'SalesCreditAcc': None, 'SalesCreditEUAcc': None, 'ExemptedCredits': None, 'SalesCreditForeignAcc': None, 'ExpenseOffsettingAccount': None, 'WipAccount': None, 'ExchangeRateDifferencesAcct': None, 'GoodsClearingAcct': None, 'NegativeInventoryAdjustmentAccount': None, 'CostInflationOffsetAccount': None, 'GLDecreaseAcct': None, 'GLIncreaseAcct': None, 'PAReturnAcct': None, 'PurchaseAcct': None, 'PurchaseOffsetAcct': None, 'ShippedGoodsAccount': None, 'StockInflationOffsetAccount': None, 'StockInflationAdjustAccount': None, 'VATInRevenueAccount': None, 'WipVarianceAccount': None, 'CostInflationAccount': None, 'WHIncomingCenvatAccount': None, 'WHOutgoingCenvatAccount': None, 'StockInTransitAccount': None, 'WipOffsetProfitAndLossAccount': None, 'InventoryOffsetProfitAndLossAccount': None, 'DefaultBin': None, 'DefaultBinEnforced': 'tNO', 'PurchaseBalanceAccount': None, 'ItemCode': 'ACC-0000005', 'ItemCycleCounts': []}, {'MinimalStock': 0.0, 'MaximalStock': 0.0, 'MinimalOrder': 0.0, 'StandardAveragePrice': 0.0, 'Locked': 'tNO', 'InventoryAccount': None, 'CostAccount': None, 'TransferAccount': None, 'RevenuesAccount': None, 'VarienceAccount': None, 'DecreasingAccount': None, 'IncreasingAccount': None, 'ReturningAccount': None, 'ExpensesAccount': None, 'EURevenuesAccount': None, 'EUExpensesAccount': None, 'ForeignRevenueAcc': None, 'ForeignExpensAcc': None, 'ExemptIncomeAcc': None, 'PriceDifferenceAcc': None, 'WarehouseCode': 'WLS', 'InStock': 0.0, 'Committed': 0.0, 'Ordered': 0.0, 'CountedQuantity': 0.0, 'WasCounted': 'tNO', 'UserSignature': 50, 'Counted': 0.0, 'ExpenseClearingAct': None, 'PurchaseCreditAcc': None, 'EUPurchaseCreditAcc': None, 'ForeignPurchaseCreditAcc': None, 'SalesCreditAcc': None, 'SalesCreditEUAcc': None, 'ExemptedCredits': None, 'SalesCreditForeignAcc': None, 'ExpenseOffsettingAccount': None, 'WipAccount': None, 'ExchangeRateDifferencesAcct': None, 'GoodsClearingAcct': None, 'NegativeInventoryAdjustmentAccount': None, 'CostInflationOffsetAccount': None, 'GLDecreaseAcct': None, 'GLIncreaseAcct': None, 'PAReturnAcct': None, 'PurchaseAcct': None, 'PurchaseOffsetAcct': None, 'ShippedGoodsAccount': None, 'StockInflationOffsetAccount': None, 'StockInflationAdjustAccount': None, 'VATInRevenueAccount': None, 'WipVarianceAccount': None, 'CostInflationAccount': None, 'WHIncomingCenvatAccount': None, 'WHOutgoingCenvatAccount': None, 'StockInTransitAccount': None, 'WipOffsetProfitAndLossAccount': None, 'InventoryOffsetProfitAndLossAccount': None, 'DefaultBin': None, 'DefaultBinEnforced': 'tNO', 'PurchaseBalanceAccount': None, 'ItemCode': 'ACC-0000005', 'ItemCycleCounts': []}, {'MinimalStock': 0.0, 'MaximalStock': 0.0, 'MinimalOrder': 0.0, 'StandardAveragePrice': 0.0, 'Locked': 'tNO', 'InventoryAccount': None, 'CostAccount': None, 'TransferAccount': None, 'RevenuesAccount': None, 'VarienceAccount': None, 'DecreasingAccount': None, 'IncreasingAccount': None, 'ReturningAccount': None, 'ExpensesAccount': None, 'EURevenuesAccount': None, 'EUExpensesAccount': None, 'ForeignRevenueAcc': None, 'ForeignExpensAcc': None, 'ExemptIncomeAcc': None, 'PriceDifferenceAcc': None, 'WarehouseCode': 'WW', 'InStock': 0.0, 'Committed': 0.0, 'Ordered': 0.0, 'CountedQuantity': 0.0, 'WasCounted': 'tNO', 'UserSignature': 50, 'Counted': 0.0, 'ExpenseClearingAct': None, 'PurchaseCreditAcc': None, 'EUPurchaseCreditAcc': None, 'ForeignPurchaseCreditAcc': None, 'SalesCreditAcc': None, 'SalesCreditEUAcc': None, 'ExemptedCredits': None, 'SalesCreditForeignAcc': None, 'ExpenseOffsettingAccount': None, 'WipAccount': None, 'ExchangeRateDifferencesAcct': None, 'GoodsClearingAcct': None, 'NegativeInventoryAdjustmentAccount': None, 'CostInflationOffsetAccount': None, 'GLDecreaseAcct': None, 'GLIncreaseAcct': None, 'PAReturnAcct': None, 'PurchaseAcct': None, 'PurchaseOffsetAcct': None, 'ShippedGoodsAccount': None, 'StockInflationOffsetAccount': None, 'StockInflationAdjustAccount': None, 'VATInRevenueAccount': None, 'WipVarianceAccount': None, 'CostInflationAccount': None, 'WHIncomingCenvatAccount': None, 'WHOutgoingCenvatAccount': None, 'StockInTransitAccount': None, 'WipOffsetProfitAndLossAccount': None, 'InventoryOffsetProfitAndLossAccount': None, 'DefaultBin': None, 'DefaultBinEnforced': 'tNO', 'PurchaseBalanceAccount': None, 'ItemCode': 'ACC-0000005', 'ItemCycleCounts': []}, {'MinimalStock': 0.0, 'MaximalStock': 0.0, 'MinimalOrder': 0.0, 'StandardAveragePrice': 0.0, 'Locked': 'tNO', 'InventoryAccount': None, 'CostAccount': None, 'TransferAccount': None, 'RevenuesAccount': None, 'VarienceAccount': None, 'DecreasingAccount': None, 'IncreasingAccount': None, 'ReturningAccount': None, 'ExpensesAccount': None, 'EURevenuesAccount': None, 'EUExpensesAccount': None, 'ForeignRevenueAcc': None, 'ForeignExpensAcc': None, 'ExemptIncomeAcc': None, 'PriceDifferenceAcc': None, 'WarehouseCode': 'WW-CON', 'InStock': 0.0, 'Committed': 0.0, 'Ordered': 0.0, 'CountedQuantity': 0.0, 'WasCounted': 'tNO', 'UserSignature': 50, 'Counted': 0.0, 'ExpenseClearingAct': None, 'PurchaseCreditAcc': None, 'EUPurchaseCreditAcc': None, 'ForeignPurchaseCreditAcc': None, 'SalesCreditAcc': None, 'SalesCreditEUAcc': None, 'ExemptedCredits': None, 'SalesCreditForeignAcc': None, 'ExpenseOffsettingAccount': None, 'WipAccount': None, 'ExchangeRateDifferencesAcct': None, 'GoodsClearingAcct': None, 'NegativeInventoryAdjustmentAccount': None, 'CostInflationOffsetAccount': None, 'GLDecreaseAcct': None, 'GLIncreaseAcct': None, 'PAReturnAcct': None, 'PurchaseAcct': None, 'PurchaseOffsetAcct': None, 'ShippedGoodsAccount': None, 'StockInflationOffsetAccount': None, 'StockInflationAdjustAccount': None, 'VATInRevenueAccount': None, 'WipVarianceAccount': None, 'CostInflationAccount': None, 'WHIncomingCenvatAccount': None, 'WHOutgoingCenvatAccount': None, 'StockInTransitAccount': None, 'WipOffsetProfitAndLossAccount': None, 'InventoryOffsetProfitAndLossAccount': None, 'DefaultBin': None, 'DefaultBinEnforced': 'tNO', 'PurchaseBalanceAccount': None, 'ItemCode': 'ACC-0000005', 'ItemCycleCounts': []}, {'MinimalStock': 0.0, 'MaximalStock': 0.0, 'MinimalOrder': 0.0, 'StandardAveragePrice': 0.0, 'Locked': 'tNO', 'InventoryAccount': None, 'CostAccount': None, 'TransferAccount': None, 'RevenuesAccount': None, 'VarienceAccount': None, 'DecreasingAccount': None, 'IncreasingAccount': None, 'ReturningAccount': None, 'ExpensesAccount': None, 'EURevenuesAccount': None, 'EUExpensesAccount': None, 'ForeignRevenueAcc': None, 'ForeignExpensAcc': None, 'ExemptIncomeAcc': None, 'PriceDifferenceAcc': None, 'WarehouseCode': 'WW-DAM', 'InStock': 0.0, 'Committed': 0.0, 'Ordered': 0.0, 'CountedQuantity': 0.0, 'WasCounted': 'tNO', 'UserSignature': 50, 'Counted': 0.0, 'ExpenseClearingAct': None, 'PurchaseCreditAcc': None, 'EUPurchaseCreditAcc': None, 'ForeignPurchaseCreditAcc': None, 'SalesCreditAcc': None, 'SalesCreditEUAcc': None, 'ExemptedCredits': None, 'SalesCreditForeignAcc': None, 'ExpenseOffsettingAccount': None, 'WipAccount': None, 'ExchangeRateDifferencesAcct': None, 'GoodsClearingAcct': None, 'NegativeInventoryAdjustmentAccount': None, 'CostInflationOffsetAccount': None, 'GLDecreaseAcct': None, 'GLIncreaseAcct': None, 'PAReturnAcct': None, 'PurchaseAcct': None, 'PurchaseOffsetAcct': None, 'ShippedGoodsAccount': None, 'StockInflationOffsetAccount': None, 'StockInflationAdjustAccount': None, 'VATInRevenueAccount': None, 'WipVarianceAccount': None, 'CostInflationAccount': None, 'WHIncomingCenvatAccount': None, 'WHOutgoingCenvatAccount': None, 'StockInTransitAccount': None, 'WipOffsetProfitAndLossAccount': None, 'InventoryOffsetProfitAndLossAccount': None, 'DefaultBin': None, 'DefaultBinEnforced': 'tNO', 'PurchaseBalanceAccount': None, 'ItemCode': 'ACC-0000005', 'ItemCycleCounts': []}, {'MinimalStock': 0.0, 'MaximalStock': 0.0, 'MinimalOrder': 0.0, 'StandardAveragePrice': 0.0, 'Locked': 'tNO', 'InventoryAccount': None, 'CostAccount': None, 'TransferAccount': None, 'RevenuesAccount': None, 'VarienceAccount': None, 'DecreasingAccount': None, 'IncreasingAccount': None, 'ReturningAccount': None, 'ExpensesAccount': None, 'EURevenuesAccount': None, 'EUExpensesAccount': None, 'ForeignRevenueAcc': None, 'ForeignExpensAcc': None, 'ExemptIncomeAcc': None, 'PriceDifferenceAcc': None, 'WarehouseCode': 'WW-REP', 'InStock': 0.0, 'Committed': 0.0, 'Ordered': 0.0, 'CountedQuantity': 0.0, 'WasCounted': 'tNO', 'UserSignature': 50, 'Counted': 0.0, 'ExpenseClearingAct': None, 'PurchaseCreditAcc': None, 'EUPurchaseCreditAcc': None, 'ForeignPurchaseCreditAcc': None, 'SalesCreditAcc': None, 'SalesCreditEUAcc': None, 'ExemptedCredits': None, 'SalesCreditForeignAcc': None, 'ExpenseOffsettingAccount': None, 'WipAccount': None, 'ExchangeRateDifferencesAcct': None, 'GoodsClearingAcct': None, 'NegativeInventoryAdjustmentAccount': None, 'CostInflationOffsetAccount': None, 'GLDecreaseAcct': None, 'GLIncreaseAcct': None, 'PAReturnAcct': None, 'PurchaseAcct': None, 'PurchaseOffsetAcct': None, 'ShippedGoodsAccount': None, 'StockInflationOffsetAccount': None, 'StockInflationAdjustAccount': None, 'VATInRevenueAccount': None, 'WipVarianceAccount': None, 'CostInflationAccount': None, 'WHIncomingCenvatAccount': None, 'WHOutgoingCenvatAccount': None, 'StockInTransitAccount': None, 'WipOffsetProfitAndLossAccount': None, 'InventoryOffsetProfitAndLossAccount': None, 'DefaultBin': None, 'DefaultBinEnforced': 'tNO', 'PurchaseBalanceAccount': None, 'ItemCode': 'ACC-0000005', 'ItemCycleCounts': []}, {'MinimalStock': 0.0, 'MaximalStock': 0.0, 'MinimalOrder': 0.0, 'StandardAveragePrice': 0.0, 'Locked': 'tNO', 'InventoryAccount': None, 'CostAccount': None, 'TransferAccount': None, 'RevenuesAccount': None, 'VarienceAccount': None, 'DecreasingAccount': None, 'IncreasingAccount': None, 'ReturningAccount': None, 'ExpensesAccount': None, 'EURevenuesAccount': None, 'EUExpensesAccount': None, 'ForeignRevenueAcc': None, 'ForeignExpensAcc': None, 'ExemptIncomeAcc': None, 'PriceDifferenceAcc': None, 'WarehouseCode': 'WW-SAM', 'InStock': 0.0, 'Committed': 0.0, 'Ordered': 0.0, 'CountedQuantity': 0.0, 'WasCounted': 'tNO', 'UserSignature': 50, 'Counted': 0.0, 'ExpenseClearingAct': None, 'PurchaseCreditAcc': None, 'EUPurchaseCreditAcc': None, 'ForeignPurchaseCreditAcc': None, 'SalesCreditAcc': None, 'SalesCreditEUAcc': None, 'ExemptedCredits': None, 'SalesCreditForeignAcc': None, 'ExpenseOffsettingAccount': None, 'WipAccount': None, 'ExchangeRateDifferencesAcct': None, 'GoodsClearingAcct': None, 'NegativeInventoryAdjustmentAccount': None, 'CostInflationOffsetAccount': None, 'GLDecreaseAcct': None, 'GLIncreaseAcct': None, 'PAReturnAcct': None, 'PurchaseAcct': None, 'PurchaseOffsetAcct': None, 'ShippedGoodsAccount': None, 'StockInflationOffsetAccount': None, 'StockInflationAdjustAccount': None, 'VATInRevenueAccount': None, 'WipVarianceAccount': None, 'CostInflationAccount': None, 'WHIncomingCenvatAccount': None, 'WHOutgoingCenvatAccount': None, 'StockInTransitAccount': None, 'WipOffsetProfitAndLossAccount': None, 'InventoryOffsetProfitAndLossAccount': None, 'DefaultBin': None, 'DefaultBinEnforced': 'tNO', 'PurchaseBalanceAccount': None, 'ItemCode': 'ACC-0000005', 'ItemCycleCounts': []}, {'MinimalStock': 0.0, 'MaximalStock': 0.0, 'MinimalOrder': 0.0, 'StandardAveragePrice': 0.0, 'Locked': 'tNO', 'InventoryAccount': None, 'CostAccount': None, 'TransferAccount': None, 'RevenuesAccount': None, 'VarienceAccount': None, 'DecreasingAccount': None, 'IncreasingAccount': None, 'ReturningAccount': None, 'ExpensesAccount': None, 'EURevenuesAccount': None, 'EUExpensesAccount': None, 'ForeignRevenueAcc': None, 'ForeignExpensAcc': None, 'ExemptIncomeAcc': None, 'PriceDifferenceAcc': None, 'WarehouseCode': 'WW-WIP', 'InStock': 0.0, 'Committed': 0.0, 'Ordered': 0.0, 'CountedQuantity': 0.0, 'WasCounted': 'tNO', 'UserSignature': 50, 'Counted': 0.0, 'ExpenseClearingAct': None, 'PurchaseCreditAcc': None, 'EUPurchaseCreditAcc': None, 'ForeignPurchaseCreditAcc': None, 'SalesCreditAcc': None, 'SalesCreditEUAcc': None, 'ExemptedCredits': None, 'SalesCreditForeignAcc': None, 'ExpenseOffsettingAccount': None, 'WipAccount': None, 'ExchangeRateDifferencesAcct': None, 'GoodsClearingAcct': None, 'NegativeInventoryAdjustmentAccount': None, 'CostInflationOffsetAccount': None, 'GLDecreaseAcct': None, 'GLIncreaseAcct': None, 'PAReturnAcct': None, 'PurchaseAcct': None, 'PurchaseOffsetAcct': None, 'ShippedGoodsAccount': None, 'StockInflationOffsetAccount': None, 'StockInflationAdjustAccount': None, 'VATInRevenueAccount': None, 'WipVarianceAccount': None, 'CostInflationAccount': None, 'WHIncomingCenvatAccount': None, 'WHOutgoingCenvatAccount': None, 'StockInTransitAccount': None, 'WipOffsetProfitAndLossAccount': None, 'InventoryOffsetProfitAndLossAccount': None, 'DefaultBin': None, 'DefaultBinEnforced': 'tNO', 'PurchaseBalanceAccount': None, 'ItemCode': 'ACC-0000005', 'ItemCycleCounts': []}, {'MinimalStock': 0.0, 'MaximalStock': 0.0, 'MinimalOrder': 0.0, 'StandardAveragePrice': 0.0, 'Locked': 'tNO', 'InventoryAccount': None, 'CostAccount': None, 'TransferAccount': None, 'RevenuesAccount': None, 'VarienceAccount': None, 'DecreasingAccount': None, 'IncreasingAccount': None, 'ReturningAccount': None, 'ExpensesAccount': None, 'EURevenuesAccount': None, 'EUExpensesAccount': None, 'ForeignRevenueAcc': None, 'ForeignExpensAcc': None, 'ExemptIncomeAcc': None, 'PriceDifferenceAcc': None, 'WarehouseCode': 'ZW', 'InStock': 0.0, 'Committed': 0.0, 'Ordered': 0.0, 'CountedQuantity': 0.0, 'WasCounted': 'tNO', 'UserSignature': 50, 'Counted': 0.0, 'ExpenseClearingAct': None, 'PurchaseCreditAcc': None, 'EUPurchaseCreditAcc': None, 'ForeignPurchaseCreditAcc': None, 'SalesCreditAcc': None, 'SalesCreditEUAcc': None, 'ExemptedCredits': None, 'SalesCreditForeignAcc': None, 'ExpenseOffsettingAccount': None, 'WipAccount': None, 'ExchangeRateDifferencesAcct': None, 'GoodsClearingAcct': None, 'NegativeInventoryAdjustmentAccount': None, 'CostInflationOffsetAccount': None, 'GLDecreaseAcct': None, 'GLIncreaseAcct': None, 'PAReturnAcct': None, 'PurchaseAcct': None, 'PurchaseOffsetAcct': None, 'ShippedGoodsAccount': None, 'StockInflationOffsetAccount': None, 'StockInflationAdjustAccount': None, 'VATInRevenueAccount': None, 'WipVarianceAccount': None, 'CostInflationAccount': None, 'WHIncomingCenvatAccount': None, 'WHOutgoingCenvatAccount': None, 'StockInTransitAccount': None, 'WipOffsetProfitAndLossAccount': None, 'InventoryOffsetProfitAndLossAccount': None, 'DefaultBin': None, 'DefaultBinEnforced': 'tNO', 'PurchaseBalanceAccount': None, 'ItemCode': 'ACC-0000005', 'ItemCycleCounts': []}], 'ItemPreferredVendors': [], 'ItemLocalizationInfos': [], 'ItemProjects': [], 'ItemDistributionRules': [], 'ItemAttributeGroups': [], 'ItemDepreciationParameters': [], 'ItemPeriodControls': [], 'ItemUnitOfMeasurementCollection': [{'UoMType': 'iutInventory', 'UoMEntry': 1, 'DefaultBarcode': 0, 'DefaultPackage': None, 'Length1': 0.0, 'Length1Unit': None, 'Length2': 0.0, 'Length2Unit': None, 'Width1': 0.0, 'Width1Unit': None, 'Width2': 0.0, 'Width2Unit': None, 'Height1': 0.0, 'Height1Unit': None, 'Height2': 0.0, 'Height2Unit': None, 'Volume': 0.0, 'VolumeUnit': None, 'Weight1': 0.0, 'Weight1Unit': None, 'Weight2': 0.0, 'Weight2Unit': None, 'ItemUoMPackageCollection': []}, {'UoMType': 'iutPurchasing', 'UoMEntry': 1, 'DefaultBarcode': 0, 'DefaultPackage': None, 'Length1': 0.0, 'Length1Unit': None, 'Length2': 0.0, 'Length2Unit': None, 'Width1': 0.0, 'Width1Unit': None, 'Width2': 0.0, 'Width2Unit': None, 'Height1': 0.0, 'Height1Unit': None, 'Height2': 0.0, 'Height2Unit': None, 'Volume': 0.0, 'VolumeUnit': 2, 'Weight1': 0.0, 'Weight1Unit': None, 'Weight2': 0.0, 'Weight2Unit': None, 'ItemUoMPackageCollection': []}, {'UoMType': 'iutPurchasing', 'UoMEntry': 8, 'DefaultBarcode': None, 'DefaultPackage': None, 'Length1': 0.0, 'Length1Unit': None, 'Length2': 0.0, 'Length2Unit': None, 'Width1': 0.0, 'Width1Unit': None, 'Width2': 0.0, 'Width2Unit': None, 'Height1': 0.0, 'Height1Unit': None, 'Height2': 0.0, 'Height2Unit': None, 'Volume': 0.0, 'VolumeUnit': 4, 'Weight1': 0.0, 'Weight1Unit': None, 'Weight2': 0.0, 'Weight2Unit': None, 'ItemUoMPackageCollection': []}, {'UoMType': 'iutSales', 'UoMEntry': 1, 'DefaultBarcode': 0, 'DefaultPackage': None, 'Length1': 0.0, 'Length1Unit': None, 'Length2': 0.0, 'Length2Unit': None, 'Width1': 0.0, 'Width1Unit': None, 'Width2': 0.0, 'Width2Unit': None, 'Height1': 0.0, 'Height1Unit': None, 'Height2': 0.0, 'Height2Unit': None, 'Volume': 0.0, 'VolumeUnit': 2, 'Weight1': 0.0, 'Weight1Unit': None, 'Weight2': 0.0, 'Weight2Unit': None, 'ItemUoMPackageCollection': []}, {'UoMType': 'iutSales', 'UoMEntry': 8, 'DefaultBarcode': None, 'DefaultPackage': None, 'Length1': 0.0, 'Length1Unit': None, 'Length2': 0.0, 'Length2Unit': None, 'Width1': 0.0, 'Width1Unit': None, 'Width2': 0.0, 'Width2Unit': None, 'Height1': 0.0, 'Height1Unit': None, 'Height2': 0.0, 'Height2Unit': None, 'Volume': 0.0, 'VolumeUnit': 4, 'Weight1': 0.0, 'Weight1Unit': None, 'Weight2': 0.0, 'Weight2Unit': None, 'ItemUoMPackageCollection': []}], 'ItemBarCodeCollection': [], 'ItemIntrastatExtension': {'ItemCode': 'ACC-0000005', 'CommodityCode': None, 'SupplementaryUnit': None, 'FactorOfSupplementaryUnit': 0.0, 'ImportRegionState': 0, 'ExportRegionState': 0, 'ImportNatureOfTransaction': None, 'ExportNatureOfTransaction': None, 'ImportStatisticalProcedure': None, 'ExportStatisticalProcedure': None, 'CountryOfOrigin': None, 'ServiceCode': None, 'Type': 'dDocument_Items', 'ServiceSupplyMethod': 'ssmImmediate', 'ServicePaymentMethod': 'spmOther', 'ImportRegionCountry': 'GB', 'ExportRegionCountry': 'GB', 'UseWeightInCalculation': 'tYES', 'IntrastatRelevant': 'tNO', 'StatisticalCode': None}}]}, 'status': 'success'}
2025-08-05 18:08:15,741 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'Expenses', 'request': {'method': 'GET', 'url': 'https://10.0.0.100:50000/b1s/v1/Expenses', 'data': None, 'params': None}, 'response': None, 'status': None}
2025-08-05 18:08:16,408 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'Expenses', 'request': None, 'response': {'status_code': 400, 'text': '{\n   "error" : {\n      "code" : 200,\n      "message" : {\n         "lang" : "en-us",\n         "value" : "Unrecognized resource path."\n      }\n   }\n}\n'}, 'status': 'failure'}
2025-08-05 18:08:16,412 - sync_service - INFO - API Call: {'service': 'shopify', 'endpoint': 'graphql_local', 'request': {'query': '\n        query getOrders($first: Int!) {\n            orders(first: $first) {\n                edges {\n                    node {\n                        id\n                        name\n                        createdAt\n                    }\n                }\n            }\n        }\n        ', 'variables': {'first': 1}}, 'response': None, 'status': None}
2025-08-05 18:08:16,908 - sync_service - INFO - API Call: {'service': 'shopify', 'endpoint': 'graphql_local', 'request': None, 'response': {'orders': {'edges': [{'node': {'id': 'gid://shopify/Order/6170973569090', 'name': '#1001', 'createdAt': '2025-05-15T08:35:47Z'}}]}}, 'status': 'success'}
2025-08-05 18:08:16,913 - sync_service - INFO - API Call: {'service': 'shopify', 'endpoint': 'graphql_local', 'request': {'query': '\n            query getOrders($first: Int!, $after: String) {\n                orders(first: $first, after: $after, sortKey: CREATED_AT, reverse: true) {\n                    edges {\n                        node {\n                            id\n                            name\n                            createdAt\n                            tags\n                            totalPriceSet {\n                                shopMoney {\n                                    amount\n                                    currencyCode\n                                }\n                            }\n                            subtotalPriceSet {\n                                shopMoney {\n                                    amount\n                                    currencyCode\n                                }\n                            }\n                            totalTaxSet {\n                                shopMoney {\n                                    amount\n                                    currencyCode\n                                }\n                            }\n                            totalShippingPriceSet {\n                                shopMoney {\n                                    amount\n                                    currencyCode\n                                }\n                            }\n                            customer {\n                                id\n                                firstName\n                                lastName\n                                email\n                                phone\n                                addresses {\n                                    address1\n                                    address2\n                                    city\n                                    province\n                                    zip\n                                    country\n                                    phone\n                                }\n                            }\n                            shippingAddress {\n                                address1\n                                address2\n                                city\n                                province\n                                zip\n                                country\n                                phone\n                            }\n                            billingAddress {\n                                address1\n                                address2\n                                city\n                                province\n                                zip\n                                country\n                                phone\n                            }\n                            lineItems(first: 50) {\n                                edges {\n                                    node {\n                                        id\n                                        quantity\n                                        sku\n                                        title\n                                        variant {\n                                            id\n                                            sku\n                                            price\n                                            product {\n                                                id\n                                                title\n                                            }\n                                        }\n                                        discountedTotalSet {\n                                            shopMoney {\n                                                amount\n                                                currencyCode\n                                            }\n                                        }\n                                    }\n                                }\n                            }\n                            note\n                        }\n                    }\n                    pageInfo {\n                        hasNextPage\n                        endCursor\n                    }\n                }\n            }\n            ', 'variables': {'first': 20, 'after': None}}, 'response': None, 'status': None}
2025-08-05 18:08:17,730 - sync_service - INFO - API Call: {'service': 'shopify', 'endpoint': 'graphql_local', 'request': None, 'response': {'orders': {'edges': [{'node': {'id': 'gid://shopify/Order/6318310686786', 'name': '#1480', 'createdAt': '2025-08-05T09:59:13Z', 'tags': [], 'totalPriceSet': {'shopMoney': {'amount': '5200.0', 'currencyCode': 'EGP'}}, 'subtotalPriceSet': {'shopMoney': {'amount': '5000.0', 'currencyCode': 'EGP'}}, 'totalTaxSet': {'shopMoney': {'amount': '0.0', 'currencyCode': 'EGP'}}, 'totalShippingPriceSet': {'shopMoney': {'amount': '200.0', 'currencyCode': 'EGP'}}, 'customer': {'id': 'gid://shopify/Customer/8037256233026', 'firstName': 'Omnia', 'lastName': 'Ezz Elarab', 'email': 'nezzelarab@ezz-elarab.com', 'phone': None, 'addresses': [{'address1': 'Palm hills 6th october, phase 1', 'address2': 'Villa b53', 'city': 'Giza', 'province': '6th of October', 'zip': '00000', 'country': 'Egypt', 'phone': '00201003370743'}]}, 'shippingAddress': {'address1': 'Palm hills 6th october, phase 1', 'address2': 'Villa b53', 'city': 'Giza', 'province': '6th of October', 'zip': '00000', 'country': 'Egypt', 'phone': '00201003370743'}, 'billingAddress': {'address1': 'Palm hills 6th october, phase 1', 'address2': 'Villa b53', 'city': 'Giza', 'province': '6th of October', 'zip': '00000', 'country': 'Egypt', 'phone': '00201003370743'}, 'lineItems': {'edges': [{'node': {'id': 'gid://shopify/LineItem/15830693707842', 'quantity': 1, 'sku': 'FG-0000632', 'title': 'Ember Earrings', 'variant': {'id': 'gid://shopify/ProductVariant/42194952650818', 'sku': 'FG-0000632', 'price': '5000.00', 'product': {'id': 'gid://shopify/Product/7490852847682', 'title': 'Ember Earrings'}}, 'discountedTotalSet': {'shopMoney': {'amount': '5000.0', 'currencyCode': 'EGP'}}}}]}, 'note': None}}, {'node': {'id': 'gid://shopify/Order/6318078263362', 'name': '#1479', 'createdAt': '2025-08-05T04:44:47Z', 'tags': [], 'totalPriceSet': {'shopMoney': {'amount': '7460.0', 'currencyCode': 'EGP'}}, 'subtotalPriceSet': {'shopMoney': {'amount': '7300.0', 'currencyCode': 'EGP'}}, 'totalTaxSet': {'shopMoney': {'amount': '0.0', 'currencyCode': 'EGP'}}, 'totalShippingPriceSet': {'shopMoney': {'amount': '160.0', 'currencyCode': 'EGP'}}, 'customer': {'id': 'gid://shopify/Customer/8035661905986', 'firstName': 'Ziad', 'lastName': 'Fawi', 'email': 'ziadfawi6@gmail.com', 'phone': None, 'addresses': [{'address1': None, 'address2': None, 'city': None, 'province': None, 'zip': None, 'country': 'Egypt', 'phone': None}, {'address1': '46 soultan street behind ices hospital', 'address2': 'Number of the apartment 17', 'city': 'Alexandria', 'province': 'Alexandria', 'zip': None, 'country': 'Egypt', 'phone': '01271088966'}]}, 'shippingAddress': {'address1': '46 soultan street behind ices hospital', 'address2': 'Number of the apartment 17', 'city': 'Alexandria', 'province': 'Alexandria', 'zip': None, 'country': 'Egypt', 'phone': '01271088966'}, 'billingAddress': {'address1': '46 soultan street behind ices hospital', 'address2': 'Number of the apartment 17', 'city': 'Alexandria', 'province': 'Alexandria', 'zip': None, 'country': 'Egypt', 'phone': '01271088966'}, 'lineItems': {'edges': [{'node': {'id': 'gid://shopify/LineItem/15830286434370', 'quantity': 1, 'sku': 'FG-0000077', 'title': 'Sulla Luna Mix Earrings', 'variant': {'id': 'gid://shopify/ProductVariant/42003146276930', 'sku': 'FG-0000077', 'price': '7300.00', 'product': {'id': 'gid://shopify/Product/7442022203458', 'title': 'Sulla Luna Mix Earrings'}}, 'discountedTotalSet': {'shopMoney': {'amount': '7300.0', 'currencyCode': 'EGP'}}}}]}, 'note': None}}, {'node': {'id': 'gid://shopify/Order/6317218398274', 'name': '#1478', 'createdAt': '2025-08-04T18:33:12Z', 'tags': [], 'totalPriceSet': {'shopMoney': {'amount': '2880.0', 'currencyCode': 'EGP'}}, 'subtotalPriceSet': {'shopMoney': {'amount': '2880.0', 'currencyCode': 'EGP'}}, 'totalTaxSet': {'shopMoney': {'amount': '0.0', 'currencyCode': 'EGP'}}, 'totalShippingPriceSet': {'shopMoney': {'amount': '0.0', 'currencyCode': 'EGP'}}, 'customer': {'id': 'gid://shopify/Customer/8032449527874', 'firstName': 'Mahmoud', 'lastName': 'Ayman', 'email': 'mahmoudayman80@yahoo.com', 'phone': None, 'addresses': [{'address1': None, 'address2': None, 'city': None, 'province': None, 'zip': None, 'country': 'Egypt', 'phone': None}, {'address1': '5370 el mokattam', 'address2': None, 'city': 'Cairo', 'province': 'Cairo', 'zip': None, 'country': 'Egypt', 'phone': '01111346333'}]}, 'shippingAddress': None, 'billingAddress': {'address1': '5370 el mokattam', 'address2': None, 'city': 'Cairo', 'province': 'Cairo', 'zip': None, 'country': 'Egypt', 'phone': '01111346333'}, 'lineItems': {'edges': [{'node': {'id': 'gid://shopify/LineItem/15828170047554', 'quantity': 1, 'sku': 'FG-0000589', 'title': 'Una Ring', 'variant': {'id': 'gid://shopify/ProductVariant/42003153518658', 'sku': 'FG-0000589', 'price': '3200.00', 'product': {'id': 'gid://shopify/Product/7442026070082', 'title': 'Una Ring'}}, 'discountedTotalSet': {'shopMoney': {'amount': '3200.0', 'currencyCode': 'EGP'}}}}]}, 'note': None}}, {'node': {'id': 'gid://shopify/Order/6317035520066', 'name': '#1477', 'createdAt': '2025-08-04T16:50:11Z', 'tags': [], 'totalPriceSet': {'shopMoney': {'amount': '5060.0', 'currencyCode': 'EGP'}}, 'subtotalPriceSet': {'shopMoney': {'amount': '4900.0', 'currencyCode': 'EGP'}}, 'totalTaxSet': {'shopMoney': {'amount': '0.0', 'currencyCode': 'EGP'}}, 'totalShippingPriceSet': {'shopMoney': {'amount': '160.0', 'currencyCode': 'EGP'}}, 'customer': {'id': 'gid://shopify/Customer/8031975374914', 'firstName': 'Passant', 'lastName': 'Dawood', 'email': 'passantdawood@gmail.com', 'phone': None, 'addresses': [{'address1': '399 elguish road san stefano grand plaza', 'address2': '1', 'city': 'Alexandria', 'province': 'Alexandria', 'zip': None, 'country': 'Egypt', 'phone': '01223100564'}]}, 'shippingAddress': {'address1': '399 elguish road san stefano grand plaza', 'address2': '1', 'city': 'Alexandria', 'province': 'Alexandria', 'zip': None, 'country': 'Egypt', 'phone': '01223100564'}, 'billingAddress': {'address1': '399 elguish road san stefano grand plaza', 'address2': '1', 'city': 'Alexandria', 'province': 'Alexandria', 'zip': None, 'country': 'Egypt', 'phone': '01223100564'}, 'lineItems': {'edges': [{'node': {'id': 'gid://shopify/LineItem/15827708805186', 'quantity': 1, 'sku': 'FG-0000688', 'title': 'Multi-way Halo Ring', 'variant': {'id': 'gid://shopify/ProductVariant/42194980896834', 'sku': 'FG-0000688', 'price': '4900.00', 'product': {'id': 'gid://shopify/Product/7490853339202', 'title': 'Multi-way Halo Ring'}}, 'discountedTotalSet': {'shopMoney': {'amount': '4900.0', 'currencyCode': 'EGP'}}}}]}, 'note': None}}, {'node': {'id': 'gid://shopify/Order/6317030244418', 'name': '#1476', 'createdAt': '2025-08-04T16:47:03Z', 'tags': [], 'totalPriceSet': {'shopMoney': {'amount': '5320.0', 'currencyCode': 'EGP'}}, 'subtotalPriceSet': {'shopMoney': {'amount': '5200.0', 'currencyCode': 'EGP'}}, 'totalTaxSet': {'shopMoney': {'amount': '0.0', 'currencyCode': 'EGP'}}, 'totalShippingPriceSet': {'shopMoney': {'amount': '120.0', 'currencyCode': 'EGP'}}, 'customer': {'id': 'gid://shopify/Customer/8031970918466', 'firstName': 'Noha', 'lastName': 'Emad', 'email': 'noha@kitshe-eg.com', 'phone': None, 'addresses': [{'address1': 'التجمع الخامس االدور الاول شقه ٤جنوب الأكاديمية أ شارع ان', 'address2': 'التجمع الخامس- جنوب الاكادميه أ شارع انس ابن مالك فيلا ٢٨٦', 'city': 'Cairo', 'province': 'Cairo', 'zip': '11865', 'country': 'Egypt', 'phone': '01200008517'}]}, 'shippingAddress': {'address1': 'التجمع الخامس االدور الاول شقه ٤جنوب الأكاديمية أ شارع ان', 'address2': 'التجمع الخامس- جنوب الاكادميه أ شارع انس ابن مالك فيلا ٢٨٦', 'city': 'Cairo', 'province': 'Cairo', 'zip': '11865', 'country': 'Egypt', 'phone': '01200008517'}, 'billingAddress': {'address1': 'التجمع الخامس االدور الاول شقه ٤جنوب الأكاديمية أ شارع ان', 'address2': 'التجمع الخامس- جنوب الاكادميه أ شارع انس ابن مالك فيلا ٢٨٦', 'city': 'Cairo', 'province': 'Cairo', 'zip': '11865', 'country': 'Egypt', 'phone': '01200008517'}, 'lineItems': {'edges': [{'node': {'id': 'gid://shopify/LineItem/15827697336386', 'quantity': 1, 'sku': 'FG-0000640', 'title': 'Essence Earrings', 'variant': {'id': 'gid://shopify/ProductVariant/42194952945730', 'sku': 'FG-0000640', 'price': '5200.00', 'product': {'id': 'gid://shopify/Product/7490852945986', 'title': 'Essence Earrings'}}, 'discountedTotalSet': {'shopMoney': {'amount': '5200.0', 'currencyCode': 'EGP'}}}}]}, 'note': None}}, {'node': {'id': 'gid://shopify/Order/6316680347714', 'name': '#1475', 'createdAt': '2025-08-04T12:56:00Z', 'tags': [], 'totalPriceSet': {'shopMoney': {'amount': '5120.0', 'currencyCode': 'EGP'}}, 'subtotalPriceSet': {'shopMoney': {'amount': '5000.0', 'currencyCode': 'EGP'}}, 'totalTaxSet': {'shopMoney': {'amount': '0.0', 'currencyCode': 'EGP'}}, 'totalShippingPriceSet': {'shopMoney': {'amount': '120.0', 'currencyCode': 'EGP'}}, 'customer': {'id': 'gid://shopify/Customer/8031264636994', 'firstName': 'Hanan', 'lastName': 'HASSAN', 'email': 'hananhassan1204@gmail.com', 'phone': None, 'addresses': [{'address1': 'القاهرة الجديدة / كمبوند سوديك ڤيليت عمارة واحد إف شقة أرضي زيرو أربعة', 'address2': '04 الدور الارضي', 'city': 'القاهرة', 'province': 'Cairo', 'zip': '11511', 'country': 'Egypt', 'phone': '01000340138'}]}, 'shippingAddress': {'address1': 'القاهرة الجديدة / كمبوند سوديك ڤيليت عمارة واحد إف شقة أرضي زيرو أربعة', 'address2': '04 الدور الارضي', 'city': 'القاهرة', 'province': 'Cairo', 'zip': '11511', 'country': 'Egypt', 'phone': '01000340138'}, 'billingAddress': {'address1': 'القاهرة الجديدة / كمبوند سوديك ڤيليت عمارة واحد إف شقة أرضي زيرو أربعة', 'address2': '04 الدور الارضي', 'city': 'القاهرة', 'province': 'Cairo', 'zip': '11511', 'country': 'Egypt', 'phone': '01000340138'}, 'lineItems': {'edges': [{'node': {'id': 'gid://shopify/LineItem/15826901237826', 'quantity': 1, 'sku': 'FG-0000632', 'title': 'Ember Earrings', 'variant': {'id': 'gid://shopify/ProductVariant/42194952650818', 'sku': 'FG-0000632', 'price': '5000.00', 'product': {'id': 'gid://shopify/Product/7490852847682', 'title': 'Ember Earrings'}}, 'discountedTotalSet': {'shopMoney': {'amount': '5000.0', 'currencyCode': 'EGP'}}}}]}, 'note': None}}, {'node': {'id': 'gid://shopify/Order/6316580536386', 'name': '#1474', 'createdAt': '2025-08-04T11:08:05Z', 'tags': [], 'totalPriceSet': {'shopMoney': {'amount': '6020.0', 'currencyCode': 'EGP'}}, 'subtotalPriceSet': {'shopMoney': {'amount': '5900.0', 'currencyCode': 'EGP'}}, 'totalTaxSet': {'shopMoney': {'amount': '0.0', 'currencyCode': 'EGP'}}, 'totalShippingPriceSet': {'shopMoney': {'amount': '120.0', 'currencyCode': 'EGP'}}, 'customer': {'id': 'gid://shopify/Customer/8031120457794', 'firstName': 'Nourhan', 'lastName': 'Swellam', 'email': 'swellam@aucegypt.edu', 'phone': None, 'addresses': [{'address1': '144 el banafseg 11 ', 'address2': 'Villa 144', 'city': 'Cairo', 'province': 'Cairo', 'zip': '11341', 'country': 'Egypt', 'phone': '+201003928976'}]}, 'shippingAddress': {'address1': '144 el banafseg 11', 'address2': 'Villa 144', 'city': 'Cairo', 'province': 'Cairo', 'zip': '11341', 'country': 'Egypt', 'phone': '+201003928976'}, 'billingAddress': {'address1': '144 el banafseg 11', 'address2': 'Villa 144', 'city': 'Cairo', 'province': 'Cairo', 'zip': '11341', 'country': 'Egypt', 'phone': '+201003928976'}, 'lineItems': {'edges': [{'node': {'id': 'gid://shopify/LineItem/15826707382338', 'quantity': 1, 'sku': 'FG-0000369', 'title': 'Mini Sahara Mix Hoop', 'variant': {'id': 'gid://shopify/ProductVariant/42003146997826', 'sku': 'FG-0000369', 'price': '5900.00', 'product': {'id': 'gid://shopify/Product/7442022989890', 'title': 'Mini Sahara Mix Hoop'}}, 'discountedTotalSet': {'shopMoney': {'amount': '5900.0', 'currencyCode': 'EGP'}}}}]}, 'note': None}}, {'node': {'id': 'gid://shopify/Order/6315006394434', 'name': '#1473', 'createdAt': '2025-08-03T15:21:25Z', 'tags': [], 'totalPriceSet': {'shopMoney': {'amount': '4420.0', 'currencyCode': 'EGP'}}, 'subtotalPriceSet': {'shopMoney': {'amount': '4300.0', 'currencyCode': 'EGP'}}, 'totalTaxSet': {'shopMoney': {'amount': '0.0', 'currencyCode': 'EGP'}}, 'totalShippingPriceSet': {'shopMoney': {'amount': '120.0', 'currencyCode': 'EGP'}}, 'customer': {'id': 'gid://shopify/Customer/8015867478082', 'firstName': 'Yomna', 'lastName': 'Sherif', 'email': 'yomna.sherif.nawal@gmail.com', 'phone': None, 'addresses': [{'address1': 'Group 15 , building 5 , apartment 22', 'address2': 'Group 15 , building 5 , apartment 22', 'city': 'Rehab City', 'province': 'Cairo', 'zip': '0000', 'country': 'Egypt', 'phone': '+201003988787'}, {'address1': None, 'address2': None, 'city': None, 'province': None, 'zip': None, 'country': 'Egypt', 'phone': None}]}, 'shippingAddress': {'address1': 'Group 15 , building 5 , apartment 22', 'address2': 'Group 15 , building 5 , apartment 22', 'city': 'Rehab City', 'province': 'Cairo', 'zip': '0000', 'country': 'Egypt', 'phone': '+201003988787'}, 'billingAddress': {'address1': 'Group 15 , building 5 , apartment 22', 'address2': 'Group 15 , building 5 , apartment 22', 'city': 'Rehab City', 'province': 'Cairo', 'zip': '0000', 'country': 'Egypt', 'phone': '+201003988787'}, 'lineItems': {'edges': [{'node': {'id': 'gid://shopify/LineItem/15822752055362', 'quantity': 1, 'sku': 'FG-0000499', 'title': 'Cassandra Mix Pinky Ring', 'variant': {'id': 'gid://shopify/ProductVariant/42003149815874', 'sku': 'FG-0000499', 'price': '4300.00', 'product': {'id': 'gid://shopify/Product/7442024235074', 'title': 'Cassandra Mix Pinky Ring'}}, 'discountedTotalSet': {'shopMoney': {'amount': '4300.0', 'currencyCode': 'EGP'}}}}]}, 'note': None}}, {'node': {'id': 'gid://shopify/Order/6314877780034', 'name': '#1472', 'createdAt': '2025-08-03T13:47:12Z', 'tags': [], 'totalPriceSet': {'shopMoney': {'amount': '121.0', 'currencyCode': 'EGP'}}, 'subtotalPriceSet': {'shopMoney': {'amount': '1.0', 'currencyCode': 'EGP'}}, 'totalTaxSet': {'shopMoney': {'amount': '0.0', 'currencyCode': 'EGP'}}, 'totalShippingPriceSet': {'shopMoney': {'amount': '120.0', 'currencyCode': 'EGP'}}, 'customer': {'id': 'gid://shopify/Customer/7539785334850', 'firstName': 'Karim', 'lastName': 'Wafik', 'email': 'karimwafik.kw@gmail.com', 'phone': None, 'addresses': [{'address1': '97 Marghany st., Heliopolis, Cairo, Egypt', 'address2': None, 'city': 'Cairo', 'province': 'Cairo', 'zip': '21113', 'country': 'Egypt', 'phone': '+201005527292'}, {'address1': 'Stone Residence Compound 306, Third Settlement', 'address2': '9', 'city': 'Cairo', 'province': 'Cairo', 'zip': None, 'country': 'Egypt', 'phone': '01005527292'}]}, 'shippingAddress': {'address1': 'Stone Residence Compound 306, Third Settlement', 'address2': '9', 'city': 'Cairo', 'province': 'Cairo', 'zip': None, 'country': 'Egypt', 'phone': '01005527292'}, 'billingAddress': {'address1': 'Stone Residence Compound 306, Third Settlement', 'address2': '9', 'city': 'Cairo', 'province': 'Cairo', 'zip': None, 'country': 'Egypt', 'phone': '01005527292'}, 'lineItems': {'edges': [{'node': {'id': 'gid://shopify/LineItem/15822411366466', 'quantity': 1, 'sku': None, 'title': 'karim test', 'variant': {'id': 'gid://shopify/ProductVariant/42361056985154', 'sku': None, 'price': '1.00', 'product': {'id': 'gid://shopify/Product/7522803515458', 'title': 'karim test'}}, 'discountedTotalSet': {'shopMoney': {'amount': '1.0', 'currencyCode': 'EGP'}}}}]}, 'note': None}}, {'node': {'id': 'gid://shopify/Order/6314801463362', 'name': '#1471', 'createdAt': '2025-08-03T12:37:41Z', 'tags': [], 'totalPriceSet': {'shopMoney': {'amount': '4620.0', 'currencyCode': 'EGP'}}, 'subtotalPriceSet': {'shopMoney': {'amount': '4500.0', 'currencyCode': 'EGP'}}, 'totalTaxSet': {'shopMoney': {'amount': '0.0', 'currencyCode': 'EGP'}}, 'totalShippingPriceSet': {'shopMoney': {'amount': '120.0', 'currencyCode': 'EGP'}}, 'customer': {'id': 'gid://shopify/Customer/8028986572866', 'firstName': 'Manal', 'lastName': 'Dorgham', 'email': 'manaldorgham4@gmail.com', 'phone': None, 'addresses': [{'address1': 'Moon valley compound. New Cairo', 'address2': '45 D', 'city': 'Cairo', 'province': 'Cairo', 'zip': None, 'country': 'Egypt', 'phone': '01222455309'}]}, 'shippingAddress': {'address1': 'Moon valley compound. New Cairo', 'address2': '45 D', 'city': 'Cairo', 'province': 'Cairo', 'zip': None, 'country': 'Egypt', 'phone': '01222455309'}, 'billingAddress': {'address1': 'Moon valley compound. New Cairo', 'address2': '45 D', 'city': 'Cairo', 'province': 'Cairo', 'zip': None, 'country': 'Egypt', 'phone': '01222455309'}, 'lineItems': {'edges': [{'node': {'id': 'gid://shopify/LineItem/15822235631682', 'quantity': 1, 'sku': 'FG-0000544', 'title': 'Floway ring set', 'variant': {'id': 'gid://shopify/ProductVariant/42003150602306', 'sku': 'FG-0000544', 'price': '4500.00', 'product': {'id': 'gid://shopify/Product/7442024890434', 'title': 'Floway ring set'}}, 'discountedTotalSet': {'shopMoney': {'amount': '4500.0', 'currencyCode': 'EGP'}}}}]}, 'note': None}}, {'node': {'id': 'gid://shopify/Order/6314790420546', 'name': '#1470', 'createdAt': '2025-08-03T12:26:20Z', 'tags': [], 'totalPriceSet': {'shopMoney': {'amount': '7600.0', 'currencyCode': 'EGP'}}, 'subtotalPriceSet': {'shopMoney': {'amount': '7600.0', 'currencyCode': 'EGP'}}, 'totalTaxSet': {'shopMoney': {'amount': '0.0', 'currencyCode': 'EGP'}}, 'totalShippingPriceSet': {'shopMoney': {'amount': '0.0', 'currencyCode': 'EGP'}}, 'customer': {'id': 'gid://shopify/Customer/7539785334850', 'firstName': 'Karim', 'lastName': 'Wafik', 'email': 'karimwafik.kw@gmail.com', 'phone': None, 'addresses': [{'address1': '97 Marghany st., Heliopolis, Cairo, Egypt', 'address2': None, 'city': 'Cairo', 'province': 'Cairo', 'zip': '21113', 'country': 'Egypt', 'phone': '+201005527292'}, {'address1': 'Stone Residence Compound 306, Third Settlement', 'address2': '9', 'city': 'Cairo', 'province': 'Cairo', 'zip': None, 'country': 'Egypt', 'phone': '01005527292'}]}, 'shippingAddress': None, 'billingAddress': None, 'lineItems': {'edges': [{'node': {'id': 'gid://shopify/LineItem/15822212661314', 'quantity': 1, 'sku': 'FG-0000645', 'title': 'Flare Earrings', 'variant': {'id': 'gid://shopify/ProductVariant/42277872271426', 'sku': 'FG-0000645', 'price': '3800.00', 'product': {'id': 'gid://shopify/Product/7506409586754', 'title': 'Flare Earrings'}}, 'discountedTotalSet': {'shopMoney': {'amount': '3800.0', 'currencyCode': 'EGP'}}}}, {'node': {'id': 'gid://shopify/LineItem/15822221770818', 'quantity': 1, 'sku': None, 'title': 'Gift Card', 'variant': None, 'discountedTotalSet': {'shopMoney': {'amount': '3800.0', 'currencyCode': 'EGP'}}}}]}, 'note': None}}, {'node': {'id': 'gid://shopify/Order/6314786357314', 'name': '#1469', 'createdAt': '2025-08-03T12:21:46Z', 'tags': [], 'totalPriceSet': {'shopMoney': {'amount': '6900.0', 'currencyCode': 'EGP'}}, 'subtotalPriceSet': {'shopMoney': {'amount': '6900.0', 'currencyCode': 'EGP'}}, 'totalTaxSet': {'shopMoney': {'amount': '0.0', 'currencyCode': 'EGP'}}, 'totalShippingPriceSet': {'shopMoney': {'amount': '0.0', 'currencyCode': 'EGP'}}, 'customer': None, 'shippingAddress': None, 'billingAddress': None, 'lineItems': {'edges': [{'node': {'id': 'gid://shopify/LineItem/15822205321282', 'quantity': 1, 'sku': 'FG-0000345', 'title': 'Mini Harmonia Earrings', 'variant': {'id': 'gid://shopify/ProductVariant/42003146801218', 'sku': 'FG-0000345', 'price': '6900.00', 'product': {'id': 'gid://shopify/Product/7442022793282', 'title': 'Mini Harmonia Earrings'}}, 'discountedTotalSet': {'shopMoney': {'amount': '6900.0', 'currencyCode': 'EGP'}}}}]}, 'note': None}}, {'node': {'id': 'gid://shopify/Order/6314775969858', 'name': '#1468', 'createdAt': '2025-08-03T12:12:09Z', 'tags': [], 'totalPriceSet': {'shopMoney': {'amount': '2920.0', 'currencyCode': 'EGP'}}, 'subtotalPriceSet': {'shopMoney': {'amount': '2800.0', 'currencyCode': 'EGP'}}, 'totalTaxSet': {'shopMoney': {'amount': '0.0', 'currencyCode': 'EGP'}}, 'totalShippingPriceSet': {'shopMoney': {'amount': '120.0', 'currencyCode': 'EGP'}}, 'customer': {'id': 'gid://shopify/Customer/8028955639874', 'firstName': 'Mariam', 'lastName': 'Mackawy', 'email': 'mariammackawy5@gmail.com', 'phone': None, 'addresses': [{'address1': 'الرحاب ٢، مجموعة ١٣١، عمارة ٢٠، شقة ٤١', 'address2': '41 El Rehab2, Group 131, Building 20, Apartment', 'city': 'Cairo', 'province': 'Cairo', 'zip': '11511', 'country': 'Egypt', 'phone': '01285358540'}]}, 'shippingAddress': {'address1': 'الرحاب ٢، مجموعة ١٣١، عمارة ٢٠، شقة ٤١', 'address2': '41 El Rehab2, Group 131, Building 20, Apartment', 'city': 'Cairo', 'province': 'Cairo', 'zip': '11511', 'country': 'Egypt', 'phone': '01285358540'}, 'billingAddress': {'address1': 'الرحاب ٢، مجموعة ١٣١، عمارة ٢٠، شقة ٤١', 'address2': '41 El Rehab2, Group 131, Building 20, Apartment', 'city': 'Cairo', 'province': 'Cairo', 'zip': '11511', 'country': 'Egypt', 'phone': '01285358540'}, 'lineItems': {'edges': [{'node': {'id': 'gid://shopify/LineItem/15822184742978', 'quantity': 1, 'sku': 'FG-0000498', 'title': 'Cassandra Pinky Ring', 'variant': {'id': 'gid://shopify/ProductVariant/42003149881410', 'sku': 'FG-0000498', 'price': '2800.00', 'product': {'id': 'gid://shopify/Product/7442024300610', 'title': 'Cassandra Pinky Ring'}}, 'discountedTotalSet': {'shopMoney': {'amount': '2800.0', 'currencyCode': 'EGP'}}}}]}, 'note': None}}, {'node': {'id': 'gid://shopify/Order/6314438000706', 'name': '#1467', 'createdAt': '2025-08-03T04:32:29Z', 'tags': [], 'totalPriceSet': {'shopMoney': {'amount': '3200.0', 'currencyCode': 'EGP'}}, 'subtotalPriceSet': {'shopMoney': {'amount': '3200.0', 'currencyCode': 'EGP'}}, 'totalTaxSet': {'shopMoney': {'amount': '0.0', 'currencyCode': 'EGP'}}, 'totalShippingPriceSet': {'shopMoney': {'amount': '0.0', 'currencyCode': 'EGP'}}, 'customer': {'id': 'gid://shopify/Customer/8026031751234', 'firstName': 'sally', 'lastName': 'monir', 'email': 'sallymonir@yahoo.com', 'phone': None, 'addresses': [{'address1': '113, st. 17, First Area, fifth zone, fifth settlement', 'address2': '2', 'city': 'New Cairo', 'province': 'Cairo', 'zip': None, 'country': 'Egypt', 'phone': '+201273099926'}]}, 'shippingAddress': None, 'billingAddress': {'address1': '113, st. 17, First Area, fifth zone, fifth settlement', 'address2': '2', 'city': 'New Cairo', 'province': 'Cairo', 'zip': None, 'country': 'Egypt', 'phone': '+201273099926'}, 'lineItems': {'edges': [{'node': {'id': 'gid://shopify/LineItem/15821581156418', 'quantity': 1, 'sku': 'FG-0000468', 'title': 'Frost Ring', 'variant': {'id': 'gid://shopify/ProductVariant/42003151618114', 'sku': 'FG-0000468', 'price': '3200.00', 'product': {'id': 'gid://shopify/Product/7442025381954', 'title': 'Frost Ring'}}, 'discountedTotalSet': {'shopMoney': {'amount': '3200.0', 'currencyCode': 'EGP'}}}}]}, 'note': None}}, {'node': {'id': 'gid://shopify/Order/6312813002818', 'name': '#1466', 'createdAt': '2025-08-02T11:04:39Z', 'tags': [], 'totalPriceSet': {'shopMoney': {'amount': '4420.0', 'currencyCode': 'EGP'}}, 'subtotalPriceSet': {'shopMoney': {'amount': '4300.0', 'currencyCode': 'EGP'}}, 'totalTaxSet': {'shopMoney': {'amount': '0.0', 'currencyCode': 'EGP'}}, 'totalShippingPriceSet': {'shopMoney': {'amount': '120.0', 'currencyCode': 'EGP'}}, 'customer': {'id': 'gid://shopify/Customer/8026480607298', 'firstName': 'Nadine', 'lastName': 'GALAL', 'email': 'nadinegalal09@gmail.com', 'phone': None, 'addresses': [{'address1': 'امام ٣١ شارع ابراهيم حلمي الدور ٣ شقة ١١', 'address2': 'الدور ٣ شقة ١١', 'city': 'Alexandria', 'province': 'Alexandria', 'zip': None, 'country': 'Egypt', 'phone': '01284444565'}]}, 'shippingAddress': {'address1': 'امام ٣١ شارع ابراهيم حلمي الدور ٣ شقة ١١', 'address2': 'الدور ٣ شقة ١١', 'city': 'Alexandria', 'province': 'Alexandria', 'zip': None, 'country': 'Egypt', 'phone': '01284444565'}, 'billingAddress': {'address1': 'امام ٣١ شارع ابراهيم حلمي الدور ٣ شقة ١١', 'address2': 'الدور ٣ شقة ١١', 'city': 'Alexandria', 'province': 'Alexandria', 'zip': None, 'country': 'Egypt', 'phone': '01284444565'}, 'lineItems': {'edges': [{'node': {'id': 'gid://shopify/LineItem/15817138307138', 'quantity': 1, 'sku': 'FG-0000499', 'title': 'Cassandra Mix Pinky Ring', 'variant': {'id': 'gid://shopify/ProductVariant/42003149815874', 'sku': 'FG-0000499', 'price': '4300.00', 'product': {'id': 'gid://shopify/Product/7442024235074', 'title': 'Cassandra Mix Pinky Ring'}}, 'discountedTotalSet': {'shopMoney': {'amount': '4300.0', 'currencyCode': 'EGP'}}}}]}, 'note': None}}, {'node': {'id': 'gid://shopify/Order/6312140603458', 'name': '#1465', 'createdAt': '2025-08-01T23:27:00Z', 'tags': [], 'totalPriceSet': {'shopMoney': {'amount': '8860.0', 'currencyCode': 'EGP'}}, 'subtotalPriceSet': {'shopMoney': {'amount': '8700.0', 'currencyCode': 'EGP'}}, 'totalTaxSet': {'shopMoney': {'amount': '0.0', 'currencyCode': 'EGP'}}, 'totalShippingPriceSet': {'shopMoney': {'amount': '160.0', 'currencyCode': 'EGP'}}, 'customer': {'id': 'gid://shopify/Customer/8024664145986', 'firstName': 'Mai', 'lastName': 'Aladdin', 'email': 'mayyo69@gmail.com', 'phone': None, 'addresses': [{'address1': 'Sohag - shar2', 'address2': None, 'city': 'Sohag', 'province': 'Sohag', 'zip': None, 'country': 'Egypt', 'phone': '01027733614'}]}, 'shippingAddress': {'address1': 'Sohag - shar2', 'address2': None, 'city': 'Sohag', 'province': 'Sohag', 'zip': None, 'country': 'Egypt', 'phone': '01027733614'}, 'billingAddress': {'address1': 'Sohag - shar2', 'address2': None, 'city': 'Sohag', 'province': 'Sohag', 'zip': None, 'country': 'Egypt', 'phone': '01027733614'}, 'lineItems': {'edges': [{'node': {'id': 'gid://shopify/LineItem/15815787151426', 'quantity': 1, 'sku': 'FG-0000498', 'title': 'Cassandra Pinky Ring', 'variant': {'id': 'gid://shopify/ProductVariant/42003149881410', 'sku': 'FG-0000498', 'price': '2800.00', 'product': {'id': 'gid://shopify/Product/7442024300610', 'title': 'Cassandra Pinky Ring'}}, 'discountedTotalSet': {'shopMoney': {'amount': '2800.0', 'currencyCode': 'EGP'}}}}, {'node': {'id': 'gid://shopify/LineItem/15815787184194', 'quantity': 1, 'sku': 'FG-0000575', 'title': 'Janus Cuff', 'variant': {'id': 'gid://shopify/ProductVariant/42003153256514', 'sku': 'FG-0000575', 'price': '5900.00', 'product': {'id': 'gid://shopify/Product/7442025906242', 'title': 'Janus Cuff'}}, 'discountedTotalSet': {'shopMoney': {'amount': '5900.0', 'currencyCode': 'EGP'}}}}]}, 'note': None}}, {'node': {'id': 'gid://shopify/Order/6311861026882', 'name': '#1464', 'createdAt': '2025-08-01T20:45:45Z', 'tags': [], 'totalPriceSet': {'shopMoney': {'amount': '4800.0', 'currencyCode': 'EGP'}}, 'subtotalPriceSet': {'shopMoney': {'amount': '4800.0', 'currencyCode': 'EGP'}}, 'totalTaxSet': {'shopMoney': {'amount': '0.0', 'currencyCode': 'EGP'}}, 'totalShippingPriceSet': {'shopMoney': {'amount': '0.0', 'currencyCode': 'EGP'}}, 'customer': {'id': 'gid://shopify/Customer/8024130191426', 'firstName': 'Ibrahim', 'lastName': 'ElGohary', 'email': 'hima22may@hotmail.com', 'phone': None, 'addresses': [{'address1': 'Wady compound', 'address2': 'Home', 'city': 'Cairo', 'province': 'Cairo', 'zip': None, 'country': 'Egypt', 'phone': '01007217010'}]}, 'shippingAddress': None, 'billingAddress': {'address1': 'Wady compound', 'address2': 'Home', 'city': 'Cairo', 'province': 'Cairo', 'zip': None, 'country': 'Egypt', 'phone': '01007217010'}, 'lineItems': {'edges': [{'node': {'id': 'gid://shopify/LineItem/15815036600386', 'quantity': 1, 'sku': 'FG-0000075', 'title': 'Sulla Luna Earrings', 'variant': {'id': 'gid://shopify/ProductVariant/42003146211394', 'sku': 'FG-0000075', 'price': '4800.00', 'product': {'id': 'gid://shopify/Product/7442022170690', 'title': 'Sulla Luna Earrings'}}, 'discountedTotalSet': {'shopMoney': {'amount': '4800.0', 'currencyCode': 'EGP'}}}}]}, 'note': None}}, {'node': {'id': 'gid://shopify/Order/6311162380354', 'name': '#1463', 'createdAt': '2025-08-01T15:19:07Z', 'tags': [], 'totalPriceSet': {'shopMoney': {'amount': '7460.0', 'currencyCode': 'EGP'}}, 'subtotalPriceSet': {'shopMoney': {'amount': '7300.0', 'currencyCode': 'EGP'}}, 'totalTaxSet': {'shopMoney': {'amount': '0.0', 'currencyCode': 'EGP'}}, 'totalShippingPriceSet': {'shopMoney': {'amount': '160.0', 'currencyCode': 'EGP'}}, 'customer': {'id': 'gid://shopify/Customer/8022959784002', 'firstName': 'Nahed', 'lastName': 'Mohamed', 'email': 'nahedmohamed714@gmail.com', 'phone': None, 'addresses': [{'address1': 'العصافره بحرى الاسكندريه شارع اطلس عماره ١١ مكرر بجوار سوبر ناركت تسالى جاد امام مايوركا كافيه', 'address2': 'الدور التامن شقه ١٥', 'city': 'alexandria', 'province': 'Alexandria', 'zip': None, 'country': 'Egypt', 'phone': '+201284002489'}]}, 'shippingAddress': {'address1': 'العصافره بحرى الاسكندريه شارع اطلس عماره ١١ مكرر بجوار سوبر ناركت تسالى جاد امام مايوركا كافيه', 'address2': 'الدور التامن شقه ١٥', 'city': 'alexandria', 'province': 'Alexandria', 'zip': None, 'country': 'Egypt', 'phone': '+201284002489'}, 'billingAddress': {'address1': 'العصافره بحرى الاسكندريه شارع اطلس عماره ١١ مكرر بجوار سوبر ناركت تسالى جاد امام مايوركا كافيه', 'address2': 'الدور التامن شقه ١٥', 'city': 'alexandria', 'province': 'Alexandria', 'zip': None, 'country': 'Egypt', 'phone': '+201284002489'}, 'lineItems': {'edges': [{'node': {'id': 'gid://shopify/LineItem/15813349867586', 'quantity': 1, 'sku': 'FG-0000077', 'title': 'Sulla Luna Mix Earrings', 'variant': {'id': 'gid://shopify/ProductVariant/42003146276930', 'sku': 'FG-0000077', 'price': '7300.00', 'product': {'id': 'gid://shopify/Product/7442022203458', 'title': 'Sulla Luna Mix Earrings'}}, 'discountedTotalSet': {'shopMoney': {'amount': '7300.0', 'currencyCode': 'EGP'}}}}]}, 'note': None}}, {'node': {'id': 'gid://shopify/Order/6308680728642', 'name': '#1462', 'createdAt': '2025-07-31T09:58:23Z', 'tags': [], 'totalPriceSet': {'shopMoney': {'amount': '25900.0', 'currencyCode': 'EGP'}}, 'subtotalPriceSet': {'shopMoney': {'amount': '25700.0', 'currencyCode': 'EGP'}}, 'totalTaxSet': {'shopMoney': {'amount': '0.0', 'currencyCode': 'EGP'}}, 'totalShippingPriceSet': {'shopMoney': {'amount': '200.0', 'currencyCode': 'EGP'}}, 'customer': {'id': 'gid://shopify/Customer/8016631660610', 'firstName': 'Mohamed', 'lastName': 'Maher', 'email': 'm.maher525@gmail.com', 'phone': None, 'addresses': [{'address1': None, 'address2': None, 'city': None, 'province': None, 'zip': None, 'country': 'Egypt', 'phone': None}, {'address1': 'الهضبة الوسطى الحي الثالث كمباوند ديار سيتي 3 خلف مدرسة ريماس', 'address2': 'عمارة 2 شقة 20 بوابة 3', 'city': 'Al Mokkatam', 'province': 'Cairo', 'zip': None, 'country': 'Egypt', 'phone': '01069987443'}]}, 'shippingAddress': {'address1': 'الهضبة الوسطى الحي الثالث كمباوند ديار سيتي 3 خلف مدرسة ريماس', 'address2': 'عمارة 2 شقة 20 بوابة 3', 'city': 'Al Mokkatam', 'province': 'Cairo', 'zip': None, 'country': 'Egypt', 'phone': '01069987443'}, 'billingAddress': {'address1': 'الهضبة الوسطى الحي الثالث كمباوند ديار سيتي 3 خلف مدرسة ريماس', 'address2': 'عمارة 2 شقة 20 بوابة 3', 'city': 'Al Mokkatam', 'province': 'Cairo', 'zip': None, 'country': 'Egypt', 'phone': '01069987443'}, 'lineItems': {'edges': [{'node': {'id': 'gid://shopify/LineItem/15807895044162', 'quantity': 1, 'sku': 'FG-0000512', 'title': 'Riverstone Bracelet', 'variant': {'id': 'gid://shopify/ProductVariant/42003152404546', 'sku': 'FG-0000512', 'price': '5000.00', 'product': {'id': 'gid://shopify/Product/7442025611330', 'title': 'Riverstone Bracelet'}}, 'discountedTotalSet': {'shopMoney': {'amount': '5000.0', 'currencyCode': 'EGP'}}}}, {'node': {'id': 'gid://shopify/LineItem/15807895076930', 'quantity': 1, 'sku': 'FG-0000571', 'title': 'Riverstone Ring Mix', 'variant': {'id': 'gid://shopify/ProductVariant/42003150995522', 'sku': 'FG-0000571', 'price': '3900.00', 'product': {'id': 'gid://shopify/Product/7442025152578', 'title': 'Riverstone Ring Mix'}}, 'discountedTotalSet': {'shopMoney': {'amount': '3900.0', 'currencyCode': 'EGP'}}}}, {'node': {'id': 'gid://shopify/LineItem/15807895109698', 'quantity': 1, 'sku': 'FG-0000568', 'title': 'Riverstone Necklace Mix', 'variant': {'id': 'gid://shopify/ProductVariant/42003150962754', 'sku': 'FG-0000568', 'price': '16800.00', 'product': {'id': 'gid://shopify/Product/7442025119810', 'title': 'Riverstone Necklace Mix'}}, 'discountedTotalSet': {'shopMoney': {'amount': '16800.0', 'currencyCode': 'EGP'}}}}]}, 'note': None}}, {'node': {'id': 'gid://shopify/Order/6308073570370', 'name': '#1461', 'createdAt': '2025-07-30T23:37:58Z', 'tags': [], 'totalPriceSet': {'shopMoney': {'amount': '6700.0', 'currencyCode': 'EGP'}}, 'subtotalPriceSet': {'shopMoney': {'amount': '6500.0', 'currencyCode': 'EGP'}}, 'totalTaxSet': {'shopMoney': {'amount': '0.0', 'currencyCode': 'EGP'}}, 'totalShippingPriceSet': {'shopMoney': {'amount': '200.0', 'currencyCode': 'EGP'}}, 'customer': {'id': 'gid://shopify/Customer/8015808462914', 'firstName': 'farouk', 'lastName': 'yehia', 'email': 'farouky01@gmail.com', 'phone': None, 'addresses': [{'address1': 'mesaha sq', 'address2': '5 mesaha sq, 15th floor', 'city': 'giza', 'province': 'Cairo', 'zip': '12611', 'country': 'Egypt', 'phone': '+201060520013'}]}, 'shippingAddress': {'address1': 'mesaha sq', 'address2': '5 mesaha sq, 15th floor', 'city': 'giza', 'province': 'Cairo', 'zip': '12611', 'country': 'Egypt', 'phone': '+201060520013'}, 'billingAddress': {'address1': 'mesaha sq', 'address2': '5 mesaha sq, 15th floor', 'city': 'giza', 'province': 'Cairo', 'zip': '12611', 'country': 'Egypt', 'phone': '+201060520013'}, 'lineItems': {'edges': [{'node': {'id': 'gid://shopify/LineItem/15806636818498', 'quantity': 1, 'sku': 'FG-0000408', 'title': 'Nightfall Earrings', 'variant': {'id': 'gid://shopify/ProductVariant/42003148996674', 'sku': 'FG-0000408', 'price': '6500.00', 'product': {'id': 'gid://shopify/Product/7442023841858', 'title': 'Nightfall Earrings'}}, 'discountedTotalSet': {'shopMoney': {'amount': '6500.0', 'currencyCode': 'EGP'}}}}]}, 'note': None}}], 'pageInfo': {'hasNextPage': True, 'endCursor': 'eyJsYXN0X2lkIjo2MzA4MDczNTcwMzcwLCJsYXN0X3ZhbHVlIjoiMjAyNS0wNy0zMCAyMzozNzo1OC45MDkxNTcifQ=='}}}, 'status': 'success'}
2025-08-05 18:08:17,733 - sync_service - INFO - Retrieved 20 total orders, 20 unsynced orders from Shopify store local
2025-08-05 18:08:17,734 - sync_service - INFO - Processing order: #1480
2025-08-05 18:08:17,734 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'BusinessPartners', 'request': {'method': 'GET', 'url': 'https://10.0.0.100:50000/b1s/v1/BusinessPartners', 'data': None, 'params': {'$filter': "Phone1 eq '00201003370743' or Phone2 eq '00201003370743' or Cellular eq '00201003370743'", '$top': 1}}, 'response': None, 'status': None}
2025-08-05 18:08:18,661 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'BusinessPartners', 'request': None, 'response': {'odata.metadata': 'https://10.0.0.100:50000/b1s/v1/$metadata#BusinessPartners', 'value': [{'CardCode': 'C0021031', 'CardName': 'Omnia Ezz Elarab', 'CardType': 'cCustomer', 'GroupCode': 100, 'Address': None, 'ZipCode': None, 'MailAddress': 'Palm hills 6th october, phase 1 Villa b53', 'MailZipCode': '00000', 'Phone1': None, 'Phone2': None, 'Fax': None, 'ContactPerson': None, 'Notes': None, 'PayTermsGrpCode': -1, 'CreditLimit': 0.0, 'MaxCommitment': 0.0, 'DiscountPercent': 0.0, 'VatLiable': 'vLiable', 'FederalTaxID': None, 'DeductibleAtSource': 'tNO', 'DeductionPercent': 0.0, 'DeductionValidUntil': None, 'PriceListNum': 1, 'IntrestRatePercent': 0.0, 'CommissionPercent': 0.0, 'CommissionGroupCode': 0, 'FreeText': None, 'SalesPersonCode': -1, 'Currency': 'EGP', 'RateDiffAccount': None, 'Cellular': '00201003370743', 'AvarageLate': None, 'City': None, 'County': None, 'Country': 'EG', 'MailCity': 'Giza', 'MailCounty': None, 'MailCountry': 'EG', 'EmailAddress': None, 'Picture': None, 'DefaultAccount': None, 'DefaultBranch': None, 'DefaultBankCode': '-1', 'AdditionalID': None, 'Pager': None, 'FatherCard': None, 'CardForeignName': None, 'FatherType': 'cPayments_sum', 'DeductionOffice': None, 'ExportCode': None, 'MinIntrest': 0.0, 'CurrentAccountBalance': 0.0, 'OpenDeliveryNotesBalance': 0.0, 'OpenOrdersBalance': 0.0, 'OpenChecksBalance': 0.0, 'VatGroup': None, 'ShippingType': None, 'Password': None, 'Indicator': None, 'IBAN': None, 'CreditCardCode': -1, 'CreditCardNum': '', 'CreditCardExpiration': None, 'DebitorAccount': '10601110', 'OpenOpportunities': None, 'Valid': 'tYES', 'ValidFrom': None, 'ValidTo': None, 'ValidRemarks': None, 'Frozen': 'tNO', 'FrozenFrom': None, 'FrozenTo': None, 'FrozenRemarks': None, 'Block': None, 'BillToState': None, 'ShipToState': None, 'ExemptNum': None, 'Priority': -1, 'FormCode1099': None, 'Box1099': None, 'PeymentMethodCode': None, 'BackOrder': 'tYES', 'PartialDelivery': 'tYES', 'BlockDunning': 'tNO', 'BankCountry': None, 'HouseBank': 'CIB', 'HouseBankCountry': 'EG', 'HouseBankAccount': '100029997769', 'ShipToDefault': 'Omnia Ezz Elarab 1', 'DunningLevel': None, 'DunningDate': None, 'CollectionAuthorization': 'tNO', 'DME': None, 'InstructionKey': None, 'SinglePayment': 'tNO', 'ISRBillerID': None, 'PaymentBlock': 'tNO', 'ReferenceDetails': None, 'HouseBankBranch': 'New Cairo', 'OwnerIDNumber': None, 'PaymentBlockDescription': -1, 'TaxExemptionLetterNum': None, 'MaxAmountOfExemption': 0.0, 'ExemptionValidityDateFrom': None, 'ExemptionValidityDateTo': None, 'LinkedBusinessPartner': None, 'LastMultiReconciliationNum': None, 'DeferredTax': 'tNO', 'Equalization': 'tNO', 'SubjectToWithholdingTax': 'boNO', 'CertificateNumber': None, 'ExpirationDate': None, 'NationalInsuranceNum': None, 'AccrualCriteria': 'tNO', 'WTCode': None, 'BillToBuildingFloorRoom': None, 'DownPaymentClearAct': '20101212', 'ChannelBP': None, 'DefaultTechnician': None, 'BilltoDefault': None, 'CustomerBillofExchangDisc': None, 'Territory': None, 'ShipToBuildingFloorRoom': '', 'CustomerBillofExchangPres': None, 'ProjectCode': None, 'VatGroupLatinAmerica': None, 'DunningTerm': None, 'Website': None, 'OtherReceivablePayable': None, 'BillofExchangeonCollection': None, 'CompanyPrivate': 'cCompany', 'LanguageCode': 8, 'UnpaidBillofExchange': None, 'WithholdingTaxDeductionGroup': -1, 'ClosingDateProcedureNumber': None, 'Profession': None, 'BankChargesAllocationCode': None, 'TaxRoundingRule': 'trr_CompanyDefault', 'Properties1': 'tNO', 'Properties2': 'tNO', 'Properties3': 'tNO', 'Properties4': 'tNO', 'Properties5': 'tNO', 'Properties6': 'tNO', 'Properties7': 'tNO', 'Properties8': 'tNO', 'Properties9': 'tNO', 'Properties10': 'tNO', 'Properties11': 'tNO', 'Properties12': 'tNO', 'Properties13': 'tNO', 'Properties14': 'tNO', 'Properties15': 'tNO', 'Properties16': 'tNO', 'Properties17': 'tNO', 'Properties18': 'tNO', 'Properties19': 'tNO', 'Properties20': 'tNO', 'Properties21': 'tNO', 'Properties22': 'tNO', 'Properties23': 'tNO', 'Properties24': 'tNO', 'Properties25': 'tNO', 'Properties26': 'tNO', 'Properties27': 'tNO', 'Properties28': 'tNO', 'Properties29': 'tNO', 'Properties30': 'tNO', 'Properties31': 'tNO', 'Properties32': 'tNO', 'Properties33': 'tNO', 'Properties34': 'tNO', 'Properties35': 'tNO', 'Properties36': 'tNO', 'Properties37': 'tNO', 'Properties38': 'tNO', 'Properties39': 'tNO', 'Properties40': 'tNO', 'Properties41': 'tNO', 'Properties42': 'tNO', 'Properties43': 'tNO', 'Properties44': 'tNO', 'Properties45': 'tNO', 'Properties46': 'tNO', 'Properties47': 'tNO', 'Properties48': 'tNO', 'Properties49': 'tNO', 'Properties50': 'tNO', 'Properties51': 'tNO', 'Properties52': 'tNO', 'Properties53': 'tNO', 'Properties54': 'tNO', 'Properties55': 'tNO', 'Properties56': 'tNO', 'Properties57': 'tNO', 'Properties58': 'tNO', 'Properties59': 'tNO', 'Properties60': 'tNO', 'Properties61': 'tNO', 'Properties62': 'tNO', 'Properties63': 'tNO', 'Properties64': 'tNO', 'CompanyRegistrationNumber': None, 'VerificationNumber': None, 'DiscountBaseObject': 'dgboNone', 'DiscountRelations': 'dgrLowestDiscount', 'TypeReport': 'atCompany', 'ThresholdOverlook': 'tNO', 'SurchargeOverlook': 'tNO', 'DownPaymentInterimAccount': None, 'OperationCode347': 'ocSalesOrServicesRevenues', 'InsuranceOperation347': 'tNO', 'HierarchicalDeduction': 'tNO', 'ShaamGroup': 'sgServicesAndAsset', 'WithholdingTaxCertified': 'tNO', 'BookkeepingCertified': 'tNO', 'PlanningGroup': None, 'Affiliate': 'tNO', 'Industry': None, 'VatIDNum': None, 'DatevAccount': None, 'DatevFirstDataEntry': 'tYES', 'UseShippedGoodsAccount': 'tNO', 'GTSRegNo': None, 'GTSBankAccountNo': None, 'GTSBillingAddrTel': None, 'ETaxWebSite': None, 'HouseBankIBAN': None, 'VATRegistrationNumber': None, 'RepresentativeName': None, 'IndustryType': None, 'BusinessType': None, 'Series': 87, 'AutomaticPosting': 'apNo', 'InterestAccount': None, 'FeeAccount': None, 'CampaignNumber': None, 'AliasName': None, 'DefaultBlanketAgreementNumber': None, 'EffectiveDiscount': 'dgrLowestDiscount', 'NoDiscounts': 'tNO', 'EffectivePrice': 'epDefaultPriority', 'EffectivePriceConsidersPriceBeforeDiscount': 'tNO', 'GlobalLocationNumber': None, 'EDISenderID': None, 'EDIRecipientID': None, 'ResidenNumber': 'rntSpanishFiscalID', 'RelationshipCode': None, 'RelationshipDateFrom': None, 'RelationshipDateTill': None, 'UnifiedFederalTaxID': None, 'AttachmentEntry': None, 'TypeOfOperation': None, 'EndorsableChecksFromBP': 'tYES', 'AcceptsEndorsedChecks': 'tNO', 'OwnerCode': None, 'BlockSendingMarketingContent': 'tNO', 'AgentCode': None, 'PriceMode': 'pmNet', 'EDocGenerationType': None, 'EDocStreet': None, 'EDocStreetNumber': None, 'EDocBuildingNumber': None, 'EDocZipCode': None, 'EDocCity': None, 'EDocCountry': None, 'EDocDistrict': None, 'EDocRepresentativeFirstName': None, 'EDocRepresentativeSurname': None, 'EDocRepresentativeCompany': None, 'EDocRepresentativeFiscalCode': None, 'EDocRepresentativeAdditionalId': None, 'EDocPECAddress': None, 'IPACodeForPA': None, 'UpdateDate': '2025-08-05', 'UpdateTime': '18:02:59', 'ExemptionMaxAmountValidationType': 'emaIndividual', 'ECommerceMerchantID': None, 'UseBillToAddrToDetermineTax': 'tNO', 'CreateDate': '2025-08-05', 'CreateTime': '18:02:59', 'DefaultTransporterEntry': None, 'DefaultTransporterLineNumber': None, 'FCERelevant': 'tNO', 'FCEValidateBaseDelivery': 'tNO', 'MainUsage': None, 'EBooksVATExemptionCause': None, 'U_BP_Old': None, 'U_SBO_BPType': 'Person', 'ElectronicProtocols': [], 'BPAddresses': [{'AddressName': 'Omnia Ezz Elarab 1', 'Street': 'Palm hills 6th october, phase 1 Villa b53', 'Block': None, 'ZipCode': '00000', 'City': 'Giza', 'County': None, 'Country': 'EG', 'State': None, 'FederalTaxID': None, 'TaxCode': None, 'BuildingFloorRoom': None, 'AddressType': 'bo_ShipTo', 'AddressName2': None, 'AddressName3': None, 'TypeOfAddress': None, 'StreetNo': None, 'BPCode': 'C0021031', 'RowNum': 0, 'GlobalLocationNumber': None, 'Nationality': None, 'TaxOffice': None, 'GSTIN': None, 'GstType': None, 'CreateDate': '2025-08-05', 'CreateTime': '18:02:59', 'MYFType': None, 'TaasEnabled': 'tYES'}], 'ContactEmployees': [], 'BPAccountReceivablePaybleCollection': [], 'BPPaymentMethods': [], 'BPWithholdingTaxCollection': [], 'BPPaymentDates': [], 'BPBranchAssignment': [], 'BPBankAccounts': [], 'BPFiscalTaxIDCollection': [], 'DiscountGroups': [], 'BPIntrastatExtension': {}, 'BPBlockSendingMarketingContents': []}]}, 'status': 'success'}
2025-08-05 18:08:18,664 - sync_service - INFO - Found existing customer: C0021031
2025-08-05 18:08:18,664 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'Invoices', 'request': {'method': 'POST', 'url': 'https://10.0.0.100:50000/b1s/v1/Invoices', 'data': {'DocDate': '2025-08-05', 'CardCode': 'C0021031', 'NumAtCard': '', 'Comments': '', 'ShipToCode': 'Omnia Ezz Elarab Address 1', 'U_Shopify_Order_ID': '#1480', 'SalesPersonCode': 97, 'DocumentLines': [{'ItemCode': 'ACC-0000001', 'Quantity': 1, 'UnitPrice': 5000.0, 'WarehouseCode': '5A'}], 'DocumentAdditionalExpenses': [{'ExpenseCode': 1, 'LineTotal': 200.0, 'Remarks': 'Shipping fee'}]}, 'params': None}, 'response': None, 'status': None}
2025-08-05 18:08:19,920 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'Invoices', 'request': None, 'response': {'status_code': 404, 'text': '{\n   "error" : {\n      "code" : -2028,\n      "message" : {\n         "lang" : "en-us",\n         "value" : "No matching records found (ODBC -2028)"\n      }\n   }\n}\n'}, 'status': 'failure'}
2025-08-05 18:08:19,922 - sync_service - ERROR - Failed to create invoice in SAP: HTTP 404: {
   "error" : {
      "code" : -2028,
      "message" : {
         "lang" : "en-us",
         "value" : "No matching records found (ODBC -2028)"
      }
   }
}

2025-08-05 18:08:55,752 - sync_service - INFO - Initialized Shopify client for store: Local Store (local)
2025-08-05 18:08:55,762 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'login', 'request': {'company': 'JudeBenHalim_Test', 'user': 'manager'}, 'response': None, 'status': None}
2025-08-05 18:08:56,497 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'login', 'request': None, 'response': {'status': 'success'}, 'status': 'success'}
2025-08-05 18:08:56,498 - sync_service - INFO - SAP login successful
2025-08-05 18:08:56,499 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'Warehouses', 'request': {'method': 'GET', 'url': 'https://10.0.0.100:50000/b1s/v1/Warehouses', 'data': None, 'params': None}, 'response': None, 'status': None}
2025-08-05 18:08:57,187 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'Warehouses', 'request': None, 'response': {'odata.metadata': 'https://10.0.0.100:50000/b1s/v1/$metadata#Warehouses', 'value': [{'Street': None, 'StockInflationOffsetAccount': '', 'ZipCode': None, 'DecreasingAccount': '', 'PurchaseAccount': '', 'EURevenuesAccount': '', 'ReturningAccount': '', 'ShippedGoodsAccount': '', 'StockInflationAdjustAccount': '', 'AllowUseTax': 'tNO', 'CostInflationAccount': '', 'ForeignExpensesAccount': '', 'EUExpensesAccount': '', 'CostInflationOffsetAccount': '', 'ExpensesClearingAccount': '', 'PurchaseReturningAccount': '', 'VATInRevenueAccount': '', 'FederalTaxID': None, 'Location': 3, 'Block': None, 'ExpenseAccount': '', 'DecreaseGLAccount': '', 'RevenuesAccount': '', 'TaxGroup': None, 'ExemptRevenuesAccount': '', 'PurchaseOffsetAccount': '', 'CostOfGoodsSold': '50101001', 'WarehouseCode': '5A', 'State': '', 'City': None, 'PriceDifferencesAccount': '50101001', 'VarianceAccount': '', 'Country': None, 'IncreaseGLAccount': '', 'ExchangeRateDifferencesAccount': '', 'WIPMaterialAccount': '', 'WarehouseName': 'Water Way', 'DropShip': 'tNO', 'WIPMaterialVarianceAccount': '', 'TransfersAcc': '20101513', 'InternalKey': None, 'ForeignRevenuesAcc': '', 'BuildingFloorRoom': None, 'County': None, 'Nettable': 'tYES', 'IncreasingAcc': '', 'ExpenseOffsetingAct': '', 'GoodsClearingAcc': '', 'StockAccount': '10501310', 'BusinessPlaceID': None, 'PurchaseCreditAcc': '', 'EUPurchaseCreditAcc': '', 'ForeignPurchaseCreditAcc': '', 'SalesCreditAcc': '', 'SalesCreditEUAcc': '', 'ExemptedCredits': '', 'SalesCreditForeignAcc': '', 'NegativeInventoryAdjustmentAccount': '', 'WHShipToName': None, 'Excisable': 'tNO', 'WHIncomingCenvatAccount': '', 'WHOutgoingCenvatAccount': '', 'StockInTransitAccount': '', 'WipOffsetProfitAndLossAccount': '', 'InventoryOffsetProfitAndLossAccount': '', 'AddressType': None, 'StreetNo': None, 'Storekeeper': None, 'Shipper': None, 'ManageSerialAndBatchNumbers': 'tNO', 'GlobalLocationNumber': None, 'EnableBinLocations': 'tYES', 'BinLocCodeSeparator': '-', 'DefaultBin': 8, 'DefaultBinEnforced': 'tNO', 'AutoAllocOnIssue': 'whsBinSingleChoiceOnly', 'EnableReceivingBinLocations': 'tNO', 'ReceivingBinLocationsBy': 'rblmBinLocationCodeOrder', 'PurchaseBalanceAccount': '', 'Inactive': 'tNO', 'RestrictReceiptToEmptyBinLocation': 'tYES', 'ReceiveUpToMaxQuantity': 'tNO', 'AutoAllocOnReceipt': 'aaormDefaultBin', 'ReceiveUpToMaxWeight': 'tNO', 'ReceiveUpToMethod': 'rutmMaximumQty', 'U_ShopifyInventoryIDLocal': None, 'U_ShopifyInventoryIDInternational': None}, {'Street': None, 'StockInflationOffsetAccount': '', 'ZipCode': None, 'DecreasingAccount': '', 'PurchaseAccount': '', 'EURevenuesAccount': '', 'ReturningAccount': '', 'ShippedGoodsAccount': '', 'StockInflationAdjustAccount': '', 'AllowUseTax': 'tNO', 'CostInflationAccount': '', 'ForeignExpensesAccount': '', 'EUExpensesAccount': '', 'CostInflationOffsetAccount': '', 'ExpensesClearingAccount': '', 'PurchaseReturningAccount': '', 'VATInRevenueAccount': '', 'FederalTaxID': None, 'Location': 7, 'Block': None, 'ExpenseAccount': '', 'DecreaseGLAccount': '', 'RevenuesAccount': '', 'TaxGroup': None, 'ExemptRevenuesAccount': '', 'PurchaseOffsetAccount': '', 'CostOfGoodsSold': '50101001', 'WarehouseCode': 'Arkan', 'State': '', 'City': None, 'PriceDifferencesAccount': '50101001', 'VarianceAccount': '', 'Country': None, 'IncreaseGLAccount': '', 'ExchangeRateDifferencesAccount': '', 'WIPMaterialAccount': '', 'WarehouseName': 'Arkan', 'DropShip': 'tNO', 'WIPMaterialVarianceAccount': '', 'TransfersAcc': '20101513', 'InternalKey': None, 'ForeignRevenuesAcc': '', 'BuildingFloorRoom': None, 'County': None, 'Nettable': 'tYES', 'IncreasingAcc': '', 'ExpenseOffsetingAct': '', 'GoodsClearingAcc': '', 'StockAccount': '10501310', 'BusinessPlaceID': None, 'PurchaseCreditAcc': '', 'EUPurchaseCreditAcc': '', 'ForeignPurchaseCreditAcc': '', 'SalesCreditAcc': '', 'SalesCreditEUAcc': '', 'ExemptedCredits': '', 'SalesCreditForeignAcc': '', 'NegativeInventoryAdjustmentAccount': '', 'WHShipToName': None, 'Excisable': 'tNO', 'WHIncomingCenvatAccount': '', 'WHOutgoingCenvatAccount': '', 'StockInTransitAccount': '', 'WipOffsetProfitAndLossAccount': '', 'InventoryOffsetProfitAndLossAccount': '', 'AddressType': None, 'StreetNo': None, 'Storekeeper': None, 'Shipper': None, 'ManageSerialAndBatchNumbers': 'tNO', 'GlobalLocationNumber': None, 'EnableBinLocations': 'tYES', 'BinLocCodeSeparator': '-', 'DefaultBin': 20, 'DefaultBinEnforced': 'tNO', 'AutoAllocOnIssue': 'whsBinSingleChoiceOnly', 'EnableReceivingBinLocations': 'tNO', 'ReceivingBinLocationsBy': 'rblmBinLocationCodeOrder', 'PurchaseBalanceAccount': '', 'Inactive': 'tNO', 'RestrictReceiptToEmptyBinLocation': 'tYES', 'ReceiveUpToMaxQuantity': 'tNO', 'AutoAllocOnReceipt': 'aaormDefaultBin', 'ReceiveUpToMaxWeight': 'tNO', 'ReceiveUpToMethod': 'rutmMaximumQty', 'U_ShopifyInventoryIDLocal': None, 'U_ShopifyInventoryIDInternational': None}, {'Street': None, 'StockInflationOffsetAccount': '', 'ZipCode': None, 'DecreasingAccount': '', 'PurchaseAccount': '', 'EURevenuesAccount': '', 'ReturningAccount': '', 'ShippedGoodsAccount': '', 'StockInflationAdjustAccount': '', 'AllowUseTax': 'tNO', 'CostInflationAccount': '', 'ForeignExpensesAccount': '', 'EUExpensesAccount': '', 'CostInflationOffsetAccount': '', 'ExpensesClearingAccount': '', 'PurchaseReturningAccount': '', 'VATInRevenueAccount': '', 'FederalTaxID': None, 'Location': 4, 'Block': None, 'ExpenseAccount': '', 'DecreaseGLAccount': '', 'RevenuesAccount': '', 'TaxGroup': None, 'ExemptRevenuesAccount': '', 'PurchaseOffsetAccount': '', 'CostOfGoodsSold': '50101001', 'WarehouseCode': 'DIP', 'State': '', 'City': None, 'PriceDifferencesAccount': '50101001', 'VarianceAccount': '', 'Country': None, 'IncreaseGLAccount': '', 'ExchangeRateDifferencesAccount': '', 'WIPMaterialAccount': '', 'WarehouseName': 'Diplomatics', 'DropShip': 'tNO', 'WIPMaterialVarianceAccount': '', 'TransfersAcc': '20101513', 'InternalKey': None, 'ForeignRevenuesAcc': '', 'BuildingFloorRoom': None, 'County': None, 'Nettable': 'tYES', 'IncreasingAcc': '', 'ExpenseOffsetingAct': '', 'GoodsClearingAcc': '', 'StockAccount': '10501310', 'BusinessPlaceID': None, 'PurchaseCreditAcc': '', 'EUPurchaseCreditAcc': '', 'ForeignPurchaseCreditAcc': '', 'SalesCreditAcc': '', 'SalesCreditEUAcc': '', 'ExemptedCredits': '', 'SalesCreditForeignAcc': '', 'NegativeInventoryAdjustmentAccount': '', 'WHShipToName': None, 'Excisable': 'tNO', 'WHIncomingCenvatAccount': '', 'WHOutgoingCenvatAccount': '', 'StockInTransitAccount': '', 'WipOffsetProfitAndLossAccount': '', 'InventoryOffsetProfitAndLossAccount': '', 'AddressType': None, 'StreetNo': None, 'Storekeeper': None, 'Shipper': None, 'ManageSerialAndBatchNumbers': 'tNO', 'GlobalLocationNumber': None, 'EnableBinLocations': 'tYES', 'BinLocCodeSeparator': '-', 'DefaultBin': 11, 'DefaultBinEnforced': 'tNO', 'AutoAllocOnIssue': 'whsBinSingleChoiceOnly', 'EnableReceivingBinLocations': 'tNO', 'ReceivingBinLocationsBy': 'rblmBinLocationCodeOrder', 'PurchaseBalanceAccount': '', 'Inactive': 'tNO', 'RestrictReceiptToEmptyBinLocation': 'tYES', 'ReceiveUpToMaxQuantity': 'tNO', 'AutoAllocOnReceipt': 'aaormDefaultBin', 'ReceiveUpToMaxWeight': 'tNO', 'ReceiveUpToMethod': 'rutmMaximumQty', 'U_ShopifyInventoryIDLocal': None, 'U_ShopifyInventoryIDInternational': None}, {'Street': None, 'StockInflationOffsetAccount': '', 'ZipCode': None, 'DecreasingAccount': '', 'PurchaseAccount': '', 'EURevenuesAccount': '', 'ReturningAccount': '', 'ShippedGoodsAccount': '', 'StockInflationAdjustAccount': '', 'AllowUseTax': 'tNO', 'CostInflationAccount': '', 'ForeignExpensesAccount': '', 'EUExpensesAccount': '', 'CostInflationOffsetAccount': '', 'ExpensesClearingAccount': '', 'PurchaseReturningAccount': '', 'VATInRevenueAccount': '', 'FederalTaxID': None, 'Location': 1, 'Block': None, 'ExpenseAccount': '', 'DecreaseGLAccount': '', 'RevenuesAccount': '', 'TaxGroup': None, 'ExemptRevenuesAccount': '', 'PurchaseOffsetAccount': '', 'CostOfGoodsSold': '50101001', 'WarehouseCode': 'INC', 'State': '', 'City': None, 'PriceDifferencesAccount': '50101001', 'VarianceAccount': '', 'Country': None, 'IncreaseGLAccount': '', 'ExchangeRateDifferencesAccount': '', 'WIPMaterialAccount': '', 'WarehouseName': 'Incoming Warehouse', 'DropShip': 'tNO', 'WIPMaterialVarianceAccount': '', 'TransfersAcc': '20101513', 'InternalKey': None, 'ForeignRevenuesAcc': '', 'BuildingFloorRoom': None, 'County': None, 'Nettable': 'tYES', 'IncreasingAcc': '', 'ExpenseOffsetingAct': '', 'GoodsClearingAcc': '', 'StockAccount': '10501310', 'BusinessPlaceID': None, 'PurchaseCreditAcc': '', 'EUPurchaseCreditAcc': '', 'ForeignPurchaseCreditAcc': '', 'SalesCreditAcc': '', 'SalesCreditEUAcc': '', 'ExemptedCredits': '', 'SalesCreditForeignAcc': '', 'NegativeInventoryAdjustmentAccount': '', 'WHShipToName': None, 'Excisable': 'tNO', 'WHIncomingCenvatAccount': '', 'WHOutgoingCenvatAccount': '', 'StockInTransitAccount': '', 'WipOffsetProfitAndLossAccount': '', 'InventoryOffsetProfitAndLossAccount': '', 'AddressType': None, 'StreetNo': None, 'Storekeeper': None, 'Shipper': None, 'ManageSerialAndBatchNumbers': 'tNO', 'GlobalLocationNumber': None, 'EnableBinLocations': 'tNO', 'BinLocCodeSeparator': '-', 'DefaultBin': None, 'DefaultBinEnforced': 'tNO', 'AutoAllocOnIssue': 'whsBinSingleChoiceOnly', 'EnableReceivingBinLocations': 'tNO', 'ReceivingBinLocationsBy': 'rblmBinLocationCodeOrder', 'PurchaseBalanceAccount': '', 'Inactive': 'tNO', 'RestrictReceiptToEmptyBinLocation': 'tYES', 'ReceiveUpToMaxQuantity': 'tNO', 'AutoAllocOnReceipt': 'aaormDefaultBin', 'ReceiveUpToMaxWeight': 'tNO', 'ReceiveUpToMethod': 'rutmMaximumQty', 'U_ShopifyInventoryIDLocal': None, 'U_ShopifyInventoryIDInternational': None}, {'Street': None, 'StockInflationOffsetAccount': '', 'ZipCode': None, 'DecreasingAccount': '', 'PurchaseAccount': '', 'EURevenuesAccount': '', 'ReturningAccount': '', 'ShippedGoodsAccount': '', 'StockInflationAdjustAccount': '', 'AllowUseTax': 'tNO', 'CostInflationAccount': '', 'ForeignExpensesAccount': '', 'EUExpensesAccount': '', 'CostInflationOffsetAccount': '', 'ExpensesClearingAccount': '', 'PurchaseReturningAccount': '', 'VATInRevenueAccount': '', 'FederalTaxID': None, 'Location': 1, 'Block': None, 'ExpenseAccount': '', 'DecreaseGLAccount': '', 'RevenuesAccount': '', 'TaxGroup': None, 'ExemptRevenuesAccount': '', 'PurchaseOffsetAccount': '', 'CostOfGoodsSold': '50101001', 'WarehouseCode': 'ONL', 'State': '', 'City': None, 'PriceDifferencesAccount': '50101001', 'VarianceAccount': '', 'Country': None, 'IncreaseGLAccount': '', 'ExchangeRateDifferencesAccount': '', 'WIPMaterialAccount': '', 'WarehouseName': 'Online Sales', 'DropShip': 'tNO', 'WIPMaterialVarianceAccount': '', 'TransfersAcc': '20101513', 'InternalKey': None, 'ForeignRevenuesAcc': '', 'BuildingFloorRoom': None, 'County': None, 'Nettable': 'tYES', 'IncreasingAcc': '', 'ExpenseOffsetingAct': '', 'GoodsClearingAcc': '', 'StockAccount': '10501312', 'BusinessPlaceID': None, 'PurchaseCreditAcc': '', 'EUPurchaseCreditAcc': '', 'ForeignPurchaseCreditAcc': '', 'SalesCreditAcc': '', 'SalesCreditEUAcc': '', 'ExemptedCredits': '', 'SalesCreditForeignAcc': '', 'NegativeInventoryAdjustmentAccount': '', 'WHShipToName': None, 'Excisable': 'tNO', 'WHIncomingCenvatAccount': '', 'WHOutgoingCenvatAccount': '', 'StockInTransitAccount': '', 'WipOffsetProfitAndLossAccount': '', 'InventoryOffsetProfitAndLossAccount': '', 'AddressType': None, 'StreetNo': None, 'Storekeeper': None, 'Shipper': None, 'ManageSerialAndBatchNumbers': 'tNO', 'GlobalLocationNumber': None, 'EnableBinLocations': 'tNO', 'BinLocCodeSeparator': '-', 'DefaultBin': None, 'DefaultBinEnforced': 'tNO', 'AutoAllocOnIssue': 'whsBinSingleChoiceOnly', 'EnableReceivingBinLocations': 'tNO', 'ReceivingBinLocationsBy': 'rblmBinLocationCodeOrder', 'PurchaseBalanceAccount': '', 'Inactive': 'tNO', 'RestrictReceiptToEmptyBinLocation': 'tYES', 'ReceiveUpToMaxQuantity': 'tNO', 'AutoAllocOnReceipt': 'aaormDefaultBin', 'ReceiveUpToMaxWeight': 'tNO', 'ReceiveUpToMethod': 'rutmMaximumQty', 'U_ShopifyInventoryIDLocal': None, 'U_ShopifyInventoryIDInternational': None}, {'Street': None, 'StockInflationOffsetAccount': '', 'ZipCode': None, 'DecreasingAccount': '', 'PurchaseAccount': '', 'EURevenuesAccount': '', 'ReturningAccount': '', 'ShippedGoodsAccount': '', 'StockInflationAdjustAccount': '', 'AllowUseTax': 'tNO', 'CostInflationAccount': '', 'ForeignExpensesAccount': '', 'EUExpensesAccount': '', 'CostInflationOffsetAccount': '', 'ExpensesClearingAccount': '', 'PurchaseReturningAccount': '', 'VATInRevenueAccount': '', 'FederalTaxID': None, 'Location': 6, 'Block': None, 'ExpenseAccount': '', 'DecreaseGLAccount': '', 'RevenuesAccount': '', 'TaxGroup': None, 'ExemptRevenuesAccount': '', 'PurchaseOffsetAccount': '', 'CostOfGoodsSold': '50101001', 'WarehouseCode': 'PHO', 'State': '', 'City': None, 'PriceDifferencesAccount': '50101001', 'VarianceAccount': '', 'Country': None, 'IncreaseGLAccount': '', 'ExchangeRateDifferencesAccount': '', 'WIPMaterialAccount': '', 'WarehouseName': 'Photography', 'DropShip': 'tNO', 'WIPMaterialVarianceAccount': '', 'TransfersAcc': '20101513', 'InternalKey': None, 'ForeignRevenuesAcc': '', 'BuildingFloorRoom': None, 'County': None, 'Nettable': 'tYES', 'IncreasingAcc': '', 'ExpenseOffsetingAct': '', 'GoodsClearingAcc': '', 'StockAccount': '10501310', 'BusinessPlaceID': None, 'PurchaseCreditAcc': '', 'EUPurchaseCreditAcc': '', 'ForeignPurchaseCreditAcc': '', 'SalesCreditAcc': '', 'SalesCreditEUAcc': '', 'ExemptedCredits': '', 'SalesCreditForeignAcc': '', 'NegativeInventoryAdjustmentAccount': '', 'WHShipToName': None, 'Excisable': 'tNO', 'WHIncomingCenvatAccount': '', 'WHOutgoingCenvatAccount': '', 'StockInTransitAccount': '', 'WipOffsetProfitAndLossAccount': '', 'InventoryOffsetProfitAndLossAccount': '', 'AddressType': None, 'StreetNo': None, 'Storekeeper': None, 'Shipper': None, 'ManageSerialAndBatchNumbers': 'tNO', 'GlobalLocationNumber': None, 'EnableBinLocations': 'tYES', 'BinLocCodeSeparator': '-', 'DefaultBin': None, 'DefaultBinEnforced': 'tNO', 'AutoAllocOnIssue': 'whsBinSingleChoiceOnly', 'EnableReceivingBinLocations': 'tNO', 'ReceivingBinLocationsBy': 'rblmBinLocationCodeOrder', 'PurchaseBalanceAccount': '', 'Inactive': 'tYES', 'RestrictReceiptToEmptyBinLocation': 'tYES', 'ReceiveUpToMaxQuantity': 'tNO', 'AutoAllocOnReceipt': 'aaormDefaultBin', 'ReceiveUpToMaxWeight': 'tNO', 'ReceiveUpToMethod': 'rutmMaximumQty', 'U_ShopifyInventoryIDLocal': None, 'U_ShopifyInventoryIDInternational': None}, {'Street': None, 'StockInflationOffsetAccount': '', 'ZipCode': None, 'DecreasingAccount': '', 'PurchaseAccount': '', 'EURevenuesAccount': '', 'ReturningAccount': '', 'ShippedGoodsAccount': '6100103', 'StockInflationAdjustAccount': '', 'AllowUseTax': 'tNO', 'CostInflationAccount': '', 'ForeignExpensesAccount': '', 'EUExpensesAccount': '', 'CostInflationOffsetAccount': '', 'ExpensesClearingAccount': '', 'PurchaseReturningAccount': '', 'VATInRevenueAccount': '', 'FederalTaxID': None, 'Location': None, 'Block': None, 'ExpenseAccount': '', 'DecreaseGLAccount': '', 'RevenuesAccount': '', 'TaxGroup': None, 'ExemptRevenuesAccount': '', 'PurchaseOffsetAccount': '', 'CostOfGoodsSold': '50101001', 'WarehouseCode': 'PHO-EX', 'State': '', 'City': None, 'PriceDifferencesAccount': '50101001', 'VarianceAccount': '', 'Country': None, 'IncreaseGLAccount': '', 'ExchangeRateDifferencesAccount': '', 'WIPMaterialAccount': '10501281', 'WarehouseName': 'PHO-EXTERNAL', 'DropShip': 'tNO', 'WIPMaterialVarianceAccount': '', 'TransfersAcc': '20101513', 'InternalKey': None, 'ForeignRevenuesAcc': '', 'BuildingFloorRoom': None, 'County': None, 'Nettable': 'tYES', 'IncreasingAcc': '', 'ExpenseOffsetingAct': '', 'GoodsClearingAcc': '', 'StockAccount': '10501310', 'BusinessPlaceID': None, 'PurchaseCreditAcc': '50101001', 'EUPurchaseCreditAcc': '50101001', 'ForeignPurchaseCreditAcc': '50101001', 'SalesCreditAcc': '40101101', 'SalesCreditEUAcc': '40101101', 'ExemptedCredits': '', 'SalesCreditForeignAcc': '40101101', 'NegativeInventoryAdjustmentAccount': '', 'WHShipToName': None, 'Excisable': 'tNO', 'WHIncomingCenvatAccount': '', 'WHOutgoingCenvatAccount': '', 'StockInTransitAccount': '20101515', 'WipOffsetProfitAndLossAccount': '', 'InventoryOffsetProfitAndLossAccount': '', 'AddressType': None, 'StreetNo': None, 'Storekeeper': None, 'Shipper': None, 'ManageSerialAndBatchNumbers': 'tNO', 'GlobalLocationNumber': None, 'EnableBinLocations': 'tYES', 'BinLocCodeSeparator': '-', 'DefaultBin': None, 'DefaultBinEnforced': 'tNO', 'AutoAllocOnIssue': 'whsBinSingleChoiceOnly', 'EnableReceivingBinLocations': 'tNO', 'ReceivingBinLocationsBy': 'rblmBinLocationCodeOrder', 'PurchaseBalanceAccount': '', 'Inactive': 'tNO', 'RestrictReceiptToEmptyBinLocation': 'tYES', 'ReceiveUpToMaxQuantity': 'tNO', 'AutoAllocOnReceipt': 'aaormDefaultBin', 'ReceiveUpToMaxWeight': 'tNO', 'ReceiveUpToMethod': 'rutmMaximumQty', 'U_ShopifyInventoryIDLocal': None, 'U_ShopifyInventoryIDInternational': None}, {'Street': None, 'StockInflationOffsetAccount': '', 'ZipCode': None, 'DecreasingAccount': '', 'PurchaseAccount': '', 'EURevenuesAccount': '', 'ReturningAccount': '', 'ShippedGoodsAccount': '6100103', 'StockInflationAdjustAccount': '', 'AllowUseTax': 'tNO', 'CostInflationAccount': '', 'ForeignExpensesAccount': '', 'EUExpensesAccount': '', 'CostInflationOffsetAccount': '', 'ExpensesClearingAccount': '', 'PurchaseReturningAccount': '', 'VATInRevenueAccount': '', 'FederalTaxID': None, 'Location': None, 'Block': None, 'ExpenseAccount': '', 'DecreaseGLAccount': '', 'RevenuesAccount': '', 'TaxGroup': None, 'ExemptRevenuesAccount': '', 'PurchaseOffsetAccount': '', 'CostOfGoodsSold': '50101001', 'WarehouseCode': 'PHO-IN', 'State': '', 'City': None, 'PriceDifferencesAccount': '50101001', 'VarianceAccount': '', 'Country': None, 'IncreaseGLAccount': '', 'ExchangeRateDifferencesAccount': '', 'WIPMaterialAccount': '10501281', 'WarehouseName': 'PHO-INTERNAL', 'DropShip': 'tNO', 'WIPMaterialVarianceAccount': '', 'TransfersAcc': '20101513', 'InternalKey': None, 'ForeignRevenuesAcc': '', 'BuildingFloorRoom': None, 'County': None, 'Nettable': 'tYES', 'IncreasingAcc': '', 'ExpenseOffsetingAct': '', 'GoodsClearingAcc': '', 'StockAccount': '10501310', 'BusinessPlaceID': None, 'PurchaseCreditAcc': '50101001', 'EUPurchaseCreditAcc': '50101001', 'ForeignPurchaseCreditAcc': '50101001', 'SalesCreditAcc': '40101101', 'SalesCreditEUAcc': '40101101', 'ExemptedCredits': '', 'SalesCreditForeignAcc': '40101101', 'NegativeInventoryAdjustmentAccount': '', 'WHShipToName': None, 'Excisable': 'tNO', 'WHIncomingCenvatAccount': '', 'WHOutgoingCenvatAccount': '', 'StockInTransitAccount': '20101515', 'WipOffsetProfitAndLossAccount': '', 'InventoryOffsetProfitAndLossAccount': '', 'AddressType': None, 'StreetNo': None, 'Storekeeper': None, 'Shipper': None, 'ManageSerialAndBatchNumbers': 'tNO', 'GlobalLocationNumber': None, 'EnableBinLocations': 'tNO', 'BinLocCodeSeparator': '-', 'DefaultBin': None, 'DefaultBinEnforced': 'tNO', 'AutoAllocOnIssue': 'whsBinSingleChoiceOnly', 'EnableReceivingBinLocations': 'tNO', 'ReceivingBinLocationsBy': 'rblmBinLocationCodeOrder', 'PurchaseBalanceAccount': '', 'Inactive': 'tNO', 'RestrictReceiptToEmptyBinLocation': 'tYES', 'ReceiveUpToMaxQuantity': 'tNO', 'AutoAllocOnReceipt': 'aaormDefaultBin', 'ReceiveUpToMaxWeight': 'tNO', 'ReceiveUpToMethod': 'rutmMaximumQty', 'U_ShopifyInventoryIDLocal': None, 'U_ShopifyInventoryIDInternational': None}, {'Street': None, 'StockInflationOffsetAccount': '', 'ZipCode': None, 'DecreasingAccount': '', 'PurchaseAccount': '', 'EURevenuesAccount': '', 'ReturningAccount': '', 'ShippedGoodsAccount': '', 'StockInflationAdjustAccount': '', 'AllowUseTax': 'tNO', 'CostInflationAccount': '', 'ForeignExpensesAccount': '', 'EUExpensesAccount': '', 'CostInflationOffsetAccount': '', 'ExpensesClearingAccount': '', 'PurchaseReturningAccount': '', 'VATInRevenueAccount': '', 'FederalTaxID': None, 'Location': 5, 'Block': None, 'ExpenseAccount': '', 'DecreaseGLAccount': '', 'RevenuesAccount': '', 'TaxGroup': None, 'ExemptRevenuesAccount': '', 'PurchaseOffsetAccount': '', 'CostOfGoodsSold': '50101001', 'WarehouseCode': 'QCW', 'State': '', 'City': None, 'PriceDifferencesAccount': '50101001', 'VarianceAccount': '', 'Country': None, 'IncreaseGLAccount': '', 'ExchangeRateDifferencesAccount': '', 'WIPMaterialAccount': '', 'WarehouseName': 'Quality Control', 'DropShip': 'tNO', 'WIPMaterialVarianceAccount': '', 'TransfersAcc': '20101513', 'InternalKey': None, 'ForeignRevenuesAcc': '', 'BuildingFloorRoom': None, 'County': None, 'Nettable': 'tYES', 'IncreasingAcc': '', 'ExpenseOffsetingAct': '', 'GoodsClearingAcc': '', 'StockAccount': '10501211', 'BusinessPlaceID': None, 'PurchaseCreditAcc': '', 'EUPurchaseCreditAcc': '', 'ForeignPurchaseCreditAcc': '', 'SalesCreditAcc': '', 'SalesCreditEUAcc': '', 'ExemptedCredits': '', 'SalesCreditForeignAcc': '', 'NegativeInventoryAdjustmentAccount': '', 'WHShipToName': None, 'Excisable': 'tNO', 'WHIncomingCenvatAccount': '', 'WHOutgoingCenvatAccount': '', 'StockInTransitAccount': '', 'WipOffsetProfitAndLossAccount': '', 'InventoryOffsetProfitAndLossAccount': '', 'AddressType': None, 'StreetNo': None, 'Storekeeper': None, 'Shipper': None, 'ManageSerialAndBatchNumbers': 'tNO', 'GlobalLocationNumber': None, 'EnableBinLocations': 'tNO', 'BinLocCodeSeparator': '-', 'DefaultBin': None, 'DefaultBinEnforced': 'tNO', 'AutoAllocOnIssue': 'whsBinSingleChoiceOnly', 'EnableReceivingBinLocations': 'tNO', 'ReceivingBinLocationsBy': 'rblmBinLocationCodeOrder', 'PurchaseBalanceAccount': '', 'Inactive': 'tYES', 'RestrictReceiptToEmptyBinLocation': 'tYES', 'ReceiveUpToMaxQuantity': 'tNO', 'AutoAllocOnReceipt': 'aaormDefaultBin', 'ReceiveUpToMaxWeight': 'tNO', 'ReceiveUpToMethod': 'rutmMaximumQty', 'U_ShopifyInventoryIDLocal': None, 'U_ShopifyInventoryIDInternational': None}, {'Street': None, 'StockInflationOffsetAccount': '', 'ZipCode': None, 'DecreasingAccount': '', 'PurchaseAccount': '', 'EURevenuesAccount': '', 'ReturningAccount': '', 'ShippedGoodsAccount': '', 'StockInflationAdjustAccount': '', 'AllowUseTax': 'tNO', 'CostInflationAccount': '', 'ForeignExpensesAccount': '', 'EUExpensesAccount': '', 'CostInflationOffsetAccount': '', 'ExpensesClearingAccount': '', 'PurchaseReturningAccount': '', 'VATInRevenueAccount': '', 'FederalTaxID': None, 'Location': 1, 'Block': None, 'ExpenseAccount': '', 'DecreaseGLAccount': '', 'RevenuesAccount': '', 'TaxGroup': None, 'ExemptRevenuesAccount': '', 'PurchaseOffsetAccount': '', 'CostOfGoodsSold': '50101001', 'WarehouseCode': 'RTW', 'State': '', 'City': None, 'PriceDifferencesAccount': '50101001', 'VarianceAccount': '', 'Country': None, 'IncreaseGLAccount': '', 'ExchangeRateDifferencesAccount': '', 'WIPMaterialAccount': '', 'WarehouseName': 'Retailer Warehouse', 'DropShip': 'tNO', 'WIPMaterialVarianceAccount': '', 'TransfersAcc': '20101513', 'InternalKey': None, 'ForeignRevenuesAcc': '', 'BuildingFloorRoom': None, 'County': None, 'Nettable': 'tYES', 'IncreasingAcc': '', 'ExpenseOffsetingAct': '', 'GoodsClearingAcc': '', 'StockAccount': '10501310', 'BusinessPlaceID': None, 'PurchaseCreditAcc': '', 'EUPurchaseCreditAcc': '', 'ForeignPurchaseCreditAcc': '', 'SalesCreditAcc': '', 'SalesCreditEUAcc': '', 'ExemptedCredits': '', 'SalesCreditForeignAcc': '', 'NegativeInventoryAdjustmentAccount': '', 'WHShipToName': None, 'Excisable': 'tNO', 'WHIncomingCenvatAccount': '', 'WHOutgoingCenvatAccount': '', 'StockInTransitAccount': '', 'WipOffsetProfitAndLossAccount': '', 'InventoryOffsetProfitAndLossAccount': '', 'AddressType': None, 'StreetNo': None, 'Storekeeper': None, 'Shipper': None, 'ManageSerialAndBatchNumbers': 'tNO', 'GlobalLocationNumber': None, 'EnableBinLocations': 'tNO', 'BinLocCodeSeparator': '-', 'DefaultBin': None, 'DefaultBinEnforced': 'tNO', 'AutoAllocOnIssue': 'whsBinSingleChoiceOnly', 'EnableReceivingBinLocations': 'tNO', 'ReceivingBinLocationsBy': 'rblmBinLocationCodeOrder', 'PurchaseBalanceAccount': '', 'Inactive': 'tNO', 'RestrictReceiptToEmptyBinLocation': 'tYES', 'ReceiveUpToMaxQuantity': 'tNO', 'AutoAllocOnReceipt': 'aaormDefaultBin', 'ReceiveUpToMaxWeight': 'tNO', 'ReceiveUpToMethod': 'rutmMaximumQty', 'U_ShopifyInventoryIDLocal': None, 'U_ShopifyInventoryIDInternational': None}, {'Street': None, 'StockInflationOffsetAccount': '', 'ZipCode': None, 'DecreasingAccount': '', 'PurchaseAccount': '', 'EURevenuesAccount': '', 'ReturningAccount': '', 'ShippedGoodsAccount': '', 'StockInflationAdjustAccount': '', 'AllowUseTax': 'tNO', 'CostInflationAccount': '', 'ForeignExpensesAccount': '', 'EUExpensesAccount': '', 'CostInflationOffsetAccount': '', 'ExpensesClearingAccount': '', 'PurchaseReturningAccount': '', 'VATInRevenueAccount': '', 'FederalTaxID': None, 'Location': 1, 'Block': None, 'ExpenseAccount': '', 'DecreaseGLAccount': '', 'RevenuesAccount': '', 'TaxGroup': None, 'ExemptRevenuesAccount': '', 'PurchaseOffsetAccount': '', 'CostOfGoodsSold': '50101001', 'WarehouseCode': 'RTWH', 'State': '', 'City': None, 'PriceDifferencesAccount': '50101001', 'VarianceAccount': '', 'Country': None, 'IncreaseGLAccount': '', 'ExchangeRateDifferencesAccount': '', 'WIPMaterialAccount': '', 'WarehouseName': 'Retailer Warehouse', 'DropShip': 'tNO', 'WIPMaterialVarianceAccount': '', 'TransfersAcc': '20101513', 'InternalKey': None, 'ForeignRevenuesAcc': '', 'BuildingFloorRoom': None, 'County': None, 'Nettable': 'tYES', 'IncreasingAcc': '', 'ExpenseOffsetingAct': '', 'GoodsClearingAcc': '', 'StockAccount': '10501310', 'BusinessPlaceID': None, 'PurchaseCreditAcc': '', 'EUPurchaseCreditAcc': '', 'ForeignPurchaseCreditAcc': '', 'SalesCreditAcc': '', 'SalesCreditEUAcc': '', 'ExemptedCredits': '', 'SalesCreditForeignAcc': '', 'NegativeInventoryAdjustmentAccount': '', 'WHShipToName': None, 'Excisable': 'tNO', 'WHIncomingCenvatAccount': '', 'WHOutgoingCenvatAccount': '', 'StockInTransitAccount': '', 'WipOffsetProfitAndLossAccount': '', 'InventoryOffsetProfitAndLossAccount': '', 'AddressType': None, 'StreetNo': None, 'Storekeeper': None, 'Shipper': None, 'ManageSerialAndBatchNumbers': 'tNO', 'GlobalLocationNumber': None, 'EnableBinLocations': 'tYES', 'BinLocCodeSeparator': '-', 'DefaultBin': 41, 'DefaultBinEnforced': 'tNO', 'AutoAllocOnIssue': 'whsBinSingleChoiceOnly', 'EnableReceivingBinLocations': 'tNO', 'ReceivingBinLocationsBy': 'rblmBinLocationCodeOrder', 'PurchaseBalanceAccount': '', 'Inactive': 'tNO', 'RestrictReceiptToEmptyBinLocation': 'tYES', 'ReceiveUpToMaxQuantity': 'tNO', 'AutoAllocOnReceipt': 'aaormDefaultBin', 'ReceiveUpToMaxWeight': 'tNO', 'ReceiveUpToMethod': 'rutmMaximumQty', 'U_ShopifyInventoryIDLocal': None, 'U_ShopifyInventoryIDInternational': None}, {'Street': None, 'StockInflationOffsetAccount': '', 'ZipCode': None, 'DecreasingAccount': '', 'PurchaseAccount': '', 'EURevenuesAccount': '', 'ReturningAccount': '', 'ShippedGoodsAccount': '', 'StockInflationAdjustAccount': '', 'AllowUseTax': 'tNO', 'CostInflationAccount': '', 'ForeignExpensesAccount': '', 'EUExpensesAccount': '', 'CostInflationOffsetAccount': '', 'ExpensesClearingAccount': '', 'PurchaseReturningAccount': '', 'VATInRevenueAccount': '', 'FederalTaxID': None, 'Location': 1, 'Block': None, 'ExpenseAccount': '', 'DecreaseGLAccount': '', 'RevenuesAccount': '', 'TaxGroup': None, 'ExemptRevenuesAccount': '', 'PurchaseOffsetAccount': '', 'CostOfGoodsSold': '50101001', 'WarehouseCode': 'SW', 'State': '', 'City': None, 'PriceDifferencesAccount': '50101001', 'VarianceAccount': '', 'Country': None, 'IncreaseGLAccount': '', 'ExchangeRateDifferencesAccount': '', 'WIPMaterialAccount': '', 'WarehouseName': 'Show Room', 'DropShip': 'tNO', 'WIPMaterialVarianceAccount': '', 'TransfersAcc': '20101513', 'InternalKey': None, 'ForeignRevenuesAcc': '', 'BuildingFloorRoom': None, 'County': None, 'Nettable': 'tYES', 'IncreasingAcc': '', 'ExpenseOffsetingAct': '', 'GoodsClearingAcc': '', 'StockAccount': '10501310', 'BusinessPlaceID': None, 'PurchaseCreditAcc': '', 'EUPurchaseCreditAcc': '', 'ForeignPurchaseCreditAcc': '', 'SalesCreditAcc': '', 'SalesCreditEUAcc': '', 'ExemptedCredits': '', 'SalesCreditForeignAcc': '', 'NegativeInventoryAdjustmentAccount': '', 'WHShipToName': None, 'Excisable': 'tNO', 'WHIncomingCenvatAccount': '', 'WHOutgoingCenvatAccount': '', 'StockInTransitAccount': '', 'WipOffsetProfitAndLossAccount': '', 'InventoryOffsetProfitAndLossAccount': '', 'AddressType': None, 'StreetNo': None, 'Storekeeper': None, 'Shipper': None, 'ManageSerialAndBatchNumbers': 'tNO', 'GlobalLocationNumber': None, 'EnableBinLocations': 'tYES', 'BinLocCodeSeparator': '-', 'DefaultBin': 2, 'DefaultBinEnforced': 'tNO', 'AutoAllocOnIssue': 'whsBinBinCodeOrder', 'EnableReceivingBinLocations': 'tNO', 'ReceivingBinLocationsBy': 'rblmBinLocationCodeOrder', 'PurchaseBalanceAccount': '', 'Inactive': 'tNO', 'RestrictReceiptToEmptyBinLocation': 'tYES', 'ReceiveUpToMaxQuantity': 'tNO', 'AutoAllocOnReceipt': 'aaormDefaultBin', 'ReceiveUpToMaxWeight': 'tNO', 'ReceiveUpToMethod': 'rutmMaximumQty', 'U_ShopifyInventoryIDLocal': None, 'U_ShopifyInventoryIDInternational': None}, {'Street': None, 'StockInflationOffsetAccount': '', 'ZipCode': None, 'DecreasingAccount': '', 'PurchaseAccount': '', 'EURevenuesAccount': '', 'ReturningAccount': '', 'ShippedGoodsAccount': '', 'StockInflationAdjustAccount': '', 'AllowUseTax': 'tNO', 'CostInflationAccount': '', 'ForeignExpensesAccount': '', 'EUExpensesAccount': '', 'CostInflationOffsetAccount': '', 'ExpensesClearingAccount': '', 'PurchaseReturningAccount': '', 'VATInRevenueAccount': '', 'FederalTaxID': None, 'Location': 1, 'Block': None, 'ExpenseAccount': '', 'DecreaseGLAccount': '', 'RevenuesAccount': '', 'TaxGroup': None, 'ExemptRevenuesAccount': '', 'PurchaseOffsetAccount': '', 'CostOfGoodsSold': '50101001', 'WarehouseCode': 'WLS', 'State': '', 'City': None, 'PriceDifferencesAccount': '50101001', 'VarianceAccount': '', 'Country': None, 'IncreaseGLAccount': '', 'ExchangeRateDifferencesAccount': '', 'WIPMaterialAccount': '', 'WarehouseName': 'Whole Sales', 'DropShip': 'tNO', 'WIPMaterialVarianceAccount': '', 'TransfersAcc': '20101513', 'InternalKey': None, 'ForeignRevenuesAcc': '', 'BuildingFloorRoom': None, 'County': None, 'Nettable': 'tYES', 'IncreasingAcc': '', 'ExpenseOffsetingAct': '', 'GoodsClearingAcc': '', 'StockAccount': '10501310', 'BusinessPlaceID': None, 'PurchaseCreditAcc': '', 'EUPurchaseCreditAcc': '', 'ForeignPurchaseCreditAcc': '', 'SalesCreditAcc': '', 'SalesCreditEUAcc': '', 'ExemptedCredits': '', 'SalesCreditForeignAcc': '', 'NegativeInventoryAdjustmentAccount': '', 'WHShipToName': None, 'Excisable': 'tNO', 'WHIncomingCenvatAccount': '', 'WHOutgoingCenvatAccount': '', 'StockInTransitAccount': '', 'WipOffsetProfitAndLossAccount': '', 'InventoryOffsetProfitAndLossAccount': '', 'AddressType': None, 'StreetNo': None, 'Storekeeper': None, 'Shipper': None, 'ManageSerialAndBatchNumbers': 'tNO', 'GlobalLocationNumber': None, 'EnableBinLocations': 'tNO', 'BinLocCodeSeparator': '-', 'DefaultBin': None, 'DefaultBinEnforced': 'tNO', 'AutoAllocOnIssue': 'whsBinSingleChoiceOnly', 'EnableReceivingBinLocations': 'tNO', 'ReceivingBinLocationsBy': 'rblmBinLocationCodeOrder', 'PurchaseBalanceAccount': '', 'Inactive': 'tNO', 'RestrictReceiptToEmptyBinLocation': 'tYES', 'ReceiveUpToMaxQuantity': 'tNO', 'AutoAllocOnReceipt': 'aaormDefaultBin', 'ReceiveUpToMaxWeight': 'tNO', 'ReceiveUpToMethod': 'rutmMaximumQty', 'U_ShopifyInventoryIDLocal': None, 'U_ShopifyInventoryIDInternational': None}, {'Street': None, 'StockInflationOffsetAccount': '', 'ZipCode': None, 'DecreasingAccount': '', 'PurchaseAccount': '', 'EURevenuesAccount': '', 'ReturningAccount': '', 'ShippedGoodsAccount': '', 'StockInflationAdjustAccount': '', 'AllowUseTax': 'tNO', 'CostInflationAccount': '', 'ForeignExpensesAccount': '', 'EUExpensesAccount': '', 'CostInflationOffsetAccount': '', 'ExpensesClearingAccount': '', 'PurchaseReturningAccount': '', 'VATInRevenueAccount': '', 'FederalTaxID': None, 'Location': 5, 'Block': None, 'ExpenseAccount': '', 'DecreaseGLAccount': '', 'RevenuesAccount': '', 'TaxGroup': None, 'ExemptRevenuesAccount': '', 'PurchaseOffsetAccount': '', 'CostOfGoodsSold': '50101001', 'WarehouseCode': 'WW', 'State': '', 'City': None, 'PriceDifferencesAccount': '50101001', 'VarianceAccount': '', 'Country': None, 'IncreaseGLAccount': '', 'ExchangeRateDifferencesAccount': '', 'WIPMaterialAccount': '', 'WarehouseName': 'Work Shop', 'DropShip': 'tNO', 'WIPMaterialVarianceAccount': '', 'TransfersAcc': '20101513', 'InternalKey': None, 'ForeignRevenuesAcc': '', 'BuildingFloorRoom': None, 'County': None, 'Nettable': 'tYES', 'IncreasingAcc': '', 'ExpenseOffsetingAct': '', 'GoodsClearingAcc': '', 'StockAccount': '10501310', 'BusinessPlaceID': None, 'PurchaseCreditAcc': '', 'EUPurchaseCreditAcc': '', 'ForeignPurchaseCreditAcc': '', 'SalesCreditAcc': '', 'SalesCreditEUAcc': '', 'ExemptedCredits': '', 'SalesCreditForeignAcc': '', 'NegativeInventoryAdjustmentAccount': '', 'WHShipToName': None, 'Excisable': 'tNO', 'WHIncomingCenvatAccount': '', 'WHOutgoingCenvatAccount': '', 'StockInTransitAccount': '', 'WipOffsetProfitAndLossAccount': '', 'InventoryOffsetProfitAndLossAccount': '', 'AddressType': None, 'StreetNo': None, 'Storekeeper': None, 'Shipper': None, 'ManageSerialAndBatchNumbers': 'tNO', 'GlobalLocationNumber': None, 'EnableBinLocations': 'tNO', 'BinLocCodeSeparator': '-', 'DefaultBin': None, 'DefaultBinEnforced': 'tNO', 'AutoAllocOnIssue': 'whsBinSingleChoiceOnly', 'EnableReceivingBinLocations': 'tNO', 'ReceivingBinLocationsBy': 'rblmBinLocationCodeOrder', 'PurchaseBalanceAccount': '', 'Inactive': 'tNO', 'RestrictReceiptToEmptyBinLocation': 'tYES', 'ReceiveUpToMaxQuantity': 'tNO', 'AutoAllocOnReceipt': 'aaormDefaultBin', 'ReceiveUpToMaxWeight': 'tNO', 'ReceiveUpToMethod': 'rutmMaximumQty', 'U_ShopifyInventoryIDLocal': None, 'U_ShopifyInventoryIDInternational': None}, {'Street': None, 'StockInflationOffsetAccount': '', 'ZipCode': None, 'DecreasingAccount': '', 'PurchaseAccount': '', 'EURevenuesAccount': '40101101', 'ReturningAccount': '10501310', 'ShippedGoodsAccount': '6100103', 'StockInflationAdjustAccount': '', 'AllowUseTax': 'tNO', 'CostInflationAccount': '', 'ForeignExpensesAccount': '50101001', 'EUExpensesAccount': '50101001', 'CostInflationOffsetAccount': '', 'ExpensesClearingAccount': '', 'PurchaseReturningAccount': '', 'VATInRevenueAccount': '', 'FederalTaxID': None, 'Location': 5, 'Block': None, 'ExpenseAccount': '50101001', 'DecreaseGLAccount': '', 'RevenuesAccount': '40101101', 'TaxGroup': None, 'ExemptRevenuesAccount': '', 'PurchaseOffsetAccount': '', 'CostOfGoodsSold': '50101001', 'WarehouseCode': 'WW-CON', 'State': '', 'City': None, 'PriceDifferencesAccount': '50101001', 'VarianceAccount': '', 'Country': None, 'IncreaseGLAccount': '', 'ExchangeRateDifferencesAccount': '', 'WIPMaterialAccount': '10501281', 'WarehouseName': 'WKS - Consignment', 'DropShip': 'tNO', 'WIPMaterialVarianceAccount': '', 'TransfersAcc': '20101513', 'InternalKey': None, 'ForeignRevenuesAcc': '40101101', 'BuildingFloorRoom': None, 'County': None, 'Nettable': 'tYES', 'IncreasingAcc': '', 'ExpenseOffsetingAct': '', 'GoodsClearingAcc': '10501210', 'StockAccount': '10501310', 'BusinessPlaceID': None, 'PurchaseCreditAcc': '50101001', 'EUPurchaseCreditAcc': '50101001', 'ForeignPurchaseCreditAcc': '50101001', 'SalesCreditAcc': '40101101', 'SalesCreditEUAcc': '40101101', 'ExemptedCredits': '', 'SalesCreditForeignAcc': '40101101', 'NegativeInventoryAdjustmentAccount': '', 'WHShipToName': None, 'Excisable': 'tNO', 'WHIncomingCenvatAccount': '', 'WHOutgoingCenvatAccount': '', 'StockInTransitAccount': '20101515', 'WipOffsetProfitAndLossAccount': '', 'InventoryOffsetProfitAndLossAccount': '', 'AddressType': None, 'StreetNo': None, 'Storekeeper': None, 'Shipper': None, 'ManageSerialAndBatchNumbers': 'tNO', 'GlobalLocationNumber': None, 'EnableBinLocations': 'tNO', 'BinLocCodeSeparator': '-', 'DefaultBin': None, 'DefaultBinEnforced': 'tNO', 'AutoAllocOnIssue': 'whsBinSingleChoiceOnly', 'EnableReceivingBinLocations': 'tNO', 'ReceivingBinLocationsBy': 'rblmBinLocationCodeOrder', 'PurchaseBalanceAccount': '', 'Inactive': 'tNO', 'RestrictReceiptToEmptyBinLocation': 'tYES', 'ReceiveUpToMaxQuantity': 'tNO', 'AutoAllocOnReceipt': 'aaormDefaultBin', 'ReceiveUpToMaxWeight': 'tNO', 'ReceiveUpToMethod': 'rutmMaximumQty', 'U_ShopifyInventoryIDLocal': None, 'U_ShopifyInventoryIDInternational': None}, {'Street': None, 'StockInflationOffsetAccount': '', 'ZipCode': None, 'DecreasingAccount': '', 'PurchaseAccount': '', 'EURevenuesAccount': '40101101', 'ReturningAccount': '10501310', 'ShippedGoodsAccount': '6100103', 'StockInflationAdjustAccount': '', 'AllowUseTax': 'tNO', 'CostInflationAccount': '', 'ForeignExpensesAccount': '50101001', 'EUExpensesAccount': '50101001', 'CostInflationOffsetAccount': '', 'ExpensesClearingAccount': '', 'PurchaseReturningAccount': '', 'VATInRevenueAccount': '', 'FederalTaxID': None, 'Location': 5, 'Block': None, 'ExpenseAccount': '50101001', 'DecreaseGLAccount': '', 'RevenuesAccount': '40101101', 'TaxGroup': None, 'ExemptRevenuesAccount': '', 'PurchaseOffsetAccount': '', 'CostOfGoodsSold': '50101001', 'WarehouseCode': 'WW-DAM', 'State': '', 'City': None, 'PriceDifferencesAccount': '50101001', 'VarianceAccount': '', 'Country': None, 'IncreaseGLAccount': '', 'ExchangeRateDifferencesAccount': '', 'WIPMaterialAccount': '10501281', 'WarehouseName': 'WW-Damage', 'DropShip': 'tNO', 'WIPMaterialVarianceAccount': '', 'TransfersAcc': '20101513', 'InternalKey': None, 'ForeignRevenuesAcc': '40101101', 'BuildingFloorRoom': None, 'County': None, 'Nettable': 'tYES', 'IncreasingAcc': '', 'ExpenseOffsetingAct': '', 'GoodsClearingAcc': '10501210', 'StockAccount': '10501310', 'BusinessPlaceID': None, 'PurchaseCreditAcc': '50101001', 'EUPurchaseCreditAcc': '50101001', 'ForeignPurchaseCreditAcc': '50101001', 'SalesCreditAcc': '40101101', 'SalesCreditEUAcc': '40101101', 'ExemptedCredits': '', 'SalesCreditForeignAcc': '40101101', 'NegativeInventoryAdjustmentAccount': '', 'WHShipToName': None, 'Excisable': 'tNO', 'WHIncomingCenvatAccount': '', 'WHOutgoingCenvatAccount': '', 'StockInTransitAccount': '20101515', 'WipOffsetProfitAndLossAccount': '', 'InventoryOffsetProfitAndLossAccount': '', 'AddressType': None, 'StreetNo': None, 'Storekeeper': None, 'Shipper': None, 'ManageSerialAndBatchNumbers': 'tNO', 'GlobalLocationNumber': None, 'EnableBinLocations': 'tNO', 'BinLocCodeSeparator': '-', 'DefaultBin': None, 'DefaultBinEnforced': 'tNO', 'AutoAllocOnIssue': 'whsBinSingleChoiceOnly', 'EnableReceivingBinLocations': 'tNO', 'ReceivingBinLocationsBy': 'rblmBinLocationCodeOrder', 'PurchaseBalanceAccount': '', 'Inactive': 'tNO', 'RestrictReceiptToEmptyBinLocation': 'tYES', 'ReceiveUpToMaxQuantity': 'tNO', 'AutoAllocOnReceipt': 'aaormDefaultBin', 'ReceiveUpToMaxWeight': 'tNO', 'ReceiveUpToMethod': 'rutmMaximumQty', 'U_ShopifyInventoryIDLocal': None, 'U_ShopifyInventoryIDInternational': None}, {'Street': None, 'StockInflationOffsetAccount': '', 'ZipCode': None, 'DecreasingAccount': '', 'PurchaseAccount': '', 'EURevenuesAccount': '40101101', 'ReturningAccount': '10501310', 'ShippedGoodsAccount': '6100103', 'StockInflationAdjustAccount': '', 'AllowUseTax': 'tNO', 'CostInflationAccount': '', 'ForeignExpensesAccount': '50101001', 'EUExpensesAccount': '50101001', 'CostInflationOffsetAccount': '', 'ExpensesClearingAccount': '', 'PurchaseReturningAccount': '', 'VATInRevenueAccount': '', 'FederalTaxID': None, 'Location': 5, 'Block': None, 'ExpenseAccount': '50101001', 'DecreaseGLAccount': '', 'RevenuesAccount': '40101101', 'TaxGroup': None, 'ExemptRevenuesAccount': '', 'PurchaseOffsetAccount': '', 'CostOfGoodsSold': '50101001', 'WarehouseCode': 'WW-REP', 'State': '', 'City': None, 'PriceDifferencesAccount': '50101001', 'VarianceAccount': '', 'Country': None, 'IncreaseGLAccount': '', 'ExchangeRateDifferencesAccount': '', 'WIPMaterialAccount': '10501281', 'WarehouseName': 'WW-Repaire', 'DropShip': 'tNO', 'WIPMaterialVarianceAccount': '', 'TransfersAcc': '20101513', 'InternalKey': None, 'ForeignRevenuesAcc': '40101101', 'BuildingFloorRoom': None, 'County': None, 'Nettable': 'tYES', 'IncreasingAcc': '', 'ExpenseOffsetingAct': '', 'GoodsClearingAcc': '10501210', 'StockAccount': '10501310', 'BusinessPlaceID': None, 'PurchaseCreditAcc': '50101001', 'EUPurchaseCreditAcc': '50101001', 'ForeignPurchaseCreditAcc': '50101001', 'SalesCreditAcc': '40101101', 'SalesCreditEUAcc': '40101101', 'ExemptedCredits': '', 'SalesCreditForeignAcc': '40101101', 'NegativeInventoryAdjustmentAccount': '', 'WHShipToName': None, 'Excisable': 'tNO', 'WHIncomingCenvatAccount': '', 'WHOutgoingCenvatAccount': '', 'StockInTransitAccount': '20101515', 'WipOffsetProfitAndLossAccount': '', 'InventoryOffsetProfitAndLossAccount': '', 'AddressType': None, 'StreetNo': None, 'Storekeeper': None, 'Shipper': None, 'ManageSerialAndBatchNumbers': 'tNO', 'GlobalLocationNumber': None, 'EnableBinLocations': 'tNO', 'BinLocCodeSeparator': '-', 'DefaultBin': None, 'DefaultBinEnforced': 'tNO', 'AutoAllocOnIssue': 'whsBinSingleChoiceOnly', 'EnableReceivingBinLocations': 'tNO', 'ReceivingBinLocationsBy': 'rblmBinLocationCodeOrder', 'PurchaseBalanceAccount': '', 'Inactive': 'tNO', 'RestrictReceiptToEmptyBinLocation': 'tYES', 'ReceiveUpToMaxQuantity': 'tNO', 'AutoAllocOnReceipt': 'aaormDefaultBin', 'ReceiveUpToMaxWeight': 'tNO', 'ReceiveUpToMethod': 'rutmMaximumQty', 'U_ShopifyInventoryIDLocal': None, 'U_ShopifyInventoryIDInternational': None}, {'Street': None, 'StockInflationOffsetAccount': '', 'ZipCode': None, 'DecreasingAccount': '', 'PurchaseAccount': '', 'EURevenuesAccount': '40101101', 'ReturningAccount': '10501310', 'ShippedGoodsAccount': '6100103', 'StockInflationAdjustAccount': '', 'AllowUseTax': 'tNO', 'CostInflationAccount': '', 'ForeignExpensesAccount': '50101001', 'EUExpensesAccount': '50101001', 'CostInflationOffsetAccount': '', 'ExpensesClearingAccount': '', 'PurchaseReturningAccount': '', 'VATInRevenueAccount': '', 'FederalTaxID': None, 'Location': 5, 'Block': None, 'ExpenseAccount': '50101001', 'DecreaseGLAccount': '', 'RevenuesAccount': '40101101', 'TaxGroup': None, 'ExemptRevenuesAccount': '', 'PurchaseOffsetAccount': '', 'CostOfGoodsSold': '50101001', 'WarehouseCode': 'WW-SAM', 'State': '', 'City': None, 'PriceDifferencesAccount': '50101001', 'VarianceAccount': '', 'Country': None, 'IncreaseGLAccount': '', 'ExchangeRateDifferencesAccount': '', 'WIPMaterialAccount': '10501281', 'WarehouseName': 'WKS - Sample', 'DropShip': 'tNO', 'WIPMaterialVarianceAccount': '', 'TransfersAcc': '20101513', 'InternalKey': None, 'ForeignRevenuesAcc': '40101101', 'BuildingFloorRoom': None, 'County': None, 'Nettable': 'tYES', 'IncreasingAcc': '', 'ExpenseOffsetingAct': '', 'GoodsClearingAcc': '10501210', 'StockAccount': '10501310', 'BusinessPlaceID': None, 'PurchaseCreditAcc': '50101001', 'EUPurchaseCreditAcc': '50101001', 'ForeignPurchaseCreditAcc': '50101001', 'SalesCreditAcc': '40101101', 'SalesCreditEUAcc': '40101101', 'ExemptedCredits': '', 'SalesCreditForeignAcc': '40101101', 'NegativeInventoryAdjustmentAccount': '', 'WHShipToName': None, 'Excisable': 'tNO', 'WHIncomingCenvatAccount': '', 'WHOutgoingCenvatAccount': '', 'StockInTransitAccount': '20101515', 'WipOffsetProfitAndLossAccount': '', 'InventoryOffsetProfitAndLossAccount': '', 'AddressType': None, 'StreetNo': None, 'Storekeeper': None, 'Shipper': None, 'ManageSerialAndBatchNumbers': 'tNO', 'GlobalLocationNumber': None, 'EnableBinLocations': 'tNO', 'BinLocCodeSeparator': '-', 'DefaultBin': None, 'DefaultBinEnforced': 'tNO', 'AutoAllocOnIssue': 'whsBinSingleChoiceOnly', 'EnableReceivingBinLocations': 'tNO', 'ReceivingBinLocationsBy': 'rblmBinLocationCodeOrder', 'PurchaseBalanceAccount': '', 'Inactive': 'tNO', 'RestrictReceiptToEmptyBinLocation': 'tYES', 'ReceiveUpToMaxQuantity': 'tNO', 'AutoAllocOnReceipt': 'aaormDefaultBin', 'ReceiveUpToMaxWeight': 'tNO', 'ReceiveUpToMethod': 'rutmMaximumQty', 'U_ShopifyInventoryIDLocal': None, 'U_ShopifyInventoryIDInternational': None}, {'Street': None, 'StockInflationOffsetAccount': '', 'ZipCode': None, 'DecreasingAccount': '', 'PurchaseAccount': '', 'EURevenuesAccount': '40101101', 'ReturningAccount': '10501310', 'ShippedGoodsAccount': '6100103', 'StockInflationAdjustAccount': '', 'AllowUseTax': 'tNO', 'CostInflationAccount': '', 'ForeignExpensesAccount': '50101001', 'EUExpensesAccount': '50101001', 'CostInflationOffsetAccount': '', 'ExpensesClearingAccount': '', 'PurchaseReturningAccount': '', 'VATInRevenueAccount': '', 'FederalTaxID': None, 'Location': 5, 'Block': None, 'ExpenseAccount': '50101001', 'DecreaseGLAccount': '', 'RevenuesAccount': '40101101', 'TaxGroup': None, 'ExemptRevenuesAccount': '', 'PurchaseOffsetAccount': '', 'CostOfGoodsSold': '50101001', 'WarehouseCode': 'WW-WIP', 'State': '', 'City': None, 'PriceDifferencesAccount': '50101001', 'VarianceAccount': '', 'Country': None, 'IncreaseGLAccount': '', 'ExchangeRateDifferencesAccount': '', 'WIPMaterialAccount': '10501281', 'WarehouseName': 'WKS - WIP', 'DropShip': 'tNO', 'WIPMaterialVarianceAccount': '', 'TransfersAcc': '20101513', 'InternalKey': None, 'ForeignRevenuesAcc': '40101101', 'BuildingFloorRoom': None, 'County': None, 'Nettable': 'tYES', 'IncreasingAcc': '', 'ExpenseOffsetingAct': '', 'GoodsClearingAcc': '10501210', 'StockAccount': '10501310', 'BusinessPlaceID': None, 'PurchaseCreditAcc': '50101001', 'EUPurchaseCreditAcc': '50101001', 'ForeignPurchaseCreditAcc': '50101001', 'SalesCreditAcc': '40101101', 'SalesCreditEUAcc': '40101101', 'ExemptedCredits': '', 'SalesCreditForeignAcc': '40101101', 'NegativeInventoryAdjustmentAccount': '', 'WHShipToName': None, 'Excisable': 'tNO', 'WHIncomingCenvatAccount': '', 'WHOutgoingCenvatAccount': '', 'StockInTransitAccount': '20101515', 'WipOffsetProfitAndLossAccount': '', 'InventoryOffsetProfitAndLossAccount': '', 'AddressType': None, 'StreetNo': None, 'Storekeeper': None, 'Shipper': None, 'ManageSerialAndBatchNumbers': 'tNO', 'GlobalLocationNumber': None, 'EnableBinLocations': 'tNO', 'BinLocCodeSeparator': '-', 'DefaultBin': None, 'DefaultBinEnforced': 'tNO', 'AutoAllocOnIssue': 'whsBinSingleChoiceOnly', 'EnableReceivingBinLocations': 'tNO', 'ReceivingBinLocationsBy': 'rblmBinLocationCodeOrder', 'PurchaseBalanceAccount': '', 'Inactive': 'tNO', 'RestrictReceiptToEmptyBinLocation': 'tYES', 'ReceiveUpToMaxQuantity': 'tNO', 'AutoAllocOnReceipt': 'aaormDefaultBin', 'ReceiveUpToMaxWeight': 'tNO', 'ReceiveUpToMethod': 'rutmMaximumQty', 'U_ShopifyInventoryIDLocal': None, 'U_ShopifyInventoryIDInternational': None}, {'Street': None, 'StockInflationOffsetAccount': '', 'ZipCode': None, 'DecreasingAccount': '', 'PurchaseAccount': '', 'EURevenuesAccount': '', 'ReturningAccount': '', 'ShippedGoodsAccount': '', 'StockInflationAdjustAccount': '', 'AllowUseTax': 'tNO', 'CostInflationAccount': '', 'ForeignExpensesAccount': '', 'EUExpensesAccount': '', 'CostInflationOffsetAccount': '', 'ExpensesClearingAccount': '', 'PurchaseReturningAccount': '', 'VATInRevenueAccount': '', 'FederalTaxID': None, 'Location': 2, 'Block': None, 'ExpenseAccount': '', 'DecreaseGLAccount': '', 'RevenuesAccount': '', 'TaxGroup': None, 'ExemptRevenuesAccount': '', 'PurchaseOffsetAccount': '', 'CostOfGoodsSold': '50101001', 'WarehouseCode': 'ZW', 'State': '', 'City': None, 'PriceDifferencesAccount': '50101001', 'VarianceAccount': '', 'Country': None, 'IncreaseGLAccount': '', 'ExchangeRateDifferencesAccount': '', 'WIPMaterialAccount': '', 'WarehouseName': 'Zamalek', 'DropShip': 'tNO', 'WIPMaterialVarianceAccount': '', 'TransfersAcc': '20101513', 'InternalKey': None, 'ForeignRevenuesAcc': '', 'BuildingFloorRoom': None, 'County': None, 'Nettable': 'tYES', 'IncreasingAcc': '', 'ExpenseOffsetingAct': '', 'GoodsClearingAcc': '', 'StockAccount': '10501310', 'BusinessPlaceID': None, 'PurchaseCreditAcc': '', 'EUPurchaseCreditAcc': '', 'ForeignPurchaseCreditAcc': '', 'SalesCreditAcc': '', 'SalesCreditEUAcc': '', 'ExemptedCredits': '', 'SalesCreditForeignAcc': '', 'NegativeInventoryAdjustmentAccount': '', 'WHShipToName': None, 'Excisable': 'tNO', 'WHIncomingCenvatAccount': '', 'WHOutgoingCenvatAccount': '', 'StockInTransitAccount': '', 'WipOffsetProfitAndLossAccount': '', 'InventoryOffsetProfitAndLossAccount': '', 'AddressType': None, 'StreetNo': None, 'Storekeeper': None, 'Shipper': None, 'ManageSerialAndBatchNumbers': 'tNO', 'GlobalLocationNumber': None, 'EnableBinLocations': 'tYES', 'BinLocCodeSeparator': '-', 'DefaultBin': 14, 'DefaultBinEnforced': 'tNO', 'AutoAllocOnIssue': 'whsBinSingleChoiceOnly', 'EnableReceivingBinLocations': 'tNO', 'ReceivingBinLocationsBy': 'rblmBinLocationCodeOrder', 'PurchaseBalanceAccount': '', 'Inactive': 'tNO', 'RestrictReceiptToEmptyBinLocation': 'tYES', 'ReceiveUpToMaxQuantity': 'tNO', 'AutoAllocOnReceipt': 'aaormDefaultBin', 'ReceiveUpToMaxWeight': 'tNO', 'ReceiveUpToMethod': 'rutmMaximumQty', 'U_ShopifyInventoryIDLocal': None, 'U_ShopifyInventoryIDInternational': None}], 'odata.nextLink': 'Warehouses?$skip=20'}, 'status': 'success'}
2025-08-05 18:08:57,198 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'Items', 'request': {'method': 'GET', 'url': 'https://10.0.0.100:50000/b1s/v1/Items', 'data': None, 'params': {'$top': 5}}, 'response': None, 'status': None}
2025-08-05 18:08:58,094 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'Items', 'request': None, 'response': {'odata.metadata': 'https://10.0.0.100:50000/b1s/v1/$metadata#Items', 'value': [{'ItemCode': 'ACC-0000001', 'ItemName': 'Ring Holder With Slit 5*5cm', 'ForeignName': None, 'ItemsGroupCode': 110, 'CustomsGroupCode': -1, 'SalesVATGroup': 'X0', 'BarCode': None, 'VatLiable': 'tYES', 'PurchaseItem': 'tYES', 'SalesItem': 'tNO', 'InventoryItem': 'tYES', 'IncomeAccount': None, 'ExemptIncomeAccount': None, 'ExpanseAccount': None, 'Mainsupplier': None, 'SupplierCatalogNo': None, 'DesiredInventory': 0.0, 'MinInventory': 50.0, 'Picture': None, 'User_Text': None, 'SerialNum': None, 'CommissionPercent': 0.0, 'CommissionSum': 0.0, 'CommissionGroup': 0, 'TreeType': 'iNotATree', 'AssetItem': 'tNO', 'DataExportCode': None, 'Manufacturer': -1, 'QuantityOnStock': 35.0, 'QuantityOrderedFromVendors': 0.0, 'QuantityOrderedByCustomers': 0.0, 'ManageSerialNumbers': 'tNO', 'ManageBatchNumbers': 'tNO', 'Valid': 'tYES', 'ValidFrom': None, 'ValidTo': None, 'ValidRemarks': None, 'Frozen': 'tNO', 'FrozenFrom': None, 'FrozenTo': None, 'FrozenRemarks': None, 'SalesUnit': None, 'SalesItemsPerUnit': 1.0, 'SalesPackagingUnit': None, 'SalesQtyPerPackUnit': 1.0, 'SalesUnitLength': None, 'SalesLengthUnit': None, 'SalesUnitWidth': None, 'SalesWidthUnit': None, 'SalesUnitHeight': None, 'SalesHeightUnit': None, 'SalesUnitVolume': 0.0, 'SalesVolumeUnit': 4, 'SalesUnitWeight': None, 'SalesWeightUnit': None, 'PurchaseUnit': None, 'PurchaseItemsPerUnit': 1.0, 'PurchasePackagingUnit': None, 'PurchaseQtyPerPackUnit': 1.0, 'PurchaseUnitLength': None, 'PurchaseLengthUnit': None, 'PurchaseUnitWidth': None, 'PurchaseWidthUnit': None, 'PurchaseUnitHeight': None, 'PurchaseHeightUnit': None, 'PurchaseUnitVolume': 0.0, 'PurchaseVolumeUnit': 4, 'PurchaseUnitWeight': None, 'PurchaseWeightUnit': None, 'PurchaseVATGroup': 'X1', 'SalesFactor1': 1.0, 'SalesFactor2': 1.0, 'SalesFactor3': 1.0, 'SalesFactor4': 1.0, 'PurchaseFactor1': 1.0, 'PurchaseFactor2': 1.0, 'PurchaseFactor3': 1.0, 'PurchaseFactor4': 1.0, 'MovingAveragePrice': 0.0, 'ForeignRevenuesAccount': None, 'ECRevenuesAccount': None, 'ForeignExpensesAccount': None, 'ECExpensesAccount': None, 'AvgStdPrice': 0.0, 'DefaultWarehouse': None, 'ShipType': None, 'GLMethod': 'glm_ItemClass', 'TaxType': 'tt_Yes', 'MaxInventory': 0.0, 'ManageStockByWarehouse': 'tYES', 'PurchaseHeightUnit1': None, 'PurchaseUnitHeight1': None, 'PurchaseLengthUnit1': None, 'PurchaseUnitLength1': None, 'PurchaseWeightUnit1': None, 'PurchaseUnitWeight1': None, 'PurchaseWidthUnit1': None, 'PurchaseUnitWidth1': None, 'SalesHeightUnit1': None, 'SalesUnitHeight1': None, 'SalesLengthUnit1': None, 'SalesUnitLength1': None, 'SalesWeightUnit1': None, 'SalesUnitWeight1': None, 'SalesWidthUnit1': None, 'SalesUnitWidth1': None, 'ForceSelectionOfSerialNumber': 'tYES', 'ManageSerialNumbersOnReleaseOnly': 'tNO', 'WTLiable': 'tNO', 'CostAccountingMethod': 'bis_MovingAverage', 'SWW': None, 'WarrantyTemplate': '', 'IndirectTax': 'tNO', 'ArTaxCode': None, 'ApTaxCode': None, 'BaseUnitName': None, 'ItemCountryOrg': None, 'IssueMethod': 'im_Backflush', 'SRIAndBatchManageMethod': 'bomm_OnEveryTransaction', 'IsPhantom': 'tNO', 'InventoryUOM': 'Piece', 'PlanningSystem': 'bop_None', 'ProcurementMethod': 'bom_Buy', 'ComponentWarehouse': 'bomcw_BOM', 'OrderIntervals': None, 'OrderMultiple': 0.0, 'LeadTime': None, 'MinOrderQuantity': 0.0, 'ItemType': 'itItems', 'ItemClass': 'itcMaterial', 'OutgoingServiceCode': -1, 'IncomingServiceCode': -1, 'ServiceGroup': -1, 'NCMCode': -1, 'MaterialType': 'mt_FinishedGoods', 'MaterialGroup': -1, 'ProductSource': '', 'Properties1': 'tNO', 'Properties2': 'tNO', 'Properties3': 'tNO', 'Properties4': 'tNO', 'Properties5': 'tNO', 'Properties6': 'tNO', 'Properties7': 'tNO', 'Properties8': 'tNO', 'Properties9': 'tNO', 'Properties10': 'tNO', 'Properties11': 'tNO', 'Properties12': 'tNO', 'Properties13': 'tNO', 'Properties14': 'tNO', 'Properties15': 'tNO', 'Properties16': 'tNO', 'Properties17': 'tNO', 'Properties18': 'tNO', 'Properties19': 'tNO', 'Properties20': 'tNO', 'Properties21': 'tNO', 'Properties22': 'tNO', 'Properties23': 'tNO', 'Properties24': 'tNO', 'Properties25': 'tNO', 'Properties26': 'tNO', 'Properties27': 'tNO', 'Properties28': 'tNO', 'Properties29': 'tNO', 'Properties30': 'tNO', 'Properties31': 'tNO', 'Properties32': 'tNO', 'Properties33': 'tNO', 'Properties34': 'tNO', 'Properties35': 'tNO', 'Properties36': 'tNO', 'Properties37': 'tNO', 'Properties38': 'tNO', 'Properties39': 'tNO', 'Properties40': 'tNO', 'Properties41': 'tNO', 'Properties42': 'tNO', 'Properties43': 'tNO', 'Properties44': 'tNO', 'Properties45': 'tNO', 'Properties46': 'tNO', 'Properties47': 'tNO', 'Properties48': 'tNO', 'Properties49': 'tNO', 'Properties50': 'tNO', 'Properties51': 'tNO', 'Properties52': 'tNO', 'Properties53': 'tNO', 'Properties54': 'tNO', 'Properties55': 'tNO', 'Properties56': 'tNO', 'Properties57': 'tNO', 'Properties58': 'tNO', 'Properties59': 'tNO', 'Properties60': 'tNO', 'Properties61': 'tNO', 'Properties62': 'tNO', 'Properties63': 'tNO', 'Properties64': 'tNO', 'AutoCreateSerialNumbersOnRelease': 'tNO', 'DNFEntry': -1, 'GTSItemSpec': None, 'GTSItemTaxCategory': None, 'FuelID': None, 'BeverageTableCode': '', 'BeverageGroupCode': '', 'BeverageCommercialBrandCode': None, 'Series': 119, 'ToleranceDays': None, 'TypeOfAdvancedRules': 'toarGeneral', 'IssuePrimarilyBy': 'ipbBinLocations', 'NoDiscounts': 'tNO', 'AssetClass': '', 'AssetGroup': '', 'InventoryNumber': '', 'Technician': None, 'Employee': None, 'Location': None, 'AssetStatus': 'New', 'CapitalizationDate': None, 'StatisticalAsset': 'tNO', 'Cession': 'tNO', 'DeactivateAfterUsefulLife': 'tNO', 'ManageByQuantity': 'tNO', 'UoMGroupEntry': 1, 'InventoryUoMEntry': 1, 'DefaultSalesUoMEntry': None, 'DefaultPurchasingUoMEntry': None, 'DepreciationGroup': None, 'AssetSerialNumber': '', 'InventoryWeight': None, 'InventoryWeightUnit': None, 'InventoryWeight1': None, 'InventoryWeightUnit1': None, 'DefaultCountingUnit': 'Piece', 'CountingItemsPerUnit': 1.0, 'DefaultCountingUoMEntry': 1, 'Excisable': 'tNO', 'ChapterID': -1, 'ScsCode': None, 'SpProdType': None, 'ProdStdCost': 0.0, 'InCostRollup': 'tYES', 'VirtualAssetItem': 'tNO', 'EnforceAssetSerialNumbers': 'tNO', 'AttachmentEntry': None, 'LinkedResource': None, 'UpdateDate': '2025-05-17', 'UpdateTime': '16:02:59', 'GSTRelevnt': 'tNO', 'SACEntry': -1, 'GSTTaxCategory': 'gtc_Regular', 'ServiceCategoryEntry': -1, 'CapitalGoodsOnHoldPercent': None, 'CapitalGoodsOnHoldLimit': None, 'AssessableValue': 0.0, 'AssVal4WTR': 0.0, 'SOIExcisable': 'se_NotExcisable', 'TNVED': None, 'ImportedItem': 'tNO', 'PricingUnit': 1, 'CreateDate': '2025-01-26', 'CreateTime': '09:33:07', 'U_MfgH': None, 'U_Collection': None, 'U_OldCode': None, 'U_ItemsCat': None, 'U_NumberofSet': None, 'U_NileCode': None, 'U_TransferProductionLinkExclude': None, 'U_SBO_CodeType': 'GS1', 'U_SBO_EGSCode': None, 'U_ShopifyColor': None, 'U_SalesChannel': None, 'U_ShopifyItemIDLocal': None, 'U_ShopifyItemIDInternational': None, 'U_ParentCommercialName': None, 'ItemPrices': [{'PriceList': 1, 'Price': 0.0, 'Currency': '', 'AdditionalPrice1': 0.0, 'AdditionalCurrency1': '', 'AdditionalPrice2': 0.0, 'AdditionalCurrency2': '', 'BasePriceList': 1, 'Factor': 1.0, 'UoMPrices': []}, {'PriceList': 2, 'Price': 0.0, 'Currency': '', 'AdditionalPrice1': 0.0, 'AdditionalCurrency1': '', 'AdditionalPrice2': 0.0, 'AdditionalCurrency2': '', 'BasePriceList': 1, 'Factor': 0.4, 'UoMPrices': []}, {'PriceList': 3, 'Price': 0.0, 'Currency': '', 'AdditionalPrice1': 0.0, 'AdditionalCurrency1': '', 'AdditionalPrice2': 0.0, 'AdditionalCurrency2': '', 'BasePriceList': 3, 'Factor': 1.0, 'UoMPrices': []}, {'PriceList': 4, 'Price': 0.0, 'Currency': '', 'AdditionalPrice1': 0.0, 'AdditionalCurrency1': '', 'AdditionalPrice2': 0.0, 'AdditionalCurrency2': '', 'BasePriceList': 4, 'Factor': 1.0, 'UoMPrices': []}, {'PriceList': 5, 'Price': 0.0, 'Currency': '', 'AdditionalPrice1': 0.0, 'AdditionalCurrency1': '', 'AdditionalPrice2': 0.0, 'AdditionalCurrency2': '', 'BasePriceList': 5, 'Factor': 1.0, 'UoMPrices': []}, {'PriceList': 6, 'Price': 0.0, 'Currency': '', 'AdditionalPrice1': 0.0, 'AdditionalCurrency1': '', 'AdditionalPrice2': 0.0, 'AdditionalCurrency2': '', 'BasePriceList': 6, 'Factor': 1.0, 'UoMPrices': []}, {'PriceList': 7, 'Price': 0.0, 'Currency': '', 'AdditionalPrice1': 0.0, 'AdditionalCurrency1': '', 'AdditionalPrice2': 0.0, 'AdditionalCurrency2': '', 'BasePriceList': 7, 'Factor': 1.0, 'UoMPrices': []}, {'PriceList': 8, 'Price': 0.0, 'Currency': '', 'AdditionalPrice1': 0.0, 'AdditionalCurrency1': '', 'AdditionalPrice2': 0.0, 'AdditionalCurrency2': '', 'BasePriceList': 8, 'Factor': 1.0, 'UoMPrices': []}, {'PriceList': 9, 'Price': 0.0, 'Currency': '', 'AdditionalPrice1': 0.0, 'AdditionalCurrency1': '', 'AdditionalPrice2': 0.0, 'AdditionalCurrency2': '', 'BasePriceList': 9, 'Factor': 1.0, 'UoMPrices': []}, {'PriceList': 10, 'Price': 0.0, 'Currency': '', 'AdditionalPrice1': 0.0, 'AdditionalCurrency1': '', 'AdditionalPrice2': 0.0, 'AdditionalCurrency2': '', 'BasePriceList': 10, 'Factor': 1.0, 'UoMPrices': []}], 'ItemWarehouseInfoCollection': [{'MinimalStock': 30.0, 'MaximalStock': 0.0, 'MinimalOrder': 0.0, 'StandardAveragePrice': 180.0, 'Locked': 'tNO', 'InventoryAccount': None, 'CostAccount': None, 'TransferAccount': None, 'RevenuesAccount': None, 'VarienceAccount': None, 'DecreasingAccount': None, 'IncreasingAccount': None, 'ReturningAccount': None, 'ExpensesAccount': None, 'EURevenuesAccount': None, 'EUExpensesAccount': None, 'ForeignRevenueAcc': None, 'ForeignExpensAcc': None, 'ExemptIncomeAcc': None, 'PriceDifferenceAcc': None, 'WarehouseCode': '5A', 'InStock': 25.0, 'Committed': 0.0, 'Ordered': 0.0, 'CountedQuantity': 0.0, 'WasCounted': 'tNO', 'UserSignature': 50, 'Counted': 0.0, 'ExpenseClearingAct': None, 'PurchaseCreditAcc': None, 'EUPurchaseCreditAcc': None, 'ForeignPurchaseCreditAcc': None, 'SalesCreditAcc': None, 'SalesCreditEUAcc': None, 'ExemptedCredits': None, 'SalesCreditForeignAcc': None, 'ExpenseOffsettingAccount': None, 'WipAccount': None, 'ExchangeRateDifferencesAcct': None, 'GoodsClearingAcct': None, 'NegativeInventoryAdjustmentAccount': None, 'CostInflationOffsetAccount': None, 'GLDecreaseAcct': None, 'GLIncreaseAcct': None, 'PAReturnAcct': None, 'PurchaseAcct': None, 'PurchaseOffsetAcct': None, 'ShippedGoodsAccount': None, 'StockInflationOffsetAccount': None, 'StockInflationAdjustAccount': None, 'VATInRevenueAccount': None, 'WipVarianceAccount': None, 'CostInflationAccount': None, 'WHIncomingCenvatAccount': None, 'WHOutgoingCenvatAccount': None, 'StockInTransitAccount': None, 'WipOffsetProfitAndLossAccount': None, 'InventoryOffsetProfitAndLossAccount': None, 'DefaultBin': None, 'DefaultBinEnforced': 'tNO', 'PurchaseBalanceAccount': None, 'ItemCode': 'ACC-0000001', 'ItemCycleCounts': []}, {'MinimalStock': 20.0, 'MaximalStock': 0.0, 'MinimalOrder': 0.0, 'StandardAveragePrice': 180.0, 'Locked': 'tNO', 'InventoryAccount': None, 'CostAccount': None, 'TransferAccount': None, 'RevenuesAccount': None, 'VarienceAccount': None, 'DecreasingAccount': None, 'IncreasingAccount': None, 'ReturningAccount': None, 'ExpensesAccount': None, 'EURevenuesAccount': None, 'EUExpensesAccount': None, 'ForeignRevenueAcc': None, 'ForeignExpensAcc': None, 'ExemptIncomeAcc': None, 'PriceDifferenceAcc': None, 'WarehouseCode': 'Arkan', 'InStock': 10.0, 'Committed': 0.0, 'Ordered': 0.0, 'CountedQuantity': 0.0, 'WasCounted': 'tNO', 'UserSignature': 50, 'Counted': 0.0, 'ExpenseClearingAct': None, 'PurchaseCreditAcc': None, 'EUPurchaseCreditAcc': None, 'ForeignPurchaseCreditAcc': None, 'SalesCreditAcc': None, 'SalesCreditEUAcc': None, 'ExemptedCredits': None, 'SalesCreditForeignAcc': None, 'ExpenseOffsettingAccount': None, 'WipAccount': None, 'ExchangeRateDifferencesAcct': None, 'GoodsClearingAcct': None, 'NegativeInventoryAdjustmentAccount': None, 'CostInflationOffsetAccount': None, 'GLDecreaseAcct': None, 'GLIncreaseAcct': None, 'PAReturnAcct': None, 'PurchaseAcct': None, 'PurchaseOffsetAcct': None, 'ShippedGoodsAccount': None, 'StockInflationOffsetAccount': None, 'StockInflationAdjustAccount': None, 'VATInRevenueAccount': None, 'WipVarianceAccount': None, 'CostInflationAccount': None, 'WHIncomingCenvatAccount': None, 'WHOutgoingCenvatAccount': None, 'StockInTransitAccount': None, 'WipOffsetProfitAndLossAccount': None, 'InventoryOffsetProfitAndLossAccount': None, 'DefaultBin': None, 'DefaultBinEnforced': 'tNO', 'PurchaseBalanceAccount': None, 'ItemCode': 'ACC-0000001', 'ItemCycleCounts': []}, {'MinimalStock': 0.0, 'MaximalStock': 0.0, 'MinimalOrder': 0.0, 'StandardAveragePrice': 0.0, 'Locked': 'tNO', 'InventoryAccount': None, 'CostAccount': None, 'TransferAccount': None, 'RevenuesAccount': None, 'VarienceAccount': None, 'DecreasingAccount': None, 'IncreasingAccount': None, 'ReturningAccount': None, 'ExpensesAccount': None, 'EURevenuesAccount': None, 'EUExpensesAccount': None, 'ForeignRevenueAcc': None, 'ForeignExpensAcc': None, 'ExemptIncomeAcc': None, 'PriceDifferenceAcc': None, 'WarehouseCode': 'DIP', 'InStock': 0.0, 'Committed': 0.0, 'Ordered': 0.0, 'CountedQuantity': 0.0, 'WasCounted': 'tNO', 'UserSignature': 50, 'Counted': 0.0, 'ExpenseClearingAct': None, 'PurchaseCreditAcc': None, 'EUPurchaseCreditAcc': None, 'ForeignPurchaseCreditAcc': None, 'SalesCreditAcc': None, 'SalesCreditEUAcc': None, 'ExemptedCredits': None, 'SalesCreditForeignAcc': None, 'ExpenseOffsettingAccount': None, 'WipAccount': None, 'ExchangeRateDifferencesAcct': None, 'GoodsClearingAcct': None, 'NegativeInventoryAdjustmentAccount': None, 'CostInflationOffsetAccount': None, 'GLDecreaseAcct': None, 'GLIncreaseAcct': None, 'PAReturnAcct': None, 'PurchaseAcct': None, 'PurchaseOffsetAcct': None, 'ShippedGoodsAccount': None, 'StockInflationOffsetAccount': None, 'StockInflationAdjustAccount': None, 'VATInRevenueAccount': None, 'WipVarianceAccount': None, 'CostInflationAccount': None, 'WHIncomingCenvatAccount': None, 'WHOutgoingCenvatAccount': None, 'StockInTransitAccount': None, 'WipOffsetProfitAndLossAccount': None, 'InventoryOffsetProfitAndLossAccount': None, 'DefaultBin': None, 'DefaultBinEnforced': 'tNO', 'PurchaseBalanceAccount': None, 'ItemCode': 'ACC-0000001', 'ItemCycleCounts': []}, {'MinimalStock': 0.0, 'MaximalStock': 0.0, 'MinimalOrder': 0.0, 'StandardAveragePrice': 180.0, 'Locked': 'tNO', 'InventoryAccount': None, 'CostAccount': None, 'TransferAccount': None, 'RevenuesAccount': None, 'VarienceAccount': None, 'DecreasingAccount': None, 'IncreasingAccount': None, 'ReturningAccount': None, 'ExpensesAccount': None, 'EURevenuesAccount': None, 'EUExpensesAccount': None, 'ForeignRevenueAcc': None, 'ForeignExpensAcc': None, 'ExemptIncomeAcc': None, 'PriceDifferenceAcc': None, 'WarehouseCode': 'INC', 'InStock': 0.0, 'Committed': 0.0, 'Ordered': 0.0, 'CountedQuantity': 0.0, 'WasCounted': 'tNO', 'UserSignature': 50, 'Counted': 0.0, 'ExpenseClearingAct': None, 'PurchaseCreditAcc': None, 'EUPurchaseCreditAcc': None, 'ForeignPurchaseCreditAcc': None, 'SalesCreditAcc': None, 'SalesCreditEUAcc': None, 'ExemptedCredits': None, 'SalesCreditForeignAcc': None, 'ExpenseOffsettingAccount': None, 'WipAccount': None, 'ExchangeRateDifferencesAcct': None, 'GoodsClearingAcct': None, 'NegativeInventoryAdjustmentAccount': None, 'CostInflationOffsetAccount': None, 'GLDecreaseAcct': None, 'GLIncreaseAcct': None, 'PAReturnAcct': None, 'PurchaseAcct': None, 'PurchaseOffsetAcct': None, 'ShippedGoodsAccount': None, 'StockInflationOffsetAccount': None, 'StockInflationAdjustAccount': None, 'VATInRevenueAccount': None, 'WipVarianceAccount': None, 'CostInflationAccount': None, 'WHIncomingCenvatAccount': None, 'WHOutgoingCenvatAccount': None, 'StockInTransitAccount': None, 'WipOffsetProfitAndLossAccount': None, 'InventoryOffsetProfitAndLossAccount': None, 'DefaultBin': None, 'DefaultBinEnforced': 'tNO', 'PurchaseBalanceAccount': None, 'ItemCode': 'ACC-0000001', 'ItemCycleCounts': []}, {'MinimalStock': 0.0, 'MaximalStock': 0.0, 'MinimalOrder': 0.0, 'StandardAveragePrice': 0.0, 'Locked': 'tNO', 'InventoryAccount': None, 'CostAccount': None, 'TransferAccount': None, 'RevenuesAccount': None, 'VarienceAccount': None, 'DecreasingAccount': None, 'IncreasingAccount': None, 'ReturningAccount': None, 'ExpensesAccount': None, 'EURevenuesAccount': None, 'EUExpensesAccount': None, 'ForeignRevenueAcc': None, 'ForeignExpensAcc': None, 'ExemptIncomeAcc': None, 'PriceDifferenceAcc': None, 'WarehouseCode': 'ONL', 'InStock': 0.0, 'Committed': 0.0, 'Ordered': 0.0, 'CountedQuantity': 0.0, 'WasCounted': 'tNO', 'UserSignature': 50, 'Counted': 0.0, 'ExpenseClearingAct': None, 'PurchaseCreditAcc': None, 'EUPurchaseCreditAcc': None, 'ForeignPurchaseCreditAcc': None, 'SalesCreditAcc': None, 'SalesCreditEUAcc': None, 'ExemptedCredits': None, 'SalesCreditForeignAcc': None, 'ExpenseOffsettingAccount': None, 'WipAccount': None, 'ExchangeRateDifferencesAcct': None, 'GoodsClearingAcct': None, 'NegativeInventoryAdjustmentAccount': None, 'CostInflationOffsetAccount': None, 'GLDecreaseAcct': None, 'GLIncreaseAcct': None, 'PAReturnAcct': None, 'PurchaseAcct': None, 'PurchaseOffsetAcct': None, 'ShippedGoodsAccount': None, 'StockInflationOffsetAccount': None, 'StockInflationAdjustAccount': None, 'VATInRevenueAccount': None, 'WipVarianceAccount': None, 'CostInflationAccount': None, 'WHIncomingCenvatAccount': None, 'WHOutgoingCenvatAccount': None, 'StockInTransitAccount': None, 'WipOffsetProfitAndLossAccount': None, 'InventoryOffsetProfitAndLossAccount': None, 'DefaultBin': None, 'DefaultBinEnforced': 'tNO', 'PurchaseBalanceAccount': None, 'ItemCode': 'ACC-0000001', 'ItemCycleCounts': []}, {'MinimalStock': 0.0, 'MaximalStock': 0.0, 'MinimalOrder': 0.0, 'StandardAveragePrice': 0.0, 'Locked': 'tNO', 'InventoryAccount': None, 'CostAccount': None, 'TransferAccount': None, 'RevenuesAccount': None, 'VarienceAccount': None, 'DecreasingAccount': None, 'IncreasingAccount': None, 'ReturningAccount': None, 'ExpensesAccount': None, 'EURevenuesAccount': None, 'EUExpensesAccount': None, 'ForeignRevenueAcc': None, 'ForeignExpensAcc': None, 'ExemptIncomeAcc': None, 'PriceDifferenceAcc': None, 'WarehouseCode': 'PHO', 'InStock': 0.0, 'Committed': 0.0, 'Ordered': 0.0, 'CountedQuantity': 0.0, 'WasCounted': 'tNO', 'UserSignature': 50, 'Counted': 0.0, 'ExpenseClearingAct': None, 'PurchaseCreditAcc': None, 'EUPurchaseCreditAcc': None, 'ForeignPurchaseCreditAcc': None, 'SalesCreditAcc': None, 'SalesCreditEUAcc': None, 'ExemptedCredits': None, 'SalesCreditForeignAcc': None, 'ExpenseOffsettingAccount': None, 'WipAccount': None, 'ExchangeRateDifferencesAcct': None, 'GoodsClearingAcct': None, 'NegativeInventoryAdjustmentAccount': None, 'CostInflationOffsetAccount': None, 'GLDecreaseAcct': None, 'GLIncreaseAcct': None, 'PAReturnAcct': None, 'PurchaseAcct': None, 'PurchaseOffsetAcct': None, 'ShippedGoodsAccount': None, 'StockInflationOffsetAccount': None, 'StockInflationAdjustAccount': None, 'VATInRevenueAccount': None, 'WipVarianceAccount': None, 'CostInflationAccount': None, 'WHIncomingCenvatAccount': None, 'WHOutgoingCenvatAccount': None, 'StockInTransitAccount': None, 'WipOffsetProfitAndLossAccount': None, 'InventoryOffsetProfitAndLossAccount': None, 'DefaultBin': None, 'DefaultBinEnforced': 'tNO', 'PurchaseBalanceAccount': None, 'ItemCode': 'ACC-0000001', 'ItemCycleCounts': []}, {'MinimalStock': 0.0, 'MaximalStock': 0.0, 'MinimalOrder': 0.0, 'StandardAveragePrice': 0.0, 'Locked': 'tNO', 'InventoryAccount': None, 'CostAccount': None, 'TransferAccount': None, 'RevenuesAccount': None, 'VarienceAccount': None, 'DecreasingAccount': None, 'IncreasingAccount': None, 'ReturningAccount': None, 'ExpensesAccount': None, 'EURevenuesAccount': None, 'EUExpensesAccount': None, 'ForeignRevenueAcc': None, 'ForeignExpensAcc': None, 'ExemptIncomeAcc': None, 'PriceDifferenceAcc': None, 'WarehouseCode': 'PHO-EX', 'InStock': 0.0, 'Committed': 0.0, 'Ordered': 0.0, 'CountedQuantity': 0.0, 'WasCounted': 'tNO', 'UserSignature': 1, 'Counted': 0.0, 'ExpenseClearingAct': None, 'PurchaseCreditAcc': None, 'EUPurchaseCreditAcc': None, 'ForeignPurchaseCreditAcc': None, 'SalesCreditAcc': None, 'SalesCreditEUAcc': None, 'ExemptedCredits': None, 'SalesCreditForeignAcc': None, 'ExpenseOffsettingAccount': None, 'WipAccount': None, 'ExchangeRateDifferencesAcct': None, 'GoodsClearingAcct': None, 'NegativeInventoryAdjustmentAccount': None, 'CostInflationOffsetAccount': None, 'GLDecreaseAcct': None, 'GLIncreaseAcct': None, 'PAReturnAcct': None, 'PurchaseAcct': None, 'PurchaseOffsetAcct': None, 'ShippedGoodsAccount': None, 'StockInflationOffsetAccount': None, 'StockInflationAdjustAccount': None, 'VATInRevenueAccount': None, 'WipVarianceAccount': None, 'CostInflationAccount': None, 'WHIncomingCenvatAccount': None, 'WHOutgoingCenvatAccount': None, 'StockInTransitAccount': None, 'WipOffsetProfitAndLossAccount': None, 'InventoryOffsetProfitAndLossAccount': None, 'DefaultBin': None, 'DefaultBinEnforced': 'tNO', 'PurchaseBalanceAccount': None, 'ItemCode': 'ACC-0000001', 'ItemCycleCounts': []}, {'MinimalStock': 0.0, 'MaximalStock': 0.0, 'MinimalOrder': 0.0, 'StandardAveragePrice': 0.0, 'Locked': 'tNO', 'InventoryAccount': None, 'CostAccount': None, 'TransferAccount': None, 'RevenuesAccount': None, 'VarienceAccount': None, 'DecreasingAccount': None, 'IncreasingAccount': None, 'ReturningAccount': None, 'ExpensesAccount': None, 'EURevenuesAccount': None, 'EUExpensesAccount': None, 'ForeignRevenueAcc': None, 'ForeignExpensAcc': None, 'ExemptIncomeAcc': None, 'PriceDifferenceAcc': None, 'WarehouseCode': 'PHO-IN', 'InStock': 0.0, 'Committed': 0.0, 'Ordered': 0.0, 'CountedQuantity': 0.0, 'WasCounted': 'tNO', 'UserSignature': 1, 'Counted': 0.0, 'ExpenseClearingAct': None, 'PurchaseCreditAcc': None, 'EUPurchaseCreditAcc': None, 'ForeignPurchaseCreditAcc': None, 'SalesCreditAcc': None, 'SalesCreditEUAcc': None, 'ExemptedCredits': None, 'SalesCreditForeignAcc': None, 'ExpenseOffsettingAccount': None, 'WipAccount': None, 'ExchangeRateDifferencesAcct': None, 'GoodsClearingAcct': None, 'NegativeInventoryAdjustmentAccount': None, 'CostInflationOffsetAccount': None, 'GLDecreaseAcct': None, 'GLIncreaseAcct': None, 'PAReturnAcct': None, 'PurchaseAcct': None, 'PurchaseOffsetAcct': None, 'ShippedGoodsAccount': None, 'StockInflationOffsetAccount': None, 'StockInflationAdjustAccount': None, 'VATInRevenueAccount': None, 'WipVarianceAccount': None, 'CostInflationAccount': None, 'WHIncomingCenvatAccount': None, 'WHOutgoingCenvatAccount': None, 'StockInTransitAccount': None, 'WipOffsetProfitAndLossAccount': None, 'InventoryOffsetProfitAndLossAccount': None, 'DefaultBin': None, 'DefaultBinEnforced': 'tNO', 'PurchaseBalanceAccount': None, 'ItemCode': 'ACC-0000001', 'ItemCycleCounts': []}, {'MinimalStock': 0.0, 'MaximalStock': 0.0, 'MinimalOrder': 0.0, 'StandardAveragePrice': 0.0, 'Locked': 'tNO', 'InventoryAccount': None, 'CostAccount': None, 'TransferAccount': None, 'RevenuesAccount': None, 'VarienceAccount': None, 'DecreasingAccount': None, 'IncreasingAccount': None, 'ReturningAccount': None, 'ExpensesAccount': None, 'EURevenuesAccount': None, 'EUExpensesAccount': None, 'ForeignRevenueAcc': None, 'ForeignExpensAcc': None, 'ExemptIncomeAcc': None, 'PriceDifferenceAcc': None, 'WarehouseCode': 'RTW', 'InStock': 0.0, 'Committed': 0.0, 'Ordered': 0.0, 'CountedQuantity': 0.0, 'WasCounted': 'tNO', 'UserSignature': 50, 'Counted': 0.0, 'ExpenseClearingAct': None, 'PurchaseCreditAcc': None, 'EUPurchaseCreditAcc': None, 'ForeignPurchaseCreditAcc': None, 'SalesCreditAcc': None, 'SalesCreditEUAcc': None, 'ExemptedCredits': None, 'SalesCreditForeignAcc': None, 'ExpenseOffsettingAccount': None, 'WipAccount': None, 'ExchangeRateDifferencesAcct': None, 'GoodsClearingAcct': None, 'NegativeInventoryAdjustmentAccount': None, 'CostInflationOffsetAccount': None, 'GLDecreaseAcct': None, 'GLIncreaseAcct': None, 'PAReturnAcct': None, 'PurchaseAcct': None, 'PurchaseOffsetAcct': None, 'ShippedGoodsAccount': None, 'StockInflationOffsetAccount': None, 'StockInflationAdjustAccount': None, 'VATInRevenueAccount': None, 'WipVarianceAccount': None, 'CostInflationAccount': None, 'WHIncomingCenvatAccount': None, 'WHOutgoingCenvatAccount': None, 'StockInTransitAccount': None, 'WipOffsetProfitAndLossAccount': None, 'InventoryOffsetProfitAndLossAccount': None, 'DefaultBin': None, 'DefaultBinEnforced': 'tNO', 'PurchaseBalanceAccount': None, 'ItemCode': 'ACC-0000001', 'ItemCycleCounts': []}, {'MinimalStock': 0.0, 'MaximalStock': 0.0, 'MinimalOrder': 0.0, 'StandardAveragePrice': 0.0, 'Locked': 'tNO', 'InventoryAccount': None, 'CostAccount': None, 'TransferAccount': None, 'RevenuesAccount': None, 'VarienceAccount': None, 'DecreasingAccount': None, 'IncreasingAccount': None, 'ReturningAccount': None, 'ExpensesAccount': None, 'EURevenuesAccount': None, 'EUExpensesAccount': None, 'ForeignRevenueAcc': None, 'ForeignExpensAcc': None, 'ExemptIncomeAcc': None, 'PriceDifferenceAcc': None, 'WarehouseCode': 'RTWH', 'InStock': 0.0, 'Committed': 0.0, 'Ordered': 0.0, 'CountedQuantity': 0.0, 'WasCounted': 'tNO', 'UserSignature': 1, 'Counted': 0.0, 'ExpenseClearingAct': None, 'PurchaseCreditAcc': None, 'EUPurchaseCreditAcc': None, 'ForeignPurchaseCreditAcc': None, 'SalesCreditAcc': None, 'SalesCreditEUAcc': None, 'ExemptedCredits': None, 'SalesCreditForeignAcc': None, 'ExpenseOffsettingAccount': None, 'WipAccount': None, 'ExchangeRateDifferencesAcct': None, 'GoodsClearingAcct': None, 'NegativeInventoryAdjustmentAccount': None, 'CostInflationOffsetAccount': None, 'GLDecreaseAcct': None, 'GLIncreaseAcct': None, 'PAReturnAcct': None, 'PurchaseAcct': None, 'PurchaseOffsetAcct': None, 'ShippedGoodsAccount': None, 'StockInflationOffsetAccount': None, 'StockInflationAdjustAccount': None, 'VATInRevenueAccount': None, 'WipVarianceAccount': None, 'CostInflationAccount': None, 'WHIncomingCenvatAccount': None, 'WHOutgoingCenvatAccount': None, 'StockInTransitAccount': None, 'WipOffsetProfitAndLossAccount': None, 'InventoryOffsetProfitAndLossAccount': None, 'DefaultBin': None, 'DefaultBinEnforced': 'tNO', 'PurchaseBalanceAccount': None, 'ItemCode': 'ACC-0000001', 'ItemCycleCounts': []}, {'MinimalStock': 0.0, 'MaximalStock': 0.0, 'MinimalOrder': 0.0, 'StandardAveragePrice': 0.0, 'Locked': 'tNO', 'InventoryAccount': None, 'CostAccount': None, 'TransferAccount': None, 'RevenuesAccount': None, 'VarienceAccount': None, 'DecreasingAccount': None, 'IncreasingAccount': None, 'ReturningAccount': None, 'ExpensesAccount': None, 'EURevenuesAccount': None, 'EUExpensesAccount': None, 'ForeignRevenueAcc': None, 'ForeignExpensAcc': None, 'ExemptIncomeAcc': None, 'PriceDifferenceAcc': None, 'WarehouseCode': 'SW', 'InStock': 0.0, 'Committed': 0.0, 'Ordered': 0.0, 'CountedQuantity': 0.0, 'WasCounted': 'tNO', 'UserSignature': 50, 'Counted': 0.0, 'ExpenseClearingAct': None, 'PurchaseCreditAcc': None, 'EUPurchaseCreditAcc': None, 'ForeignPurchaseCreditAcc': None, 'SalesCreditAcc': None, 'SalesCreditEUAcc': None, 'ExemptedCredits': None, 'SalesCreditForeignAcc': None, 'ExpenseOffsettingAccount': None, 'WipAccount': None, 'ExchangeRateDifferencesAcct': None, 'GoodsClearingAcct': None, 'NegativeInventoryAdjustmentAccount': None, 'CostInflationOffsetAccount': None, 'GLDecreaseAcct': None, 'GLIncreaseAcct': None, 'PAReturnAcct': None, 'PurchaseAcct': None, 'PurchaseOffsetAcct': None, 'ShippedGoodsAccount': None, 'StockInflationOffsetAccount': None, 'StockInflationAdjustAccount': None, 'VATInRevenueAccount': None, 'WipVarianceAccount': None, 'CostInflationAccount': None, 'WHIncomingCenvatAccount': None, 'WHOutgoingCenvatAccount': None, 'StockInTransitAccount': None, 'WipOffsetProfitAndLossAccount': None, 'InventoryOffsetProfitAndLossAccount': None, 'DefaultBin': None, 'DefaultBinEnforced': 'tNO', 'PurchaseBalanceAccount': None, 'ItemCode': 'ACC-0000001', 'ItemCycleCounts': []}, {'MinimalStock': 0.0, 'MaximalStock': 0.0, 'MinimalOrder': 0.0, 'StandardAveragePrice': 0.0, 'Locked': 'tNO', 'InventoryAccount': None, 'CostAccount': None, 'TransferAccount': None, 'RevenuesAccount': None, 'VarienceAccount': None, 'DecreasingAccount': None, 'IncreasingAccount': None, 'ReturningAccount': None, 'ExpensesAccount': None, 'EURevenuesAccount': None, 'EUExpensesAccount': None, 'ForeignRevenueAcc': None, 'ForeignExpensAcc': None, 'ExemptIncomeAcc': None, 'PriceDifferenceAcc': None, 'WarehouseCode': 'WLS', 'InStock': 0.0, 'Committed': 0.0, 'Ordered': 0.0, 'CountedQuantity': 0.0, 'WasCounted': 'tNO', 'UserSignature': 50, 'Counted': 0.0, 'ExpenseClearingAct': None, 'PurchaseCreditAcc': None, 'EUPurchaseCreditAcc': None, 'ForeignPurchaseCreditAcc': None, 'SalesCreditAcc': None, 'SalesCreditEUAcc': None, 'ExemptedCredits': None, 'SalesCreditForeignAcc': None, 'ExpenseOffsettingAccount': None, 'WipAccount': None, 'ExchangeRateDifferencesAcct': None, 'GoodsClearingAcct': None, 'NegativeInventoryAdjustmentAccount': None, 'CostInflationOffsetAccount': None, 'GLDecreaseAcct': None, 'GLIncreaseAcct': None, 'PAReturnAcct': None, 'PurchaseAcct': None, 'PurchaseOffsetAcct': None, 'ShippedGoodsAccount': None, 'StockInflationOffsetAccount': None, 'StockInflationAdjustAccount': None, 'VATInRevenueAccount': None, 'WipVarianceAccount': None, 'CostInflationAccount': None, 'WHIncomingCenvatAccount': None, 'WHOutgoingCenvatAccount': None, 'StockInTransitAccount': None, 'WipOffsetProfitAndLossAccount': None, 'InventoryOffsetProfitAndLossAccount': None, 'DefaultBin': None, 'DefaultBinEnforced': 'tNO', 'PurchaseBalanceAccount': None, 'ItemCode': 'ACC-0000001', 'ItemCycleCounts': []}, {'MinimalStock': 0.0, 'MaximalStock': 0.0, 'MinimalOrder': 0.0, 'StandardAveragePrice': 0.0, 'Locked': 'tNO', 'InventoryAccount': None, 'CostAccount': None, 'TransferAccount': None, 'RevenuesAccount': None, 'VarienceAccount': None, 'DecreasingAccount': None, 'IncreasingAccount': None, 'ReturningAccount': None, 'ExpensesAccount': None, 'EURevenuesAccount': None, 'EUExpensesAccount': None, 'ForeignRevenueAcc': None, 'ForeignExpensAcc': None, 'ExemptIncomeAcc': None, 'PriceDifferenceAcc': None, 'WarehouseCode': 'WW', 'InStock': 0.0, 'Committed': 0.0, 'Ordered': 0.0, 'CountedQuantity': 0.0, 'WasCounted': 'tNO', 'UserSignature': 50, 'Counted': 0.0, 'ExpenseClearingAct': None, 'PurchaseCreditAcc': None, 'EUPurchaseCreditAcc': None, 'ForeignPurchaseCreditAcc': None, 'SalesCreditAcc': None, 'SalesCreditEUAcc': None, 'ExemptedCredits': None, 'SalesCreditForeignAcc': None, 'ExpenseOffsettingAccount': None, 'WipAccount': None, 'ExchangeRateDifferencesAcct': None, 'GoodsClearingAcct': None, 'NegativeInventoryAdjustmentAccount': None, 'CostInflationOffsetAccount': None, 'GLDecreaseAcct': None, 'GLIncreaseAcct': None, 'PAReturnAcct': None, 'PurchaseAcct': None, 'PurchaseOffsetAcct': None, 'ShippedGoodsAccount': None, 'StockInflationOffsetAccount': None, 'StockInflationAdjustAccount': None, 'VATInRevenueAccount': None, 'WipVarianceAccount': None, 'CostInflationAccount': None, 'WHIncomingCenvatAccount': None, 'WHOutgoingCenvatAccount': None, 'StockInTransitAccount': None, 'WipOffsetProfitAndLossAccount': None, 'InventoryOffsetProfitAndLossAccount': None, 'DefaultBin': None, 'DefaultBinEnforced': 'tNO', 'PurchaseBalanceAccount': None, 'ItemCode': 'ACC-0000001', 'ItemCycleCounts': []}, {'MinimalStock': 0.0, 'MaximalStock': 0.0, 'MinimalOrder': 0.0, 'StandardAveragePrice': 0.0, 'Locked': 'tNO', 'InventoryAccount': None, 'CostAccount': None, 'TransferAccount': None, 'RevenuesAccount': None, 'VarienceAccount': None, 'DecreasingAccount': None, 'IncreasingAccount': None, 'ReturningAccount': None, 'ExpensesAccount': None, 'EURevenuesAccount': None, 'EUExpensesAccount': None, 'ForeignRevenueAcc': None, 'ForeignExpensAcc': None, 'ExemptIncomeAcc': None, 'PriceDifferenceAcc': None, 'WarehouseCode': 'WW-CON', 'InStock': 0.0, 'Committed': 0.0, 'Ordered': 0.0, 'CountedQuantity': 0.0, 'WasCounted': 'tNO', 'UserSignature': 50, 'Counted': 0.0, 'ExpenseClearingAct': None, 'PurchaseCreditAcc': None, 'EUPurchaseCreditAcc': None, 'ForeignPurchaseCreditAcc': None, 'SalesCreditAcc': None, 'SalesCreditEUAcc': None, 'ExemptedCredits': None, 'SalesCreditForeignAcc': None, 'ExpenseOffsettingAccount': None, 'WipAccount': None, 'ExchangeRateDifferencesAcct': None, 'GoodsClearingAcct': None, 'NegativeInventoryAdjustmentAccount': None, 'CostInflationOffsetAccount': None, 'GLDecreaseAcct': None, 'GLIncreaseAcct': None, 'PAReturnAcct': None, 'PurchaseAcct': None, 'PurchaseOffsetAcct': None, 'ShippedGoodsAccount': None, 'StockInflationOffsetAccount': None, 'StockInflationAdjustAccount': None, 'VATInRevenueAccount': None, 'WipVarianceAccount': None, 'CostInflationAccount': None, 'WHIncomingCenvatAccount': None, 'WHOutgoingCenvatAccount': None, 'StockInTransitAccount': None, 'WipOffsetProfitAndLossAccount': None, 'InventoryOffsetProfitAndLossAccount': None, 'DefaultBin': None, 'DefaultBinEnforced': 'tNO', 'PurchaseBalanceAccount': None, 'ItemCode': 'ACC-0000001', 'ItemCycleCounts': []}, {'MinimalStock': 0.0, 'MaximalStock': 0.0, 'MinimalOrder': 0.0, 'StandardAveragePrice': 0.0, 'Locked': 'tNO', 'InventoryAccount': None, 'CostAccount': None, 'TransferAccount': None, 'RevenuesAccount': None, 'VarienceAccount': None, 'DecreasingAccount': None, 'IncreasingAccount': None, 'ReturningAccount': None, 'ExpensesAccount': None, 'EURevenuesAccount': None, 'EUExpensesAccount': None, 'ForeignRevenueAcc': None, 'ForeignExpensAcc': None, 'ExemptIncomeAcc': None, 'PriceDifferenceAcc': None, 'WarehouseCode': 'WW-DAM', 'InStock': 0.0, 'Committed': 0.0, 'Ordered': 0.0, 'CountedQuantity': 0.0, 'WasCounted': 'tNO', 'UserSignature': 50, 'Counted': 0.0, 'ExpenseClearingAct': None, 'PurchaseCreditAcc': None, 'EUPurchaseCreditAcc': None, 'ForeignPurchaseCreditAcc': None, 'SalesCreditAcc': None, 'SalesCreditEUAcc': None, 'ExemptedCredits': None, 'SalesCreditForeignAcc': None, 'ExpenseOffsettingAccount': None, 'WipAccount': None, 'ExchangeRateDifferencesAcct': None, 'GoodsClearingAcct': None, 'NegativeInventoryAdjustmentAccount': None, 'CostInflationOffsetAccount': None, 'GLDecreaseAcct': None, 'GLIncreaseAcct': None, 'PAReturnAcct': None, 'PurchaseAcct': None, 'PurchaseOffsetAcct': None, 'ShippedGoodsAccount': None, 'StockInflationOffsetAccount': None, 'StockInflationAdjustAccount': None, 'VATInRevenueAccount': None, 'WipVarianceAccount': None, 'CostInflationAccount': None, 'WHIncomingCenvatAccount': None, 'WHOutgoingCenvatAccount': None, 'StockInTransitAccount': None, 'WipOffsetProfitAndLossAccount': None, 'InventoryOffsetProfitAndLossAccount': None, 'DefaultBin': None, 'DefaultBinEnforced': 'tNO', 'PurchaseBalanceAccount': None, 'ItemCode': 'ACC-0000001', 'ItemCycleCounts': []}, {'MinimalStock': 0.0, 'MaximalStock': 0.0, 'MinimalOrder': 0.0, 'StandardAveragePrice': 0.0, 'Locked': 'tNO', 'InventoryAccount': None, 'CostAccount': None, 'TransferAccount': None, 'RevenuesAccount': None, 'VarienceAccount': None, 'DecreasingAccount': None, 'IncreasingAccount': None, 'ReturningAccount': None, 'ExpensesAccount': None, 'EURevenuesAccount': None, 'EUExpensesAccount': None, 'ForeignRevenueAcc': None, 'ForeignExpensAcc': None, 'ExemptIncomeAcc': None, 'PriceDifferenceAcc': None, 'WarehouseCode': 'WW-REP', 'InStock': 0.0, 'Committed': 0.0, 'Ordered': 0.0, 'CountedQuantity': 0.0, 'WasCounted': 'tNO', 'UserSignature': 50, 'Counted': 0.0, 'ExpenseClearingAct': None, 'PurchaseCreditAcc': None, 'EUPurchaseCreditAcc': None, 'ForeignPurchaseCreditAcc': None, 'SalesCreditAcc': None, 'SalesCreditEUAcc': None, 'ExemptedCredits': None, 'SalesCreditForeignAcc': None, 'ExpenseOffsettingAccount': None, 'WipAccount': None, 'ExchangeRateDifferencesAcct': None, 'GoodsClearingAcct': None, 'NegativeInventoryAdjustmentAccount': None, 'CostInflationOffsetAccount': None, 'GLDecreaseAcct': None, 'GLIncreaseAcct': None, 'PAReturnAcct': None, 'PurchaseAcct': None, 'PurchaseOffsetAcct': None, 'ShippedGoodsAccount': None, 'StockInflationOffsetAccount': None, 'StockInflationAdjustAccount': None, 'VATInRevenueAccount': None, 'WipVarianceAccount': None, 'CostInflationAccount': None, 'WHIncomingCenvatAccount': None, 'WHOutgoingCenvatAccount': None, 'StockInTransitAccount': None, 'WipOffsetProfitAndLossAccount': None, 'InventoryOffsetProfitAndLossAccount': None, 'DefaultBin': None, 'DefaultBinEnforced': 'tNO', 'PurchaseBalanceAccount': None, 'ItemCode': 'ACC-0000001', 'ItemCycleCounts': []}, {'MinimalStock': 0.0, 'MaximalStock': 0.0, 'MinimalOrder': 0.0, 'StandardAveragePrice': 0.0, 'Locked': 'tNO', 'InventoryAccount': None, 'CostAccount': None, 'TransferAccount': None, 'RevenuesAccount': None, 'VarienceAccount': None, 'DecreasingAccount': None, 'IncreasingAccount': None, 'ReturningAccount': None, 'ExpensesAccount': None, 'EURevenuesAccount': None, 'EUExpensesAccount': None, 'ForeignRevenueAcc': None, 'ForeignExpensAcc': None, 'ExemptIncomeAcc': None, 'PriceDifferenceAcc': None, 'WarehouseCode': 'WW-SAM', 'InStock': 0.0, 'Committed': 0.0, 'Ordered': 0.0, 'CountedQuantity': 0.0, 'WasCounted': 'tNO', 'UserSignature': 50, 'Counted': 0.0, 'ExpenseClearingAct': None, 'PurchaseCreditAcc': None, 'EUPurchaseCreditAcc': None, 'ForeignPurchaseCreditAcc': None, 'SalesCreditAcc': None, 'SalesCreditEUAcc': None, 'ExemptedCredits': None, 'SalesCreditForeignAcc': None, 'ExpenseOffsettingAccount': None, 'WipAccount': None, 'ExchangeRateDifferencesAcct': None, 'GoodsClearingAcct': None, 'NegativeInventoryAdjustmentAccount': None, 'CostInflationOffsetAccount': None, 'GLDecreaseAcct': None, 'GLIncreaseAcct': None, 'PAReturnAcct': None, 'PurchaseAcct': None, 'PurchaseOffsetAcct': None, 'ShippedGoodsAccount': None, 'StockInflationOffsetAccount': None, 'StockInflationAdjustAccount': None, 'VATInRevenueAccount': None, 'WipVarianceAccount': None, 'CostInflationAccount': None, 'WHIncomingCenvatAccount': None, 'WHOutgoingCenvatAccount': None, 'StockInTransitAccount': None, 'WipOffsetProfitAndLossAccount': None, 'InventoryOffsetProfitAndLossAccount': None, 'DefaultBin': None, 'DefaultBinEnforced': 'tNO', 'PurchaseBalanceAccount': None, 'ItemCode': 'ACC-0000001', 'ItemCycleCounts': []}, {'MinimalStock': 0.0, 'MaximalStock': 0.0, 'MinimalOrder': 0.0, 'StandardAveragePrice': 0.0, 'Locked': 'tNO', 'InventoryAccount': None, 'CostAccount': None, 'TransferAccount': None, 'RevenuesAccount': None, 'VarienceAccount': None, 'DecreasingAccount': None, 'IncreasingAccount': None, 'ReturningAccount': None, 'ExpensesAccount': None, 'EURevenuesAccount': None, 'EUExpensesAccount': None, 'ForeignRevenueAcc': None, 'ForeignExpensAcc': None, 'ExemptIncomeAcc': None, 'PriceDifferenceAcc': None, 'WarehouseCode': 'WW-WIP', 'InStock': 0.0, 'Committed': 0.0, 'Ordered': 0.0, 'CountedQuantity': 0.0, 'WasCounted': 'tNO', 'UserSignature': 50, 'Counted': 0.0, 'ExpenseClearingAct': None, 'PurchaseCreditAcc': None, 'EUPurchaseCreditAcc': None, 'ForeignPurchaseCreditAcc': None, 'SalesCreditAcc': None, 'SalesCreditEUAcc': None, 'ExemptedCredits': None, 'SalesCreditForeignAcc': None, 'ExpenseOffsettingAccount': None, 'WipAccount': None, 'ExchangeRateDifferencesAcct': None, 'GoodsClearingAcct': None, 'NegativeInventoryAdjustmentAccount': None, 'CostInflationOffsetAccount': None, 'GLDecreaseAcct': None, 'GLIncreaseAcct': None, 'PAReturnAcct': None, 'PurchaseAcct': None, 'PurchaseOffsetAcct': None, 'ShippedGoodsAccount': None, 'StockInflationOffsetAccount': None, 'StockInflationAdjustAccount': None, 'VATInRevenueAccount': None, 'WipVarianceAccount': None, 'CostInflationAccount': None, 'WHIncomingCenvatAccount': None, 'WHOutgoingCenvatAccount': None, 'StockInTransitAccount': None, 'WipOffsetProfitAndLossAccount': None, 'InventoryOffsetProfitAndLossAccount': None, 'DefaultBin': None, 'DefaultBinEnforced': 'tNO', 'PurchaseBalanceAccount': None, 'ItemCode': 'ACC-0000001', 'ItemCycleCounts': []}, {'MinimalStock': 0.0, 'MaximalStock': 0.0, 'MinimalOrder': 0.0, 'StandardAveragePrice': 0.0, 'Locked': 'tNO', 'InventoryAccount': None, 'CostAccount': None, 'TransferAccount': None, 'RevenuesAccount': None, 'VarienceAccount': None, 'DecreasingAccount': None, 'IncreasingAccount': None, 'ReturningAccount': None, 'ExpensesAccount': None, 'EURevenuesAccount': None, 'EUExpensesAccount': None, 'ForeignRevenueAcc': None, 'ForeignExpensAcc': None, 'ExemptIncomeAcc': None, 'PriceDifferenceAcc': None, 'WarehouseCode': 'ZW', 'InStock': 0.0, 'Committed': 0.0, 'Ordered': 0.0, 'CountedQuantity': 0.0, 'WasCounted': 'tNO', 'UserSignature': 50, 'Counted': 0.0, 'ExpenseClearingAct': None, 'PurchaseCreditAcc': None, 'EUPurchaseCreditAcc': None, 'ForeignPurchaseCreditAcc': None, 'SalesCreditAcc': None, 'SalesCreditEUAcc': None, 'ExemptedCredits': None, 'SalesCreditForeignAcc': None, 'ExpenseOffsettingAccount': None, 'WipAccount': None, 'ExchangeRateDifferencesAcct': None, 'GoodsClearingAcct': None, 'NegativeInventoryAdjustmentAccount': None, 'CostInflationOffsetAccount': None, 'GLDecreaseAcct': None, 'GLIncreaseAcct': None, 'PAReturnAcct': None, 'PurchaseAcct': None, 'PurchaseOffsetAcct': None, 'ShippedGoodsAccount': None, 'StockInflationOffsetAccount': None, 'StockInflationAdjustAccount': None, 'VATInRevenueAccount': None, 'WipVarianceAccount': None, 'CostInflationAccount': None, 'WHIncomingCenvatAccount': None, 'WHOutgoingCenvatAccount': None, 'StockInTransitAccount': None, 'WipOffsetProfitAndLossAccount': None, 'InventoryOffsetProfitAndLossAccount': None, 'DefaultBin': None, 'DefaultBinEnforced': 'tNO', 'PurchaseBalanceAccount': None, 'ItemCode': 'ACC-0000001', 'ItemCycleCounts': []}], 'ItemPreferredVendors': [], 'ItemLocalizationInfos': [], 'ItemProjects': [], 'ItemDistributionRules': [], 'ItemAttributeGroups': [], 'ItemDepreciationParameters': [], 'ItemPeriodControls': [], 'ItemUnitOfMeasurementCollection': [{'UoMType': 'iutInventory', 'UoMEntry': 1, 'DefaultBarcode': None, 'DefaultPackage': None, 'Length1': 0.0, 'Length1Unit': None, 'Length2': 0.0, 'Length2Unit': None, 'Width1': 0.0, 'Width1Unit': None, 'Width2': 0.0, 'Width2Unit': None, 'Height1': 0.0, 'Height1Unit': None, 'Height2': 0.0, 'Height2Unit': None, 'Volume': 0.0, 'VolumeUnit': None, 'Weight1': 0.0, 'Weight1Unit': None, 'Weight2': 0.0, 'Weight2Unit': None, 'ItemUoMPackageCollection': []}, {'UoMType': 'iutPurchasing', 'UoMEntry': 1, 'DefaultBarcode': None, 'DefaultPackage': None, 'Length1': 0.0, 'Length1Unit': None, 'Length2': 0.0, 'Length2Unit': None, 'Width1': 0.0, 'Width1Unit': None, 'Width2': 0.0, 'Width2Unit': None, 'Height1': 0.0, 'Height1Unit': None, 'Height2': 0.0, 'Height2Unit': None, 'Volume': 0.0, 'VolumeUnit': 2, 'Weight1': 0.0, 'Weight1Unit': None, 'Weight2': 0.0, 'Weight2Unit': None, 'ItemUoMPackageCollection': []}, {'UoMType': 'iutPurchasing', 'UoMEntry': 8, 'DefaultBarcode': None, 'DefaultPackage': None, 'Length1': 0.0, 'Length1Unit': None, 'Length2': 0.0, 'Length2Unit': None, 'Width1': 0.0, 'Width1Unit': None, 'Width2': 0.0, 'Width2Unit': None, 'Height1': 0.0, 'Height1Unit': None, 'Height2': 0.0, 'Height2Unit': None, 'Volume': 0.0, 'VolumeUnit': 4, 'Weight1': 0.0, 'Weight1Unit': None, 'Weight2': 0.0, 'Weight2Unit': None, 'ItemUoMPackageCollection': []}, {'UoMType': 'iutSales', 'UoMEntry': 1, 'DefaultBarcode': None, 'DefaultPackage': None, 'Length1': 0.0, 'Length1Unit': None, 'Length2': 0.0, 'Length2Unit': None, 'Width1': 0.0, 'Width1Unit': None, 'Width2': 0.0, 'Width2Unit': None, 'Height1': 0.0, 'Height1Unit': None, 'Height2': 0.0, 'Height2Unit': None, 'Volume': 0.0, 'VolumeUnit': 2, 'Weight1': 0.0, 'Weight1Unit': None, 'Weight2': 0.0, 'Weight2Unit': None, 'ItemUoMPackageCollection': []}, {'UoMType': 'iutSales', 'UoMEntry': 8, 'DefaultBarcode': None, 'DefaultPackage': None, 'Length1': 0.0, 'Length1Unit': None, 'Length2': 0.0, 'Length2Unit': None, 'Width1': 0.0, 'Width1Unit': None, 'Width2': 0.0, 'Width2Unit': None, 'Height1': 0.0, 'Height1Unit': None, 'Height2': 0.0, 'Height2Unit': None, 'Volume': 0.0, 'VolumeUnit': 4, 'Weight1': 0.0, 'Weight1Unit': None, 'Weight2': 0.0, 'Weight2Unit': None, 'ItemUoMPackageCollection': []}], 'ItemBarCodeCollection': [], 'ItemIntrastatExtension': {'ItemCode': 'ACC-0000001', 'CommodityCode': None, 'SupplementaryUnit': None, 'FactorOfSupplementaryUnit': 0.0, 'ImportRegionState': 0, 'ExportRegionState': 0, 'ImportNatureOfTransaction': None, 'ExportNatureOfTransaction': None, 'ImportStatisticalProcedure': None, 'ExportStatisticalProcedure': None, 'CountryOfOrigin': None, 'ServiceCode': None, 'Type': 'dDocument_Items', 'ServiceSupplyMethod': 'ssmImmediate', 'ServicePaymentMethod': 'spmOther', 'ImportRegionCountry': 'GB', 'ExportRegionCountry': 'GB', 'UseWeightInCalculation': 'tYES', 'IntrastatRelevant': 'tNO', 'StatisticalCode': None}}, {'ItemCode': 'ACC-0000002', 'ItemName': 'Square With 2 Slits 10*10cm', 'ForeignName': None, 'ItemsGroupCode': 110, 'CustomsGroupCode': -1, 'SalesVATGroup': 'X0', 'BarCode': None, 'VatLiable': 'tYES', 'PurchaseItem': 'tYES', 'SalesItem': 'tNO', 'InventoryItem': 'tYES', 'IncomeAccount': None, 'ExemptIncomeAccount': None, 'ExpanseAccount': None, 'Mainsupplier': None, 'SupplierCatalogNo': None, 'DesiredInventory': 0.0, 'MinInventory': 0.0, 'Picture': None, 'User_Text': None, 'SerialNum': None, 'CommissionPercent': 0.0, 'CommissionSum': 0.0, 'CommissionGroup': 0, 'TreeType': 'iNotATree', 'AssetItem': 'tNO', 'DataExportCode': None, 'Manufacturer': -1, 'QuantityOnStock': 10.0, 'QuantityOrderedFromVendors': 0.0, 'QuantityOrderedByCustomers': 0.0, 'ManageSerialNumbers': 'tNO', 'ManageBatchNumbers': 'tNO', 'Valid': 'tYES', 'ValidFrom': None, 'ValidTo': None, 'ValidRemarks': None, 'Frozen': 'tNO', 'FrozenFrom': None, 'FrozenTo': None, 'FrozenRemarks': None, 'SalesUnit': None, 'SalesItemsPerUnit': 1.0, 'SalesPackagingUnit': None, 'SalesQtyPerPackUnit': 1.0, 'SalesUnitLength': None, 'SalesLengthUnit': None, 'SalesUnitWidth': None, 'SalesWidthUnit': None, 'SalesUnitHeight': None, 'SalesHeightUnit': None, 'SalesUnitVolume': 0.0, 'SalesVolumeUnit': 4, 'SalesUnitWeight': None, 'SalesWeightUnit': None, 'PurchaseUnit': None, 'PurchaseItemsPerUnit': 1.0, 'PurchasePackagingUnit': None, 'PurchaseQtyPerPackUnit': 1.0, 'PurchaseUnitLength': None, 'PurchaseLengthUnit': None, 'PurchaseUnitWidth': None, 'PurchaseWidthUnit': None, 'PurchaseUnitHeight': None, 'PurchaseHeightUnit': None, 'PurchaseUnitVolume': 0.0, 'PurchaseVolumeUnit': 4, 'PurchaseUnitWeight': None, 'PurchaseWeightUnit': None, 'PurchaseVATGroup': 'X1', 'SalesFactor1': 1.0, 'SalesFactor2': 1.0, 'SalesFactor3': 1.0, 'SalesFactor4': 1.0, 'PurchaseFactor1': 1.0, 'PurchaseFactor2': 1.0, 'PurchaseFactor3': 1.0, 'PurchaseFactor4': 1.0, 'MovingAveragePrice': 0.0, 'ForeignRevenuesAccount': None, 'ECRevenuesAccount': None, 'ForeignExpensesAccount': None, 'ECExpensesAccount': None, 'AvgStdPrice': 0.0, 'DefaultWarehouse': None, 'ShipType': None, 'GLMethod': 'glm_ItemClass', 'TaxType': 'tt_Yes', 'MaxInventory': 0.0, 'ManageStockByWarehouse': 'tNO', 'PurchaseHeightUnit1': None, 'PurchaseUnitHeight1': None, 'PurchaseLengthUnit1': None, 'PurchaseUnitLength1': None, 'PurchaseWeightUnit1': None, 'PurchaseUnitWeight1': None, 'PurchaseWidthUnit1': None, 'PurchaseUnitWidth1': None, 'SalesHeightUnit1': None, 'SalesUnitHeight1': None, 'SalesLengthUnit1': None, 'SalesUnitLength1': None, 'SalesWeightUnit1': None, 'SalesUnitWeight1': None, 'SalesWidthUnit1': None, 'SalesUnitWidth1': None, 'ForceSelectionOfSerialNumber': 'tYES', 'ManageSerialNumbersOnReleaseOnly': 'tNO', 'WTLiable': 'tNO', 'CostAccountingMethod': 'bis_MovingAverage', 'SWW': None, 'WarrantyTemplate': '', 'IndirectTax': 'tNO', 'ArTaxCode': None, 'ApTaxCode': None, 'BaseUnitName': None, 'ItemCountryOrg': None, 'IssueMethod': 'im_Backflush', 'SRIAndBatchManageMethod': 'bomm_OnEveryTransaction', 'IsPhantom': 'tNO', 'InventoryUOM': 'Piece', 'PlanningSystem': 'bop_None', 'ProcurementMethod': 'bom_Buy', 'ComponentWarehouse': 'bomcw_BOM', 'OrderIntervals': None, 'OrderMultiple': 0.0, 'LeadTime': None, 'MinOrderQuantity': 0.0, 'ItemType': 'itItems', 'ItemClass': 'itcMaterial', 'OutgoingServiceCode': -1, 'IncomingServiceCode': -1, 'ServiceGroup': -1, 'NCMCode': -1, 'MaterialType': 'mt_FinishedGoods', 'MaterialGroup': -1, 'ProductSource': '', 'Properties1': 'tNO', 'Properties2': 'tNO', 'Properties3': 'tNO', 'Properties4': 'tNO', 'Properties5': 'tNO', 'Properties6': 'tNO', 'Properties7': 'tNO', 'Properties8': 'tNO', 'Properties9': 'tNO', 'Properties10': 'tNO', 'Properties11': 'tNO', 'Properties12': 'tNO', 'Properties13': 'tNO', 'Properties14': 'tNO', 'Properties15': 'tNO', 'Properties16': 'tNO', 'Properties17': 'tNO', 'Properties18': 'tNO', 'Properties19': 'tNO', 'Properties20': 'tNO', 'Properties21': 'tNO', 'Properties22': 'tNO', 'Properties23': 'tNO', 'Properties24': 'tNO', 'Properties25': 'tNO', 'Properties26': 'tNO', 'Properties27': 'tNO', 'Properties28': 'tNO', 'Properties29': 'tNO', 'Properties30': 'tNO', 'Properties31': 'tNO', 'Properties32': 'tNO', 'Properties33': 'tNO', 'Properties34': 'tNO', 'Properties35': 'tNO', 'Properties36': 'tNO', 'Properties37': 'tNO', 'Properties38': 'tNO', 'Properties39': 'tNO', 'Properties40': 'tNO', 'Properties41': 'tNO', 'Properties42': 'tNO', 'Properties43': 'tNO', 'Properties44': 'tNO', 'Properties45': 'tNO', 'Properties46': 'tNO', 'Properties47': 'tNO', 'Properties48': 'tNO', 'Properties49': 'tNO', 'Properties50': 'tNO', 'Properties51': 'tNO', 'Properties52': 'tNO', 'Properties53': 'tNO', 'Properties54': 'tNO', 'Properties55': 'tNO', 'Properties56': 'tNO', 'Properties57': 'tNO', 'Properties58': 'tNO', 'Properties59': 'tNO', 'Properties60': 'tNO', 'Properties61': 'tNO', 'Properties62': 'tNO', 'Properties63': 'tNO', 'Properties64': 'tNO', 'AutoCreateSerialNumbersOnRelease': 'tNO', 'DNFEntry': -1, 'GTSItemSpec': None, 'GTSItemTaxCategory': None, 'FuelID': None, 'BeverageTableCode': '', 'BeverageGroupCode': '', 'BeverageCommercialBrandCode': None, 'Series': 119, 'ToleranceDays': None, 'TypeOfAdvancedRules': 'toarGeneral', 'IssuePrimarilyBy': 'ipbBinLocations', 'NoDiscounts': 'tNO', 'AssetClass': '', 'AssetGroup': '', 'InventoryNumber': '', 'Technician': None, 'Employee': None, 'Location': None, 'AssetStatus': 'New', 'CapitalizationDate': None, 'StatisticalAsset': 'tNO', 'Cession': 'tNO', 'DeactivateAfterUsefulLife': 'tNO', 'ManageByQuantity': 'tNO', 'UoMGroupEntry': 1, 'InventoryUoMEntry': 1, 'DefaultSalesUoMEntry': None, 'DefaultPurchasingUoMEntry': None, 'DepreciationGroup': None, 'AssetSerialNumber': '', 'InventoryWeight': None, 'InventoryWeightUnit': None, 'InventoryWeight1': None, 'InventoryWeightUnit1': None, 'DefaultCountingUnit': 'Piece', 'CountingItemsPerUnit': 1.0, 'DefaultCountingUoMEntry': 1, 'Excisable': 'tNO', 'ChapterID': -1, 'ScsCode': None, 'SpProdType': None, 'ProdStdCost': 0.0, 'InCostRollup': 'tYES', 'VirtualAssetItem': 'tNO', 'EnforceAssetSerialNumbers': 'tNO', 'AttachmentEntry': None, 'LinkedResource': None, 'UpdateDate': '2025-01-27', 'UpdateTime': '11:24:02', 'GSTRelevnt': 'tNO', 'SACEntry': -1, 'GSTTaxCategory': 'gtc_Regular', 'ServiceCategoryEntry': -1, 'CapitalGoodsOnHoldPercent': 0.0, 'CapitalGoodsOnHoldLimit': 0.0, 'AssessableValue': 0.0, 'AssVal4WTR': 0.0, 'SOIExcisable': 'se_NotExcisable', 'TNVED': None, 'ImportedItem': 'tNO', 'PricingUnit': 1, 'CreateDate': '2025-01-26', 'CreateTime': '09:34:00', 'U_MfgH': None, 'U_Collection': None, 'U_OldCode': None, 'U_ItemsCat': None, 'U_NumberofSet': None, 'U_NileCode': None, 'U_TransferProductionLinkExclude': None, 'U_SBO_CodeType': 'GS1', 'U_SBO_EGSCode': None, 'U_ShopifyColor': None, 'U_SalesChannel': None, 'U_ShopifyItemIDLocal': None, 'U_ShopifyItemIDInternational': None, 'U_ParentCommercialName': None, 'ItemPrices': [{'PriceList': 1, 'Price': 0.0, 'Currency': None, 'AdditionalPrice1': 0.0, 'AdditionalCurrency1': None, 'AdditionalPrice2': 0.0, 'AdditionalCurrency2': None, 'BasePriceList': 1, 'Factor': 1.0, 'UoMPrices': []}, {'PriceList': 2, 'Price': 0.0, 'Currency': None, 'AdditionalPrice1': 0.0, 'AdditionalCurrency1': None, 'AdditionalPrice2': 0.0, 'AdditionalCurrency2': None, 'BasePriceList': 1, 'Factor': 0.4, 'UoMPrices': []}, {'PriceList': 3, 'Price': 0.0, 'Currency': None, 'AdditionalPrice1': 0.0, 'AdditionalCurrency1': None, 'AdditionalPrice2': 0.0, 'AdditionalCurrency2': None, 'BasePriceList': 3, 'Factor': 1.0, 'UoMPrices': []}, {'PriceList': 4, 'Price': 0.0, 'Currency': None, 'AdditionalPrice1': 0.0, 'AdditionalCurrency1': None, 'AdditionalPrice2': 0.0, 'AdditionalCurrency2': None, 'BasePriceList': 4, 'Factor': 1.0, 'UoMPrices': []}, {'PriceList': 5, 'Price': 0.0, 'Currency': None, 'AdditionalPrice1': 0.0, 'AdditionalCurrency1': None, 'AdditionalPrice2': 0.0, 'AdditionalCurrency2': None, 'BasePriceList': 5, 'Factor': 1.0, 'UoMPrices': []}, {'PriceList': 6, 'Price': 0.0, 'Currency': None, 'AdditionalPrice1': 0.0, 'AdditionalCurrency1': None, 'AdditionalPrice2': 0.0, 'AdditionalCurrency2': None, 'BasePriceList': 6, 'Factor': 1.0, 'UoMPrices': []}, {'PriceList': 7, 'Price': 0.0, 'Currency': None, 'AdditionalPrice1': 0.0, 'AdditionalCurrency1': None, 'AdditionalPrice2': 0.0, 'AdditionalCurrency2': None, 'BasePriceList': 7, 'Factor': 1.0, 'UoMPrices': []}, {'PriceList': 8, 'Price': 0.0, 'Currency': None, 'AdditionalPrice1': 0.0, 'AdditionalCurrency1': None, 'AdditionalPrice2': 0.0, 'AdditionalCurrency2': None, 'BasePriceList': 8, 'Factor': 1.0, 'UoMPrices': []}, {'PriceList': 9, 'Price': 0.0, 'Currency': None, 'AdditionalPrice1': 0.0, 'AdditionalCurrency1': None, 'AdditionalPrice2': 0.0, 'AdditionalCurrency2': None, 'BasePriceList': 9, 'Factor': 1.0, 'UoMPrices': []}, {'PriceList': 10, 'Price': 0.0, 'Currency': None, 'AdditionalPrice1': 0.0, 'AdditionalCurrency1': None, 'AdditionalPrice2': 0.0, 'AdditionalCurrency2': None, 'BasePriceList': 10, 'Factor': 1.0, 'UoMPrices': []}], 'ItemWarehouseInfoCollection': [{'MinimalStock': 0.0, 'MaximalStock': 0.0, 'MinimalOrder': 0.0, 'StandardAveragePrice': 250.0, 'Locked': 'tNO', 'InventoryAccount': None, 'CostAccount': None, 'TransferAccount': None, 'RevenuesAccount': None, 'VarienceAccount': None, 'DecreasingAccount': None, 'IncreasingAccount': None, 'ReturningAccount': None, 'ExpensesAccount': None, 'EURevenuesAccount': None, 'EUExpensesAccount': None, 'ForeignRevenueAcc': None, 'ForeignExpensAcc': None, 'ExemptIncomeAcc': None, 'PriceDifferenceAcc': None, 'WarehouseCode': '5A', 'InStock': 7.0, 'Committed': 0.0, 'Ordered': 0.0, 'CountedQuantity': 0.0, 'WasCounted': 'tNO', 'UserSignature': 50, 'Counted': 0.0, 'ExpenseClearingAct': None, 'PurchaseCreditAcc': None, 'EUPurchaseCreditAcc': None, 'ForeignPurchaseCreditAcc': None, 'SalesCreditAcc': None, 'SalesCreditEUAcc': None, 'ExemptedCredits': None, 'SalesCreditForeignAcc': None, 'ExpenseOffsettingAccount': None, 'WipAccount': None, 'ExchangeRateDifferencesAcct': None, 'GoodsClearingAcct': None, 'NegativeInventoryAdjustmentAccount': None, 'CostInflationOffsetAccount': None, 'GLDecreaseAcct': None, 'GLIncreaseAcct': None, 'PAReturnAcct': None, 'PurchaseAcct': None, 'PurchaseOffsetAcct': None, 'ShippedGoodsAccount': None, 'StockInflationOffsetAccount': None, 'StockInflationAdjustAccount': None, 'VATInRevenueAccount': None, 'WipVarianceAccount': None, 'CostInflationAccount': None, 'WHIncomingCenvatAccount': None, 'WHOutgoingCenvatAccount': None, 'StockInTransitAccount': None, 'WipOffsetProfitAndLossAccount': None, 'InventoryOffsetProfitAndLossAccount': None, 'DefaultBin': None, 'DefaultBinEnforced': 'tNO', 'PurchaseBalanceAccount': None, 'ItemCode': 'ACC-0000002', 'ItemCycleCounts': []}, {'MinimalStock': 0.0, 'MaximalStock': 0.0, 'MinimalOrder': 0.0, 'StandardAveragePrice': 250.0, 'Locked': 'tNO', 'InventoryAccount': None, 'CostAccount': None, 'TransferAccount': None, 'RevenuesAccount': None, 'VarienceAccount': None, 'DecreasingAccount': None, 'IncreasingAccount': None, 'ReturningAccount': None, 'ExpensesAccount': None, 'EURevenuesAccount': None, 'EUExpensesAccount': None, 'ForeignRevenueAcc': None, 'ForeignExpensAcc': None, 'ExemptIncomeAcc': None, 'PriceDifferenceAcc': None, 'WarehouseCode': 'Arkan', 'InStock': 3.0, 'Committed': 0.0, 'Ordered': 0.0, 'CountedQuantity': 0.0, 'WasCounted': 'tNO', 'UserSignature': 50, 'Counted': 0.0, 'ExpenseClearingAct': None, 'PurchaseCreditAcc': None, 'EUPurchaseCreditAcc': None, 'ForeignPurchaseCreditAcc': None, 'SalesCreditAcc': None, 'SalesCreditEUAcc': None, 'ExemptedCredits': None, 'SalesCreditForeignAcc': None, 'ExpenseOffsettingAccount': None, 'WipAccount': None, 'ExchangeRateDifferencesAcct': None, 'GoodsClearingAcct': None, 'NegativeInventoryAdjustmentAccount': None, 'CostInflationOffsetAccount': None, 'GLDecreaseAcct': None, 'GLIncreaseAcct': None, 'PAReturnAcct': None, 'PurchaseAcct': None, 'PurchaseOffsetAcct': None, 'ShippedGoodsAccount': None, 'StockInflationOffsetAccount': None, 'StockInflationAdjustAccount': None, 'VATInRevenueAccount': None, 'WipVarianceAccount': None, 'CostInflationAccount': None, 'WHIncomingCenvatAccount': None, 'WHOutgoingCenvatAccount': None, 'StockInTransitAccount': None, 'WipOffsetProfitAndLossAccount': None, 'InventoryOffsetProfitAndLossAccount': None, 'DefaultBin': None, 'DefaultBinEnforced': 'tNO', 'PurchaseBalanceAccount': None, 'ItemCode': 'ACC-0000002', 'ItemCycleCounts': []}, {'MinimalStock': 0.0, 'MaximalStock': 0.0, 'MinimalOrder': 0.0, 'StandardAveragePrice': 0.0, 'Locked': 'tNO', 'InventoryAccount': None, 'CostAccount': None, 'TransferAccount': None, 'RevenuesAccount': None, 'VarienceAccount': None, 'DecreasingAccount': None, 'IncreasingAccount': None, 'ReturningAccount': None, 'ExpensesAccount': None, 'EURevenuesAccount': None, 'EUExpensesAccount': None, 'ForeignRevenueAcc': None, 'ForeignExpensAcc': None, 'ExemptIncomeAcc': None, 'PriceDifferenceAcc': None, 'WarehouseCode': 'DIP', 'InStock': 0.0, 'Committed': 0.0, 'Ordered': 0.0, 'CountedQuantity': 0.0, 'WasCounted': 'tNO', 'UserSignature': 50, 'Counted': 0.0, 'ExpenseClearingAct': None, 'PurchaseCreditAcc': None, 'EUPurchaseCreditAcc': None, 'ForeignPurchaseCreditAcc': None, 'SalesCreditAcc': None, 'SalesCreditEUAcc': None, 'ExemptedCredits': None, 'SalesCreditForeignAcc': None, 'ExpenseOffsettingAccount': None, 'WipAccount': None, 'ExchangeRateDifferencesAcct': None, 'GoodsClearingAcct': None, 'NegativeInventoryAdjustmentAccount': None, 'CostInflationOffsetAccount': None, 'GLDecreaseAcct': None, 'GLIncreaseAcct': None, 'PAReturnAcct': None, 'PurchaseAcct': None, 'PurchaseOffsetAcct': None, 'ShippedGoodsAccount': None, 'StockInflationOffsetAccount': None, 'StockInflationAdjustAccount': None, 'VATInRevenueAccount': None, 'WipVarianceAccount': None, 'CostInflationAccount': None, 'WHIncomingCenvatAccount': None, 'WHOutgoingCenvatAccount': None, 'StockInTransitAccount': None, 'WipOffsetProfitAndLossAccount': None, 'InventoryOffsetProfitAndLossAccount': None, 'DefaultBin': None, 'DefaultBinEnforced': 'tNO', 'PurchaseBalanceAccount': None, 'ItemCode': 'ACC-0000002', 'ItemCycleCounts': []}, {'MinimalStock': 0.0, 'MaximalStock': 0.0, 'MinimalOrder': 0.0, 'StandardAveragePrice': 250.0, 'Locked': 'tNO', 'InventoryAccount': None, 'CostAccount': None, 'TransferAccount': None, 'RevenuesAccount': None, 'VarienceAccount': None, 'DecreasingAccount': None, 'IncreasingAccount': None, 'ReturningAccount': None, 'ExpensesAccount': None, 'EURevenuesAccount': None, 'EUExpensesAccount': None, 'ForeignRevenueAcc': None, 'ForeignExpensAcc': None, 'ExemptIncomeAcc': None, 'PriceDifferenceAcc': None, 'WarehouseCode': 'INC', 'InStock': 0.0, 'Committed': 0.0, 'Ordered': 0.0, 'CountedQuantity': 0.0, 'WasCounted': 'tNO', 'UserSignature': 50, 'Counted': 0.0, 'ExpenseClearingAct': None, 'PurchaseCreditAcc': None, 'EUPurchaseCreditAcc': None, 'ForeignPurchaseCreditAcc': None, 'SalesCreditAcc': None, 'SalesCreditEUAcc': None, 'ExemptedCredits': None, 'SalesCreditForeignAcc': None, 'ExpenseOffsettingAccount': None, 'WipAccount': None, 'ExchangeRateDifferencesAcct': None, 'GoodsClearingAcct': None, 'NegativeInventoryAdjustmentAccount': None, 'CostInflationOffsetAccount': None, 'GLDecreaseAcct': None, 'GLIncreaseAcct': None, 'PAReturnAcct': None, 'PurchaseAcct': None, 'PurchaseOffsetAcct': None, 'ShippedGoodsAccount': None, 'StockInflationOffsetAccount': None, 'StockInflationAdjustAccount': None, 'VATInRevenueAccount': None, 'WipVarianceAccount': None, 'CostInflationAccount': None, 'WHIncomingCenvatAccount': None, 'WHOutgoingCenvatAccount': None, 'StockInTransitAccount': None, 'WipOffsetProfitAndLossAccount': None, 'InventoryOffsetProfitAndLossAccount': None, 'DefaultBin': None, 'DefaultBinEnforced': 'tNO', 'PurchaseBalanceAccount': None, 'ItemCode': 'ACC-0000002', 'ItemCycleCounts': []}, {'MinimalStock': 0.0, 'MaximalStock': 0.0, 'MinimalOrder': 0.0, 'StandardAveragePrice': 0.0, 'Locked': 'tNO', 'InventoryAccount': None, 'CostAccount': None, 'TransferAccount': None, 'RevenuesAccount': None, 'VarienceAccount': None, 'DecreasingAccount': None, 'IncreasingAccount': None, 'ReturningAccount': None, 'ExpensesAccount': None, 'EURevenuesAccount': None, 'EUExpensesAccount': None, 'ForeignRevenueAcc': None, 'ForeignExpensAcc': None, 'ExemptIncomeAcc': None, 'PriceDifferenceAcc': None, 'WarehouseCode': 'ONL', 'InStock': 0.0, 'Committed': 0.0, 'Ordered': 0.0, 'CountedQuantity': 0.0, 'WasCounted': 'tNO', 'UserSignature': 50, 'Counted': 0.0, 'ExpenseClearingAct': None, 'PurchaseCreditAcc': None, 'EUPurchaseCreditAcc': None, 'ForeignPurchaseCreditAcc': None, 'SalesCreditAcc': None, 'SalesCreditEUAcc': None, 'ExemptedCredits': None, 'SalesCreditForeignAcc': None, 'ExpenseOffsettingAccount': None, 'WipAccount': None, 'ExchangeRateDifferencesAcct': None, 'GoodsClearingAcct': None, 'NegativeInventoryAdjustmentAccount': None, 'CostInflationOffsetAccount': None, 'GLDecreaseAcct': None, 'GLIncreaseAcct': None, 'PAReturnAcct': None, 'PurchaseAcct': None, 'PurchaseOffsetAcct': None, 'ShippedGoodsAccount': None, 'StockInflationOffsetAccount': None, 'StockInflationAdjustAccount': None, 'VATInRevenueAccount': None, 'WipVarianceAccount': None, 'CostInflationAccount': None, 'WHIncomingCenvatAccount': None, 'WHOutgoingCenvatAccount': None, 'StockInTransitAccount': None, 'WipOffsetProfitAndLossAccount': None, 'InventoryOffsetProfitAndLossAccount': None, 'DefaultBin': None, 'DefaultBinEnforced': 'tNO', 'PurchaseBalanceAccount': None, 'ItemCode': 'ACC-0000002', 'ItemCycleCounts': []}, {'MinimalStock': 0.0, 'MaximalStock': 0.0, 'MinimalOrder': 0.0, 'StandardAveragePrice': 0.0, 'Locked': 'tNO', 'InventoryAccount': None, 'CostAccount': None, 'TransferAccount': None, 'RevenuesAccount': None, 'VarienceAccount': None, 'DecreasingAccount': None, 'IncreasingAccount': None, 'ReturningAccount': None, 'ExpensesAccount': None, 'EURevenuesAccount': None, 'EUExpensesAccount': None, 'ForeignRevenueAcc': None, 'ForeignExpensAcc': None, 'ExemptIncomeAcc': None, 'PriceDifferenceAcc': None, 'WarehouseCode': 'PHO', 'InStock': 0.0, 'Committed': 0.0, 'Ordered': 0.0, 'CountedQuantity': 0.0, 'WasCounted': 'tNO', 'UserSignature': 50, 'Counted': 0.0, 'ExpenseClearingAct': None, 'PurchaseCreditAcc': None, 'EUPurchaseCreditAcc': None, 'ForeignPurchaseCreditAcc': None, 'SalesCreditAcc': None, 'SalesCreditEUAcc': None, 'ExemptedCredits': None, 'SalesCreditForeignAcc': None, 'ExpenseOffsettingAccount': None, 'WipAccount': None, 'ExchangeRateDifferencesAcct': None, 'GoodsClearingAcct': None, 'NegativeInventoryAdjustmentAccount': None, 'CostInflationOffsetAccount': None, 'GLDecreaseAcct': None, 'GLIncreaseAcct': None, 'PAReturnAcct': None, 'PurchaseAcct': None, 'PurchaseOffsetAcct': None, 'ShippedGoodsAccount': None, 'StockInflationOffsetAccount': None, 'StockInflationAdjustAccount': None, 'VATInRevenueAccount': None, 'WipVarianceAccount': None, 'CostInflationAccount': None, 'WHIncomingCenvatAccount': None, 'WHOutgoingCenvatAccount': None, 'StockInTransitAccount': None, 'WipOffsetProfitAndLossAccount': None, 'InventoryOffsetProfitAndLossAccount': None, 'DefaultBin': None, 'DefaultBinEnforced': 'tNO', 'PurchaseBalanceAccount': None, 'ItemCode': 'ACC-0000002', 'ItemCycleCounts': []}, {'MinimalStock': 0.0, 'MaximalStock': 0.0, 'MinimalOrder': 0.0, 'StandardAveragePrice': 0.0, 'Locked': 'tNO', 'InventoryAccount': None, 'CostAccount': None, 'TransferAccount': None, 'RevenuesAccount': None, 'VarienceAccount': None, 'DecreasingAccount': None, 'IncreasingAccount': None, 'ReturningAccount': None, 'ExpensesAccount': None, 'EURevenuesAccount': None, 'EUExpensesAccount': None, 'ForeignRevenueAcc': None, 'ForeignExpensAcc': None, 'ExemptIncomeAcc': None, 'PriceDifferenceAcc': None, 'WarehouseCode': 'PHO-EX', 'InStock': 0.0, 'Committed': 0.0, 'Ordered': 0.0, 'CountedQuantity': 0.0, 'WasCounted': 'tNO', 'UserSignature': 1, 'Counted': 0.0, 'ExpenseClearingAct': None, 'PurchaseCreditAcc': None, 'EUPurchaseCreditAcc': None, 'ForeignPurchaseCreditAcc': None, 'SalesCreditAcc': None, 'SalesCreditEUAcc': None, 'ExemptedCredits': None, 'SalesCreditForeignAcc': None, 'ExpenseOffsettingAccount': None, 'WipAccount': None, 'ExchangeRateDifferencesAcct': None, 'GoodsClearingAcct': None, 'NegativeInventoryAdjustmentAccount': None, 'CostInflationOffsetAccount': None, 'GLDecreaseAcct': None, 'GLIncreaseAcct': None, 'PAReturnAcct': None, 'PurchaseAcct': None, 'PurchaseOffsetAcct': None, 'ShippedGoodsAccount': None, 'StockInflationOffsetAccount': None, 'StockInflationAdjustAccount': None, 'VATInRevenueAccount': None, 'WipVarianceAccount': None, 'CostInflationAccount': None, 'WHIncomingCenvatAccount': None, 'WHOutgoingCenvatAccount': None, 'StockInTransitAccount': None, 'WipOffsetProfitAndLossAccount': None, 'InventoryOffsetProfitAndLossAccount': None, 'DefaultBin': None, 'DefaultBinEnforced': 'tNO', 'PurchaseBalanceAccount': None, 'ItemCode': 'ACC-0000002', 'ItemCycleCounts': []}, {'MinimalStock': 0.0, 'MaximalStock': 0.0, 'MinimalOrder': 0.0, 'StandardAveragePrice': 0.0, 'Locked': 'tNO', 'InventoryAccount': None, 'CostAccount': None, 'TransferAccount': None, 'RevenuesAccount': None, 'VarienceAccount': None, 'DecreasingAccount': None, 'IncreasingAccount': None, 'ReturningAccount': None, 'ExpensesAccount': None, 'EURevenuesAccount': None, 'EUExpensesAccount': None, 'ForeignRevenueAcc': None, 'ForeignExpensAcc': None, 'ExemptIncomeAcc': None, 'PriceDifferenceAcc': None, 'WarehouseCode': 'PHO-IN', 'InStock': 0.0, 'Committed': 0.0, 'Ordered': 0.0, 'CountedQuantity': 0.0, 'WasCounted': 'tNO', 'UserSignature': 1, 'Counted': 0.0, 'ExpenseClearingAct': None, 'PurchaseCreditAcc': None, 'EUPurchaseCreditAcc': None, 'ForeignPurchaseCreditAcc': None, 'SalesCreditAcc': None, 'SalesCreditEUAcc': None, 'ExemptedCredits': None, 'SalesCreditForeignAcc': None, 'ExpenseOffsettingAccount': None, 'WipAccount': None, 'ExchangeRateDifferencesAcct': None, 'GoodsClearingAcct': None, 'NegativeInventoryAdjustmentAccount': None, 'CostInflationOffsetAccount': None, 'GLDecreaseAcct': None, 'GLIncreaseAcct': None, 'PAReturnAcct': None, 'PurchaseAcct': None, 'PurchaseOffsetAcct': None, 'ShippedGoodsAccount': None, 'StockInflationOffsetAccount': None, 'StockInflationAdjustAccount': None, 'VATInRevenueAccount': None, 'WipVarianceAccount': None, 'CostInflationAccount': None, 'WHIncomingCenvatAccount': None, 'WHOutgoingCenvatAccount': None, 'StockInTransitAccount': None, 'WipOffsetProfitAndLossAccount': None, 'InventoryOffsetProfitAndLossAccount': None, 'DefaultBin': None, 'DefaultBinEnforced': 'tNO', 'PurchaseBalanceAccount': None, 'ItemCode': 'ACC-0000002', 'ItemCycleCounts': []}, {'MinimalStock': 0.0, 'MaximalStock': 0.0, 'MinimalOrder': 0.0, 'StandardAveragePrice': 0.0, 'Locked': 'tNO', 'InventoryAccount': None, 'CostAccount': None, 'TransferAccount': None, 'RevenuesAccount': None, 'VarienceAccount': None, 'DecreasingAccount': None, 'IncreasingAccount': None, 'ReturningAccount': None, 'ExpensesAccount': None, 'EURevenuesAccount': None, 'EUExpensesAccount': None, 'ForeignRevenueAcc': None, 'ForeignExpensAcc': None, 'ExemptIncomeAcc': None, 'PriceDifferenceAcc': None, 'WarehouseCode': 'RTW', 'InStock': 0.0, 'Committed': 0.0, 'Ordered': 0.0, 'CountedQuantity': 0.0, 'WasCounted': 'tNO', 'UserSignature': 50, 'Counted': 0.0, 'ExpenseClearingAct': None, 'PurchaseCreditAcc': None, 'EUPurchaseCreditAcc': None, 'ForeignPurchaseCreditAcc': None, 'SalesCreditAcc': None, 'SalesCreditEUAcc': None, 'ExemptedCredits': None, 'SalesCreditForeignAcc': None, 'ExpenseOffsettingAccount': None, 'WipAccount': None, 'ExchangeRateDifferencesAcct': None, 'GoodsClearingAcct': None, 'NegativeInventoryAdjustmentAccount': None, 'CostInflationOffsetAccount': None, 'GLDecreaseAcct': None, 'GLIncreaseAcct': None, 'PAReturnAcct': None, 'PurchaseAcct': None, 'PurchaseOffsetAcct': None, 'ShippedGoodsAccount': None, 'StockInflationOffsetAccount': None, 'StockInflationAdjustAccount': None, 'VATInRevenueAccount': None, 'WipVarianceAccount': None, 'CostInflationAccount': None, 'WHIncomingCenvatAccount': None, 'WHOutgoingCenvatAccount': None, 'StockInTransitAccount': None, 'WipOffsetProfitAndLossAccount': None, 'InventoryOffsetProfitAndLossAccount': None, 'DefaultBin': None, 'DefaultBinEnforced': 'tNO', 'PurchaseBalanceAccount': None, 'ItemCode': 'ACC-0000002', 'ItemCycleCounts': []}, {'MinimalStock': 0.0, 'MaximalStock': 0.0, 'MinimalOrder': 0.0, 'StandardAveragePrice': 0.0, 'Locked': 'tNO', 'InventoryAccount': None, 'CostAccount': None, 'TransferAccount': None, 'RevenuesAccount': None, 'VarienceAccount': None, 'DecreasingAccount': None, 'IncreasingAccount': None, 'ReturningAccount': None, 'ExpensesAccount': None, 'EURevenuesAccount': None, 'EUExpensesAccount': None, 'ForeignRevenueAcc': None, 'ForeignExpensAcc': None, 'ExemptIncomeAcc': None, 'PriceDifferenceAcc': None, 'WarehouseCode': 'RTWH', 'InStock': 0.0, 'Committed': 0.0, 'Ordered': 0.0, 'CountedQuantity': 0.0, 'WasCounted': 'tNO', 'UserSignature': 1, 'Counted': 0.0, 'ExpenseClearingAct': None, 'PurchaseCreditAcc': None, 'EUPurchaseCreditAcc': None, 'ForeignPurchaseCreditAcc': None, 'SalesCreditAcc': None, 'SalesCreditEUAcc': None, 'ExemptedCredits': None, 'SalesCreditForeignAcc': None, 'ExpenseOffsettingAccount': None, 'WipAccount': None, 'ExchangeRateDifferencesAcct': None, 'GoodsClearingAcct': None, 'NegativeInventoryAdjustmentAccount': None, 'CostInflationOffsetAccount': None, 'GLDecreaseAcct': None, 'GLIncreaseAcct': None, 'PAReturnAcct': None, 'PurchaseAcct': None, 'PurchaseOffsetAcct': None, 'ShippedGoodsAccount': None, 'StockInflationOffsetAccount': None, 'StockInflationAdjustAccount': None, 'VATInRevenueAccount': None, 'WipVarianceAccount': None, 'CostInflationAccount': None, 'WHIncomingCenvatAccount': None, 'WHOutgoingCenvatAccount': None, 'StockInTransitAccount': None, 'WipOffsetProfitAndLossAccount': None, 'InventoryOffsetProfitAndLossAccount': None, 'DefaultBin': None, 'DefaultBinEnforced': 'tNO', 'PurchaseBalanceAccount': None, 'ItemCode': 'ACC-0000002', 'ItemCycleCounts': []}, {'MinimalStock': 0.0, 'MaximalStock': 0.0, 'MinimalOrder': 0.0, 'StandardAveragePrice': 0.0, 'Locked': 'tNO', 'InventoryAccount': None, 'CostAccount': None, 'TransferAccount': None, 'RevenuesAccount': None, 'VarienceAccount': None, 'DecreasingAccount': None, 'IncreasingAccount': None, 'ReturningAccount': None, 'ExpensesAccount': None, 'EURevenuesAccount': None, 'EUExpensesAccount': None, 'ForeignRevenueAcc': None, 'ForeignExpensAcc': None, 'ExemptIncomeAcc': None, 'PriceDifferenceAcc': None, 'WarehouseCode': 'SW', 'InStock': 0.0, 'Committed': 0.0, 'Ordered': 0.0, 'CountedQuantity': 0.0, 'WasCounted': 'tNO', 'UserSignature': 50, 'Counted': 0.0, 'ExpenseClearingAct': None, 'PurchaseCreditAcc': None, 'EUPurchaseCreditAcc': None, 'ForeignPurchaseCreditAcc': None, 'SalesCreditAcc': None, 'SalesCreditEUAcc': None, 'ExemptedCredits': None, 'SalesCreditForeignAcc': None, 'ExpenseOffsettingAccount': None, 'WipAccount': None, 'ExchangeRateDifferencesAcct': None, 'GoodsClearingAcct': None, 'NegativeInventoryAdjustmentAccount': None, 'CostInflationOffsetAccount': None, 'GLDecreaseAcct': None, 'GLIncreaseAcct': None, 'PAReturnAcct': None, 'PurchaseAcct': None, 'PurchaseOffsetAcct': None, 'ShippedGoodsAccount': None, 'StockInflationOffsetAccount': None, 'StockInflationAdjustAccount': None, 'VATInRevenueAccount': None, 'WipVarianceAccount': None, 'CostInflationAccount': None, 'WHIncomingCenvatAccount': None, 'WHOutgoingCenvatAccount': None, 'StockInTransitAccount': None, 'WipOffsetProfitAndLossAccount': None, 'InventoryOffsetProfitAndLossAccount': None, 'DefaultBin': None, 'DefaultBinEnforced': 'tNO', 'PurchaseBalanceAccount': None, 'ItemCode': 'ACC-0000002', 'ItemCycleCounts': []}, {'MinimalStock': 0.0, 'MaximalStock': 0.0, 'MinimalOrder': 0.0, 'StandardAveragePrice': 0.0, 'Locked': 'tNO', 'InventoryAccount': None, 'CostAccount': None, 'TransferAccount': None, 'RevenuesAccount': None, 'VarienceAccount': None, 'DecreasingAccount': None, 'IncreasingAccount': None, 'ReturningAccount': None, 'ExpensesAccount': None, 'EURevenuesAccount': None, 'EUExpensesAccount': None, 'ForeignRevenueAcc': None, 'ForeignExpensAcc': None, 'ExemptIncomeAcc': None, 'PriceDifferenceAcc': None, 'WarehouseCode': 'WLS', 'InStock': 0.0, 'Committed': 0.0, 'Ordered': 0.0, 'CountedQuantity': 0.0, 'WasCounted': 'tNO', 'UserSignature': 50, 'Counted': 0.0, 'ExpenseClearingAct': None, 'PurchaseCreditAcc': None, 'EUPurchaseCreditAcc': None, 'ForeignPurchaseCreditAcc': None, 'SalesCreditAcc': None, 'SalesCreditEUAcc': None, 'ExemptedCredits': None, 'SalesCreditForeignAcc': None, 'ExpenseOffsettingAccount': None, 'WipAccount': None, 'ExchangeRateDifferencesAcct': None, 'GoodsClearingAcct': None, 'NegativeInventoryAdjustmentAccount': None, 'CostInflationOffsetAccount': None, 'GLDecreaseAcct': None, 'GLIncreaseAcct': None, 'PAReturnAcct': None, 'PurchaseAcct': None, 'PurchaseOffsetAcct': None, 'ShippedGoodsAccount': None, 'StockInflationOffsetAccount': None, 'StockInflationAdjustAccount': None, 'VATInRevenueAccount': None, 'WipVarianceAccount': None, 'CostInflationAccount': None, 'WHIncomingCenvatAccount': None, 'WHOutgoingCenvatAccount': None, 'StockInTransitAccount': None, 'WipOffsetProfitAndLossAccount': None, 'InventoryOffsetProfitAndLossAccount': None, 'DefaultBin': None, 'DefaultBinEnforced': 'tNO', 'PurchaseBalanceAccount': None, 'ItemCode': 'ACC-0000002', 'ItemCycleCounts': []}, {'MinimalStock': 0.0, 'MaximalStock': 0.0, 'MinimalOrder': 0.0, 'StandardAveragePrice': 0.0, 'Locked': 'tNO', 'InventoryAccount': None, 'CostAccount': None, 'TransferAccount': None, 'RevenuesAccount': None, 'VarienceAccount': None, 'DecreasingAccount': None, 'IncreasingAccount': None, 'ReturningAccount': None, 'ExpensesAccount': None, 'EURevenuesAccount': None, 'EUExpensesAccount': None, 'ForeignRevenueAcc': None, 'ForeignExpensAcc': None, 'ExemptIncomeAcc': None, 'PriceDifferenceAcc': None, 'WarehouseCode': 'WW', 'InStock': 0.0, 'Committed': 0.0, 'Ordered': 0.0, 'CountedQuantity': 0.0, 'WasCounted': 'tNO', 'UserSignature': 50, 'Counted': 0.0, 'ExpenseClearingAct': None, 'PurchaseCreditAcc': None, 'EUPurchaseCreditAcc': None, 'ForeignPurchaseCreditAcc': None, 'SalesCreditAcc': None, 'SalesCreditEUAcc': None, 'ExemptedCredits': None, 'SalesCreditForeignAcc': None, 'ExpenseOffsettingAccount': None, 'WipAccount': None, 'ExchangeRateDifferencesAcct': None, 'GoodsClearingAcct': None, 'NegativeInventoryAdjustmentAccount': None, 'CostInflationOffsetAccount': None, 'GLDecreaseAcct': None, 'GLIncreaseAcct': None, 'PAReturnAcct': None, 'PurchaseAcct': None, 'PurchaseOffsetAcct': None, 'ShippedGoodsAccount': None, 'StockInflationOffsetAccount': None, 'StockInflationAdjustAccount': None, 'VATInRevenueAccount': None, 'WipVarianceAccount': None, 'CostInflationAccount': None, 'WHIncomingCenvatAccount': None, 'WHOutgoingCenvatAccount': None, 'StockInTransitAccount': None, 'WipOffsetProfitAndLossAccount': None, 'InventoryOffsetProfitAndLossAccount': None, 'DefaultBin': None, 'DefaultBinEnforced': 'tNO', 'PurchaseBalanceAccount': None, 'ItemCode': 'ACC-0000002', 'ItemCycleCounts': []}, {'MinimalStock': 0.0, 'MaximalStock': 0.0, 'MinimalOrder': 0.0, 'StandardAveragePrice': 0.0, 'Locked': 'tNO', 'InventoryAccount': None, 'CostAccount': None, 'TransferAccount': None, 'RevenuesAccount': None, 'VarienceAccount': None, 'DecreasingAccount': None, 'IncreasingAccount': None, 'ReturningAccount': None, 'ExpensesAccount': None, 'EURevenuesAccount': None, 'EUExpensesAccount': None, 'ForeignRevenueAcc': None, 'ForeignExpensAcc': None, 'ExemptIncomeAcc': None, 'PriceDifferenceAcc': None, 'WarehouseCode': 'WW-CON', 'InStock': 0.0, 'Committed': 0.0, 'Ordered': 0.0, 'CountedQuantity': 0.0, 'WasCounted': 'tNO', 'UserSignature': 50, 'Counted': 0.0, 'ExpenseClearingAct': None, 'PurchaseCreditAcc': None, 'EUPurchaseCreditAcc': None, 'ForeignPurchaseCreditAcc': None, 'SalesCreditAcc': None, 'SalesCreditEUAcc': None, 'ExemptedCredits': None, 'SalesCreditForeignAcc': None, 'ExpenseOffsettingAccount': None, 'WipAccount': None, 'ExchangeRateDifferencesAcct': None, 'GoodsClearingAcct': None, 'NegativeInventoryAdjustmentAccount': None, 'CostInflationOffsetAccount': None, 'GLDecreaseAcct': None, 'GLIncreaseAcct': None, 'PAReturnAcct': None, 'PurchaseAcct': None, 'PurchaseOffsetAcct': None, 'ShippedGoodsAccount': None, 'StockInflationOffsetAccount': None, 'StockInflationAdjustAccount': None, 'VATInRevenueAccount': None, 'WipVarianceAccount': None, 'CostInflationAccount': None, 'WHIncomingCenvatAccount': None, 'WHOutgoingCenvatAccount': None, 'StockInTransitAccount': None, 'WipOffsetProfitAndLossAccount': None, 'InventoryOffsetProfitAndLossAccount': None, 'DefaultBin': None, 'DefaultBinEnforced': 'tNO', 'PurchaseBalanceAccount': None, 'ItemCode': 'ACC-0000002', 'ItemCycleCounts': []}, {'MinimalStock': 0.0, 'MaximalStock': 0.0, 'MinimalOrder': 0.0, 'StandardAveragePrice': 0.0, 'Locked': 'tNO', 'InventoryAccount': None, 'CostAccount': None, 'TransferAccount': None, 'RevenuesAccount': None, 'VarienceAccount': None, 'DecreasingAccount': None, 'IncreasingAccount': None, 'ReturningAccount': None, 'ExpensesAccount': None, 'EURevenuesAccount': None, 'EUExpensesAccount': None, 'ForeignRevenueAcc': None, 'ForeignExpensAcc': None, 'ExemptIncomeAcc': None, 'PriceDifferenceAcc': None, 'WarehouseCode': 'WW-DAM', 'InStock': 0.0, 'Committed': 0.0, 'Ordered': 0.0, 'CountedQuantity': 0.0, 'WasCounted': 'tNO', 'UserSignature': 50, 'Counted': 0.0, 'ExpenseClearingAct': None, 'PurchaseCreditAcc': None, 'EUPurchaseCreditAcc': None, 'ForeignPurchaseCreditAcc': None, 'SalesCreditAcc': None, 'SalesCreditEUAcc': None, 'ExemptedCredits': None, 'SalesCreditForeignAcc': None, 'ExpenseOffsettingAccount': None, 'WipAccount': None, 'ExchangeRateDifferencesAcct': None, 'GoodsClearingAcct': None, 'NegativeInventoryAdjustmentAccount': None, 'CostInflationOffsetAccount': None, 'GLDecreaseAcct': None, 'GLIncreaseAcct': None, 'PAReturnAcct': None, 'PurchaseAcct': None, 'PurchaseOffsetAcct': None, 'ShippedGoodsAccount': None, 'StockInflationOffsetAccount': None, 'StockInflationAdjustAccount': None, 'VATInRevenueAccount': None, 'WipVarianceAccount': None, 'CostInflationAccount': None, 'WHIncomingCenvatAccount': None, 'WHOutgoingCenvatAccount': None, 'StockInTransitAccount': None, 'WipOffsetProfitAndLossAccount': None, 'InventoryOffsetProfitAndLossAccount': None, 'DefaultBin': None, 'DefaultBinEnforced': 'tNO', 'PurchaseBalanceAccount': None, 'ItemCode': 'ACC-0000002', 'ItemCycleCounts': []}, {'MinimalStock': 0.0, 'MaximalStock': 0.0, 'MinimalOrder': 0.0, 'StandardAveragePrice': 0.0, 'Locked': 'tNO', 'InventoryAccount': None, 'CostAccount': None, 'TransferAccount': None, 'RevenuesAccount': None, 'VarienceAccount': None, 'DecreasingAccount': None, 'IncreasingAccount': None, 'ReturningAccount': None, 'ExpensesAccount': None, 'EURevenuesAccount': None, 'EUExpensesAccount': None, 'ForeignRevenueAcc': None, 'ForeignExpensAcc': None, 'ExemptIncomeAcc': None, 'PriceDifferenceAcc': None, 'WarehouseCode': 'WW-REP', 'InStock': 0.0, 'Committed': 0.0, 'Ordered': 0.0, 'CountedQuantity': 0.0, 'WasCounted': 'tNO', 'UserSignature': 50, 'Counted': 0.0, 'ExpenseClearingAct': None, 'PurchaseCreditAcc': None, 'EUPurchaseCreditAcc': None, 'ForeignPurchaseCreditAcc': None, 'SalesCreditAcc': None, 'SalesCreditEUAcc': None, 'ExemptedCredits': None, 'SalesCreditForeignAcc': None, 'ExpenseOffsettingAccount': None, 'WipAccount': None, 'ExchangeRateDifferencesAcct': None, 'GoodsClearingAcct': None, 'NegativeInventoryAdjustmentAccount': None, 'CostInflationOffsetAccount': None, 'GLDecreaseAcct': None, 'GLIncreaseAcct': None, 'PAReturnAcct': None, 'PurchaseAcct': None, 'PurchaseOffsetAcct': None, 'ShippedGoodsAccount': None, 'StockInflationOffsetAccount': None, 'StockInflationAdjustAccount': None, 'VATInRevenueAccount': None, 'WipVarianceAccount': None, 'CostInflationAccount': None, 'WHIncomingCenvatAccount': None, 'WHOutgoingCenvatAccount': None, 'StockInTransitAccount': None, 'WipOffsetProfitAndLossAccount': None, 'InventoryOffsetProfitAndLossAccount': None, 'DefaultBin': None, 'DefaultBinEnforced': 'tNO', 'PurchaseBalanceAccount': None, 'ItemCode': 'ACC-0000002', 'ItemCycleCounts': []}, {'MinimalStock': 0.0, 'MaximalStock': 0.0, 'MinimalOrder': 0.0, 'StandardAveragePrice': 0.0, 'Locked': 'tNO', 'InventoryAccount': None, 'CostAccount': None, 'TransferAccount': None, 'RevenuesAccount': None, 'VarienceAccount': None, 'DecreasingAccount': None, 'IncreasingAccount': None, 'ReturningAccount': None, 'ExpensesAccount': None, 'EURevenuesAccount': None, 'EUExpensesAccount': None, 'ForeignRevenueAcc': None, 'ForeignExpensAcc': None, 'ExemptIncomeAcc': None, 'PriceDifferenceAcc': None, 'WarehouseCode': 'WW-SAM', 'InStock': 0.0, 'Committed': 0.0, 'Ordered': 0.0, 'CountedQuantity': 0.0, 'WasCounted': 'tNO', 'UserSignature': 50, 'Counted': 0.0, 'ExpenseClearingAct': None, 'PurchaseCreditAcc': None, 'EUPurchaseCreditAcc': None, 'ForeignPurchaseCreditAcc': None, 'SalesCreditAcc': None, 'SalesCreditEUAcc': None, 'ExemptedCredits': None, 'SalesCreditForeignAcc': None, 'ExpenseOffsettingAccount': None, 'WipAccount': None, 'ExchangeRateDifferencesAcct': None, 'GoodsClearingAcct': None, 'NegativeInventoryAdjustmentAccount': None, 'CostInflationOffsetAccount': None, 'GLDecreaseAcct': None, 'GLIncreaseAcct': None, 'PAReturnAcct': None, 'PurchaseAcct': None, 'PurchaseOffsetAcct': None, 'ShippedGoodsAccount': None, 'StockInflationOffsetAccount': None, 'StockInflationAdjustAccount': None, 'VATInRevenueAccount': None, 'WipVarianceAccount': None, 'CostInflationAccount': None, 'WHIncomingCenvatAccount': None, 'WHOutgoingCenvatAccount': None, 'StockInTransitAccount': None, 'WipOffsetProfitAndLossAccount': None, 'InventoryOffsetProfitAndLossAccount': None, 'DefaultBin': None, 'DefaultBinEnforced': 'tNO', 'PurchaseBalanceAccount': None, 'ItemCode': 'ACC-0000002', 'ItemCycleCounts': []}, {'MinimalStock': 0.0, 'MaximalStock': 0.0, 'MinimalOrder': 0.0, 'StandardAveragePrice': 0.0, 'Locked': 'tNO', 'InventoryAccount': None, 'CostAccount': None, 'TransferAccount': None, 'RevenuesAccount': None, 'VarienceAccount': None, 'DecreasingAccount': None, 'IncreasingAccount': None, 'ReturningAccount': None, 'ExpensesAccount': None, 'EURevenuesAccount': None, 'EUExpensesAccount': None, 'ForeignRevenueAcc': None, 'ForeignExpensAcc': None, 'ExemptIncomeAcc': None, 'PriceDifferenceAcc': None, 'WarehouseCode': 'WW-WIP', 'InStock': 0.0, 'Committed': 0.0, 'Ordered': 0.0, 'CountedQuantity': 0.0, 'WasCounted': 'tNO', 'UserSignature': 50, 'Counted': 0.0, 'ExpenseClearingAct': None, 'PurchaseCreditAcc': None, 'EUPurchaseCreditAcc': None, 'ForeignPurchaseCreditAcc': None, 'SalesCreditAcc': None, 'SalesCreditEUAcc': None, 'ExemptedCredits': None, 'SalesCreditForeignAcc': None, 'ExpenseOffsettingAccount': None, 'WipAccount': None, 'ExchangeRateDifferencesAcct': None, 'GoodsClearingAcct': None, 'NegativeInventoryAdjustmentAccount': None, 'CostInflationOffsetAccount': None, 'GLDecreaseAcct': None, 'GLIncreaseAcct': None, 'PAReturnAcct': None, 'PurchaseAcct': None, 'PurchaseOffsetAcct': None, 'ShippedGoodsAccount': None, 'StockInflationOffsetAccount': None, 'StockInflationAdjustAccount': None, 'VATInRevenueAccount': None, 'WipVarianceAccount': None, 'CostInflationAccount': None, 'WHIncomingCenvatAccount': None, 'WHOutgoingCenvatAccount': None, 'StockInTransitAccount': None, 'WipOffsetProfitAndLossAccount': None, 'InventoryOffsetProfitAndLossAccount': None, 'DefaultBin': None, 'DefaultBinEnforced': 'tNO', 'PurchaseBalanceAccount': None, 'ItemCode': 'ACC-0000002', 'ItemCycleCounts': []}, {'MinimalStock': 0.0, 'MaximalStock': 0.0, 'MinimalOrder': 0.0, 'StandardAveragePrice': 0.0, 'Locked': 'tNO', 'InventoryAccount': None, 'CostAccount': None, 'TransferAccount': None, 'RevenuesAccount': None, 'VarienceAccount': None, 'DecreasingAccount': None, 'IncreasingAccount': None, 'ReturningAccount': None, 'ExpensesAccount': None, 'EURevenuesAccount': None, 'EUExpensesAccount': None, 'ForeignRevenueAcc': None, 'ForeignExpensAcc': None, 'ExemptIncomeAcc': None, 'PriceDifferenceAcc': None, 'WarehouseCode': 'ZW', 'InStock': 0.0, 'Committed': 0.0, 'Ordered': 0.0, 'CountedQuantity': 0.0, 'WasCounted': 'tNO', 'UserSignature': 50, 'Counted': 0.0, 'ExpenseClearingAct': None, 'PurchaseCreditAcc': None, 'EUPurchaseCreditAcc': None, 'ForeignPurchaseCreditAcc': None, 'SalesCreditAcc': None, 'SalesCreditEUAcc': None, 'ExemptedCredits': None, 'SalesCreditForeignAcc': None, 'ExpenseOffsettingAccount': None, 'WipAccount': None, 'ExchangeRateDifferencesAcct': None, 'GoodsClearingAcct': None, 'NegativeInventoryAdjustmentAccount': None, 'CostInflationOffsetAccount': None, 'GLDecreaseAcct': None, 'GLIncreaseAcct': None, 'PAReturnAcct': None, 'PurchaseAcct': None, 'PurchaseOffsetAcct': None, 'ShippedGoodsAccount': None, 'StockInflationOffsetAccount': None, 'StockInflationAdjustAccount': None, 'VATInRevenueAccount': None, 'WipVarianceAccount': None, 'CostInflationAccount': None, 'WHIncomingCenvatAccount': None, 'WHOutgoingCenvatAccount': None, 'StockInTransitAccount': None, 'WipOffsetProfitAndLossAccount': None, 'InventoryOffsetProfitAndLossAccount': None, 'DefaultBin': None, 'DefaultBinEnforced': 'tNO', 'PurchaseBalanceAccount': None, 'ItemCode': 'ACC-0000002', 'ItemCycleCounts': []}], 'ItemPreferredVendors': [], 'ItemLocalizationInfos': [], 'ItemProjects': [], 'ItemDistributionRules': [], 'ItemAttributeGroups': [], 'ItemDepreciationParameters': [], 'ItemPeriodControls': [], 'ItemUnitOfMeasurementCollection': [{'UoMType': 'iutInventory', 'UoMEntry': 1, 'DefaultBarcode': 0, 'DefaultPackage': None, 'Length1': 0.0, 'Length1Unit': None, 'Length2': 0.0, 'Length2Unit': None, 'Width1': 0.0, 'Width1Unit': None, 'Width2': 0.0, 'Width2Unit': None, 'Height1': 0.0, 'Height1Unit': None, 'Height2': 0.0, 'Height2Unit': None, 'Volume': 0.0, 'VolumeUnit': None, 'Weight1': 0.0, 'Weight1Unit': None, 'Weight2': 0.0, 'Weight2Unit': None, 'ItemUoMPackageCollection': []}, {'UoMType': 'iutPurchasing', 'UoMEntry': 1, 'DefaultBarcode': 0, 'DefaultPackage': None, 'Length1': 0.0, 'Length1Unit': None, 'Length2': 0.0, 'Length2Unit': None, 'Width1': 0.0, 'Width1Unit': None, 'Width2': 0.0, 'Width2Unit': None, 'Height1': 0.0, 'Height1Unit': None, 'Height2': 0.0, 'Height2Unit': None, 'Volume': 0.0, 'VolumeUnit': 2, 'Weight1': 0.0, 'Weight1Unit': None, 'Weight2': 0.0, 'Weight2Unit': None, 'ItemUoMPackageCollection': []}, {'UoMType': 'iutPurchasing', 'UoMEntry': 8, 'DefaultBarcode': None, 'DefaultPackage': None, 'Length1': 0.0, 'Length1Unit': None, 'Length2': 0.0, 'Length2Unit': None, 'Width1': 0.0, 'Width1Unit': None, 'Width2': 0.0, 'Width2Unit': None, 'Height1': 0.0, 'Height1Unit': None, 'Height2': 0.0, 'Height2Unit': None, 'Volume': 0.0, 'VolumeUnit': 4, 'Weight1': 0.0, 'Weight1Unit': None, 'Weight2': 0.0, 'Weight2Unit': None, 'ItemUoMPackageCollection': []}, {'UoMType': 'iutSales', 'UoMEntry': 1, 'DefaultBarcode': 0, 'DefaultPackage': None, 'Length1': 0.0, 'Length1Unit': None, 'Length2': 0.0, 'Length2Unit': None, 'Width1': 0.0, 'Width1Unit': None, 'Width2': 0.0, 'Width2Unit': None, 'Height1': 0.0, 'Height1Unit': None, 'Height2': 0.0, 'Height2Unit': None, 'Volume': 0.0, 'VolumeUnit': 2, 'Weight1': 0.0, 'Weight1Unit': None, 'Weight2': 0.0, 'Weight2Unit': None, 'ItemUoMPackageCollection': []}, {'UoMType': 'iutSales', 'UoMEntry': 8, 'DefaultBarcode': None, 'DefaultPackage': None, 'Length1': 0.0, 'Length1Unit': None, 'Length2': 0.0, 'Length2Unit': None, 'Width1': 0.0, 'Width1Unit': None, 'Width2': 0.0, 'Width2Unit': None, 'Height1': 0.0, 'Height1Unit': None, 'Height2': 0.0, 'Height2Unit': None, 'Volume': 0.0, 'VolumeUnit': 4, 'Weight1': 0.0, 'Weight1Unit': None, 'Weight2': 0.0, 'Weight2Unit': None, 'ItemUoMPackageCollection': []}], 'ItemBarCodeCollection': [], 'ItemIntrastatExtension': {'ItemCode': 'ACC-0000002', 'CommodityCode': None, 'SupplementaryUnit': None, 'FactorOfSupplementaryUnit': 0.0, 'ImportRegionState': 0, 'ExportRegionState': 0, 'ImportNatureOfTransaction': None, 'ExportNatureOfTransaction': None, 'ImportStatisticalProcedure': None, 'ExportStatisticalProcedure': None, 'CountryOfOrigin': None, 'ServiceCode': None, 'Type': 'dDocument_Items', 'ServiceSupplyMethod': 'ssmImmediate', 'ServicePaymentMethod': 'spmOther', 'ImportRegionCountry': 'GB', 'ExportRegionCountry': 'GB', 'UseWeightInCalculation': 'tYES', 'IntrastatRelevant': 'tNO', 'StatisticalCode': None}}, {'ItemCode': 'ACC-0000003', 'ItemName': 'Square With 1 Slits 10*10 CM', 'ForeignName': None, 'ItemsGroupCode': 110, 'CustomsGroupCode': -1, 'SalesVATGroup': 'X0', 'BarCode': None, 'VatLiable': 'tYES', 'PurchaseItem': 'tYES', 'SalesItem': 'tNO', 'InventoryItem': 'tYES', 'IncomeAccount': None, 'ExemptIncomeAccount': None, 'ExpanseAccount': None, 'Mainsupplier': None, 'SupplierCatalogNo': None, 'DesiredInventory': 0.0, 'MinInventory': 0.0, 'Picture': None, 'User_Text': None, 'SerialNum': None, 'CommissionPercent': 0.0, 'CommissionSum': 0.0, 'CommissionGroup': 0, 'TreeType': 'iNotATree', 'AssetItem': 'tNO', 'DataExportCode': None, 'Manufacturer': -1, 'QuantityOnStock': 17.0, 'QuantityOrderedFromVendors': 0.0, 'QuantityOrderedByCustomers': 0.0, 'ManageSerialNumbers': 'tNO', 'ManageBatchNumbers': 'tNO', 'Valid': 'tYES', 'ValidFrom': None, 'ValidTo': None, 'ValidRemarks': None, 'Frozen': 'tNO', 'FrozenFrom': None, 'FrozenTo': None, 'FrozenRemarks': None, 'SalesUnit': None, 'SalesItemsPerUnit': 1.0, 'SalesPackagingUnit': None, 'SalesQtyPerPackUnit': 1.0, 'SalesUnitLength': None, 'SalesLengthUnit': None, 'SalesUnitWidth': None, 'SalesWidthUnit': None, 'SalesUnitHeight': None, 'SalesHeightUnit': None, 'SalesUnitVolume': 0.0, 'SalesVolumeUnit': 4, 'SalesUnitWeight': None, 'SalesWeightUnit': None, 'PurchaseUnit': None, 'PurchaseItemsPerUnit': 1.0, 'PurchasePackagingUnit': None, 'PurchaseQtyPerPackUnit': 1.0, 'PurchaseUnitLength': None, 'PurchaseLengthUnit': None, 'PurchaseUnitWidth': None, 'PurchaseWidthUnit': None, 'PurchaseUnitHeight': None, 'PurchaseHeightUnit': None, 'PurchaseUnitVolume': 0.0, 'PurchaseVolumeUnit': 4, 'PurchaseUnitWeight': None, 'PurchaseWeightUnit': None, 'PurchaseVATGroup': 'X1', 'SalesFactor1': 1.0, 'SalesFactor2': 1.0, 'SalesFactor3': 1.0, 'SalesFactor4': 1.0, 'PurchaseFactor1': 1.0, 'PurchaseFactor2': 1.0, 'PurchaseFactor3': 1.0, 'PurchaseFactor4': 1.0, 'MovingAveragePrice': 0.0, 'ForeignRevenuesAccount': None, 'ECRevenuesAccount': None, 'ForeignExpensesAccount': None, 'ECExpensesAccount': None, 'AvgStdPrice': 0.0, 'DefaultWarehouse': None, 'ShipType': None, 'GLMethod': 'glm_ItemClass', 'TaxType': 'tt_Yes', 'MaxInventory': 0.0, 'ManageStockByWarehouse': 'tNO', 'PurchaseHeightUnit1': None, 'PurchaseUnitHeight1': None, 'PurchaseLengthUnit1': None, 'PurchaseUnitLength1': None, 'PurchaseWeightUnit1': None, 'PurchaseUnitWeight1': None, 'PurchaseWidthUnit1': None, 'PurchaseUnitWidth1': None, 'SalesHeightUnit1': None, 'SalesUnitHeight1': None, 'SalesLengthUnit1': None, 'SalesUnitLength1': None, 'SalesWeightUnit1': None, 'SalesUnitWeight1': None, 'SalesWidthUnit1': None, 'SalesUnitWidth1': None, 'ForceSelectionOfSerialNumber': 'tYES', 'ManageSerialNumbersOnReleaseOnly': 'tNO', 'WTLiable': 'tNO', 'CostAccountingMethod': 'bis_MovingAverage', 'SWW': None, 'WarrantyTemplate': '', 'IndirectTax': 'tNO', 'ArTaxCode': None, 'ApTaxCode': None, 'BaseUnitName': None, 'ItemCountryOrg': None, 'IssueMethod': 'im_Backflush', 'SRIAndBatchManageMethod': 'bomm_OnEveryTransaction', 'IsPhantom': 'tNO', 'InventoryUOM': 'Piece', 'PlanningSystem': 'bop_None', 'ProcurementMethod': 'bom_Buy', 'ComponentWarehouse': 'bomcw_BOM', 'OrderIntervals': None, 'OrderMultiple': 0.0, 'LeadTime': None, 'MinOrderQuantity': 0.0, 'ItemType': 'itItems', 'ItemClass': 'itcMaterial', 'OutgoingServiceCode': -1, 'IncomingServiceCode': -1, 'ServiceGroup': -1, 'NCMCode': -1, 'MaterialType': 'mt_FinishedGoods', 'MaterialGroup': -1, 'ProductSource': '', 'Properties1': 'tNO', 'Properties2': 'tNO', 'Properties3': 'tNO', 'Properties4': 'tNO', 'Properties5': 'tNO', 'Properties6': 'tNO', 'Properties7': 'tNO', 'Properties8': 'tNO', 'Properties9': 'tNO', 'Properties10': 'tNO', 'Properties11': 'tNO', 'Properties12': 'tNO', 'Properties13': 'tNO', 'Properties14': 'tNO', 'Properties15': 'tNO', 'Properties16': 'tNO', 'Properties17': 'tNO', 'Properties18': 'tNO', 'Properties19': 'tNO', 'Properties20': 'tNO', 'Properties21': 'tNO', 'Properties22': 'tNO', 'Properties23': 'tNO', 'Properties24': 'tNO', 'Properties25': 'tNO', 'Properties26': 'tNO', 'Properties27': 'tNO', 'Properties28': 'tNO', 'Properties29': 'tNO', 'Properties30': 'tNO', 'Properties31': 'tNO', 'Properties32': 'tNO', 'Properties33': 'tNO', 'Properties34': 'tNO', 'Properties35': 'tNO', 'Properties36': 'tNO', 'Properties37': 'tNO', 'Properties38': 'tNO', 'Properties39': 'tNO', 'Properties40': 'tNO', 'Properties41': 'tNO', 'Properties42': 'tNO', 'Properties43': 'tNO', 'Properties44': 'tNO', 'Properties45': 'tNO', 'Properties46': 'tNO', 'Properties47': 'tNO', 'Properties48': 'tNO', 'Properties49': 'tNO', 'Properties50': 'tNO', 'Properties51': 'tNO', 'Properties52': 'tNO', 'Properties53': 'tNO', 'Properties54': 'tNO', 'Properties55': 'tNO', 'Properties56': 'tNO', 'Properties57': 'tNO', 'Properties58': 'tNO', 'Properties59': 'tNO', 'Properties60': 'tNO', 'Properties61': 'tNO', 'Properties62': 'tNO', 'Properties63': 'tNO', 'Properties64': 'tNO', 'AutoCreateSerialNumbersOnRelease': 'tNO', 'DNFEntry': -1, 'GTSItemSpec': None, 'GTSItemTaxCategory': None, 'FuelID': None, 'BeverageTableCode': '', 'BeverageGroupCode': '', 'BeverageCommercialBrandCode': None, 'Series': 119, 'ToleranceDays': None, 'TypeOfAdvancedRules': 'toarGeneral', 'IssuePrimarilyBy': 'ipbBinLocations', 'NoDiscounts': 'tNO', 'AssetClass': '', 'AssetGroup': '', 'InventoryNumber': '', 'Technician': None, 'Employee': None, 'Location': None, 'AssetStatus': 'New', 'CapitalizationDate': None, 'StatisticalAsset': 'tNO', 'Cession': 'tNO', 'DeactivateAfterUsefulLife': 'tNO', 'ManageByQuantity': 'tNO', 'UoMGroupEntry': 1, 'InventoryUoMEntry': 1, 'DefaultSalesUoMEntry': None, 'DefaultPurchasingUoMEntry': None, 'DepreciationGroup': None, 'AssetSerialNumber': '', 'InventoryWeight': None, 'InventoryWeightUnit': None, 'InventoryWeight1': None, 'InventoryWeightUnit1': None, 'DefaultCountingUnit': 'Piece', 'CountingItemsPerUnit': 1.0, 'DefaultCountingUoMEntry': 1, 'Excisable': 'tNO', 'ChapterID': -1, 'ScsCode': None, 'SpProdType': None, 'ProdStdCost': 0.0, 'InCostRollup': 'tYES', 'VirtualAssetItem': 'tNO', 'EnforceAssetSerialNumbers': 'tNO', 'AttachmentEntry': None, 'LinkedResource': None, 'UpdateDate': '2025-01-26', 'UpdateTime': '09:34:55', 'GSTRelevnt': 'tNO', 'SACEntry': -1, 'GSTTaxCategory': 'gtc_Regular', 'ServiceCategoryEntry': -1, 'CapitalGoodsOnHoldPercent': 0.0, 'CapitalGoodsOnHoldLimit': 0.0, 'AssessableValue': 0.0, 'AssVal4WTR': 0.0, 'SOIExcisable': 'se_NotExcisable', 'TNVED': None, 'ImportedItem': 'tNO', 'PricingUnit': 1, 'CreateDate': '2025-01-26', 'CreateTime': '09:34:55', 'U_MfgH': None, 'U_Collection': None, 'U_OldCode': None, 'U_ItemsCat': None, 'U_NumberofSet': None, 'U_NileCode': None, 'U_TransferProductionLinkExclude': None, 'U_SBO_CodeType': 'GS1', 'U_SBO_EGSCode': None, 'U_ShopifyColor': None, 'U_SalesChannel': None, 'U_ShopifyItemIDLocal': None, 'U_ShopifyItemIDInternational': None, 'U_ParentCommercialName': None, 'ItemPrices': [{'PriceList': 1, 'Price': 0.0, 'Currency': None, 'AdditionalPrice1': 0.0, 'AdditionalCurrency1': None, 'AdditionalPrice2': 0.0, 'AdditionalCurrency2': None, 'BasePriceList': 1, 'Factor': 1.0, 'UoMPrices': []}, {'PriceList': 2, 'Price': 0.0, 'Currency': None, 'AdditionalPrice1': 0.0, 'AdditionalCurrency1': None, 'AdditionalPrice2': 0.0, 'AdditionalCurrency2': None, 'BasePriceList': 1, 'Factor': 0.4, 'UoMPrices': []}, {'PriceList': 3, 'Price': 0.0, 'Currency': None, 'AdditionalPrice1': 0.0, 'AdditionalCurrency1': None, 'AdditionalPrice2': 0.0, 'AdditionalCurrency2': None, 'BasePriceList': 3, 'Factor': 1.0, 'UoMPrices': []}, {'PriceList': 4, 'Price': 0.0, 'Currency': None, 'AdditionalPrice1': 0.0, 'AdditionalCurrency1': None, 'AdditionalPrice2': 0.0, 'AdditionalCurrency2': None, 'BasePriceList': 4, 'Factor': 1.0, 'UoMPrices': []}, {'PriceList': 5, 'Price': 0.0, 'Currency': None, 'AdditionalPrice1': 0.0, 'AdditionalCurrency1': None, 'AdditionalPrice2': 0.0, 'AdditionalCurrency2': None, 'BasePriceList': 5, 'Factor': 1.0, 'UoMPrices': []}, {'PriceList': 6, 'Price': 0.0, 'Currency': None, 'AdditionalPrice1': 0.0, 'AdditionalCurrency1': None, 'AdditionalPrice2': 0.0, 'AdditionalCurrency2': None, 'BasePriceList': 6, 'Factor': 1.0, 'UoMPrices': []}, {'PriceList': 7, 'Price': 0.0, 'Currency': None, 'AdditionalPrice1': 0.0, 'AdditionalCurrency1': None, 'AdditionalPrice2': 0.0, 'AdditionalCurrency2': None, 'BasePriceList': 7, 'Factor': 1.0, 'UoMPrices': []}, {'PriceList': 8, 'Price': 0.0, 'Currency': None, 'AdditionalPrice1': 0.0, 'AdditionalCurrency1': None, 'AdditionalPrice2': 0.0, 'AdditionalCurrency2': None, 'BasePriceList': 8, 'Factor': 1.0, 'UoMPrices': []}, {'PriceList': 9, 'Price': 0.0, 'Currency': None, 'AdditionalPrice1': 0.0, 'AdditionalCurrency1': None, 'AdditionalPrice2': 0.0, 'AdditionalCurrency2': None, 'BasePriceList': 9, 'Factor': 1.0, 'UoMPrices': []}, {'PriceList': 10, 'Price': 0.0, 'Currency': None, 'AdditionalPrice1': 0.0, 'AdditionalCurrency1': None, 'AdditionalPrice2': 0.0, 'AdditionalCurrency2': None, 'BasePriceList': 10, 'Factor': 1.0, 'UoMPrices': []}], 'ItemWarehouseInfoCollection': [{'MinimalStock': 0.0, 'MaximalStock': 0.0, 'MinimalOrder': 0.0, 'StandardAveragePrice': 250.0, 'Locked': 'tNO', 'InventoryAccount': None, 'CostAccount': None, 'TransferAccount': None, 'RevenuesAccount': None, 'VarienceAccount': None, 'DecreasingAccount': None, 'IncreasingAccount': None, 'ReturningAccount': None, 'ExpensesAccount': None, 'EURevenuesAccount': None, 'EUExpensesAccount': None, 'ForeignRevenueAcc': None, 'ForeignExpensAcc': None, 'ExemptIncomeAcc': None, 'PriceDifferenceAcc': None, 'WarehouseCode': '5A', 'InStock': 3.0, 'Committed': 0.0, 'Ordered': 0.0, 'CountedQuantity': 0.0, 'WasCounted': 'tNO', 'UserSignature': 50, 'Counted': 0.0, 'ExpenseClearingAct': None, 'PurchaseCreditAcc': None, 'EUPurchaseCreditAcc': None, 'ForeignPurchaseCreditAcc': None, 'SalesCreditAcc': None, 'SalesCreditEUAcc': None, 'ExemptedCredits': None, 'SalesCreditForeignAcc': None, 'ExpenseOffsettingAccount': None, 'WipAccount': None, 'ExchangeRateDifferencesAcct': None, 'GoodsClearingAcct': None, 'NegativeInventoryAdjustmentAccount': None, 'CostInflationOffsetAccount': None, 'GLDecreaseAcct': None, 'GLIncreaseAcct': None, 'PAReturnAcct': None, 'PurchaseAcct': None, 'PurchaseOffsetAcct': None, 'ShippedGoodsAccount': None, 'StockInflationOffsetAccount': None, 'StockInflationAdjustAccount': None, 'VATInRevenueAccount': None, 'WipVarianceAccount': None, 'CostInflationAccount': None, 'WHIncomingCenvatAccount': None, 'WHOutgoingCenvatAccount': None, 'StockInTransitAccount': None, 'WipOffsetProfitAndLossAccount': None, 'InventoryOffsetProfitAndLossAccount': None, 'DefaultBin': None, 'DefaultBinEnforced': 'tNO', 'PurchaseBalanceAccount': None, 'ItemCode': 'ACC-0000003', 'ItemCycleCounts': []}, {'MinimalStock': 0.0, 'MaximalStock': 0.0, 'MinimalOrder': 0.0, 'StandardAveragePrice': 250.0, 'Locked': 'tNO', 'InventoryAccount': None, 'CostAccount': None, 'TransferAccount': None, 'RevenuesAccount': None, 'VarienceAccount': None, 'DecreasingAccount': None, 'IncreasingAccount': None, 'ReturningAccount': None, 'ExpensesAccount': None, 'EURevenuesAccount': None, 'EUExpensesAccount': None, 'ForeignRevenueAcc': None, 'ForeignExpensAcc': None, 'ExemptIncomeAcc': None, 'PriceDifferenceAcc': None, 'WarehouseCode': 'Arkan', 'InStock': 14.0, 'Committed': 0.0, 'Ordered': 0.0, 'CountedQuantity': 0.0, 'WasCounted': 'tNO', 'UserSignature': 50, 'Counted': 0.0, 'ExpenseClearingAct': None, 'PurchaseCreditAcc': None, 'EUPurchaseCreditAcc': None, 'ForeignPurchaseCreditAcc': None, 'SalesCreditAcc': None, 'SalesCreditEUAcc': None, 'ExemptedCredits': None, 'SalesCreditForeignAcc': None, 'ExpenseOffsettingAccount': None, 'WipAccount': None, 'ExchangeRateDifferencesAcct': None, 'GoodsClearingAcct': None, 'NegativeInventoryAdjustmentAccount': None, 'CostInflationOffsetAccount': None, 'GLDecreaseAcct': None, 'GLIncreaseAcct': None, 'PAReturnAcct': None, 'PurchaseAcct': None, 'PurchaseOffsetAcct': None, 'ShippedGoodsAccount': None, 'StockInflationOffsetAccount': None, 'StockInflationAdjustAccount': None, 'VATInRevenueAccount': None, 'WipVarianceAccount': None, 'CostInflationAccount': None, 'WHIncomingCenvatAccount': None, 'WHOutgoingCenvatAccount': None, 'StockInTransitAccount': None, 'WipOffsetProfitAndLossAccount': None, 'InventoryOffsetProfitAndLossAccount': None, 'DefaultBin': None, 'DefaultBinEnforced': 'tNO', 'PurchaseBalanceAccount': None, 'ItemCode': 'ACC-0000003', 'ItemCycleCounts': []}, {'MinimalStock': 0.0, 'MaximalStock': 0.0, 'MinimalOrder': 0.0, 'StandardAveragePrice': 0.0, 'Locked': 'tNO', 'InventoryAccount': None, 'CostAccount': None, 'TransferAccount': None, 'RevenuesAccount': None, 'VarienceAccount': None, 'DecreasingAccount': None, 'IncreasingAccount': None, 'ReturningAccount': None, 'ExpensesAccount': None, 'EURevenuesAccount': None, 'EUExpensesAccount': None, 'ForeignRevenueAcc': None, 'ForeignExpensAcc': None, 'ExemptIncomeAcc': None, 'PriceDifferenceAcc': None, 'WarehouseCode': 'DIP', 'InStock': 0.0, 'Committed': 0.0, 'Ordered': 0.0, 'CountedQuantity': 0.0, 'WasCounted': 'tNO', 'UserSignature': 50, 'Counted': 0.0, 'ExpenseClearingAct': None, 'PurchaseCreditAcc': None, 'EUPurchaseCreditAcc': None, 'ForeignPurchaseCreditAcc': None, 'SalesCreditAcc': None, 'SalesCreditEUAcc': None, 'ExemptedCredits': None, 'SalesCreditForeignAcc': None, 'ExpenseOffsettingAccount': None, 'WipAccount': None, 'ExchangeRateDifferencesAcct': None, 'GoodsClearingAcct': None, 'NegativeInventoryAdjustmentAccount': None, 'CostInflationOffsetAccount': None, 'GLDecreaseAcct': None, 'GLIncreaseAcct': None, 'PAReturnAcct': None, 'PurchaseAcct': None, 'PurchaseOffsetAcct': None, 'ShippedGoodsAccount': None, 'StockInflationOffsetAccount': None, 'StockInflationAdjustAccount': None, 'VATInRevenueAccount': None, 'WipVarianceAccount': None, 'CostInflationAccount': None, 'WHIncomingCenvatAccount': None, 'WHOutgoingCenvatAccount': None, 'StockInTransitAccount': None, 'WipOffsetProfitAndLossAccount': None, 'InventoryOffsetProfitAndLossAccount': None, 'DefaultBin': None, 'DefaultBinEnforced': 'tNO', 'PurchaseBalanceAccount': None, 'ItemCode': 'ACC-0000003', 'ItemCycleCounts': []}, {'MinimalStock': 0.0, 'MaximalStock': 0.0, 'MinimalOrder': 0.0, 'StandardAveragePrice': 250.0, 'Locked': 'tNO', 'InventoryAccount': None, 'CostAccount': None, 'TransferAccount': None, 'RevenuesAccount': None, 'VarienceAccount': None, 'DecreasingAccount': None, 'IncreasingAccount': None, 'ReturningAccount': None, 'ExpensesAccount': None, 'EURevenuesAccount': None, 'EUExpensesAccount': None, 'ForeignRevenueAcc': None, 'ForeignExpensAcc': None, 'ExemptIncomeAcc': None, 'PriceDifferenceAcc': None, 'WarehouseCode': 'INC', 'InStock': 0.0, 'Committed': 0.0, 'Ordered': 0.0, 'CountedQuantity': 0.0, 'WasCounted': 'tNO', 'UserSignature': 50, 'Counted': 0.0, 'ExpenseClearingAct': None, 'PurchaseCreditAcc': None, 'EUPurchaseCreditAcc': None, 'ForeignPurchaseCreditAcc': None, 'SalesCreditAcc': None, 'SalesCreditEUAcc': None, 'ExemptedCredits': None, 'SalesCreditForeignAcc': None, 'ExpenseOffsettingAccount': None, 'WipAccount': None, 'ExchangeRateDifferencesAcct': None, 'GoodsClearingAcct': None, 'NegativeInventoryAdjustmentAccount': None, 'CostInflationOffsetAccount': None, 'GLDecreaseAcct': None, 'GLIncreaseAcct': None, 'PAReturnAcct': None, 'PurchaseAcct': None, 'PurchaseOffsetAcct': None, 'ShippedGoodsAccount': None, 'StockInflationOffsetAccount': None, 'StockInflationAdjustAccount': None, 'VATInRevenueAccount': None, 'WipVarianceAccount': None, 'CostInflationAccount': None, 'WHIncomingCenvatAccount': None, 'WHOutgoingCenvatAccount': None, 'StockInTransitAccount': None, 'WipOffsetProfitAndLossAccount': None, 'InventoryOffsetProfitAndLossAccount': None, 'DefaultBin': None, 'DefaultBinEnforced': 'tNO', 'PurchaseBalanceAccount': None, 'ItemCode': 'ACC-0000003', 'ItemCycleCounts': []}, {'MinimalStock': 0.0, 'MaximalStock': 0.0, 'MinimalOrder': 0.0, 'StandardAveragePrice': 0.0, 'Locked': 'tNO', 'InventoryAccount': None, 'CostAccount': None, 'TransferAccount': None, 'RevenuesAccount': None, 'VarienceAccount': None, 'DecreasingAccount': None, 'IncreasingAccount': None, 'ReturningAccount': None, 'ExpensesAccount': None, 'EURevenuesAccount': None, 'EUExpensesAccount': None, 'ForeignRevenueAcc': None, 'ForeignExpensAcc': None, 'ExemptIncomeAcc': None, 'PriceDifferenceAcc': None, 'WarehouseCode': 'ONL', 'InStock': 0.0, 'Committed': 0.0, 'Ordered': 0.0, 'CountedQuantity': 0.0, 'WasCounted': 'tNO', 'UserSignature': 50, 'Counted': 0.0, 'ExpenseClearingAct': None, 'PurchaseCreditAcc': None, 'EUPurchaseCreditAcc': None, 'ForeignPurchaseCreditAcc': None, 'SalesCreditAcc': None, 'SalesCreditEUAcc': None, 'ExemptedCredits': None, 'SalesCreditForeignAcc': None, 'ExpenseOffsettingAccount': None, 'WipAccount': None, 'ExchangeRateDifferencesAcct': None, 'GoodsClearingAcct': None, 'NegativeInventoryAdjustmentAccount': None, 'CostInflationOffsetAccount': None, 'GLDecreaseAcct': None, 'GLIncreaseAcct': None, 'PAReturnAcct': None, 'PurchaseAcct': None, 'PurchaseOffsetAcct': None, 'ShippedGoodsAccount': None, 'StockInflationOffsetAccount': None, 'StockInflationAdjustAccount': None, 'VATInRevenueAccount': None, 'WipVarianceAccount': None, 'CostInflationAccount': None, 'WHIncomingCenvatAccount': None, 'WHOutgoingCenvatAccount': None, 'StockInTransitAccount': None, 'WipOffsetProfitAndLossAccount': None, 'InventoryOffsetProfitAndLossAccount': None, 'DefaultBin': None, 'DefaultBinEnforced': 'tNO', 'PurchaseBalanceAccount': None, 'ItemCode': 'ACC-0000003', 'ItemCycleCounts': []}, {'MinimalStock': 0.0, 'MaximalStock': 0.0, 'MinimalOrder': 0.0, 'StandardAveragePrice': 0.0, 'Locked': 'tNO', 'InventoryAccount': None, 'CostAccount': None, 'TransferAccount': None, 'RevenuesAccount': None, 'VarienceAccount': None, 'DecreasingAccount': None, 'IncreasingAccount': None, 'ReturningAccount': None, 'ExpensesAccount': None, 'EURevenuesAccount': None, 'EUExpensesAccount': None, 'ForeignRevenueAcc': None, 'ForeignExpensAcc': None, 'ExemptIncomeAcc': None, 'PriceDifferenceAcc': None, 'WarehouseCode': 'PHO', 'InStock': 0.0, 'Committed': 0.0, 'Ordered': 0.0, 'CountedQuantity': 0.0, 'WasCounted': 'tNO', 'UserSignature': 50, 'Counted': 0.0, 'ExpenseClearingAct': None, 'PurchaseCreditAcc': None, 'EUPurchaseCreditAcc': None, 'ForeignPurchaseCreditAcc': None, 'SalesCreditAcc': None, 'SalesCreditEUAcc': None, 'ExemptedCredits': None, 'SalesCreditForeignAcc': None, 'ExpenseOffsettingAccount': None, 'WipAccount': None, 'ExchangeRateDifferencesAcct': None, 'GoodsClearingAcct': None, 'NegativeInventoryAdjustmentAccount': None, 'CostInflationOffsetAccount': None, 'GLDecreaseAcct': None, 'GLIncreaseAcct': None, 'PAReturnAcct': None, 'PurchaseAcct': None, 'PurchaseOffsetAcct': None, 'ShippedGoodsAccount': None, 'StockInflationOffsetAccount': None, 'StockInflationAdjustAccount': None, 'VATInRevenueAccount': None, 'WipVarianceAccount': None, 'CostInflationAccount': None, 'WHIncomingCenvatAccount': None, 'WHOutgoingCenvatAccount': None, 'StockInTransitAccount': None, 'WipOffsetProfitAndLossAccount': None, 'InventoryOffsetProfitAndLossAccount': None, 'DefaultBin': None, 'DefaultBinEnforced': 'tNO', 'PurchaseBalanceAccount': None, 'ItemCode': 'ACC-0000003', 'ItemCycleCounts': []}, {'MinimalStock': 0.0, 'MaximalStock': 0.0, 'MinimalOrder': 0.0, 'StandardAveragePrice': 0.0, 'Locked': 'tNO', 'InventoryAccount': None, 'CostAccount': None, 'TransferAccount': None, 'RevenuesAccount': None, 'VarienceAccount': None, 'DecreasingAccount': None, 'IncreasingAccount': None, 'ReturningAccount': None, 'ExpensesAccount': None, 'EURevenuesAccount': None, 'EUExpensesAccount': None, 'ForeignRevenueAcc': None, 'ForeignExpensAcc': None, 'ExemptIncomeAcc': None, 'PriceDifferenceAcc': None, 'WarehouseCode': 'PHO-EX', 'InStock': 0.0, 'Committed': 0.0, 'Ordered': 0.0, 'CountedQuantity': 0.0, 'WasCounted': 'tNO', 'UserSignature': 1, 'Counted': 0.0, 'ExpenseClearingAct': None, 'PurchaseCreditAcc': None, 'EUPurchaseCreditAcc': None, 'ForeignPurchaseCreditAcc': None, 'SalesCreditAcc': None, 'SalesCreditEUAcc': None, 'ExemptedCredits': None, 'SalesCreditForeignAcc': None, 'ExpenseOffsettingAccount': None, 'WipAccount': None, 'ExchangeRateDifferencesAcct': None, 'GoodsClearingAcct': None, 'NegativeInventoryAdjustmentAccount': None, 'CostInflationOffsetAccount': None, 'GLDecreaseAcct': None, 'GLIncreaseAcct': None, 'PAReturnAcct': None, 'PurchaseAcct': None, 'PurchaseOffsetAcct': None, 'ShippedGoodsAccount': None, 'StockInflationOffsetAccount': None, 'StockInflationAdjustAccount': None, 'VATInRevenueAccount': None, 'WipVarianceAccount': None, 'CostInflationAccount': None, 'WHIncomingCenvatAccount': None, 'WHOutgoingCenvatAccount': None, 'StockInTransitAccount': None, 'WipOffsetProfitAndLossAccount': None, 'InventoryOffsetProfitAndLossAccount': None, 'DefaultBin': None, 'DefaultBinEnforced': 'tNO', 'PurchaseBalanceAccount': None, 'ItemCode': 'ACC-0000003', 'ItemCycleCounts': []}, {'MinimalStock': 0.0, 'MaximalStock': 0.0, 'MinimalOrder': 0.0, 'StandardAveragePrice': 0.0, 'Locked': 'tNO', 'InventoryAccount': None, 'CostAccount': None, 'TransferAccount': None, 'RevenuesAccount': None, 'VarienceAccount': None, 'DecreasingAccount': None, 'IncreasingAccount': None, 'ReturningAccount': None, 'ExpensesAccount': None, 'EURevenuesAccount': None, 'EUExpensesAccount': None, 'ForeignRevenueAcc': None, 'ForeignExpensAcc': None, 'ExemptIncomeAcc': None, 'PriceDifferenceAcc': None, 'WarehouseCode': 'PHO-IN', 'InStock': 0.0, 'Committed': 0.0, 'Ordered': 0.0, 'CountedQuantity': 0.0, 'WasCounted': 'tNO', 'UserSignature': 1, 'Counted': 0.0, 'ExpenseClearingAct': None, 'PurchaseCreditAcc': None, 'EUPurchaseCreditAcc': None, 'ForeignPurchaseCreditAcc': None, 'SalesCreditAcc': None, 'SalesCreditEUAcc': None, 'ExemptedCredits': None, 'SalesCreditForeignAcc': None, 'ExpenseOffsettingAccount': None, 'WipAccount': None, 'ExchangeRateDifferencesAcct': None, 'GoodsClearingAcct': None, 'NegativeInventoryAdjustmentAccount': None, 'CostInflationOffsetAccount': None, 'GLDecreaseAcct': None, 'GLIncreaseAcct': None, 'PAReturnAcct': None, 'PurchaseAcct': None, 'PurchaseOffsetAcct': None, 'ShippedGoodsAccount': None, 'StockInflationOffsetAccount': None, 'StockInflationAdjustAccount': None, 'VATInRevenueAccount': None, 'WipVarianceAccount': None, 'CostInflationAccount': None, 'WHIncomingCenvatAccount': None, 'WHOutgoingCenvatAccount': None, 'StockInTransitAccount': None, 'WipOffsetProfitAndLossAccount': None, 'InventoryOffsetProfitAndLossAccount': None, 'DefaultBin': None, 'DefaultBinEnforced': 'tNO', 'PurchaseBalanceAccount': None, 'ItemCode': 'ACC-0000003', 'ItemCycleCounts': []}, {'MinimalStock': 0.0, 'MaximalStock': 0.0, 'MinimalOrder': 0.0, 'StandardAveragePrice': 0.0, 'Locked': 'tNO', 'InventoryAccount': None, 'CostAccount': None, 'TransferAccount': None, 'RevenuesAccount': None, 'VarienceAccount': None, 'DecreasingAccount': None, 'IncreasingAccount': None, 'ReturningAccount': None, 'ExpensesAccount': None, 'EURevenuesAccount': None, 'EUExpensesAccount': None, 'ForeignRevenueAcc': None, 'ForeignExpensAcc': None, 'ExemptIncomeAcc': None, 'PriceDifferenceAcc': None, 'WarehouseCode': 'RTW', 'InStock': 0.0, 'Committed': 0.0, 'Ordered': 0.0, 'CountedQuantity': 0.0, 'WasCounted': 'tNO', 'UserSignature': 50, 'Counted': 0.0, 'ExpenseClearingAct': None, 'PurchaseCreditAcc': None, 'EUPurchaseCreditAcc': None, 'ForeignPurchaseCreditAcc': None, 'SalesCreditAcc': None, 'SalesCreditEUAcc': None, 'ExemptedCredits': None, 'SalesCreditForeignAcc': None, 'ExpenseOffsettingAccount': None, 'WipAccount': None, 'ExchangeRateDifferencesAcct': None, 'GoodsClearingAcct': None, 'NegativeInventoryAdjustmentAccount': None, 'CostInflationOffsetAccount': None, 'GLDecreaseAcct': None, 'GLIncreaseAcct': None, 'PAReturnAcct': None, 'PurchaseAcct': None, 'PurchaseOffsetAcct': None, 'ShippedGoodsAccount': None, 'StockInflationOffsetAccount': None, 'StockInflationAdjustAccount': None, 'VATInRevenueAccount': None, 'WipVarianceAccount': None, 'CostInflationAccount': None, 'WHIncomingCenvatAccount': None, 'WHOutgoingCenvatAccount': None, 'StockInTransitAccount': None, 'WipOffsetProfitAndLossAccount': None, 'InventoryOffsetProfitAndLossAccount': None, 'DefaultBin': None, 'DefaultBinEnforced': 'tNO', 'PurchaseBalanceAccount': None, 'ItemCode': 'ACC-0000003', 'ItemCycleCounts': []}, {'MinimalStock': 0.0, 'MaximalStock': 0.0, 'MinimalOrder': 0.0, 'StandardAveragePrice': 0.0, 'Locked': 'tNO', 'InventoryAccount': None, 'CostAccount': None, 'TransferAccount': None, 'RevenuesAccount': None, 'VarienceAccount': None, 'DecreasingAccount': None, 'IncreasingAccount': None, 'ReturningAccount': None, 'ExpensesAccount': None, 'EURevenuesAccount': None, 'EUExpensesAccount': None, 'ForeignRevenueAcc': None, 'ForeignExpensAcc': None, 'ExemptIncomeAcc': None, 'PriceDifferenceAcc': None, 'WarehouseCode': 'RTWH', 'InStock': 0.0, 'Committed': 0.0, 'Ordered': 0.0, 'CountedQuantity': 0.0, 'WasCounted': 'tNO', 'UserSignature': 1, 'Counted': 0.0, 'ExpenseClearingAct': None, 'PurchaseCreditAcc': None, 'EUPurchaseCreditAcc': None, 'ForeignPurchaseCreditAcc': None, 'SalesCreditAcc': None, 'SalesCreditEUAcc': None, 'ExemptedCredits': None, 'SalesCreditForeignAcc': None, 'ExpenseOffsettingAccount': None, 'WipAccount': None, 'ExchangeRateDifferencesAcct': None, 'GoodsClearingAcct': None, 'NegativeInventoryAdjustmentAccount': None, 'CostInflationOffsetAccount': None, 'GLDecreaseAcct': None, 'GLIncreaseAcct': None, 'PAReturnAcct': None, 'PurchaseAcct': None, 'PurchaseOffsetAcct': None, 'ShippedGoodsAccount': None, 'StockInflationOffsetAccount': None, 'StockInflationAdjustAccount': None, 'VATInRevenueAccount': None, 'WipVarianceAccount': None, 'CostInflationAccount': None, 'WHIncomingCenvatAccount': None, 'WHOutgoingCenvatAccount': None, 'StockInTransitAccount': None, 'WipOffsetProfitAndLossAccount': None, 'InventoryOffsetProfitAndLossAccount': None, 'DefaultBin': None, 'DefaultBinEnforced': 'tNO', 'PurchaseBalanceAccount': None, 'ItemCode': 'ACC-0000003', 'ItemCycleCounts': []}, {'MinimalStock': 0.0, 'MaximalStock': 0.0, 'MinimalOrder': 0.0, 'StandardAveragePrice': 0.0, 'Locked': 'tNO', 'InventoryAccount': None, 'CostAccount': None, 'TransferAccount': None, 'RevenuesAccount': None, 'VarienceAccount': None, 'DecreasingAccount': None, 'IncreasingAccount': None, 'ReturningAccount': None, 'ExpensesAccount': None, 'EURevenuesAccount': None, 'EUExpensesAccount': None, 'ForeignRevenueAcc': None, 'ForeignExpensAcc': None, 'ExemptIncomeAcc': None, 'PriceDifferenceAcc': None, 'WarehouseCode': 'SW', 'InStock': 0.0, 'Committed': 0.0, 'Ordered': 0.0, 'CountedQuantity': 0.0, 'WasCounted': 'tNO', 'UserSignature': 50, 'Counted': 0.0, 'ExpenseClearingAct': None, 'PurchaseCreditAcc': None, 'EUPurchaseCreditAcc': None, 'ForeignPurchaseCreditAcc': None, 'SalesCreditAcc': None, 'SalesCreditEUAcc': None, 'ExemptedCredits': None, 'SalesCreditForeignAcc': None, 'ExpenseOffsettingAccount': None, 'WipAccount': None, 'ExchangeRateDifferencesAcct': None, 'GoodsClearingAcct': None, 'NegativeInventoryAdjustmentAccount': None, 'CostInflationOffsetAccount': None, 'GLDecreaseAcct': None, 'GLIncreaseAcct': None, 'PAReturnAcct': None, 'PurchaseAcct': None, 'PurchaseOffsetAcct': None, 'ShippedGoodsAccount': None, 'StockInflationOffsetAccount': None, 'StockInflationAdjustAccount': None, 'VATInRevenueAccount': None, 'WipVarianceAccount': None, 'CostInflationAccount': None, 'WHIncomingCenvatAccount': None, 'WHOutgoingCenvatAccount': None, 'StockInTransitAccount': None, 'WipOffsetProfitAndLossAccount': None, 'InventoryOffsetProfitAndLossAccount': None, 'DefaultBin': None, 'DefaultBinEnforced': 'tNO', 'PurchaseBalanceAccount': None, 'ItemCode': 'ACC-0000003', 'ItemCycleCounts': []}, {'MinimalStock': 0.0, 'MaximalStock': 0.0, 'MinimalOrder': 0.0, 'StandardAveragePrice': 0.0, 'Locked': 'tNO', 'InventoryAccount': None, 'CostAccount': None, 'TransferAccount': None, 'RevenuesAccount': None, 'VarienceAccount': None, 'DecreasingAccount': None, 'IncreasingAccount': None, 'ReturningAccount': None, 'ExpensesAccount': None, 'EURevenuesAccount': None, 'EUExpensesAccount': None, 'ForeignRevenueAcc': None, 'ForeignExpensAcc': None, 'ExemptIncomeAcc': None, 'PriceDifferenceAcc': None, 'WarehouseCode': 'WLS', 'InStock': 0.0, 'Committed': 0.0, 'Ordered': 0.0, 'CountedQuantity': 0.0, 'WasCounted': 'tNO', 'UserSignature': 50, 'Counted': 0.0, 'ExpenseClearingAct': None, 'PurchaseCreditAcc': None, 'EUPurchaseCreditAcc': None, 'ForeignPurchaseCreditAcc': None, 'SalesCreditAcc': None, 'SalesCreditEUAcc': None, 'ExemptedCredits': None, 'SalesCreditForeignAcc': None, 'ExpenseOffsettingAccount': None, 'WipAccount': None, 'ExchangeRateDifferencesAcct': None, 'GoodsClearingAcct': None, 'NegativeInventoryAdjustmentAccount': None, 'CostInflationOffsetAccount': None, 'GLDecreaseAcct': None, 'GLIncreaseAcct': None, 'PAReturnAcct': None, 'PurchaseAcct': None, 'PurchaseOffsetAcct': None, 'ShippedGoodsAccount': None, 'StockInflationOffsetAccount': None, 'StockInflationAdjustAccount': None, 'VATInRevenueAccount': None, 'WipVarianceAccount': None, 'CostInflationAccount': None, 'WHIncomingCenvatAccount': None, 'WHOutgoingCenvatAccount': None, 'StockInTransitAccount': None, 'WipOffsetProfitAndLossAccount': None, 'InventoryOffsetProfitAndLossAccount': None, 'DefaultBin': None, 'DefaultBinEnforced': 'tNO', 'PurchaseBalanceAccount': None, 'ItemCode': 'ACC-0000003', 'ItemCycleCounts': []}, {'MinimalStock': 0.0, 'MaximalStock': 0.0, 'MinimalOrder': 0.0, 'StandardAveragePrice': 0.0, 'Locked': 'tNO', 'InventoryAccount': None, 'CostAccount': None, 'TransferAccount': None, 'RevenuesAccount': None, 'VarienceAccount': None, 'DecreasingAccount': None, 'IncreasingAccount': None, 'ReturningAccount': None, 'ExpensesAccount': None, 'EURevenuesAccount': None, 'EUExpensesAccount': None, 'ForeignRevenueAcc': None, 'ForeignExpensAcc': None, 'ExemptIncomeAcc': None, 'PriceDifferenceAcc': None, 'WarehouseCode': 'WW', 'InStock': 0.0, 'Committed': 0.0, 'Ordered': 0.0, 'CountedQuantity': 0.0, 'WasCounted': 'tNO', 'UserSignature': 50, 'Counted': 0.0, 'ExpenseClearingAct': None, 'PurchaseCreditAcc': None, 'EUPurchaseCreditAcc': None, 'ForeignPurchaseCreditAcc': None, 'SalesCreditAcc': None, 'SalesCreditEUAcc': None, 'ExemptedCredits': None, 'SalesCreditForeignAcc': None, 'ExpenseOffsettingAccount': None, 'WipAccount': None, 'ExchangeRateDifferencesAcct': None, 'GoodsClearingAcct': None, 'NegativeInventoryAdjustmentAccount': None, 'CostInflationOffsetAccount': None, 'GLDecreaseAcct': None, 'GLIncreaseAcct': None, 'PAReturnAcct': None, 'PurchaseAcct': None, 'PurchaseOffsetAcct': None, 'ShippedGoodsAccount': None, 'StockInflationOffsetAccount': None, 'StockInflationAdjustAccount': None, 'VATInRevenueAccount': None, 'WipVarianceAccount': None, 'CostInflationAccount': None, 'WHIncomingCenvatAccount': None, 'WHOutgoingCenvatAccount': None, 'StockInTransitAccount': None, 'WipOffsetProfitAndLossAccount': None, 'InventoryOffsetProfitAndLossAccount': None, 'DefaultBin': None, 'DefaultBinEnforced': 'tNO', 'PurchaseBalanceAccount': None, 'ItemCode': 'ACC-0000003', 'ItemCycleCounts': []}, {'MinimalStock': 0.0, 'MaximalStock': 0.0, 'MinimalOrder': 0.0, 'StandardAveragePrice': 0.0, 'Locked': 'tNO', 'InventoryAccount': None, 'CostAccount': None, 'TransferAccount': None, 'RevenuesAccount': None, 'VarienceAccount': None, 'DecreasingAccount': None, 'IncreasingAccount': None, 'ReturningAccount': None, 'ExpensesAccount': None, 'EURevenuesAccount': None, 'EUExpensesAccount': None, 'ForeignRevenueAcc': None, 'ForeignExpensAcc': None, 'ExemptIncomeAcc': None, 'PriceDifferenceAcc': None, 'WarehouseCode': 'WW-CON', 'InStock': 0.0, 'Committed': 0.0, 'Ordered': 0.0, 'CountedQuantity': 0.0, 'WasCounted': 'tNO', 'UserSignature': 50, 'Counted': 0.0, 'ExpenseClearingAct': None, 'PurchaseCreditAcc': None, 'EUPurchaseCreditAcc': None, 'ForeignPurchaseCreditAcc': None, 'SalesCreditAcc': None, 'SalesCreditEUAcc': None, 'ExemptedCredits': None, 'SalesCreditForeignAcc': None, 'ExpenseOffsettingAccount': None, 'WipAccount': None, 'ExchangeRateDifferencesAcct': None, 'GoodsClearingAcct': None, 'NegativeInventoryAdjustmentAccount': None, 'CostInflationOffsetAccount': None, 'GLDecreaseAcct': None, 'GLIncreaseAcct': None, 'PAReturnAcct': None, 'PurchaseAcct': None, 'PurchaseOffsetAcct': None, 'ShippedGoodsAccount': None, 'StockInflationOffsetAccount': None, 'StockInflationAdjustAccount': None, 'VATInRevenueAccount': None, 'WipVarianceAccount': None, 'CostInflationAccount': None, 'WHIncomingCenvatAccount': None, 'WHOutgoingCenvatAccount': None, 'StockInTransitAccount': None, 'WipOffsetProfitAndLossAccount': None, 'InventoryOffsetProfitAndLossAccount': None, 'DefaultBin': None, 'DefaultBinEnforced': 'tNO', 'PurchaseBalanceAccount': None, 'ItemCode': 'ACC-0000003', 'ItemCycleCounts': []}, {'MinimalStock': 0.0, 'MaximalStock': 0.0, 'MinimalOrder': 0.0, 'StandardAveragePrice': 0.0, 'Locked': 'tNO', 'InventoryAccount': None, 'CostAccount': None, 'TransferAccount': None, 'RevenuesAccount': None, 'VarienceAccount': None, 'DecreasingAccount': None, 'IncreasingAccount': None, 'ReturningAccount': None, 'ExpensesAccount': None, 'EURevenuesAccount': None, 'EUExpensesAccount': None, 'ForeignRevenueAcc': None, 'ForeignExpensAcc': None, 'ExemptIncomeAcc': None, 'PriceDifferenceAcc': None, 'WarehouseCode': 'WW-DAM', 'InStock': 0.0, 'Committed': 0.0, 'Ordered': 0.0, 'CountedQuantity': 0.0, 'WasCounted': 'tNO', 'UserSignature': 50, 'Counted': 0.0, 'ExpenseClearingAct': None, 'PurchaseCreditAcc': None, 'EUPurchaseCreditAcc': None, 'ForeignPurchaseCreditAcc': None, 'SalesCreditAcc': None, 'SalesCreditEUAcc': None, 'ExemptedCredits': None, 'SalesCreditForeignAcc': None, 'ExpenseOffsettingAccount': None, 'WipAccount': None, 'ExchangeRateDifferencesAcct': None, 'GoodsClearingAcct': None, 'NegativeInventoryAdjustmentAccount': None, 'CostInflationOffsetAccount': None, 'GLDecreaseAcct': None, 'GLIncreaseAcct': None, 'PAReturnAcct': None, 'PurchaseAcct': None, 'PurchaseOffsetAcct': None, 'ShippedGoodsAccount': None, 'StockInflationOffsetAccount': None, 'StockInflationAdjustAccount': None, 'VATInRevenueAccount': None, 'WipVarianceAccount': None, 'CostInflationAccount': None, 'WHIncomingCenvatAccount': None, 'WHOutgoingCenvatAccount': None, 'StockInTransitAccount': None, 'WipOffsetProfitAndLossAccount': None, 'InventoryOffsetProfitAndLossAccount': None, 'DefaultBin': None, 'DefaultBinEnforced': 'tNO', 'PurchaseBalanceAccount': None, 'ItemCode': 'ACC-0000003', 'ItemCycleCounts': []}, {'MinimalStock': 0.0, 'MaximalStock': 0.0, 'MinimalOrder': 0.0, 'StandardAveragePrice': 0.0, 'Locked': 'tNO', 'InventoryAccount': None, 'CostAccount': None, 'TransferAccount': None, 'RevenuesAccount': None, 'VarienceAccount': None, 'DecreasingAccount': None, 'IncreasingAccount': None, 'ReturningAccount': None, 'ExpensesAccount': None, 'EURevenuesAccount': None, 'EUExpensesAccount': None, 'ForeignRevenueAcc': None, 'ForeignExpensAcc': None, 'ExemptIncomeAcc': None, 'PriceDifferenceAcc': None, 'WarehouseCode': 'WW-REP', 'InStock': 0.0, 'Committed': 0.0, 'Ordered': 0.0, 'CountedQuantity': 0.0, 'WasCounted': 'tNO', 'UserSignature': 50, 'Counted': 0.0, 'ExpenseClearingAct': None, 'PurchaseCreditAcc': None, 'EUPurchaseCreditAcc': None, 'ForeignPurchaseCreditAcc': None, 'SalesCreditAcc': None, 'SalesCreditEUAcc': None, 'ExemptedCredits': None, 'SalesCreditForeignAcc': None, 'ExpenseOffsettingAccount': None, 'WipAccount': None, 'ExchangeRateDifferencesAcct': None, 'GoodsClearingAcct': None, 'NegativeInventoryAdjustmentAccount': None, 'CostInflationOffsetAccount': None, 'GLDecreaseAcct': None, 'GLIncreaseAcct': None, 'PAReturnAcct': None, 'PurchaseAcct': None, 'PurchaseOffsetAcct': None, 'ShippedGoodsAccount': None, 'StockInflationOffsetAccount': None, 'StockInflationAdjustAccount': None, 'VATInRevenueAccount': None, 'WipVarianceAccount': None, 'CostInflationAccount': None, 'WHIncomingCenvatAccount': None, 'WHOutgoingCenvatAccount': None, 'StockInTransitAccount': None, 'WipOffsetProfitAndLossAccount': None, 'InventoryOffsetProfitAndLossAccount': None, 'DefaultBin': None, 'DefaultBinEnforced': 'tNO', 'PurchaseBalanceAccount': None, 'ItemCode': 'ACC-0000003', 'ItemCycleCounts': []}, {'MinimalStock': 0.0, 'MaximalStock': 0.0, 'MinimalOrder': 0.0, 'StandardAveragePrice': 0.0, 'Locked': 'tNO', 'InventoryAccount': None, 'CostAccount': None, 'TransferAccount': None, 'RevenuesAccount': None, 'VarienceAccount': None, 'DecreasingAccount': None, 'IncreasingAccount': None, 'ReturningAccount': None, 'ExpensesAccount': None, 'EURevenuesAccount': None, 'EUExpensesAccount': None, 'ForeignRevenueAcc': None, 'ForeignExpensAcc': None, 'ExemptIncomeAcc': None, 'PriceDifferenceAcc': None, 'WarehouseCode': 'WW-SAM', 'InStock': 0.0, 'Committed': 0.0, 'Ordered': 0.0, 'CountedQuantity': 0.0, 'WasCounted': 'tNO', 'UserSignature': 50, 'Counted': 0.0, 'ExpenseClearingAct': None, 'PurchaseCreditAcc': None, 'EUPurchaseCreditAcc': None, 'ForeignPurchaseCreditAcc': None, 'SalesCreditAcc': None, 'SalesCreditEUAcc': None, 'ExemptedCredits': None, 'SalesCreditForeignAcc': None, 'ExpenseOffsettingAccount': None, 'WipAccount': None, 'ExchangeRateDifferencesAcct': None, 'GoodsClearingAcct': None, 'NegativeInventoryAdjustmentAccount': None, 'CostInflationOffsetAccount': None, 'GLDecreaseAcct': None, 'GLIncreaseAcct': None, 'PAReturnAcct': None, 'PurchaseAcct': None, 'PurchaseOffsetAcct': None, 'ShippedGoodsAccount': None, 'StockInflationOffsetAccount': None, 'StockInflationAdjustAccount': None, 'VATInRevenueAccount': None, 'WipVarianceAccount': None, 'CostInflationAccount': None, 'WHIncomingCenvatAccount': None, 'WHOutgoingCenvatAccount': None, 'StockInTransitAccount': None, 'WipOffsetProfitAndLossAccount': None, 'InventoryOffsetProfitAndLossAccount': None, 'DefaultBin': None, 'DefaultBinEnforced': 'tNO', 'PurchaseBalanceAccount': None, 'ItemCode': 'ACC-0000003', 'ItemCycleCounts': []}, {'MinimalStock': 0.0, 'MaximalStock': 0.0, 'MinimalOrder': 0.0, 'StandardAveragePrice': 0.0, 'Locked': 'tNO', 'InventoryAccount': None, 'CostAccount': None, 'TransferAccount': None, 'RevenuesAccount': None, 'VarienceAccount': None, 'DecreasingAccount': None, 'IncreasingAccount': None, 'ReturningAccount': None, 'ExpensesAccount': None, 'EURevenuesAccount': None, 'EUExpensesAccount': None, 'ForeignRevenueAcc': None, 'ForeignExpensAcc': None, 'ExemptIncomeAcc': None, 'PriceDifferenceAcc': None, 'WarehouseCode': 'WW-WIP', 'InStock': 0.0, 'Committed': 0.0, 'Ordered': 0.0, 'CountedQuantity': 0.0, 'WasCounted': 'tNO', 'UserSignature': 50, 'Counted': 0.0, 'ExpenseClearingAct': None, 'PurchaseCreditAcc': None, 'EUPurchaseCreditAcc': None, 'ForeignPurchaseCreditAcc': None, 'SalesCreditAcc': None, 'SalesCreditEUAcc': None, 'ExemptedCredits': None, 'SalesCreditForeignAcc': None, 'ExpenseOffsettingAccount': None, 'WipAccount': None, 'ExchangeRateDifferencesAcct': None, 'GoodsClearingAcct': None, 'NegativeInventoryAdjustmentAccount': None, 'CostInflationOffsetAccount': None, 'GLDecreaseAcct': None, 'GLIncreaseAcct': None, 'PAReturnAcct': None, 'PurchaseAcct': None, 'PurchaseOffsetAcct': None, 'ShippedGoodsAccount': None, 'StockInflationOffsetAccount': None, 'StockInflationAdjustAccount': None, 'VATInRevenueAccount': None, 'WipVarianceAccount': None, 'CostInflationAccount': None, 'WHIncomingCenvatAccount': None, 'WHOutgoingCenvatAccount': None, 'StockInTransitAccount': None, 'WipOffsetProfitAndLossAccount': None, 'InventoryOffsetProfitAndLossAccount': None, 'DefaultBin': None, 'DefaultBinEnforced': 'tNO', 'PurchaseBalanceAccount': None, 'ItemCode': 'ACC-0000003', 'ItemCycleCounts': []}, {'MinimalStock': 0.0, 'MaximalStock': 0.0, 'MinimalOrder': 0.0, 'StandardAveragePrice': 0.0, 'Locked': 'tNO', 'InventoryAccount': None, 'CostAccount': None, 'TransferAccount': None, 'RevenuesAccount': None, 'VarienceAccount': None, 'DecreasingAccount': None, 'IncreasingAccount': None, 'ReturningAccount': None, 'ExpensesAccount': None, 'EURevenuesAccount': None, 'EUExpensesAccount': None, 'ForeignRevenueAcc': None, 'ForeignExpensAcc': None, 'ExemptIncomeAcc': None, 'PriceDifferenceAcc': None, 'WarehouseCode': 'ZW', 'InStock': 0.0, 'Committed': 0.0, 'Ordered': 0.0, 'CountedQuantity': 0.0, 'WasCounted': 'tNO', 'UserSignature': 50, 'Counted': 0.0, 'ExpenseClearingAct': None, 'PurchaseCreditAcc': None, 'EUPurchaseCreditAcc': None, 'ForeignPurchaseCreditAcc': None, 'SalesCreditAcc': None, 'SalesCreditEUAcc': None, 'ExemptedCredits': None, 'SalesCreditForeignAcc': None, 'ExpenseOffsettingAccount': None, 'WipAccount': None, 'ExchangeRateDifferencesAcct': None, 'GoodsClearingAcct': None, 'NegativeInventoryAdjustmentAccount': None, 'CostInflationOffsetAccount': None, 'GLDecreaseAcct': None, 'GLIncreaseAcct': None, 'PAReturnAcct': None, 'PurchaseAcct': None, 'PurchaseOffsetAcct': None, 'ShippedGoodsAccount': None, 'StockInflationOffsetAccount': None, 'StockInflationAdjustAccount': None, 'VATInRevenueAccount': None, 'WipVarianceAccount': None, 'CostInflationAccount': None, 'WHIncomingCenvatAccount': None, 'WHOutgoingCenvatAccount': None, 'StockInTransitAccount': None, 'WipOffsetProfitAndLossAccount': None, 'InventoryOffsetProfitAndLossAccount': None, 'DefaultBin': None, 'DefaultBinEnforced': 'tNO', 'PurchaseBalanceAccount': None, 'ItemCode': 'ACC-0000003', 'ItemCycleCounts': []}], 'ItemPreferredVendors': [], 'ItemLocalizationInfos': [], 'ItemProjects': [], 'ItemDistributionRules': [], 'ItemAttributeGroups': [], 'ItemDepreciationParameters': [], 'ItemPeriodControls': [], 'ItemUnitOfMeasurementCollection': [{'UoMType': 'iutInventory', 'UoMEntry': 1, 'DefaultBarcode': 0, 'DefaultPackage': None, 'Length1': 0.0, 'Length1Unit': None, 'Length2': 0.0, 'Length2Unit': None, 'Width1': 0.0, 'Width1Unit': None, 'Width2': 0.0, 'Width2Unit': None, 'Height1': 0.0, 'Height1Unit': None, 'Height2': 0.0, 'Height2Unit': None, 'Volume': 0.0, 'VolumeUnit': None, 'Weight1': 0.0, 'Weight1Unit': None, 'Weight2': 0.0, 'Weight2Unit': None, 'ItemUoMPackageCollection': []}, {'UoMType': 'iutPurchasing', 'UoMEntry': 1, 'DefaultBarcode': 0, 'DefaultPackage': None, 'Length1': 0.0, 'Length1Unit': None, 'Length2': 0.0, 'Length2Unit': None, 'Width1': 0.0, 'Width1Unit': None, 'Width2': 0.0, 'Width2Unit': None, 'Height1': 0.0, 'Height1Unit': None, 'Height2': 0.0, 'Height2Unit': None, 'Volume': 0.0, 'VolumeUnit': 2, 'Weight1': 0.0, 'Weight1Unit': None, 'Weight2': 0.0, 'Weight2Unit': None, 'ItemUoMPackageCollection': []}, {'UoMType': 'iutPurchasing', 'UoMEntry': 8, 'DefaultBarcode': None, 'DefaultPackage': None, 'Length1': 0.0, 'Length1Unit': None, 'Length2': 0.0, 'Length2Unit': None, 'Width1': 0.0, 'Width1Unit': None, 'Width2': 0.0, 'Width2Unit': None, 'Height1': 0.0, 'Height1Unit': None, 'Height2': 0.0, 'Height2Unit': None, 'Volume': 0.0, 'VolumeUnit': 4, 'Weight1': 0.0, 'Weight1Unit': None, 'Weight2': 0.0, 'Weight2Unit': None, 'ItemUoMPackageCollection': []}, {'UoMType': 'iutSales', 'UoMEntry': 1, 'DefaultBarcode': 0, 'DefaultPackage': None, 'Length1': 0.0, 'Length1Unit': None, 'Length2': 0.0, 'Length2Unit': None, 'Width1': 0.0, 'Width1Unit': None, 'Width2': 0.0, 'Width2Unit': None, 'Height1': 0.0, 'Height1Unit': None, 'Height2': 0.0, 'Height2Unit': None, 'Volume': 0.0, 'VolumeUnit': 2, 'Weight1': 0.0, 'Weight1Unit': None, 'Weight2': 0.0, 'Weight2Unit': None, 'ItemUoMPackageCollection': []}, {'UoMType': 'iutSales', 'UoMEntry': 8, 'DefaultBarcode': None, 'DefaultPackage': None, 'Length1': 0.0, 'Length1Unit': None, 'Length2': 0.0, 'Length2Unit': None, 'Width1': 0.0, 'Width1Unit': None, 'Width2': 0.0, 'Width2Unit': None, 'Height1': 0.0, 'Height1Unit': None, 'Height2': 0.0, 'Height2Unit': None, 'Volume': 0.0, 'VolumeUnit': 4, 'Weight1': 0.0, 'Weight1Unit': None, 'Weight2': 0.0, 'Weight2Unit': None, 'ItemUoMPackageCollection': []}], 'ItemBarCodeCollection': [], 'ItemIntrastatExtension': {'ItemCode': 'ACC-0000003', 'CommodityCode': None, 'SupplementaryUnit': None, 'FactorOfSupplementaryUnit': 0.0, 'ImportRegionState': 0, 'ExportRegionState': 0, 'ImportNatureOfTransaction': None, 'ExportNatureOfTransaction': None, 'ImportStatisticalProcedure': None, 'ExportStatisticalProcedure': None, 'CountryOfOrigin': None, 'ServiceCode': None, 'Type': 'dDocument_Items', 'ServiceSupplyMethod': 'ssmImmediate', 'ServicePaymentMethod': 'spmOther', 'ImportRegionCountry': 'GB', 'ExportRegionCountry': 'GB', 'UseWeightInCalculation': 'tYES', 'IntrastatRelevant': 'tNO', 'StatisticalCode': None}}, {'ItemCode': 'ACC-0000004', 'ItemName': 'Earring / Bracelet Plates 10*10 CM', 'ForeignName': None, 'ItemsGroupCode': 110, 'CustomsGroupCode': -1, 'SalesVATGroup': 'X0', 'BarCode': None, 'VatLiable': 'tYES', 'PurchaseItem': 'tYES', 'SalesItem': 'tNO', 'InventoryItem': 'tYES', 'IncomeAccount': None, 'ExemptIncomeAccount': None, 'ExpanseAccount': None, 'Mainsupplier': None, 'SupplierCatalogNo': None, 'DesiredInventory': 0.0, 'MinInventory': 0.0, 'Picture': None, 'User_Text': None, 'SerialNum': None, 'CommissionPercent': 0.0, 'CommissionSum': 0.0, 'CommissionGroup': 0, 'TreeType': 'iNotATree', 'AssetItem': 'tNO', 'DataExportCode': None, 'Manufacturer': -1, 'QuantityOnStock': 35.0, 'QuantityOrderedFromVendors': 0.0, 'QuantityOrderedByCustomers': 0.0, 'ManageSerialNumbers': 'tNO', 'ManageBatchNumbers': 'tNO', 'Valid': 'tYES', 'ValidFrom': None, 'ValidTo': None, 'ValidRemarks': None, 'Frozen': 'tNO', 'FrozenFrom': None, 'FrozenTo': None, 'FrozenRemarks': None, 'SalesUnit': None, 'SalesItemsPerUnit': 1.0, 'SalesPackagingUnit': None, 'SalesQtyPerPackUnit': 1.0, 'SalesUnitLength': None, 'SalesLengthUnit': None, 'SalesUnitWidth': None, 'SalesWidthUnit': None, 'SalesUnitHeight': None, 'SalesHeightUnit': None, 'SalesUnitVolume': 0.0, 'SalesVolumeUnit': 4, 'SalesUnitWeight': None, 'SalesWeightUnit': None, 'PurchaseUnit': None, 'PurchaseItemsPerUnit': 1.0, 'PurchasePackagingUnit': None, 'PurchaseQtyPerPackUnit': 1.0, 'PurchaseUnitLength': None, 'PurchaseLengthUnit': None, 'PurchaseUnitWidth': None, 'PurchaseWidthUnit': None, 'PurchaseUnitHeight': None, 'PurchaseHeightUnit': None, 'PurchaseUnitVolume': 0.0, 'PurchaseVolumeUnit': 4, 'PurchaseUnitWeight': None, 'PurchaseWeightUnit': None, 'PurchaseVATGroup': 'X1', 'SalesFactor1': 1.0, 'SalesFactor2': 1.0, 'SalesFactor3': 1.0, 'SalesFactor4': 1.0, 'PurchaseFactor1': 1.0, 'PurchaseFactor2': 1.0, 'PurchaseFactor3': 1.0, 'PurchaseFactor4': 1.0, 'MovingAveragePrice': 0.0, 'ForeignRevenuesAccount': None, 'ECRevenuesAccount': None, 'ForeignExpensesAccount': None, 'ECExpensesAccount': None, 'AvgStdPrice': 0.0, 'DefaultWarehouse': None, 'ShipType': None, 'GLMethod': 'glm_ItemClass', 'TaxType': 'tt_Yes', 'MaxInventory': 0.0, 'ManageStockByWarehouse': 'tNO', 'PurchaseHeightUnit1': None, 'PurchaseUnitHeight1': None, 'PurchaseLengthUnit1': None, 'PurchaseUnitLength1': None, 'PurchaseWeightUnit1': None, 'PurchaseUnitWeight1': None, 'PurchaseWidthUnit1': None, 'PurchaseUnitWidth1': None, 'SalesHeightUnit1': None, 'SalesUnitHeight1': None, 'SalesLengthUnit1': None, 'SalesUnitLength1': None, 'SalesWeightUnit1': None, 'SalesUnitWeight1': None, 'SalesWidthUnit1': None, 'SalesUnitWidth1': None, 'ForceSelectionOfSerialNumber': 'tYES', 'ManageSerialNumbersOnReleaseOnly': 'tNO', 'WTLiable': 'tNO', 'CostAccountingMethod': 'bis_MovingAverage', 'SWW': None, 'WarrantyTemplate': '', 'IndirectTax': 'tNO', 'ArTaxCode': None, 'ApTaxCode': None, 'BaseUnitName': None, 'ItemCountryOrg': None, 'IssueMethod': 'im_Backflush', 'SRIAndBatchManageMethod': 'bomm_OnEveryTransaction', 'IsPhantom': 'tNO', 'InventoryUOM': 'Piece', 'PlanningSystem': 'bop_None', 'ProcurementMethod': 'bom_Buy', 'ComponentWarehouse': 'bomcw_BOM', 'OrderIntervals': None, 'OrderMultiple': 0.0, 'LeadTime': None, 'MinOrderQuantity': 0.0, 'ItemType': 'itItems', 'ItemClass': 'itcMaterial', 'OutgoingServiceCode': -1, 'IncomingServiceCode': -1, 'ServiceGroup': -1, 'NCMCode': -1, 'MaterialType': 'mt_FinishedGoods', 'MaterialGroup': -1, 'ProductSource': '', 'Properties1': 'tNO', 'Properties2': 'tNO', 'Properties3': 'tNO', 'Properties4': 'tNO', 'Properties5': 'tNO', 'Properties6': 'tNO', 'Properties7': 'tNO', 'Properties8': 'tNO', 'Properties9': 'tNO', 'Properties10': 'tNO', 'Properties11': 'tNO', 'Properties12': 'tNO', 'Properties13': 'tNO', 'Properties14': 'tNO', 'Properties15': 'tNO', 'Properties16': 'tNO', 'Properties17': 'tNO', 'Properties18': 'tNO', 'Properties19': 'tNO', 'Properties20': 'tNO', 'Properties21': 'tNO', 'Properties22': 'tNO', 'Properties23': 'tNO', 'Properties24': 'tNO', 'Properties25': 'tNO', 'Properties26': 'tNO', 'Properties27': 'tNO', 'Properties28': 'tNO', 'Properties29': 'tNO', 'Properties30': 'tNO', 'Properties31': 'tNO', 'Properties32': 'tNO', 'Properties33': 'tNO', 'Properties34': 'tNO', 'Properties35': 'tNO', 'Properties36': 'tNO', 'Properties37': 'tNO', 'Properties38': 'tNO', 'Properties39': 'tNO', 'Properties40': 'tNO', 'Properties41': 'tNO', 'Properties42': 'tNO', 'Properties43': 'tNO', 'Properties44': 'tNO', 'Properties45': 'tNO', 'Properties46': 'tNO', 'Properties47': 'tNO', 'Properties48': 'tNO', 'Properties49': 'tNO', 'Properties50': 'tNO', 'Properties51': 'tNO', 'Properties52': 'tNO', 'Properties53': 'tNO', 'Properties54': 'tNO', 'Properties55': 'tNO', 'Properties56': 'tNO', 'Properties57': 'tNO', 'Properties58': 'tNO', 'Properties59': 'tNO', 'Properties60': 'tNO', 'Properties61': 'tNO', 'Properties62': 'tNO', 'Properties63': 'tNO', 'Properties64': 'tNO', 'AutoCreateSerialNumbersOnRelease': 'tNO', 'DNFEntry': -1, 'GTSItemSpec': None, 'GTSItemTaxCategory': None, 'FuelID': None, 'BeverageTableCode': '', 'BeverageGroupCode': '', 'BeverageCommercialBrandCode': None, 'Series': 119, 'ToleranceDays': None, 'TypeOfAdvancedRules': 'toarGeneral', 'IssuePrimarilyBy': 'ipbBinLocations', 'NoDiscounts': 'tNO', 'AssetClass': '', 'AssetGroup': '', 'InventoryNumber': '', 'Technician': None, 'Employee': None, 'Location': None, 'AssetStatus': 'New', 'CapitalizationDate': None, 'StatisticalAsset': 'tNO', 'Cession': 'tNO', 'DeactivateAfterUsefulLife': 'tNO', 'ManageByQuantity': 'tNO', 'UoMGroupEntry': 1, 'InventoryUoMEntry': 1, 'DefaultSalesUoMEntry': None, 'DefaultPurchasingUoMEntry': None, 'DepreciationGroup': None, 'AssetSerialNumber': '', 'InventoryWeight': None, 'InventoryWeightUnit': None, 'InventoryWeight1': None, 'InventoryWeightUnit1': None, 'DefaultCountingUnit': 'Piece', 'CountingItemsPerUnit': 1.0, 'DefaultCountingUoMEntry': 1, 'Excisable': 'tNO', 'ChapterID': -1, 'ScsCode': None, 'SpProdType': None, 'ProdStdCost': 0.0, 'InCostRollup': 'tYES', 'VirtualAssetItem': 'tNO', 'EnforceAssetSerialNumbers': 'tNO', 'AttachmentEntry': None, 'LinkedResource': None, 'UpdateDate': '2025-01-26', 'UpdateTime': '09:35:56', 'GSTRelevnt': 'tNO', 'SACEntry': -1, 'GSTTaxCategory': 'gtc_Regular', 'ServiceCategoryEntry': -1, 'CapitalGoodsOnHoldPercent': 0.0, 'CapitalGoodsOnHoldLimit': 0.0, 'AssessableValue': 0.0, 'AssVal4WTR': 0.0, 'SOIExcisable': 'se_NotExcisable', 'TNVED': None, 'ImportedItem': 'tNO', 'PricingUnit': 1, 'CreateDate': '2025-01-26', 'CreateTime': '09:35:56', 'U_MfgH': None, 'U_Collection': None, 'U_OldCode': None, 'U_ItemsCat': None, 'U_NumberofSet': None, 'U_NileCode': None, 'U_TransferProductionLinkExclude': None, 'U_SBO_CodeType': 'GS1', 'U_SBO_EGSCode': None, 'U_ShopifyColor': None, 'U_SalesChannel': None, 'U_ShopifyItemIDLocal': None, 'U_ShopifyItemIDInternational': None, 'U_ParentCommercialName': None, 'ItemPrices': [{'PriceList': 1, 'Price': 0.0, 'Currency': None, 'AdditionalPrice1': 0.0, 'AdditionalCurrency1': None, 'AdditionalPrice2': 0.0, 'AdditionalCurrency2': None, 'BasePriceList': 1, 'Factor': 1.0, 'UoMPrices': []}, {'PriceList': 2, 'Price': 0.0, 'Currency': None, 'AdditionalPrice1': 0.0, 'AdditionalCurrency1': None, 'AdditionalPrice2': 0.0, 'AdditionalCurrency2': None, 'BasePriceList': 1, 'Factor': 0.4, 'UoMPrices': []}, {'PriceList': 3, 'Price': 0.0, 'Currency': None, 'AdditionalPrice1': 0.0, 'AdditionalCurrency1': None, 'AdditionalPrice2': 0.0, 'AdditionalCurrency2': None, 'BasePriceList': 3, 'Factor': 1.0, 'UoMPrices': []}, {'PriceList': 4, 'Price': 0.0, 'Currency': None, 'AdditionalPrice1': 0.0, 'AdditionalCurrency1': None, 'AdditionalPrice2': 0.0, 'AdditionalCurrency2': None, 'BasePriceList': 4, 'Factor': 1.0, 'UoMPrices': []}, {'PriceList': 5, 'Price': 0.0, 'Currency': None, 'AdditionalPrice1': 0.0, 'AdditionalCurrency1': None, 'AdditionalPrice2': 0.0, 'AdditionalCurrency2': None, 'BasePriceList': 5, 'Factor': 1.0, 'UoMPrices': []}, {'PriceList': 6, 'Price': 0.0, 'Currency': None, 'AdditionalPrice1': 0.0, 'AdditionalCurrency1': None, 'AdditionalPrice2': 0.0, 'AdditionalCurrency2': None, 'BasePriceList': 6, 'Factor': 1.0, 'UoMPrices': []}, {'PriceList': 7, 'Price': 0.0, 'Currency': None, 'AdditionalPrice1': 0.0, 'AdditionalCurrency1': None, 'AdditionalPrice2': 0.0, 'AdditionalCurrency2': None, 'BasePriceList': 7, 'Factor': 1.0, 'UoMPrices': []}, {'PriceList': 8, 'Price': 0.0, 'Currency': None, 'AdditionalPrice1': 0.0, 'AdditionalCurrency1': None, 'AdditionalPrice2': 0.0, 'AdditionalCurrency2': None, 'BasePriceList': 8, 'Factor': 1.0, 'UoMPrices': []}, {'PriceList': 9, 'Price': 0.0, 'Currency': None, 'AdditionalPrice1': 0.0, 'AdditionalCurrency1': None, 'AdditionalPrice2': 0.0, 'AdditionalCurrency2': None, 'BasePriceList': 9, 'Factor': 1.0, 'UoMPrices': []}, {'PriceList': 10, 'Price': 0.0, 'Currency': None, 'AdditionalPrice1': 0.0, 'AdditionalCurrency1': None, 'AdditionalPrice2': 0.0, 'AdditionalCurrency2': None, 'BasePriceList': 10, 'Factor': 1.0, 'UoMPrices': []}], 'ItemWarehouseInfoCollection': [{'MinimalStock': 0.0, 'MaximalStock': 0.0, 'MinimalOrder': 0.0, 'StandardAveragePrice': 180.0, 'Locked': 'tNO', 'InventoryAccount': None, 'CostAccount': None, 'TransferAccount': None, 'RevenuesAccount': None, 'VarienceAccount': None, 'DecreasingAccount': None, 'IncreasingAccount': None, 'ReturningAccount': None, 'ExpensesAccount': None, 'EURevenuesAccount': None, 'EUExpensesAccount': None, 'ForeignRevenueAcc': None, 'ForeignExpensAcc': None, 'ExemptIncomeAcc': None, 'PriceDifferenceAcc': None, 'WarehouseCode': '5A', 'InStock': 17.0, 'Committed': 0.0, 'Ordered': 0.0, 'CountedQuantity': 0.0, 'WasCounted': 'tNO', 'UserSignature': 50, 'Counted': 0.0, 'ExpenseClearingAct': None, 'PurchaseCreditAcc': None, 'EUPurchaseCreditAcc': None, 'ForeignPurchaseCreditAcc': None, 'SalesCreditAcc': None, 'SalesCreditEUAcc': None, 'ExemptedCredits': None, 'SalesCreditForeignAcc': None, 'ExpenseOffsettingAccount': None, 'WipAccount': None, 'ExchangeRateDifferencesAcct': None, 'GoodsClearingAcct': None, 'NegativeInventoryAdjustmentAccount': None, 'CostInflationOffsetAccount': None, 'GLDecreaseAcct': None, 'GLIncreaseAcct': None, 'PAReturnAcct': None, 'PurchaseAcct': None, 'PurchaseOffsetAcct': None, 'ShippedGoodsAccount': None, 'StockInflationOffsetAccount': None, 'StockInflationAdjustAccount': None, 'VATInRevenueAccount': None, 'WipVarianceAccount': None, 'CostInflationAccount': None, 'WHIncomingCenvatAccount': None, 'WHOutgoingCenvatAccount': None, 'StockInTransitAccount': None, 'WipOffsetProfitAndLossAccount': None, 'InventoryOffsetProfitAndLossAccount': None, 'DefaultBin': None, 'DefaultBinEnforced': 'tNO', 'PurchaseBalanceAccount': None, 'ItemCode': 'ACC-0000004', 'ItemCycleCounts': []}, {'MinimalStock': 0.0, 'MaximalStock': 0.0, 'MinimalOrder': 0.0, 'StandardAveragePrice': 180.0, 'Locked': 'tNO', 'InventoryAccount': None, 'CostAccount': None, 'TransferAccount': None, 'RevenuesAccount': None, 'VarienceAccount': None, 'DecreasingAccount': None, 'IncreasingAccount': None, 'ReturningAccount': None, 'ExpensesAccount': None, 'EURevenuesAccount': None, 'EUExpensesAccount': None, 'ForeignRevenueAcc': None, 'ForeignExpensAcc': None, 'ExemptIncomeAcc': None, 'PriceDifferenceAcc': None, 'WarehouseCode': 'Arkan', 'InStock': 18.0, 'Committed': 0.0, 'Ordered': 0.0, 'CountedQuantity': 0.0, 'WasCounted': 'tNO', 'UserSignature': 50, 'Counted': 0.0, 'ExpenseClearingAct': None, 'PurchaseCreditAcc': None, 'EUPurchaseCreditAcc': None, 'ForeignPurchaseCreditAcc': None, 'SalesCreditAcc': None, 'SalesCreditEUAcc': None, 'ExemptedCredits': None, 'SalesCreditForeignAcc': None, 'ExpenseOffsettingAccount': None, 'WipAccount': None, 'ExchangeRateDifferencesAcct': None, 'GoodsClearingAcct': None, 'NegativeInventoryAdjustmentAccount': None, 'CostInflationOffsetAccount': None, 'GLDecreaseAcct': None, 'GLIncreaseAcct': None, 'PAReturnAcct': None, 'PurchaseAcct': None, 'PurchaseOffsetAcct': None, 'ShippedGoodsAccount': None, 'StockInflationOffsetAccount': None, 'StockInflationAdjustAccount': None, 'VATInRevenueAccount': None, 'WipVarianceAccount': None, 'CostInflationAccount': None, 'WHIncomingCenvatAccount': None, 'WHOutgoingCenvatAccount': None, 'StockInTransitAccount': None, 'WipOffsetProfitAndLossAccount': None, 'InventoryOffsetProfitAndLossAccount': None, 'DefaultBin': None, 'DefaultBinEnforced': 'tNO', 'PurchaseBalanceAccount': None, 'ItemCode': 'ACC-0000004', 'ItemCycleCounts': []}, {'MinimalStock': 0.0, 'MaximalStock': 0.0, 'MinimalOrder': 0.0, 'StandardAveragePrice': 0.0, 'Locked': 'tNO', 'InventoryAccount': None, 'CostAccount': None, 'TransferAccount': None, 'RevenuesAccount': None, 'VarienceAccount': None, 'DecreasingAccount': None, 'IncreasingAccount': None, 'ReturningAccount': None, 'ExpensesAccount': None, 'EURevenuesAccount': None, 'EUExpensesAccount': None, 'ForeignRevenueAcc': None, 'ForeignExpensAcc': None, 'ExemptIncomeAcc': None, 'PriceDifferenceAcc': None, 'WarehouseCode': 'DIP', 'InStock': 0.0, 'Committed': 0.0, 'Ordered': 0.0, 'CountedQuantity': 0.0, 'WasCounted': 'tNO', 'UserSignature': 50, 'Counted': 0.0, 'ExpenseClearingAct': None, 'PurchaseCreditAcc': None, 'EUPurchaseCreditAcc': None, 'ForeignPurchaseCreditAcc': None, 'SalesCreditAcc': None, 'SalesCreditEUAcc': None, 'ExemptedCredits': None, 'SalesCreditForeignAcc': None, 'ExpenseOffsettingAccount': None, 'WipAccount': None, 'ExchangeRateDifferencesAcct': None, 'GoodsClearingAcct': None, 'NegativeInventoryAdjustmentAccount': None, 'CostInflationOffsetAccount': None, 'GLDecreaseAcct': None, 'GLIncreaseAcct': None, 'PAReturnAcct': None, 'PurchaseAcct': None, 'PurchaseOffsetAcct': None, 'ShippedGoodsAccount': None, 'StockInflationOffsetAccount': None, 'StockInflationAdjustAccount': None, 'VATInRevenueAccount': None, 'WipVarianceAccount': None, 'CostInflationAccount': None, 'WHIncomingCenvatAccount': None, 'WHOutgoingCenvatAccount': None, 'StockInTransitAccount': None, 'WipOffsetProfitAndLossAccount': None, 'InventoryOffsetProfitAndLossAccount': None, 'DefaultBin': None, 'DefaultBinEnforced': 'tNO', 'PurchaseBalanceAccount': None, 'ItemCode': 'ACC-0000004', 'ItemCycleCounts': []}, {'MinimalStock': 0.0, 'MaximalStock': 0.0, 'MinimalOrder': 0.0, 'StandardAveragePrice': 180.0, 'Locked': 'tNO', 'InventoryAccount': None, 'CostAccount': None, 'TransferAccount': None, 'RevenuesAccount': None, 'VarienceAccount': None, 'DecreasingAccount': None, 'IncreasingAccount': None, 'ReturningAccount': None, 'ExpensesAccount': None, 'EURevenuesAccount': None, 'EUExpensesAccount': None, 'ForeignRevenueAcc': None, 'ForeignExpensAcc': None, 'ExemptIncomeAcc': None, 'PriceDifferenceAcc': None, 'WarehouseCode': 'INC', 'InStock': 0.0, 'Committed': 0.0, 'Ordered': 0.0, 'CountedQuantity': 0.0, 'WasCounted': 'tNO', 'UserSignature': 50, 'Counted': 0.0, 'ExpenseClearingAct': None, 'PurchaseCreditAcc': None, 'EUPurchaseCreditAcc': None, 'ForeignPurchaseCreditAcc': None, 'SalesCreditAcc': None, 'SalesCreditEUAcc': None, 'ExemptedCredits': None, 'SalesCreditForeignAcc': None, 'ExpenseOffsettingAccount': None, 'WipAccount': None, 'ExchangeRateDifferencesAcct': None, 'GoodsClearingAcct': None, 'NegativeInventoryAdjustmentAccount': None, 'CostInflationOffsetAccount': None, 'GLDecreaseAcct': None, 'GLIncreaseAcct': None, 'PAReturnAcct': None, 'PurchaseAcct': None, 'PurchaseOffsetAcct': None, 'ShippedGoodsAccount': None, 'StockInflationOffsetAccount': None, 'StockInflationAdjustAccount': None, 'VATInRevenueAccount': None, 'WipVarianceAccount': None, 'CostInflationAccount': None, 'WHIncomingCenvatAccount': None, 'WHOutgoingCenvatAccount': None, 'StockInTransitAccount': None, 'WipOffsetProfitAndLossAccount': None, 'InventoryOffsetProfitAndLossAccount': None, 'DefaultBin': None, 'DefaultBinEnforced': 'tNO', 'PurchaseBalanceAccount': None, 'ItemCode': 'ACC-0000004', 'ItemCycleCounts': []}, {'MinimalStock': 0.0, 'MaximalStock': 0.0, 'MinimalOrder': 0.0, 'StandardAveragePrice': 0.0, 'Locked': 'tNO', 'InventoryAccount': None, 'CostAccount': None, 'TransferAccount': None, 'RevenuesAccount': None, 'VarienceAccount': None, 'DecreasingAccount': None, 'IncreasingAccount': None, 'ReturningAccount': None, 'ExpensesAccount': None, 'EURevenuesAccount': None, 'EUExpensesAccount': None, 'ForeignRevenueAcc': None, 'ForeignExpensAcc': None, 'ExemptIncomeAcc': None, 'PriceDifferenceAcc': None, 'WarehouseCode': 'ONL', 'InStock': 0.0, 'Committed': 0.0, 'Ordered': 0.0, 'CountedQuantity': 0.0, 'WasCounted': 'tNO', 'UserSignature': 50, 'Counted': 0.0, 'ExpenseClearingAct': None, 'PurchaseCreditAcc': None, 'EUPurchaseCreditAcc': None, 'ForeignPurchaseCreditAcc': None, 'SalesCreditAcc': None, 'SalesCreditEUAcc': None, 'ExemptedCredits': None, 'SalesCreditForeignAcc': None, 'ExpenseOffsettingAccount': None, 'WipAccount': None, 'ExchangeRateDifferencesAcct': None, 'GoodsClearingAcct': None, 'NegativeInventoryAdjustmentAccount': None, 'CostInflationOffsetAccount': None, 'GLDecreaseAcct': None, 'GLIncreaseAcct': None, 'PAReturnAcct': None, 'PurchaseAcct': None, 'PurchaseOffsetAcct': None, 'ShippedGoodsAccount': None, 'StockInflationOffsetAccount': None, 'StockInflationAdjustAccount': None, 'VATInRevenueAccount': None, 'WipVarianceAccount': None, 'CostInflationAccount': None, 'WHIncomingCenvatAccount': None, 'WHOutgoingCenvatAccount': None, 'StockInTransitAccount': None, 'WipOffsetProfitAndLossAccount': None, 'InventoryOffsetProfitAndLossAccount': None, 'DefaultBin': None, 'DefaultBinEnforced': 'tNO', 'PurchaseBalanceAccount': None, 'ItemCode': 'ACC-0000004', 'ItemCycleCounts': []}, {'MinimalStock': 0.0, 'MaximalStock': 0.0, 'MinimalOrder': 0.0, 'StandardAveragePrice': 0.0, 'Locked': 'tNO', 'InventoryAccount': None, 'CostAccount': None, 'TransferAccount': None, 'RevenuesAccount': None, 'VarienceAccount': None, 'DecreasingAccount': None, 'IncreasingAccount': None, 'ReturningAccount': None, 'ExpensesAccount': None, 'EURevenuesAccount': None, 'EUExpensesAccount': None, 'ForeignRevenueAcc': None, 'ForeignExpensAcc': None, 'ExemptIncomeAcc': None, 'PriceDifferenceAcc': None, 'WarehouseCode': 'PHO', 'InStock': 0.0, 'Committed': 0.0, 'Ordered': 0.0, 'CountedQuantity': 0.0, 'WasCounted': 'tNO', 'UserSignature': 50, 'Counted': 0.0, 'ExpenseClearingAct': None, 'PurchaseCreditAcc': None, 'EUPurchaseCreditAcc': None, 'ForeignPurchaseCreditAcc': None, 'SalesCreditAcc': None, 'SalesCreditEUAcc': None, 'ExemptedCredits': None, 'SalesCreditForeignAcc': None, 'ExpenseOffsettingAccount': None, 'WipAccount': None, 'ExchangeRateDifferencesAcct': None, 'GoodsClearingAcct': None, 'NegativeInventoryAdjustmentAccount': None, 'CostInflationOffsetAccount': None, 'GLDecreaseAcct': None, 'GLIncreaseAcct': None, 'PAReturnAcct': None, 'PurchaseAcct': None, 'PurchaseOffsetAcct': None, 'ShippedGoodsAccount': None, 'StockInflationOffsetAccount': None, 'StockInflationAdjustAccount': None, 'VATInRevenueAccount': None, 'WipVarianceAccount': None, 'CostInflationAccount': None, 'WHIncomingCenvatAccount': None, 'WHOutgoingCenvatAccount': None, 'StockInTransitAccount': None, 'WipOffsetProfitAndLossAccount': None, 'InventoryOffsetProfitAndLossAccount': None, 'DefaultBin': None, 'DefaultBinEnforced': 'tNO', 'PurchaseBalanceAccount': None, 'ItemCode': 'ACC-0000004', 'ItemCycleCounts': []}, {'MinimalStock': 0.0, 'MaximalStock': 0.0, 'MinimalOrder': 0.0, 'StandardAveragePrice': 0.0, 'Locked': 'tNO', 'InventoryAccount': None, 'CostAccount': None, 'TransferAccount': None, 'RevenuesAccount': None, 'VarienceAccount': None, 'DecreasingAccount': None, 'IncreasingAccount': None, 'ReturningAccount': None, 'ExpensesAccount': None, 'EURevenuesAccount': None, 'EUExpensesAccount': None, 'ForeignRevenueAcc': None, 'ForeignExpensAcc': None, 'ExemptIncomeAcc': None, 'PriceDifferenceAcc': None, 'WarehouseCode': 'PHO-EX', 'InStock': 0.0, 'Committed': 0.0, 'Ordered': 0.0, 'CountedQuantity': 0.0, 'WasCounted': 'tNO', 'UserSignature': 1, 'Counted': 0.0, 'ExpenseClearingAct': None, 'PurchaseCreditAcc': None, 'EUPurchaseCreditAcc': None, 'ForeignPurchaseCreditAcc': None, 'SalesCreditAcc': None, 'SalesCreditEUAcc': None, 'ExemptedCredits': None, 'SalesCreditForeignAcc': None, 'ExpenseOffsettingAccount': None, 'WipAccount': None, 'ExchangeRateDifferencesAcct': None, 'GoodsClearingAcct': None, 'NegativeInventoryAdjustmentAccount': None, 'CostInflationOffsetAccount': None, 'GLDecreaseAcct': None, 'GLIncreaseAcct': None, 'PAReturnAcct': None, 'PurchaseAcct': None, 'PurchaseOffsetAcct': None, 'ShippedGoodsAccount': None, 'StockInflationOffsetAccount': None, 'StockInflationAdjustAccount': None, 'VATInRevenueAccount': None, 'WipVarianceAccount': None, 'CostInflationAccount': None, 'WHIncomingCenvatAccount': None, 'WHOutgoingCenvatAccount': None, 'StockInTransitAccount': None, 'WipOffsetProfitAndLossAccount': None, 'InventoryOffsetProfitAndLossAccount': None, 'DefaultBin': None, 'DefaultBinEnforced': 'tNO', 'PurchaseBalanceAccount': None, 'ItemCode': 'ACC-0000004', 'ItemCycleCounts': []}, {'MinimalStock': 0.0, 'MaximalStock': 0.0, 'MinimalOrder': 0.0, 'StandardAveragePrice': 0.0, 'Locked': 'tNO', 'InventoryAccount': None, 'CostAccount': None, 'TransferAccount': None, 'RevenuesAccount': None, 'VarienceAccount': None, 'DecreasingAccount': None, 'IncreasingAccount': None, 'ReturningAccount': None, 'ExpensesAccount': None, 'EURevenuesAccount': None, 'EUExpensesAccount': None, 'ForeignRevenueAcc': None, 'ForeignExpensAcc': None, 'ExemptIncomeAcc': None, 'PriceDifferenceAcc': None, 'WarehouseCode': 'PHO-IN', 'InStock': 0.0, 'Committed': 0.0, 'Ordered': 0.0, 'CountedQuantity': 0.0, 'WasCounted': 'tNO', 'UserSignature': 1, 'Counted': 0.0, 'ExpenseClearingAct': None, 'PurchaseCreditAcc': None, 'EUPurchaseCreditAcc': None, 'ForeignPurchaseCreditAcc': None, 'SalesCreditAcc': None, 'SalesCreditEUAcc': None, 'ExemptedCredits': None, 'SalesCreditForeignAcc': None, 'ExpenseOffsettingAccount': None, 'WipAccount': None, 'ExchangeRateDifferencesAcct': None, 'GoodsClearingAcct': None, 'NegativeInventoryAdjustmentAccount': None, 'CostInflationOffsetAccount': None, 'GLDecreaseAcct': None, 'GLIncreaseAcct': None, 'PAReturnAcct': None, 'PurchaseAcct': None, 'PurchaseOffsetAcct': None, 'ShippedGoodsAccount': None, 'StockInflationOffsetAccount': None, 'StockInflationAdjustAccount': None, 'VATInRevenueAccount': None, 'WipVarianceAccount': None, 'CostInflationAccount': None, 'WHIncomingCenvatAccount': None, 'WHOutgoingCenvatAccount': None, 'StockInTransitAccount': None, 'WipOffsetProfitAndLossAccount': None, 'InventoryOffsetProfitAndLossAccount': None, 'DefaultBin': None, 'DefaultBinEnforced': 'tNO', 'PurchaseBalanceAccount': None, 'ItemCode': 'ACC-0000004', 'ItemCycleCounts': []}, {'MinimalStock': 0.0, 'MaximalStock': 0.0, 'MinimalOrder': 0.0, 'StandardAveragePrice': 0.0, 'Locked': 'tNO', 'InventoryAccount': None, 'CostAccount': None, 'TransferAccount': None, 'RevenuesAccount': None, 'VarienceAccount': None, 'DecreasingAccount': None, 'IncreasingAccount': None, 'ReturningAccount': None, 'ExpensesAccount': None, 'EURevenuesAccount': None, 'EUExpensesAccount': None, 'ForeignRevenueAcc': None, 'ForeignExpensAcc': None, 'ExemptIncomeAcc': None, 'PriceDifferenceAcc': None, 'WarehouseCode': 'RTW', 'InStock': 0.0, 'Committed': 0.0, 'Ordered': 0.0, 'CountedQuantity': 0.0, 'WasCounted': 'tNO', 'UserSignature': 50, 'Counted': 0.0, 'ExpenseClearingAct': None, 'PurchaseCreditAcc': None, 'EUPurchaseCreditAcc': None, 'ForeignPurchaseCreditAcc': None, 'SalesCreditAcc': None, 'SalesCreditEUAcc': None, 'ExemptedCredits': None, 'SalesCreditForeignAcc': None, 'ExpenseOffsettingAccount': None, 'WipAccount': None, 'ExchangeRateDifferencesAcct': None, 'GoodsClearingAcct': None, 'NegativeInventoryAdjustmentAccount': None, 'CostInflationOffsetAccount': None, 'GLDecreaseAcct': None, 'GLIncreaseAcct': None, 'PAReturnAcct': None, 'PurchaseAcct': None, 'PurchaseOffsetAcct': None, 'ShippedGoodsAccount': None, 'StockInflationOffsetAccount': None, 'StockInflationAdjustAccount': None, 'VATInRevenueAccount': None, 'WipVarianceAccount': None, 'CostInflationAccount': None, 'WHIncomingCenvatAccount': None, 'WHOutgoingCenvatAccount': None, 'StockInTransitAccount': None, 'WipOffsetProfitAndLossAccount': None, 'InventoryOffsetProfitAndLossAccount': None, 'DefaultBin': None, 'DefaultBinEnforced': 'tNO', 'PurchaseBalanceAccount': None, 'ItemCode': 'ACC-0000004', 'ItemCycleCounts': []}, {'MinimalStock': 0.0, 'MaximalStock': 0.0, 'MinimalOrder': 0.0, 'StandardAveragePrice': 0.0, 'Locked': 'tNO', 'InventoryAccount': None, 'CostAccount': None, 'TransferAccount': None, 'RevenuesAccount': None, 'VarienceAccount': None, 'DecreasingAccount': None, 'IncreasingAccount': None, 'ReturningAccount': None, 'ExpensesAccount': None, 'EURevenuesAccount': None, 'EUExpensesAccount': None, 'ForeignRevenueAcc': None, 'ForeignExpensAcc': None, 'ExemptIncomeAcc': None, 'PriceDifferenceAcc': None, 'WarehouseCode': 'RTWH', 'InStock': 0.0, 'Committed': 0.0, 'Ordered': 0.0, 'CountedQuantity': 0.0, 'WasCounted': 'tNO', 'UserSignature': 1, 'Counted': 0.0, 'ExpenseClearingAct': None, 'PurchaseCreditAcc': None, 'EUPurchaseCreditAcc': None, 'ForeignPurchaseCreditAcc': None, 'SalesCreditAcc': None, 'SalesCreditEUAcc': None, 'ExemptedCredits': None, 'SalesCreditForeignAcc': None, 'ExpenseOffsettingAccount': None, 'WipAccount': None, 'ExchangeRateDifferencesAcct': None, 'GoodsClearingAcct': None, 'NegativeInventoryAdjustmentAccount': None, 'CostInflationOffsetAccount': None, 'GLDecreaseAcct': None, 'GLIncreaseAcct': None, 'PAReturnAcct': None, 'PurchaseAcct': None, 'PurchaseOffsetAcct': None, 'ShippedGoodsAccount': None, 'StockInflationOffsetAccount': None, 'StockInflationAdjustAccount': None, 'VATInRevenueAccount': None, 'WipVarianceAccount': None, 'CostInflationAccount': None, 'WHIncomingCenvatAccount': None, 'WHOutgoingCenvatAccount': None, 'StockInTransitAccount': None, 'WipOffsetProfitAndLossAccount': None, 'InventoryOffsetProfitAndLossAccount': None, 'DefaultBin': None, 'DefaultBinEnforced': 'tNO', 'PurchaseBalanceAccount': None, 'ItemCode': 'ACC-0000004', 'ItemCycleCounts': []}, {'MinimalStock': 0.0, 'MaximalStock': 0.0, 'MinimalOrder': 0.0, 'StandardAveragePrice': 0.0, 'Locked': 'tNO', 'InventoryAccount': None, 'CostAccount': None, 'TransferAccount': None, 'RevenuesAccount': None, 'VarienceAccount': None, 'DecreasingAccount': None, 'IncreasingAccount': None, 'ReturningAccount': None, 'ExpensesAccount': None, 'EURevenuesAccount': None, 'EUExpensesAccount': None, 'ForeignRevenueAcc': None, 'ForeignExpensAcc': None, 'ExemptIncomeAcc': None, 'PriceDifferenceAcc': None, 'WarehouseCode': 'SW', 'InStock': 0.0, 'Committed': 0.0, 'Ordered': 0.0, 'CountedQuantity': 0.0, 'WasCounted': 'tNO', 'UserSignature': 50, 'Counted': 0.0, 'ExpenseClearingAct': None, 'PurchaseCreditAcc': None, 'EUPurchaseCreditAcc': None, 'ForeignPurchaseCreditAcc': None, 'SalesCreditAcc': None, 'SalesCreditEUAcc': None, 'ExemptedCredits': None, 'SalesCreditForeignAcc': None, 'ExpenseOffsettingAccount': None, 'WipAccount': None, 'ExchangeRateDifferencesAcct': None, 'GoodsClearingAcct': None, 'NegativeInventoryAdjustmentAccount': None, 'CostInflationOffsetAccount': None, 'GLDecreaseAcct': None, 'GLIncreaseAcct': None, 'PAReturnAcct': None, 'PurchaseAcct': None, 'PurchaseOffsetAcct': None, 'ShippedGoodsAccount': None, 'StockInflationOffsetAccount': None, 'StockInflationAdjustAccount': None, 'VATInRevenueAccount': None, 'WipVarianceAccount': None, 'CostInflationAccount': None, 'WHIncomingCenvatAccount': None, 'WHOutgoingCenvatAccount': None, 'StockInTransitAccount': None, 'WipOffsetProfitAndLossAccount': None, 'InventoryOffsetProfitAndLossAccount': None, 'DefaultBin': None, 'DefaultBinEnforced': 'tNO', 'PurchaseBalanceAccount': None, 'ItemCode': 'ACC-0000004', 'ItemCycleCounts': []}, {'MinimalStock': 0.0, 'MaximalStock': 0.0, 'MinimalOrder': 0.0, 'StandardAveragePrice': 0.0, 'Locked': 'tNO', 'InventoryAccount': None, 'CostAccount': None, 'TransferAccount': None, 'RevenuesAccount': None, 'VarienceAccount': None, 'DecreasingAccount': None, 'IncreasingAccount': None, 'ReturningAccount': None, 'ExpensesAccount': None, 'EURevenuesAccount': None, 'EUExpensesAccount': None, 'ForeignRevenueAcc': None, 'ForeignExpensAcc': None, 'ExemptIncomeAcc': None, 'PriceDifferenceAcc': None, 'WarehouseCode': 'WLS', 'InStock': 0.0, 'Committed': 0.0, 'Ordered': 0.0, 'CountedQuantity': 0.0, 'WasCounted': 'tNO', 'UserSignature': 50, 'Counted': 0.0, 'ExpenseClearingAct': None, 'PurchaseCreditAcc': None, 'EUPurchaseCreditAcc': None, 'ForeignPurchaseCreditAcc': None, 'SalesCreditAcc': None, 'SalesCreditEUAcc': None, 'ExemptedCredits': None, 'SalesCreditForeignAcc': None, 'ExpenseOffsettingAccount': None, 'WipAccount': None, 'ExchangeRateDifferencesAcct': None, 'GoodsClearingAcct': None, 'NegativeInventoryAdjustmentAccount': None, 'CostInflationOffsetAccount': None, 'GLDecreaseAcct': None, 'GLIncreaseAcct': None, 'PAReturnAcct': None, 'PurchaseAcct': None, 'PurchaseOffsetAcct': None, 'ShippedGoodsAccount': None, 'StockInflationOffsetAccount': None, 'StockInflationAdjustAccount': None, 'VATInRevenueAccount': None, 'WipVarianceAccount': None, 'CostInflationAccount': None, 'WHIncomingCenvatAccount': None, 'WHOutgoingCenvatAccount': None, 'StockInTransitAccount': None, 'WipOffsetProfitAndLossAccount': None, 'InventoryOffsetProfitAndLossAccount': None, 'DefaultBin': None, 'DefaultBinEnforced': 'tNO', 'PurchaseBalanceAccount': None, 'ItemCode': 'ACC-0000004', 'ItemCycleCounts': []}, {'MinimalStock': 0.0, 'MaximalStock': 0.0, 'MinimalOrder': 0.0, 'StandardAveragePrice': 0.0, 'Locked': 'tNO', 'InventoryAccount': None, 'CostAccount': None, 'TransferAccount': None, 'RevenuesAccount': None, 'VarienceAccount': None, 'DecreasingAccount': None, 'IncreasingAccount': None, 'ReturningAccount': None, 'ExpensesAccount': None, 'EURevenuesAccount': None, 'EUExpensesAccount': None, 'ForeignRevenueAcc': None, 'ForeignExpensAcc': None, 'ExemptIncomeAcc': None, 'PriceDifferenceAcc': None, 'WarehouseCode': 'WW', 'InStock': 0.0, 'Committed': 0.0, 'Ordered': 0.0, 'CountedQuantity': 0.0, 'WasCounted': 'tNO', 'UserSignature': 50, 'Counted': 0.0, 'ExpenseClearingAct': None, 'PurchaseCreditAcc': None, 'EUPurchaseCreditAcc': None, 'ForeignPurchaseCreditAcc': None, 'SalesCreditAcc': None, 'SalesCreditEUAcc': None, 'ExemptedCredits': None, 'SalesCreditForeignAcc': None, 'ExpenseOffsettingAccount': None, 'WipAccount': None, 'ExchangeRateDifferencesAcct': None, 'GoodsClearingAcct': None, 'NegativeInventoryAdjustmentAccount': None, 'CostInflationOffsetAccount': None, 'GLDecreaseAcct': None, 'GLIncreaseAcct': None, 'PAReturnAcct': None, 'PurchaseAcct': None, 'PurchaseOffsetAcct': None, 'ShippedGoodsAccount': None, 'StockInflationOffsetAccount': None, 'StockInflationAdjustAccount': None, 'VATInRevenueAccount': None, 'WipVarianceAccount': None, 'CostInflationAccount': None, 'WHIncomingCenvatAccount': None, 'WHOutgoingCenvatAccount': None, 'StockInTransitAccount': None, 'WipOffsetProfitAndLossAccount': None, 'InventoryOffsetProfitAndLossAccount': None, 'DefaultBin': None, 'DefaultBinEnforced': 'tNO', 'PurchaseBalanceAccount': None, 'ItemCode': 'ACC-0000004', 'ItemCycleCounts': []}, {'MinimalStock': 0.0, 'MaximalStock': 0.0, 'MinimalOrder': 0.0, 'StandardAveragePrice': 0.0, 'Locked': 'tNO', 'InventoryAccount': None, 'CostAccount': None, 'TransferAccount': None, 'RevenuesAccount': None, 'VarienceAccount': None, 'DecreasingAccount': None, 'IncreasingAccount': None, 'ReturningAccount': None, 'ExpensesAccount': None, 'EURevenuesAccount': None, 'EUExpensesAccount': None, 'ForeignRevenueAcc': None, 'ForeignExpensAcc': None, 'ExemptIncomeAcc': None, 'PriceDifferenceAcc': None, 'WarehouseCode': 'WW-CON', 'InStock': 0.0, 'Committed': 0.0, 'Ordered': 0.0, 'CountedQuantity': 0.0, 'WasCounted': 'tNO', 'UserSignature': 50, 'Counted': 0.0, 'ExpenseClearingAct': None, 'PurchaseCreditAcc': None, 'EUPurchaseCreditAcc': None, 'ForeignPurchaseCreditAcc': None, 'SalesCreditAcc': None, 'SalesCreditEUAcc': None, 'ExemptedCredits': None, 'SalesCreditForeignAcc': None, 'ExpenseOffsettingAccount': None, 'WipAccount': None, 'ExchangeRateDifferencesAcct': None, 'GoodsClearingAcct': None, 'NegativeInventoryAdjustmentAccount': None, 'CostInflationOffsetAccount': None, 'GLDecreaseAcct': None, 'GLIncreaseAcct': None, 'PAReturnAcct': None, 'PurchaseAcct': None, 'PurchaseOffsetAcct': None, 'ShippedGoodsAccount': None, 'StockInflationOffsetAccount': None, 'StockInflationAdjustAccount': None, 'VATInRevenueAccount': None, 'WipVarianceAccount': None, 'CostInflationAccount': None, 'WHIncomingCenvatAccount': None, 'WHOutgoingCenvatAccount': None, 'StockInTransitAccount': None, 'WipOffsetProfitAndLossAccount': None, 'InventoryOffsetProfitAndLossAccount': None, 'DefaultBin': None, 'DefaultBinEnforced': 'tNO', 'PurchaseBalanceAccount': None, 'ItemCode': 'ACC-0000004', 'ItemCycleCounts': []}, {'MinimalStock': 0.0, 'MaximalStock': 0.0, 'MinimalOrder': 0.0, 'StandardAveragePrice': 0.0, 'Locked': 'tNO', 'InventoryAccount': None, 'CostAccount': None, 'TransferAccount': None, 'RevenuesAccount': None, 'VarienceAccount': None, 'DecreasingAccount': None, 'IncreasingAccount': None, 'ReturningAccount': None, 'ExpensesAccount': None, 'EURevenuesAccount': None, 'EUExpensesAccount': None, 'ForeignRevenueAcc': None, 'ForeignExpensAcc': None, 'ExemptIncomeAcc': None, 'PriceDifferenceAcc': None, 'WarehouseCode': 'WW-DAM', 'InStock': 0.0, 'Committed': 0.0, 'Ordered': 0.0, 'CountedQuantity': 0.0, 'WasCounted': 'tNO', 'UserSignature': 50, 'Counted': 0.0, 'ExpenseClearingAct': None, 'PurchaseCreditAcc': None, 'EUPurchaseCreditAcc': None, 'ForeignPurchaseCreditAcc': None, 'SalesCreditAcc': None, 'SalesCreditEUAcc': None, 'ExemptedCredits': None, 'SalesCreditForeignAcc': None, 'ExpenseOffsettingAccount': None, 'WipAccount': None, 'ExchangeRateDifferencesAcct': None, 'GoodsClearingAcct': None, 'NegativeInventoryAdjustmentAccount': None, 'CostInflationOffsetAccount': None, 'GLDecreaseAcct': None, 'GLIncreaseAcct': None, 'PAReturnAcct': None, 'PurchaseAcct': None, 'PurchaseOffsetAcct': None, 'ShippedGoodsAccount': None, 'StockInflationOffsetAccount': None, 'StockInflationAdjustAccount': None, 'VATInRevenueAccount': None, 'WipVarianceAccount': None, 'CostInflationAccount': None, 'WHIncomingCenvatAccount': None, 'WHOutgoingCenvatAccount': None, 'StockInTransitAccount': None, 'WipOffsetProfitAndLossAccount': None, 'InventoryOffsetProfitAndLossAccount': None, 'DefaultBin': None, 'DefaultBinEnforced': 'tNO', 'PurchaseBalanceAccount': None, 'ItemCode': 'ACC-0000004', 'ItemCycleCounts': []}, {'MinimalStock': 0.0, 'MaximalStock': 0.0, 'MinimalOrder': 0.0, 'StandardAveragePrice': 0.0, 'Locked': 'tNO', 'InventoryAccount': None, 'CostAccount': None, 'TransferAccount': None, 'RevenuesAccount': None, 'VarienceAccount': None, 'DecreasingAccount': None, 'IncreasingAccount': None, 'ReturningAccount': None, 'ExpensesAccount': None, 'EURevenuesAccount': None, 'EUExpensesAccount': None, 'ForeignRevenueAcc': None, 'ForeignExpensAcc': None, 'ExemptIncomeAcc': None, 'PriceDifferenceAcc': None, 'WarehouseCode': 'WW-REP', 'InStock': 0.0, 'Committed': 0.0, 'Ordered': 0.0, 'CountedQuantity': 0.0, 'WasCounted': 'tNO', 'UserSignature': 50, 'Counted': 0.0, 'ExpenseClearingAct': None, 'PurchaseCreditAcc': None, 'EUPurchaseCreditAcc': None, 'ForeignPurchaseCreditAcc': None, 'SalesCreditAcc': None, 'SalesCreditEUAcc': None, 'ExemptedCredits': None, 'SalesCreditForeignAcc': None, 'ExpenseOffsettingAccount': None, 'WipAccount': None, 'ExchangeRateDifferencesAcct': None, 'GoodsClearingAcct': None, 'NegativeInventoryAdjustmentAccount': None, 'CostInflationOffsetAccount': None, 'GLDecreaseAcct': None, 'GLIncreaseAcct': None, 'PAReturnAcct': None, 'PurchaseAcct': None, 'PurchaseOffsetAcct': None, 'ShippedGoodsAccount': None, 'StockInflationOffsetAccount': None, 'StockInflationAdjustAccount': None, 'VATInRevenueAccount': None, 'WipVarianceAccount': None, 'CostInflationAccount': None, 'WHIncomingCenvatAccount': None, 'WHOutgoingCenvatAccount': None, 'StockInTransitAccount': None, 'WipOffsetProfitAndLossAccount': None, 'InventoryOffsetProfitAndLossAccount': None, 'DefaultBin': None, 'DefaultBinEnforced': 'tNO', 'PurchaseBalanceAccount': None, 'ItemCode': 'ACC-0000004', 'ItemCycleCounts': []}, {'MinimalStock': 0.0, 'MaximalStock': 0.0, 'MinimalOrder': 0.0, 'StandardAveragePrice': 0.0, 'Locked': 'tNO', 'InventoryAccount': None, 'CostAccount': None, 'TransferAccount': None, 'RevenuesAccount': None, 'VarienceAccount': None, 'DecreasingAccount': None, 'IncreasingAccount': None, 'ReturningAccount': None, 'ExpensesAccount': None, 'EURevenuesAccount': None, 'EUExpensesAccount': None, 'ForeignRevenueAcc': None, 'ForeignExpensAcc': None, 'ExemptIncomeAcc': None, 'PriceDifferenceAcc': None, 'WarehouseCode': 'WW-SAM', 'InStock': 0.0, 'Committed': 0.0, 'Ordered': 0.0, 'CountedQuantity': 0.0, 'WasCounted': 'tNO', 'UserSignature': 50, 'Counted': 0.0, 'ExpenseClearingAct': None, 'PurchaseCreditAcc': None, 'EUPurchaseCreditAcc': None, 'ForeignPurchaseCreditAcc': None, 'SalesCreditAcc': None, 'SalesCreditEUAcc': None, 'ExemptedCredits': None, 'SalesCreditForeignAcc': None, 'ExpenseOffsettingAccount': None, 'WipAccount': None, 'ExchangeRateDifferencesAcct': None, 'GoodsClearingAcct': None, 'NegativeInventoryAdjustmentAccount': None, 'CostInflationOffsetAccount': None, 'GLDecreaseAcct': None, 'GLIncreaseAcct': None, 'PAReturnAcct': None, 'PurchaseAcct': None, 'PurchaseOffsetAcct': None, 'ShippedGoodsAccount': None, 'StockInflationOffsetAccount': None, 'StockInflationAdjustAccount': None, 'VATInRevenueAccount': None, 'WipVarianceAccount': None, 'CostInflationAccount': None, 'WHIncomingCenvatAccount': None, 'WHOutgoingCenvatAccount': None, 'StockInTransitAccount': None, 'WipOffsetProfitAndLossAccount': None, 'InventoryOffsetProfitAndLossAccount': None, 'DefaultBin': None, 'DefaultBinEnforced': 'tNO', 'PurchaseBalanceAccount': None, 'ItemCode': 'ACC-0000004', 'ItemCycleCounts': []}, {'MinimalStock': 0.0, 'MaximalStock': 0.0, 'MinimalOrder': 0.0, 'StandardAveragePrice': 0.0, 'Locked': 'tNO', 'InventoryAccount': None, 'CostAccount': None, 'TransferAccount': None, 'RevenuesAccount': None, 'VarienceAccount': None, 'DecreasingAccount': None, 'IncreasingAccount': None, 'ReturningAccount': None, 'ExpensesAccount': None, 'EURevenuesAccount': None, 'EUExpensesAccount': None, 'ForeignRevenueAcc': None, 'ForeignExpensAcc': None, 'ExemptIncomeAcc': None, 'PriceDifferenceAcc': None, 'WarehouseCode': 'WW-WIP', 'InStock': 0.0, 'Committed': 0.0, 'Ordered': 0.0, 'CountedQuantity': 0.0, 'WasCounted': 'tNO', 'UserSignature': 50, 'Counted': 0.0, 'ExpenseClearingAct': None, 'PurchaseCreditAcc': None, 'EUPurchaseCreditAcc': None, 'ForeignPurchaseCreditAcc': None, 'SalesCreditAcc': None, 'SalesCreditEUAcc': None, 'ExemptedCredits': None, 'SalesCreditForeignAcc': None, 'ExpenseOffsettingAccount': None, 'WipAccount': None, 'ExchangeRateDifferencesAcct': None, 'GoodsClearingAcct': None, 'NegativeInventoryAdjustmentAccount': None, 'CostInflationOffsetAccount': None, 'GLDecreaseAcct': None, 'GLIncreaseAcct': None, 'PAReturnAcct': None, 'PurchaseAcct': None, 'PurchaseOffsetAcct': None, 'ShippedGoodsAccount': None, 'StockInflationOffsetAccount': None, 'StockInflationAdjustAccount': None, 'VATInRevenueAccount': None, 'WipVarianceAccount': None, 'CostInflationAccount': None, 'WHIncomingCenvatAccount': None, 'WHOutgoingCenvatAccount': None, 'StockInTransitAccount': None, 'WipOffsetProfitAndLossAccount': None, 'InventoryOffsetProfitAndLossAccount': None, 'DefaultBin': None, 'DefaultBinEnforced': 'tNO', 'PurchaseBalanceAccount': None, 'ItemCode': 'ACC-0000004', 'ItemCycleCounts': []}, {'MinimalStock': 0.0, 'MaximalStock': 0.0, 'MinimalOrder': 0.0, 'StandardAveragePrice': 0.0, 'Locked': 'tNO', 'InventoryAccount': None, 'CostAccount': None, 'TransferAccount': None, 'RevenuesAccount': None, 'VarienceAccount': None, 'DecreasingAccount': None, 'IncreasingAccount': None, 'ReturningAccount': None, 'ExpensesAccount': None, 'EURevenuesAccount': None, 'EUExpensesAccount': None, 'ForeignRevenueAcc': None, 'ForeignExpensAcc': None, 'ExemptIncomeAcc': None, 'PriceDifferenceAcc': None, 'WarehouseCode': 'ZW', 'InStock': 0.0, 'Committed': 0.0, 'Ordered': 0.0, 'CountedQuantity': 0.0, 'WasCounted': 'tNO', 'UserSignature': 50, 'Counted': 0.0, 'ExpenseClearingAct': None, 'PurchaseCreditAcc': None, 'EUPurchaseCreditAcc': None, 'ForeignPurchaseCreditAcc': None, 'SalesCreditAcc': None, 'SalesCreditEUAcc': None, 'ExemptedCredits': None, 'SalesCreditForeignAcc': None, 'ExpenseOffsettingAccount': None, 'WipAccount': None, 'ExchangeRateDifferencesAcct': None, 'GoodsClearingAcct': None, 'NegativeInventoryAdjustmentAccount': None, 'CostInflationOffsetAccount': None, 'GLDecreaseAcct': None, 'GLIncreaseAcct': None, 'PAReturnAcct': None, 'PurchaseAcct': None, 'PurchaseOffsetAcct': None, 'ShippedGoodsAccount': None, 'StockInflationOffsetAccount': None, 'StockInflationAdjustAccount': None, 'VATInRevenueAccount': None, 'WipVarianceAccount': None, 'CostInflationAccount': None, 'WHIncomingCenvatAccount': None, 'WHOutgoingCenvatAccount': None, 'StockInTransitAccount': None, 'WipOffsetProfitAndLossAccount': None, 'InventoryOffsetProfitAndLossAccount': None, 'DefaultBin': None, 'DefaultBinEnforced': 'tNO', 'PurchaseBalanceAccount': None, 'ItemCode': 'ACC-0000004', 'ItemCycleCounts': []}], 'ItemPreferredVendors': [], 'ItemLocalizationInfos': [], 'ItemProjects': [], 'ItemDistributionRules': [], 'ItemAttributeGroups': [], 'ItemDepreciationParameters': [], 'ItemPeriodControls': [], 'ItemUnitOfMeasurementCollection': [{'UoMType': 'iutInventory', 'UoMEntry': 1, 'DefaultBarcode': 0, 'DefaultPackage': None, 'Length1': 0.0, 'Length1Unit': None, 'Length2': 0.0, 'Length2Unit': None, 'Width1': 0.0, 'Width1Unit': None, 'Width2': 0.0, 'Width2Unit': None, 'Height1': 0.0, 'Height1Unit': None, 'Height2': 0.0, 'Height2Unit': None, 'Volume': 0.0, 'VolumeUnit': None, 'Weight1': 0.0, 'Weight1Unit': None, 'Weight2': 0.0, 'Weight2Unit': None, 'ItemUoMPackageCollection': []}, {'UoMType': 'iutPurchasing', 'UoMEntry': 1, 'DefaultBarcode': 0, 'DefaultPackage': None, 'Length1': 0.0, 'Length1Unit': None, 'Length2': 0.0, 'Length2Unit': None, 'Width1': 0.0, 'Width1Unit': None, 'Width2': 0.0, 'Width2Unit': None, 'Height1': 0.0, 'Height1Unit': None, 'Height2': 0.0, 'Height2Unit': None, 'Volume': 0.0, 'VolumeUnit': 2, 'Weight1': 0.0, 'Weight1Unit': None, 'Weight2': 0.0, 'Weight2Unit': None, 'ItemUoMPackageCollection': []}, {'UoMType': 'iutPurchasing', 'UoMEntry': 8, 'DefaultBarcode': None, 'DefaultPackage': None, 'Length1': 0.0, 'Length1Unit': None, 'Length2': 0.0, 'Length2Unit': None, 'Width1': 0.0, 'Width1Unit': None, 'Width2': 0.0, 'Width2Unit': None, 'Height1': 0.0, 'Height1Unit': None, 'Height2': 0.0, 'Height2Unit': None, 'Volume': 0.0, 'VolumeUnit': 4, 'Weight1': 0.0, 'Weight1Unit': None, 'Weight2': 0.0, 'Weight2Unit': None, 'ItemUoMPackageCollection': []}, {'UoMType': 'iutSales', 'UoMEntry': 1, 'DefaultBarcode': 0, 'DefaultPackage': None, 'Length1': 0.0, 'Length1Unit': None, 'Length2': 0.0, 'Length2Unit': None, 'Width1': 0.0, 'Width1Unit': None, 'Width2': 0.0, 'Width2Unit': None, 'Height1': 0.0, 'Height1Unit': None, 'Height2': 0.0, 'Height2Unit': None, 'Volume': 0.0, 'VolumeUnit': 2, 'Weight1': 0.0, 'Weight1Unit': None, 'Weight2': 0.0, 'Weight2Unit': None, 'ItemUoMPackageCollection': []}, {'UoMType': 'iutSales', 'UoMEntry': 8, 'DefaultBarcode': None, 'DefaultPackage': None, 'Length1': 0.0, 'Length1Unit': None, 'Length2': 0.0, 'Length2Unit': None, 'Width1': 0.0, 'Width1Unit': None, 'Width2': 0.0, 'Width2Unit': None, 'Height1': 0.0, 'Height1Unit': None, 'Height2': 0.0, 'Height2Unit': None, 'Volume': 0.0, 'VolumeUnit': 4, 'Weight1': 0.0, 'Weight1Unit': None, 'Weight2': 0.0, 'Weight2Unit': None, 'ItemUoMPackageCollection': []}], 'ItemBarCodeCollection': [], 'ItemIntrastatExtension': {'ItemCode': 'ACC-0000004', 'CommodityCode': None, 'SupplementaryUnit': None, 'FactorOfSupplementaryUnit': 0.0, 'ImportRegionState': 0, 'ExportRegionState': 0, 'ImportNatureOfTransaction': None, 'ExportNatureOfTransaction': None, 'ImportStatisticalProcedure': None, 'ExportStatisticalProcedure': None, 'CountryOfOrigin': None, 'ServiceCode': None, 'Type': 'dDocument_Items', 'ServiceSupplyMethod': 'ssmImmediate', 'ServicePaymentMethod': 'spmOther', 'ImportRegionCountry': 'GB', 'ExportRegionCountry': 'GB', 'UseWeightInCalculation': 'tYES', 'IntrastatRelevant': 'tNO', 'StatisticalCode': None}}, {'ItemCode': 'ACC-0000005', 'ItemName': 'Earring Stand ( Fabric Holder ) 7.5*7.5 CM base + 7.5 CM Heigh', 'ForeignName': None, 'ItemsGroupCode': 110, 'CustomsGroupCode': -1, 'SalesVATGroup': 'X0', 'BarCode': None, 'VatLiable': 'tYES', 'PurchaseItem': 'tYES', 'SalesItem': 'tNO', 'InventoryItem': 'tYES', 'IncomeAccount': None, 'ExemptIncomeAccount': None, 'ExpanseAccount': None, 'Mainsupplier': None, 'SupplierCatalogNo': None, 'DesiredInventory': 0.0, 'MinInventory': 0.0, 'Picture': None, 'User_Text': None, 'SerialNum': None, 'CommissionPercent': 0.0, 'CommissionSum': 0.0, 'CommissionGroup': 0, 'TreeType': 'iNotATree', 'AssetItem': 'tNO', 'DataExportCode': None, 'Manufacturer': -1, 'QuantityOnStock': 50.0, 'QuantityOrderedFromVendors': 0.0, 'QuantityOrderedByCustomers': 0.0, 'ManageSerialNumbers': 'tNO', 'ManageBatchNumbers': 'tNO', 'Valid': 'tYES', 'ValidFrom': None, 'ValidTo': None, 'ValidRemarks': None, 'Frozen': 'tNO', 'FrozenFrom': None, 'FrozenTo': None, 'FrozenRemarks': None, 'SalesUnit': None, 'SalesItemsPerUnit': 1.0, 'SalesPackagingUnit': None, 'SalesQtyPerPackUnit': 1.0, 'SalesUnitLength': None, 'SalesLengthUnit': None, 'SalesUnitWidth': None, 'SalesWidthUnit': None, 'SalesUnitHeight': None, 'SalesHeightUnit': None, 'SalesUnitVolume': 0.0, 'SalesVolumeUnit': 4, 'SalesUnitWeight': None, 'SalesWeightUnit': None, 'PurchaseUnit': None, 'PurchaseItemsPerUnit': 1.0, 'PurchasePackagingUnit': None, 'PurchaseQtyPerPackUnit': 1.0, 'PurchaseUnitLength': None, 'PurchaseLengthUnit': None, 'PurchaseUnitWidth': None, 'PurchaseWidthUnit': None, 'PurchaseUnitHeight': None, 'PurchaseHeightUnit': None, 'PurchaseUnitVolume': 0.0, 'PurchaseVolumeUnit': 4, 'PurchaseUnitWeight': None, 'PurchaseWeightUnit': None, 'PurchaseVATGroup': 'X1', 'SalesFactor1': 1.0, 'SalesFactor2': 1.0, 'SalesFactor3': 1.0, 'SalesFactor4': 1.0, 'PurchaseFactor1': 1.0, 'PurchaseFactor2': 1.0, 'PurchaseFactor3': 1.0, 'PurchaseFactor4': 1.0, 'MovingAveragePrice': 0.0, 'ForeignRevenuesAccount': None, 'ECRevenuesAccount': None, 'ForeignExpensesAccount': None, 'ECExpensesAccount': None, 'AvgStdPrice': 0.0, 'DefaultWarehouse': None, 'ShipType': None, 'GLMethod': 'glm_ItemClass', 'TaxType': 'tt_Yes', 'MaxInventory': 0.0, 'ManageStockByWarehouse': 'tNO', 'PurchaseHeightUnit1': None, 'PurchaseUnitHeight1': None, 'PurchaseLengthUnit1': None, 'PurchaseUnitLength1': None, 'PurchaseWeightUnit1': None, 'PurchaseUnitWeight1': None, 'PurchaseWidthUnit1': None, 'PurchaseUnitWidth1': None, 'SalesHeightUnit1': None, 'SalesUnitHeight1': None, 'SalesLengthUnit1': None, 'SalesUnitLength1': None, 'SalesWeightUnit1': None, 'SalesUnitWeight1': None, 'SalesWidthUnit1': None, 'SalesUnitWidth1': None, 'ForceSelectionOfSerialNumber': 'tYES', 'ManageSerialNumbersOnReleaseOnly': 'tNO', 'WTLiable': 'tNO', 'CostAccountingMethod': 'bis_MovingAverage', 'SWW': None, 'WarrantyTemplate': '', 'IndirectTax': 'tNO', 'ArTaxCode': None, 'ApTaxCode': None, 'BaseUnitName': None, 'ItemCountryOrg': None, 'IssueMethod': 'im_Backflush', 'SRIAndBatchManageMethod': 'bomm_OnEveryTransaction', 'IsPhantom': 'tNO', 'InventoryUOM': 'Piece', 'PlanningSystem': 'bop_None', 'ProcurementMethod': 'bom_Buy', 'ComponentWarehouse': 'bomcw_BOM', 'OrderIntervals': None, 'OrderMultiple': 0.0, 'LeadTime': None, 'MinOrderQuantity': 0.0, 'ItemType': 'itItems', 'ItemClass': 'itcMaterial', 'OutgoingServiceCode': -1, 'IncomingServiceCode': -1, 'ServiceGroup': -1, 'NCMCode': -1, 'MaterialType': 'mt_FinishedGoods', 'MaterialGroup': -1, 'ProductSource': '', 'Properties1': 'tNO', 'Properties2': 'tNO', 'Properties3': 'tNO', 'Properties4': 'tNO', 'Properties5': 'tNO', 'Properties6': 'tNO', 'Properties7': 'tNO', 'Properties8': 'tNO', 'Properties9': 'tNO', 'Properties10': 'tNO', 'Properties11': 'tNO', 'Properties12': 'tNO', 'Properties13': 'tNO', 'Properties14': 'tNO', 'Properties15': 'tNO', 'Properties16': 'tNO', 'Properties17': 'tNO', 'Properties18': 'tNO', 'Properties19': 'tNO', 'Properties20': 'tNO', 'Properties21': 'tNO', 'Properties22': 'tNO', 'Properties23': 'tNO', 'Properties24': 'tNO', 'Properties25': 'tNO', 'Properties26': 'tNO', 'Properties27': 'tNO', 'Properties28': 'tNO', 'Properties29': 'tNO', 'Properties30': 'tNO', 'Properties31': 'tNO', 'Properties32': 'tNO', 'Properties33': 'tNO', 'Properties34': 'tNO', 'Properties35': 'tNO', 'Properties36': 'tNO', 'Properties37': 'tNO', 'Properties38': 'tNO', 'Properties39': 'tNO', 'Properties40': 'tNO', 'Properties41': 'tNO', 'Properties42': 'tNO', 'Properties43': 'tNO', 'Properties44': 'tNO', 'Properties45': 'tNO', 'Properties46': 'tNO', 'Properties47': 'tNO', 'Properties48': 'tNO', 'Properties49': 'tNO', 'Properties50': 'tNO', 'Properties51': 'tNO', 'Properties52': 'tNO', 'Properties53': 'tNO', 'Properties54': 'tNO', 'Properties55': 'tNO', 'Properties56': 'tNO', 'Properties57': 'tNO', 'Properties58': 'tNO', 'Properties59': 'tNO', 'Properties60': 'tNO', 'Properties61': 'tNO', 'Properties62': 'tNO', 'Properties63': 'tNO', 'Properties64': 'tNO', 'AutoCreateSerialNumbersOnRelease': 'tNO', 'DNFEntry': -1, 'GTSItemSpec': None, 'GTSItemTaxCategory': None, 'FuelID': None, 'BeverageTableCode': '', 'BeverageGroupCode': '', 'BeverageCommercialBrandCode': None, 'Series': 119, 'ToleranceDays': None, 'TypeOfAdvancedRules': 'toarGeneral', 'IssuePrimarilyBy': 'ipbBinLocations', 'NoDiscounts': 'tNO', 'AssetClass': '', 'AssetGroup': '', 'InventoryNumber': '', 'Technician': None, 'Employee': None, 'Location': None, 'AssetStatus': 'New', 'CapitalizationDate': None, 'StatisticalAsset': 'tNO', 'Cession': 'tNO', 'DeactivateAfterUsefulLife': 'tNO', 'ManageByQuantity': 'tNO', 'UoMGroupEntry': 1, 'InventoryUoMEntry': 1, 'DefaultSalesUoMEntry': None, 'DefaultPurchasingUoMEntry': None, 'DepreciationGroup': None, 'AssetSerialNumber': '', 'InventoryWeight': None, 'InventoryWeightUnit': None, 'InventoryWeight1': None, 'InventoryWeightUnit1': None, 'DefaultCountingUnit': 'Piece', 'CountingItemsPerUnit': 1.0, 'DefaultCountingUoMEntry': 1, 'Excisable': 'tNO', 'ChapterID': -1, 'ScsCode': None, 'SpProdType': None, 'ProdStdCost': 0.0, 'InCostRollup': 'tYES', 'VirtualAssetItem': 'tNO', 'EnforceAssetSerialNumbers': 'tNO', 'AttachmentEntry': None, 'LinkedResource': None, 'UpdateDate': '2025-01-26', 'UpdateTime': '09:40:52', 'GSTRelevnt': 'tNO', 'SACEntry': -1, 'GSTTaxCategory': 'gtc_Regular', 'ServiceCategoryEntry': -1, 'CapitalGoodsOnHoldPercent': 0.0, 'CapitalGoodsOnHoldLimit': 0.0, 'AssessableValue': 0.0, 'AssVal4WTR': 0.0, 'SOIExcisable': 'se_NotExcisable', 'TNVED': None, 'ImportedItem': 'tNO', 'PricingUnit': 1, 'CreateDate': '2025-01-26', 'CreateTime': '09:40:52', 'U_MfgH': None, 'U_Collection': None, 'U_OldCode': None, 'U_ItemsCat': None, 'U_NumberofSet': None, 'U_NileCode': None, 'U_TransferProductionLinkExclude': None, 'U_SBO_CodeType': 'GS1', 'U_SBO_EGSCode': None, 'U_ShopifyColor': None, 'U_SalesChannel': None, 'U_ShopifyItemIDLocal': None, 'U_ShopifyItemIDInternational': None, 'U_ParentCommercialName': None, 'ItemPrices': [{'PriceList': 1, 'Price': 0.0, 'Currency': None, 'AdditionalPrice1': 0.0, 'AdditionalCurrency1': None, 'AdditionalPrice2': 0.0, 'AdditionalCurrency2': None, 'BasePriceList': 1, 'Factor': 1.0, 'UoMPrices': []}, {'PriceList': 2, 'Price': 0.0, 'Currency': None, 'AdditionalPrice1': 0.0, 'AdditionalCurrency1': None, 'AdditionalPrice2': 0.0, 'AdditionalCurrency2': None, 'BasePriceList': 1, 'Factor': 0.4, 'UoMPrices': []}, {'PriceList': 3, 'Price': 0.0, 'Currency': None, 'AdditionalPrice1': 0.0, 'AdditionalCurrency1': None, 'AdditionalPrice2': 0.0, 'AdditionalCurrency2': None, 'BasePriceList': 3, 'Factor': 1.0, 'UoMPrices': []}, {'PriceList': 4, 'Price': 0.0, 'Currency': None, 'AdditionalPrice1': 0.0, 'AdditionalCurrency1': None, 'AdditionalPrice2': 0.0, 'AdditionalCurrency2': None, 'BasePriceList': 4, 'Factor': 1.0, 'UoMPrices': []}, {'PriceList': 5, 'Price': 0.0, 'Currency': None, 'AdditionalPrice1': 0.0, 'AdditionalCurrency1': None, 'AdditionalPrice2': 0.0, 'AdditionalCurrency2': None, 'BasePriceList': 5, 'Factor': 1.0, 'UoMPrices': []}, {'PriceList': 6, 'Price': 0.0, 'Currency': None, 'AdditionalPrice1': 0.0, 'AdditionalCurrency1': None, 'AdditionalPrice2': 0.0, 'AdditionalCurrency2': None, 'BasePriceList': 6, 'Factor': 1.0, 'UoMPrices': []}, {'PriceList': 7, 'Price': 0.0, 'Currency': None, 'AdditionalPrice1': 0.0, 'AdditionalCurrency1': None, 'AdditionalPrice2': 0.0, 'AdditionalCurrency2': None, 'BasePriceList': 7, 'Factor': 1.0, 'UoMPrices': []}, {'PriceList': 8, 'Price': 0.0, 'Currency': None, 'AdditionalPrice1': 0.0, 'AdditionalCurrency1': None, 'AdditionalPrice2': 0.0, 'AdditionalCurrency2': None, 'BasePriceList': 8, 'Factor': 1.0, 'UoMPrices': []}, {'PriceList': 9, 'Price': 0.0, 'Currency': None, 'AdditionalPrice1': 0.0, 'AdditionalCurrency1': None, 'AdditionalPrice2': 0.0, 'AdditionalCurrency2': None, 'BasePriceList': 9, 'Factor': 1.0, 'UoMPrices': []}, {'PriceList': 10, 'Price': 0.0, 'Currency': None, 'AdditionalPrice1': 0.0, 'AdditionalCurrency1': None, 'AdditionalPrice2': 0.0, 'AdditionalCurrency2': None, 'BasePriceList': 10, 'Factor': 1.0, 'UoMPrices': []}], 'ItemWarehouseInfoCollection': [{'MinimalStock': 0.0, 'MaximalStock': 0.0, 'MinimalOrder': 0.0, 'StandardAveragePrice': 180.0, 'Locked': 'tNO', 'InventoryAccount': None, 'CostAccount': None, 'TransferAccount': None, 'RevenuesAccount': None, 'VarienceAccount': None, 'DecreasingAccount': None, 'IncreasingAccount': None, 'ReturningAccount': None, 'ExpensesAccount': None, 'EURevenuesAccount': None, 'EUExpensesAccount': None, 'ForeignRevenueAcc': None, 'ForeignExpensAcc': None, 'ExemptIncomeAcc': None, 'PriceDifferenceAcc': None, 'WarehouseCode': '5A', 'InStock': 25.0, 'Committed': 0.0, 'Ordered': 0.0, 'CountedQuantity': 0.0, 'WasCounted': 'tNO', 'UserSignature': 50, 'Counted': 0.0, 'ExpenseClearingAct': None, 'PurchaseCreditAcc': None, 'EUPurchaseCreditAcc': None, 'ForeignPurchaseCreditAcc': None, 'SalesCreditAcc': None, 'SalesCreditEUAcc': None, 'ExemptedCredits': None, 'SalesCreditForeignAcc': None, 'ExpenseOffsettingAccount': None, 'WipAccount': None, 'ExchangeRateDifferencesAcct': None, 'GoodsClearingAcct': None, 'NegativeInventoryAdjustmentAccount': None, 'CostInflationOffsetAccount': None, 'GLDecreaseAcct': None, 'GLIncreaseAcct': None, 'PAReturnAcct': None, 'PurchaseAcct': None, 'PurchaseOffsetAcct': None, 'ShippedGoodsAccount': None, 'StockInflationOffsetAccount': None, 'StockInflationAdjustAccount': None, 'VATInRevenueAccount': None, 'WipVarianceAccount': None, 'CostInflationAccount': None, 'WHIncomingCenvatAccount': None, 'WHOutgoingCenvatAccount': None, 'StockInTransitAccount': None, 'WipOffsetProfitAndLossAccount': None, 'InventoryOffsetProfitAndLossAccount': None, 'DefaultBin': None, 'DefaultBinEnforced': 'tNO', 'PurchaseBalanceAccount': None, 'ItemCode': 'ACC-0000005', 'ItemCycleCounts': []}, {'MinimalStock': 0.0, 'MaximalStock': 0.0, 'MinimalOrder': 0.0, 'StandardAveragePrice': 180.0, 'Locked': 'tNO', 'InventoryAccount': None, 'CostAccount': None, 'TransferAccount': None, 'RevenuesAccount': None, 'VarienceAccount': None, 'DecreasingAccount': None, 'IncreasingAccount': None, 'ReturningAccount': None, 'ExpensesAccount': None, 'EURevenuesAccount': None, 'EUExpensesAccount': None, 'ForeignRevenueAcc': None, 'ForeignExpensAcc': None, 'ExemptIncomeAcc': None, 'PriceDifferenceAcc': None, 'WarehouseCode': 'Arkan', 'InStock': 25.0, 'Committed': 0.0, 'Ordered': 0.0, 'CountedQuantity': 0.0, 'WasCounted': 'tNO', 'UserSignature': 50, 'Counted': 0.0, 'ExpenseClearingAct': None, 'PurchaseCreditAcc': None, 'EUPurchaseCreditAcc': None, 'ForeignPurchaseCreditAcc': None, 'SalesCreditAcc': None, 'SalesCreditEUAcc': None, 'ExemptedCredits': None, 'SalesCreditForeignAcc': None, 'ExpenseOffsettingAccount': None, 'WipAccount': None, 'ExchangeRateDifferencesAcct': None, 'GoodsClearingAcct': None, 'NegativeInventoryAdjustmentAccount': None, 'CostInflationOffsetAccount': None, 'GLDecreaseAcct': None, 'GLIncreaseAcct': None, 'PAReturnAcct': None, 'PurchaseAcct': None, 'PurchaseOffsetAcct': None, 'ShippedGoodsAccount': None, 'StockInflationOffsetAccount': None, 'StockInflationAdjustAccount': None, 'VATInRevenueAccount': None, 'WipVarianceAccount': None, 'CostInflationAccount': None, 'WHIncomingCenvatAccount': None, 'WHOutgoingCenvatAccount': None, 'StockInTransitAccount': None, 'WipOffsetProfitAndLossAccount': None, 'InventoryOffsetProfitAndLossAccount': None, 'DefaultBin': None, 'DefaultBinEnforced': 'tNO', 'PurchaseBalanceAccount': None, 'ItemCode': 'ACC-0000005', 'ItemCycleCounts': []}, {'MinimalStock': 0.0, 'MaximalStock': 0.0, 'MinimalOrder': 0.0, 'StandardAveragePrice': 0.0, 'Locked': 'tNO', 'InventoryAccount': None, 'CostAccount': None, 'TransferAccount': None, 'RevenuesAccount': None, 'VarienceAccount': None, 'DecreasingAccount': None, 'IncreasingAccount': None, 'ReturningAccount': None, 'ExpensesAccount': None, 'EURevenuesAccount': None, 'EUExpensesAccount': None, 'ForeignRevenueAcc': None, 'ForeignExpensAcc': None, 'ExemptIncomeAcc': None, 'PriceDifferenceAcc': None, 'WarehouseCode': 'DIP', 'InStock': 0.0, 'Committed': 0.0, 'Ordered': 0.0, 'CountedQuantity': 0.0, 'WasCounted': 'tNO', 'UserSignature': 50, 'Counted': 0.0, 'ExpenseClearingAct': None, 'PurchaseCreditAcc': None, 'EUPurchaseCreditAcc': None, 'ForeignPurchaseCreditAcc': None, 'SalesCreditAcc': None, 'SalesCreditEUAcc': None, 'ExemptedCredits': None, 'SalesCreditForeignAcc': None, 'ExpenseOffsettingAccount': None, 'WipAccount': None, 'ExchangeRateDifferencesAcct': None, 'GoodsClearingAcct': None, 'NegativeInventoryAdjustmentAccount': None, 'CostInflationOffsetAccount': None, 'GLDecreaseAcct': None, 'GLIncreaseAcct': None, 'PAReturnAcct': None, 'PurchaseAcct': None, 'PurchaseOffsetAcct': None, 'ShippedGoodsAccount': None, 'StockInflationOffsetAccount': None, 'StockInflationAdjustAccount': None, 'VATInRevenueAccount': None, 'WipVarianceAccount': None, 'CostInflationAccount': None, 'WHIncomingCenvatAccount': None, 'WHOutgoingCenvatAccount': None, 'StockInTransitAccount': None, 'WipOffsetProfitAndLossAccount': None, 'InventoryOffsetProfitAndLossAccount': None, 'DefaultBin': None, 'DefaultBinEnforced': 'tNO', 'PurchaseBalanceAccount': None, 'ItemCode': 'ACC-0000005', 'ItemCycleCounts': []}, {'MinimalStock': 0.0, 'MaximalStock': 0.0, 'MinimalOrder': 0.0, 'StandardAveragePrice': 180.0, 'Locked': 'tNO', 'InventoryAccount': None, 'CostAccount': None, 'TransferAccount': None, 'RevenuesAccount': None, 'VarienceAccount': None, 'DecreasingAccount': None, 'IncreasingAccount': None, 'ReturningAccount': None, 'ExpensesAccount': None, 'EURevenuesAccount': None, 'EUExpensesAccount': None, 'ForeignRevenueAcc': None, 'ForeignExpensAcc': None, 'ExemptIncomeAcc': None, 'PriceDifferenceAcc': None, 'WarehouseCode': 'INC', 'InStock': 0.0, 'Committed': 0.0, 'Ordered': 0.0, 'CountedQuantity': 0.0, 'WasCounted': 'tNO', 'UserSignature': 50, 'Counted': 0.0, 'ExpenseClearingAct': None, 'PurchaseCreditAcc': None, 'EUPurchaseCreditAcc': None, 'ForeignPurchaseCreditAcc': None, 'SalesCreditAcc': None, 'SalesCreditEUAcc': None, 'ExemptedCredits': None, 'SalesCreditForeignAcc': None, 'ExpenseOffsettingAccount': None, 'WipAccount': None, 'ExchangeRateDifferencesAcct': None, 'GoodsClearingAcct': None, 'NegativeInventoryAdjustmentAccount': None, 'CostInflationOffsetAccount': None, 'GLDecreaseAcct': None, 'GLIncreaseAcct': None, 'PAReturnAcct': None, 'PurchaseAcct': None, 'PurchaseOffsetAcct': None, 'ShippedGoodsAccount': None, 'StockInflationOffsetAccount': None, 'StockInflationAdjustAccount': None, 'VATInRevenueAccount': None, 'WipVarianceAccount': None, 'CostInflationAccount': None, 'WHIncomingCenvatAccount': None, 'WHOutgoingCenvatAccount': None, 'StockInTransitAccount': None, 'WipOffsetProfitAndLossAccount': None, 'InventoryOffsetProfitAndLossAccount': None, 'DefaultBin': None, 'DefaultBinEnforced': 'tNO', 'PurchaseBalanceAccount': None, 'ItemCode': 'ACC-0000005', 'ItemCycleCounts': []}, {'MinimalStock': 0.0, 'MaximalStock': 0.0, 'MinimalOrder': 0.0, 'StandardAveragePrice': 0.0, 'Locked': 'tNO', 'InventoryAccount': None, 'CostAccount': None, 'TransferAccount': None, 'RevenuesAccount': None, 'VarienceAccount': None, 'DecreasingAccount': None, 'IncreasingAccount': None, 'ReturningAccount': None, 'ExpensesAccount': None, 'EURevenuesAccount': None, 'EUExpensesAccount': None, 'ForeignRevenueAcc': None, 'ForeignExpensAcc': None, 'ExemptIncomeAcc': None, 'PriceDifferenceAcc': None, 'WarehouseCode': 'ONL', 'InStock': 0.0, 'Committed': 0.0, 'Ordered': 0.0, 'CountedQuantity': 0.0, 'WasCounted': 'tNO', 'UserSignature': 50, 'Counted': 0.0, 'ExpenseClearingAct': None, 'PurchaseCreditAcc': None, 'EUPurchaseCreditAcc': None, 'ForeignPurchaseCreditAcc': None, 'SalesCreditAcc': None, 'SalesCreditEUAcc': None, 'ExemptedCredits': None, 'SalesCreditForeignAcc': None, 'ExpenseOffsettingAccount': None, 'WipAccount': None, 'ExchangeRateDifferencesAcct': None, 'GoodsClearingAcct': None, 'NegativeInventoryAdjustmentAccount': None, 'CostInflationOffsetAccount': None, 'GLDecreaseAcct': None, 'GLIncreaseAcct': None, 'PAReturnAcct': None, 'PurchaseAcct': None, 'PurchaseOffsetAcct': None, 'ShippedGoodsAccount': None, 'StockInflationOffsetAccount': None, 'StockInflationAdjustAccount': None, 'VATInRevenueAccount': None, 'WipVarianceAccount': None, 'CostInflationAccount': None, 'WHIncomingCenvatAccount': None, 'WHOutgoingCenvatAccount': None, 'StockInTransitAccount': None, 'WipOffsetProfitAndLossAccount': None, 'InventoryOffsetProfitAndLossAccount': None, 'DefaultBin': None, 'DefaultBinEnforced': 'tNO', 'PurchaseBalanceAccount': None, 'ItemCode': 'ACC-0000005', 'ItemCycleCounts': []}, {'MinimalStock': 0.0, 'MaximalStock': 0.0, 'MinimalOrder': 0.0, 'StandardAveragePrice': 0.0, 'Locked': 'tNO', 'InventoryAccount': None, 'CostAccount': None, 'TransferAccount': None, 'RevenuesAccount': None, 'VarienceAccount': None, 'DecreasingAccount': None, 'IncreasingAccount': None, 'ReturningAccount': None, 'ExpensesAccount': None, 'EURevenuesAccount': None, 'EUExpensesAccount': None, 'ForeignRevenueAcc': None, 'ForeignExpensAcc': None, 'ExemptIncomeAcc': None, 'PriceDifferenceAcc': None, 'WarehouseCode': 'PHO', 'InStock': 0.0, 'Committed': 0.0, 'Ordered': 0.0, 'CountedQuantity': 0.0, 'WasCounted': 'tNO', 'UserSignature': 50, 'Counted': 0.0, 'ExpenseClearingAct': None, 'PurchaseCreditAcc': None, 'EUPurchaseCreditAcc': None, 'ForeignPurchaseCreditAcc': None, 'SalesCreditAcc': None, 'SalesCreditEUAcc': None, 'ExemptedCredits': None, 'SalesCreditForeignAcc': None, 'ExpenseOffsettingAccount': None, 'WipAccount': None, 'ExchangeRateDifferencesAcct': None, 'GoodsClearingAcct': None, 'NegativeInventoryAdjustmentAccount': None, 'CostInflationOffsetAccount': None, 'GLDecreaseAcct': None, 'GLIncreaseAcct': None, 'PAReturnAcct': None, 'PurchaseAcct': None, 'PurchaseOffsetAcct': None, 'ShippedGoodsAccount': None, 'StockInflationOffsetAccount': None, 'StockInflationAdjustAccount': None, 'VATInRevenueAccount': None, 'WipVarianceAccount': None, 'CostInflationAccount': None, 'WHIncomingCenvatAccount': None, 'WHOutgoingCenvatAccount': None, 'StockInTransitAccount': None, 'WipOffsetProfitAndLossAccount': None, 'InventoryOffsetProfitAndLossAccount': None, 'DefaultBin': None, 'DefaultBinEnforced': 'tNO', 'PurchaseBalanceAccount': None, 'ItemCode': 'ACC-0000005', 'ItemCycleCounts': []}, {'MinimalStock': 0.0, 'MaximalStock': 0.0, 'MinimalOrder': 0.0, 'StandardAveragePrice': 0.0, 'Locked': 'tNO', 'InventoryAccount': None, 'CostAccount': None, 'TransferAccount': None, 'RevenuesAccount': None, 'VarienceAccount': None, 'DecreasingAccount': None, 'IncreasingAccount': None, 'ReturningAccount': None, 'ExpensesAccount': None, 'EURevenuesAccount': None, 'EUExpensesAccount': None, 'ForeignRevenueAcc': None, 'ForeignExpensAcc': None, 'ExemptIncomeAcc': None, 'PriceDifferenceAcc': None, 'WarehouseCode': 'PHO-EX', 'InStock': 0.0, 'Committed': 0.0, 'Ordered': 0.0, 'CountedQuantity': 0.0, 'WasCounted': 'tNO', 'UserSignature': 1, 'Counted': 0.0, 'ExpenseClearingAct': None, 'PurchaseCreditAcc': None, 'EUPurchaseCreditAcc': None, 'ForeignPurchaseCreditAcc': None, 'SalesCreditAcc': None, 'SalesCreditEUAcc': None, 'ExemptedCredits': None, 'SalesCreditForeignAcc': None, 'ExpenseOffsettingAccount': None, 'WipAccount': None, 'ExchangeRateDifferencesAcct': None, 'GoodsClearingAcct': None, 'NegativeInventoryAdjustmentAccount': None, 'CostInflationOffsetAccount': None, 'GLDecreaseAcct': None, 'GLIncreaseAcct': None, 'PAReturnAcct': None, 'PurchaseAcct': None, 'PurchaseOffsetAcct': None, 'ShippedGoodsAccount': None, 'StockInflationOffsetAccount': None, 'StockInflationAdjustAccount': None, 'VATInRevenueAccount': None, 'WipVarianceAccount': None, 'CostInflationAccount': None, 'WHIncomingCenvatAccount': None, 'WHOutgoingCenvatAccount': None, 'StockInTransitAccount': None, 'WipOffsetProfitAndLossAccount': None, 'InventoryOffsetProfitAndLossAccount': None, 'DefaultBin': None, 'DefaultBinEnforced': 'tNO', 'PurchaseBalanceAccount': None, 'ItemCode': 'ACC-0000005', 'ItemCycleCounts': []}, {'MinimalStock': 0.0, 'MaximalStock': 0.0, 'MinimalOrder': 0.0, 'StandardAveragePrice': 0.0, 'Locked': 'tNO', 'InventoryAccount': None, 'CostAccount': None, 'TransferAccount': None, 'RevenuesAccount': None, 'VarienceAccount': None, 'DecreasingAccount': None, 'IncreasingAccount': None, 'ReturningAccount': None, 'ExpensesAccount': None, 'EURevenuesAccount': None, 'EUExpensesAccount': None, 'ForeignRevenueAcc': None, 'ForeignExpensAcc': None, 'ExemptIncomeAcc': None, 'PriceDifferenceAcc': None, 'WarehouseCode': 'PHO-IN', 'InStock': 0.0, 'Committed': 0.0, 'Ordered': 0.0, 'CountedQuantity': 0.0, 'WasCounted': 'tNO', 'UserSignature': 1, 'Counted': 0.0, 'ExpenseClearingAct': None, 'PurchaseCreditAcc': None, 'EUPurchaseCreditAcc': None, 'ForeignPurchaseCreditAcc': None, 'SalesCreditAcc': None, 'SalesCreditEUAcc': None, 'ExemptedCredits': None, 'SalesCreditForeignAcc': None, 'ExpenseOffsettingAccount': None, 'WipAccount': None, 'ExchangeRateDifferencesAcct': None, 'GoodsClearingAcct': None, 'NegativeInventoryAdjustmentAccount': None, 'CostInflationOffsetAccount': None, 'GLDecreaseAcct': None, 'GLIncreaseAcct': None, 'PAReturnAcct': None, 'PurchaseAcct': None, 'PurchaseOffsetAcct': None, 'ShippedGoodsAccount': None, 'StockInflationOffsetAccount': None, 'StockInflationAdjustAccount': None, 'VATInRevenueAccount': None, 'WipVarianceAccount': None, 'CostInflationAccount': None, 'WHIncomingCenvatAccount': None, 'WHOutgoingCenvatAccount': None, 'StockInTransitAccount': None, 'WipOffsetProfitAndLossAccount': None, 'InventoryOffsetProfitAndLossAccount': None, 'DefaultBin': None, 'DefaultBinEnforced': 'tNO', 'PurchaseBalanceAccount': None, 'ItemCode': 'ACC-0000005', 'ItemCycleCounts': []}, {'MinimalStock': 0.0, 'MaximalStock': 0.0, 'MinimalOrder': 0.0, 'StandardAveragePrice': 0.0, 'Locked': 'tNO', 'InventoryAccount': None, 'CostAccount': None, 'TransferAccount': None, 'RevenuesAccount': None, 'VarienceAccount': None, 'DecreasingAccount': None, 'IncreasingAccount': None, 'ReturningAccount': None, 'ExpensesAccount': None, 'EURevenuesAccount': None, 'EUExpensesAccount': None, 'ForeignRevenueAcc': None, 'ForeignExpensAcc': None, 'ExemptIncomeAcc': None, 'PriceDifferenceAcc': None, 'WarehouseCode': 'RTW', 'InStock': 0.0, 'Committed': 0.0, 'Ordered': 0.0, 'CountedQuantity': 0.0, 'WasCounted': 'tNO', 'UserSignature': 50, 'Counted': 0.0, 'ExpenseClearingAct': None, 'PurchaseCreditAcc': None, 'EUPurchaseCreditAcc': None, 'ForeignPurchaseCreditAcc': None, 'SalesCreditAcc': None, 'SalesCreditEUAcc': None, 'ExemptedCredits': None, 'SalesCreditForeignAcc': None, 'ExpenseOffsettingAccount': None, 'WipAccount': None, 'ExchangeRateDifferencesAcct': None, 'GoodsClearingAcct': None, 'NegativeInventoryAdjustmentAccount': None, 'CostInflationOffsetAccount': None, 'GLDecreaseAcct': None, 'GLIncreaseAcct': None, 'PAReturnAcct': None, 'PurchaseAcct': None, 'PurchaseOffsetAcct': None, 'ShippedGoodsAccount': None, 'StockInflationOffsetAccount': None, 'StockInflationAdjustAccount': None, 'VATInRevenueAccount': None, 'WipVarianceAccount': None, 'CostInflationAccount': None, 'WHIncomingCenvatAccount': None, 'WHOutgoingCenvatAccount': None, 'StockInTransitAccount': None, 'WipOffsetProfitAndLossAccount': None, 'InventoryOffsetProfitAndLossAccount': None, 'DefaultBin': None, 'DefaultBinEnforced': 'tNO', 'PurchaseBalanceAccount': None, 'ItemCode': 'ACC-0000005', 'ItemCycleCounts': []}, {'MinimalStock': 0.0, 'MaximalStock': 0.0, 'MinimalOrder': 0.0, 'StandardAveragePrice': 0.0, 'Locked': 'tNO', 'InventoryAccount': None, 'CostAccount': None, 'TransferAccount': None, 'RevenuesAccount': None, 'VarienceAccount': None, 'DecreasingAccount': None, 'IncreasingAccount': None, 'ReturningAccount': None, 'ExpensesAccount': None, 'EURevenuesAccount': None, 'EUExpensesAccount': None, 'ForeignRevenueAcc': None, 'ForeignExpensAcc': None, 'ExemptIncomeAcc': None, 'PriceDifferenceAcc': None, 'WarehouseCode': 'RTWH', 'InStock': 0.0, 'Committed': 0.0, 'Ordered': 0.0, 'CountedQuantity': 0.0, 'WasCounted': 'tNO', 'UserSignature': 1, 'Counted': 0.0, 'ExpenseClearingAct': None, 'PurchaseCreditAcc': None, 'EUPurchaseCreditAcc': None, 'ForeignPurchaseCreditAcc': None, 'SalesCreditAcc': None, 'SalesCreditEUAcc': None, 'ExemptedCredits': None, 'SalesCreditForeignAcc': None, 'ExpenseOffsettingAccount': None, 'WipAccount': None, 'ExchangeRateDifferencesAcct': None, 'GoodsClearingAcct': None, 'NegativeInventoryAdjustmentAccount': None, 'CostInflationOffsetAccount': None, 'GLDecreaseAcct': None, 'GLIncreaseAcct': None, 'PAReturnAcct': None, 'PurchaseAcct': None, 'PurchaseOffsetAcct': None, 'ShippedGoodsAccount': None, 'StockInflationOffsetAccount': None, 'StockInflationAdjustAccount': None, 'VATInRevenueAccount': None, 'WipVarianceAccount': None, 'CostInflationAccount': None, 'WHIncomingCenvatAccount': None, 'WHOutgoingCenvatAccount': None, 'StockInTransitAccount': None, 'WipOffsetProfitAndLossAccount': None, 'InventoryOffsetProfitAndLossAccount': None, 'DefaultBin': None, 'DefaultBinEnforced': 'tNO', 'PurchaseBalanceAccount': None, 'ItemCode': 'ACC-0000005', 'ItemCycleCounts': []}, {'MinimalStock': 0.0, 'MaximalStock': 0.0, 'MinimalOrder': 0.0, 'StandardAveragePrice': 0.0, 'Locked': 'tNO', 'InventoryAccount': None, 'CostAccount': None, 'TransferAccount': None, 'RevenuesAccount': None, 'VarienceAccount': None, 'DecreasingAccount': None, 'IncreasingAccount': None, 'ReturningAccount': None, 'ExpensesAccount': None, 'EURevenuesAccount': None, 'EUExpensesAccount': None, 'ForeignRevenueAcc': None, 'ForeignExpensAcc': None, 'ExemptIncomeAcc': None, 'PriceDifferenceAcc': None, 'WarehouseCode': 'SW', 'InStock': 0.0, 'Committed': 0.0, 'Ordered': 0.0, 'CountedQuantity': 0.0, 'WasCounted': 'tNO', 'UserSignature': 50, 'Counted': 0.0, 'ExpenseClearingAct': None, 'PurchaseCreditAcc': None, 'EUPurchaseCreditAcc': None, 'ForeignPurchaseCreditAcc': None, 'SalesCreditAcc': None, 'SalesCreditEUAcc': None, 'ExemptedCredits': None, 'SalesCreditForeignAcc': None, 'ExpenseOffsettingAccount': None, 'WipAccount': None, 'ExchangeRateDifferencesAcct': None, 'GoodsClearingAcct': None, 'NegativeInventoryAdjustmentAccount': None, 'CostInflationOffsetAccount': None, 'GLDecreaseAcct': None, 'GLIncreaseAcct': None, 'PAReturnAcct': None, 'PurchaseAcct': None, 'PurchaseOffsetAcct': None, 'ShippedGoodsAccount': None, 'StockInflationOffsetAccount': None, 'StockInflationAdjustAccount': None, 'VATInRevenueAccount': None, 'WipVarianceAccount': None, 'CostInflationAccount': None, 'WHIncomingCenvatAccount': None, 'WHOutgoingCenvatAccount': None, 'StockInTransitAccount': None, 'WipOffsetProfitAndLossAccount': None, 'InventoryOffsetProfitAndLossAccount': None, 'DefaultBin': None, 'DefaultBinEnforced': 'tNO', 'PurchaseBalanceAccount': None, 'ItemCode': 'ACC-0000005', 'ItemCycleCounts': []}, {'MinimalStock': 0.0, 'MaximalStock': 0.0, 'MinimalOrder': 0.0, 'StandardAveragePrice': 0.0, 'Locked': 'tNO', 'InventoryAccount': None, 'CostAccount': None, 'TransferAccount': None, 'RevenuesAccount': None, 'VarienceAccount': None, 'DecreasingAccount': None, 'IncreasingAccount': None, 'ReturningAccount': None, 'ExpensesAccount': None, 'EURevenuesAccount': None, 'EUExpensesAccount': None, 'ForeignRevenueAcc': None, 'ForeignExpensAcc': None, 'ExemptIncomeAcc': None, 'PriceDifferenceAcc': None, 'WarehouseCode': 'WLS', 'InStock': 0.0, 'Committed': 0.0, 'Ordered': 0.0, 'CountedQuantity': 0.0, 'WasCounted': 'tNO', 'UserSignature': 50, 'Counted': 0.0, 'ExpenseClearingAct': None, 'PurchaseCreditAcc': None, 'EUPurchaseCreditAcc': None, 'ForeignPurchaseCreditAcc': None, 'SalesCreditAcc': None, 'SalesCreditEUAcc': None, 'ExemptedCredits': None, 'SalesCreditForeignAcc': None, 'ExpenseOffsettingAccount': None, 'WipAccount': None, 'ExchangeRateDifferencesAcct': None, 'GoodsClearingAcct': None, 'NegativeInventoryAdjustmentAccount': None, 'CostInflationOffsetAccount': None, 'GLDecreaseAcct': None, 'GLIncreaseAcct': None, 'PAReturnAcct': None, 'PurchaseAcct': None, 'PurchaseOffsetAcct': None, 'ShippedGoodsAccount': None, 'StockInflationOffsetAccount': None, 'StockInflationAdjustAccount': None, 'VATInRevenueAccount': None, 'WipVarianceAccount': None, 'CostInflationAccount': None, 'WHIncomingCenvatAccount': None, 'WHOutgoingCenvatAccount': None, 'StockInTransitAccount': None, 'WipOffsetProfitAndLossAccount': None, 'InventoryOffsetProfitAndLossAccount': None, 'DefaultBin': None, 'DefaultBinEnforced': 'tNO', 'PurchaseBalanceAccount': None, 'ItemCode': 'ACC-0000005', 'ItemCycleCounts': []}, {'MinimalStock': 0.0, 'MaximalStock': 0.0, 'MinimalOrder': 0.0, 'StandardAveragePrice': 0.0, 'Locked': 'tNO', 'InventoryAccount': None, 'CostAccount': None, 'TransferAccount': None, 'RevenuesAccount': None, 'VarienceAccount': None, 'DecreasingAccount': None, 'IncreasingAccount': None, 'ReturningAccount': None, 'ExpensesAccount': None, 'EURevenuesAccount': None, 'EUExpensesAccount': None, 'ForeignRevenueAcc': None, 'ForeignExpensAcc': None, 'ExemptIncomeAcc': None, 'PriceDifferenceAcc': None, 'WarehouseCode': 'WW', 'InStock': 0.0, 'Committed': 0.0, 'Ordered': 0.0, 'CountedQuantity': 0.0, 'WasCounted': 'tNO', 'UserSignature': 50, 'Counted': 0.0, 'ExpenseClearingAct': None, 'PurchaseCreditAcc': None, 'EUPurchaseCreditAcc': None, 'ForeignPurchaseCreditAcc': None, 'SalesCreditAcc': None, 'SalesCreditEUAcc': None, 'ExemptedCredits': None, 'SalesCreditForeignAcc': None, 'ExpenseOffsettingAccount': None, 'WipAccount': None, 'ExchangeRateDifferencesAcct': None, 'GoodsClearingAcct': None, 'NegativeInventoryAdjustmentAccount': None, 'CostInflationOffsetAccount': None, 'GLDecreaseAcct': None, 'GLIncreaseAcct': None, 'PAReturnAcct': None, 'PurchaseAcct': None, 'PurchaseOffsetAcct': None, 'ShippedGoodsAccount': None, 'StockInflationOffsetAccount': None, 'StockInflationAdjustAccount': None, 'VATInRevenueAccount': None, 'WipVarianceAccount': None, 'CostInflationAccount': None, 'WHIncomingCenvatAccount': None, 'WHOutgoingCenvatAccount': None, 'StockInTransitAccount': None, 'WipOffsetProfitAndLossAccount': None, 'InventoryOffsetProfitAndLossAccount': None, 'DefaultBin': None, 'DefaultBinEnforced': 'tNO', 'PurchaseBalanceAccount': None, 'ItemCode': 'ACC-0000005', 'ItemCycleCounts': []}, {'MinimalStock': 0.0, 'MaximalStock': 0.0, 'MinimalOrder': 0.0, 'StandardAveragePrice': 0.0, 'Locked': 'tNO', 'InventoryAccount': None, 'CostAccount': None, 'TransferAccount': None, 'RevenuesAccount': None, 'VarienceAccount': None, 'DecreasingAccount': None, 'IncreasingAccount': None, 'ReturningAccount': None, 'ExpensesAccount': None, 'EURevenuesAccount': None, 'EUExpensesAccount': None, 'ForeignRevenueAcc': None, 'ForeignExpensAcc': None, 'ExemptIncomeAcc': None, 'PriceDifferenceAcc': None, 'WarehouseCode': 'WW-CON', 'InStock': 0.0, 'Committed': 0.0, 'Ordered': 0.0, 'CountedQuantity': 0.0, 'WasCounted': 'tNO', 'UserSignature': 50, 'Counted': 0.0, 'ExpenseClearingAct': None, 'PurchaseCreditAcc': None, 'EUPurchaseCreditAcc': None, 'ForeignPurchaseCreditAcc': None, 'SalesCreditAcc': None, 'SalesCreditEUAcc': None, 'ExemptedCredits': None, 'SalesCreditForeignAcc': None, 'ExpenseOffsettingAccount': None, 'WipAccount': None, 'ExchangeRateDifferencesAcct': None, 'GoodsClearingAcct': None, 'NegativeInventoryAdjustmentAccount': None, 'CostInflationOffsetAccount': None, 'GLDecreaseAcct': None, 'GLIncreaseAcct': None, 'PAReturnAcct': None, 'PurchaseAcct': None, 'PurchaseOffsetAcct': None, 'ShippedGoodsAccount': None, 'StockInflationOffsetAccount': None, 'StockInflationAdjustAccount': None, 'VATInRevenueAccount': None, 'WipVarianceAccount': None, 'CostInflationAccount': None, 'WHIncomingCenvatAccount': None, 'WHOutgoingCenvatAccount': None, 'StockInTransitAccount': None, 'WipOffsetProfitAndLossAccount': None, 'InventoryOffsetProfitAndLossAccount': None, 'DefaultBin': None, 'DefaultBinEnforced': 'tNO', 'PurchaseBalanceAccount': None, 'ItemCode': 'ACC-0000005', 'ItemCycleCounts': []}, {'MinimalStock': 0.0, 'MaximalStock': 0.0, 'MinimalOrder': 0.0, 'StandardAveragePrice': 0.0, 'Locked': 'tNO', 'InventoryAccount': None, 'CostAccount': None, 'TransferAccount': None, 'RevenuesAccount': None, 'VarienceAccount': None, 'DecreasingAccount': None, 'IncreasingAccount': None, 'ReturningAccount': None, 'ExpensesAccount': None, 'EURevenuesAccount': None, 'EUExpensesAccount': None, 'ForeignRevenueAcc': None, 'ForeignExpensAcc': None, 'ExemptIncomeAcc': None, 'PriceDifferenceAcc': None, 'WarehouseCode': 'WW-DAM', 'InStock': 0.0, 'Committed': 0.0, 'Ordered': 0.0, 'CountedQuantity': 0.0, 'WasCounted': 'tNO', 'UserSignature': 50, 'Counted': 0.0, 'ExpenseClearingAct': None, 'PurchaseCreditAcc': None, 'EUPurchaseCreditAcc': None, 'ForeignPurchaseCreditAcc': None, 'SalesCreditAcc': None, 'SalesCreditEUAcc': None, 'ExemptedCredits': None, 'SalesCreditForeignAcc': None, 'ExpenseOffsettingAccount': None, 'WipAccount': None, 'ExchangeRateDifferencesAcct': None, 'GoodsClearingAcct': None, 'NegativeInventoryAdjustmentAccount': None, 'CostInflationOffsetAccount': None, 'GLDecreaseAcct': None, 'GLIncreaseAcct': None, 'PAReturnAcct': None, 'PurchaseAcct': None, 'PurchaseOffsetAcct': None, 'ShippedGoodsAccount': None, 'StockInflationOffsetAccount': None, 'StockInflationAdjustAccount': None, 'VATInRevenueAccount': None, 'WipVarianceAccount': None, 'CostInflationAccount': None, 'WHIncomingCenvatAccount': None, 'WHOutgoingCenvatAccount': None, 'StockInTransitAccount': None, 'WipOffsetProfitAndLossAccount': None, 'InventoryOffsetProfitAndLossAccount': None, 'DefaultBin': None, 'DefaultBinEnforced': 'tNO', 'PurchaseBalanceAccount': None, 'ItemCode': 'ACC-0000005', 'ItemCycleCounts': []}, {'MinimalStock': 0.0, 'MaximalStock': 0.0, 'MinimalOrder': 0.0, 'StandardAveragePrice': 0.0, 'Locked': 'tNO', 'InventoryAccount': None, 'CostAccount': None, 'TransferAccount': None, 'RevenuesAccount': None, 'VarienceAccount': None, 'DecreasingAccount': None, 'IncreasingAccount': None, 'ReturningAccount': None, 'ExpensesAccount': None, 'EURevenuesAccount': None, 'EUExpensesAccount': None, 'ForeignRevenueAcc': None, 'ForeignExpensAcc': None, 'ExemptIncomeAcc': None, 'PriceDifferenceAcc': None, 'WarehouseCode': 'WW-REP', 'InStock': 0.0, 'Committed': 0.0, 'Ordered': 0.0, 'CountedQuantity': 0.0, 'WasCounted': 'tNO', 'UserSignature': 50, 'Counted': 0.0, 'ExpenseClearingAct': None, 'PurchaseCreditAcc': None, 'EUPurchaseCreditAcc': None, 'ForeignPurchaseCreditAcc': None, 'SalesCreditAcc': None, 'SalesCreditEUAcc': None, 'ExemptedCredits': None, 'SalesCreditForeignAcc': None, 'ExpenseOffsettingAccount': None, 'WipAccount': None, 'ExchangeRateDifferencesAcct': None, 'GoodsClearingAcct': None, 'NegativeInventoryAdjustmentAccount': None, 'CostInflationOffsetAccount': None, 'GLDecreaseAcct': None, 'GLIncreaseAcct': None, 'PAReturnAcct': None, 'PurchaseAcct': None, 'PurchaseOffsetAcct': None, 'ShippedGoodsAccount': None, 'StockInflationOffsetAccount': None, 'StockInflationAdjustAccount': None, 'VATInRevenueAccount': None, 'WipVarianceAccount': None, 'CostInflationAccount': None, 'WHIncomingCenvatAccount': None, 'WHOutgoingCenvatAccount': None, 'StockInTransitAccount': None, 'WipOffsetProfitAndLossAccount': None, 'InventoryOffsetProfitAndLossAccount': None, 'DefaultBin': None, 'DefaultBinEnforced': 'tNO', 'PurchaseBalanceAccount': None, 'ItemCode': 'ACC-0000005', 'ItemCycleCounts': []}, {'MinimalStock': 0.0, 'MaximalStock': 0.0, 'MinimalOrder': 0.0, 'StandardAveragePrice': 0.0, 'Locked': 'tNO', 'InventoryAccount': None, 'CostAccount': None, 'TransferAccount': None, 'RevenuesAccount': None, 'VarienceAccount': None, 'DecreasingAccount': None, 'IncreasingAccount': None, 'ReturningAccount': None, 'ExpensesAccount': None, 'EURevenuesAccount': None, 'EUExpensesAccount': None, 'ForeignRevenueAcc': None, 'ForeignExpensAcc': None, 'ExemptIncomeAcc': None, 'PriceDifferenceAcc': None, 'WarehouseCode': 'WW-SAM', 'InStock': 0.0, 'Committed': 0.0, 'Ordered': 0.0, 'CountedQuantity': 0.0, 'WasCounted': 'tNO', 'UserSignature': 50, 'Counted': 0.0, 'ExpenseClearingAct': None, 'PurchaseCreditAcc': None, 'EUPurchaseCreditAcc': None, 'ForeignPurchaseCreditAcc': None, 'SalesCreditAcc': None, 'SalesCreditEUAcc': None, 'ExemptedCredits': None, 'SalesCreditForeignAcc': None, 'ExpenseOffsettingAccount': None, 'WipAccount': None, 'ExchangeRateDifferencesAcct': None, 'GoodsClearingAcct': None, 'NegativeInventoryAdjustmentAccount': None, 'CostInflationOffsetAccount': None, 'GLDecreaseAcct': None, 'GLIncreaseAcct': None, 'PAReturnAcct': None, 'PurchaseAcct': None, 'PurchaseOffsetAcct': None, 'ShippedGoodsAccount': None, 'StockInflationOffsetAccount': None, 'StockInflationAdjustAccount': None, 'VATInRevenueAccount': None, 'WipVarianceAccount': None, 'CostInflationAccount': None, 'WHIncomingCenvatAccount': None, 'WHOutgoingCenvatAccount': None, 'StockInTransitAccount': None, 'WipOffsetProfitAndLossAccount': None, 'InventoryOffsetProfitAndLossAccount': None, 'DefaultBin': None, 'DefaultBinEnforced': 'tNO', 'PurchaseBalanceAccount': None, 'ItemCode': 'ACC-0000005', 'ItemCycleCounts': []}, {'MinimalStock': 0.0, 'MaximalStock': 0.0, 'MinimalOrder': 0.0, 'StandardAveragePrice': 0.0, 'Locked': 'tNO', 'InventoryAccount': None, 'CostAccount': None, 'TransferAccount': None, 'RevenuesAccount': None, 'VarienceAccount': None, 'DecreasingAccount': None, 'IncreasingAccount': None, 'ReturningAccount': None, 'ExpensesAccount': None, 'EURevenuesAccount': None, 'EUExpensesAccount': None, 'ForeignRevenueAcc': None, 'ForeignExpensAcc': None, 'ExemptIncomeAcc': None, 'PriceDifferenceAcc': None, 'WarehouseCode': 'WW-WIP', 'InStock': 0.0, 'Committed': 0.0, 'Ordered': 0.0, 'CountedQuantity': 0.0, 'WasCounted': 'tNO', 'UserSignature': 50, 'Counted': 0.0, 'ExpenseClearingAct': None, 'PurchaseCreditAcc': None, 'EUPurchaseCreditAcc': None, 'ForeignPurchaseCreditAcc': None, 'SalesCreditAcc': None, 'SalesCreditEUAcc': None, 'ExemptedCredits': None, 'SalesCreditForeignAcc': None, 'ExpenseOffsettingAccount': None, 'WipAccount': None, 'ExchangeRateDifferencesAcct': None, 'GoodsClearingAcct': None, 'NegativeInventoryAdjustmentAccount': None, 'CostInflationOffsetAccount': None, 'GLDecreaseAcct': None, 'GLIncreaseAcct': None, 'PAReturnAcct': None, 'PurchaseAcct': None, 'PurchaseOffsetAcct': None, 'ShippedGoodsAccount': None, 'StockInflationOffsetAccount': None, 'StockInflationAdjustAccount': None, 'VATInRevenueAccount': None, 'WipVarianceAccount': None, 'CostInflationAccount': None, 'WHIncomingCenvatAccount': None, 'WHOutgoingCenvatAccount': None, 'StockInTransitAccount': None, 'WipOffsetProfitAndLossAccount': None, 'InventoryOffsetProfitAndLossAccount': None, 'DefaultBin': None, 'DefaultBinEnforced': 'tNO', 'PurchaseBalanceAccount': None, 'ItemCode': 'ACC-0000005', 'ItemCycleCounts': []}, {'MinimalStock': 0.0, 'MaximalStock': 0.0, 'MinimalOrder': 0.0, 'StandardAveragePrice': 0.0, 'Locked': 'tNO', 'InventoryAccount': None, 'CostAccount': None, 'TransferAccount': None, 'RevenuesAccount': None, 'VarienceAccount': None, 'DecreasingAccount': None, 'IncreasingAccount': None, 'ReturningAccount': None, 'ExpensesAccount': None, 'EURevenuesAccount': None, 'EUExpensesAccount': None, 'ForeignRevenueAcc': None, 'ForeignExpensAcc': None, 'ExemptIncomeAcc': None, 'PriceDifferenceAcc': None, 'WarehouseCode': 'ZW', 'InStock': 0.0, 'Committed': 0.0, 'Ordered': 0.0, 'CountedQuantity': 0.0, 'WasCounted': 'tNO', 'UserSignature': 50, 'Counted': 0.0, 'ExpenseClearingAct': None, 'PurchaseCreditAcc': None, 'EUPurchaseCreditAcc': None, 'ForeignPurchaseCreditAcc': None, 'SalesCreditAcc': None, 'SalesCreditEUAcc': None, 'ExemptedCredits': None, 'SalesCreditForeignAcc': None, 'ExpenseOffsettingAccount': None, 'WipAccount': None, 'ExchangeRateDifferencesAcct': None, 'GoodsClearingAcct': None, 'NegativeInventoryAdjustmentAccount': None, 'CostInflationOffsetAccount': None, 'GLDecreaseAcct': None, 'GLIncreaseAcct': None, 'PAReturnAcct': None, 'PurchaseAcct': None, 'PurchaseOffsetAcct': None, 'ShippedGoodsAccount': None, 'StockInflationOffsetAccount': None, 'StockInflationAdjustAccount': None, 'VATInRevenueAccount': None, 'WipVarianceAccount': None, 'CostInflationAccount': None, 'WHIncomingCenvatAccount': None, 'WHOutgoingCenvatAccount': None, 'StockInTransitAccount': None, 'WipOffsetProfitAndLossAccount': None, 'InventoryOffsetProfitAndLossAccount': None, 'DefaultBin': None, 'DefaultBinEnforced': 'tNO', 'PurchaseBalanceAccount': None, 'ItemCode': 'ACC-0000005', 'ItemCycleCounts': []}], 'ItemPreferredVendors': [], 'ItemLocalizationInfos': [], 'ItemProjects': [], 'ItemDistributionRules': [], 'ItemAttributeGroups': [], 'ItemDepreciationParameters': [], 'ItemPeriodControls': [], 'ItemUnitOfMeasurementCollection': [{'UoMType': 'iutInventory', 'UoMEntry': 1, 'DefaultBarcode': 0, 'DefaultPackage': None, 'Length1': 0.0, 'Length1Unit': None, 'Length2': 0.0, 'Length2Unit': None, 'Width1': 0.0, 'Width1Unit': None, 'Width2': 0.0, 'Width2Unit': None, 'Height1': 0.0, 'Height1Unit': None, 'Height2': 0.0, 'Height2Unit': None, 'Volume': 0.0, 'VolumeUnit': None, 'Weight1': 0.0, 'Weight1Unit': None, 'Weight2': 0.0, 'Weight2Unit': None, 'ItemUoMPackageCollection': []}, {'UoMType': 'iutPurchasing', 'UoMEntry': 1, 'DefaultBarcode': 0, 'DefaultPackage': None, 'Length1': 0.0, 'Length1Unit': None, 'Length2': 0.0, 'Length2Unit': None, 'Width1': 0.0, 'Width1Unit': None, 'Width2': 0.0, 'Width2Unit': None, 'Height1': 0.0, 'Height1Unit': None, 'Height2': 0.0, 'Height2Unit': None, 'Volume': 0.0, 'VolumeUnit': 2, 'Weight1': 0.0, 'Weight1Unit': None, 'Weight2': 0.0, 'Weight2Unit': None, 'ItemUoMPackageCollection': []}, {'UoMType': 'iutPurchasing', 'UoMEntry': 8, 'DefaultBarcode': None, 'DefaultPackage': None, 'Length1': 0.0, 'Length1Unit': None, 'Length2': 0.0, 'Length2Unit': None, 'Width1': 0.0, 'Width1Unit': None, 'Width2': 0.0, 'Width2Unit': None, 'Height1': 0.0, 'Height1Unit': None, 'Height2': 0.0, 'Height2Unit': None, 'Volume': 0.0, 'VolumeUnit': 4, 'Weight1': 0.0, 'Weight1Unit': None, 'Weight2': 0.0, 'Weight2Unit': None, 'ItemUoMPackageCollection': []}, {'UoMType': 'iutSales', 'UoMEntry': 1, 'DefaultBarcode': 0, 'DefaultPackage': None, 'Length1': 0.0, 'Length1Unit': None, 'Length2': 0.0, 'Length2Unit': None, 'Width1': 0.0, 'Width1Unit': None, 'Width2': 0.0, 'Width2Unit': None, 'Height1': 0.0, 'Height1Unit': None, 'Height2': 0.0, 'Height2Unit': None, 'Volume': 0.0, 'VolumeUnit': 2, 'Weight1': 0.0, 'Weight1Unit': None, 'Weight2': 0.0, 'Weight2Unit': None, 'ItemUoMPackageCollection': []}, {'UoMType': 'iutSales', 'UoMEntry': 8, 'DefaultBarcode': None, 'DefaultPackage': None, 'Length1': 0.0, 'Length1Unit': None, 'Length2': 0.0, 'Length2Unit': None, 'Width1': 0.0, 'Width1Unit': None, 'Width2': 0.0, 'Width2Unit': None, 'Height1': 0.0, 'Height1Unit': None, 'Height2': 0.0, 'Height2Unit': None, 'Volume': 0.0, 'VolumeUnit': 4, 'Weight1': 0.0, 'Weight1Unit': None, 'Weight2': 0.0, 'Weight2Unit': None, 'ItemUoMPackageCollection': []}], 'ItemBarCodeCollection': [], 'ItemIntrastatExtension': {'ItemCode': 'ACC-0000005', 'CommodityCode': None, 'SupplementaryUnit': None, 'FactorOfSupplementaryUnit': 0.0, 'ImportRegionState': 0, 'ExportRegionState': 0, 'ImportNatureOfTransaction': None, 'ExportNatureOfTransaction': None, 'ImportStatisticalProcedure': None, 'ExportStatisticalProcedure': None, 'CountryOfOrigin': None, 'ServiceCode': None, 'Type': 'dDocument_Items', 'ServiceSupplyMethod': 'ssmImmediate', 'ServicePaymentMethod': 'spmOther', 'ImportRegionCountry': 'GB', 'ExportRegionCountry': 'GB', 'UseWeightInCalculation': 'tYES', 'IntrastatRelevant': 'tNO', 'StatisticalCode': None}}]}, 'status': 'success'}
2025-08-05 18:08:58,116 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'Expenses', 'request': {'method': 'GET', 'url': 'https://10.0.0.100:50000/b1s/v1/Expenses', 'data': None, 'params': None}, 'response': None, 'status': None}
2025-08-05 18:08:58,753 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'Expenses', 'request': None, 'response': {'status_code': 400, 'text': '{\n   "error" : {\n      "code" : 200,\n      "message" : {\n         "lang" : "en-us",\n         "value" : "Unrecognized resource path."\n      }\n   }\n}\n'}, 'status': 'failure'}
2025-08-05 18:08:58,756 - sync_service - INFO - API Call: {'service': 'shopify', 'endpoint': 'graphql_local', 'request': {'query': '\n        query getOrders($first: Int!) {\n            orders(first: $first) {\n                edges {\n                    node {\n                        id\n                        name\n                        createdAt\n                    }\n                }\n            }\n        }\n        ', 'variables': {'first': 1}}, 'response': None, 'status': None}
2025-08-05 18:08:59,298 - sync_service - INFO - API Call: {'service': 'shopify', 'endpoint': 'graphql_local', 'request': None, 'response': {'orders': {'edges': [{'node': {'id': 'gid://shopify/Order/6170973569090', 'name': '#1001', 'createdAt': '2025-05-15T08:35:47Z'}}]}}, 'status': 'success'}
2025-08-05 18:08:59,302 - sync_service - INFO - API Call: {'service': 'shopify', 'endpoint': 'graphql_local', 'request': {'query': '\n            query getOrders($first: Int!, $after: String) {\n                orders(first: $first, after: $after, sortKey: CREATED_AT, reverse: true) {\n                    edges {\n                        node {\n                            id\n                            name\n                            createdAt\n                            tags\n                            totalPriceSet {\n                                shopMoney {\n                                    amount\n                                    currencyCode\n                                }\n                            }\n                            subtotalPriceSet {\n                                shopMoney {\n                                    amount\n                                    currencyCode\n                                }\n                            }\n                            totalTaxSet {\n                                shopMoney {\n                                    amount\n                                    currencyCode\n                                }\n                            }\n                            totalShippingPriceSet {\n                                shopMoney {\n                                    amount\n                                    currencyCode\n                                }\n                            }\n                            customer {\n                                id\n                                firstName\n                                lastName\n                                email\n                                phone\n                                addresses {\n                                    address1\n                                    address2\n                                    city\n                                    province\n                                    zip\n                                    country\n                                    phone\n                                }\n                            }\n                            shippingAddress {\n                                address1\n                                address2\n                                city\n                                province\n                                zip\n                                country\n                                phone\n                            }\n                            billingAddress {\n                                address1\n                                address2\n                                city\n                                province\n                                zip\n                                country\n                                phone\n                            }\n                            lineItems(first: 50) {\n                                edges {\n                                    node {\n                                        id\n                                        quantity\n                                        sku\n                                        title\n                                        variant {\n                                            id\n                                            sku\n                                            price\n                                            product {\n                                                id\n                                                title\n                                            }\n                                        }\n                                        discountedTotalSet {\n                                            shopMoney {\n                                                amount\n                                                currencyCode\n                                            }\n                                        }\n                                    }\n                                }\n                            }\n                            note\n                        }\n                    }\n                    pageInfo {\n                        hasNextPage\n                        endCursor\n                    }\n                }\n            }\n            ', 'variables': {'first': 20, 'after': None}}, 'response': None, 'status': None}
2025-08-05 18:08:59,973 - sync_service - INFO - API Call: {'service': 'shopify', 'endpoint': 'graphql_local', 'request': None, 'response': {'orders': {'edges': [{'node': {'id': 'gid://shopify/Order/6318310686786', 'name': '#1480', 'createdAt': '2025-08-05T09:59:13Z', 'tags': [], 'totalPriceSet': {'shopMoney': {'amount': '5200.0', 'currencyCode': 'EGP'}}, 'subtotalPriceSet': {'shopMoney': {'amount': '5000.0', 'currencyCode': 'EGP'}}, 'totalTaxSet': {'shopMoney': {'amount': '0.0', 'currencyCode': 'EGP'}}, 'totalShippingPriceSet': {'shopMoney': {'amount': '200.0', 'currencyCode': 'EGP'}}, 'customer': {'id': 'gid://shopify/Customer/8037256233026', 'firstName': 'Omnia', 'lastName': 'Ezz Elarab', 'email': 'nezzelarab@ezz-elarab.com', 'phone': None, 'addresses': [{'address1': 'Palm hills 6th october, phase 1', 'address2': 'Villa b53', 'city': 'Giza', 'province': '6th of October', 'zip': '00000', 'country': 'Egypt', 'phone': '00201003370743'}]}, 'shippingAddress': {'address1': 'Palm hills 6th october, phase 1', 'address2': 'Villa b53', 'city': 'Giza', 'province': '6th of October', 'zip': '00000', 'country': 'Egypt', 'phone': '00201003370743'}, 'billingAddress': {'address1': 'Palm hills 6th october, phase 1', 'address2': 'Villa b53', 'city': 'Giza', 'province': '6th of October', 'zip': '00000', 'country': 'Egypt', 'phone': '00201003370743'}, 'lineItems': {'edges': [{'node': {'id': 'gid://shopify/LineItem/15830693707842', 'quantity': 1, 'sku': 'FG-0000632', 'title': 'Ember Earrings', 'variant': {'id': 'gid://shopify/ProductVariant/42194952650818', 'sku': 'FG-0000632', 'price': '5000.00', 'product': {'id': 'gid://shopify/Product/7490852847682', 'title': 'Ember Earrings'}}, 'discountedTotalSet': {'shopMoney': {'amount': '5000.0', 'currencyCode': 'EGP'}}}}]}, 'note': None}}, {'node': {'id': 'gid://shopify/Order/6318078263362', 'name': '#1479', 'createdAt': '2025-08-05T04:44:47Z', 'tags': [], 'totalPriceSet': {'shopMoney': {'amount': '7460.0', 'currencyCode': 'EGP'}}, 'subtotalPriceSet': {'shopMoney': {'amount': '7300.0', 'currencyCode': 'EGP'}}, 'totalTaxSet': {'shopMoney': {'amount': '0.0', 'currencyCode': 'EGP'}}, 'totalShippingPriceSet': {'shopMoney': {'amount': '160.0', 'currencyCode': 'EGP'}}, 'customer': {'id': 'gid://shopify/Customer/8035661905986', 'firstName': 'Ziad', 'lastName': 'Fawi', 'email': 'ziadfawi6@gmail.com', 'phone': None, 'addresses': [{'address1': None, 'address2': None, 'city': None, 'province': None, 'zip': None, 'country': 'Egypt', 'phone': None}, {'address1': '46 soultan street behind ices hospital', 'address2': 'Number of the apartment 17', 'city': 'Alexandria', 'province': 'Alexandria', 'zip': None, 'country': 'Egypt', 'phone': '01271088966'}]}, 'shippingAddress': {'address1': '46 soultan street behind ices hospital', 'address2': 'Number of the apartment 17', 'city': 'Alexandria', 'province': 'Alexandria', 'zip': None, 'country': 'Egypt', 'phone': '01271088966'}, 'billingAddress': {'address1': '46 soultan street behind ices hospital', 'address2': 'Number of the apartment 17', 'city': 'Alexandria', 'province': 'Alexandria', 'zip': None, 'country': 'Egypt', 'phone': '01271088966'}, 'lineItems': {'edges': [{'node': {'id': 'gid://shopify/LineItem/15830286434370', 'quantity': 1, 'sku': 'FG-0000077', 'title': 'Sulla Luna Mix Earrings', 'variant': {'id': 'gid://shopify/ProductVariant/42003146276930', 'sku': 'FG-0000077', 'price': '7300.00', 'product': {'id': 'gid://shopify/Product/7442022203458', 'title': 'Sulla Luna Mix Earrings'}}, 'discountedTotalSet': {'shopMoney': {'amount': '7300.0', 'currencyCode': 'EGP'}}}}]}, 'note': None}}, {'node': {'id': 'gid://shopify/Order/6317218398274', 'name': '#1478', 'createdAt': '2025-08-04T18:33:12Z', 'tags': [], 'totalPriceSet': {'shopMoney': {'amount': '2880.0', 'currencyCode': 'EGP'}}, 'subtotalPriceSet': {'shopMoney': {'amount': '2880.0', 'currencyCode': 'EGP'}}, 'totalTaxSet': {'shopMoney': {'amount': '0.0', 'currencyCode': 'EGP'}}, 'totalShippingPriceSet': {'shopMoney': {'amount': '0.0', 'currencyCode': 'EGP'}}, 'customer': {'id': 'gid://shopify/Customer/8032449527874', 'firstName': 'Mahmoud', 'lastName': 'Ayman', 'email': 'mahmoudayman80@yahoo.com', 'phone': None, 'addresses': [{'address1': None, 'address2': None, 'city': None, 'province': None, 'zip': None, 'country': 'Egypt', 'phone': None}, {'address1': '5370 el mokattam', 'address2': None, 'city': 'Cairo', 'province': 'Cairo', 'zip': None, 'country': 'Egypt', 'phone': '01111346333'}]}, 'shippingAddress': None, 'billingAddress': {'address1': '5370 el mokattam', 'address2': None, 'city': 'Cairo', 'province': 'Cairo', 'zip': None, 'country': 'Egypt', 'phone': '01111346333'}, 'lineItems': {'edges': [{'node': {'id': 'gid://shopify/LineItem/15828170047554', 'quantity': 1, 'sku': 'FG-0000589', 'title': 'Una Ring', 'variant': {'id': 'gid://shopify/ProductVariant/42003153518658', 'sku': 'FG-0000589', 'price': '3200.00', 'product': {'id': 'gid://shopify/Product/7442026070082', 'title': 'Una Ring'}}, 'discountedTotalSet': {'shopMoney': {'amount': '3200.0', 'currencyCode': 'EGP'}}}}]}, 'note': None}}, {'node': {'id': 'gid://shopify/Order/6317035520066', 'name': '#1477', 'createdAt': '2025-08-04T16:50:11Z', 'tags': [], 'totalPriceSet': {'shopMoney': {'amount': '5060.0', 'currencyCode': 'EGP'}}, 'subtotalPriceSet': {'shopMoney': {'amount': '4900.0', 'currencyCode': 'EGP'}}, 'totalTaxSet': {'shopMoney': {'amount': '0.0', 'currencyCode': 'EGP'}}, 'totalShippingPriceSet': {'shopMoney': {'amount': '160.0', 'currencyCode': 'EGP'}}, 'customer': {'id': 'gid://shopify/Customer/8031975374914', 'firstName': 'Passant', 'lastName': 'Dawood', 'email': 'passantdawood@gmail.com', 'phone': None, 'addresses': [{'address1': '399 elguish road san stefano grand plaza', 'address2': '1', 'city': 'Alexandria', 'province': 'Alexandria', 'zip': None, 'country': 'Egypt', 'phone': '01223100564'}]}, 'shippingAddress': {'address1': '399 elguish road san stefano grand plaza', 'address2': '1', 'city': 'Alexandria', 'province': 'Alexandria', 'zip': None, 'country': 'Egypt', 'phone': '01223100564'}, 'billingAddress': {'address1': '399 elguish road san stefano grand plaza', 'address2': '1', 'city': 'Alexandria', 'province': 'Alexandria', 'zip': None, 'country': 'Egypt', 'phone': '01223100564'}, 'lineItems': {'edges': [{'node': {'id': 'gid://shopify/LineItem/15827708805186', 'quantity': 1, 'sku': 'FG-0000688', 'title': 'Multi-way Halo Ring', 'variant': {'id': 'gid://shopify/ProductVariant/42194980896834', 'sku': 'FG-0000688', 'price': '4900.00', 'product': {'id': 'gid://shopify/Product/7490853339202', 'title': 'Multi-way Halo Ring'}}, 'discountedTotalSet': {'shopMoney': {'amount': '4900.0', 'currencyCode': 'EGP'}}}}]}, 'note': None}}, {'node': {'id': 'gid://shopify/Order/6317030244418', 'name': '#1476', 'createdAt': '2025-08-04T16:47:03Z', 'tags': [], 'totalPriceSet': {'shopMoney': {'amount': '5320.0', 'currencyCode': 'EGP'}}, 'subtotalPriceSet': {'shopMoney': {'amount': '5200.0', 'currencyCode': 'EGP'}}, 'totalTaxSet': {'shopMoney': {'amount': '0.0', 'currencyCode': 'EGP'}}, 'totalShippingPriceSet': {'shopMoney': {'amount': '120.0', 'currencyCode': 'EGP'}}, 'customer': {'id': 'gid://shopify/Customer/8031970918466', 'firstName': 'Noha', 'lastName': 'Emad', 'email': 'noha@kitshe-eg.com', 'phone': None, 'addresses': [{'address1': 'التجمع الخامس االدور الاول شقه ٤جنوب الأكاديمية أ شارع ان', 'address2': 'التجمع الخامس- جنوب الاكادميه أ شارع انس ابن مالك فيلا ٢٨٦', 'city': 'Cairo', 'province': 'Cairo', 'zip': '11865', 'country': 'Egypt', 'phone': '01200008517'}]}, 'shippingAddress': {'address1': 'التجمع الخامس االدور الاول شقه ٤جنوب الأكاديمية أ شارع ان', 'address2': 'التجمع الخامس- جنوب الاكادميه أ شارع انس ابن مالك فيلا ٢٨٦', 'city': 'Cairo', 'province': 'Cairo', 'zip': '11865', 'country': 'Egypt', 'phone': '01200008517'}, 'billingAddress': {'address1': 'التجمع الخامس االدور الاول شقه ٤جنوب الأكاديمية أ شارع ان', 'address2': 'التجمع الخامس- جنوب الاكادميه أ شارع انس ابن مالك فيلا ٢٨٦', 'city': 'Cairo', 'province': 'Cairo', 'zip': '11865', 'country': 'Egypt', 'phone': '01200008517'}, 'lineItems': {'edges': [{'node': {'id': 'gid://shopify/LineItem/15827697336386', 'quantity': 1, 'sku': 'FG-0000640', 'title': 'Essence Earrings', 'variant': {'id': 'gid://shopify/ProductVariant/42194952945730', 'sku': 'FG-0000640', 'price': '5200.00', 'product': {'id': 'gid://shopify/Product/7490852945986', 'title': 'Essence Earrings'}}, 'discountedTotalSet': {'shopMoney': {'amount': '5200.0', 'currencyCode': 'EGP'}}}}]}, 'note': None}}, {'node': {'id': 'gid://shopify/Order/6316680347714', 'name': '#1475', 'createdAt': '2025-08-04T12:56:00Z', 'tags': [], 'totalPriceSet': {'shopMoney': {'amount': '5120.0', 'currencyCode': 'EGP'}}, 'subtotalPriceSet': {'shopMoney': {'amount': '5000.0', 'currencyCode': 'EGP'}}, 'totalTaxSet': {'shopMoney': {'amount': '0.0', 'currencyCode': 'EGP'}}, 'totalShippingPriceSet': {'shopMoney': {'amount': '120.0', 'currencyCode': 'EGP'}}, 'customer': {'id': 'gid://shopify/Customer/8031264636994', 'firstName': 'Hanan', 'lastName': 'HASSAN', 'email': 'hananhassan1204@gmail.com', 'phone': None, 'addresses': [{'address1': 'القاهرة الجديدة / كمبوند سوديك ڤيليت عمارة واحد إف شقة أرضي زيرو أربعة', 'address2': '04 الدور الارضي', 'city': 'القاهرة', 'province': 'Cairo', 'zip': '11511', 'country': 'Egypt', 'phone': '01000340138'}]}, 'shippingAddress': {'address1': 'القاهرة الجديدة / كمبوند سوديك ڤيليت عمارة واحد إف شقة أرضي زيرو أربعة', 'address2': '04 الدور الارضي', 'city': 'القاهرة', 'province': 'Cairo', 'zip': '11511', 'country': 'Egypt', 'phone': '01000340138'}, 'billingAddress': {'address1': 'القاهرة الجديدة / كمبوند سوديك ڤيليت عمارة واحد إف شقة أرضي زيرو أربعة', 'address2': '04 الدور الارضي', 'city': 'القاهرة', 'province': 'Cairo', 'zip': '11511', 'country': 'Egypt', 'phone': '01000340138'}, 'lineItems': {'edges': [{'node': {'id': 'gid://shopify/LineItem/15826901237826', 'quantity': 1, 'sku': 'FG-0000632', 'title': 'Ember Earrings', 'variant': {'id': 'gid://shopify/ProductVariant/42194952650818', 'sku': 'FG-0000632', 'price': '5000.00', 'product': {'id': 'gid://shopify/Product/7490852847682', 'title': 'Ember Earrings'}}, 'discountedTotalSet': {'shopMoney': {'amount': '5000.0', 'currencyCode': 'EGP'}}}}]}, 'note': None}}, {'node': {'id': 'gid://shopify/Order/6316580536386', 'name': '#1474', 'createdAt': '2025-08-04T11:08:05Z', 'tags': [], 'totalPriceSet': {'shopMoney': {'amount': '6020.0', 'currencyCode': 'EGP'}}, 'subtotalPriceSet': {'shopMoney': {'amount': '5900.0', 'currencyCode': 'EGP'}}, 'totalTaxSet': {'shopMoney': {'amount': '0.0', 'currencyCode': 'EGP'}}, 'totalShippingPriceSet': {'shopMoney': {'amount': '120.0', 'currencyCode': 'EGP'}}, 'customer': {'id': 'gid://shopify/Customer/8031120457794', 'firstName': 'Nourhan', 'lastName': 'Swellam', 'email': 'swellam@aucegypt.edu', 'phone': None, 'addresses': [{'address1': '144 el banafseg 11 ', 'address2': 'Villa 144', 'city': 'Cairo', 'province': 'Cairo', 'zip': '11341', 'country': 'Egypt', 'phone': '+201003928976'}]}, 'shippingAddress': {'address1': '144 el banafseg 11', 'address2': 'Villa 144', 'city': 'Cairo', 'province': 'Cairo', 'zip': '11341', 'country': 'Egypt', 'phone': '+201003928976'}, 'billingAddress': {'address1': '144 el banafseg 11', 'address2': 'Villa 144', 'city': 'Cairo', 'province': 'Cairo', 'zip': '11341', 'country': 'Egypt', 'phone': '+201003928976'}, 'lineItems': {'edges': [{'node': {'id': 'gid://shopify/LineItem/15826707382338', 'quantity': 1, 'sku': 'FG-0000369', 'title': 'Mini Sahara Mix Hoop', 'variant': {'id': 'gid://shopify/ProductVariant/42003146997826', 'sku': 'FG-0000369', 'price': '5900.00', 'product': {'id': 'gid://shopify/Product/7442022989890', 'title': 'Mini Sahara Mix Hoop'}}, 'discountedTotalSet': {'shopMoney': {'amount': '5900.0', 'currencyCode': 'EGP'}}}}]}, 'note': None}}, {'node': {'id': 'gid://shopify/Order/6315006394434', 'name': '#1473', 'createdAt': '2025-08-03T15:21:25Z', 'tags': [], 'totalPriceSet': {'shopMoney': {'amount': '4420.0', 'currencyCode': 'EGP'}}, 'subtotalPriceSet': {'shopMoney': {'amount': '4300.0', 'currencyCode': 'EGP'}}, 'totalTaxSet': {'shopMoney': {'amount': '0.0', 'currencyCode': 'EGP'}}, 'totalShippingPriceSet': {'shopMoney': {'amount': '120.0', 'currencyCode': 'EGP'}}, 'customer': {'id': 'gid://shopify/Customer/8015867478082', 'firstName': 'Yomna', 'lastName': 'Sherif', 'email': 'yomna.sherif.nawal@gmail.com', 'phone': None, 'addresses': [{'address1': 'Group 15 , building 5 , apartment 22', 'address2': 'Group 15 , building 5 , apartment 22', 'city': 'Rehab City', 'province': 'Cairo', 'zip': '0000', 'country': 'Egypt', 'phone': '+201003988787'}, {'address1': None, 'address2': None, 'city': None, 'province': None, 'zip': None, 'country': 'Egypt', 'phone': None}]}, 'shippingAddress': {'address1': 'Group 15 , building 5 , apartment 22', 'address2': 'Group 15 , building 5 , apartment 22', 'city': 'Rehab City', 'province': 'Cairo', 'zip': '0000', 'country': 'Egypt', 'phone': '+201003988787'}, 'billingAddress': {'address1': 'Group 15 , building 5 , apartment 22', 'address2': 'Group 15 , building 5 , apartment 22', 'city': 'Rehab City', 'province': 'Cairo', 'zip': '0000', 'country': 'Egypt', 'phone': '+201003988787'}, 'lineItems': {'edges': [{'node': {'id': 'gid://shopify/LineItem/15822752055362', 'quantity': 1, 'sku': 'FG-0000499', 'title': 'Cassandra Mix Pinky Ring', 'variant': {'id': 'gid://shopify/ProductVariant/42003149815874', 'sku': 'FG-0000499', 'price': '4300.00', 'product': {'id': 'gid://shopify/Product/7442024235074', 'title': 'Cassandra Mix Pinky Ring'}}, 'discountedTotalSet': {'shopMoney': {'amount': '4300.0', 'currencyCode': 'EGP'}}}}]}, 'note': None}}, {'node': {'id': 'gid://shopify/Order/6314877780034', 'name': '#1472', 'createdAt': '2025-08-03T13:47:12Z', 'tags': [], 'totalPriceSet': {'shopMoney': {'amount': '121.0', 'currencyCode': 'EGP'}}, 'subtotalPriceSet': {'shopMoney': {'amount': '1.0', 'currencyCode': 'EGP'}}, 'totalTaxSet': {'shopMoney': {'amount': '0.0', 'currencyCode': 'EGP'}}, 'totalShippingPriceSet': {'shopMoney': {'amount': '120.0', 'currencyCode': 'EGP'}}, 'customer': {'id': 'gid://shopify/Customer/7539785334850', 'firstName': 'Karim', 'lastName': 'Wafik', 'email': 'karimwafik.kw@gmail.com', 'phone': None, 'addresses': [{'address1': '97 Marghany st., Heliopolis, Cairo, Egypt', 'address2': None, 'city': 'Cairo', 'province': 'Cairo', 'zip': '21113', 'country': 'Egypt', 'phone': '+201005527292'}, {'address1': 'Stone Residence Compound 306, Third Settlement', 'address2': '9', 'city': 'Cairo', 'province': 'Cairo', 'zip': None, 'country': 'Egypt', 'phone': '01005527292'}]}, 'shippingAddress': {'address1': 'Stone Residence Compound 306, Third Settlement', 'address2': '9', 'city': 'Cairo', 'province': 'Cairo', 'zip': None, 'country': 'Egypt', 'phone': '01005527292'}, 'billingAddress': {'address1': 'Stone Residence Compound 306, Third Settlement', 'address2': '9', 'city': 'Cairo', 'province': 'Cairo', 'zip': None, 'country': 'Egypt', 'phone': '01005527292'}, 'lineItems': {'edges': [{'node': {'id': 'gid://shopify/LineItem/15822411366466', 'quantity': 1, 'sku': None, 'title': 'karim test', 'variant': {'id': 'gid://shopify/ProductVariant/42361056985154', 'sku': None, 'price': '1.00', 'product': {'id': 'gid://shopify/Product/7522803515458', 'title': 'karim test'}}, 'discountedTotalSet': {'shopMoney': {'amount': '1.0', 'currencyCode': 'EGP'}}}}]}, 'note': None}}, {'node': {'id': 'gid://shopify/Order/6314801463362', 'name': '#1471', 'createdAt': '2025-08-03T12:37:41Z', 'tags': [], 'totalPriceSet': {'shopMoney': {'amount': '4620.0', 'currencyCode': 'EGP'}}, 'subtotalPriceSet': {'shopMoney': {'amount': '4500.0', 'currencyCode': 'EGP'}}, 'totalTaxSet': {'shopMoney': {'amount': '0.0', 'currencyCode': 'EGP'}}, 'totalShippingPriceSet': {'shopMoney': {'amount': '120.0', 'currencyCode': 'EGP'}}, 'customer': {'id': 'gid://shopify/Customer/8028986572866', 'firstName': 'Manal', 'lastName': 'Dorgham', 'email': 'manaldorgham4@gmail.com', 'phone': None, 'addresses': [{'address1': 'Moon valley compound. New Cairo', 'address2': '45 D', 'city': 'Cairo', 'province': 'Cairo', 'zip': None, 'country': 'Egypt', 'phone': '01222455309'}]}, 'shippingAddress': {'address1': 'Moon valley compound. New Cairo', 'address2': '45 D', 'city': 'Cairo', 'province': 'Cairo', 'zip': None, 'country': 'Egypt', 'phone': '01222455309'}, 'billingAddress': {'address1': 'Moon valley compound. New Cairo', 'address2': '45 D', 'city': 'Cairo', 'province': 'Cairo', 'zip': None, 'country': 'Egypt', 'phone': '01222455309'}, 'lineItems': {'edges': [{'node': {'id': 'gid://shopify/LineItem/15822235631682', 'quantity': 1, 'sku': 'FG-0000544', 'title': 'Floway ring set', 'variant': {'id': 'gid://shopify/ProductVariant/42003150602306', 'sku': 'FG-0000544', 'price': '4500.00', 'product': {'id': 'gid://shopify/Product/7442024890434', 'title': 'Floway ring set'}}, 'discountedTotalSet': {'shopMoney': {'amount': '4500.0', 'currencyCode': 'EGP'}}}}]}, 'note': None}}, {'node': {'id': 'gid://shopify/Order/6314790420546', 'name': '#1470', 'createdAt': '2025-08-03T12:26:20Z', 'tags': [], 'totalPriceSet': {'shopMoney': {'amount': '7600.0', 'currencyCode': 'EGP'}}, 'subtotalPriceSet': {'shopMoney': {'amount': '7600.0', 'currencyCode': 'EGP'}}, 'totalTaxSet': {'shopMoney': {'amount': '0.0', 'currencyCode': 'EGP'}}, 'totalShippingPriceSet': {'shopMoney': {'amount': '0.0', 'currencyCode': 'EGP'}}, 'customer': {'id': 'gid://shopify/Customer/7539785334850', 'firstName': 'Karim', 'lastName': 'Wafik', 'email': 'karimwafik.kw@gmail.com', 'phone': None, 'addresses': [{'address1': '97 Marghany st., Heliopolis, Cairo, Egypt', 'address2': None, 'city': 'Cairo', 'province': 'Cairo', 'zip': '21113', 'country': 'Egypt', 'phone': '+201005527292'}, {'address1': 'Stone Residence Compound 306, Third Settlement', 'address2': '9', 'city': 'Cairo', 'province': 'Cairo', 'zip': None, 'country': 'Egypt', 'phone': '01005527292'}]}, 'shippingAddress': None, 'billingAddress': None, 'lineItems': {'edges': [{'node': {'id': 'gid://shopify/LineItem/15822212661314', 'quantity': 1, 'sku': 'FG-0000645', 'title': 'Flare Earrings', 'variant': {'id': 'gid://shopify/ProductVariant/42277872271426', 'sku': 'FG-0000645', 'price': '3800.00', 'product': {'id': 'gid://shopify/Product/7506409586754', 'title': 'Flare Earrings'}}, 'discountedTotalSet': {'shopMoney': {'amount': '3800.0', 'currencyCode': 'EGP'}}}}, {'node': {'id': 'gid://shopify/LineItem/15822221770818', 'quantity': 1, 'sku': None, 'title': 'Gift Card', 'variant': None, 'discountedTotalSet': {'shopMoney': {'amount': '3800.0', 'currencyCode': 'EGP'}}}}]}, 'note': None}}, {'node': {'id': 'gid://shopify/Order/6314786357314', 'name': '#1469', 'createdAt': '2025-08-03T12:21:46Z', 'tags': [], 'totalPriceSet': {'shopMoney': {'amount': '6900.0', 'currencyCode': 'EGP'}}, 'subtotalPriceSet': {'shopMoney': {'amount': '6900.0', 'currencyCode': 'EGP'}}, 'totalTaxSet': {'shopMoney': {'amount': '0.0', 'currencyCode': 'EGP'}}, 'totalShippingPriceSet': {'shopMoney': {'amount': '0.0', 'currencyCode': 'EGP'}}, 'customer': None, 'shippingAddress': None, 'billingAddress': None, 'lineItems': {'edges': [{'node': {'id': 'gid://shopify/LineItem/15822205321282', 'quantity': 1, 'sku': 'FG-0000345', 'title': 'Mini Harmonia Earrings', 'variant': {'id': 'gid://shopify/ProductVariant/42003146801218', 'sku': 'FG-0000345', 'price': '6900.00', 'product': {'id': 'gid://shopify/Product/7442022793282', 'title': 'Mini Harmonia Earrings'}}, 'discountedTotalSet': {'shopMoney': {'amount': '6900.0', 'currencyCode': 'EGP'}}}}]}, 'note': None}}, {'node': {'id': 'gid://shopify/Order/6314775969858', 'name': '#1468', 'createdAt': '2025-08-03T12:12:09Z', 'tags': [], 'totalPriceSet': {'shopMoney': {'amount': '2920.0', 'currencyCode': 'EGP'}}, 'subtotalPriceSet': {'shopMoney': {'amount': '2800.0', 'currencyCode': 'EGP'}}, 'totalTaxSet': {'shopMoney': {'amount': '0.0', 'currencyCode': 'EGP'}}, 'totalShippingPriceSet': {'shopMoney': {'amount': '120.0', 'currencyCode': 'EGP'}}, 'customer': {'id': 'gid://shopify/Customer/8028955639874', 'firstName': 'Mariam', 'lastName': 'Mackawy', 'email': 'mariammackawy5@gmail.com', 'phone': None, 'addresses': [{'address1': 'الرحاب ٢، مجموعة ١٣١، عمارة ٢٠، شقة ٤١', 'address2': '41 El Rehab2, Group 131, Building 20, Apartment', 'city': 'Cairo', 'province': 'Cairo', 'zip': '11511', 'country': 'Egypt', 'phone': '01285358540'}]}, 'shippingAddress': {'address1': 'الرحاب ٢، مجموعة ١٣١، عمارة ٢٠، شقة ٤١', 'address2': '41 El Rehab2, Group 131, Building 20, Apartment', 'city': 'Cairo', 'province': 'Cairo', 'zip': '11511', 'country': 'Egypt', 'phone': '01285358540'}, 'billingAddress': {'address1': 'الرحاب ٢، مجموعة ١٣١، عمارة ٢٠، شقة ٤١', 'address2': '41 El Rehab2, Group 131, Building 20, Apartment', 'city': 'Cairo', 'province': 'Cairo', 'zip': '11511', 'country': 'Egypt', 'phone': '01285358540'}, 'lineItems': {'edges': [{'node': {'id': 'gid://shopify/LineItem/15822184742978', 'quantity': 1, 'sku': 'FG-0000498', 'title': 'Cassandra Pinky Ring', 'variant': {'id': 'gid://shopify/ProductVariant/42003149881410', 'sku': 'FG-0000498', 'price': '2800.00', 'product': {'id': 'gid://shopify/Product/7442024300610', 'title': 'Cassandra Pinky Ring'}}, 'discountedTotalSet': {'shopMoney': {'amount': '2800.0', 'currencyCode': 'EGP'}}}}]}, 'note': None}}, {'node': {'id': 'gid://shopify/Order/6314438000706', 'name': '#1467', 'createdAt': '2025-08-03T04:32:29Z', 'tags': [], 'totalPriceSet': {'shopMoney': {'amount': '3200.0', 'currencyCode': 'EGP'}}, 'subtotalPriceSet': {'shopMoney': {'amount': '3200.0', 'currencyCode': 'EGP'}}, 'totalTaxSet': {'shopMoney': {'amount': '0.0', 'currencyCode': 'EGP'}}, 'totalShippingPriceSet': {'shopMoney': {'amount': '0.0', 'currencyCode': 'EGP'}}, 'customer': {'id': 'gid://shopify/Customer/8026031751234', 'firstName': 'sally', 'lastName': 'monir', 'email': 'sallymonir@yahoo.com', 'phone': None, 'addresses': [{'address1': '113, st. 17, First Area, fifth zone, fifth settlement', 'address2': '2', 'city': 'New Cairo', 'province': 'Cairo', 'zip': None, 'country': 'Egypt', 'phone': '+201273099926'}]}, 'shippingAddress': None, 'billingAddress': {'address1': '113, st. 17, First Area, fifth zone, fifth settlement', 'address2': '2', 'city': 'New Cairo', 'province': 'Cairo', 'zip': None, 'country': 'Egypt', 'phone': '+201273099926'}, 'lineItems': {'edges': [{'node': {'id': 'gid://shopify/LineItem/15821581156418', 'quantity': 1, 'sku': 'FG-0000468', 'title': 'Frost Ring', 'variant': {'id': 'gid://shopify/ProductVariant/42003151618114', 'sku': 'FG-0000468', 'price': '3200.00', 'product': {'id': 'gid://shopify/Product/7442025381954', 'title': 'Frost Ring'}}, 'discountedTotalSet': {'shopMoney': {'amount': '3200.0', 'currencyCode': 'EGP'}}}}]}, 'note': None}}, {'node': {'id': 'gid://shopify/Order/6312813002818', 'name': '#1466', 'createdAt': '2025-08-02T11:04:39Z', 'tags': [], 'totalPriceSet': {'shopMoney': {'amount': '4420.0', 'currencyCode': 'EGP'}}, 'subtotalPriceSet': {'shopMoney': {'amount': '4300.0', 'currencyCode': 'EGP'}}, 'totalTaxSet': {'shopMoney': {'amount': '0.0', 'currencyCode': 'EGP'}}, 'totalShippingPriceSet': {'shopMoney': {'amount': '120.0', 'currencyCode': 'EGP'}}, 'customer': {'id': 'gid://shopify/Customer/8026480607298', 'firstName': 'Nadine', 'lastName': 'GALAL', 'email': 'nadinegalal09@gmail.com', 'phone': None, 'addresses': [{'address1': 'امام ٣١ شارع ابراهيم حلمي الدور ٣ شقة ١١', 'address2': 'الدور ٣ شقة ١١', 'city': 'Alexandria', 'province': 'Alexandria', 'zip': None, 'country': 'Egypt', 'phone': '01284444565'}]}, 'shippingAddress': {'address1': 'امام ٣١ شارع ابراهيم حلمي الدور ٣ شقة ١١', 'address2': 'الدور ٣ شقة ١١', 'city': 'Alexandria', 'province': 'Alexandria', 'zip': None, 'country': 'Egypt', 'phone': '01284444565'}, 'billingAddress': {'address1': 'امام ٣١ شارع ابراهيم حلمي الدور ٣ شقة ١١', 'address2': 'الدور ٣ شقة ١١', 'city': 'Alexandria', 'province': 'Alexandria', 'zip': None, 'country': 'Egypt', 'phone': '01284444565'}, 'lineItems': {'edges': [{'node': {'id': 'gid://shopify/LineItem/15817138307138', 'quantity': 1, 'sku': 'FG-0000499', 'title': 'Cassandra Mix Pinky Ring', 'variant': {'id': 'gid://shopify/ProductVariant/42003149815874', 'sku': 'FG-0000499', 'price': '4300.00', 'product': {'id': 'gid://shopify/Product/7442024235074', 'title': 'Cassandra Mix Pinky Ring'}}, 'discountedTotalSet': {'shopMoney': {'amount': '4300.0', 'currencyCode': 'EGP'}}}}]}, 'note': None}}, {'node': {'id': 'gid://shopify/Order/6312140603458', 'name': '#1465', 'createdAt': '2025-08-01T23:27:00Z', 'tags': [], 'totalPriceSet': {'shopMoney': {'amount': '8860.0', 'currencyCode': 'EGP'}}, 'subtotalPriceSet': {'shopMoney': {'amount': '8700.0', 'currencyCode': 'EGP'}}, 'totalTaxSet': {'shopMoney': {'amount': '0.0', 'currencyCode': 'EGP'}}, 'totalShippingPriceSet': {'shopMoney': {'amount': '160.0', 'currencyCode': 'EGP'}}, 'customer': {'id': 'gid://shopify/Customer/8024664145986', 'firstName': 'Mai', 'lastName': 'Aladdin', 'email': 'mayyo69@gmail.com', 'phone': None, 'addresses': [{'address1': 'Sohag - shar2', 'address2': None, 'city': 'Sohag', 'province': 'Sohag', 'zip': None, 'country': 'Egypt', 'phone': '01027733614'}]}, 'shippingAddress': {'address1': 'Sohag - shar2', 'address2': None, 'city': 'Sohag', 'province': 'Sohag', 'zip': None, 'country': 'Egypt', 'phone': '01027733614'}, 'billingAddress': {'address1': 'Sohag - shar2', 'address2': None, 'city': 'Sohag', 'province': 'Sohag', 'zip': None, 'country': 'Egypt', 'phone': '01027733614'}, 'lineItems': {'edges': [{'node': {'id': 'gid://shopify/LineItem/15815787151426', 'quantity': 1, 'sku': 'FG-0000498', 'title': 'Cassandra Pinky Ring', 'variant': {'id': 'gid://shopify/ProductVariant/42003149881410', 'sku': 'FG-0000498', 'price': '2800.00', 'product': {'id': 'gid://shopify/Product/7442024300610', 'title': 'Cassandra Pinky Ring'}}, 'discountedTotalSet': {'shopMoney': {'amount': '2800.0', 'currencyCode': 'EGP'}}}}, {'node': {'id': 'gid://shopify/LineItem/15815787184194', 'quantity': 1, 'sku': 'FG-0000575', 'title': 'Janus Cuff', 'variant': {'id': 'gid://shopify/ProductVariant/42003153256514', 'sku': 'FG-0000575', 'price': '5900.00', 'product': {'id': 'gid://shopify/Product/7442025906242', 'title': 'Janus Cuff'}}, 'discountedTotalSet': {'shopMoney': {'amount': '5900.0', 'currencyCode': 'EGP'}}}}]}, 'note': None}}, {'node': {'id': 'gid://shopify/Order/6311861026882', 'name': '#1464', 'createdAt': '2025-08-01T20:45:45Z', 'tags': [], 'totalPriceSet': {'shopMoney': {'amount': '4800.0', 'currencyCode': 'EGP'}}, 'subtotalPriceSet': {'shopMoney': {'amount': '4800.0', 'currencyCode': 'EGP'}}, 'totalTaxSet': {'shopMoney': {'amount': '0.0', 'currencyCode': 'EGP'}}, 'totalShippingPriceSet': {'shopMoney': {'amount': '0.0', 'currencyCode': 'EGP'}}, 'customer': {'id': 'gid://shopify/Customer/8024130191426', 'firstName': 'Ibrahim', 'lastName': 'ElGohary', 'email': 'hima22may@hotmail.com', 'phone': None, 'addresses': [{'address1': 'Wady compound', 'address2': 'Home', 'city': 'Cairo', 'province': 'Cairo', 'zip': None, 'country': 'Egypt', 'phone': '01007217010'}]}, 'shippingAddress': None, 'billingAddress': {'address1': 'Wady compound', 'address2': 'Home', 'city': 'Cairo', 'province': 'Cairo', 'zip': None, 'country': 'Egypt', 'phone': '01007217010'}, 'lineItems': {'edges': [{'node': {'id': 'gid://shopify/LineItem/15815036600386', 'quantity': 1, 'sku': 'FG-0000075', 'title': 'Sulla Luna Earrings', 'variant': {'id': 'gid://shopify/ProductVariant/42003146211394', 'sku': 'FG-0000075', 'price': '4800.00', 'product': {'id': 'gid://shopify/Product/7442022170690', 'title': 'Sulla Luna Earrings'}}, 'discountedTotalSet': {'shopMoney': {'amount': '4800.0', 'currencyCode': 'EGP'}}}}]}, 'note': None}}, {'node': {'id': 'gid://shopify/Order/6311162380354', 'name': '#1463', 'createdAt': '2025-08-01T15:19:07Z', 'tags': [], 'totalPriceSet': {'shopMoney': {'amount': '7460.0', 'currencyCode': 'EGP'}}, 'subtotalPriceSet': {'shopMoney': {'amount': '7300.0', 'currencyCode': 'EGP'}}, 'totalTaxSet': {'shopMoney': {'amount': '0.0', 'currencyCode': 'EGP'}}, 'totalShippingPriceSet': {'shopMoney': {'amount': '160.0', 'currencyCode': 'EGP'}}, 'customer': {'id': 'gid://shopify/Customer/8022959784002', 'firstName': 'Nahed', 'lastName': 'Mohamed', 'email': 'nahedmohamed714@gmail.com', 'phone': None, 'addresses': [{'address1': 'العصافره بحرى الاسكندريه شارع اطلس عماره ١١ مكرر بجوار سوبر ناركت تسالى جاد امام مايوركا كافيه', 'address2': 'الدور التامن شقه ١٥', 'city': 'alexandria', 'province': 'Alexandria', 'zip': None, 'country': 'Egypt', 'phone': '+201284002489'}]}, 'shippingAddress': {'address1': 'العصافره بحرى الاسكندريه شارع اطلس عماره ١١ مكرر بجوار سوبر ناركت تسالى جاد امام مايوركا كافيه', 'address2': 'الدور التامن شقه ١٥', 'city': 'alexandria', 'province': 'Alexandria', 'zip': None, 'country': 'Egypt', 'phone': '+201284002489'}, 'billingAddress': {'address1': 'العصافره بحرى الاسكندريه شارع اطلس عماره ١١ مكرر بجوار سوبر ناركت تسالى جاد امام مايوركا كافيه', 'address2': 'الدور التامن شقه ١٥', 'city': 'alexandria', 'province': 'Alexandria', 'zip': None, 'country': 'Egypt', 'phone': '+201284002489'}, 'lineItems': {'edges': [{'node': {'id': 'gid://shopify/LineItem/15813349867586', 'quantity': 1, 'sku': 'FG-0000077', 'title': 'Sulla Luna Mix Earrings', 'variant': {'id': 'gid://shopify/ProductVariant/42003146276930', 'sku': 'FG-0000077', 'price': '7300.00', 'product': {'id': 'gid://shopify/Product/7442022203458', 'title': 'Sulla Luna Mix Earrings'}}, 'discountedTotalSet': {'shopMoney': {'amount': '7300.0', 'currencyCode': 'EGP'}}}}]}, 'note': None}}, {'node': {'id': 'gid://shopify/Order/6308680728642', 'name': '#1462', 'createdAt': '2025-07-31T09:58:23Z', 'tags': [], 'totalPriceSet': {'shopMoney': {'amount': '25900.0', 'currencyCode': 'EGP'}}, 'subtotalPriceSet': {'shopMoney': {'amount': '25700.0', 'currencyCode': 'EGP'}}, 'totalTaxSet': {'shopMoney': {'amount': '0.0', 'currencyCode': 'EGP'}}, 'totalShippingPriceSet': {'shopMoney': {'amount': '200.0', 'currencyCode': 'EGP'}}, 'customer': {'id': 'gid://shopify/Customer/8016631660610', 'firstName': 'Mohamed', 'lastName': 'Maher', 'email': 'm.maher525@gmail.com', 'phone': None, 'addresses': [{'address1': None, 'address2': None, 'city': None, 'province': None, 'zip': None, 'country': 'Egypt', 'phone': None}, {'address1': 'الهضبة الوسطى الحي الثالث كمباوند ديار سيتي 3 خلف مدرسة ريماس', 'address2': 'عمارة 2 شقة 20 بوابة 3', 'city': 'Al Mokkatam', 'province': 'Cairo', 'zip': None, 'country': 'Egypt', 'phone': '01069987443'}]}, 'shippingAddress': {'address1': 'الهضبة الوسطى الحي الثالث كمباوند ديار سيتي 3 خلف مدرسة ريماس', 'address2': 'عمارة 2 شقة 20 بوابة 3', 'city': 'Al Mokkatam', 'province': 'Cairo', 'zip': None, 'country': 'Egypt', 'phone': '01069987443'}, 'billingAddress': {'address1': 'الهضبة الوسطى الحي الثالث كمباوند ديار سيتي 3 خلف مدرسة ريماس', 'address2': 'عمارة 2 شقة 20 بوابة 3', 'city': 'Al Mokkatam', 'province': 'Cairo', 'zip': None, 'country': 'Egypt', 'phone': '01069987443'}, 'lineItems': {'edges': [{'node': {'id': 'gid://shopify/LineItem/15807895044162', 'quantity': 1, 'sku': 'FG-0000512', 'title': 'Riverstone Bracelet', 'variant': {'id': 'gid://shopify/ProductVariant/42003152404546', 'sku': 'FG-0000512', 'price': '5000.00', 'product': {'id': 'gid://shopify/Product/7442025611330', 'title': 'Riverstone Bracelet'}}, 'discountedTotalSet': {'shopMoney': {'amount': '5000.0', 'currencyCode': 'EGP'}}}}, {'node': {'id': 'gid://shopify/LineItem/15807895076930', 'quantity': 1, 'sku': 'FG-0000571', 'title': 'Riverstone Ring Mix', 'variant': {'id': 'gid://shopify/ProductVariant/42003150995522', 'sku': 'FG-0000571', 'price': '3900.00', 'product': {'id': 'gid://shopify/Product/7442025152578', 'title': 'Riverstone Ring Mix'}}, 'discountedTotalSet': {'shopMoney': {'amount': '3900.0', 'currencyCode': 'EGP'}}}}, {'node': {'id': 'gid://shopify/LineItem/15807895109698', 'quantity': 1, 'sku': 'FG-0000568', 'title': 'Riverstone Necklace Mix', 'variant': {'id': 'gid://shopify/ProductVariant/42003150962754', 'sku': 'FG-0000568', 'price': '16800.00', 'product': {'id': 'gid://shopify/Product/7442025119810', 'title': 'Riverstone Necklace Mix'}}, 'discountedTotalSet': {'shopMoney': {'amount': '16800.0', 'currencyCode': 'EGP'}}}}]}, 'note': None}}, {'node': {'id': 'gid://shopify/Order/6308073570370', 'name': '#1461', 'createdAt': '2025-07-30T23:37:58Z', 'tags': [], 'totalPriceSet': {'shopMoney': {'amount': '6700.0', 'currencyCode': 'EGP'}}, 'subtotalPriceSet': {'shopMoney': {'amount': '6500.0', 'currencyCode': 'EGP'}}, 'totalTaxSet': {'shopMoney': {'amount': '0.0', 'currencyCode': 'EGP'}}, 'totalShippingPriceSet': {'shopMoney': {'amount': '200.0', 'currencyCode': 'EGP'}}, 'customer': {'id': 'gid://shopify/Customer/8015808462914', 'firstName': 'farouk', 'lastName': 'yehia', 'email': 'farouky01@gmail.com', 'phone': None, 'addresses': [{'address1': 'mesaha sq', 'address2': '5 mesaha sq, 15th floor', 'city': 'giza', 'province': 'Cairo', 'zip': '12611', 'country': 'Egypt', 'phone': '+201060520013'}]}, 'shippingAddress': {'address1': 'mesaha sq', 'address2': '5 mesaha sq, 15th floor', 'city': 'giza', 'province': 'Cairo', 'zip': '12611', 'country': 'Egypt', 'phone': '+201060520013'}, 'billingAddress': {'address1': 'mesaha sq', 'address2': '5 mesaha sq, 15th floor', 'city': 'giza', 'province': 'Cairo', 'zip': '12611', 'country': 'Egypt', 'phone': '+201060520013'}, 'lineItems': {'edges': [{'node': {'id': 'gid://shopify/LineItem/15806636818498', 'quantity': 1, 'sku': 'FG-0000408', 'title': 'Nightfall Earrings', 'variant': {'id': 'gid://shopify/ProductVariant/42003148996674', 'sku': 'FG-0000408', 'price': '6500.00', 'product': {'id': 'gid://shopify/Product/7442023841858', 'title': 'Nightfall Earrings'}}, 'discountedTotalSet': {'shopMoney': {'amount': '6500.0', 'currencyCode': 'EGP'}}}}]}, 'note': None}}], 'pageInfo': {'hasNextPage': True, 'endCursor': 'eyJsYXN0X2lkIjo2MzA4MDczNTcwMzcwLCJsYXN0X3ZhbHVlIjoiMjAyNS0wNy0zMCAyMzozNzo1OC45MDkxNTcifQ=='}}}, 'status': 'success'}
2025-08-05 18:08:59,975 - sync_service - INFO - Retrieved 20 total orders, 20 unsynced orders from Shopify store local
2025-08-05 18:08:59,977 - sync_service - INFO - Processing order: #1480
2025-08-05 18:08:59,977 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'BusinessPartners', 'request': {'method': 'GET', 'url': 'https://10.0.0.100:50000/b1s/v1/BusinessPartners', 'data': None, 'params': {'$filter': "Phone1 eq '00201003370743' or Phone2 eq '00201003370743' or Cellular eq '00201003370743'", '$top': 1}}, 'response': None, 'status': None}
2025-08-05 18:09:00,712 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'BusinessPartners', 'request': None, 'response': {'odata.metadata': 'https://10.0.0.100:50000/b1s/v1/$metadata#BusinessPartners', 'value': [{'CardCode': 'C0021031', 'CardName': 'Omnia Ezz Elarab', 'CardType': 'cCustomer', 'GroupCode': 100, 'Address': None, 'ZipCode': None, 'MailAddress': 'Palm hills 6th october, phase 1 Villa b53', 'MailZipCode': '00000', 'Phone1': None, 'Phone2': None, 'Fax': None, 'ContactPerson': None, 'Notes': None, 'PayTermsGrpCode': -1, 'CreditLimit': 0.0, 'MaxCommitment': 0.0, 'DiscountPercent': 0.0, 'VatLiable': 'vLiable', 'FederalTaxID': None, 'DeductibleAtSource': 'tNO', 'DeductionPercent': 0.0, 'DeductionValidUntil': None, 'PriceListNum': 1, 'IntrestRatePercent': 0.0, 'CommissionPercent': 0.0, 'CommissionGroupCode': 0, 'FreeText': None, 'SalesPersonCode': -1, 'Currency': 'EGP', 'RateDiffAccount': None, 'Cellular': '00201003370743', 'AvarageLate': None, 'City': None, 'County': None, 'Country': 'EG', 'MailCity': 'Giza', 'MailCounty': None, 'MailCountry': 'EG', 'EmailAddress': None, 'Picture': None, 'DefaultAccount': None, 'DefaultBranch': None, 'DefaultBankCode': '-1', 'AdditionalID': None, 'Pager': None, 'FatherCard': None, 'CardForeignName': None, 'FatherType': 'cPayments_sum', 'DeductionOffice': None, 'ExportCode': None, 'MinIntrest': 0.0, 'CurrentAccountBalance': 0.0, 'OpenDeliveryNotesBalance': 0.0, 'OpenOrdersBalance': 0.0, 'OpenChecksBalance': 0.0, 'VatGroup': None, 'ShippingType': None, 'Password': None, 'Indicator': None, 'IBAN': None, 'CreditCardCode': -1, 'CreditCardNum': '', 'CreditCardExpiration': None, 'DebitorAccount': '10601110', 'OpenOpportunities': None, 'Valid': 'tYES', 'ValidFrom': None, 'ValidTo': None, 'ValidRemarks': None, 'Frozen': 'tNO', 'FrozenFrom': None, 'FrozenTo': None, 'FrozenRemarks': None, 'Block': None, 'BillToState': None, 'ShipToState': None, 'ExemptNum': None, 'Priority': -1, 'FormCode1099': None, 'Box1099': None, 'PeymentMethodCode': None, 'BackOrder': 'tYES', 'PartialDelivery': 'tYES', 'BlockDunning': 'tNO', 'BankCountry': None, 'HouseBank': 'CIB', 'HouseBankCountry': 'EG', 'HouseBankAccount': '100029997769', 'ShipToDefault': 'Omnia Ezz Elarab 1', 'DunningLevel': None, 'DunningDate': None, 'CollectionAuthorization': 'tNO', 'DME': None, 'InstructionKey': None, 'SinglePayment': 'tNO', 'ISRBillerID': None, 'PaymentBlock': 'tNO', 'ReferenceDetails': None, 'HouseBankBranch': 'New Cairo', 'OwnerIDNumber': None, 'PaymentBlockDescription': -1, 'TaxExemptionLetterNum': None, 'MaxAmountOfExemption': 0.0, 'ExemptionValidityDateFrom': None, 'ExemptionValidityDateTo': None, 'LinkedBusinessPartner': None, 'LastMultiReconciliationNum': None, 'DeferredTax': 'tNO', 'Equalization': 'tNO', 'SubjectToWithholdingTax': 'boNO', 'CertificateNumber': None, 'ExpirationDate': None, 'NationalInsuranceNum': None, 'AccrualCriteria': 'tNO', 'WTCode': None, 'BillToBuildingFloorRoom': None, 'DownPaymentClearAct': '20101212', 'ChannelBP': None, 'DefaultTechnician': None, 'BilltoDefault': None, 'CustomerBillofExchangDisc': None, 'Territory': None, 'ShipToBuildingFloorRoom': '', 'CustomerBillofExchangPres': None, 'ProjectCode': None, 'VatGroupLatinAmerica': None, 'DunningTerm': None, 'Website': None, 'OtherReceivablePayable': None, 'BillofExchangeonCollection': None, 'CompanyPrivate': 'cCompany', 'LanguageCode': 8, 'UnpaidBillofExchange': None, 'WithholdingTaxDeductionGroup': -1, 'ClosingDateProcedureNumber': None, 'Profession': None, 'BankChargesAllocationCode': None, 'TaxRoundingRule': 'trr_CompanyDefault', 'Properties1': 'tNO', 'Properties2': 'tNO', 'Properties3': 'tNO', 'Properties4': 'tNO', 'Properties5': 'tNO', 'Properties6': 'tNO', 'Properties7': 'tNO', 'Properties8': 'tNO', 'Properties9': 'tNO', 'Properties10': 'tNO', 'Properties11': 'tNO', 'Properties12': 'tNO', 'Properties13': 'tNO', 'Properties14': 'tNO', 'Properties15': 'tNO', 'Properties16': 'tNO', 'Properties17': 'tNO', 'Properties18': 'tNO', 'Properties19': 'tNO', 'Properties20': 'tNO', 'Properties21': 'tNO', 'Properties22': 'tNO', 'Properties23': 'tNO', 'Properties24': 'tNO', 'Properties25': 'tNO', 'Properties26': 'tNO', 'Properties27': 'tNO', 'Properties28': 'tNO', 'Properties29': 'tNO', 'Properties30': 'tNO', 'Properties31': 'tNO', 'Properties32': 'tNO', 'Properties33': 'tNO', 'Properties34': 'tNO', 'Properties35': 'tNO', 'Properties36': 'tNO', 'Properties37': 'tNO', 'Properties38': 'tNO', 'Properties39': 'tNO', 'Properties40': 'tNO', 'Properties41': 'tNO', 'Properties42': 'tNO', 'Properties43': 'tNO', 'Properties44': 'tNO', 'Properties45': 'tNO', 'Properties46': 'tNO', 'Properties47': 'tNO', 'Properties48': 'tNO', 'Properties49': 'tNO', 'Properties50': 'tNO', 'Properties51': 'tNO', 'Properties52': 'tNO', 'Properties53': 'tNO', 'Properties54': 'tNO', 'Properties55': 'tNO', 'Properties56': 'tNO', 'Properties57': 'tNO', 'Properties58': 'tNO', 'Properties59': 'tNO', 'Properties60': 'tNO', 'Properties61': 'tNO', 'Properties62': 'tNO', 'Properties63': 'tNO', 'Properties64': 'tNO', 'CompanyRegistrationNumber': None, 'VerificationNumber': None, 'DiscountBaseObject': 'dgboNone', 'DiscountRelations': 'dgrLowestDiscount', 'TypeReport': 'atCompany', 'ThresholdOverlook': 'tNO', 'SurchargeOverlook': 'tNO', 'DownPaymentInterimAccount': None, 'OperationCode347': 'ocSalesOrServicesRevenues', 'InsuranceOperation347': 'tNO', 'HierarchicalDeduction': 'tNO', 'ShaamGroup': 'sgServicesAndAsset', 'WithholdingTaxCertified': 'tNO', 'BookkeepingCertified': 'tNO', 'PlanningGroup': None, 'Affiliate': 'tNO', 'Industry': None, 'VatIDNum': None, 'DatevAccount': None, 'DatevFirstDataEntry': 'tYES', 'UseShippedGoodsAccount': 'tNO', 'GTSRegNo': None, 'GTSBankAccountNo': None, 'GTSBillingAddrTel': None, 'ETaxWebSite': None, 'HouseBankIBAN': None, 'VATRegistrationNumber': None, 'RepresentativeName': None, 'IndustryType': None, 'BusinessType': None, 'Series': 87, 'AutomaticPosting': 'apNo', 'InterestAccount': None, 'FeeAccount': None, 'CampaignNumber': None, 'AliasName': None, 'DefaultBlanketAgreementNumber': None, 'EffectiveDiscount': 'dgrLowestDiscount', 'NoDiscounts': 'tNO', 'EffectivePrice': 'epDefaultPriority', 'EffectivePriceConsidersPriceBeforeDiscount': 'tNO', 'GlobalLocationNumber': None, 'EDISenderID': None, 'EDIRecipientID': None, 'ResidenNumber': 'rntSpanishFiscalID', 'RelationshipCode': None, 'RelationshipDateFrom': None, 'RelationshipDateTill': None, 'UnifiedFederalTaxID': None, 'AttachmentEntry': None, 'TypeOfOperation': None, 'EndorsableChecksFromBP': 'tYES', 'AcceptsEndorsedChecks': 'tNO', 'OwnerCode': None, 'BlockSendingMarketingContent': 'tNO', 'AgentCode': None, 'PriceMode': 'pmNet', 'EDocGenerationType': None, 'EDocStreet': None, 'EDocStreetNumber': None, 'EDocBuildingNumber': None, 'EDocZipCode': None, 'EDocCity': None, 'EDocCountry': None, 'EDocDistrict': None, 'EDocRepresentativeFirstName': None, 'EDocRepresentativeSurname': None, 'EDocRepresentativeCompany': None, 'EDocRepresentativeFiscalCode': None, 'EDocRepresentativeAdditionalId': None, 'EDocPECAddress': None, 'IPACodeForPA': None, 'UpdateDate': '2025-08-05', 'UpdateTime': '18:02:59', 'ExemptionMaxAmountValidationType': 'emaIndividual', 'ECommerceMerchantID': None, 'UseBillToAddrToDetermineTax': 'tNO', 'CreateDate': '2025-08-05', 'CreateTime': '18:02:59', 'DefaultTransporterEntry': None, 'DefaultTransporterLineNumber': None, 'FCERelevant': 'tNO', 'FCEValidateBaseDelivery': 'tNO', 'MainUsage': None, 'EBooksVATExemptionCause': None, 'U_BP_Old': None, 'U_SBO_BPType': 'Person', 'ElectronicProtocols': [], 'BPAddresses': [{'AddressName': 'Omnia Ezz Elarab 1', 'Street': 'Palm hills 6th october, phase 1 Villa b53', 'Block': None, 'ZipCode': '00000', 'City': 'Giza', 'County': None, 'Country': 'EG', 'State': None, 'FederalTaxID': None, 'TaxCode': None, 'BuildingFloorRoom': None, 'AddressType': 'bo_ShipTo', 'AddressName2': None, 'AddressName3': None, 'TypeOfAddress': None, 'StreetNo': None, 'BPCode': 'C0021031', 'RowNum': 0, 'GlobalLocationNumber': None, 'Nationality': None, 'TaxOffice': None, 'GSTIN': None, 'GstType': None, 'CreateDate': '2025-08-05', 'CreateTime': '18:02:59', 'MYFType': None, 'TaasEnabled': 'tYES'}], 'ContactEmployees': [], 'BPAccountReceivablePaybleCollection': [], 'BPPaymentMethods': [], 'BPWithholdingTaxCollection': [], 'BPPaymentDates': [], 'BPBranchAssignment': [], 'BPBankAccounts': [], 'BPFiscalTaxIDCollection': [], 'DiscountGroups': [], 'BPIntrastatExtension': {}, 'BPBlockSendingMarketingContents': []}]}, 'status': 'success'}
2025-08-05 18:09:00,714 - sync_service - INFO - Found existing customer: C0021031
2025-08-05 18:09:00,715 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'Invoices', 'request': {'method': 'POST', 'url': 'https://10.0.0.100:50000/b1s/v1/Invoices', 'data': {'DocDate': '2025-08-05', 'CardCode': 'C0021031', 'NumAtCard': '', 'Comments': '', 'ShipToCode': 'Omnia Ezz Elarab Address 1', 'U_Shopify_Order_ID': '#1480', 'SalesPersonCode': 97, 'DocumentLines': [{'ItemCode': 'ACC-0000001', 'Quantity': 1, 'UnitPrice': 5000.0, 'WarehouseCode': '5A'}]}, 'params': None}, 'response': None, 'status': None}
2025-08-05 18:09:01,785 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'Invoices', 'request': None, 'response': {'status_code': 404, 'text': '{\n   "error" : {\n      "code" : -2028,\n      "message" : {\n         "lang" : "en-us",\n         "value" : "No matching records found (ODBC -2028)"\n      }\n   }\n}\n'}, 'status': 'failure'}
2025-08-05 18:09:01,787 - sync_service - ERROR - Failed to create invoice in SAP: HTTP 404: {
   "error" : {
      "code" : -2028,
      "message" : {
         "lang" : "en-us",
         "value" : "No matching records found (ODBC -2028)"
      }
   }
}

2025-08-05 18:10:33,428 - sync_service - INFO - Initialized Shopify client for store: Local Store (local)
2025-08-05 18:10:33,448 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'login', 'request': {'company': 'JudeBenHalim_Test', 'user': 'manager'}, 'response': None, 'status': None}
2025-08-05 18:10:34,200 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'login', 'request': None, 'response': {'status': 'success'}, 'status': 'success'}
2025-08-05 18:10:34,203 - sync_service - INFO - SAP login successful
2025-08-05 18:10:34,204 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'Warehouses', 'request': {'method': 'GET', 'url': 'https://10.0.0.100:50000/b1s/v1/Warehouses', 'data': None, 'params': None}, 'response': None, 'status': None}
2025-08-05 18:10:34,915 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'Warehouses', 'request': None, 'response': {'odata.metadata': 'https://10.0.0.100:50000/b1s/v1/$metadata#Warehouses', 'value': [{'Street': None, 'StockInflationOffsetAccount': '', 'ZipCode': None, 'DecreasingAccount': '', 'PurchaseAccount': '', 'EURevenuesAccount': '', 'ReturningAccount': '', 'ShippedGoodsAccount': '', 'StockInflationAdjustAccount': '', 'AllowUseTax': 'tNO', 'CostInflationAccount': '', 'ForeignExpensesAccount': '', 'EUExpensesAccount': '', 'CostInflationOffsetAccount': '', 'ExpensesClearingAccount': '', 'PurchaseReturningAccount': '', 'VATInRevenueAccount': '', 'FederalTaxID': None, 'Location': 3, 'Block': None, 'ExpenseAccount': '', 'DecreaseGLAccount': '', 'RevenuesAccount': '', 'TaxGroup': None, 'ExemptRevenuesAccount': '', 'PurchaseOffsetAccount': '', 'CostOfGoodsSold': '50101001', 'WarehouseCode': '5A', 'State': '', 'City': None, 'PriceDifferencesAccount': '50101001', 'VarianceAccount': '', 'Country': None, 'IncreaseGLAccount': '', 'ExchangeRateDifferencesAccount': '', 'WIPMaterialAccount': '', 'WarehouseName': 'Water Way', 'DropShip': 'tNO', 'WIPMaterialVarianceAccount': '', 'TransfersAcc': '20101513', 'InternalKey': None, 'ForeignRevenuesAcc': '', 'BuildingFloorRoom': None, 'County': None, 'Nettable': 'tYES', 'IncreasingAcc': '', 'ExpenseOffsetingAct': '', 'GoodsClearingAcc': '', 'StockAccount': '10501310', 'BusinessPlaceID': None, 'PurchaseCreditAcc': '', 'EUPurchaseCreditAcc': '', 'ForeignPurchaseCreditAcc': '', 'SalesCreditAcc': '', 'SalesCreditEUAcc': '', 'ExemptedCredits': '', 'SalesCreditForeignAcc': '', 'NegativeInventoryAdjustmentAccount': '', 'WHShipToName': None, 'Excisable': 'tNO', 'WHIncomingCenvatAccount': '', 'WHOutgoingCenvatAccount': '', 'StockInTransitAccount': '', 'WipOffsetProfitAndLossAccount': '', 'InventoryOffsetProfitAndLossAccount': '', 'AddressType': None, 'StreetNo': None, 'Storekeeper': None, 'Shipper': None, 'ManageSerialAndBatchNumbers': 'tNO', 'GlobalLocationNumber': None, 'EnableBinLocations': 'tYES', 'BinLocCodeSeparator': '-', 'DefaultBin': 8, 'DefaultBinEnforced': 'tNO', 'AutoAllocOnIssue': 'whsBinSingleChoiceOnly', 'EnableReceivingBinLocations': 'tNO', 'ReceivingBinLocationsBy': 'rblmBinLocationCodeOrder', 'PurchaseBalanceAccount': '', 'Inactive': 'tNO', 'RestrictReceiptToEmptyBinLocation': 'tYES', 'ReceiveUpToMaxQuantity': 'tNO', 'AutoAllocOnReceipt': 'aaormDefaultBin', 'ReceiveUpToMaxWeight': 'tNO', 'ReceiveUpToMethod': 'rutmMaximumQty', 'U_ShopifyInventoryIDLocal': None, 'U_ShopifyInventoryIDInternational': None}, {'Street': None, 'StockInflationOffsetAccount': '', 'ZipCode': None, 'DecreasingAccount': '', 'PurchaseAccount': '', 'EURevenuesAccount': '', 'ReturningAccount': '', 'ShippedGoodsAccount': '', 'StockInflationAdjustAccount': '', 'AllowUseTax': 'tNO', 'CostInflationAccount': '', 'ForeignExpensesAccount': '', 'EUExpensesAccount': '', 'CostInflationOffsetAccount': '', 'ExpensesClearingAccount': '', 'PurchaseReturningAccount': '', 'VATInRevenueAccount': '', 'FederalTaxID': None, 'Location': 7, 'Block': None, 'ExpenseAccount': '', 'DecreaseGLAccount': '', 'RevenuesAccount': '', 'TaxGroup': None, 'ExemptRevenuesAccount': '', 'PurchaseOffsetAccount': '', 'CostOfGoodsSold': '50101001', 'WarehouseCode': 'Arkan', 'State': '', 'City': None, 'PriceDifferencesAccount': '50101001', 'VarianceAccount': '', 'Country': None, 'IncreaseGLAccount': '', 'ExchangeRateDifferencesAccount': '', 'WIPMaterialAccount': '', 'WarehouseName': 'Arkan', 'DropShip': 'tNO', 'WIPMaterialVarianceAccount': '', 'TransfersAcc': '20101513', 'InternalKey': None, 'ForeignRevenuesAcc': '', 'BuildingFloorRoom': None, 'County': None, 'Nettable': 'tYES', 'IncreasingAcc': '', 'ExpenseOffsetingAct': '', 'GoodsClearingAcc': '', 'StockAccount': '10501310', 'BusinessPlaceID': None, 'PurchaseCreditAcc': '', 'EUPurchaseCreditAcc': '', 'ForeignPurchaseCreditAcc': '', 'SalesCreditAcc': '', 'SalesCreditEUAcc': '', 'ExemptedCredits': '', 'SalesCreditForeignAcc': '', 'NegativeInventoryAdjustmentAccount': '', 'WHShipToName': None, 'Excisable': 'tNO', 'WHIncomingCenvatAccount': '', 'WHOutgoingCenvatAccount': '', 'StockInTransitAccount': '', 'WipOffsetProfitAndLossAccount': '', 'InventoryOffsetProfitAndLossAccount': '', 'AddressType': None, 'StreetNo': None, 'Storekeeper': None, 'Shipper': None, 'ManageSerialAndBatchNumbers': 'tNO', 'GlobalLocationNumber': None, 'EnableBinLocations': 'tYES', 'BinLocCodeSeparator': '-', 'DefaultBin': 20, 'DefaultBinEnforced': 'tNO', 'AutoAllocOnIssue': 'whsBinSingleChoiceOnly', 'EnableReceivingBinLocations': 'tNO', 'ReceivingBinLocationsBy': 'rblmBinLocationCodeOrder', 'PurchaseBalanceAccount': '', 'Inactive': 'tNO', 'RestrictReceiptToEmptyBinLocation': 'tYES', 'ReceiveUpToMaxQuantity': 'tNO', 'AutoAllocOnReceipt': 'aaormDefaultBin', 'ReceiveUpToMaxWeight': 'tNO', 'ReceiveUpToMethod': 'rutmMaximumQty', 'U_ShopifyInventoryIDLocal': None, 'U_ShopifyInventoryIDInternational': None}, {'Street': None, 'StockInflationOffsetAccount': '', 'ZipCode': None, 'DecreasingAccount': '', 'PurchaseAccount': '', 'EURevenuesAccount': '', 'ReturningAccount': '', 'ShippedGoodsAccount': '', 'StockInflationAdjustAccount': '', 'AllowUseTax': 'tNO', 'CostInflationAccount': '', 'ForeignExpensesAccount': '', 'EUExpensesAccount': '', 'CostInflationOffsetAccount': '', 'ExpensesClearingAccount': '', 'PurchaseReturningAccount': '', 'VATInRevenueAccount': '', 'FederalTaxID': None, 'Location': 4, 'Block': None, 'ExpenseAccount': '', 'DecreaseGLAccount': '', 'RevenuesAccount': '', 'TaxGroup': None, 'ExemptRevenuesAccount': '', 'PurchaseOffsetAccount': '', 'CostOfGoodsSold': '50101001', 'WarehouseCode': 'DIP', 'State': '', 'City': None, 'PriceDifferencesAccount': '50101001', 'VarianceAccount': '', 'Country': None, 'IncreaseGLAccount': '', 'ExchangeRateDifferencesAccount': '', 'WIPMaterialAccount': '', 'WarehouseName': 'Diplomatics', 'DropShip': 'tNO', 'WIPMaterialVarianceAccount': '', 'TransfersAcc': '20101513', 'InternalKey': None, 'ForeignRevenuesAcc': '', 'BuildingFloorRoom': None, 'County': None, 'Nettable': 'tYES', 'IncreasingAcc': '', 'ExpenseOffsetingAct': '', 'GoodsClearingAcc': '', 'StockAccount': '10501310', 'BusinessPlaceID': None, 'PurchaseCreditAcc': '', 'EUPurchaseCreditAcc': '', 'ForeignPurchaseCreditAcc': '', 'SalesCreditAcc': '', 'SalesCreditEUAcc': '', 'ExemptedCredits': '', 'SalesCreditForeignAcc': '', 'NegativeInventoryAdjustmentAccount': '', 'WHShipToName': None, 'Excisable': 'tNO', 'WHIncomingCenvatAccount': '', 'WHOutgoingCenvatAccount': '', 'StockInTransitAccount': '', 'WipOffsetProfitAndLossAccount': '', 'InventoryOffsetProfitAndLossAccount': '', 'AddressType': None, 'StreetNo': None, 'Storekeeper': None, 'Shipper': None, 'ManageSerialAndBatchNumbers': 'tNO', 'GlobalLocationNumber': None, 'EnableBinLocations': 'tYES', 'BinLocCodeSeparator': '-', 'DefaultBin': 11, 'DefaultBinEnforced': 'tNO', 'AutoAllocOnIssue': 'whsBinSingleChoiceOnly', 'EnableReceivingBinLocations': 'tNO', 'ReceivingBinLocationsBy': 'rblmBinLocationCodeOrder', 'PurchaseBalanceAccount': '', 'Inactive': 'tNO', 'RestrictReceiptToEmptyBinLocation': 'tYES', 'ReceiveUpToMaxQuantity': 'tNO', 'AutoAllocOnReceipt': 'aaormDefaultBin', 'ReceiveUpToMaxWeight': 'tNO', 'ReceiveUpToMethod': 'rutmMaximumQty', 'U_ShopifyInventoryIDLocal': None, 'U_ShopifyInventoryIDInternational': None}, {'Street': None, 'StockInflationOffsetAccount': '', 'ZipCode': None, 'DecreasingAccount': '', 'PurchaseAccount': '', 'EURevenuesAccount': '', 'ReturningAccount': '', 'ShippedGoodsAccount': '', 'StockInflationAdjustAccount': '', 'AllowUseTax': 'tNO', 'CostInflationAccount': '', 'ForeignExpensesAccount': '', 'EUExpensesAccount': '', 'CostInflationOffsetAccount': '', 'ExpensesClearingAccount': '', 'PurchaseReturningAccount': '', 'VATInRevenueAccount': '', 'FederalTaxID': None, 'Location': 1, 'Block': None, 'ExpenseAccount': '', 'DecreaseGLAccount': '', 'RevenuesAccount': '', 'TaxGroup': None, 'ExemptRevenuesAccount': '', 'PurchaseOffsetAccount': '', 'CostOfGoodsSold': '50101001', 'WarehouseCode': 'INC', 'State': '', 'City': None, 'PriceDifferencesAccount': '50101001', 'VarianceAccount': '', 'Country': None, 'IncreaseGLAccount': '', 'ExchangeRateDifferencesAccount': '', 'WIPMaterialAccount': '', 'WarehouseName': 'Incoming Warehouse', 'DropShip': 'tNO', 'WIPMaterialVarianceAccount': '', 'TransfersAcc': '20101513', 'InternalKey': None, 'ForeignRevenuesAcc': '', 'BuildingFloorRoom': None, 'County': None, 'Nettable': 'tYES', 'IncreasingAcc': '', 'ExpenseOffsetingAct': '', 'GoodsClearingAcc': '', 'StockAccount': '10501310', 'BusinessPlaceID': None, 'PurchaseCreditAcc': '', 'EUPurchaseCreditAcc': '', 'ForeignPurchaseCreditAcc': '', 'SalesCreditAcc': '', 'SalesCreditEUAcc': '', 'ExemptedCredits': '', 'SalesCreditForeignAcc': '', 'NegativeInventoryAdjustmentAccount': '', 'WHShipToName': None, 'Excisable': 'tNO', 'WHIncomingCenvatAccount': '', 'WHOutgoingCenvatAccount': '', 'StockInTransitAccount': '', 'WipOffsetProfitAndLossAccount': '', 'InventoryOffsetProfitAndLossAccount': '', 'AddressType': None, 'StreetNo': None, 'Storekeeper': None, 'Shipper': None, 'ManageSerialAndBatchNumbers': 'tNO', 'GlobalLocationNumber': None, 'EnableBinLocations': 'tNO', 'BinLocCodeSeparator': '-', 'DefaultBin': None, 'DefaultBinEnforced': 'tNO', 'AutoAllocOnIssue': 'whsBinSingleChoiceOnly', 'EnableReceivingBinLocations': 'tNO', 'ReceivingBinLocationsBy': 'rblmBinLocationCodeOrder', 'PurchaseBalanceAccount': '', 'Inactive': 'tNO', 'RestrictReceiptToEmptyBinLocation': 'tYES', 'ReceiveUpToMaxQuantity': 'tNO', 'AutoAllocOnReceipt': 'aaormDefaultBin', 'ReceiveUpToMaxWeight': 'tNO', 'ReceiveUpToMethod': 'rutmMaximumQty', 'U_ShopifyInventoryIDLocal': None, 'U_ShopifyInventoryIDInternational': None}, {'Street': None, 'StockInflationOffsetAccount': '', 'ZipCode': None, 'DecreasingAccount': '', 'PurchaseAccount': '', 'EURevenuesAccount': '', 'ReturningAccount': '', 'ShippedGoodsAccount': '', 'StockInflationAdjustAccount': '', 'AllowUseTax': 'tNO', 'CostInflationAccount': '', 'ForeignExpensesAccount': '', 'EUExpensesAccount': '', 'CostInflationOffsetAccount': '', 'ExpensesClearingAccount': '', 'PurchaseReturningAccount': '', 'VATInRevenueAccount': '', 'FederalTaxID': None, 'Location': 1, 'Block': None, 'ExpenseAccount': '', 'DecreaseGLAccount': '', 'RevenuesAccount': '', 'TaxGroup': None, 'ExemptRevenuesAccount': '', 'PurchaseOffsetAccount': '', 'CostOfGoodsSold': '50101001', 'WarehouseCode': 'ONL', 'State': '', 'City': None, 'PriceDifferencesAccount': '50101001', 'VarianceAccount': '', 'Country': None, 'IncreaseGLAccount': '', 'ExchangeRateDifferencesAccount': '', 'WIPMaterialAccount': '', 'WarehouseName': 'Online Sales', 'DropShip': 'tNO', 'WIPMaterialVarianceAccount': '', 'TransfersAcc': '20101513', 'InternalKey': None, 'ForeignRevenuesAcc': '', 'BuildingFloorRoom': None, 'County': None, 'Nettable': 'tYES', 'IncreasingAcc': '', 'ExpenseOffsetingAct': '', 'GoodsClearingAcc': '', 'StockAccount': '10501312', 'BusinessPlaceID': None, 'PurchaseCreditAcc': '', 'EUPurchaseCreditAcc': '', 'ForeignPurchaseCreditAcc': '', 'SalesCreditAcc': '', 'SalesCreditEUAcc': '', 'ExemptedCredits': '', 'SalesCreditForeignAcc': '', 'NegativeInventoryAdjustmentAccount': '', 'WHShipToName': None, 'Excisable': 'tNO', 'WHIncomingCenvatAccount': '', 'WHOutgoingCenvatAccount': '', 'StockInTransitAccount': '', 'WipOffsetProfitAndLossAccount': '', 'InventoryOffsetProfitAndLossAccount': '', 'AddressType': None, 'StreetNo': None, 'Storekeeper': None, 'Shipper': None, 'ManageSerialAndBatchNumbers': 'tNO', 'GlobalLocationNumber': None, 'EnableBinLocations': 'tNO', 'BinLocCodeSeparator': '-', 'DefaultBin': None, 'DefaultBinEnforced': 'tNO', 'AutoAllocOnIssue': 'whsBinSingleChoiceOnly', 'EnableReceivingBinLocations': 'tNO', 'ReceivingBinLocationsBy': 'rblmBinLocationCodeOrder', 'PurchaseBalanceAccount': '', 'Inactive': 'tNO', 'RestrictReceiptToEmptyBinLocation': 'tYES', 'ReceiveUpToMaxQuantity': 'tNO', 'AutoAllocOnReceipt': 'aaormDefaultBin', 'ReceiveUpToMaxWeight': 'tNO', 'ReceiveUpToMethod': 'rutmMaximumQty', 'U_ShopifyInventoryIDLocal': None, 'U_ShopifyInventoryIDInternational': None}, {'Street': None, 'StockInflationOffsetAccount': '', 'ZipCode': None, 'DecreasingAccount': '', 'PurchaseAccount': '', 'EURevenuesAccount': '', 'ReturningAccount': '', 'ShippedGoodsAccount': '', 'StockInflationAdjustAccount': '', 'AllowUseTax': 'tNO', 'CostInflationAccount': '', 'ForeignExpensesAccount': '', 'EUExpensesAccount': '', 'CostInflationOffsetAccount': '', 'ExpensesClearingAccount': '', 'PurchaseReturningAccount': '', 'VATInRevenueAccount': '', 'FederalTaxID': None, 'Location': 6, 'Block': None, 'ExpenseAccount': '', 'DecreaseGLAccount': '', 'RevenuesAccount': '', 'TaxGroup': None, 'ExemptRevenuesAccount': '', 'PurchaseOffsetAccount': '', 'CostOfGoodsSold': '50101001', 'WarehouseCode': 'PHO', 'State': '', 'City': None, 'PriceDifferencesAccount': '50101001', 'VarianceAccount': '', 'Country': None, 'IncreaseGLAccount': '', 'ExchangeRateDifferencesAccount': '', 'WIPMaterialAccount': '', 'WarehouseName': 'Photography', 'DropShip': 'tNO', 'WIPMaterialVarianceAccount': '', 'TransfersAcc': '20101513', 'InternalKey': None, 'ForeignRevenuesAcc': '', 'BuildingFloorRoom': None, 'County': None, 'Nettable': 'tYES', 'IncreasingAcc': '', 'ExpenseOffsetingAct': '', 'GoodsClearingAcc': '', 'StockAccount': '10501310', 'BusinessPlaceID': None, 'PurchaseCreditAcc': '', 'EUPurchaseCreditAcc': '', 'ForeignPurchaseCreditAcc': '', 'SalesCreditAcc': '', 'SalesCreditEUAcc': '', 'ExemptedCredits': '', 'SalesCreditForeignAcc': '', 'NegativeInventoryAdjustmentAccount': '', 'WHShipToName': None, 'Excisable': 'tNO', 'WHIncomingCenvatAccount': '', 'WHOutgoingCenvatAccount': '', 'StockInTransitAccount': '', 'WipOffsetProfitAndLossAccount': '', 'InventoryOffsetProfitAndLossAccount': '', 'AddressType': None, 'StreetNo': None, 'Storekeeper': None, 'Shipper': None, 'ManageSerialAndBatchNumbers': 'tNO', 'GlobalLocationNumber': None, 'EnableBinLocations': 'tYES', 'BinLocCodeSeparator': '-', 'DefaultBin': None, 'DefaultBinEnforced': 'tNO', 'AutoAllocOnIssue': 'whsBinSingleChoiceOnly', 'EnableReceivingBinLocations': 'tNO', 'ReceivingBinLocationsBy': 'rblmBinLocationCodeOrder', 'PurchaseBalanceAccount': '', 'Inactive': 'tYES', 'RestrictReceiptToEmptyBinLocation': 'tYES', 'ReceiveUpToMaxQuantity': 'tNO', 'AutoAllocOnReceipt': 'aaormDefaultBin', 'ReceiveUpToMaxWeight': 'tNO', 'ReceiveUpToMethod': 'rutmMaximumQty', 'U_ShopifyInventoryIDLocal': None, 'U_ShopifyInventoryIDInternational': None}, {'Street': None, 'StockInflationOffsetAccount': '', 'ZipCode': None, 'DecreasingAccount': '', 'PurchaseAccount': '', 'EURevenuesAccount': '', 'ReturningAccount': '', 'ShippedGoodsAccount': '6100103', 'StockInflationAdjustAccount': '', 'AllowUseTax': 'tNO', 'CostInflationAccount': '', 'ForeignExpensesAccount': '', 'EUExpensesAccount': '', 'CostInflationOffsetAccount': '', 'ExpensesClearingAccount': '', 'PurchaseReturningAccount': '', 'VATInRevenueAccount': '', 'FederalTaxID': None, 'Location': None, 'Block': None, 'ExpenseAccount': '', 'DecreaseGLAccount': '', 'RevenuesAccount': '', 'TaxGroup': None, 'ExemptRevenuesAccount': '', 'PurchaseOffsetAccount': '', 'CostOfGoodsSold': '50101001', 'WarehouseCode': 'PHO-EX', 'State': '', 'City': None, 'PriceDifferencesAccount': '50101001', 'VarianceAccount': '', 'Country': None, 'IncreaseGLAccount': '', 'ExchangeRateDifferencesAccount': '', 'WIPMaterialAccount': '10501281', 'WarehouseName': 'PHO-EXTERNAL', 'DropShip': 'tNO', 'WIPMaterialVarianceAccount': '', 'TransfersAcc': '20101513', 'InternalKey': None, 'ForeignRevenuesAcc': '', 'BuildingFloorRoom': None, 'County': None, 'Nettable': 'tYES', 'IncreasingAcc': '', 'ExpenseOffsetingAct': '', 'GoodsClearingAcc': '', 'StockAccount': '10501310', 'BusinessPlaceID': None, 'PurchaseCreditAcc': '50101001', 'EUPurchaseCreditAcc': '50101001', 'ForeignPurchaseCreditAcc': '50101001', 'SalesCreditAcc': '40101101', 'SalesCreditEUAcc': '40101101', 'ExemptedCredits': '', 'SalesCreditForeignAcc': '40101101', 'NegativeInventoryAdjustmentAccount': '', 'WHShipToName': None, 'Excisable': 'tNO', 'WHIncomingCenvatAccount': '', 'WHOutgoingCenvatAccount': '', 'StockInTransitAccount': '20101515', 'WipOffsetProfitAndLossAccount': '', 'InventoryOffsetProfitAndLossAccount': '', 'AddressType': None, 'StreetNo': None, 'Storekeeper': None, 'Shipper': None, 'ManageSerialAndBatchNumbers': 'tNO', 'GlobalLocationNumber': None, 'EnableBinLocations': 'tYES', 'BinLocCodeSeparator': '-', 'DefaultBin': None, 'DefaultBinEnforced': 'tNO', 'AutoAllocOnIssue': 'whsBinSingleChoiceOnly', 'EnableReceivingBinLocations': 'tNO', 'ReceivingBinLocationsBy': 'rblmBinLocationCodeOrder', 'PurchaseBalanceAccount': '', 'Inactive': 'tNO', 'RestrictReceiptToEmptyBinLocation': 'tYES', 'ReceiveUpToMaxQuantity': 'tNO', 'AutoAllocOnReceipt': 'aaormDefaultBin', 'ReceiveUpToMaxWeight': 'tNO', 'ReceiveUpToMethod': 'rutmMaximumQty', 'U_ShopifyInventoryIDLocal': None, 'U_ShopifyInventoryIDInternational': None}, {'Street': None, 'StockInflationOffsetAccount': '', 'ZipCode': None, 'DecreasingAccount': '', 'PurchaseAccount': '', 'EURevenuesAccount': '', 'ReturningAccount': '', 'ShippedGoodsAccount': '6100103', 'StockInflationAdjustAccount': '', 'AllowUseTax': 'tNO', 'CostInflationAccount': '', 'ForeignExpensesAccount': '', 'EUExpensesAccount': '', 'CostInflationOffsetAccount': '', 'ExpensesClearingAccount': '', 'PurchaseReturningAccount': '', 'VATInRevenueAccount': '', 'FederalTaxID': None, 'Location': None, 'Block': None, 'ExpenseAccount': '', 'DecreaseGLAccount': '', 'RevenuesAccount': '', 'TaxGroup': None, 'ExemptRevenuesAccount': '', 'PurchaseOffsetAccount': '', 'CostOfGoodsSold': '50101001', 'WarehouseCode': 'PHO-IN', 'State': '', 'City': None, 'PriceDifferencesAccount': '50101001', 'VarianceAccount': '', 'Country': None, 'IncreaseGLAccount': '', 'ExchangeRateDifferencesAccount': '', 'WIPMaterialAccount': '10501281', 'WarehouseName': 'PHO-INTERNAL', 'DropShip': 'tNO', 'WIPMaterialVarianceAccount': '', 'TransfersAcc': '20101513', 'InternalKey': None, 'ForeignRevenuesAcc': '', 'BuildingFloorRoom': None, 'County': None, 'Nettable': 'tYES', 'IncreasingAcc': '', 'ExpenseOffsetingAct': '', 'GoodsClearingAcc': '', 'StockAccount': '10501310', 'BusinessPlaceID': None, 'PurchaseCreditAcc': '50101001', 'EUPurchaseCreditAcc': '50101001', 'ForeignPurchaseCreditAcc': '50101001', 'SalesCreditAcc': '40101101', 'SalesCreditEUAcc': '40101101', 'ExemptedCredits': '', 'SalesCreditForeignAcc': '40101101', 'NegativeInventoryAdjustmentAccount': '', 'WHShipToName': None, 'Excisable': 'tNO', 'WHIncomingCenvatAccount': '', 'WHOutgoingCenvatAccount': '', 'StockInTransitAccount': '20101515', 'WipOffsetProfitAndLossAccount': '', 'InventoryOffsetProfitAndLossAccount': '', 'AddressType': None, 'StreetNo': None, 'Storekeeper': None, 'Shipper': None, 'ManageSerialAndBatchNumbers': 'tNO', 'GlobalLocationNumber': None, 'EnableBinLocations': 'tNO', 'BinLocCodeSeparator': '-', 'DefaultBin': None, 'DefaultBinEnforced': 'tNO', 'AutoAllocOnIssue': 'whsBinSingleChoiceOnly', 'EnableReceivingBinLocations': 'tNO', 'ReceivingBinLocationsBy': 'rblmBinLocationCodeOrder', 'PurchaseBalanceAccount': '', 'Inactive': 'tNO', 'RestrictReceiptToEmptyBinLocation': 'tYES', 'ReceiveUpToMaxQuantity': 'tNO', 'AutoAllocOnReceipt': 'aaormDefaultBin', 'ReceiveUpToMaxWeight': 'tNO', 'ReceiveUpToMethod': 'rutmMaximumQty', 'U_ShopifyInventoryIDLocal': None, 'U_ShopifyInventoryIDInternational': None}, {'Street': None, 'StockInflationOffsetAccount': '', 'ZipCode': None, 'DecreasingAccount': '', 'PurchaseAccount': '', 'EURevenuesAccount': '', 'ReturningAccount': '', 'ShippedGoodsAccount': '', 'StockInflationAdjustAccount': '', 'AllowUseTax': 'tNO', 'CostInflationAccount': '', 'ForeignExpensesAccount': '', 'EUExpensesAccount': '', 'CostInflationOffsetAccount': '', 'ExpensesClearingAccount': '', 'PurchaseReturningAccount': '', 'VATInRevenueAccount': '', 'FederalTaxID': None, 'Location': 5, 'Block': None, 'ExpenseAccount': '', 'DecreaseGLAccount': '', 'RevenuesAccount': '', 'TaxGroup': None, 'ExemptRevenuesAccount': '', 'PurchaseOffsetAccount': '', 'CostOfGoodsSold': '50101001', 'WarehouseCode': 'QCW', 'State': '', 'City': None, 'PriceDifferencesAccount': '50101001', 'VarianceAccount': '', 'Country': None, 'IncreaseGLAccount': '', 'ExchangeRateDifferencesAccount': '', 'WIPMaterialAccount': '', 'WarehouseName': 'Quality Control', 'DropShip': 'tNO', 'WIPMaterialVarianceAccount': '', 'TransfersAcc': '20101513', 'InternalKey': None, 'ForeignRevenuesAcc': '', 'BuildingFloorRoom': None, 'County': None, 'Nettable': 'tYES', 'IncreasingAcc': '', 'ExpenseOffsetingAct': '', 'GoodsClearingAcc': '', 'StockAccount': '10501211', 'BusinessPlaceID': None, 'PurchaseCreditAcc': '', 'EUPurchaseCreditAcc': '', 'ForeignPurchaseCreditAcc': '', 'SalesCreditAcc': '', 'SalesCreditEUAcc': '', 'ExemptedCredits': '', 'SalesCreditForeignAcc': '', 'NegativeInventoryAdjustmentAccount': '', 'WHShipToName': None, 'Excisable': 'tNO', 'WHIncomingCenvatAccount': '', 'WHOutgoingCenvatAccount': '', 'StockInTransitAccount': '', 'WipOffsetProfitAndLossAccount': '', 'InventoryOffsetProfitAndLossAccount': '', 'AddressType': None, 'StreetNo': None, 'Storekeeper': None, 'Shipper': None, 'ManageSerialAndBatchNumbers': 'tNO', 'GlobalLocationNumber': None, 'EnableBinLocations': 'tNO', 'BinLocCodeSeparator': '-', 'DefaultBin': None, 'DefaultBinEnforced': 'tNO', 'AutoAllocOnIssue': 'whsBinSingleChoiceOnly', 'EnableReceivingBinLocations': 'tNO', 'ReceivingBinLocationsBy': 'rblmBinLocationCodeOrder', 'PurchaseBalanceAccount': '', 'Inactive': 'tYES', 'RestrictReceiptToEmptyBinLocation': 'tYES', 'ReceiveUpToMaxQuantity': 'tNO', 'AutoAllocOnReceipt': 'aaormDefaultBin', 'ReceiveUpToMaxWeight': 'tNO', 'ReceiveUpToMethod': 'rutmMaximumQty', 'U_ShopifyInventoryIDLocal': None, 'U_ShopifyInventoryIDInternational': None}, {'Street': None, 'StockInflationOffsetAccount': '', 'ZipCode': None, 'DecreasingAccount': '', 'PurchaseAccount': '', 'EURevenuesAccount': '', 'ReturningAccount': '', 'ShippedGoodsAccount': '', 'StockInflationAdjustAccount': '', 'AllowUseTax': 'tNO', 'CostInflationAccount': '', 'ForeignExpensesAccount': '', 'EUExpensesAccount': '', 'CostInflationOffsetAccount': '', 'ExpensesClearingAccount': '', 'PurchaseReturningAccount': '', 'VATInRevenueAccount': '', 'FederalTaxID': None, 'Location': 1, 'Block': None, 'ExpenseAccount': '', 'DecreaseGLAccount': '', 'RevenuesAccount': '', 'TaxGroup': None, 'ExemptRevenuesAccount': '', 'PurchaseOffsetAccount': '', 'CostOfGoodsSold': '50101001', 'WarehouseCode': 'RTW', 'State': '', 'City': None, 'PriceDifferencesAccount': '50101001', 'VarianceAccount': '', 'Country': None, 'IncreaseGLAccount': '', 'ExchangeRateDifferencesAccount': '', 'WIPMaterialAccount': '', 'WarehouseName': 'Retailer Warehouse', 'DropShip': 'tNO', 'WIPMaterialVarianceAccount': '', 'TransfersAcc': '20101513', 'InternalKey': None, 'ForeignRevenuesAcc': '', 'BuildingFloorRoom': None, 'County': None, 'Nettable': 'tYES', 'IncreasingAcc': '', 'ExpenseOffsetingAct': '', 'GoodsClearingAcc': '', 'StockAccount': '10501310', 'BusinessPlaceID': None, 'PurchaseCreditAcc': '', 'EUPurchaseCreditAcc': '', 'ForeignPurchaseCreditAcc': '', 'SalesCreditAcc': '', 'SalesCreditEUAcc': '', 'ExemptedCredits': '', 'SalesCreditForeignAcc': '', 'NegativeInventoryAdjustmentAccount': '', 'WHShipToName': None, 'Excisable': 'tNO', 'WHIncomingCenvatAccount': '', 'WHOutgoingCenvatAccount': '', 'StockInTransitAccount': '', 'WipOffsetProfitAndLossAccount': '', 'InventoryOffsetProfitAndLossAccount': '', 'AddressType': None, 'StreetNo': None, 'Storekeeper': None, 'Shipper': None, 'ManageSerialAndBatchNumbers': 'tNO', 'GlobalLocationNumber': None, 'EnableBinLocations': 'tNO', 'BinLocCodeSeparator': '-', 'DefaultBin': None, 'DefaultBinEnforced': 'tNO', 'AutoAllocOnIssue': 'whsBinSingleChoiceOnly', 'EnableReceivingBinLocations': 'tNO', 'ReceivingBinLocationsBy': 'rblmBinLocationCodeOrder', 'PurchaseBalanceAccount': '', 'Inactive': 'tNO', 'RestrictReceiptToEmptyBinLocation': 'tYES', 'ReceiveUpToMaxQuantity': 'tNO', 'AutoAllocOnReceipt': 'aaormDefaultBin', 'ReceiveUpToMaxWeight': 'tNO', 'ReceiveUpToMethod': 'rutmMaximumQty', 'U_ShopifyInventoryIDLocal': None, 'U_ShopifyInventoryIDInternational': None}, {'Street': None, 'StockInflationOffsetAccount': '', 'ZipCode': None, 'DecreasingAccount': '', 'PurchaseAccount': '', 'EURevenuesAccount': '', 'ReturningAccount': '', 'ShippedGoodsAccount': '', 'StockInflationAdjustAccount': '', 'AllowUseTax': 'tNO', 'CostInflationAccount': '', 'ForeignExpensesAccount': '', 'EUExpensesAccount': '', 'CostInflationOffsetAccount': '', 'ExpensesClearingAccount': '', 'PurchaseReturningAccount': '', 'VATInRevenueAccount': '', 'FederalTaxID': None, 'Location': 1, 'Block': None, 'ExpenseAccount': '', 'DecreaseGLAccount': '', 'RevenuesAccount': '', 'TaxGroup': None, 'ExemptRevenuesAccount': '', 'PurchaseOffsetAccount': '', 'CostOfGoodsSold': '50101001', 'WarehouseCode': 'RTWH', 'State': '', 'City': None, 'PriceDifferencesAccount': '50101001', 'VarianceAccount': '', 'Country': None, 'IncreaseGLAccount': '', 'ExchangeRateDifferencesAccount': '', 'WIPMaterialAccount': '', 'WarehouseName': 'Retailer Warehouse', 'DropShip': 'tNO', 'WIPMaterialVarianceAccount': '', 'TransfersAcc': '20101513', 'InternalKey': None, 'ForeignRevenuesAcc': '', 'BuildingFloorRoom': None, 'County': None, 'Nettable': 'tYES', 'IncreasingAcc': '', 'ExpenseOffsetingAct': '', 'GoodsClearingAcc': '', 'StockAccount': '10501310', 'BusinessPlaceID': None, 'PurchaseCreditAcc': '', 'EUPurchaseCreditAcc': '', 'ForeignPurchaseCreditAcc': '', 'SalesCreditAcc': '', 'SalesCreditEUAcc': '', 'ExemptedCredits': '', 'SalesCreditForeignAcc': '', 'NegativeInventoryAdjustmentAccount': '', 'WHShipToName': None, 'Excisable': 'tNO', 'WHIncomingCenvatAccount': '', 'WHOutgoingCenvatAccount': '', 'StockInTransitAccount': '', 'WipOffsetProfitAndLossAccount': '', 'InventoryOffsetProfitAndLossAccount': '', 'AddressType': None, 'StreetNo': None, 'Storekeeper': None, 'Shipper': None, 'ManageSerialAndBatchNumbers': 'tNO', 'GlobalLocationNumber': None, 'EnableBinLocations': 'tYES', 'BinLocCodeSeparator': '-', 'DefaultBin': 41, 'DefaultBinEnforced': 'tNO', 'AutoAllocOnIssue': 'whsBinSingleChoiceOnly', 'EnableReceivingBinLocations': 'tNO', 'ReceivingBinLocationsBy': 'rblmBinLocationCodeOrder', 'PurchaseBalanceAccount': '', 'Inactive': 'tNO', 'RestrictReceiptToEmptyBinLocation': 'tYES', 'ReceiveUpToMaxQuantity': 'tNO', 'AutoAllocOnReceipt': 'aaormDefaultBin', 'ReceiveUpToMaxWeight': 'tNO', 'ReceiveUpToMethod': 'rutmMaximumQty', 'U_ShopifyInventoryIDLocal': None, 'U_ShopifyInventoryIDInternational': None}, {'Street': None, 'StockInflationOffsetAccount': '', 'ZipCode': None, 'DecreasingAccount': '', 'PurchaseAccount': '', 'EURevenuesAccount': '', 'ReturningAccount': '', 'ShippedGoodsAccount': '', 'StockInflationAdjustAccount': '', 'AllowUseTax': 'tNO', 'CostInflationAccount': '', 'ForeignExpensesAccount': '', 'EUExpensesAccount': '', 'CostInflationOffsetAccount': '', 'ExpensesClearingAccount': '', 'PurchaseReturningAccount': '', 'VATInRevenueAccount': '', 'FederalTaxID': None, 'Location': 1, 'Block': None, 'ExpenseAccount': '', 'DecreaseGLAccount': '', 'RevenuesAccount': '', 'TaxGroup': None, 'ExemptRevenuesAccount': '', 'PurchaseOffsetAccount': '', 'CostOfGoodsSold': '50101001', 'WarehouseCode': 'SW', 'State': '', 'City': None, 'PriceDifferencesAccount': '50101001', 'VarianceAccount': '', 'Country': None, 'IncreaseGLAccount': '', 'ExchangeRateDifferencesAccount': '', 'WIPMaterialAccount': '', 'WarehouseName': 'Show Room', 'DropShip': 'tNO', 'WIPMaterialVarianceAccount': '', 'TransfersAcc': '20101513', 'InternalKey': None, 'ForeignRevenuesAcc': '', 'BuildingFloorRoom': None, 'County': None, 'Nettable': 'tYES', 'IncreasingAcc': '', 'ExpenseOffsetingAct': '', 'GoodsClearingAcc': '', 'StockAccount': '10501310', 'BusinessPlaceID': None, 'PurchaseCreditAcc': '', 'EUPurchaseCreditAcc': '', 'ForeignPurchaseCreditAcc': '', 'SalesCreditAcc': '', 'SalesCreditEUAcc': '', 'ExemptedCredits': '', 'SalesCreditForeignAcc': '', 'NegativeInventoryAdjustmentAccount': '', 'WHShipToName': None, 'Excisable': 'tNO', 'WHIncomingCenvatAccount': '', 'WHOutgoingCenvatAccount': '', 'StockInTransitAccount': '', 'WipOffsetProfitAndLossAccount': '', 'InventoryOffsetProfitAndLossAccount': '', 'AddressType': None, 'StreetNo': None, 'Storekeeper': None, 'Shipper': None, 'ManageSerialAndBatchNumbers': 'tNO', 'GlobalLocationNumber': None, 'EnableBinLocations': 'tYES', 'BinLocCodeSeparator': '-', 'DefaultBin': 2, 'DefaultBinEnforced': 'tNO', 'AutoAllocOnIssue': 'whsBinBinCodeOrder', 'EnableReceivingBinLocations': 'tNO', 'ReceivingBinLocationsBy': 'rblmBinLocationCodeOrder', 'PurchaseBalanceAccount': '', 'Inactive': 'tNO', 'RestrictReceiptToEmptyBinLocation': 'tYES', 'ReceiveUpToMaxQuantity': 'tNO', 'AutoAllocOnReceipt': 'aaormDefaultBin', 'ReceiveUpToMaxWeight': 'tNO', 'ReceiveUpToMethod': 'rutmMaximumQty', 'U_ShopifyInventoryIDLocal': None, 'U_ShopifyInventoryIDInternational': None}, {'Street': None, 'StockInflationOffsetAccount': '', 'ZipCode': None, 'DecreasingAccount': '', 'PurchaseAccount': '', 'EURevenuesAccount': '', 'ReturningAccount': '', 'ShippedGoodsAccount': '', 'StockInflationAdjustAccount': '', 'AllowUseTax': 'tNO', 'CostInflationAccount': '', 'ForeignExpensesAccount': '', 'EUExpensesAccount': '', 'CostInflationOffsetAccount': '', 'ExpensesClearingAccount': '', 'PurchaseReturningAccount': '', 'VATInRevenueAccount': '', 'FederalTaxID': None, 'Location': 1, 'Block': None, 'ExpenseAccount': '', 'DecreaseGLAccount': '', 'RevenuesAccount': '', 'TaxGroup': None, 'ExemptRevenuesAccount': '', 'PurchaseOffsetAccount': '', 'CostOfGoodsSold': '50101001', 'WarehouseCode': 'WLS', 'State': '', 'City': None, 'PriceDifferencesAccount': '50101001', 'VarianceAccount': '', 'Country': None, 'IncreaseGLAccount': '', 'ExchangeRateDifferencesAccount': '', 'WIPMaterialAccount': '', 'WarehouseName': 'Whole Sales', 'DropShip': 'tNO', 'WIPMaterialVarianceAccount': '', 'TransfersAcc': '20101513', 'InternalKey': None, 'ForeignRevenuesAcc': '', 'BuildingFloorRoom': None, 'County': None, 'Nettable': 'tYES', 'IncreasingAcc': '', 'ExpenseOffsetingAct': '', 'GoodsClearingAcc': '', 'StockAccount': '10501310', 'BusinessPlaceID': None, 'PurchaseCreditAcc': '', 'EUPurchaseCreditAcc': '', 'ForeignPurchaseCreditAcc': '', 'SalesCreditAcc': '', 'SalesCreditEUAcc': '', 'ExemptedCredits': '', 'SalesCreditForeignAcc': '', 'NegativeInventoryAdjustmentAccount': '', 'WHShipToName': None, 'Excisable': 'tNO', 'WHIncomingCenvatAccount': '', 'WHOutgoingCenvatAccount': '', 'StockInTransitAccount': '', 'WipOffsetProfitAndLossAccount': '', 'InventoryOffsetProfitAndLossAccount': '', 'AddressType': None, 'StreetNo': None, 'Storekeeper': None, 'Shipper': None, 'ManageSerialAndBatchNumbers': 'tNO', 'GlobalLocationNumber': None, 'EnableBinLocations': 'tNO', 'BinLocCodeSeparator': '-', 'DefaultBin': None, 'DefaultBinEnforced': 'tNO', 'AutoAllocOnIssue': 'whsBinSingleChoiceOnly', 'EnableReceivingBinLocations': 'tNO', 'ReceivingBinLocationsBy': 'rblmBinLocationCodeOrder', 'PurchaseBalanceAccount': '', 'Inactive': 'tNO', 'RestrictReceiptToEmptyBinLocation': 'tYES', 'ReceiveUpToMaxQuantity': 'tNO', 'AutoAllocOnReceipt': 'aaormDefaultBin', 'ReceiveUpToMaxWeight': 'tNO', 'ReceiveUpToMethod': 'rutmMaximumQty', 'U_ShopifyInventoryIDLocal': None, 'U_ShopifyInventoryIDInternational': None}, {'Street': None, 'StockInflationOffsetAccount': '', 'ZipCode': None, 'DecreasingAccount': '', 'PurchaseAccount': '', 'EURevenuesAccount': '', 'ReturningAccount': '', 'ShippedGoodsAccount': '', 'StockInflationAdjustAccount': '', 'AllowUseTax': 'tNO', 'CostInflationAccount': '', 'ForeignExpensesAccount': '', 'EUExpensesAccount': '', 'CostInflationOffsetAccount': '', 'ExpensesClearingAccount': '', 'PurchaseReturningAccount': '', 'VATInRevenueAccount': '', 'FederalTaxID': None, 'Location': 5, 'Block': None, 'ExpenseAccount': '', 'DecreaseGLAccount': '', 'RevenuesAccount': '', 'TaxGroup': None, 'ExemptRevenuesAccount': '', 'PurchaseOffsetAccount': '', 'CostOfGoodsSold': '50101001', 'WarehouseCode': 'WW', 'State': '', 'City': None, 'PriceDifferencesAccount': '50101001', 'VarianceAccount': '', 'Country': None, 'IncreaseGLAccount': '', 'ExchangeRateDifferencesAccount': '', 'WIPMaterialAccount': '', 'WarehouseName': 'Work Shop', 'DropShip': 'tNO', 'WIPMaterialVarianceAccount': '', 'TransfersAcc': '20101513', 'InternalKey': None, 'ForeignRevenuesAcc': '', 'BuildingFloorRoom': None, 'County': None, 'Nettable': 'tYES', 'IncreasingAcc': '', 'ExpenseOffsetingAct': '', 'GoodsClearingAcc': '', 'StockAccount': '10501310', 'BusinessPlaceID': None, 'PurchaseCreditAcc': '', 'EUPurchaseCreditAcc': '', 'ForeignPurchaseCreditAcc': '', 'SalesCreditAcc': '', 'SalesCreditEUAcc': '', 'ExemptedCredits': '', 'SalesCreditForeignAcc': '', 'NegativeInventoryAdjustmentAccount': '', 'WHShipToName': None, 'Excisable': 'tNO', 'WHIncomingCenvatAccount': '', 'WHOutgoingCenvatAccount': '', 'StockInTransitAccount': '', 'WipOffsetProfitAndLossAccount': '', 'InventoryOffsetProfitAndLossAccount': '', 'AddressType': None, 'StreetNo': None, 'Storekeeper': None, 'Shipper': None, 'ManageSerialAndBatchNumbers': 'tNO', 'GlobalLocationNumber': None, 'EnableBinLocations': 'tNO', 'BinLocCodeSeparator': '-', 'DefaultBin': None, 'DefaultBinEnforced': 'tNO', 'AutoAllocOnIssue': 'whsBinSingleChoiceOnly', 'EnableReceivingBinLocations': 'tNO', 'ReceivingBinLocationsBy': 'rblmBinLocationCodeOrder', 'PurchaseBalanceAccount': '', 'Inactive': 'tNO', 'RestrictReceiptToEmptyBinLocation': 'tYES', 'ReceiveUpToMaxQuantity': 'tNO', 'AutoAllocOnReceipt': 'aaormDefaultBin', 'ReceiveUpToMaxWeight': 'tNO', 'ReceiveUpToMethod': 'rutmMaximumQty', 'U_ShopifyInventoryIDLocal': None, 'U_ShopifyInventoryIDInternational': None}, {'Street': None, 'StockInflationOffsetAccount': '', 'ZipCode': None, 'DecreasingAccount': '', 'PurchaseAccount': '', 'EURevenuesAccount': '40101101', 'ReturningAccount': '10501310', 'ShippedGoodsAccount': '6100103', 'StockInflationAdjustAccount': '', 'AllowUseTax': 'tNO', 'CostInflationAccount': '', 'ForeignExpensesAccount': '50101001', 'EUExpensesAccount': '50101001', 'CostInflationOffsetAccount': '', 'ExpensesClearingAccount': '', 'PurchaseReturningAccount': '', 'VATInRevenueAccount': '', 'FederalTaxID': None, 'Location': 5, 'Block': None, 'ExpenseAccount': '50101001', 'DecreaseGLAccount': '', 'RevenuesAccount': '40101101', 'TaxGroup': None, 'ExemptRevenuesAccount': '', 'PurchaseOffsetAccount': '', 'CostOfGoodsSold': '50101001', 'WarehouseCode': 'WW-CON', 'State': '', 'City': None, 'PriceDifferencesAccount': '50101001', 'VarianceAccount': '', 'Country': None, 'IncreaseGLAccount': '', 'ExchangeRateDifferencesAccount': '', 'WIPMaterialAccount': '10501281', 'WarehouseName': 'WKS - Consignment', 'DropShip': 'tNO', 'WIPMaterialVarianceAccount': '', 'TransfersAcc': '20101513', 'InternalKey': None, 'ForeignRevenuesAcc': '40101101', 'BuildingFloorRoom': None, 'County': None, 'Nettable': 'tYES', 'IncreasingAcc': '', 'ExpenseOffsetingAct': '', 'GoodsClearingAcc': '10501210', 'StockAccount': '10501310', 'BusinessPlaceID': None, 'PurchaseCreditAcc': '50101001', 'EUPurchaseCreditAcc': '50101001', 'ForeignPurchaseCreditAcc': '50101001', 'SalesCreditAcc': '40101101', 'SalesCreditEUAcc': '40101101', 'ExemptedCredits': '', 'SalesCreditForeignAcc': '40101101', 'NegativeInventoryAdjustmentAccount': '', 'WHShipToName': None, 'Excisable': 'tNO', 'WHIncomingCenvatAccount': '', 'WHOutgoingCenvatAccount': '', 'StockInTransitAccount': '20101515', 'WipOffsetProfitAndLossAccount': '', 'InventoryOffsetProfitAndLossAccount': '', 'AddressType': None, 'StreetNo': None, 'Storekeeper': None, 'Shipper': None, 'ManageSerialAndBatchNumbers': 'tNO', 'GlobalLocationNumber': None, 'EnableBinLocations': 'tNO', 'BinLocCodeSeparator': '-', 'DefaultBin': None, 'DefaultBinEnforced': 'tNO', 'AutoAllocOnIssue': 'whsBinSingleChoiceOnly', 'EnableReceivingBinLocations': 'tNO', 'ReceivingBinLocationsBy': 'rblmBinLocationCodeOrder', 'PurchaseBalanceAccount': '', 'Inactive': 'tNO', 'RestrictReceiptToEmptyBinLocation': 'tYES', 'ReceiveUpToMaxQuantity': 'tNO', 'AutoAllocOnReceipt': 'aaormDefaultBin', 'ReceiveUpToMaxWeight': 'tNO', 'ReceiveUpToMethod': 'rutmMaximumQty', 'U_ShopifyInventoryIDLocal': None, 'U_ShopifyInventoryIDInternational': None}, {'Street': None, 'StockInflationOffsetAccount': '', 'ZipCode': None, 'DecreasingAccount': '', 'PurchaseAccount': '', 'EURevenuesAccount': '40101101', 'ReturningAccount': '10501310', 'ShippedGoodsAccount': '6100103', 'StockInflationAdjustAccount': '', 'AllowUseTax': 'tNO', 'CostInflationAccount': '', 'ForeignExpensesAccount': '50101001', 'EUExpensesAccount': '50101001', 'CostInflationOffsetAccount': '', 'ExpensesClearingAccount': '', 'PurchaseReturningAccount': '', 'VATInRevenueAccount': '', 'FederalTaxID': None, 'Location': 5, 'Block': None, 'ExpenseAccount': '50101001', 'DecreaseGLAccount': '', 'RevenuesAccount': '40101101', 'TaxGroup': None, 'ExemptRevenuesAccount': '', 'PurchaseOffsetAccount': '', 'CostOfGoodsSold': '50101001', 'WarehouseCode': 'WW-DAM', 'State': '', 'City': None, 'PriceDifferencesAccount': '50101001', 'VarianceAccount': '', 'Country': None, 'IncreaseGLAccount': '', 'ExchangeRateDifferencesAccount': '', 'WIPMaterialAccount': '10501281', 'WarehouseName': 'WW-Damage', 'DropShip': 'tNO', 'WIPMaterialVarianceAccount': '', 'TransfersAcc': '20101513', 'InternalKey': None, 'ForeignRevenuesAcc': '40101101', 'BuildingFloorRoom': None, 'County': None, 'Nettable': 'tYES', 'IncreasingAcc': '', 'ExpenseOffsetingAct': '', 'GoodsClearingAcc': '10501210', 'StockAccount': '10501310', 'BusinessPlaceID': None, 'PurchaseCreditAcc': '50101001', 'EUPurchaseCreditAcc': '50101001', 'ForeignPurchaseCreditAcc': '50101001', 'SalesCreditAcc': '40101101', 'SalesCreditEUAcc': '40101101', 'ExemptedCredits': '', 'SalesCreditForeignAcc': '40101101', 'NegativeInventoryAdjustmentAccount': '', 'WHShipToName': None, 'Excisable': 'tNO', 'WHIncomingCenvatAccount': '', 'WHOutgoingCenvatAccount': '', 'StockInTransitAccount': '20101515', 'WipOffsetProfitAndLossAccount': '', 'InventoryOffsetProfitAndLossAccount': '', 'AddressType': None, 'StreetNo': None, 'Storekeeper': None, 'Shipper': None, 'ManageSerialAndBatchNumbers': 'tNO', 'GlobalLocationNumber': None, 'EnableBinLocations': 'tNO', 'BinLocCodeSeparator': '-', 'DefaultBin': None, 'DefaultBinEnforced': 'tNO', 'AutoAllocOnIssue': 'whsBinSingleChoiceOnly', 'EnableReceivingBinLocations': 'tNO', 'ReceivingBinLocationsBy': 'rblmBinLocationCodeOrder', 'PurchaseBalanceAccount': '', 'Inactive': 'tNO', 'RestrictReceiptToEmptyBinLocation': 'tYES', 'ReceiveUpToMaxQuantity': 'tNO', 'AutoAllocOnReceipt': 'aaormDefaultBin', 'ReceiveUpToMaxWeight': 'tNO', 'ReceiveUpToMethod': 'rutmMaximumQty', 'U_ShopifyInventoryIDLocal': None, 'U_ShopifyInventoryIDInternational': None}, {'Street': None, 'StockInflationOffsetAccount': '', 'ZipCode': None, 'DecreasingAccount': '', 'PurchaseAccount': '', 'EURevenuesAccount': '40101101', 'ReturningAccount': '10501310', 'ShippedGoodsAccount': '6100103', 'StockInflationAdjustAccount': '', 'AllowUseTax': 'tNO', 'CostInflationAccount': '', 'ForeignExpensesAccount': '50101001', 'EUExpensesAccount': '50101001', 'CostInflationOffsetAccount': '', 'ExpensesClearingAccount': '', 'PurchaseReturningAccount': '', 'VATInRevenueAccount': '', 'FederalTaxID': None, 'Location': 5, 'Block': None, 'ExpenseAccount': '50101001', 'DecreaseGLAccount': '', 'RevenuesAccount': '40101101', 'TaxGroup': None, 'ExemptRevenuesAccount': '', 'PurchaseOffsetAccount': '', 'CostOfGoodsSold': '50101001', 'WarehouseCode': 'WW-REP', 'State': '', 'City': None, 'PriceDifferencesAccount': '50101001', 'VarianceAccount': '', 'Country': None, 'IncreaseGLAccount': '', 'ExchangeRateDifferencesAccount': '', 'WIPMaterialAccount': '10501281', 'WarehouseName': 'WW-Repaire', 'DropShip': 'tNO', 'WIPMaterialVarianceAccount': '', 'TransfersAcc': '20101513', 'InternalKey': None, 'ForeignRevenuesAcc': '40101101', 'BuildingFloorRoom': None, 'County': None, 'Nettable': 'tYES', 'IncreasingAcc': '', 'ExpenseOffsetingAct': '', 'GoodsClearingAcc': '10501210', 'StockAccount': '10501310', 'BusinessPlaceID': None, 'PurchaseCreditAcc': '50101001', 'EUPurchaseCreditAcc': '50101001', 'ForeignPurchaseCreditAcc': '50101001', 'SalesCreditAcc': '40101101', 'SalesCreditEUAcc': '40101101', 'ExemptedCredits': '', 'SalesCreditForeignAcc': '40101101', 'NegativeInventoryAdjustmentAccount': '', 'WHShipToName': None, 'Excisable': 'tNO', 'WHIncomingCenvatAccount': '', 'WHOutgoingCenvatAccount': '', 'StockInTransitAccount': '20101515', 'WipOffsetProfitAndLossAccount': '', 'InventoryOffsetProfitAndLossAccount': '', 'AddressType': None, 'StreetNo': None, 'Storekeeper': None, 'Shipper': None, 'ManageSerialAndBatchNumbers': 'tNO', 'GlobalLocationNumber': None, 'EnableBinLocations': 'tNO', 'BinLocCodeSeparator': '-', 'DefaultBin': None, 'DefaultBinEnforced': 'tNO', 'AutoAllocOnIssue': 'whsBinSingleChoiceOnly', 'EnableReceivingBinLocations': 'tNO', 'ReceivingBinLocationsBy': 'rblmBinLocationCodeOrder', 'PurchaseBalanceAccount': '', 'Inactive': 'tNO', 'RestrictReceiptToEmptyBinLocation': 'tYES', 'ReceiveUpToMaxQuantity': 'tNO', 'AutoAllocOnReceipt': 'aaormDefaultBin', 'ReceiveUpToMaxWeight': 'tNO', 'ReceiveUpToMethod': 'rutmMaximumQty', 'U_ShopifyInventoryIDLocal': None, 'U_ShopifyInventoryIDInternational': None}, {'Street': None, 'StockInflationOffsetAccount': '', 'ZipCode': None, 'DecreasingAccount': '', 'PurchaseAccount': '', 'EURevenuesAccount': '40101101', 'ReturningAccount': '10501310', 'ShippedGoodsAccount': '6100103', 'StockInflationAdjustAccount': '', 'AllowUseTax': 'tNO', 'CostInflationAccount': '', 'ForeignExpensesAccount': '50101001', 'EUExpensesAccount': '50101001', 'CostInflationOffsetAccount': '', 'ExpensesClearingAccount': '', 'PurchaseReturningAccount': '', 'VATInRevenueAccount': '', 'FederalTaxID': None, 'Location': 5, 'Block': None, 'ExpenseAccount': '50101001', 'DecreaseGLAccount': '', 'RevenuesAccount': '40101101', 'TaxGroup': None, 'ExemptRevenuesAccount': '', 'PurchaseOffsetAccount': '', 'CostOfGoodsSold': '50101001', 'WarehouseCode': 'WW-SAM', 'State': '', 'City': None, 'PriceDifferencesAccount': '50101001', 'VarianceAccount': '', 'Country': None, 'IncreaseGLAccount': '', 'ExchangeRateDifferencesAccount': '', 'WIPMaterialAccount': '10501281', 'WarehouseName': 'WKS - Sample', 'DropShip': 'tNO', 'WIPMaterialVarianceAccount': '', 'TransfersAcc': '20101513', 'InternalKey': None, 'ForeignRevenuesAcc': '40101101', 'BuildingFloorRoom': None, 'County': None, 'Nettable': 'tYES', 'IncreasingAcc': '', 'ExpenseOffsetingAct': '', 'GoodsClearingAcc': '10501210', 'StockAccount': '10501310', 'BusinessPlaceID': None, 'PurchaseCreditAcc': '50101001', 'EUPurchaseCreditAcc': '50101001', 'ForeignPurchaseCreditAcc': '50101001', 'SalesCreditAcc': '40101101', 'SalesCreditEUAcc': '40101101', 'ExemptedCredits': '', 'SalesCreditForeignAcc': '40101101', 'NegativeInventoryAdjustmentAccount': '', 'WHShipToName': None, 'Excisable': 'tNO', 'WHIncomingCenvatAccount': '', 'WHOutgoingCenvatAccount': '', 'StockInTransitAccount': '20101515', 'WipOffsetProfitAndLossAccount': '', 'InventoryOffsetProfitAndLossAccount': '', 'AddressType': None, 'StreetNo': None, 'Storekeeper': None, 'Shipper': None, 'ManageSerialAndBatchNumbers': 'tNO', 'GlobalLocationNumber': None, 'EnableBinLocations': 'tNO', 'BinLocCodeSeparator': '-', 'DefaultBin': None, 'DefaultBinEnforced': 'tNO', 'AutoAllocOnIssue': 'whsBinSingleChoiceOnly', 'EnableReceivingBinLocations': 'tNO', 'ReceivingBinLocationsBy': 'rblmBinLocationCodeOrder', 'PurchaseBalanceAccount': '', 'Inactive': 'tNO', 'RestrictReceiptToEmptyBinLocation': 'tYES', 'ReceiveUpToMaxQuantity': 'tNO', 'AutoAllocOnReceipt': 'aaormDefaultBin', 'ReceiveUpToMaxWeight': 'tNO', 'ReceiveUpToMethod': 'rutmMaximumQty', 'U_ShopifyInventoryIDLocal': None, 'U_ShopifyInventoryIDInternational': None}, {'Street': None, 'StockInflationOffsetAccount': '', 'ZipCode': None, 'DecreasingAccount': '', 'PurchaseAccount': '', 'EURevenuesAccount': '40101101', 'ReturningAccount': '10501310', 'ShippedGoodsAccount': '6100103', 'StockInflationAdjustAccount': '', 'AllowUseTax': 'tNO', 'CostInflationAccount': '', 'ForeignExpensesAccount': '50101001', 'EUExpensesAccount': '50101001', 'CostInflationOffsetAccount': '', 'ExpensesClearingAccount': '', 'PurchaseReturningAccount': '', 'VATInRevenueAccount': '', 'FederalTaxID': None, 'Location': 5, 'Block': None, 'ExpenseAccount': '50101001', 'DecreaseGLAccount': '', 'RevenuesAccount': '40101101', 'TaxGroup': None, 'ExemptRevenuesAccount': '', 'PurchaseOffsetAccount': '', 'CostOfGoodsSold': '50101001', 'WarehouseCode': 'WW-WIP', 'State': '', 'City': None, 'PriceDifferencesAccount': '50101001', 'VarianceAccount': '', 'Country': None, 'IncreaseGLAccount': '', 'ExchangeRateDifferencesAccount': '', 'WIPMaterialAccount': '10501281', 'WarehouseName': 'WKS - WIP', 'DropShip': 'tNO', 'WIPMaterialVarianceAccount': '', 'TransfersAcc': '20101513', 'InternalKey': None, 'ForeignRevenuesAcc': '40101101', 'BuildingFloorRoom': None, 'County': None, 'Nettable': 'tYES', 'IncreasingAcc': '', 'ExpenseOffsetingAct': '', 'GoodsClearingAcc': '10501210', 'StockAccount': '10501310', 'BusinessPlaceID': None, 'PurchaseCreditAcc': '50101001', 'EUPurchaseCreditAcc': '50101001', 'ForeignPurchaseCreditAcc': '50101001', 'SalesCreditAcc': '40101101', 'SalesCreditEUAcc': '40101101', 'ExemptedCredits': '', 'SalesCreditForeignAcc': '40101101', 'NegativeInventoryAdjustmentAccount': '', 'WHShipToName': None, 'Excisable': 'tNO', 'WHIncomingCenvatAccount': '', 'WHOutgoingCenvatAccount': '', 'StockInTransitAccount': '20101515', 'WipOffsetProfitAndLossAccount': '', 'InventoryOffsetProfitAndLossAccount': '', 'AddressType': None, 'StreetNo': None, 'Storekeeper': None, 'Shipper': None, 'ManageSerialAndBatchNumbers': 'tNO', 'GlobalLocationNumber': None, 'EnableBinLocations': 'tNO', 'BinLocCodeSeparator': '-', 'DefaultBin': None, 'DefaultBinEnforced': 'tNO', 'AutoAllocOnIssue': 'whsBinSingleChoiceOnly', 'EnableReceivingBinLocations': 'tNO', 'ReceivingBinLocationsBy': 'rblmBinLocationCodeOrder', 'PurchaseBalanceAccount': '', 'Inactive': 'tNO', 'RestrictReceiptToEmptyBinLocation': 'tYES', 'ReceiveUpToMaxQuantity': 'tNO', 'AutoAllocOnReceipt': 'aaormDefaultBin', 'ReceiveUpToMaxWeight': 'tNO', 'ReceiveUpToMethod': 'rutmMaximumQty', 'U_ShopifyInventoryIDLocal': None, 'U_ShopifyInventoryIDInternational': None}, {'Street': None, 'StockInflationOffsetAccount': '', 'ZipCode': None, 'DecreasingAccount': '', 'PurchaseAccount': '', 'EURevenuesAccount': '', 'ReturningAccount': '', 'ShippedGoodsAccount': '', 'StockInflationAdjustAccount': '', 'AllowUseTax': 'tNO', 'CostInflationAccount': '', 'ForeignExpensesAccount': '', 'EUExpensesAccount': '', 'CostInflationOffsetAccount': '', 'ExpensesClearingAccount': '', 'PurchaseReturningAccount': '', 'VATInRevenueAccount': '', 'FederalTaxID': None, 'Location': 2, 'Block': None, 'ExpenseAccount': '', 'DecreaseGLAccount': '', 'RevenuesAccount': '', 'TaxGroup': None, 'ExemptRevenuesAccount': '', 'PurchaseOffsetAccount': '', 'CostOfGoodsSold': '50101001', 'WarehouseCode': 'ZW', 'State': '', 'City': None, 'PriceDifferencesAccount': '50101001', 'VarianceAccount': '', 'Country': None, 'IncreaseGLAccount': '', 'ExchangeRateDifferencesAccount': '', 'WIPMaterialAccount': '', 'WarehouseName': 'Zamalek', 'DropShip': 'tNO', 'WIPMaterialVarianceAccount': '', 'TransfersAcc': '20101513', 'InternalKey': None, 'ForeignRevenuesAcc': '', 'BuildingFloorRoom': None, 'County': None, 'Nettable': 'tYES', 'IncreasingAcc': '', 'ExpenseOffsetingAct': '', 'GoodsClearingAcc': '', 'StockAccount': '10501310', 'BusinessPlaceID': None, 'PurchaseCreditAcc': '', 'EUPurchaseCreditAcc': '', 'ForeignPurchaseCreditAcc': '', 'SalesCreditAcc': '', 'SalesCreditEUAcc': '', 'ExemptedCredits': '', 'SalesCreditForeignAcc': '', 'NegativeInventoryAdjustmentAccount': '', 'WHShipToName': None, 'Excisable': 'tNO', 'WHIncomingCenvatAccount': '', 'WHOutgoingCenvatAccount': '', 'StockInTransitAccount': '', 'WipOffsetProfitAndLossAccount': '', 'InventoryOffsetProfitAndLossAccount': '', 'AddressType': None, 'StreetNo': None, 'Storekeeper': None, 'Shipper': None, 'ManageSerialAndBatchNumbers': 'tNO', 'GlobalLocationNumber': None, 'EnableBinLocations': 'tYES', 'BinLocCodeSeparator': '-', 'DefaultBin': 14, 'DefaultBinEnforced': 'tNO', 'AutoAllocOnIssue': 'whsBinSingleChoiceOnly', 'EnableReceivingBinLocations': 'tNO', 'ReceivingBinLocationsBy': 'rblmBinLocationCodeOrder', 'PurchaseBalanceAccount': '', 'Inactive': 'tNO', 'RestrictReceiptToEmptyBinLocation': 'tYES', 'ReceiveUpToMaxQuantity': 'tNO', 'AutoAllocOnReceipt': 'aaormDefaultBin', 'ReceiveUpToMaxWeight': 'tNO', 'ReceiveUpToMethod': 'rutmMaximumQty', 'U_ShopifyInventoryIDLocal': None, 'U_ShopifyInventoryIDInternational': None}], 'odata.nextLink': 'Warehouses?$skip=20'}, 'status': 'success'}
2025-08-05 18:10:34,933 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'Items', 'request': {'method': 'GET', 'url': 'https://10.0.0.100:50000/b1s/v1/Items', 'data': None, 'params': {'$top': 5}}, 'response': None, 'status': None}
2025-08-05 18:10:35,855 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'Items', 'request': None, 'response': {'odata.metadata': 'https://10.0.0.100:50000/b1s/v1/$metadata#Items', 'value': [{'ItemCode': 'ACC-0000001', 'ItemName': 'Ring Holder With Slit 5*5cm', 'ForeignName': None, 'ItemsGroupCode': 110, 'CustomsGroupCode': -1, 'SalesVATGroup': 'X0', 'BarCode': None, 'VatLiable': 'tYES', 'PurchaseItem': 'tYES', 'SalesItem': 'tNO', 'InventoryItem': 'tYES', 'IncomeAccount': None, 'ExemptIncomeAccount': None, 'ExpanseAccount': None, 'Mainsupplier': None, 'SupplierCatalogNo': None, 'DesiredInventory': 0.0, 'MinInventory': 50.0, 'Picture': None, 'User_Text': None, 'SerialNum': None, 'CommissionPercent': 0.0, 'CommissionSum': 0.0, 'CommissionGroup': 0, 'TreeType': 'iNotATree', 'AssetItem': 'tNO', 'DataExportCode': None, 'Manufacturer': -1, 'QuantityOnStock': 35.0, 'QuantityOrderedFromVendors': 0.0, 'QuantityOrderedByCustomers': 0.0, 'ManageSerialNumbers': 'tNO', 'ManageBatchNumbers': 'tNO', 'Valid': 'tYES', 'ValidFrom': None, 'ValidTo': None, 'ValidRemarks': None, 'Frozen': 'tNO', 'FrozenFrom': None, 'FrozenTo': None, 'FrozenRemarks': None, 'SalesUnit': None, 'SalesItemsPerUnit': 1.0, 'SalesPackagingUnit': None, 'SalesQtyPerPackUnit': 1.0, 'SalesUnitLength': None, 'SalesLengthUnit': None, 'SalesUnitWidth': None, 'SalesWidthUnit': None, 'SalesUnitHeight': None, 'SalesHeightUnit': None, 'SalesUnitVolume': 0.0, 'SalesVolumeUnit': 4, 'SalesUnitWeight': None, 'SalesWeightUnit': None, 'PurchaseUnit': None, 'PurchaseItemsPerUnit': 1.0, 'PurchasePackagingUnit': None, 'PurchaseQtyPerPackUnit': 1.0, 'PurchaseUnitLength': None, 'PurchaseLengthUnit': None, 'PurchaseUnitWidth': None, 'PurchaseWidthUnit': None, 'PurchaseUnitHeight': None, 'PurchaseHeightUnit': None, 'PurchaseUnitVolume': 0.0, 'PurchaseVolumeUnit': 4, 'PurchaseUnitWeight': None, 'PurchaseWeightUnit': None, 'PurchaseVATGroup': 'X1', 'SalesFactor1': 1.0, 'SalesFactor2': 1.0, 'SalesFactor3': 1.0, 'SalesFactor4': 1.0, 'PurchaseFactor1': 1.0, 'PurchaseFactor2': 1.0, 'PurchaseFactor3': 1.0, 'PurchaseFactor4': 1.0, 'MovingAveragePrice': 0.0, 'ForeignRevenuesAccount': None, 'ECRevenuesAccount': None, 'ForeignExpensesAccount': None, 'ECExpensesAccount': None, 'AvgStdPrice': 0.0, 'DefaultWarehouse': None, 'ShipType': None, 'GLMethod': 'glm_ItemClass', 'TaxType': 'tt_Yes', 'MaxInventory': 0.0, 'ManageStockByWarehouse': 'tYES', 'PurchaseHeightUnit1': None, 'PurchaseUnitHeight1': None, 'PurchaseLengthUnit1': None, 'PurchaseUnitLength1': None, 'PurchaseWeightUnit1': None, 'PurchaseUnitWeight1': None, 'PurchaseWidthUnit1': None, 'PurchaseUnitWidth1': None, 'SalesHeightUnit1': None, 'SalesUnitHeight1': None, 'SalesLengthUnit1': None, 'SalesUnitLength1': None, 'SalesWeightUnit1': None, 'SalesUnitWeight1': None, 'SalesWidthUnit1': None, 'SalesUnitWidth1': None, 'ForceSelectionOfSerialNumber': 'tYES', 'ManageSerialNumbersOnReleaseOnly': 'tNO', 'WTLiable': 'tNO', 'CostAccountingMethod': 'bis_MovingAverage', 'SWW': None, 'WarrantyTemplate': '', 'IndirectTax': 'tNO', 'ArTaxCode': None, 'ApTaxCode': None, 'BaseUnitName': None, 'ItemCountryOrg': None, 'IssueMethod': 'im_Backflush', 'SRIAndBatchManageMethod': 'bomm_OnEveryTransaction', 'IsPhantom': 'tNO', 'InventoryUOM': 'Piece', 'PlanningSystem': 'bop_None', 'ProcurementMethod': 'bom_Buy', 'ComponentWarehouse': 'bomcw_BOM', 'OrderIntervals': None, 'OrderMultiple': 0.0, 'LeadTime': None, 'MinOrderQuantity': 0.0, 'ItemType': 'itItems', 'ItemClass': 'itcMaterial', 'OutgoingServiceCode': -1, 'IncomingServiceCode': -1, 'ServiceGroup': -1, 'NCMCode': -1, 'MaterialType': 'mt_FinishedGoods', 'MaterialGroup': -1, 'ProductSource': '', 'Properties1': 'tNO', 'Properties2': 'tNO', 'Properties3': 'tNO', 'Properties4': 'tNO', 'Properties5': 'tNO', 'Properties6': 'tNO', 'Properties7': 'tNO', 'Properties8': 'tNO', 'Properties9': 'tNO', 'Properties10': 'tNO', 'Properties11': 'tNO', 'Properties12': 'tNO', 'Properties13': 'tNO', 'Properties14': 'tNO', 'Properties15': 'tNO', 'Properties16': 'tNO', 'Properties17': 'tNO', 'Properties18': 'tNO', 'Properties19': 'tNO', 'Properties20': 'tNO', 'Properties21': 'tNO', 'Properties22': 'tNO', 'Properties23': 'tNO', 'Properties24': 'tNO', 'Properties25': 'tNO', 'Properties26': 'tNO', 'Properties27': 'tNO', 'Properties28': 'tNO', 'Properties29': 'tNO', 'Properties30': 'tNO', 'Properties31': 'tNO', 'Properties32': 'tNO', 'Properties33': 'tNO', 'Properties34': 'tNO', 'Properties35': 'tNO', 'Properties36': 'tNO', 'Properties37': 'tNO', 'Properties38': 'tNO', 'Properties39': 'tNO', 'Properties40': 'tNO', 'Properties41': 'tNO', 'Properties42': 'tNO', 'Properties43': 'tNO', 'Properties44': 'tNO', 'Properties45': 'tNO', 'Properties46': 'tNO', 'Properties47': 'tNO', 'Properties48': 'tNO', 'Properties49': 'tNO', 'Properties50': 'tNO', 'Properties51': 'tNO', 'Properties52': 'tNO', 'Properties53': 'tNO', 'Properties54': 'tNO', 'Properties55': 'tNO', 'Properties56': 'tNO', 'Properties57': 'tNO', 'Properties58': 'tNO', 'Properties59': 'tNO', 'Properties60': 'tNO', 'Properties61': 'tNO', 'Properties62': 'tNO', 'Properties63': 'tNO', 'Properties64': 'tNO', 'AutoCreateSerialNumbersOnRelease': 'tNO', 'DNFEntry': -1, 'GTSItemSpec': None, 'GTSItemTaxCategory': None, 'FuelID': None, 'BeverageTableCode': '', 'BeverageGroupCode': '', 'BeverageCommercialBrandCode': None, 'Series': 119, 'ToleranceDays': None, 'TypeOfAdvancedRules': 'toarGeneral', 'IssuePrimarilyBy': 'ipbBinLocations', 'NoDiscounts': 'tNO', 'AssetClass': '', 'AssetGroup': '', 'InventoryNumber': '', 'Technician': None, 'Employee': None, 'Location': None, 'AssetStatus': 'New', 'CapitalizationDate': None, 'StatisticalAsset': 'tNO', 'Cession': 'tNO', 'DeactivateAfterUsefulLife': 'tNO', 'ManageByQuantity': 'tNO', 'UoMGroupEntry': 1, 'InventoryUoMEntry': 1, 'DefaultSalesUoMEntry': None, 'DefaultPurchasingUoMEntry': None, 'DepreciationGroup': None, 'AssetSerialNumber': '', 'InventoryWeight': None, 'InventoryWeightUnit': None, 'InventoryWeight1': None, 'InventoryWeightUnit1': None, 'DefaultCountingUnit': 'Piece', 'CountingItemsPerUnit': 1.0, 'DefaultCountingUoMEntry': 1, 'Excisable': 'tNO', 'ChapterID': -1, 'ScsCode': None, 'SpProdType': None, 'ProdStdCost': 0.0, 'InCostRollup': 'tYES', 'VirtualAssetItem': 'tNO', 'EnforceAssetSerialNumbers': 'tNO', 'AttachmentEntry': None, 'LinkedResource': None, 'UpdateDate': '2025-05-17', 'UpdateTime': '16:02:59', 'GSTRelevnt': 'tNO', 'SACEntry': -1, 'GSTTaxCategory': 'gtc_Regular', 'ServiceCategoryEntry': -1, 'CapitalGoodsOnHoldPercent': None, 'CapitalGoodsOnHoldLimit': None, 'AssessableValue': 0.0, 'AssVal4WTR': 0.0, 'SOIExcisable': 'se_NotExcisable', 'TNVED': None, 'ImportedItem': 'tNO', 'PricingUnit': 1, 'CreateDate': '2025-01-26', 'CreateTime': '09:33:07', 'U_MfgH': None, 'U_Collection': None, 'U_OldCode': None, 'U_ItemsCat': None, 'U_NumberofSet': None, 'U_NileCode': None, 'U_TransferProductionLinkExclude': None, 'U_SBO_CodeType': 'GS1', 'U_SBO_EGSCode': None, 'U_ShopifyColor': None, 'U_SalesChannel': None, 'U_ShopifyItemIDLocal': None, 'U_ShopifyItemIDInternational': None, 'U_ParentCommercialName': None, 'ItemPrices': [{'PriceList': 1, 'Price': 0.0, 'Currency': '', 'AdditionalPrice1': 0.0, 'AdditionalCurrency1': '', 'AdditionalPrice2': 0.0, 'AdditionalCurrency2': '', 'BasePriceList': 1, 'Factor': 1.0, 'UoMPrices': []}, {'PriceList': 2, 'Price': 0.0, 'Currency': '', 'AdditionalPrice1': 0.0, 'AdditionalCurrency1': '', 'AdditionalPrice2': 0.0, 'AdditionalCurrency2': '', 'BasePriceList': 1, 'Factor': 0.4, 'UoMPrices': []}, {'PriceList': 3, 'Price': 0.0, 'Currency': '', 'AdditionalPrice1': 0.0, 'AdditionalCurrency1': '', 'AdditionalPrice2': 0.0, 'AdditionalCurrency2': '', 'BasePriceList': 3, 'Factor': 1.0, 'UoMPrices': []}, {'PriceList': 4, 'Price': 0.0, 'Currency': '', 'AdditionalPrice1': 0.0, 'AdditionalCurrency1': '', 'AdditionalPrice2': 0.0, 'AdditionalCurrency2': '', 'BasePriceList': 4, 'Factor': 1.0, 'UoMPrices': []}, {'PriceList': 5, 'Price': 0.0, 'Currency': '', 'AdditionalPrice1': 0.0, 'AdditionalCurrency1': '', 'AdditionalPrice2': 0.0, 'AdditionalCurrency2': '', 'BasePriceList': 5, 'Factor': 1.0, 'UoMPrices': []}, {'PriceList': 6, 'Price': 0.0, 'Currency': '', 'AdditionalPrice1': 0.0, 'AdditionalCurrency1': '', 'AdditionalPrice2': 0.0, 'AdditionalCurrency2': '', 'BasePriceList': 6, 'Factor': 1.0, 'UoMPrices': []}, {'PriceList': 7, 'Price': 0.0, 'Currency': '', 'AdditionalPrice1': 0.0, 'AdditionalCurrency1': '', 'AdditionalPrice2': 0.0, 'AdditionalCurrency2': '', 'BasePriceList': 7, 'Factor': 1.0, 'UoMPrices': []}, {'PriceList': 8, 'Price': 0.0, 'Currency': '', 'AdditionalPrice1': 0.0, 'AdditionalCurrency1': '', 'AdditionalPrice2': 0.0, 'AdditionalCurrency2': '', 'BasePriceList': 8, 'Factor': 1.0, 'UoMPrices': []}, {'PriceList': 9, 'Price': 0.0, 'Currency': '', 'AdditionalPrice1': 0.0, 'AdditionalCurrency1': '', 'AdditionalPrice2': 0.0, 'AdditionalCurrency2': '', 'BasePriceList': 9, 'Factor': 1.0, 'UoMPrices': []}, {'PriceList': 10, 'Price': 0.0, 'Currency': '', 'AdditionalPrice1': 0.0, 'AdditionalCurrency1': '', 'AdditionalPrice2': 0.0, 'AdditionalCurrency2': '', 'BasePriceList': 10, 'Factor': 1.0, 'UoMPrices': []}], 'ItemWarehouseInfoCollection': [{'MinimalStock': 30.0, 'MaximalStock': 0.0, 'MinimalOrder': 0.0, 'StandardAveragePrice': 180.0, 'Locked': 'tNO', 'InventoryAccount': None, 'CostAccount': None, 'TransferAccount': None, 'RevenuesAccount': None, 'VarienceAccount': None, 'DecreasingAccount': None, 'IncreasingAccount': None, 'ReturningAccount': None, 'ExpensesAccount': None, 'EURevenuesAccount': None, 'EUExpensesAccount': None, 'ForeignRevenueAcc': None, 'ForeignExpensAcc': None, 'ExemptIncomeAcc': None, 'PriceDifferenceAcc': None, 'WarehouseCode': '5A', 'InStock': 25.0, 'Committed': 0.0, 'Ordered': 0.0, 'CountedQuantity': 0.0, 'WasCounted': 'tNO', 'UserSignature': 50, 'Counted': 0.0, 'ExpenseClearingAct': None, 'PurchaseCreditAcc': None, 'EUPurchaseCreditAcc': None, 'ForeignPurchaseCreditAcc': None, 'SalesCreditAcc': None, 'SalesCreditEUAcc': None, 'ExemptedCredits': None, 'SalesCreditForeignAcc': None, 'ExpenseOffsettingAccount': None, 'WipAccount': None, 'ExchangeRateDifferencesAcct': None, 'GoodsClearingAcct': None, 'NegativeInventoryAdjustmentAccount': None, 'CostInflationOffsetAccount': None, 'GLDecreaseAcct': None, 'GLIncreaseAcct': None, 'PAReturnAcct': None, 'PurchaseAcct': None, 'PurchaseOffsetAcct': None, 'ShippedGoodsAccount': None, 'StockInflationOffsetAccount': None, 'StockInflationAdjustAccount': None, 'VATInRevenueAccount': None, 'WipVarianceAccount': None, 'CostInflationAccount': None, 'WHIncomingCenvatAccount': None, 'WHOutgoingCenvatAccount': None, 'StockInTransitAccount': None, 'WipOffsetProfitAndLossAccount': None, 'InventoryOffsetProfitAndLossAccount': None, 'DefaultBin': None, 'DefaultBinEnforced': 'tNO', 'PurchaseBalanceAccount': None, 'ItemCode': 'ACC-0000001', 'ItemCycleCounts': []}, {'MinimalStock': 20.0, 'MaximalStock': 0.0, 'MinimalOrder': 0.0, 'StandardAveragePrice': 180.0, 'Locked': 'tNO', 'InventoryAccount': None, 'CostAccount': None, 'TransferAccount': None, 'RevenuesAccount': None, 'VarienceAccount': None, 'DecreasingAccount': None, 'IncreasingAccount': None, 'ReturningAccount': None, 'ExpensesAccount': None, 'EURevenuesAccount': None, 'EUExpensesAccount': None, 'ForeignRevenueAcc': None, 'ForeignExpensAcc': None, 'ExemptIncomeAcc': None, 'PriceDifferenceAcc': None, 'WarehouseCode': 'Arkan', 'InStock': 10.0, 'Committed': 0.0, 'Ordered': 0.0, 'CountedQuantity': 0.0, 'WasCounted': 'tNO', 'UserSignature': 50, 'Counted': 0.0, 'ExpenseClearingAct': None, 'PurchaseCreditAcc': None, 'EUPurchaseCreditAcc': None, 'ForeignPurchaseCreditAcc': None, 'SalesCreditAcc': None, 'SalesCreditEUAcc': None, 'ExemptedCredits': None, 'SalesCreditForeignAcc': None, 'ExpenseOffsettingAccount': None, 'WipAccount': None, 'ExchangeRateDifferencesAcct': None, 'GoodsClearingAcct': None, 'NegativeInventoryAdjustmentAccount': None, 'CostInflationOffsetAccount': None, 'GLDecreaseAcct': None, 'GLIncreaseAcct': None, 'PAReturnAcct': None, 'PurchaseAcct': None, 'PurchaseOffsetAcct': None, 'ShippedGoodsAccount': None, 'StockInflationOffsetAccount': None, 'StockInflationAdjustAccount': None, 'VATInRevenueAccount': None, 'WipVarianceAccount': None, 'CostInflationAccount': None, 'WHIncomingCenvatAccount': None, 'WHOutgoingCenvatAccount': None, 'StockInTransitAccount': None, 'WipOffsetProfitAndLossAccount': None, 'InventoryOffsetProfitAndLossAccount': None, 'DefaultBin': None, 'DefaultBinEnforced': 'tNO', 'PurchaseBalanceAccount': None, 'ItemCode': 'ACC-0000001', 'ItemCycleCounts': []}, {'MinimalStock': 0.0, 'MaximalStock': 0.0, 'MinimalOrder': 0.0, 'StandardAveragePrice': 0.0, 'Locked': 'tNO', 'InventoryAccount': None, 'CostAccount': None, 'TransferAccount': None, 'RevenuesAccount': None, 'VarienceAccount': None, 'DecreasingAccount': None, 'IncreasingAccount': None, 'ReturningAccount': None, 'ExpensesAccount': None, 'EURevenuesAccount': None, 'EUExpensesAccount': None, 'ForeignRevenueAcc': None, 'ForeignExpensAcc': None, 'ExemptIncomeAcc': None, 'PriceDifferenceAcc': None, 'WarehouseCode': 'DIP', 'InStock': 0.0, 'Committed': 0.0, 'Ordered': 0.0, 'CountedQuantity': 0.0, 'WasCounted': 'tNO', 'UserSignature': 50, 'Counted': 0.0, 'ExpenseClearingAct': None, 'PurchaseCreditAcc': None, 'EUPurchaseCreditAcc': None, 'ForeignPurchaseCreditAcc': None, 'SalesCreditAcc': None, 'SalesCreditEUAcc': None, 'ExemptedCredits': None, 'SalesCreditForeignAcc': None, 'ExpenseOffsettingAccount': None, 'WipAccount': None, 'ExchangeRateDifferencesAcct': None, 'GoodsClearingAcct': None, 'NegativeInventoryAdjustmentAccount': None, 'CostInflationOffsetAccount': None, 'GLDecreaseAcct': None, 'GLIncreaseAcct': None, 'PAReturnAcct': None, 'PurchaseAcct': None, 'PurchaseOffsetAcct': None, 'ShippedGoodsAccount': None, 'StockInflationOffsetAccount': None, 'StockInflationAdjustAccount': None, 'VATInRevenueAccount': None, 'WipVarianceAccount': None, 'CostInflationAccount': None, 'WHIncomingCenvatAccount': None, 'WHOutgoingCenvatAccount': None, 'StockInTransitAccount': None, 'WipOffsetProfitAndLossAccount': None, 'InventoryOffsetProfitAndLossAccount': None, 'DefaultBin': None, 'DefaultBinEnforced': 'tNO', 'PurchaseBalanceAccount': None, 'ItemCode': 'ACC-0000001', 'ItemCycleCounts': []}, {'MinimalStock': 0.0, 'MaximalStock': 0.0, 'MinimalOrder': 0.0, 'StandardAveragePrice': 180.0, 'Locked': 'tNO', 'InventoryAccount': None, 'CostAccount': None, 'TransferAccount': None, 'RevenuesAccount': None, 'VarienceAccount': None, 'DecreasingAccount': None, 'IncreasingAccount': None, 'ReturningAccount': None, 'ExpensesAccount': None, 'EURevenuesAccount': None, 'EUExpensesAccount': None, 'ForeignRevenueAcc': None, 'ForeignExpensAcc': None, 'ExemptIncomeAcc': None, 'PriceDifferenceAcc': None, 'WarehouseCode': 'INC', 'InStock': 0.0, 'Committed': 0.0, 'Ordered': 0.0, 'CountedQuantity': 0.0, 'WasCounted': 'tNO', 'UserSignature': 50, 'Counted': 0.0, 'ExpenseClearingAct': None, 'PurchaseCreditAcc': None, 'EUPurchaseCreditAcc': None, 'ForeignPurchaseCreditAcc': None, 'SalesCreditAcc': None, 'SalesCreditEUAcc': None, 'ExemptedCredits': None, 'SalesCreditForeignAcc': None, 'ExpenseOffsettingAccount': None, 'WipAccount': None, 'ExchangeRateDifferencesAcct': None, 'GoodsClearingAcct': None, 'NegativeInventoryAdjustmentAccount': None, 'CostInflationOffsetAccount': None, 'GLDecreaseAcct': None, 'GLIncreaseAcct': None, 'PAReturnAcct': None, 'PurchaseAcct': None, 'PurchaseOffsetAcct': None, 'ShippedGoodsAccount': None, 'StockInflationOffsetAccount': None, 'StockInflationAdjustAccount': None, 'VATInRevenueAccount': None, 'WipVarianceAccount': None, 'CostInflationAccount': None, 'WHIncomingCenvatAccount': None, 'WHOutgoingCenvatAccount': None, 'StockInTransitAccount': None, 'WipOffsetProfitAndLossAccount': None, 'InventoryOffsetProfitAndLossAccount': None, 'DefaultBin': None, 'DefaultBinEnforced': 'tNO', 'PurchaseBalanceAccount': None, 'ItemCode': 'ACC-0000001', 'ItemCycleCounts': []}, {'MinimalStock': 0.0, 'MaximalStock': 0.0, 'MinimalOrder': 0.0, 'StandardAveragePrice': 0.0, 'Locked': 'tNO', 'InventoryAccount': None, 'CostAccount': None, 'TransferAccount': None, 'RevenuesAccount': None, 'VarienceAccount': None, 'DecreasingAccount': None, 'IncreasingAccount': None, 'ReturningAccount': None, 'ExpensesAccount': None, 'EURevenuesAccount': None, 'EUExpensesAccount': None, 'ForeignRevenueAcc': None, 'ForeignExpensAcc': None, 'ExemptIncomeAcc': None, 'PriceDifferenceAcc': None, 'WarehouseCode': 'ONL', 'InStock': 0.0, 'Committed': 0.0, 'Ordered': 0.0, 'CountedQuantity': 0.0, 'WasCounted': 'tNO', 'UserSignature': 50, 'Counted': 0.0, 'ExpenseClearingAct': None, 'PurchaseCreditAcc': None, 'EUPurchaseCreditAcc': None, 'ForeignPurchaseCreditAcc': None, 'SalesCreditAcc': None, 'SalesCreditEUAcc': None, 'ExemptedCredits': None, 'SalesCreditForeignAcc': None, 'ExpenseOffsettingAccount': None, 'WipAccount': None, 'ExchangeRateDifferencesAcct': None, 'GoodsClearingAcct': None, 'NegativeInventoryAdjustmentAccount': None, 'CostInflationOffsetAccount': None, 'GLDecreaseAcct': None, 'GLIncreaseAcct': None, 'PAReturnAcct': None, 'PurchaseAcct': None, 'PurchaseOffsetAcct': None, 'ShippedGoodsAccount': None, 'StockInflationOffsetAccount': None, 'StockInflationAdjustAccount': None, 'VATInRevenueAccount': None, 'WipVarianceAccount': None, 'CostInflationAccount': None, 'WHIncomingCenvatAccount': None, 'WHOutgoingCenvatAccount': None, 'StockInTransitAccount': None, 'WipOffsetProfitAndLossAccount': None, 'InventoryOffsetProfitAndLossAccount': None, 'DefaultBin': None, 'DefaultBinEnforced': 'tNO', 'PurchaseBalanceAccount': None, 'ItemCode': 'ACC-0000001', 'ItemCycleCounts': []}, {'MinimalStock': 0.0, 'MaximalStock': 0.0, 'MinimalOrder': 0.0, 'StandardAveragePrice': 0.0, 'Locked': 'tNO', 'InventoryAccount': None, 'CostAccount': None, 'TransferAccount': None, 'RevenuesAccount': None, 'VarienceAccount': None, 'DecreasingAccount': None, 'IncreasingAccount': None, 'ReturningAccount': None, 'ExpensesAccount': None, 'EURevenuesAccount': None, 'EUExpensesAccount': None, 'ForeignRevenueAcc': None, 'ForeignExpensAcc': None, 'ExemptIncomeAcc': None, 'PriceDifferenceAcc': None, 'WarehouseCode': 'PHO', 'InStock': 0.0, 'Committed': 0.0, 'Ordered': 0.0, 'CountedQuantity': 0.0, 'WasCounted': 'tNO', 'UserSignature': 50, 'Counted': 0.0, 'ExpenseClearingAct': None, 'PurchaseCreditAcc': None, 'EUPurchaseCreditAcc': None, 'ForeignPurchaseCreditAcc': None, 'SalesCreditAcc': None, 'SalesCreditEUAcc': None, 'ExemptedCredits': None, 'SalesCreditForeignAcc': None, 'ExpenseOffsettingAccount': None, 'WipAccount': None, 'ExchangeRateDifferencesAcct': None, 'GoodsClearingAcct': None, 'NegativeInventoryAdjustmentAccount': None, 'CostInflationOffsetAccount': None, 'GLDecreaseAcct': None, 'GLIncreaseAcct': None, 'PAReturnAcct': None, 'PurchaseAcct': None, 'PurchaseOffsetAcct': None, 'ShippedGoodsAccount': None, 'StockInflationOffsetAccount': None, 'StockInflationAdjustAccount': None, 'VATInRevenueAccount': None, 'WipVarianceAccount': None, 'CostInflationAccount': None, 'WHIncomingCenvatAccount': None, 'WHOutgoingCenvatAccount': None, 'StockInTransitAccount': None, 'WipOffsetProfitAndLossAccount': None, 'InventoryOffsetProfitAndLossAccount': None, 'DefaultBin': None, 'DefaultBinEnforced': 'tNO', 'PurchaseBalanceAccount': None, 'ItemCode': 'ACC-0000001', 'ItemCycleCounts': []}, {'MinimalStock': 0.0, 'MaximalStock': 0.0, 'MinimalOrder': 0.0, 'StandardAveragePrice': 0.0, 'Locked': 'tNO', 'InventoryAccount': None, 'CostAccount': None, 'TransferAccount': None, 'RevenuesAccount': None, 'VarienceAccount': None, 'DecreasingAccount': None, 'IncreasingAccount': None, 'ReturningAccount': None, 'ExpensesAccount': None, 'EURevenuesAccount': None, 'EUExpensesAccount': None, 'ForeignRevenueAcc': None, 'ForeignExpensAcc': None, 'ExemptIncomeAcc': None, 'PriceDifferenceAcc': None, 'WarehouseCode': 'PHO-EX', 'InStock': 0.0, 'Committed': 0.0, 'Ordered': 0.0, 'CountedQuantity': 0.0, 'WasCounted': 'tNO', 'UserSignature': 1, 'Counted': 0.0, 'ExpenseClearingAct': None, 'PurchaseCreditAcc': None, 'EUPurchaseCreditAcc': None, 'ForeignPurchaseCreditAcc': None, 'SalesCreditAcc': None, 'SalesCreditEUAcc': None, 'ExemptedCredits': None, 'SalesCreditForeignAcc': None, 'ExpenseOffsettingAccount': None, 'WipAccount': None, 'ExchangeRateDifferencesAcct': None, 'GoodsClearingAcct': None, 'NegativeInventoryAdjustmentAccount': None, 'CostInflationOffsetAccount': None, 'GLDecreaseAcct': None, 'GLIncreaseAcct': None, 'PAReturnAcct': None, 'PurchaseAcct': None, 'PurchaseOffsetAcct': None, 'ShippedGoodsAccount': None, 'StockInflationOffsetAccount': None, 'StockInflationAdjustAccount': None, 'VATInRevenueAccount': None, 'WipVarianceAccount': None, 'CostInflationAccount': None, 'WHIncomingCenvatAccount': None, 'WHOutgoingCenvatAccount': None, 'StockInTransitAccount': None, 'WipOffsetProfitAndLossAccount': None, 'InventoryOffsetProfitAndLossAccount': None, 'DefaultBin': None, 'DefaultBinEnforced': 'tNO', 'PurchaseBalanceAccount': None, 'ItemCode': 'ACC-0000001', 'ItemCycleCounts': []}, {'MinimalStock': 0.0, 'MaximalStock': 0.0, 'MinimalOrder': 0.0, 'StandardAveragePrice': 0.0, 'Locked': 'tNO', 'InventoryAccount': None, 'CostAccount': None, 'TransferAccount': None, 'RevenuesAccount': None, 'VarienceAccount': None, 'DecreasingAccount': None, 'IncreasingAccount': None, 'ReturningAccount': None, 'ExpensesAccount': None, 'EURevenuesAccount': None, 'EUExpensesAccount': None, 'ForeignRevenueAcc': None, 'ForeignExpensAcc': None, 'ExemptIncomeAcc': None, 'PriceDifferenceAcc': None, 'WarehouseCode': 'PHO-IN', 'InStock': 0.0, 'Committed': 0.0, 'Ordered': 0.0, 'CountedQuantity': 0.0, 'WasCounted': 'tNO', 'UserSignature': 1, 'Counted': 0.0, 'ExpenseClearingAct': None, 'PurchaseCreditAcc': None, 'EUPurchaseCreditAcc': None, 'ForeignPurchaseCreditAcc': None, 'SalesCreditAcc': None, 'SalesCreditEUAcc': None, 'ExemptedCredits': None, 'SalesCreditForeignAcc': None, 'ExpenseOffsettingAccount': None, 'WipAccount': None, 'ExchangeRateDifferencesAcct': None, 'GoodsClearingAcct': None, 'NegativeInventoryAdjustmentAccount': None, 'CostInflationOffsetAccount': None, 'GLDecreaseAcct': None, 'GLIncreaseAcct': None, 'PAReturnAcct': None, 'PurchaseAcct': None, 'PurchaseOffsetAcct': None, 'ShippedGoodsAccount': None, 'StockInflationOffsetAccount': None, 'StockInflationAdjustAccount': None, 'VATInRevenueAccount': None, 'WipVarianceAccount': None, 'CostInflationAccount': None, 'WHIncomingCenvatAccount': None, 'WHOutgoingCenvatAccount': None, 'StockInTransitAccount': None, 'WipOffsetProfitAndLossAccount': None, 'InventoryOffsetProfitAndLossAccount': None, 'DefaultBin': None, 'DefaultBinEnforced': 'tNO', 'PurchaseBalanceAccount': None, 'ItemCode': 'ACC-0000001', 'ItemCycleCounts': []}, {'MinimalStock': 0.0, 'MaximalStock': 0.0, 'MinimalOrder': 0.0, 'StandardAveragePrice': 0.0, 'Locked': 'tNO', 'InventoryAccount': None, 'CostAccount': None, 'TransferAccount': None, 'RevenuesAccount': None, 'VarienceAccount': None, 'DecreasingAccount': None, 'IncreasingAccount': None, 'ReturningAccount': None, 'ExpensesAccount': None, 'EURevenuesAccount': None, 'EUExpensesAccount': None, 'ForeignRevenueAcc': None, 'ForeignExpensAcc': None, 'ExemptIncomeAcc': None, 'PriceDifferenceAcc': None, 'WarehouseCode': 'RTW', 'InStock': 0.0, 'Committed': 0.0, 'Ordered': 0.0, 'CountedQuantity': 0.0, 'WasCounted': 'tNO', 'UserSignature': 50, 'Counted': 0.0, 'ExpenseClearingAct': None, 'PurchaseCreditAcc': None, 'EUPurchaseCreditAcc': None, 'ForeignPurchaseCreditAcc': None, 'SalesCreditAcc': None, 'SalesCreditEUAcc': None, 'ExemptedCredits': None, 'SalesCreditForeignAcc': None, 'ExpenseOffsettingAccount': None, 'WipAccount': None, 'ExchangeRateDifferencesAcct': None, 'GoodsClearingAcct': None, 'NegativeInventoryAdjustmentAccount': None, 'CostInflationOffsetAccount': None, 'GLDecreaseAcct': None, 'GLIncreaseAcct': None, 'PAReturnAcct': None, 'PurchaseAcct': None, 'PurchaseOffsetAcct': None, 'ShippedGoodsAccount': None, 'StockInflationOffsetAccount': None, 'StockInflationAdjustAccount': None, 'VATInRevenueAccount': None, 'WipVarianceAccount': None, 'CostInflationAccount': None, 'WHIncomingCenvatAccount': None, 'WHOutgoingCenvatAccount': None, 'StockInTransitAccount': None, 'WipOffsetProfitAndLossAccount': None, 'InventoryOffsetProfitAndLossAccount': None, 'DefaultBin': None, 'DefaultBinEnforced': 'tNO', 'PurchaseBalanceAccount': None, 'ItemCode': 'ACC-0000001', 'ItemCycleCounts': []}, {'MinimalStock': 0.0, 'MaximalStock': 0.0, 'MinimalOrder': 0.0, 'StandardAveragePrice': 0.0, 'Locked': 'tNO', 'InventoryAccount': None, 'CostAccount': None, 'TransferAccount': None, 'RevenuesAccount': None, 'VarienceAccount': None, 'DecreasingAccount': None, 'IncreasingAccount': None, 'ReturningAccount': None, 'ExpensesAccount': None, 'EURevenuesAccount': None, 'EUExpensesAccount': None, 'ForeignRevenueAcc': None, 'ForeignExpensAcc': None, 'ExemptIncomeAcc': None, 'PriceDifferenceAcc': None, 'WarehouseCode': 'RTWH', 'InStock': 0.0, 'Committed': 0.0, 'Ordered': 0.0, 'CountedQuantity': 0.0, 'WasCounted': 'tNO', 'UserSignature': 1, 'Counted': 0.0, 'ExpenseClearingAct': None, 'PurchaseCreditAcc': None, 'EUPurchaseCreditAcc': None, 'ForeignPurchaseCreditAcc': None, 'SalesCreditAcc': None, 'SalesCreditEUAcc': None, 'ExemptedCredits': None, 'SalesCreditForeignAcc': None, 'ExpenseOffsettingAccount': None, 'WipAccount': None, 'ExchangeRateDifferencesAcct': None, 'GoodsClearingAcct': None, 'NegativeInventoryAdjustmentAccount': None, 'CostInflationOffsetAccount': None, 'GLDecreaseAcct': None, 'GLIncreaseAcct': None, 'PAReturnAcct': None, 'PurchaseAcct': None, 'PurchaseOffsetAcct': None, 'ShippedGoodsAccount': None, 'StockInflationOffsetAccount': None, 'StockInflationAdjustAccount': None, 'VATInRevenueAccount': None, 'WipVarianceAccount': None, 'CostInflationAccount': None, 'WHIncomingCenvatAccount': None, 'WHOutgoingCenvatAccount': None, 'StockInTransitAccount': None, 'WipOffsetProfitAndLossAccount': None, 'InventoryOffsetProfitAndLossAccount': None, 'DefaultBin': None, 'DefaultBinEnforced': 'tNO', 'PurchaseBalanceAccount': None, 'ItemCode': 'ACC-0000001', 'ItemCycleCounts': []}, {'MinimalStock': 0.0, 'MaximalStock': 0.0, 'MinimalOrder': 0.0, 'StandardAveragePrice': 0.0, 'Locked': 'tNO', 'InventoryAccount': None, 'CostAccount': None, 'TransferAccount': None, 'RevenuesAccount': None, 'VarienceAccount': None, 'DecreasingAccount': None, 'IncreasingAccount': None, 'ReturningAccount': None, 'ExpensesAccount': None, 'EURevenuesAccount': None, 'EUExpensesAccount': None, 'ForeignRevenueAcc': None, 'ForeignExpensAcc': None, 'ExemptIncomeAcc': None, 'PriceDifferenceAcc': None, 'WarehouseCode': 'SW', 'InStock': 0.0, 'Committed': 0.0, 'Ordered': 0.0, 'CountedQuantity': 0.0, 'WasCounted': 'tNO', 'UserSignature': 50, 'Counted': 0.0, 'ExpenseClearingAct': None, 'PurchaseCreditAcc': None, 'EUPurchaseCreditAcc': None, 'ForeignPurchaseCreditAcc': None, 'SalesCreditAcc': None, 'SalesCreditEUAcc': None, 'ExemptedCredits': None, 'SalesCreditForeignAcc': None, 'ExpenseOffsettingAccount': None, 'WipAccount': None, 'ExchangeRateDifferencesAcct': None, 'GoodsClearingAcct': None, 'NegativeInventoryAdjustmentAccount': None, 'CostInflationOffsetAccount': None, 'GLDecreaseAcct': None, 'GLIncreaseAcct': None, 'PAReturnAcct': None, 'PurchaseAcct': None, 'PurchaseOffsetAcct': None, 'ShippedGoodsAccount': None, 'StockInflationOffsetAccount': None, 'StockInflationAdjustAccount': None, 'VATInRevenueAccount': None, 'WipVarianceAccount': None, 'CostInflationAccount': None, 'WHIncomingCenvatAccount': None, 'WHOutgoingCenvatAccount': None, 'StockInTransitAccount': None, 'WipOffsetProfitAndLossAccount': None, 'InventoryOffsetProfitAndLossAccount': None, 'DefaultBin': None, 'DefaultBinEnforced': 'tNO', 'PurchaseBalanceAccount': None, 'ItemCode': 'ACC-0000001', 'ItemCycleCounts': []}, {'MinimalStock': 0.0, 'MaximalStock': 0.0, 'MinimalOrder': 0.0, 'StandardAveragePrice': 0.0, 'Locked': 'tNO', 'InventoryAccount': None, 'CostAccount': None, 'TransferAccount': None, 'RevenuesAccount': None, 'VarienceAccount': None, 'DecreasingAccount': None, 'IncreasingAccount': None, 'ReturningAccount': None, 'ExpensesAccount': None, 'EURevenuesAccount': None, 'EUExpensesAccount': None, 'ForeignRevenueAcc': None, 'ForeignExpensAcc': None, 'ExemptIncomeAcc': None, 'PriceDifferenceAcc': None, 'WarehouseCode': 'WLS', 'InStock': 0.0, 'Committed': 0.0, 'Ordered': 0.0, 'CountedQuantity': 0.0, 'WasCounted': 'tNO', 'UserSignature': 50, 'Counted': 0.0, 'ExpenseClearingAct': None, 'PurchaseCreditAcc': None, 'EUPurchaseCreditAcc': None, 'ForeignPurchaseCreditAcc': None, 'SalesCreditAcc': None, 'SalesCreditEUAcc': None, 'ExemptedCredits': None, 'SalesCreditForeignAcc': None, 'ExpenseOffsettingAccount': None, 'WipAccount': None, 'ExchangeRateDifferencesAcct': None, 'GoodsClearingAcct': None, 'NegativeInventoryAdjustmentAccount': None, 'CostInflationOffsetAccount': None, 'GLDecreaseAcct': None, 'GLIncreaseAcct': None, 'PAReturnAcct': None, 'PurchaseAcct': None, 'PurchaseOffsetAcct': None, 'ShippedGoodsAccount': None, 'StockInflationOffsetAccount': None, 'StockInflationAdjustAccount': None, 'VATInRevenueAccount': None, 'WipVarianceAccount': None, 'CostInflationAccount': None, 'WHIncomingCenvatAccount': None, 'WHOutgoingCenvatAccount': None, 'StockInTransitAccount': None, 'WipOffsetProfitAndLossAccount': None, 'InventoryOffsetProfitAndLossAccount': None, 'DefaultBin': None, 'DefaultBinEnforced': 'tNO', 'PurchaseBalanceAccount': None, 'ItemCode': 'ACC-0000001', 'ItemCycleCounts': []}, {'MinimalStock': 0.0, 'MaximalStock': 0.0, 'MinimalOrder': 0.0, 'StandardAveragePrice': 0.0, 'Locked': 'tNO', 'InventoryAccount': None, 'CostAccount': None, 'TransferAccount': None, 'RevenuesAccount': None, 'VarienceAccount': None, 'DecreasingAccount': None, 'IncreasingAccount': None, 'ReturningAccount': None, 'ExpensesAccount': None, 'EURevenuesAccount': None, 'EUExpensesAccount': None, 'ForeignRevenueAcc': None, 'ForeignExpensAcc': None, 'ExemptIncomeAcc': None, 'PriceDifferenceAcc': None, 'WarehouseCode': 'WW', 'InStock': 0.0, 'Committed': 0.0, 'Ordered': 0.0, 'CountedQuantity': 0.0, 'WasCounted': 'tNO', 'UserSignature': 50, 'Counted': 0.0, 'ExpenseClearingAct': None, 'PurchaseCreditAcc': None, 'EUPurchaseCreditAcc': None, 'ForeignPurchaseCreditAcc': None, 'SalesCreditAcc': None, 'SalesCreditEUAcc': None, 'ExemptedCredits': None, 'SalesCreditForeignAcc': None, 'ExpenseOffsettingAccount': None, 'WipAccount': None, 'ExchangeRateDifferencesAcct': None, 'GoodsClearingAcct': None, 'NegativeInventoryAdjustmentAccount': None, 'CostInflationOffsetAccount': None, 'GLDecreaseAcct': None, 'GLIncreaseAcct': None, 'PAReturnAcct': None, 'PurchaseAcct': None, 'PurchaseOffsetAcct': None, 'ShippedGoodsAccount': None, 'StockInflationOffsetAccount': None, 'StockInflationAdjustAccount': None, 'VATInRevenueAccount': None, 'WipVarianceAccount': None, 'CostInflationAccount': None, 'WHIncomingCenvatAccount': None, 'WHOutgoingCenvatAccount': None, 'StockInTransitAccount': None, 'WipOffsetProfitAndLossAccount': None, 'InventoryOffsetProfitAndLossAccount': None, 'DefaultBin': None, 'DefaultBinEnforced': 'tNO', 'PurchaseBalanceAccount': None, 'ItemCode': 'ACC-0000001', 'ItemCycleCounts': []}, {'MinimalStock': 0.0, 'MaximalStock': 0.0, 'MinimalOrder': 0.0, 'StandardAveragePrice': 0.0, 'Locked': 'tNO', 'InventoryAccount': None, 'CostAccount': None, 'TransferAccount': None, 'RevenuesAccount': None, 'VarienceAccount': None, 'DecreasingAccount': None, 'IncreasingAccount': None, 'ReturningAccount': None, 'ExpensesAccount': None, 'EURevenuesAccount': None, 'EUExpensesAccount': None, 'ForeignRevenueAcc': None, 'ForeignExpensAcc': None, 'ExemptIncomeAcc': None, 'PriceDifferenceAcc': None, 'WarehouseCode': 'WW-CON', 'InStock': 0.0, 'Committed': 0.0, 'Ordered': 0.0, 'CountedQuantity': 0.0, 'WasCounted': 'tNO', 'UserSignature': 50, 'Counted': 0.0, 'ExpenseClearingAct': None, 'PurchaseCreditAcc': None, 'EUPurchaseCreditAcc': None, 'ForeignPurchaseCreditAcc': None, 'SalesCreditAcc': None, 'SalesCreditEUAcc': None, 'ExemptedCredits': None, 'SalesCreditForeignAcc': None, 'ExpenseOffsettingAccount': None, 'WipAccount': None, 'ExchangeRateDifferencesAcct': None, 'GoodsClearingAcct': None, 'NegativeInventoryAdjustmentAccount': None, 'CostInflationOffsetAccount': None, 'GLDecreaseAcct': None, 'GLIncreaseAcct': None, 'PAReturnAcct': None, 'PurchaseAcct': None, 'PurchaseOffsetAcct': None, 'ShippedGoodsAccount': None, 'StockInflationOffsetAccount': None, 'StockInflationAdjustAccount': None, 'VATInRevenueAccount': None, 'WipVarianceAccount': None, 'CostInflationAccount': None, 'WHIncomingCenvatAccount': None, 'WHOutgoingCenvatAccount': None, 'StockInTransitAccount': None, 'WipOffsetProfitAndLossAccount': None, 'InventoryOffsetProfitAndLossAccount': None, 'DefaultBin': None, 'DefaultBinEnforced': 'tNO', 'PurchaseBalanceAccount': None, 'ItemCode': 'ACC-0000001', 'ItemCycleCounts': []}, {'MinimalStock': 0.0, 'MaximalStock': 0.0, 'MinimalOrder': 0.0, 'StandardAveragePrice': 0.0, 'Locked': 'tNO', 'InventoryAccount': None, 'CostAccount': None, 'TransferAccount': None, 'RevenuesAccount': None, 'VarienceAccount': None, 'DecreasingAccount': None, 'IncreasingAccount': None, 'ReturningAccount': None, 'ExpensesAccount': None, 'EURevenuesAccount': None, 'EUExpensesAccount': None, 'ForeignRevenueAcc': None, 'ForeignExpensAcc': None, 'ExemptIncomeAcc': None, 'PriceDifferenceAcc': None, 'WarehouseCode': 'WW-DAM', 'InStock': 0.0, 'Committed': 0.0, 'Ordered': 0.0, 'CountedQuantity': 0.0, 'WasCounted': 'tNO', 'UserSignature': 50, 'Counted': 0.0, 'ExpenseClearingAct': None, 'PurchaseCreditAcc': None, 'EUPurchaseCreditAcc': None, 'ForeignPurchaseCreditAcc': None, 'SalesCreditAcc': None, 'SalesCreditEUAcc': None, 'ExemptedCredits': None, 'SalesCreditForeignAcc': None, 'ExpenseOffsettingAccount': None, 'WipAccount': None, 'ExchangeRateDifferencesAcct': None, 'GoodsClearingAcct': None, 'NegativeInventoryAdjustmentAccount': None, 'CostInflationOffsetAccount': None, 'GLDecreaseAcct': None, 'GLIncreaseAcct': None, 'PAReturnAcct': None, 'PurchaseAcct': None, 'PurchaseOffsetAcct': None, 'ShippedGoodsAccount': None, 'StockInflationOffsetAccount': None, 'StockInflationAdjustAccount': None, 'VATInRevenueAccount': None, 'WipVarianceAccount': None, 'CostInflationAccount': None, 'WHIncomingCenvatAccount': None, 'WHOutgoingCenvatAccount': None, 'StockInTransitAccount': None, 'WipOffsetProfitAndLossAccount': None, 'InventoryOffsetProfitAndLossAccount': None, 'DefaultBin': None, 'DefaultBinEnforced': 'tNO', 'PurchaseBalanceAccount': None, 'ItemCode': 'ACC-0000001', 'ItemCycleCounts': []}, {'MinimalStock': 0.0, 'MaximalStock': 0.0, 'MinimalOrder': 0.0, 'StandardAveragePrice': 0.0, 'Locked': 'tNO', 'InventoryAccount': None, 'CostAccount': None, 'TransferAccount': None, 'RevenuesAccount': None, 'VarienceAccount': None, 'DecreasingAccount': None, 'IncreasingAccount': None, 'ReturningAccount': None, 'ExpensesAccount': None, 'EURevenuesAccount': None, 'EUExpensesAccount': None, 'ForeignRevenueAcc': None, 'ForeignExpensAcc': None, 'ExemptIncomeAcc': None, 'PriceDifferenceAcc': None, 'WarehouseCode': 'WW-REP', 'InStock': 0.0, 'Committed': 0.0, 'Ordered': 0.0, 'CountedQuantity': 0.0, 'WasCounted': 'tNO', 'UserSignature': 50, 'Counted': 0.0, 'ExpenseClearingAct': None, 'PurchaseCreditAcc': None, 'EUPurchaseCreditAcc': None, 'ForeignPurchaseCreditAcc': None, 'SalesCreditAcc': None, 'SalesCreditEUAcc': None, 'ExemptedCredits': None, 'SalesCreditForeignAcc': None, 'ExpenseOffsettingAccount': None, 'WipAccount': None, 'ExchangeRateDifferencesAcct': None, 'GoodsClearingAcct': None, 'NegativeInventoryAdjustmentAccount': None, 'CostInflationOffsetAccount': None, 'GLDecreaseAcct': None, 'GLIncreaseAcct': None, 'PAReturnAcct': None, 'PurchaseAcct': None, 'PurchaseOffsetAcct': None, 'ShippedGoodsAccount': None, 'StockInflationOffsetAccount': None, 'StockInflationAdjustAccount': None, 'VATInRevenueAccount': None, 'WipVarianceAccount': None, 'CostInflationAccount': None, 'WHIncomingCenvatAccount': None, 'WHOutgoingCenvatAccount': None, 'StockInTransitAccount': None, 'WipOffsetProfitAndLossAccount': None, 'InventoryOffsetProfitAndLossAccount': None, 'DefaultBin': None, 'DefaultBinEnforced': 'tNO', 'PurchaseBalanceAccount': None, 'ItemCode': 'ACC-0000001', 'ItemCycleCounts': []}, {'MinimalStock': 0.0, 'MaximalStock': 0.0, 'MinimalOrder': 0.0, 'StandardAveragePrice': 0.0, 'Locked': 'tNO', 'InventoryAccount': None, 'CostAccount': None, 'TransferAccount': None, 'RevenuesAccount': None, 'VarienceAccount': None, 'DecreasingAccount': None, 'IncreasingAccount': None, 'ReturningAccount': None, 'ExpensesAccount': None, 'EURevenuesAccount': None, 'EUExpensesAccount': None, 'ForeignRevenueAcc': None, 'ForeignExpensAcc': None, 'ExemptIncomeAcc': None, 'PriceDifferenceAcc': None, 'WarehouseCode': 'WW-SAM', 'InStock': 0.0, 'Committed': 0.0, 'Ordered': 0.0, 'CountedQuantity': 0.0, 'WasCounted': 'tNO', 'UserSignature': 50, 'Counted': 0.0, 'ExpenseClearingAct': None, 'PurchaseCreditAcc': None, 'EUPurchaseCreditAcc': None, 'ForeignPurchaseCreditAcc': None, 'SalesCreditAcc': None, 'SalesCreditEUAcc': None, 'ExemptedCredits': None, 'SalesCreditForeignAcc': None, 'ExpenseOffsettingAccount': None, 'WipAccount': None, 'ExchangeRateDifferencesAcct': None, 'GoodsClearingAcct': None, 'NegativeInventoryAdjustmentAccount': None, 'CostInflationOffsetAccount': None, 'GLDecreaseAcct': None, 'GLIncreaseAcct': None, 'PAReturnAcct': None, 'PurchaseAcct': None, 'PurchaseOffsetAcct': None, 'ShippedGoodsAccount': None, 'StockInflationOffsetAccount': None, 'StockInflationAdjustAccount': None, 'VATInRevenueAccount': None, 'WipVarianceAccount': None, 'CostInflationAccount': None, 'WHIncomingCenvatAccount': None, 'WHOutgoingCenvatAccount': None, 'StockInTransitAccount': None, 'WipOffsetProfitAndLossAccount': None, 'InventoryOffsetProfitAndLossAccount': None, 'DefaultBin': None, 'DefaultBinEnforced': 'tNO', 'PurchaseBalanceAccount': None, 'ItemCode': 'ACC-0000001', 'ItemCycleCounts': []}, {'MinimalStock': 0.0, 'MaximalStock': 0.0, 'MinimalOrder': 0.0, 'StandardAveragePrice': 0.0, 'Locked': 'tNO', 'InventoryAccount': None, 'CostAccount': None, 'TransferAccount': None, 'RevenuesAccount': None, 'VarienceAccount': None, 'DecreasingAccount': None, 'IncreasingAccount': None, 'ReturningAccount': None, 'ExpensesAccount': None, 'EURevenuesAccount': None, 'EUExpensesAccount': None, 'ForeignRevenueAcc': None, 'ForeignExpensAcc': None, 'ExemptIncomeAcc': None, 'PriceDifferenceAcc': None, 'WarehouseCode': 'WW-WIP', 'InStock': 0.0, 'Committed': 0.0, 'Ordered': 0.0, 'CountedQuantity': 0.0, 'WasCounted': 'tNO', 'UserSignature': 50, 'Counted': 0.0, 'ExpenseClearingAct': None, 'PurchaseCreditAcc': None, 'EUPurchaseCreditAcc': None, 'ForeignPurchaseCreditAcc': None, 'SalesCreditAcc': None, 'SalesCreditEUAcc': None, 'ExemptedCredits': None, 'SalesCreditForeignAcc': None, 'ExpenseOffsettingAccount': None, 'WipAccount': None, 'ExchangeRateDifferencesAcct': None, 'GoodsClearingAcct': None, 'NegativeInventoryAdjustmentAccount': None, 'CostInflationOffsetAccount': None, 'GLDecreaseAcct': None, 'GLIncreaseAcct': None, 'PAReturnAcct': None, 'PurchaseAcct': None, 'PurchaseOffsetAcct': None, 'ShippedGoodsAccount': None, 'StockInflationOffsetAccount': None, 'StockInflationAdjustAccount': None, 'VATInRevenueAccount': None, 'WipVarianceAccount': None, 'CostInflationAccount': None, 'WHIncomingCenvatAccount': None, 'WHOutgoingCenvatAccount': None, 'StockInTransitAccount': None, 'WipOffsetProfitAndLossAccount': None, 'InventoryOffsetProfitAndLossAccount': None, 'DefaultBin': None, 'DefaultBinEnforced': 'tNO', 'PurchaseBalanceAccount': None, 'ItemCode': 'ACC-0000001', 'ItemCycleCounts': []}, {'MinimalStock': 0.0, 'MaximalStock': 0.0, 'MinimalOrder': 0.0, 'StandardAveragePrice': 0.0, 'Locked': 'tNO', 'InventoryAccount': None, 'CostAccount': None, 'TransferAccount': None, 'RevenuesAccount': None, 'VarienceAccount': None, 'DecreasingAccount': None, 'IncreasingAccount': None, 'ReturningAccount': None, 'ExpensesAccount': None, 'EURevenuesAccount': None, 'EUExpensesAccount': None, 'ForeignRevenueAcc': None, 'ForeignExpensAcc': None, 'ExemptIncomeAcc': None, 'PriceDifferenceAcc': None, 'WarehouseCode': 'ZW', 'InStock': 0.0, 'Committed': 0.0, 'Ordered': 0.0, 'CountedQuantity': 0.0, 'WasCounted': 'tNO', 'UserSignature': 50, 'Counted': 0.0, 'ExpenseClearingAct': None, 'PurchaseCreditAcc': None, 'EUPurchaseCreditAcc': None, 'ForeignPurchaseCreditAcc': None, 'SalesCreditAcc': None, 'SalesCreditEUAcc': None, 'ExemptedCredits': None, 'SalesCreditForeignAcc': None, 'ExpenseOffsettingAccount': None, 'WipAccount': None, 'ExchangeRateDifferencesAcct': None, 'GoodsClearingAcct': None, 'NegativeInventoryAdjustmentAccount': None, 'CostInflationOffsetAccount': None, 'GLDecreaseAcct': None, 'GLIncreaseAcct': None, 'PAReturnAcct': None, 'PurchaseAcct': None, 'PurchaseOffsetAcct': None, 'ShippedGoodsAccount': None, 'StockInflationOffsetAccount': None, 'StockInflationAdjustAccount': None, 'VATInRevenueAccount': None, 'WipVarianceAccount': None, 'CostInflationAccount': None, 'WHIncomingCenvatAccount': None, 'WHOutgoingCenvatAccount': None, 'StockInTransitAccount': None, 'WipOffsetProfitAndLossAccount': None, 'InventoryOffsetProfitAndLossAccount': None, 'DefaultBin': None, 'DefaultBinEnforced': 'tNO', 'PurchaseBalanceAccount': None, 'ItemCode': 'ACC-0000001', 'ItemCycleCounts': []}], 'ItemPreferredVendors': [], 'ItemLocalizationInfos': [], 'ItemProjects': [], 'ItemDistributionRules': [], 'ItemAttributeGroups': [], 'ItemDepreciationParameters': [], 'ItemPeriodControls': [], 'ItemUnitOfMeasurementCollection': [{'UoMType': 'iutInventory', 'UoMEntry': 1, 'DefaultBarcode': None, 'DefaultPackage': None, 'Length1': 0.0, 'Length1Unit': None, 'Length2': 0.0, 'Length2Unit': None, 'Width1': 0.0, 'Width1Unit': None, 'Width2': 0.0, 'Width2Unit': None, 'Height1': 0.0, 'Height1Unit': None, 'Height2': 0.0, 'Height2Unit': None, 'Volume': 0.0, 'VolumeUnit': None, 'Weight1': 0.0, 'Weight1Unit': None, 'Weight2': 0.0, 'Weight2Unit': None, 'ItemUoMPackageCollection': []}, {'UoMType': 'iutPurchasing', 'UoMEntry': 1, 'DefaultBarcode': None, 'DefaultPackage': None, 'Length1': 0.0, 'Length1Unit': None, 'Length2': 0.0, 'Length2Unit': None, 'Width1': 0.0, 'Width1Unit': None, 'Width2': 0.0, 'Width2Unit': None, 'Height1': 0.0, 'Height1Unit': None, 'Height2': 0.0, 'Height2Unit': None, 'Volume': 0.0, 'VolumeUnit': 2, 'Weight1': 0.0, 'Weight1Unit': None, 'Weight2': 0.0, 'Weight2Unit': None, 'ItemUoMPackageCollection': []}, {'UoMType': 'iutPurchasing', 'UoMEntry': 8, 'DefaultBarcode': None, 'DefaultPackage': None, 'Length1': 0.0, 'Length1Unit': None, 'Length2': 0.0, 'Length2Unit': None, 'Width1': 0.0, 'Width1Unit': None, 'Width2': 0.0, 'Width2Unit': None, 'Height1': 0.0, 'Height1Unit': None, 'Height2': 0.0, 'Height2Unit': None, 'Volume': 0.0, 'VolumeUnit': 4, 'Weight1': 0.0, 'Weight1Unit': None, 'Weight2': 0.0, 'Weight2Unit': None, 'ItemUoMPackageCollection': []}, {'UoMType': 'iutSales', 'UoMEntry': 1, 'DefaultBarcode': None, 'DefaultPackage': None, 'Length1': 0.0, 'Length1Unit': None, 'Length2': 0.0, 'Length2Unit': None, 'Width1': 0.0, 'Width1Unit': None, 'Width2': 0.0, 'Width2Unit': None, 'Height1': 0.0, 'Height1Unit': None, 'Height2': 0.0, 'Height2Unit': None, 'Volume': 0.0, 'VolumeUnit': 2, 'Weight1': 0.0, 'Weight1Unit': None, 'Weight2': 0.0, 'Weight2Unit': None, 'ItemUoMPackageCollection': []}, {'UoMType': 'iutSales', 'UoMEntry': 8, 'DefaultBarcode': None, 'DefaultPackage': None, 'Length1': 0.0, 'Length1Unit': None, 'Length2': 0.0, 'Length2Unit': None, 'Width1': 0.0, 'Width1Unit': None, 'Width2': 0.0, 'Width2Unit': None, 'Height1': 0.0, 'Height1Unit': None, 'Height2': 0.0, 'Height2Unit': None, 'Volume': 0.0, 'VolumeUnit': 4, 'Weight1': 0.0, 'Weight1Unit': None, 'Weight2': 0.0, 'Weight2Unit': None, 'ItemUoMPackageCollection': []}], 'ItemBarCodeCollection': [], 'ItemIntrastatExtension': {'ItemCode': 'ACC-0000001', 'CommodityCode': None, 'SupplementaryUnit': None, 'FactorOfSupplementaryUnit': 0.0, 'ImportRegionState': 0, 'ExportRegionState': 0, 'ImportNatureOfTransaction': None, 'ExportNatureOfTransaction': None, 'ImportStatisticalProcedure': None, 'ExportStatisticalProcedure': None, 'CountryOfOrigin': None, 'ServiceCode': None, 'Type': 'dDocument_Items', 'ServiceSupplyMethod': 'ssmImmediate', 'ServicePaymentMethod': 'spmOther', 'ImportRegionCountry': 'GB', 'ExportRegionCountry': 'GB', 'UseWeightInCalculation': 'tYES', 'IntrastatRelevant': 'tNO', 'StatisticalCode': None}}, {'ItemCode': 'ACC-0000002', 'ItemName': 'Square With 2 Slits 10*10cm', 'ForeignName': None, 'ItemsGroupCode': 110, 'CustomsGroupCode': -1, 'SalesVATGroup': 'X0', 'BarCode': None, 'VatLiable': 'tYES', 'PurchaseItem': 'tYES', 'SalesItem': 'tNO', 'InventoryItem': 'tYES', 'IncomeAccount': None, 'ExemptIncomeAccount': None, 'ExpanseAccount': None, 'Mainsupplier': None, 'SupplierCatalogNo': None, 'DesiredInventory': 0.0, 'MinInventory': 0.0, 'Picture': None, 'User_Text': None, 'SerialNum': None, 'CommissionPercent': 0.0, 'CommissionSum': 0.0, 'CommissionGroup': 0, 'TreeType': 'iNotATree', 'AssetItem': 'tNO', 'DataExportCode': None, 'Manufacturer': -1, 'QuantityOnStock': 10.0, 'QuantityOrderedFromVendors': 0.0, 'QuantityOrderedByCustomers': 0.0, 'ManageSerialNumbers': 'tNO', 'ManageBatchNumbers': 'tNO', 'Valid': 'tYES', 'ValidFrom': None, 'ValidTo': None, 'ValidRemarks': None, 'Frozen': 'tNO', 'FrozenFrom': None, 'FrozenTo': None, 'FrozenRemarks': None, 'SalesUnit': None, 'SalesItemsPerUnit': 1.0, 'SalesPackagingUnit': None, 'SalesQtyPerPackUnit': 1.0, 'SalesUnitLength': None, 'SalesLengthUnit': None, 'SalesUnitWidth': None, 'SalesWidthUnit': None, 'SalesUnitHeight': None, 'SalesHeightUnit': None, 'SalesUnitVolume': 0.0, 'SalesVolumeUnit': 4, 'SalesUnitWeight': None, 'SalesWeightUnit': None, 'PurchaseUnit': None, 'PurchaseItemsPerUnit': 1.0, 'PurchasePackagingUnit': None, 'PurchaseQtyPerPackUnit': 1.0, 'PurchaseUnitLength': None, 'PurchaseLengthUnit': None, 'PurchaseUnitWidth': None, 'PurchaseWidthUnit': None, 'PurchaseUnitHeight': None, 'PurchaseHeightUnit': None, 'PurchaseUnitVolume': 0.0, 'PurchaseVolumeUnit': 4, 'PurchaseUnitWeight': None, 'PurchaseWeightUnit': None, 'PurchaseVATGroup': 'X1', 'SalesFactor1': 1.0, 'SalesFactor2': 1.0, 'SalesFactor3': 1.0, 'SalesFactor4': 1.0, 'PurchaseFactor1': 1.0, 'PurchaseFactor2': 1.0, 'PurchaseFactor3': 1.0, 'PurchaseFactor4': 1.0, 'MovingAveragePrice': 0.0, 'ForeignRevenuesAccount': None, 'ECRevenuesAccount': None, 'ForeignExpensesAccount': None, 'ECExpensesAccount': None, 'AvgStdPrice': 0.0, 'DefaultWarehouse': None, 'ShipType': None, 'GLMethod': 'glm_ItemClass', 'TaxType': 'tt_Yes', 'MaxInventory': 0.0, 'ManageStockByWarehouse': 'tNO', 'PurchaseHeightUnit1': None, 'PurchaseUnitHeight1': None, 'PurchaseLengthUnit1': None, 'PurchaseUnitLength1': None, 'PurchaseWeightUnit1': None, 'PurchaseUnitWeight1': None, 'PurchaseWidthUnit1': None, 'PurchaseUnitWidth1': None, 'SalesHeightUnit1': None, 'SalesUnitHeight1': None, 'SalesLengthUnit1': None, 'SalesUnitLength1': None, 'SalesWeightUnit1': None, 'SalesUnitWeight1': None, 'SalesWidthUnit1': None, 'SalesUnitWidth1': None, 'ForceSelectionOfSerialNumber': 'tYES', 'ManageSerialNumbersOnReleaseOnly': 'tNO', 'WTLiable': 'tNO', 'CostAccountingMethod': 'bis_MovingAverage', 'SWW': None, 'WarrantyTemplate': '', 'IndirectTax': 'tNO', 'ArTaxCode': None, 'ApTaxCode': None, 'BaseUnitName': None, 'ItemCountryOrg': None, 'IssueMethod': 'im_Backflush', 'SRIAndBatchManageMethod': 'bomm_OnEveryTransaction', 'IsPhantom': 'tNO', 'InventoryUOM': 'Piece', 'PlanningSystem': 'bop_None', 'ProcurementMethod': 'bom_Buy', 'ComponentWarehouse': 'bomcw_BOM', 'OrderIntervals': None, 'OrderMultiple': 0.0, 'LeadTime': None, 'MinOrderQuantity': 0.0, 'ItemType': 'itItems', 'ItemClass': 'itcMaterial', 'OutgoingServiceCode': -1, 'IncomingServiceCode': -1, 'ServiceGroup': -1, 'NCMCode': -1, 'MaterialType': 'mt_FinishedGoods', 'MaterialGroup': -1, 'ProductSource': '', 'Properties1': 'tNO', 'Properties2': 'tNO', 'Properties3': 'tNO', 'Properties4': 'tNO', 'Properties5': 'tNO', 'Properties6': 'tNO', 'Properties7': 'tNO', 'Properties8': 'tNO', 'Properties9': 'tNO', 'Properties10': 'tNO', 'Properties11': 'tNO', 'Properties12': 'tNO', 'Properties13': 'tNO', 'Properties14': 'tNO', 'Properties15': 'tNO', 'Properties16': 'tNO', 'Properties17': 'tNO', 'Properties18': 'tNO', 'Properties19': 'tNO', 'Properties20': 'tNO', 'Properties21': 'tNO', 'Properties22': 'tNO', 'Properties23': 'tNO', 'Properties24': 'tNO', 'Properties25': 'tNO', 'Properties26': 'tNO', 'Properties27': 'tNO', 'Properties28': 'tNO', 'Properties29': 'tNO', 'Properties30': 'tNO', 'Properties31': 'tNO', 'Properties32': 'tNO', 'Properties33': 'tNO', 'Properties34': 'tNO', 'Properties35': 'tNO', 'Properties36': 'tNO', 'Properties37': 'tNO', 'Properties38': 'tNO', 'Properties39': 'tNO', 'Properties40': 'tNO', 'Properties41': 'tNO', 'Properties42': 'tNO', 'Properties43': 'tNO', 'Properties44': 'tNO', 'Properties45': 'tNO', 'Properties46': 'tNO', 'Properties47': 'tNO', 'Properties48': 'tNO', 'Properties49': 'tNO', 'Properties50': 'tNO', 'Properties51': 'tNO', 'Properties52': 'tNO', 'Properties53': 'tNO', 'Properties54': 'tNO', 'Properties55': 'tNO', 'Properties56': 'tNO', 'Properties57': 'tNO', 'Properties58': 'tNO', 'Properties59': 'tNO', 'Properties60': 'tNO', 'Properties61': 'tNO', 'Properties62': 'tNO', 'Properties63': 'tNO', 'Properties64': 'tNO', 'AutoCreateSerialNumbersOnRelease': 'tNO', 'DNFEntry': -1, 'GTSItemSpec': None, 'GTSItemTaxCategory': None, 'FuelID': None, 'BeverageTableCode': '', 'BeverageGroupCode': '', 'BeverageCommercialBrandCode': None, 'Series': 119, 'ToleranceDays': None, 'TypeOfAdvancedRules': 'toarGeneral', 'IssuePrimarilyBy': 'ipbBinLocations', 'NoDiscounts': 'tNO', 'AssetClass': '', 'AssetGroup': '', 'InventoryNumber': '', 'Technician': None, 'Employee': None, 'Location': None, 'AssetStatus': 'New', 'CapitalizationDate': None, 'StatisticalAsset': 'tNO', 'Cession': 'tNO', 'DeactivateAfterUsefulLife': 'tNO', 'ManageByQuantity': 'tNO', 'UoMGroupEntry': 1, 'InventoryUoMEntry': 1, 'DefaultSalesUoMEntry': None, 'DefaultPurchasingUoMEntry': None, 'DepreciationGroup': None, 'AssetSerialNumber': '', 'InventoryWeight': None, 'InventoryWeightUnit': None, 'InventoryWeight1': None, 'InventoryWeightUnit1': None, 'DefaultCountingUnit': 'Piece', 'CountingItemsPerUnit': 1.0, 'DefaultCountingUoMEntry': 1, 'Excisable': 'tNO', 'ChapterID': -1, 'ScsCode': None, 'SpProdType': None, 'ProdStdCost': 0.0, 'InCostRollup': 'tYES', 'VirtualAssetItem': 'tNO', 'EnforceAssetSerialNumbers': 'tNO', 'AttachmentEntry': None, 'LinkedResource': None, 'UpdateDate': '2025-01-27', 'UpdateTime': '11:24:02', 'GSTRelevnt': 'tNO', 'SACEntry': -1, 'GSTTaxCategory': 'gtc_Regular', 'ServiceCategoryEntry': -1, 'CapitalGoodsOnHoldPercent': 0.0, 'CapitalGoodsOnHoldLimit': 0.0, 'AssessableValue': 0.0, 'AssVal4WTR': 0.0, 'SOIExcisable': 'se_NotExcisable', 'TNVED': None, 'ImportedItem': 'tNO', 'PricingUnit': 1, 'CreateDate': '2025-01-26', 'CreateTime': '09:34:00', 'U_MfgH': None, 'U_Collection': None, 'U_OldCode': None, 'U_ItemsCat': None, 'U_NumberofSet': None, 'U_NileCode': None, 'U_TransferProductionLinkExclude': None, 'U_SBO_CodeType': 'GS1', 'U_SBO_EGSCode': None, 'U_ShopifyColor': None, 'U_SalesChannel': None, 'U_ShopifyItemIDLocal': None, 'U_ShopifyItemIDInternational': None, 'U_ParentCommercialName': None, 'ItemPrices': [{'PriceList': 1, 'Price': 0.0, 'Currency': None, 'AdditionalPrice1': 0.0, 'AdditionalCurrency1': None, 'AdditionalPrice2': 0.0, 'AdditionalCurrency2': None, 'BasePriceList': 1, 'Factor': 1.0, 'UoMPrices': []}, {'PriceList': 2, 'Price': 0.0, 'Currency': None, 'AdditionalPrice1': 0.0, 'AdditionalCurrency1': None, 'AdditionalPrice2': 0.0, 'AdditionalCurrency2': None, 'BasePriceList': 1, 'Factor': 0.4, 'UoMPrices': []}, {'PriceList': 3, 'Price': 0.0, 'Currency': None, 'AdditionalPrice1': 0.0, 'AdditionalCurrency1': None, 'AdditionalPrice2': 0.0, 'AdditionalCurrency2': None, 'BasePriceList': 3, 'Factor': 1.0, 'UoMPrices': []}, {'PriceList': 4, 'Price': 0.0, 'Currency': None, 'AdditionalPrice1': 0.0, 'AdditionalCurrency1': None, 'AdditionalPrice2': 0.0, 'AdditionalCurrency2': None, 'BasePriceList': 4, 'Factor': 1.0, 'UoMPrices': []}, {'PriceList': 5, 'Price': 0.0, 'Currency': None, 'AdditionalPrice1': 0.0, 'AdditionalCurrency1': None, 'AdditionalPrice2': 0.0, 'AdditionalCurrency2': None, 'BasePriceList': 5, 'Factor': 1.0, 'UoMPrices': []}, {'PriceList': 6, 'Price': 0.0, 'Currency': None, 'AdditionalPrice1': 0.0, 'AdditionalCurrency1': None, 'AdditionalPrice2': 0.0, 'AdditionalCurrency2': None, 'BasePriceList': 6, 'Factor': 1.0, 'UoMPrices': []}, {'PriceList': 7, 'Price': 0.0, 'Currency': None, 'AdditionalPrice1': 0.0, 'AdditionalCurrency1': None, 'AdditionalPrice2': 0.0, 'AdditionalCurrency2': None, 'BasePriceList': 7, 'Factor': 1.0, 'UoMPrices': []}, {'PriceList': 8, 'Price': 0.0, 'Currency': None, 'AdditionalPrice1': 0.0, 'AdditionalCurrency1': None, 'AdditionalPrice2': 0.0, 'AdditionalCurrency2': None, 'BasePriceList': 8, 'Factor': 1.0, 'UoMPrices': []}, {'PriceList': 9, 'Price': 0.0, 'Currency': None, 'AdditionalPrice1': 0.0, 'AdditionalCurrency1': None, 'AdditionalPrice2': 0.0, 'AdditionalCurrency2': None, 'BasePriceList': 9, 'Factor': 1.0, 'UoMPrices': []}, {'PriceList': 10, 'Price': 0.0, 'Currency': None, 'AdditionalPrice1': 0.0, 'AdditionalCurrency1': None, 'AdditionalPrice2': 0.0, 'AdditionalCurrency2': None, 'BasePriceList': 10, 'Factor': 1.0, 'UoMPrices': []}], 'ItemWarehouseInfoCollection': [{'MinimalStock': 0.0, 'MaximalStock': 0.0, 'MinimalOrder': 0.0, 'StandardAveragePrice': 250.0, 'Locked': 'tNO', 'InventoryAccount': None, 'CostAccount': None, 'TransferAccount': None, 'RevenuesAccount': None, 'VarienceAccount': None, 'DecreasingAccount': None, 'IncreasingAccount': None, 'ReturningAccount': None, 'ExpensesAccount': None, 'EURevenuesAccount': None, 'EUExpensesAccount': None, 'ForeignRevenueAcc': None, 'ForeignExpensAcc': None, 'ExemptIncomeAcc': None, 'PriceDifferenceAcc': None, 'WarehouseCode': '5A', 'InStock': 7.0, 'Committed': 0.0, 'Ordered': 0.0, 'CountedQuantity': 0.0, 'WasCounted': 'tNO', 'UserSignature': 50, 'Counted': 0.0, 'ExpenseClearingAct': None, 'PurchaseCreditAcc': None, 'EUPurchaseCreditAcc': None, 'ForeignPurchaseCreditAcc': None, 'SalesCreditAcc': None, 'SalesCreditEUAcc': None, 'ExemptedCredits': None, 'SalesCreditForeignAcc': None, 'ExpenseOffsettingAccount': None, 'WipAccount': None, 'ExchangeRateDifferencesAcct': None, 'GoodsClearingAcct': None, 'NegativeInventoryAdjustmentAccount': None, 'CostInflationOffsetAccount': None, 'GLDecreaseAcct': None, 'GLIncreaseAcct': None, 'PAReturnAcct': None, 'PurchaseAcct': None, 'PurchaseOffsetAcct': None, 'ShippedGoodsAccount': None, 'StockInflationOffsetAccount': None, 'StockInflationAdjustAccount': None, 'VATInRevenueAccount': None, 'WipVarianceAccount': None, 'CostInflationAccount': None, 'WHIncomingCenvatAccount': None, 'WHOutgoingCenvatAccount': None, 'StockInTransitAccount': None, 'WipOffsetProfitAndLossAccount': None, 'InventoryOffsetProfitAndLossAccount': None, 'DefaultBin': None, 'DefaultBinEnforced': 'tNO', 'PurchaseBalanceAccount': None, 'ItemCode': 'ACC-0000002', 'ItemCycleCounts': []}, {'MinimalStock': 0.0, 'MaximalStock': 0.0, 'MinimalOrder': 0.0, 'StandardAveragePrice': 250.0, 'Locked': 'tNO', 'InventoryAccount': None, 'CostAccount': None, 'TransferAccount': None, 'RevenuesAccount': None, 'VarienceAccount': None, 'DecreasingAccount': None, 'IncreasingAccount': None, 'ReturningAccount': None, 'ExpensesAccount': None, 'EURevenuesAccount': None, 'EUExpensesAccount': None, 'ForeignRevenueAcc': None, 'ForeignExpensAcc': None, 'ExemptIncomeAcc': None, 'PriceDifferenceAcc': None, 'WarehouseCode': 'Arkan', 'InStock': 3.0, 'Committed': 0.0, 'Ordered': 0.0, 'CountedQuantity': 0.0, 'WasCounted': 'tNO', 'UserSignature': 50, 'Counted': 0.0, 'ExpenseClearingAct': None, 'PurchaseCreditAcc': None, 'EUPurchaseCreditAcc': None, 'ForeignPurchaseCreditAcc': None, 'SalesCreditAcc': None, 'SalesCreditEUAcc': None, 'ExemptedCredits': None, 'SalesCreditForeignAcc': None, 'ExpenseOffsettingAccount': None, 'WipAccount': None, 'ExchangeRateDifferencesAcct': None, 'GoodsClearingAcct': None, 'NegativeInventoryAdjustmentAccount': None, 'CostInflationOffsetAccount': None, 'GLDecreaseAcct': None, 'GLIncreaseAcct': None, 'PAReturnAcct': None, 'PurchaseAcct': None, 'PurchaseOffsetAcct': None, 'ShippedGoodsAccount': None, 'StockInflationOffsetAccount': None, 'StockInflationAdjustAccount': None, 'VATInRevenueAccount': None, 'WipVarianceAccount': None, 'CostInflationAccount': None, 'WHIncomingCenvatAccount': None, 'WHOutgoingCenvatAccount': None, 'StockInTransitAccount': None, 'WipOffsetProfitAndLossAccount': None, 'InventoryOffsetProfitAndLossAccount': None, 'DefaultBin': None, 'DefaultBinEnforced': 'tNO', 'PurchaseBalanceAccount': None, 'ItemCode': 'ACC-0000002', 'ItemCycleCounts': []}, {'MinimalStock': 0.0, 'MaximalStock': 0.0, 'MinimalOrder': 0.0, 'StandardAveragePrice': 0.0, 'Locked': 'tNO', 'InventoryAccount': None, 'CostAccount': None, 'TransferAccount': None, 'RevenuesAccount': None, 'VarienceAccount': None, 'DecreasingAccount': None, 'IncreasingAccount': None, 'ReturningAccount': None, 'ExpensesAccount': None, 'EURevenuesAccount': None, 'EUExpensesAccount': None, 'ForeignRevenueAcc': None, 'ForeignExpensAcc': None, 'ExemptIncomeAcc': None, 'PriceDifferenceAcc': None, 'WarehouseCode': 'DIP', 'InStock': 0.0, 'Committed': 0.0, 'Ordered': 0.0, 'CountedQuantity': 0.0, 'WasCounted': 'tNO', 'UserSignature': 50, 'Counted': 0.0, 'ExpenseClearingAct': None, 'PurchaseCreditAcc': None, 'EUPurchaseCreditAcc': None, 'ForeignPurchaseCreditAcc': None, 'SalesCreditAcc': None, 'SalesCreditEUAcc': None, 'ExemptedCredits': None, 'SalesCreditForeignAcc': None, 'ExpenseOffsettingAccount': None, 'WipAccount': None, 'ExchangeRateDifferencesAcct': None, 'GoodsClearingAcct': None, 'NegativeInventoryAdjustmentAccount': None, 'CostInflationOffsetAccount': None, 'GLDecreaseAcct': None, 'GLIncreaseAcct': None, 'PAReturnAcct': None, 'PurchaseAcct': None, 'PurchaseOffsetAcct': None, 'ShippedGoodsAccount': None, 'StockInflationOffsetAccount': None, 'StockInflationAdjustAccount': None, 'VATInRevenueAccount': None, 'WipVarianceAccount': None, 'CostInflationAccount': None, 'WHIncomingCenvatAccount': None, 'WHOutgoingCenvatAccount': None, 'StockInTransitAccount': None, 'WipOffsetProfitAndLossAccount': None, 'InventoryOffsetProfitAndLossAccount': None, 'DefaultBin': None, 'DefaultBinEnforced': 'tNO', 'PurchaseBalanceAccount': None, 'ItemCode': 'ACC-0000002', 'ItemCycleCounts': []}, {'MinimalStock': 0.0, 'MaximalStock': 0.0, 'MinimalOrder': 0.0, 'StandardAveragePrice': 250.0, 'Locked': 'tNO', 'InventoryAccount': None, 'CostAccount': None, 'TransferAccount': None, 'RevenuesAccount': None, 'VarienceAccount': None, 'DecreasingAccount': None, 'IncreasingAccount': None, 'ReturningAccount': None, 'ExpensesAccount': None, 'EURevenuesAccount': None, 'EUExpensesAccount': None, 'ForeignRevenueAcc': None, 'ForeignExpensAcc': None, 'ExemptIncomeAcc': None, 'PriceDifferenceAcc': None, 'WarehouseCode': 'INC', 'InStock': 0.0, 'Committed': 0.0, 'Ordered': 0.0, 'CountedQuantity': 0.0, 'WasCounted': 'tNO', 'UserSignature': 50, 'Counted': 0.0, 'ExpenseClearingAct': None, 'PurchaseCreditAcc': None, 'EUPurchaseCreditAcc': None, 'ForeignPurchaseCreditAcc': None, 'SalesCreditAcc': None, 'SalesCreditEUAcc': None, 'ExemptedCredits': None, 'SalesCreditForeignAcc': None, 'ExpenseOffsettingAccount': None, 'WipAccount': None, 'ExchangeRateDifferencesAcct': None, 'GoodsClearingAcct': None, 'NegativeInventoryAdjustmentAccount': None, 'CostInflationOffsetAccount': None, 'GLDecreaseAcct': None, 'GLIncreaseAcct': None, 'PAReturnAcct': None, 'PurchaseAcct': None, 'PurchaseOffsetAcct': None, 'ShippedGoodsAccount': None, 'StockInflationOffsetAccount': None, 'StockInflationAdjustAccount': None, 'VATInRevenueAccount': None, 'WipVarianceAccount': None, 'CostInflationAccount': None, 'WHIncomingCenvatAccount': None, 'WHOutgoingCenvatAccount': None, 'StockInTransitAccount': None, 'WipOffsetProfitAndLossAccount': None, 'InventoryOffsetProfitAndLossAccount': None, 'DefaultBin': None, 'DefaultBinEnforced': 'tNO', 'PurchaseBalanceAccount': None, 'ItemCode': 'ACC-0000002', 'ItemCycleCounts': []}, {'MinimalStock': 0.0, 'MaximalStock': 0.0, 'MinimalOrder': 0.0, 'StandardAveragePrice': 0.0, 'Locked': 'tNO', 'InventoryAccount': None, 'CostAccount': None, 'TransferAccount': None, 'RevenuesAccount': None, 'VarienceAccount': None, 'DecreasingAccount': None, 'IncreasingAccount': None, 'ReturningAccount': None, 'ExpensesAccount': None, 'EURevenuesAccount': None, 'EUExpensesAccount': None, 'ForeignRevenueAcc': None, 'ForeignExpensAcc': None, 'ExemptIncomeAcc': None, 'PriceDifferenceAcc': None, 'WarehouseCode': 'ONL', 'InStock': 0.0, 'Committed': 0.0, 'Ordered': 0.0, 'CountedQuantity': 0.0, 'WasCounted': 'tNO', 'UserSignature': 50, 'Counted': 0.0, 'ExpenseClearingAct': None, 'PurchaseCreditAcc': None, 'EUPurchaseCreditAcc': None, 'ForeignPurchaseCreditAcc': None, 'SalesCreditAcc': None, 'SalesCreditEUAcc': None, 'ExemptedCredits': None, 'SalesCreditForeignAcc': None, 'ExpenseOffsettingAccount': None, 'WipAccount': None, 'ExchangeRateDifferencesAcct': None, 'GoodsClearingAcct': None, 'NegativeInventoryAdjustmentAccount': None, 'CostInflationOffsetAccount': None, 'GLDecreaseAcct': None, 'GLIncreaseAcct': None, 'PAReturnAcct': None, 'PurchaseAcct': None, 'PurchaseOffsetAcct': None, 'ShippedGoodsAccount': None, 'StockInflationOffsetAccount': None, 'StockInflationAdjustAccount': None, 'VATInRevenueAccount': None, 'WipVarianceAccount': None, 'CostInflationAccount': None, 'WHIncomingCenvatAccount': None, 'WHOutgoingCenvatAccount': None, 'StockInTransitAccount': None, 'WipOffsetProfitAndLossAccount': None, 'InventoryOffsetProfitAndLossAccount': None, 'DefaultBin': None, 'DefaultBinEnforced': 'tNO', 'PurchaseBalanceAccount': None, 'ItemCode': 'ACC-0000002', 'ItemCycleCounts': []}, {'MinimalStock': 0.0, 'MaximalStock': 0.0, 'MinimalOrder': 0.0, 'StandardAveragePrice': 0.0, 'Locked': 'tNO', 'InventoryAccount': None, 'CostAccount': None, 'TransferAccount': None, 'RevenuesAccount': None, 'VarienceAccount': None, 'DecreasingAccount': None, 'IncreasingAccount': None, 'ReturningAccount': None, 'ExpensesAccount': None, 'EURevenuesAccount': None, 'EUExpensesAccount': None, 'ForeignRevenueAcc': None, 'ForeignExpensAcc': None, 'ExemptIncomeAcc': None, 'PriceDifferenceAcc': None, 'WarehouseCode': 'PHO', 'InStock': 0.0, 'Committed': 0.0, 'Ordered': 0.0, 'CountedQuantity': 0.0, 'WasCounted': 'tNO', 'UserSignature': 50, 'Counted': 0.0, 'ExpenseClearingAct': None, 'PurchaseCreditAcc': None, 'EUPurchaseCreditAcc': None, 'ForeignPurchaseCreditAcc': None, 'SalesCreditAcc': None, 'SalesCreditEUAcc': None, 'ExemptedCredits': None, 'SalesCreditForeignAcc': None, 'ExpenseOffsettingAccount': None, 'WipAccount': None, 'ExchangeRateDifferencesAcct': None, 'GoodsClearingAcct': None, 'NegativeInventoryAdjustmentAccount': None, 'CostInflationOffsetAccount': None, 'GLDecreaseAcct': None, 'GLIncreaseAcct': None, 'PAReturnAcct': None, 'PurchaseAcct': None, 'PurchaseOffsetAcct': None, 'ShippedGoodsAccount': None, 'StockInflationOffsetAccount': None, 'StockInflationAdjustAccount': None, 'VATInRevenueAccount': None, 'WipVarianceAccount': None, 'CostInflationAccount': None, 'WHIncomingCenvatAccount': None, 'WHOutgoingCenvatAccount': None, 'StockInTransitAccount': None, 'WipOffsetProfitAndLossAccount': None, 'InventoryOffsetProfitAndLossAccount': None, 'DefaultBin': None, 'DefaultBinEnforced': 'tNO', 'PurchaseBalanceAccount': None, 'ItemCode': 'ACC-0000002', 'ItemCycleCounts': []}, {'MinimalStock': 0.0, 'MaximalStock': 0.0, 'MinimalOrder': 0.0, 'StandardAveragePrice': 0.0, 'Locked': 'tNO', 'InventoryAccount': None, 'CostAccount': None, 'TransferAccount': None, 'RevenuesAccount': None, 'VarienceAccount': None, 'DecreasingAccount': None, 'IncreasingAccount': None, 'ReturningAccount': None, 'ExpensesAccount': None, 'EURevenuesAccount': None, 'EUExpensesAccount': None, 'ForeignRevenueAcc': None, 'ForeignExpensAcc': None, 'ExemptIncomeAcc': None, 'PriceDifferenceAcc': None, 'WarehouseCode': 'PHO-EX', 'InStock': 0.0, 'Committed': 0.0, 'Ordered': 0.0, 'CountedQuantity': 0.0, 'WasCounted': 'tNO', 'UserSignature': 1, 'Counted': 0.0, 'ExpenseClearingAct': None, 'PurchaseCreditAcc': None, 'EUPurchaseCreditAcc': None, 'ForeignPurchaseCreditAcc': None, 'SalesCreditAcc': None, 'SalesCreditEUAcc': None, 'ExemptedCredits': None, 'SalesCreditForeignAcc': None, 'ExpenseOffsettingAccount': None, 'WipAccount': None, 'ExchangeRateDifferencesAcct': None, 'GoodsClearingAcct': None, 'NegativeInventoryAdjustmentAccount': None, 'CostInflationOffsetAccount': None, 'GLDecreaseAcct': None, 'GLIncreaseAcct': None, 'PAReturnAcct': None, 'PurchaseAcct': None, 'PurchaseOffsetAcct': None, 'ShippedGoodsAccount': None, 'StockInflationOffsetAccount': None, 'StockInflationAdjustAccount': None, 'VATInRevenueAccount': None, 'WipVarianceAccount': None, 'CostInflationAccount': None, 'WHIncomingCenvatAccount': None, 'WHOutgoingCenvatAccount': None, 'StockInTransitAccount': None, 'WipOffsetProfitAndLossAccount': None, 'InventoryOffsetProfitAndLossAccount': None, 'DefaultBin': None, 'DefaultBinEnforced': 'tNO', 'PurchaseBalanceAccount': None, 'ItemCode': 'ACC-0000002', 'ItemCycleCounts': []}, {'MinimalStock': 0.0, 'MaximalStock': 0.0, 'MinimalOrder': 0.0, 'StandardAveragePrice': 0.0, 'Locked': 'tNO', 'InventoryAccount': None, 'CostAccount': None, 'TransferAccount': None, 'RevenuesAccount': None, 'VarienceAccount': None, 'DecreasingAccount': None, 'IncreasingAccount': None, 'ReturningAccount': None, 'ExpensesAccount': None, 'EURevenuesAccount': None, 'EUExpensesAccount': None, 'ForeignRevenueAcc': None, 'ForeignExpensAcc': None, 'ExemptIncomeAcc': None, 'PriceDifferenceAcc': None, 'WarehouseCode': 'PHO-IN', 'InStock': 0.0, 'Committed': 0.0, 'Ordered': 0.0, 'CountedQuantity': 0.0, 'WasCounted': 'tNO', 'UserSignature': 1, 'Counted': 0.0, 'ExpenseClearingAct': None, 'PurchaseCreditAcc': None, 'EUPurchaseCreditAcc': None, 'ForeignPurchaseCreditAcc': None, 'SalesCreditAcc': None, 'SalesCreditEUAcc': None, 'ExemptedCredits': None, 'SalesCreditForeignAcc': None, 'ExpenseOffsettingAccount': None, 'WipAccount': None, 'ExchangeRateDifferencesAcct': None, 'GoodsClearingAcct': None, 'NegativeInventoryAdjustmentAccount': None, 'CostInflationOffsetAccount': None, 'GLDecreaseAcct': None, 'GLIncreaseAcct': None, 'PAReturnAcct': None, 'PurchaseAcct': None, 'PurchaseOffsetAcct': None, 'ShippedGoodsAccount': None, 'StockInflationOffsetAccount': None, 'StockInflationAdjustAccount': None, 'VATInRevenueAccount': None, 'WipVarianceAccount': None, 'CostInflationAccount': None, 'WHIncomingCenvatAccount': None, 'WHOutgoingCenvatAccount': None, 'StockInTransitAccount': None, 'WipOffsetProfitAndLossAccount': None, 'InventoryOffsetProfitAndLossAccount': None, 'DefaultBin': None, 'DefaultBinEnforced': 'tNO', 'PurchaseBalanceAccount': None, 'ItemCode': 'ACC-0000002', 'ItemCycleCounts': []}, {'MinimalStock': 0.0, 'MaximalStock': 0.0, 'MinimalOrder': 0.0, 'StandardAveragePrice': 0.0, 'Locked': 'tNO', 'InventoryAccount': None, 'CostAccount': None, 'TransferAccount': None, 'RevenuesAccount': None, 'VarienceAccount': None, 'DecreasingAccount': None, 'IncreasingAccount': None, 'ReturningAccount': None, 'ExpensesAccount': None, 'EURevenuesAccount': None, 'EUExpensesAccount': None, 'ForeignRevenueAcc': None, 'ForeignExpensAcc': None, 'ExemptIncomeAcc': None, 'PriceDifferenceAcc': None, 'WarehouseCode': 'RTW', 'InStock': 0.0, 'Committed': 0.0, 'Ordered': 0.0, 'CountedQuantity': 0.0, 'WasCounted': 'tNO', 'UserSignature': 50, 'Counted': 0.0, 'ExpenseClearingAct': None, 'PurchaseCreditAcc': None, 'EUPurchaseCreditAcc': None, 'ForeignPurchaseCreditAcc': None, 'SalesCreditAcc': None, 'SalesCreditEUAcc': None, 'ExemptedCredits': None, 'SalesCreditForeignAcc': None, 'ExpenseOffsettingAccount': None, 'WipAccount': None, 'ExchangeRateDifferencesAcct': None, 'GoodsClearingAcct': None, 'NegativeInventoryAdjustmentAccount': None, 'CostInflationOffsetAccount': None, 'GLDecreaseAcct': None, 'GLIncreaseAcct': None, 'PAReturnAcct': None, 'PurchaseAcct': None, 'PurchaseOffsetAcct': None, 'ShippedGoodsAccount': None, 'StockInflationOffsetAccount': None, 'StockInflationAdjustAccount': None, 'VATInRevenueAccount': None, 'WipVarianceAccount': None, 'CostInflationAccount': None, 'WHIncomingCenvatAccount': None, 'WHOutgoingCenvatAccount': None, 'StockInTransitAccount': None, 'WipOffsetProfitAndLossAccount': None, 'InventoryOffsetProfitAndLossAccount': None, 'DefaultBin': None, 'DefaultBinEnforced': 'tNO', 'PurchaseBalanceAccount': None, 'ItemCode': 'ACC-0000002', 'ItemCycleCounts': []}, {'MinimalStock': 0.0, 'MaximalStock': 0.0, 'MinimalOrder': 0.0, 'StandardAveragePrice': 0.0, 'Locked': 'tNO', 'InventoryAccount': None, 'CostAccount': None, 'TransferAccount': None, 'RevenuesAccount': None, 'VarienceAccount': None, 'DecreasingAccount': None, 'IncreasingAccount': None, 'ReturningAccount': None, 'ExpensesAccount': None, 'EURevenuesAccount': None, 'EUExpensesAccount': None, 'ForeignRevenueAcc': None, 'ForeignExpensAcc': None, 'ExemptIncomeAcc': None, 'PriceDifferenceAcc': None, 'WarehouseCode': 'RTWH', 'InStock': 0.0, 'Committed': 0.0, 'Ordered': 0.0, 'CountedQuantity': 0.0, 'WasCounted': 'tNO', 'UserSignature': 1, 'Counted': 0.0, 'ExpenseClearingAct': None, 'PurchaseCreditAcc': None, 'EUPurchaseCreditAcc': None, 'ForeignPurchaseCreditAcc': None, 'SalesCreditAcc': None, 'SalesCreditEUAcc': None, 'ExemptedCredits': None, 'SalesCreditForeignAcc': None, 'ExpenseOffsettingAccount': None, 'WipAccount': None, 'ExchangeRateDifferencesAcct': None, 'GoodsClearingAcct': None, 'NegativeInventoryAdjustmentAccount': None, 'CostInflationOffsetAccount': None, 'GLDecreaseAcct': None, 'GLIncreaseAcct': None, 'PAReturnAcct': None, 'PurchaseAcct': None, 'PurchaseOffsetAcct': None, 'ShippedGoodsAccount': None, 'StockInflationOffsetAccount': None, 'StockInflationAdjustAccount': None, 'VATInRevenueAccount': None, 'WipVarianceAccount': None, 'CostInflationAccount': None, 'WHIncomingCenvatAccount': None, 'WHOutgoingCenvatAccount': None, 'StockInTransitAccount': None, 'WipOffsetProfitAndLossAccount': None, 'InventoryOffsetProfitAndLossAccount': None, 'DefaultBin': None, 'DefaultBinEnforced': 'tNO', 'PurchaseBalanceAccount': None, 'ItemCode': 'ACC-0000002', 'ItemCycleCounts': []}, {'MinimalStock': 0.0, 'MaximalStock': 0.0, 'MinimalOrder': 0.0, 'StandardAveragePrice': 0.0, 'Locked': 'tNO', 'InventoryAccount': None, 'CostAccount': None, 'TransferAccount': None, 'RevenuesAccount': None, 'VarienceAccount': None, 'DecreasingAccount': None, 'IncreasingAccount': None, 'ReturningAccount': None, 'ExpensesAccount': None, 'EURevenuesAccount': None, 'EUExpensesAccount': None, 'ForeignRevenueAcc': None, 'ForeignExpensAcc': None, 'ExemptIncomeAcc': None, 'PriceDifferenceAcc': None, 'WarehouseCode': 'SW', 'InStock': 0.0, 'Committed': 0.0, 'Ordered': 0.0, 'CountedQuantity': 0.0, 'WasCounted': 'tNO', 'UserSignature': 50, 'Counted': 0.0, 'ExpenseClearingAct': None, 'PurchaseCreditAcc': None, 'EUPurchaseCreditAcc': None, 'ForeignPurchaseCreditAcc': None, 'SalesCreditAcc': None, 'SalesCreditEUAcc': None, 'ExemptedCredits': None, 'SalesCreditForeignAcc': None, 'ExpenseOffsettingAccount': None, 'WipAccount': None, 'ExchangeRateDifferencesAcct': None, 'GoodsClearingAcct': None, 'NegativeInventoryAdjustmentAccount': None, 'CostInflationOffsetAccount': None, 'GLDecreaseAcct': None, 'GLIncreaseAcct': None, 'PAReturnAcct': None, 'PurchaseAcct': None, 'PurchaseOffsetAcct': None, 'ShippedGoodsAccount': None, 'StockInflationOffsetAccount': None, 'StockInflationAdjustAccount': None, 'VATInRevenueAccount': None, 'WipVarianceAccount': None, 'CostInflationAccount': None, 'WHIncomingCenvatAccount': None, 'WHOutgoingCenvatAccount': None, 'StockInTransitAccount': None, 'WipOffsetProfitAndLossAccount': None, 'InventoryOffsetProfitAndLossAccount': None, 'DefaultBin': None, 'DefaultBinEnforced': 'tNO', 'PurchaseBalanceAccount': None, 'ItemCode': 'ACC-0000002', 'ItemCycleCounts': []}, {'MinimalStock': 0.0, 'MaximalStock': 0.0, 'MinimalOrder': 0.0, 'StandardAveragePrice': 0.0, 'Locked': 'tNO', 'InventoryAccount': None, 'CostAccount': None, 'TransferAccount': None, 'RevenuesAccount': None, 'VarienceAccount': None, 'DecreasingAccount': None, 'IncreasingAccount': None, 'ReturningAccount': None, 'ExpensesAccount': None, 'EURevenuesAccount': None, 'EUExpensesAccount': None, 'ForeignRevenueAcc': None, 'ForeignExpensAcc': None, 'ExemptIncomeAcc': None, 'PriceDifferenceAcc': None, 'WarehouseCode': 'WLS', 'InStock': 0.0, 'Committed': 0.0, 'Ordered': 0.0, 'CountedQuantity': 0.0, 'WasCounted': 'tNO', 'UserSignature': 50, 'Counted': 0.0, 'ExpenseClearingAct': None, 'PurchaseCreditAcc': None, 'EUPurchaseCreditAcc': None, 'ForeignPurchaseCreditAcc': None, 'SalesCreditAcc': None, 'SalesCreditEUAcc': None, 'ExemptedCredits': None, 'SalesCreditForeignAcc': None, 'ExpenseOffsettingAccount': None, 'WipAccount': None, 'ExchangeRateDifferencesAcct': None, 'GoodsClearingAcct': None, 'NegativeInventoryAdjustmentAccount': None, 'CostInflationOffsetAccount': None, 'GLDecreaseAcct': None, 'GLIncreaseAcct': None, 'PAReturnAcct': None, 'PurchaseAcct': None, 'PurchaseOffsetAcct': None, 'ShippedGoodsAccount': None, 'StockInflationOffsetAccount': None, 'StockInflationAdjustAccount': None, 'VATInRevenueAccount': None, 'WipVarianceAccount': None, 'CostInflationAccount': None, 'WHIncomingCenvatAccount': None, 'WHOutgoingCenvatAccount': None, 'StockInTransitAccount': None, 'WipOffsetProfitAndLossAccount': None, 'InventoryOffsetProfitAndLossAccount': None, 'DefaultBin': None, 'DefaultBinEnforced': 'tNO', 'PurchaseBalanceAccount': None, 'ItemCode': 'ACC-0000002', 'ItemCycleCounts': []}, {'MinimalStock': 0.0, 'MaximalStock': 0.0, 'MinimalOrder': 0.0, 'StandardAveragePrice': 0.0, 'Locked': 'tNO', 'InventoryAccount': None, 'CostAccount': None, 'TransferAccount': None, 'RevenuesAccount': None, 'VarienceAccount': None, 'DecreasingAccount': None, 'IncreasingAccount': None, 'ReturningAccount': None, 'ExpensesAccount': None, 'EURevenuesAccount': None, 'EUExpensesAccount': None, 'ForeignRevenueAcc': None, 'ForeignExpensAcc': None, 'ExemptIncomeAcc': None, 'PriceDifferenceAcc': None, 'WarehouseCode': 'WW', 'InStock': 0.0, 'Committed': 0.0, 'Ordered': 0.0, 'CountedQuantity': 0.0, 'WasCounted': 'tNO', 'UserSignature': 50, 'Counted': 0.0, 'ExpenseClearingAct': None, 'PurchaseCreditAcc': None, 'EUPurchaseCreditAcc': None, 'ForeignPurchaseCreditAcc': None, 'SalesCreditAcc': None, 'SalesCreditEUAcc': None, 'ExemptedCredits': None, 'SalesCreditForeignAcc': None, 'ExpenseOffsettingAccount': None, 'WipAccount': None, 'ExchangeRateDifferencesAcct': None, 'GoodsClearingAcct': None, 'NegativeInventoryAdjustmentAccount': None, 'CostInflationOffsetAccount': None, 'GLDecreaseAcct': None, 'GLIncreaseAcct': None, 'PAReturnAcct': None, 'PurchaseAcct': None, 'PurchaseOffsetAcct': None, 'ShippedGoodsAccount': None, 'StockInflationOffsetAccount': None, 'StockInflationAdjustAccount': None, 'VATInRevenueAccount': None, 'WipVarianceAccount': None, 'CostInflationAccount': None, 'WHIncomingCenvatAccount': None, 'WHOutgoingCenvatAccount': None, 'StockInTransitAccount': None, 'WipOffsetProfitAndLossAccount': None, 'InventoryOffsetProfitAndLossAccount': None, 'DefaultBin': None, 'DefaultBinEnforced': 'tNO', 'PurchaseBalanceAccount': None, 'ItemCode': 'ACC-0000002', 'ItemCycleCounts': []}, {'MinimalStock': 0.0, 'MaximalStock': 0.0, 'MinimalOrder': 0.0, 'StandardAveragePrice': 0.0, 'Locked': 'tNO', 'InventoryAccount': None, 'CostAccount': None, 'TransferAccount': None, 'RevenuesAccount': None, 'VarienceAccount': None, 'DecreasingAccount': None, 'IncreasingAccount': None, 'ReturningAccount': None, 'ExpensesAccount': None, 'EURevenuesAccount': None, 'EUExpensesAccount': None, 'ForeignRevenueAcc': None, 'ForeignExpensAcc': None, 'ExemptIncomeAcc': None, 'PriceDifferenceAcc': None, 'WarehouseCode': 'WW-CON', 'InStock': 0.0, 'Committed': 0.0, 'Ordered': 0.0, 'CountedQuantity': 0.0, 'WasCounted': 'tNO', 'UserSignature': 50, 'Counted': 0.0, 'ExpenseClearingAct': None, 'PurchaseCreditAcc': None, 'EUPurchaseCreditAcc': None, 'ForeignPurchaseCreditAcc': None, 'SalesCreditAcc': None, 'SalesCreditEUAcc': None, 'ExemptedCredits': None, 'SalesCreditForeignAcc': None, 'ExpenseOffsettingAccount': None, 'WipAccount': None, 'ExchangeRateDifferencesAcct': None, 'GoodsClearingAcct': None, 'NegativeInventoryAdjustmentAccount': None, 'CostInflationOffsetAccount': None, 'GLDecreaseAcct': None, 'GLIncreaseAcct': None, 'PAReturnAcct': None, 'PurchaseAcct': None, 'PurchaseOffsetAcct': None, 'ShippedGoodsAccount': None, 'StockInflationOffsetAccount': None, 'StockInflationAdjustAccount': None, 'VATInRevenueAccount': None, 'WipVarianceAccount': None, 'CostInflationAccount': None, 'WHIncomingCenvatAccount': None, 'WHOutgoingCenvatAccount': None, 'StockInTransitAccount': None, 'WipOffsetProfitAndLossAccount': None, 'InventoryOffsetProfitAndLossAccount': None, 'DefaultBin': None, 'DefaultBinEnforced': 'tNO', 'PurchaseBalanceAccount': None, 'ItemCode': 'ACC-0000002', 'ItemCycleCounts': []}, {'MinimalStock': 0.0, 'MaximalStock': 0.0, 'MinimalOrder': 0.0, 'StandardAveragePrice': 0.0, 'Locked': 'tNO', 'InventoryAccount': None, 'CostAccount': None, 'TransferAccount': None, 'RevenuesAccount': None, 'VarienceAccount': None, 'DecreasingAccount': None, 'IncreasingAccount': None, 'ReturningAccount': None, 'ExpensesAccount': None, 'EURevenuesAccount': None, 'EUExpensesAccount': None, 'ForeignRevenueAcc': None, 'ForeignExpensAcc': None, 'ExemptIncomeAcc': None, 'PriceDifferenceAcc': None, 'WarehouseCode': 'WW-DAM', 'InStock': 0.0, 'Committed': 0.0, 'Ordered': 0.0, 'CountedQuantity': 0.0, 'WasCounted': 'tNO', 'UserSignature': 50, 'Counted': 0.0, 'ExpenseClearingAct': None, 'PurchaseCreditAcc': None, 'EUPurchaseCreditAcc': None, 'ForeignPurchaseCreditAcc': None, 'SalesCreditAcc': None, 'SalesCreditEUAcc': None, 'ExemptedCredits': None, 'SalesCreditForeignAcc': None, 'ExpenseOffsettingAccount': None, 'WipAccount': None, 'ExchangeRateDifferencesAcct': None, 'GoodsClearingAcct': None, 'NegativeInventoryAdjustmentAccount': None, 'CostInflationOffsetAccount': None, 'GLDecreaseAcct': None, 'GLIncreaseAcct': None, 'PAReturnAcct': None, 'PurchaseAcct': None, 'PurchaseOffsetAcct': None, 'ShippedGoodsAccount': None, 'StockInflationOffsetAccount': None, 'StockInflationAdjustAccount': None, 'VATInRevenueAccount': None, 'WipVarianceAccount': None, 'CostInflationAccount': None, 'WHIncomingCenvatAccount': None, 'WHOutgoingCenvatAccount': None, 'StockInTransitAccount': None, 'WipOffsetProfitAndLossAccount': None, 'InventoryOffsetProfitAndLossAccount': None, 'DefaultBin': None, 'DefaultBinEnforced': 'tNO', 'PurchaseBalanceAccount': None, 'ItemCode': 'ACC-0000002', 'ItemCycleCounts': []}, {'MinimalStock': 0.0, 'MaximalStock': 0.0, 'MinimalOrder': 0.0, 'StandardAveragePrice': 0.0, 'Locked': 'tNO', 'InventoryAccount': None, 'CostAccount': None, 'TransferAccount': None, 'RevenuesAccount': None, 'VarienceAccount': None, 'DecreasingAccount': None, 'IncreasingAccount': None, 'ReturningAccount': None, 'ExpensesAccount': None, 'EURevenuesAccount': None, 'EUExpensesAccount': None, 'ForeignRevenueAcc': None, 'ForeignExpensAcc': None, 'ExemptIncomeAcc': None, 'PriceDifferenceAcc': None, 'WarehouseCode': 'WW-REP', 'InStock': 0.0, 'Committed': 0.0, 'Ordered': 0.0, 'CountedQuantity': 0.0, 'WasCounted': 'tNO', 'UserSignature': 50, 'Counted': 0.0, 'ExpenseClearingAct': None, 'PurchaseCreditAcc': None, 'EUPurchaseCreditAcc': None, 'ForeignPurchaseCreditAcc': None, 'SalesCreditAcc': None, 'SalesCreditEUAcc': None, 'ExemptedCredits': None, 'SalesCreditForeignAcc': None, 'ExpenseOffsettingAccount': None, 'WipAccount': None, 'ExchangeRateDifferencesAcct': None, 'GoodsClearingAcct': None, 'NegativeInventoryAdjustmentAccount': None, 'CostInflationOffsetAccount': None, 'GLDecreaseAcct': None, 'GLIncreaseAcct': None, 'PAReturnAcct': None, 'PurchaseAcct': None, 'PurchaseOffsetAcct': None, 'ShippedGoodsAccount': None, 'StockInflationOffsetAccount': None, 'StockInflationAdjustAccount': None, 'VATInRevenueAccount': None, 'WipVarianceAccount': None, 'CostInflationAccount': None, 'WHIncomingCenvatAccount': None, 'WHOutgoingCenvatAccount': None, 'StockInTransitAccount': None, 'WipOffsetProfitAndLossAccount': None, 'InventoryOffsetProfitAndLossAccount': None, 'DefaultBin': None, 'DefaultBinEnforced': 'tNO', 'PurchaseBalanceAccount': None, 'ItemCode': 'ACC-0000002', 'ItemCycleCounts': []}, {'MinimalStock': 0.0, 'MaximalStock': 0.0, 'MinimalOrder': 0.0, 'StandardAveragePrice': 0.0, 'Locked': 'tNO', 'InventoryAccount': None, 'CostAccount': None, 'TransferAccount': None, 'RevenuesAccount': None, 'VarienceAccount': None, 'DecreasingAccount': None, 'IncreasingAccount': None, 'ReturningAccount': None, 'ExpensesAccount': None, 'EURevenuesAccount': None, 'EUExpensesAccount': None, 'ForeignRevenueAcc': None, 'ForeignExpensAcc': None, 'ExemptIncomeAcc': None, 'PriceDifferenceAcc': None, 'WarehouseCode': 'WW-SAM', 'InStock': 0.0, 'Committed': 0.0, 'Ordered': 0.0, 'CountedQuantity': 0.0, 'WasCounted': 'tNO', 'UserSignature': 50, 'Counted': 0.0, 'ExpenseClearingAct': None, 'PurchaseCreditAcc': None, 'EUPurchaseCreditAcc': None, 'ForeignPurchaseCreditAcc': None, 'SalesCreditAcc': None, 'SalesCreditEUAcc': None, 'ExemptedCredits': None, 'SalesCreditForeignAcc': None, 'ExpenseOffsettingAccount': None, 'WipAccount': None, 'ExchangeRateDifferencesAcct': None, 'GoodsClearingAcct': None, 'NegativeInventoryAdjustmentAccount': None, 'CostInflationOffsetAccount': None, 'GLDecreaseAcct': None, 'GLIncreaseAcct': None, 'PAReturnAcct': None, 'PurchaseAcct': None, 'PurchaseOffsetAcct': None, 'ShippedGoodsAccount': None, 'StockInflationOffsetAccount': None, 'StockInflationAdjustAccount': None, 'VATInRevenueAccount': None, 'WipVarianceAccount': None, 'CostInflationAccount': None, 'WHIncomingCenvatAccount': None, 'WHOutgoingCenvatAccount': None, 'StockInTransitAccount': None, 'WipOffsetProfitAndLossAccount': None, 'InventoryOffsetProfitAndLossAccount': None, 'DefaultBin': None, 'DefaultBinEnforced': 'tNO', 'PurchaseBalanceAccount': None, 'ItemCode': 'ACC-0000002', 'ItemCycleCounts': []}, {'MinimalStock': 0.0, 'MaximalStock': 0.0, 'MinimalOrder': 0.0, 'StandardAveragePrice': 0.0, 'Locked': 'tNO', 'InventoryAccount': None, 'CostAccount': None, 'TransferAccount': None, 'RevenuesAccount': None, 'VarienceAccount': None, 'DecreasingAccount': None, 'IncreasingAccount': None, 'ReturningAccount': None, 'ExpensesAccount': None, 'EURevenuesAccount': None, 'EUExpensesAccount': None, 'ForeignRevenueAcc': None, 'ForeignExpensAcc': None, 'ExemptIncomeAcc': None, 'PriceDifferenceAcc': None, 'WarehouseCode': 'WW-WIP', 'InStock': 0.0, 'Committed': 0.0, 'Ordered': 0.0, 'CountedQuantity': 0.0, 'WasCounted': 'tNO', 'UserSignature': 50, 'Counted': 0.0, 'ExpenseClearingAct': None, 'PurchaseCreditAcc': None, 'EUPurchaseCreditAcc': None, 'ForeignPurchaseCreditAcc': None, 'SalesCreditAcc': None, 'SalesCreditEUAcc': None, 'ExemptedCredits': None, 'SalesCreditForeignAcc': None, 'ExpenseOffsettingAccount': None, 'WipAccount': None, 'ExchangeRateDifferencesAcct': None, 'GoodsClearingAcct': None, 'NegativeInventoryAdjustmentAccount': None, 'CostInflationOffsetAccount': None, 'GLDecreaseAcct': None, 'GLIncreaseAcct': None, 'PAReturnAcct': None, 'PurchaseAcct': None, 'PurchaseOffsetAcct': None, 'ShippedGoodsAccount': None, 'StockInflationOffsetAccount': None, 'StockInflationAdjustAccount': None, 'VATInRevenueAccount': None, 'WipVarianceAccount': None, 'CostInflationAccount': None, 'WHIncomingCenvatAccount': None, 'WHOutgoingCenvatAccount': None, 'StockInTransitAccount': None, 'WipOffsetProfitAndLossAccount': None, 'InventoryOffsetProfitAndLossAccount': None, 'DefaultBin': None, 'DefaultBinEnforced': 'tNO', 'PurchaseBalanceAccount': None, 'ItemCode': 'ACC-0000002', 'ItemCycleCounts': []}, {'MinimalStock': 0.0, 'MaximalStock': 0.0, 'MinimalOrder': 0.0, 'StandardAveragePrice': 0.0, 'Locked': 'tNO', 'InventoryAccount': None, 'CostAccount': None, 'TransferAccount': None, 'RevenuesAccount': None, 'VarienceAccount': None, 'DecreasingAccount': None, 'IncreasingAccount': None, 'ReturningAccount': None, 'ExpensesAccount': None, 'EURevenuesAccount': None, 'EUExpensesAccount': None, 'ForeignRevenueAcc': None, 'ForeignExpensAcc': None, 'ExemptIncomeAcc': None, 'PriceDifferenceAcc': None, 'WarehouseCode': 'ZW', 'InStock': 0.0, 'Committed': 0.0, 'Ordered': 0.0, 'CountedQuantity': 0.0, 'WasCounted': 'tNO', 'UserSignature': 50, 'Counted': 0.0, 'ExpenseClearingAct': None, 'PurchaseCreditAcc': None, 'EUPurchaseCreditAcc': None, 'ForeignPurchaseCreditAcc': None, 'SalesCreditAcc': None, 'SalesCreditEUAcc': None, 'ExemptedCredits': None, 'SalesCreditForeignAcc': None, 'ExpenseOffsettingAccount': None, 'WipAccount': None, 'ExchangeRateDifferencesAcct': None, 'GoodsClearingAcct': None, 'NegativeInventoryAdjustmentAccount': None, 'CostInflationOffsetAccount': None, 'GLDecreaseAcct': None, 'GLIncreaseAcct': None, 'PAReturnAcct': None, 'PurchaseAcct': None, 'PurchaseOffsetAcct': None, 'ShippedGoodsAccount': None, 'StockInflationOffsetAccount': None, 'StockInflationAdjustAccount': None, 'VATInRevenueAccount': None, 'WipVarianceAccount': None, 'CostInflationAccount': None, 'WHIncomingCenvatAccount': None, 'WHOutgoingCenvatAccount': None, 'StockInTransitAccount': None, 'WipOffsetProfitAndLossAccount': None, 'InventoryOffsetProfitAndLossAccount': None, 'DefaultBin': None, 'DefaultBinEnforced': 'tNO', 'PurchaseBalanceAccount': None, 'ItemCode': 'ACC-0000002', 'ItemCycleCounts': []}], 'ItemPreferredVendors': [], 'ItemLocalizationInfos': [], 'ItemProjects': [], 'ItemDistributionRules': [], 'ItemAttributeGroups': [], 'ItemDepreciationParameters': [], 'ItemPeriodControls': [], 'ItemUnitOfMeasurementCollection': [{'UoMType': 'iutInventory', 'UoMEntry': 1, 'DefaultBarcode': 0, 'DefaultPackage': None, 'Length1': 0.0, 'Length1Unit': None, 'Length2': 0.0, 'Length2Unit': None, 'Width1': 0.0, 'Width1Unit': None, 'Width2': 0.0, 'Width2Unit': None, 'Height1': 0.0, 'Height1Unit': None, 'Height2': 0.0, 'Height2Unit': None, 'Volume': 0.0, 'VolumeUnit': None, 'Weight1': 0.0, 'Weight1Unit': None, 'Weight2': 0.0, 'Weight2Unit': None, 'ItemUoMPackageCollection': []}, {'UoMType': 'iutPurchasing', 'UoMEntry': 1, 'DefaultBarcode': 0, 'DefaultPackage': None, 'Length1': 0.0, 'Length1Unit': None, 'Length2': 0.0, 'Length2Unit': None, 'Width1': 0.0, 'Width1Unit': None, 'Width2': 0.0, 'Width2Unit': None, 'Height1': 0.0, 'Height1Unit': None, 'Height2': 0.0, 'Height2Unit': None, 'Volume': 0.0, 'VolumeUnit': 2, 'Weight1': 0.0, 'Weight1Unit': None, 'Weight2': 0.0, 'Weight2Unit': None, 'ItemUoMPackageCollection': []}, {'UoMType': 'iutPurchasing', 'UoMEntry': 8, 'DefaultBarcode': None, 'DefaultPackage': None, 'Length1': 0.0, 'Length1Unit': None, 'Length2': 0.0, 'Length2Unit': None, 'Width1': 0.0, 'Width1Unit': None, 'Width2': 0.0, 'Width2Unit': None, 'Height1': 0.0, 'Height1Unit': None, 'Height2': 0.0, 'Height2Unit': None, 'Volume': 0.0, 'VolumeUnit': 4, 'Weight1': 0.0, 'Weight1Unit': None, 'Weight2': 0.0, 'Weight2Unit': None, 'ItemUoMPackageCollection': []}, {'UoMType': 'iutSales', 'UoMEntry': 1, 'DefaultBarcode': 0, 'DefaultPackage': None, 'Length1': 0.0, 'Length1Unit': None, 'Length2': 0.0, 'Length2Unit': None, 'Width1': 0.0, 'Width1Unit': None, 'Width2': 0.0, 'Width2Unit': None, 'Height1': 0.0, 'Height1Unit': None, 'Height2': 0.0, 'Height2Unit': None, 'Volume': 0.0, 'VolumeUnit': 2, 'Weight1': 0.0, 'Weight1Unit': None, 'Weight2': 0.0, 'Weight2Unit': None, 'ItemUoMPackageCollection': []}, {'UoMType': 'iutSales', 'UoMEntry': 8, 'DefaultBarcode': None, 'DefaultPackage': None, 'Length1': 0.0, 'Length1Unit': None, 'Length2': 0.0, 'Length2Unit': None, 'Width1': 0.0, 'Width1Unit': None, 'Width2': 0.0, 'Width2Unit': None, 'Height1': 0.0, 'Height1Unit': None, 'Height2': 0.0, 'Height2Unit': None, 'Volume': 0.0, 'VolumeUnit': 4, 'Weight1': 0.0, 'Weight1Unit': None, 'Weight2': 0.0, 'Weight2Unit': None, 'ItemUoMPackageCollection': []}], 'ItemBarCodeCollection': [], 'ItemIntrastatExtension': {'ItemCode': 'ACC-0000002', 'CommodityCode': None, 'SupplementaryUnit': None, 'FactorOfSupplementaryUnit': 0.0, 'ImportRegionState': 0, 'ExportRegionState': 0, 'ImportNatureOfTransaction': None, 'ExportNatureOfTransaction': None, 'ImportStatisticalProcedure': None, 'ExportStatisticalProcedure': None, 'CountryOfOrigin': None, 'ServiceCode': None, 'Type': 'dDocument_Items', 'ServiceSupplyMethod': 'ssmImmediate', 'ServicePaymentMethod': 'spmOther', 'ImportRegionCountry': 'GB', 'ExportRegionCountry': 'GB', 'UseWeightInCalculation': 'tYES', 'IntrastatRelevant': 'tNO', 'StatisticalCode': None}}, {'ItemCode': 'ACC-0000003', 'ItemName': 'Square With 1 Slits 10*10 CM', 'ForeignName': None, 'ItemsGroupCode': 110, 'CustomsGroupCode': -1, 'SalesVATGroup': 'X0', 'BarCode': None, 'VatLiable': 'tYES', 'PurchaseItem': 'tYES', 'SalesItem': 'tNO', 'InventoryItem': 'tYES', 'IncomeAccount': None, 'ExemptIncomeAccount': None, 'ExpanseAccount': None, 'Mainsupplier': None, 'SupplierCatalogNo': None, 'DesiredInventory': 0.0, 'MinInventory': 0.0, 'Picture': None, 'User_Text': None, 'SerialNum': None, 'CommissionPercent': 0.0, 'CommissionSum': 0.0, 'CommissionGroup': 0, 'TreeType': 'iNotATree', 'AssetItem': 'tNO', 'DataExportCode': None, 'Manufacturer': -1, 'QuantityOnStock': 17.0, 'QuantityOrderedFromVendors': 0.0, 'QuantityOrderedByCustomers': 0.0, 'ManageSerialNumbers': 'tNO', 'ManageBatchNumbers': 'tNO', 'Valid': 'tYES', 'ValidFrom': None, 'ValidTo': None, 'ValidRemarks': None, 'Frozen': 'tNO', 'FrozenFrom': None, 'FrozenTo': None, 'FrozenRemarks': None, 'SalesUnit': None, 'SalesItemsPerUnit': 1.0, 'SalesPackagingUnit': None, 'SalesQtyPerPackUnit': 1.0, 'SalesUnitLength': None, 'SalesLengthUnit': None, 'SalesUnitWidth': None, 'SalesWidthUnit': None, 'SalesUnitHeight': None, 'SalesHeightUnit': None, 'SalesUnitVolume': 0.0, 'SalesVolumeUnit': 4, 'SalesUnitWeight': None, 'SalesWeightUnit': None, 'PurchaseUnit': None, 'PurchaseItemsPerUnit': 1.0, 'PurchasePackagingUnit': None, 'PurchaseQtyPerPackUnit': 1.0, 'PurchaseUnitLength': None, 'PurchaseLengthUnit': None, 'PurchaseUnitWidth': None, 'PurchaseWidthUnit': None, 'PurchaseUnitHeight': None, 'PurchaseHeightUnit': None, 'PurchaseUnitVolume': 0.0, 'PurchaseVolumeUnit': 4, 'PurchaseUnitWeight': None, 'PurchaseWeightUnit': None, 'PurchaseVATGroup': 'X1', 'SalesFactor1': 1.0, 'SalesFactor2': 1.0, 'SalesFactor3': 1.0, 'SalesFactor4': 1.0, 'PurchaseFactor1': 1.0, 'PurchaseFactor2': 1.0, 'PurchaseFactor3': 1.0, 'PurchaseFactor4': 1.0, 'MovingAveragePrice': 0.0, 'ForeignRevenuesAccount': None, 'ECRevenuesAccount': None, 'ForeignExpensesAccount': None, 'ECExpensesAccount': None, 'AvgStdPrice': 0.0, 'DefaultWarehouse': None, 'ShipType': None, 'GLMethod': 'glm_ItemClass', 'TaxType': 'tt_Yes', 'MaxInventory': 0.0, 'ManageStockByWarehouse': 'tNO', 'PurchaseHeightUnit1': None, 'PurchaseUnitHeight1': None, 'PurchaseLengthUnit1': None, 'PurchaseUnitLength1': None, 'PurchaseWeightUnit1': None, 'PurchaseUnitWeight1': None, 'PurchaseWidthUnit1': None, 'PurchaseUnitWidth1': None, 'SalesHeightUnit1': None, 'SalesUnitHeight1': None, 'SalesLengthUnit1': None, 'SalesUnitLength1': None, 'SalesWeightUnit1': None, 'SalesUnitWeight1': None, 'SalesWidthUnit1': None, 'SalesUnitWidth1': None, 'ForceSelectionOfSerialNumber': 'tYES', 'ManageSerialNumbersOnReleaseOnly': 'tNO', 'WTLiable': 'tNO', 'CostAccountingMethod': 'bis_MovingAverage', 'SWW': None, 'WarrantyTemplate': '', 'IndirectTax': 'tNO', 'ArTaxCode': None, 'ApTaxCode': None, 'BaseUnitName': None, 'ItemCountryOrg': None, 'IssueMethod': 'im_Backflush', 'SRIAndBatchManageMethod': 'bomm_OnEveryTransaction', 'IsPhantom': 'tNO', 'InventoryUOM': 'Piece', 'PlanningSystem': 'bop_None', 'ProcurementMethod': 'bom_Buy', 'ComponentWarehouse': 'bomcw_BOM', 'OrderIntervals': None, 'OrderMultiple': 0.0, 'LeadTime': None, 'MinOrderQuantity': 0.0, 'ItemType': 'itItems', 'ItemClass': 'itcMaterial', 'OutgoingServiceCode': -1, 'IncomingServiceCode': -1, 'ServiceGroup': -1, 'NCMCode': -1, 'MaterialType': 'mt_FinishedGoods', 'MaterialGroup': -1, 'ProductSource': '', 'Properties1': 'tNO', 'Properties2': 'tNO', 'Properties3': 'tNO', 'Properties4': 'tNO', 'Properties5': 'tNO', 'Properties6': 'tNO', 'Properties7': 'tNO', 'Properties8': 'tNO', 'Properties9': 'tNO', 'Properties10': 'tNO', 'Properties11': 'tNO', 'Properties12': 'tNO', 'Properties13': 'tNO', 'Properties14': 'tNO', 'Properties15': 'tNO', 'Properties16': 'tNO', 'Properties17': 'tNO', 'Properties18': 'tNO', 'Properties19': 'tNO', 'Properties20': 'tNO', 'Properties21': 'tNO', 'Properties22': 'tNO', 'Properties23': 'tNO', 'Properties24': 'tNO', 'Properties25': 'tNO', 'Properties26': 'tNO', 'Properties27': 'tNO', 'Properties28': 'tNO', 'Properties29': 'tNO', 'Properties30': 'tNO', 'Properties31': 'tNO', 'Properties32': 'tNO', 'Properties33': 'tNO', 'Properties34': 'tNO', 'Properties35': 'tNO', 'Properties36': 'tNO', 'Properties37': 'tNO', 'Properties38': 'tNO', 'Properties39': 'tNO', 'Properties40': 'tNO', 'Properties41': 'tNO', 'Properties42': 'tNO', 'Properties43': 'tNO', 'Properties44': 'tNO', 'Properties45': 'tNO', 'Properties46': 'tNO', 'Properties47': 'tNO', 'Properties48': 'tNO', 'Properties49': 'tNO', 'Properties50': 'tNO', 'Properties51': 'tNO', 'Properties52': 'tNO', 'Properties53': 'tNO', 'Properties54': 'tNO', 'Properties55': 'tNO', 'Properties56': 'tNO', 'Properties57': 'tNO', 'Properties58': 'tNO', 'Properties59': 'tNO', 'Properties60': 'tNO', 'Properties61': 'tNO', 'Properties62': 'tNO', 'Properties63': 'tNO', 'Properties64': 'tNO', 'AutoCreateSerialNumbersOnRelease': 'tNO', 'DNFEntry': -1, 'GTSItemSpec': None, 'GTSItemTaxCategory': None, 'FuelID': None, 'BeverageTableCode': '', 'BeverageGroupCode': '', 'BeverageCommercialBrandCode': None, 'Series': 119, 'ToleranceDays': None, 'TypeOfAdvancedRules': 'toarGeneral', 'IssuePrimarilyBy': 'ipbBinLocations', 'NoDiscounts': 'tNO', 'AssetClass': '', 'AssetGroup': '', 'InventoryNumber': '', 'Technician': None, 'Employee': None, 'Location': None, 'AssetStatus': 'New', 'CapitalizationDate': None, 'StatisticalAsset': 'tNO', 'Cession': 'tNO', 'DeactivateAfterUsefulLife': 'tNO', 'ManageByQuantity': 'tNO', 'UoMGroupEntry': 1, 'InventoryUoMEntry': 1, 'DefaultSalesUoMEntry': None, 'DefaultPurchasingUoMEntry': None, 'DepreciationGroup': None, 'AssetSerialNumber': '', 'InventoryWeight': None, 'InventoryWeightUnit': None, 'InventoryWeight1': None, 'InventoryWeightUnit1': None, 'DefaultCountingUnit': 'Piece', 'CountingItemsPerUnit': 1.0, 'DefaultCountingUoMEntry': 1, 'Excisable': 'tNO', 'ChapterID': -1, 'ScsCode': None, 'SpProdType': None, 'ProdStdCost': 0.0, 'InCostRollup': 'tYES', 'VirtualAssetItem': 'tNO', 'EnforceAssetSerialNumbers': 'tNO', 'AttachmentEntry': None, 'LinkedResource': None, 'UpdateDate': '2025-01-26', 'UpdateTime': '09:34:55', 'GSTRelevnt': 'tNO', 'SACEntry': -1, 'GSTTaxCategory': 'gtc_Regular', 'ServiceCategoryEntry': -1, 'CapitalGoodsOnHoldPercent': 0.0, 'CapitalGoodsOnHoldLimit': 0.0, 'AssessableValue': 0.0, 'AssVal4WTR': 0.0, 'SOIExcisable': 'se_NotExcisable', 'TNVED': None, 'ImportedItem': 'tNO', 'PricingUnit': 1, 'CreateDate': '2025-01-26', 'CreateTime': '09:34:55', 'U_MfgH': None, 'U_Collection': None, 'U_OldCode': None, 'U_ItemsCat': None, 'U_NumberofSet': None, 'U_NileCode': None, 'U_TransferProductionLinkExclude': None, 'U_SBO_CodeType': 'GS1', 'U_SBO_EGSCode': None, 'U_ShopifyColor': None, 'U_SalesChannel': None, 'U_ShopifyItemIDLocal': None, 'U_ShopifyItemIDInternational': None, 'U_ParentCommercialName': None, 'ItemPrices': [{'PriceList': 1, 'Price': 0.0, 'Currency': None, 'AdditionalPrice1': 0.0, 'AdditionalCurrency1': None, 'AdditionalPrice2': 0.0, 'AdditionalCurrency2': None, 'BasePriceList': 1, 'Factor': 1.0, 'UoMPrices': []}, {'PriceList': 2, 'Price': 0.0, 'Currency': None, 'AdditionalPrice1': 0.0, 'AdditionalCurrency1': None, 'AdditionalPrice2': 0.0, 'AdditionalCurrency2': None, 'BasePriceList': 1, 'Factor': 0.4, 'UoMPrices': []}, {'PriceList': 3, 'Price': 0.0, 'Currency': None, 'AdditionalPrice1': 0.0, 'AdditionalCurrency1': None, 'AdditionalPrice2': 0.0, 'AdditionalCurrency2': None, 'BasePriceList': 3, 'Factor': 1.0, 'UoMPrices': []}, {'PriceList': 4, 'Price': 0.0, 'Currency': None, 'AdditionalPrice1': 0.0, 'AdditionalCurrency1': None, 'AdditionalPrice2': 0.0, 'AdditionalCurrency2': None, 'BasePriceList': 4, 'Factor': 1.0, 'UoMPrices': []}, {'PriceList': 5, 'Price': 0.0, 'Currency': None, 'AdditionalPrice1': 0.0, 'AdditionalCurrency1': None, 'AdditionalPrice2': 0.0, 'AdditionalCurrency2': None, 'BasePriceList': 5, 'Factor': 1.0, 'UoMPrices': []}, {'PriceList': 6, 'Price': 0.0, 'Currency': None, 'AdditionalPrice1': 0.0, 'AdditionalCurrency1': None, 'AdditionalPrice2': 0.0, 'AdditionalCurrency2': None, 'BasePriceList': 6, 'Factor': 1.0, 'UoMPrices': []}, {'PriceList': 7, 'Price': 0.0, 'Currency': None, 'AdditionalPrice1': 0.0, 'AdditionalCurrency1': None, 'AdditionalPrice2': 0.0, 'AdditionalCurrency2': None, 'BasePriceList': 7, 'Factor': 1.0, 'UoMPrices': []}, {'PriceList': 8, 'Price': 0.0, 'Currency': None, 'AdditionalPrice1': 0.0, 'AdditionalCurrency1': None, 'AdditionalPrice2': 0.0, 'AdditionalCurrency2': None, 'BasePriceList': 8, 'Factor': 1.0, 'UoMPrices': []}, {'PriceList': 9, 'Price': 0.0, 'Currency': None, 'AdditionalPrice1': 0.0, 'AdditionalCurrency1': None, 'AdditionalPrice2': 0.0, 'AdditionalCurrency2': None, 'BasePriceList': 9, 'Factor': 1.0, 'UoMPrices': []}, {'PriceList': 10, 'Price': 0.0, 'Currency': None, 'AdditionalPrice1': 0.0, 'AdditionalCurrency1': None, 'AdditionalPrice2': 0.0, 'AdditionalCurrency2': None, 'BasePriceList': 10, 'Factor': 1.0, 'UoMPrices': []}], 'ItemWarehouseInfoCollection': [{'MinimalStock': 0.0, 'MaximalStock': 0.0, 'MinimalOrder': 0.0, 'StandardAveragePrice': 250.0, 'Locked': 'tNO', 'InventoryAccount': None, 'CostAccount': None, 'TransferAccount': None, 'RevenuesAccount': None, 'VarienceAccount': None, 'DecreasingAccount': None, 'IncreasingAccount': None, 'ReturningAccount': None, 'ExpensesAccount': None, 'EURevenuesAccount': None, 'EUExpensesAccount': None, 'ForeignRevenueAcc': None, 'ForeignExpensAcc': None, 'ExemptIncomeAcc': None, 'PriceDifferenceAcc': None, 'WarehouseCode': '5A', 'InStock': 3.0, 'Committed': 0.0, 'Ordered': 0.0, 'CountedQuantity': 0.0, 'WasCounted': 'tNO', 'UserSignature': 50, 'Counted': 0.0, 'ExpenseClearingAct': None, 'PurchaseCreditAcc': None, 'EUPurchaseCreditAcc': None, 'ForeignPurchaseCreditAcc': None, 'SalesCreditAcc': None, 'SalesCreditEUAcc': None, 'ExemptedCredits': None, 'SalesCreditForeignAcc': None, 'ExpenseOffsettingAccount': None, 'WipAccount': None, 'ExchangeRateDifferencesAcct': None, 'GoodsClearingAcct': None, 'NegativeInventoryAdjustmentAccount': None, 'CostInflationOffsetAccount': None, 'GLDecreaseAcct': None, 'GLIncreaseAcct': None, 'PAReturnAcct': None, 'PurchaseAcct': None, 'PurchaseOffsetAcct': None, 'ShippedGoodsAccount': None, 'StockInflationOffsetAccount': None, 'StockInflationAdjustAccount': None, 'VATInRevenueAccount': None, 'WipVarianceAccount': None, 'CostInflationAccount': None, 'WHIncomingCenvatAccount': None, 'WHOutgoingCenvatAccount': None, 'StockInTransitAccount': None, 'WipOffsetProfitAndLossAccount': None, 'InventoryOffsetProfitAndLossAccount': None, 'DefaultBin': None, 'DefaultBinEnforced': 'tNO', 'PurchaseBalanceAccount': None, 'ItemCode': 'ACC-0000003', 'ItemCycleCounts': []}, {'MinimalStock': 0.0, 'MaximalStock': 0.0, 'MinimalOrder': 0.0, 'StandardAveragePrice': 250.0, 'Locked': 'tNO', 'InventoryAccount': None, 'CostAccount': None, 'TransferAccount': None, 'RevenuesAccount': None, 'VarienceAccount': None, 'DecreasingAccount': None, 'IncreasingAccount': None, 'ReturningAccount': None, 'ExpensesAccount': None, 'EURevenuesAccount': None, 'EUExpensesAccount': None, 'ForeignRevenueAcc': None, 'ForeignExpensAcc': None, 'ExemptIncomeAcc': None, 'PriceDifferenceAcc': None, 'WarehouseCode': 'Arkan', 'InStock': 14.0, 'Committed': 0.0, 'Ordered': 0.0, 'CountedQuantity': 0.0, 'WasCounted': 'tNO', 'UserSignature': 50, 'Counted': 0.0, 'ExpenseClearingAct': None, 'PurchaseCreditAcc': None, 'EUPurchaseCreditAcc': None, 'ForeignPurchaseCreditAcc': None, 'SalesCreditAcc': None, 'SalesCreditEUAcc': None, 'ExemptedCredits': None, 'SalesCreditForeignAcc': None, 'ExpenseOffsettingAccount': None, 'WipAccount': None, 'ExchangeRateDifferencesAcct': None, 'GoodsClearingAcct': None, 'NegativeInventoryAdjustmentAccount': None, 'CostInflationOffsetAccount': None, 'GLDecreaseAcct': None, 'GLIncreaseAcct': None, 'PAReturnAcct': None, 'PurchaseAcct': None, 'PurchaseOffsetAcct': None, 'ShippedGoodsAccount': None, 'StockInflationOffsetAccount': None, 'StockInflationAdjustAccount': None, 'VATInRevenueAccount': None, 'WipVarianceAccount': None, 'CostInflationAccount': None, 'WHIncomingCenvatAccount': None, 'WHOutgoingCenvatAccount': None, 'StockInTransitAccount': None, 'WipOffsetProfitAndLossAccount': None, 'InventoryOffsetProfitAndLossAccount': None, 'DefaultBin': None, 'DefaultBinEnforced': 'tNO', 'PurchaseBalanceAccount': None, 'ItemCode': 'ACC-0000003', 'ItemCycleCounts': []}, {'MinimalStock': 0.0, 'MaximalStock': 0.0, 'MinimalOrder': 0.0, 'StandardAveragePrice': 0.0, 'Locked': 'tNO', 'InventoryAccount': None, 'CostAccount': None, 'TransferAccount': None, 'RevenuesAccount': None, 'VarienceAccount': None, 'DecreasingAccount': None, 'IncreasingAccount': None, 'ReturningAccount': None, 'ExpensesAccount': None, 'EURevenuesAccount': None, 'EUExpensesAccount': None, 'ForeignRevenueAcc': None, 'ForeignExpensAcc': None, 'ExemptIncomeAcc': None, 'PriceDifferenceAcc': None, 'WarehouseCode': 'DIP', 'InStock': 0.0, 'Committed': 0.0, 'Ordered': 0.0, 'CountedQuantity': 0.0, 'WasCounted': 'tNO', 'UserSignature': 50, 'Counted': 0.0, 'ExpenseClearingAct': None, 'PurchaseCreditAcc': None, 'EUPurchaseCreditAcc': None, 'ForeignPurchaseCreditAcc': None, 'SalesCreditAcc': None, 'SalesCreditEUAcc': None, 'ExemptedCredits': None, 'SalesCreditForeignAcc': None, 'ExpenseOffsettingAccount': None, 'WipAccount': None, 'ExchangeRateDifferencesAcct': None, 'GoodsClearingAcct': None, 'NegativeInventoryAdjustmentAccount': None, 'CostInflationOffsetAccount': None, 'GLDecreaseAcct': None, 'GLIncreaseAcct': None, 'PAReturnAcct': None, 'PurchaseAcct': None, 'PurchaseOffsetAcct': None, 'ShippedGoodsAccount': None, 'StockInflationOffsetAccount': None, 'StockInflationAdjustAccount': None, 'VATInRevenueAccount': None, 'WipVarianceAccount': None, 'CostInflationAccount': None, 'WHIncomingCenvatAccount': None, 'WHOutgoingCenvatAccount': None, 'StockInTransitAccount': None, 'WipOffsetProfitAndLossAccount': None, 'InventoryOffsetProfitAndLossAccount': None, 'DefaultBin': None, 'DefaultBinEnforced': 'tNO', 'PurchaseBalanceAccount': None, 'ItemCode': 'ACC-0000003', 'ItemCycleCounts': []}, {'MinimalStock': 0.0, 'MaximalStock': 0.0, 'MinimalOrder': 0.0, 'StandardAveragePrice': 250.0, 'Locked': 'tNO', 'InventoryAccount': None, 'CostAccount': None, 'TransferAccount': None, 'RevenuesAccount': None, 'VarienceAccount': None, 'DecreasingAccount': None, 'IncreasingAccount': None, 'ReturningAccount': None, 'ExpensesAccount': None, 'EURevenuesAccount': None, 'EUExpensesAccount': None, 'ForeignRevenueAcc': None, 'ForeignExpensAcc': None, 'ExemptIncomeAcc': None, 'PriceDifferenceAcc': None, 'WarehouseCode': 'INC', 'InStock': 0.0, 'Committed': 0.0, 'Ordered': 0.0, 'CountedQuantity': 0.0, 'WasCounted': 'tNO', 'UserSignature': 50, 'Counted': 0.0, 'ExpenseClearingAct': None, 'PurchaseCreditAcc': None, 'EUPurchaseCreditAcc': None, 'ForeignPurchaseCreditAcc': None, 'SalesCreditAcc': None, 'SalesCreditEUAcc': None, 'ExemptedCredits': None, 'SalesCreditForeignAcc': None, 'ExpenseOffsettingAccount': None, 'WipAccount': None, 'ExchangeRateDifferencesAcct': None, 'GoodsClearingAcct': None, 'NegativeInventoryAdjustmentAccount': None, 'CostInflationOffsetAccount': None, 'GLDecreaseAcct': None, 'GLIncreaseAcct': None, 'PAReturnAcct': None, 'PurchaseAcct': None, 'PurchaseOffsetAcct': None, 'ShippedGoodsAccount': None, 'StockInflationOffsetAccount': None, 'StockInflationAdjustAccount': None, 'VATInRevenueAccount': None, 'WipVarianceAccount': None, 'CostInflationAccount': None, 'WHIncomingCenvatAccount': None, 'WHOutgoingCenvatAccount': None, 'StockInTransitAccount': None, 'WipOffsetProfitAndLossAccount': None, 'InventoryOffsetProfitAndLossAccount': None, 'DefaultBin': None, 'DefaultBinEnforced': 'tNO', 'PurchaseBalanceAccount': None, 'ItemCode': 'ACC-0000003', 'ItemCycleCounts': []}, {'MinimalStock': 0.0, 'MaximalStock': 0.0, 'MinimalOrder': 0.0, 'StandardAveragePrice': 0.0, 'Locked': 'tNO', 'InventoryAccount': None, 'CostAccount': None, 'TransferAccount': None, 'RevenuesAccount': None, 'VarienceAccount': None, 'DecreasingAccount': None, 'IncreasingAccount': None, 'ReturningAccount': None, 'ExpensesAccount': None, 'EURevenuesAccount': None, 'EUExpensesAccount': None, 'ForeignRevenueAcc': None, 'ForeignExpensAcc': None, 'ExemptIncomeAcc': None, 'PriceDifferenceAcc': None, 'WarehouseCode': 'ONL', 'InStock': 0.0, 'Committed': 0.0, 'Ordered': 0.0, 'CountedQuantity': 0.0, 'WasCounted': 'tNO', 'UserSignature': 50, 'Counted': 0.0, 'ExpenseClearingAct': None, 'PurchaseCreditAcc': None, 'EUPurchaseCreditAcc': None, 'ForeignPurchaseCreditAcc': None, 'SalesCreditAcc': None, 'SalesCreditEUAcc': None, 'ExemptedCredits': None, 'SalesCreditForeignAcc': None, 'ExpenseOffsettingAccount': None, 'WipAccount': None, 'ExchangeRateDifferencesAcct': None, 'GoodsClearingAcct': None, 'NegativeInventoryAdjustmentAccount': None, 'CostInflationOffsetAccount': None, 'GLDecreaseAcct': None, 'GLIncreaseAcct': None, 'PAReturnAcct': None, 'PurchaseAcct': None, 'PurchaseOffsetAcct': None, 'ShippedGoodsAccount': None, 'StockInflationOffsetAccount': None, 'StockInflationAdjustAccount': None, 'VATInRevenueAccount': None, 'WipVarianceAccount': None, 'CostInflationAccount': None, 'WHIncomingCenvatAccount': None, 'WHOutgoingCenvatAccount': None, 'StockInTransitAccount': None, 'WipOffsetProfitAndLossAccount': None, 'InventoryOffsetProfitAndLossAccount': None, 'DefaultBin': None, 'DefaultBinEnforced': 'tNO', 'PurchaseBalanceAccount': None, 'ItemCode': 'ACC-0000003', 'ItemCycleCounts': []}, {'MinimalStock': 0.0, 'MaximalStock': 0.0, 'MinimalOrder': 0.0, 'StandardAveragePrice': 0.0, 'Locked': 'tNO', 'InventoryAccount': None, 'CostAccount': None, 'TransferAccount': None, 'RevenuesAccount': None, 'VarienceAccount': None, 'DecreasingAccount': None, 'IncreasingAccount': None, 'ReturningAccount': None, 'ExpensesAccount': None, 'EURevenuesAccount': None, 'EUExpensesAccount': None, 'ForeignRevenueAcc': None, 'ForeignExpensAcc': None, 'ExemptIncomeAcc': None, 'PriceDifferenceAcc': None, 'WarehouseCode': 'PHO', 'InStock': 0.0, 'Committed': 0.0, 'Ordered': 0.0, 'CountedQuantity': 0.0, 'WasCounted': 'tNO', 'UserSignature': 50, 'Counted': 0.0, 'ExpenseClearingAct': None, 'PurchaseCreditAcc': None, 'EUPurchaseCreditAcc': None, 'ForeignPurchaseCreditAcc': None, 'SalesCreditAcc': None, 'SalesCreditEUAcc': None, 'ExemptedCredits': None, 'SalesCreditForeignAcc': None, 'ExpenseOffsettingAccount': None, 'WipAccount': None, 'ExchangeRateDifferencesAcct': None, 'GoodsClearingAcct': None, 'NegativeInventoryAdjustmentAccount': None, 'CostInflationOffsetAccount': None, 'GLDecreaseAcct': None, 'GLIncreaseAcct': None, 'PAReturnAcct': None, 'PurchaseAcct': None, 'PurchaseOffsetAcct': None, 'ShippedGoodsAccount': None, 'StockInflationOffsetAccount': None, 'StockInflationAdjustAccount': None, 'VATInRevenueAccount': None, 'WipVarianceAccount': None, 'CostInflationAccount': None, 'WHIncomingCenvatAccount': None, 'WHOutgoingCenvatAccount': None, 'StockInTransitAccount': None, 'WipOffsetProfitAndLossAccount': None, 'InventoryOffsetProfitAndLossAccount': None, 'DefaultBin': None, 'DefaultBinEnforced': 'tNO', 'PurchaseBalanceAccount': None, 'ItemCode': 'ACC-0000003', 'ItemCycleCounts': []}, {'MinimalStock': 0.0, 'MaximalStock': 0.0, 'MinimalOrder': 0.0, 'StandardAveragePrice': 0.0, 'Locked': 'tNO', 'InventoryAccount': None, 'CostAccount': None, 'TransferAccount': None, 'RevenuesAccount': None, 'VarienceAccount': None, 'DecreasingAccount': None, 'IncreasingAccount': None, 'ReturningAccount': None, 'ExpensesAccount': None, 'EURevenuesAccount': None, 'EUExpensesAccount': None, 'ForeignRevenueAcc': None, 'ForeignExpensAcc': None, 'ExemptIncomeAcc': None, 'PriceDifferenceAcc': None, 'WarehouseCode': 'PHO-EX', 'InStock': 0.0, 'Committed': 0.0, 'Ordered': 0.0, 'CountedQuantity': 0.0, 'WasCounted': 'tNO', 'UserSignature': 1, 'Counted': 0.0, 'ExpenseClearingAct': None, 'PurchaseCreditAcc': None, 'EUPurchaseCreditAcc': None, 'ForeignPurchaseCreditAcc': None, 'SalesCreditAcc': None, 'SalesCreditEUAcc': None, 'ExemptedCredits': None, 'SalesCreditForeignAcc': None, 'ExpenseOffsettingAccount': None, 'WipAccount': None, 'ExchangeRateDifferencesAcct': None, 'GoodsClearingAcct': None, 'NegativeInventoryAdjustmentAccount': None, 'CostInflationOffsetAccount': None, 'GLDecreaseAcct': None, 'GLIncreaseAcct': None, 'PAReturnAcct': None, 'PurchaseAcct': None, 'PurchaseOffsetAcct': None, 'ShippedGoodsAccount': None, 'StockInflationOffsetAccount': None, 'StockInflationAdjustAccount': None, 'VATInRevenueAccount': None, 'WipVarianceAccount': None, 'CostInflationAccount': None, 'WHIncomingCenvatAccount': None, 'WHOutgoingCenvatAccount': None, 'StockInTransitAccount': None, 'WipOffsetProfitAndLossAccount': None, 'InventoryOffsetProfitAndLossAccount': None, 'DefaultBin': None, 'DefaultBinEnforced': 'tNO', 'PurchaseBalanceAccount': None, 'ItemCode': 'ACC-0000003', 'ItemCycleCounts': []}, {'MinimalStock': 0.0, 'MaximalStock': 0.0, 'MinimalOrder': 0.0, 'StandardAveragePrice': 0.0, 'Locked': 'tNO', 'InventoryAccount': None, 'CostAccount': None, 'TransferAccount': None, 'RevenuesAccount': None, 'VarienceAccount': None, 'DecreasingAccount': None, 'IncreasingAccount': None, 'ReturningAccount': None, 'ExpensesAccount': None, 'EURevenuesAccount': None, 'EUExpensesAccount': None, 'ForeignRevenueAcc': None, 'ForeignExpensAcc': None, 'ExemptIncomeAcc': None, 'PriceDifferenceAcc': None, 'WarehouseCode': 'PHO-IN', 'InStock': 0.0, 'Committed': 0.0, 'Ordered': 0.0, 'CountedQuantity': 0.0, 'WasCounted': 'tNO', 'UserSignature': 1, 'Counted': 0.0, 'ExpenseClearingAct': None, 'PurchaseCreditAcc': None, 'EUPurchaseCreditAcc': None, 'ForeignPurchaseCreditAcc': None, 'SalesCreditAcc': None, 'SalesCreditEUAcc': None, 'ExemptedCredits': None, 'SalesCreditForeignAcc': None, 'ExpenseOffsettingAccount': None, 'WipAccount': None, 'ExchangeRateDifferencesAcct': None, 'GoodsClearingAcct': None, 'NegativeInventoryAdjustmentAccount': None, 'CostInflationOffsetAccount': None, 'GLDecreaseAcct': None, 'GLIncreaseAcct': None, 'PAReturnAcct': None, 'PurchaseAcct': None, 'PurchaseOffsetAcct': None, 'ShippedGoodsAccount': None, 'StockInflationOffsetAccount': None, 'StockInflationAdjustAccount': None, 'VATInRevenueAccount': None, 'WipVarianceAccount': None, 'CostInflationAccount': None, 'WHIncomingCenvatAccount': None, 'WHOutgoingCenvatAccount': None, 'StockInTransitAccount': None, 'WipOffsetProfitAndLossAccount': None, 'InventoryOffsetProfitAndLossAccount': None, 'DefaultBin': None, 'DefaultBinEnforced': 'tNO', 'PurchaseBalanceAccount': None, 'ItemCode': 'ACC-0000003', 'ItemCycleCounts': []}, {'MinimalStock': 0.0, 'MaximalStock': 0.0, 'MinimalOrder': 0.0, 'StandardAveragePrice': 0.0, 'Locked': 'tNO', 'InventoryAccount': None, 'CostAccount': None, 'TransferAccount': None, 'RevenuesAccount': None, 'VarienceAccount': None, 'DecreasingAccount': None, 'IncreasingAccount': None, 'ReturningAccount': None, 'ExpensesAccount': None, 'EURevenuesAccount': None, 'EUExpensesAccount': None, 'ForeignRevenueAcc': None, 'ForeignExpensAcc': None, 'ExemptIncomeAcc': None, 'PriceDifferenceAcc': None, 'WarehouseCode': 'RTW', 'InStock': 0.0, 'Committed': 0.0, 'Ordered': 0.0, 'CountedQuantity': 0.0, 'WasCounted': 'tNO', 'UserSignature': 50, 'Counted': 0.0, 'ExpenseClearingAct': None, 'PurchaseCreditAcc': None, 'EUPurchaseCreditAcc': None, 'ForeignPurchaseCreditAcc': None, 'SalesCreditAcc': None, 'SalesCreditEUAcc': None, 'ExemptedCredits': None, 'SalesCreditForeignAcc': None, 'ExpenseOffsettingAccount': None, 'WipAccount': None, 'ExchangeRateDifferencesAcct': None, 'GoodsClearingAcct': None, 'NegativeInventoryAdjustmentAccount': None, 'CostInflationOffsetAccount': None, 'GLDecreaseAcct': None, 'GLIncreaseAcct': None, 'PAReturnAcct': None, 'PurchaseAcct': None, 'PurchaseOffsetAcct': None, 'ShippedGoodsAccount': None, 'StockInflationOffsetAccount': None, 'StockInflationAdjustAccount': None, 'VATInRevenueAccount': None, 'WipVarianceAccount': None, 'CostInflationAccount': None, 'WHIncomingCenvatAccount': None, 'WHOutgoingCenvatAccount': None, 'StockInTransitAccount': None, 'WipOffsetProfitAndLossAccount': None, 'InventoryOffsetProfitAndLossAccount': None, 'DefaultBin': None, 'DefaultBinEnforced': 'tNO', 'PurchaseBalanceAccount': None, 'ItemCode': 'ACC-0000003', 'ItemCycleCounts': []}, {'MinimalStock': 0.0, 'MaximalStock': 0.0, 'MinimalOrder': 0.0, 'StandardAveragePrice': 0.0, 'Locked': 'tNO', 'InventoryAccount': None, 'CostAccount': None, 'TransferAccount': None, 'RevenuesAccount': None, 'VarienceAccount': None, 'DecreasingAccount': None, 'IncreasingAccount': None, 'ReturningAccount': None, 'ExpensesAccount': None, 'EURevenuesAccount': None, 'EUExpensesAccount': None, 'ForeignRevenueAcc': None, 'ForeignExpensAcc': None, 'ExemptIncomeAcc': None, 'PriceDifferenceAcc': None, 'WarehouseCode': 'RTWH', 'InStock': 0.0, 'Committed': 0.0, 'Ordered': 0.0, 'CountedQuantity': 0.0, 'WasCounted': 'tNO', 'UserSignature': 1, 'Counted': 0.0, 'ExpenseClearingAct': None, 'PurchaseCreditAcc': None, 'EUPurchaseCreditAcc': None, 'ForeignPurchaseCreditAcc': None, 'SalesCreditAcc': None, 'SalesCreditEUAcc': None, 'ExemptedCredits': None, 'SalesCreditForeignAcc': None, 'ExpenseOffsettingAccount': None, 'WipAccount': None, 'ExchangeRateDifferencesAcct': None, 'GoodsClearingAcct': None, 'NegativeInventoryAdjustmentAccount': None, 'CostInflationOffsetAccount': None, 'GLDecreaseAcct': None, 'GLIncreaseAcct': None, 'PAReturnAcct': None, 'PurchaseAcct': None, 'PurchaseOffsetAcct': None, 'ShippedGoodsAccount': None, 'StockInflationOffsetAccount': None, 'StockInflationAdjustAccount': None, 'VATInRevenueAccount': None, 'WipVarianceAccount': None, 'CostInflationAccount': None, 'WHIncomingCenvatAccount': None, 'WHOutgoingCenvatAccount': None, 'StockInTransitAccount': None, 'WipOffsetProfitAndLossAccount': None, 'InventoryOffsetProfitAndLossAccount': None, 'DefaultBin': None, 'DefaultBinEnforced': 'tNO', 'PurchaseBalanceAccount': None, 'ItemCode': 'ACC-0000003', 'ItemCycleCounts': []}, {'MinimalStock': 0.0, 'MaximalStock': 0.0, 'MinimalOrder': 0.0, 'StandardAveragePrice': 0.0, 'Locked': 'tNO', 'InventoryAccount': None, 'CostAccount': None, 'TransferAccount': None, 'RevenuesAccount': None, 'VarienceAccount': None, 'DecreasingAccount': None, 'IncreasingAccount': None, 'ReturningAccount': None, 'ExpensesAccount': None, 'EURevenuesAccount': None, 'EUExpensesAccount': None, 'ForeignRevenueAcc': None, 'ForeignExpensAcc': None, 'ExemptIncomeAcc': None, 'PriceDifferenceAcc': None, 'WarehouseCode': 'SW', 'InStock': 0.0, 'Committed': 0.0, 'Ordered': 0.0, 'CountedQuantity': 0.0, 'WasCounted': 'tNO', 'UserSignature': 50, 'Counted': 0.0, 'ExpenseClearingAct': None, 'PurchaseCreditAcc': None, 'EUPurchaseCreditAcc': None, 'ForeignPurchaseCreditAcc': None, 'SalesCreditAcc': None, 'SalesCreditEUAcc': None, 'ExemptedCredits': None, 'SalesCreditForeignAcc': None, 'ExpenseOffsettingAccount': None, 'WipAccount': None, 'ExchangeRateDifferencesAcct': None, 'GoodsClearingAcct': None, 'NegativeInventoryAdjustmentAccount': None, 'CostInflationOffsetAccount': None, 'GLDecreaseAcct': None, 'GLIncreaseAcct': None, 'PAReturnAcct': None, 'PurchaseAcct': None, 'PurchaseOffsetAcct': None, 'ShippedGoodsAccount': None, 'StockInflationOffsetAccount': None, 'StockInflationAdjustAccount': None, 'VATInRevenueAccount': None, 'WipVarianceAccount': None, 'CostInflationAccount': None, 'WHIncomingCenvatAccount': None, 'WHOutgoingCenvatAccount': None, 'StockInTransitAccount': None, 'WipOffsetProfitAndLossAccount': None, 'InventoryOffsetProfitAndLossAccount': None, 'DefaultBin': None, 'DefaultBinEnforced': 'tNO', 'PurchaseBalanceAccount': None, 'ItemCode': 'ACC-0000003', 'ItemCycleCounts': []}, {'MinimalStock': 0.0, 'MaximalStock': 0.0, 'MinimalOrder': 0.0, 'StandardAveragePrice': 0.0, 'Locked': 'tNO', 'InventoryAccount': None, 'CostAccount': None, 'TransferAccount': None, 'RevenuesAccount': None, 'VarienceAccount': None, 'DecreasingAccount': None, 'IncreasingAccount': None, 'ReturningAccount': None, 'ExpensesAccount': None, 'EURevenuesAccount': None, 'EUExpensesAccount': None, 'ForeignRevenueAcc': None, 'ForeignExpensAcc': None, 'ExemptIncomeAcc': None, 'PriceDifferenceAcc': None, 'WarehouseCode': 'WLS', 'InStock': 0.0, 'Committed': 0.0, 'Ordered': 0.0, 'CountedQuantity': 0.0, 'WasCounted': 'tNO', 'UserSignature': 50, 'Counted': 0.0, 'ExpenseClearingAct': None, 'PurchaseCreditAcc': None, 'EUPurchaseCreditAcc': None, 'ForeignPurchaseCreditAcc': None, 'SalesCreditAcc': None, 'SalesCreditEUAcc': None, 'ExemptedCredits': None, 'SalesCreditForeignAcc': None, 'ExpenseOffsettingAccount': None, 'WipAccount': None, 'ExchangeRateDifferencesAcct': None, 'GoodsClearingAcct': None, 'NegativeInventoryAdjustmentAccount': None, 'CostInflationOffsetAccount': None, 'GLDecreaseAcct': None, 'GLIncreaseAcct': None, 'PAReturnAcct': None, 'PurchaseAcct': None, 'PurchaseOffsetAcct': None, 'ShippedGoodsAccount': None, 'StockInflationOffsetAccount': None, 'StockInflationAdjustAccount': None, 'VATInRevenueAccount': None, 'WipVarianceAccount': None, 'CostInflationAccount': None, 'WHIncomingCenvatAccount': None, 'WHOutgoingCenvatAccount': None, 'StockInTransitAccount': None, 'WipOffsetProfitAndLossAccount': None, 'InventoryOffsetProfitAndLossAccount': None, 'DefaultBin': None, 'DefaultBinEnforced': 'tNO', 'PurchaseBalanceAccount': None, 'ItemCode': 'ACC-0000003', 'ItemCycleCounts': []}, {'MinimalStock': 0.0, 'MaximalStock': 0.0, 'MinimalOrder': 0.0, 'StandardAveragePrice': 0.0, 'Locked': 'tNO', 'InventoryAccount': None, 'CostAccount': None, 'TransferAccount': None, 'RevenuesAccount': None, 'VarienceAccount': None, 'DecreasingAccount': None, 'IncreasingAccount': None, 'ReturningAccount': None, 'ExpensesAccount': None, 'EURevenuesAccount': None, 'EUExpensesAccount': None, 'ForeignRevenueAcc': None, 'ForeignExpensAcc': None, 'ExemptIncomeAcc': None, 'PriceDifferenceAcc': None, 'WarehouseCode': 'WW', 'InStock': 0.0, 'Committed': 0.0, 'Ordered': 0.0, 'CountedQuantity': 0.0, 'WasCounted': 'tNO', 'UserSignature': 50, 'Counted': 0.0, 'ExpenseClearingAct': None, 'PurchaseCreditAcc': None, 'EUPurchaseCreditAcc': None, 'ForeignPurchaseCreditAcc': None, 'SalesCreditAcc': None, 'SalesCreditEUAcc': None, 'ExemptedCredits': None, 'SalesCreditForeignAcc': None, 'ExpenseOffsettingAccount': None, 'WipAccount': None, 'ExchangeRateDifferencesAcct': None, 'GoodsClearingAcct': None, 'NegativeInventoryAdjustmentAccount': None, 'CostInflationOffsetAccount': None, 'GLDecreaseAcct': None, 'GLIncreaseAcct': None, 'PAReturnAcct': None, 'PurchaseAcct': None, 'PurchaseOffsetAcct': None, 'ShippedGoodsAccount': None, 'StockInflationOffsetAccount': None, 'StockInflationAdjustAccount': None, 'VATInRevenueAccount': None, 'WipVarianceAccount': None, 'CostInflationAccount': None, 'WHIncomingCenvatAccount': None, 'WHOutgoingCenvatAccount': None, 'StockInTransitAccount': None, 'WipOffsetProfitAndLossAccount': None, 'InventoryOffsetProfitAndLossAccount': None, 'DefaultBin': None, 'DefaultBinEnforced': 'tNO', 'PurchaseBalanceAccount': None, 'ItemCode': 'ACC-0000003', 'ItemCycleCounts': []}, {'MinimalStock': 0.0, 'MaximalStock': 0.0, 'MinimalOrder': 0.0, 'StandardAveragePrice': 0.0, 'Locked': 'tNO', 'InventoryAccount': None, 'CostAccount': None, 'TransferAccount': None, 'RevenuesAccount': None, 'VarienceAccount': None, 'DecreasingAccount': None, 'IncreasingAccount': None, 'ReturningAccount': None, 'ExpensesAccount': None, 'EURevenuesAccount': None, 'EUExpensesAccount': None, 'ForeignRevenueAcc': None, 'ForeignExpensAcc': None, 'ExemptIncomeAcc': None, 'PriceDifferenceAcc': None, 'WarehouseCode': 'WW-CON', 'InStock': 0.0, 'Committed': 0.0, 'Ordered': 0.0, 'CountedQuantity': 0.0, 'WasCounted': 'tNO', 'UserSignature': 50, 'Counted': 0.0, 'ExpenseClearingAct': None, 'PurchaseCreditAcc': None, 'EUPurchaseCreditAcc': None, 'ForeignPurchaseCreditAcc': None, 'SalesCreditAcc': None, 'SalesCreditEUAcc': None, 'ExemptedCredits': None, 'SalesCreditForeignAcc': None, 'ExpenseOffsettingAccount': None, 'WipAccount': None, 'ExchangeRateDifferencesAcct': None, 'GoodsClearingAcct': None, 'NegativeInventoryAdjustmentAccount': None, 'CostInflationOffsetAccount': None, 'GLDecreaseAcct': None, 'GLIncreaseAcct': None, 'PAReturnAcct': None, 'PurchaseAcct': None, 'PurchaseOffsetAcct': None, 'ShippedGoodsAccount': None, 'StockInflationOffsetAccount': None, 'StockInflationAdjustAccount': None, 'VATInRevenueAccount': None, 'WipVarianceAccount': None, 'CostInflationAccount': None, 'WHIncomingCenvatAccount': None, 'WHOutgoingCenvatAccount': None, 'StockInTransitAccount': None, 'WipOffsetProfitAndLossAccount': None, 'InventoryOffsetProfitAndLossAccount': None, 'DefaultBin': None, 'DefaultBinEnforced': 'tNO', 'PurchaseBalanceAccount': None, 'ItemCode': 'ACC-0000003', 'ItemCycleCounts': []}, {'MinimalStock': 0.0, 'MaximalStock': 0.0, 'MinimalOrder': 0.0, 'StandardAveragePrice': 0.0, 'Locked': 'tNO', 'InventoryAccount': None, 'CostAccount': None, 'TransferAccount': None, 'RevenuesAccount': None, 'VarienceAccount': None, 'DecreasingAccount': None, 'IncreasingAccount': None, 'ReturningAccount': None, 'ExpensesAccount': None, 'EURevenuesAccount': None, 'EUExpensesAccount': None, 'ForeignRevenueAcc': None, 'ForeignExpensAcc': None, 'ExemptIncomeAcc': None, 'PriceDifferenceAcc': None, 'WarehouseCode': 'WW-DAM', 'InStock': 0.0, 'Committed': 0.0, 'Ordered': 0.0, 'CountedQuantity': 0.0, 'WasCounted': 'tNO', 'UserSignature': 50, 'Counted': 0.0, 'ExpenseClearingAct': None, 'PurchaseCreditAcc': None, 'EUPurchaseCreditAcc': None, 'ForeignPurchaseCreditAcc': None, 'SalesCreditAcc': None, 'SalesCreditEUAcc': None, 'ExemptedCredits': None, 'SalesCreditForeignAcc': None, 'ExpenseOffsettingAccount': None, 'WipAccount': None, 'ExchangeRateDifferencesAcct': None, 'GoodsClearingAcct': None, 'NegativeInventoryAdjustmentAccount': None, 'CostInflationOffsetAccount': None, 'GLDecreaseAcct': None, 'GLIncreaseAcct': None, 'PAReturnAcct': None, 'PurchaseAcct': None, 'PurchaseOffsetAcct': None, 'ShippedGoodsAccount': None, 'StockInflationOffsetAccount': None, 'StockInflationAdjustAccount': None, 'VATInRevenueAccount': None, 'WipVarianceAccount': None, 'CostInflationAccount': None, 'WHIncomingCenvatAccount': None, 'WHOutgoingCenvatAccount': None, 'StockInTransitAccount': None, 'WipOffsetProfitAndLossAccount': None, 'InventoryOffsetProfitAndLossAccount': None, 'DefaultBin': None, 'DefaultBinEnforced': 'tNO', 'PurchaseBalanceAccount': None, 'ItemCode': 'ACC-0000003', 'ItemCycleCounts': []}, {'MinimalStock': 0.0, 'MaximalStock': 0.0, 'MinimalOrder': 0.0, 'StandardAveragePrice': 0.0, 'Locked': 'tNO', 'InventoryAccount': None, 'CostAccount': None, 'TransferAccount': None, 'RevenuesAccount': None, 'VarienceAccount': None, 'DecreasingAccount': None, 'IncreasingAccount': None, 'ReturningAccount': None, 'ExpensesAccount': None, 'EURevenuesAccount': None, 'EUExpensesAccount': None, 'ForeignRevenueAcc': None, 'ForeignExpensAcc': None, 'ExemptIncomeAcc': None, 'PriceDifferenceAcc': None, 'WarehouseCode': 'WW-REP', 'InStock': 0.0, 'Committed': 0.0, 'Ordered': 0.0, 'CountedQuantity': 0.0, 'WasCounted': 'tNO', 'UserSignature': 50, 'Counted': 0.0, 'ExpenseClearingAct': None, 'PurchaseCreditAcc': None, 'EUPurchaseCreditAcc': None, 'ForeignPurchaseCreditAcc': None, 'SalesCreditAcc': None, 'SalesCreditEUAcc': None, 'ExemptedCredits': None, 'SalesCreditForeignAcc': None, 'ExpenseOffsettingAccount': None, 'WipAccount': None, 'ExchangeRateDifferencesAcct': None, 'GoodsClearingAcct': None, 'NegativeInventoryAdjustmentAccount': None, 'CostInflationOffsetAccount': None, 'GLDecreaseAcct': None, 'GLIncreaseAcct': None, 'PAReturnAcct': None, 'PurchaseAcct': None, 'PurchaseOffsetAcct': None, 'ShippedGoodsAccount': None, 'StockInflationOffsetAccount': None, 'StockInflationAdjustAccount': None, 'VATInRevenueAccount': None, 'WipVarianceAccount': None, 'CostInflationAccount': None, 'WHIncomingCenvatAccount': None, 'WHOutgoingCenvatAccount': None, 'StockInTransitAccount': None, 'WipOffsetProfitAndLossAccount': None, 'InventoryOffsetProfitAndLossAccount': None, 'DefaultBin': None, 'DefaultBinEnforced': 'tNO', 'PurchaseBalanceAccount': None, 'ItemCode': 'ACC-0000003', 'ItemCycleCounts': []}, {'MinimalStock': 0.0, 'MaximalStock': 0.0, 'MinimalOrder': 0.0, 'StandardAveragePrice': 0.0, 'Locked': 'tNO', 'InventoryAccount': None, 'CostAccount': None, 'TransferAccount': None, 'RevenuesAccount': None, 'VarienceAccount': None, 'DecreasingAccount': None, 'IncreasingAccount': None, 'ReturningAccount': None, 'ExpensesAccount': None, 'EURevenuesAccount': None, 'EUExpensesAccount': None, 'ForeignRevenueAcc': None, 'ForeignExpensAcc': None, 'ExemptIncomeAcc': None, 'PriceDifferenceAcc': None, 'WarehouseCode': 'WW-SAM', 'InStock': 0.0, 'Committed': 0.0, 'Ordered': 0.0, 'CountedQuantity': 0.0, 'WasCounted': 'tNO', 'UserSignature': 50, 'Counted': 0.0, 'ExpenseClearingAct': None, 'PurchaseCreditAcc': None, 'EUPurchaseCreditAcc': None, 'ForeignPurchaseCreditAcc': None, 'SalesCreditAcc': None, 'SalesCreditEUAcc': None, 'ExemptedCredits': None, 'SalesCreditForeignAcc': None, 'ExpenseOffsettingAccount': None, 'WipAccount': None, 'ExchangeRateDifferencesAcct': None, 'GoodsClearingAcct': None, 'NegativeInventoryAdjustmentAccount': None, 'CostInflationOffsetAccount': None, 'GLDecreaseAcct': None, 'GLIncreaseAcct': None, 'PAReturnAcct': None, 'PurchaseAcct': None, 'PurchaseOffsetAcct': None, 'ShippedGoodsAccount': None, 'StockInflationOffsetAccount': None, 'StockInflationAdjustAccount': None, 'VATInRevenueAccount': None, 'WipVarianceAccount': None, 'CostInflationAccount': None, 'WHIncomingCenvatAccount': None, 'WHOutgoingCenvatAccount': None, 'StockInTransitAccount': None, 'WipOffsetProfitAndLossAccount': None, 'InventoryOffsetProfitAndLossAccount': None, 'DefaultBin': None, 'DefaultBinEnforced': 'tNO', 'PurchaseBalanceAccount': None, 'ItemCode': 'ACC-0000003', 'ItemCycleCounts': []}, {'MinimalStock': 0.0, 'MaximalStock': 0.0, 'MinimalOrder': 0.0, 'StandardAveragePrice': 0.0, 'Locked': 'tNO', 'InventoryAccount': None, 'CostAccount': None, 'TransferAccount': None, 'RevenuesAccount': None, 'VarienceAccount': None, 'DecreasingAccount': None, 'IncreasingAccount': None, 'ReturningAccount': None, 'ExpensesAccount': None, 'EURevenuesAccount': None, 'EUExpensesAccount': None, 'ForeignRevenueAcc': None, 'ForeignExpensAcc': None, 'ExemptIncomeAcc': None, 'PriceDifferenceAcc': None, 'WarehouseCode': 'WW-WIP', 'InStock': 0.0, 'Committed': 0.0, 'Ordered': 0.0, 'CountedQuantity': 0.0, 'WasCounted': 'tNO', 'UserSignature': 50, 'Counted': 0.0, 'ExpenseClearingAct': None, 'PurchaseCreditAcc': None, 'EUPurchaseCreditAcc': None, 'ForeignPurchaseCreditAcc': None, 'SalesCreditAcc': None, 'SalesCreditEUAcc': None, 'ExemptedCredits': None, 'SalesCreditForeignAcc': None, 'ExpenseOffsettingAccount': None, 'WipAccount': None, 'ExchangeRateDifferencesAcct': None, 'GoodsClearingAcct': None, 'NegativeInventoryAdjustmentAccount': None, 'CostInflationOffsetAccount': None, 'GLDecreaseAcct': None, 'GLIncreaseAcct': None, 'PAReturnAcct': None, 'PurchaseAcct': None, 'PurchaseOffsetAcct': None, 'ShippedGoodsAccount': None, 'StockInflationOffsetAccount': None, 'StockInflationAdjustAccount': None, 'VATInRevenueAccount': None, 'WipVarianceAccount': None, 'CostInflationAccount': None, 'WHIncomingCenvatAccount': None, 'WHOutgoingCenvatAccount': None, 'StockInTransitAccount': None, 'WipOffsetProfitAndLossAccount': None, 'InventoryOffsetProfitAndLossAccount': None, 'DefaultBin': None, 'DefaultBinEnforced': 'tNO', 'PurchaseBalanceAccount': None, 'ItemCode': 'ACC-0000003', 'ItemCycleCounts': []}, {'MinimalStock': 0.0, 'MaximalStock': 0.0, 'MinimalOrder': 0.0, 'StandardAveragePrice': 0.0, 'Locked': 'tNO', 'InventoryAccount': None, 'CostAccount': None, 'TransferAccount': None, 'RevenuesAccount': None, 'VarienceAccount': None, 'DecreasingAccount': None, 'IncreasingAccount': None, 'ReturningAccount': None, 'ExpensesAccount': None, 'EURevenuesAccount': None, 'EUExpensesAccount': None, 'ForeignRevenueAcc': None, 'ForeignExpensAcc': None, 'ExemptIncomeAcc': None, 'PriceDifferenceAcc': None, 'WarehouseCode': 'ZW', 'InStock': 0.0, 'Committed': 0.0, 'Ordered': 0.0, 'CountedQuantity': 0.0, 'WasCounted': 'tNO', 'UserSignature': 50, 'Counted': 0.0, 'ExpenseClearingAct': None, 'PurchaseCreditAcc': None, 'EUPurchaseCreditAcc': None, 'ForeignPurchaseCreditAcc': None, 'SalesCreditAcc': None, 'SalesCreditEUAcc': None, 'ExemptedCredits': None, 'SalesCreditForeignAcc': None, 'ExpenseOffsettingAccount': None, 'WipAccount': None, 'ExchangeRateDifferencesAcct': None, 'GoodsClearingAcct': None, 'NegativeInventoryAdjustmentAccount': None, 'CostInflationOffsetAccount': None, 'GLDecreaseAcct': None, 'GLIncreaseAcct': None, 'PAReturnAcct': None, 'PurchaseAcct': None, 'PurchaseOffsetAcct': None, 'ShippedGoodsAccount': None, 'StockInflationOffsetAccount': None, 'StockInflationAdjustAccount': None, 'VATInRevenueAccount': None, 'WipVarianceAccount': None, 'CostInflationAccount': None, 'WHIncomingCenvatAccount': None, 'WHOutgoingCenvatAccount': None, 'StockInTransitAccount': None, 'WipOffsetProfitAndLossAccount': None, 'InventoryOffsetProfitAndLossAccount': None, 'DefaultBin': None, 'DefaultBinEnforced': 'tNO', 'PurchaseBalanceAccount': None, 'ItemCode': 'ACC-0000003', 'ItemCycleCounts': []}], 'ItemPreferredVendors': [], 'ItemLocalizationInfos': [], 'ItemProjects': [], 'ItemDistributionRules': [], 'ItemAttributeGroups': [], 'ItemDepreciationParameters': [], 'ItemPeriodControls': [], 'ItemUnitOfMeasurementCollection': [{'UoMType': 'iutInventory', 'UoMEntry': 1, 'DefaultBarcode': 0, 'DefaultPackage': None, 'Length1': 0.0, 'Length1Unit': None, 'Length2': 0.0, 'Length2Unit': None, 'Width1': 0.0, 'Width1Unit': None, 'Width2': 0.0, 'Width2Unit': None, 'Height1': 0.0, 'Height1Unit': None, 'Height2': 0.0, 'Height2Unit': None, 'Volume': 0.0, 'VolumeUnit': None, 'Weight1': 0.0, 'Weight1Unit': None, 'Weight2': 0.0, 'Weight2Unit': None, 'ItemUoMPackageCollection': []}, {'UoMType': 'iutPurchasing', 'UoMEntry': 1, 'DefaultBarcode': 0, 'DefaultPackage': None, 'Length1': 0.0, 'Length1Unit': None, 'Length2': 0.0, 'Length2Unit': None, 'Width1': 0.0, 'Width1Unit': None, 'Width2': 0.0, 'Width2Unit': None, 'Height1': 0.0, 'Height1Unit': None, 'Height2': 0.0, 'Height2Unit': None, 'Volume': 0.0, 'VolumeUnit': 2, 'Weight1': 0.0, 'Weight1Unit': None, 'Weight2': 0.0, 'Weight2Unit': None, 'ItemUoMPackageCollection': []}, {'UoMType': 'iutPurchasing', 'UoMEntry': 8, 'DefaultBarcode': None, 'DefaultPackage': None, 'Length1': 0.0, 'Length1Unit': None, 'Length2': 0.0, 'Length2Unit': None, 'Width1': 0.0, 'Width1Unit': None, 'Width2': 0.0, 'Width2Unit': None, 'Height1': 0.0, 'Height1Unit': None, 'Height2': 0.0, 'Height2Unit': None, 'Volume': 0.0, 'VolumeUnit': 4, 'Weight1': 0.0, 'Weight1Unit': None, 'Weight2': 0.0, 'Weight2Unit': None, 'ItemUoMPackageCollection': []}, {'UoMType': 'iutSales', 'UoMEntry': 1, 'DefaultBarcode': 0, 'DefaultPackage': None, 'Length1': 0.0, 'Length1Unit': None, 'Length2': 0.0, 'Length2Unit': None, 'Width1': 0.0, 'Width1Unit': None, 'Width2': 0.0, 'Width2Unit': None, 'Height1': 0.0, 'Height1Unit': None, 'Height2': 0.0, 'Height2Unit': None, 'Volume': 0.0, 'VolumeUnit': 2, 'Weight1': 0.0, 'Weight1Unit': None, 'Weight2': 0.0, 'Weight2Unit': None, 'ItemUoMPackageCollection': []}, {'UoMType': 'iutSales', 'UoMEntry': 8, 'DefaultBarcode': None, 'DefaultPackage': None, 'Length1': 0.0, 'Length1Unit': None, 'Length2': 0.0, 'Length2Unit': None, 'Width1': 0.0, 'Width1Unit': None, 'Width2': 0.0, 'Width2Unit': None, 'Height1': 0.0, 'Height1Unit': None, 'Height2': 0.0, 'Height2Unit': None, 'Volume': 0.0, 'VolumeUnit': 4, 'Weight1': 0.0, 'Weight1Unit': None, 'Weight2': 0.0, 'Weight2Unit': None, 'ItemUoMPackageCollection': []}], 'ItemBarCodeCollection': [], 'ItemIntrastatExtension': {'ItemCode': 'ACC-0000003', 'CommodityCode': None, 'SupplementaryUnit': None, 'FactorOfSupplementaryUnit': 0.0, 'ImportRegionState': 0, 'ExportRegionState': 0, 'ImportNatureOfTransaction': None, 'ExportNatureOfTransaction': None, 'ImportStatisticalProcedure': None, 'ExportStatisticalProcedure': None, 'CountryOfOrigin': None, 'ServiceCode': None, 'Type': 'dDocument_Items', 'ServiceSupplyMethod': 'ssmImmediate', 'ServicePaymentMethod': 'spmOther', 'ImportRegionCountry': 'GB', 'ExportRegionCountry': 'GB', 'UseWeightInCalculation': 'tYES', 'IntrastatRelevant': 'tNO', 'StatisticalCode': None}}, {'ItemCode': 'ACC-0000004', 'ItemName': 'Earring / Bracelet Plates 10*10 CM', 'ForeignName': None, 'ItemsGroupCode': 110, 'CustomsGroupCode': -1, 'SalesVATGroup': 'X0', 'BarCode': None, 'VatLiable': 'tYES', 'PurchaseItem': 'tYES', 'SalesItem': 'tNO', 'InventoryItem': 'tYES', 'IncomeAccount': None, 'ExemptIncomeAccount': None, 'ExpanseAccount': None, 'Mainsupplier': None, 'SupplierCatalogNo': None, 'DesiredInventory': 0.0, 'MinInventory': 0.0, 'Picture': None, 'User_Text': None, 'SerialNum': None, 'CommissionPercent': 0.0, 'CommissionSum': 0.0, 'CommissionGroup': 0, 'TreeType': 'iNotATree', 'AssetItem': 'tNO', 'DataExportCode': None, 'Manufacturer': -1, 'QuantityOnStock': 35.0, 'QuantityOrderedFromVendors': 0.0, 'QuantityOrderedByCustomers': 0.0, 'ManageSerialNumbers': 'tNO', 'ManageBatchNumbers': 'tNO', 'Valid': 'tYES', 'ValidFrom': None, 'ValidTo': None, 'ValidRemarks': None, 'Frozen': 'tNO', 'FrozenFrom': None, 'FrozenTo': None, 'FrozenRemarks': None, 'SalesUnit': None, 'SalesItemsPerUnit': 1.0, 'SalesPackagingUnit': None, 'SalesQtyPerPackUnit': 1.0, 'SalesUnitLength': None, 'SalesLengthUnit': None, 'SalesUnitWidth': None, 'SalesWidthUnit': None, 'SalesUnitHeight': None, 'SalesHeightUnit': None, 'SalesUnitVolume': 0.0, 'SalesVolumeUnit': 4, 'SalesUnitWeight': None, 'SalesWeightUnit': None, 'PurchaseUnit': None, 'PurchaseItemsPerUnit': 1.0, 'PurchasePackagingUnit': None, 'PurchaseQtyPerPackUnit': 1.0, 'PurchaseUnitLength': None, 'PurchaseLengthUnit': None, 'PurchaseUnitWidth': None, 'PurchaseWidthUnit': None, 'PurchaseUnitHeight': None, 'PurchaseHeightUnit': None, 'PurchaseUnitVolume': 0.0, 'PurchaseVolumeUnit': 4, 'PurchaseUnitWeight': None, 'PurchaseWeightUnit': None, 'PurchaseVATGroup': 'X1', 'SalesFactor1': 1.0, 'SalesFactor2': 1.0, 'SalesFactor3': 1.0, 'SalesFactor4': 1.0, 'PurchaseFactor1': 1.0, 'PurchaseFactor2': 1.0, 'PurchaseFactor3': 1.0, 'PurchaseFactor4': 1.0, 'MovingAveragePrice': 0.0, 'ForeignRevenuesAccount': None, 'ECRevenuesAccount': None, 'ForeignExpensesAccount': None, 'ECExpensesAccount': None, 'AvgStdPrice': 0.0, 'DefaultWarehouse': None, 'ShipType': None, 'GLMethod': 'glm_ItemClass', 'TaxType': 'tt_Yes', 'MaxInventory': 0.0, 'ManageStockByWarehouse': 'tNO', 'PurchaseHeightUnit1': None, 'PurchaseUnitHeight1': None, 'PurchaseLengthUnit1': None, 'PurchaseUnitLength1': None, 'PurchaseWeightUnit1': None, 'PurchaseUnitWeight1': None, 'PurchaseWidthUnit1': None, 'PurchaseUnitWidth1': None, 'SalesHeightUnit1': None, 'SalesUnitHeight1': None, 'SalesLengthUnit1': None, 'SalesUnitLength1': None, 'SalesWeightUnit1': None, 'SalesUnitWeight1': None, 'SalesWidthUnit1': None, 'SalesUnitWidth1': None, 'ForceSelectionOfSerialNumber': 'tYES', 'ManageSerialNumbersOnReleaseOnly': 'tNO', 'WTLiable': 'tNO', 'CostAccountingMethod': 'bis_MovingAverage', 'SWW': None, 'WarrantyTemplate': '', 'IndirectTax': 'tNO', 'ArTaxCode': None, 'ApTaxCode': None, 'BaseUnitName': None, 'ItemCountryOrg': None, 'IssueMethod': 'im_Backflush', 'SRIAndBatchManageMethod': 'bomm_OnEveryTransaction', 'IsPhantom': 'tNO', 'InventoryUOM': 'Piece', 'PlanningSystem': 'bop_None', 'ProcurementMethod': 'bom_Buy', 'ComponentWarehouse': 'bomcw_BOM', 'OrderIntervals': None, 'OrderMultiple': 0.0, 'LeadTime': None, 'MinOrderQuantity': 0.0, 'ItemType': 'itItems', 'ItemClass': 'itcMaterial', 'OutgoingServiceCode': -1, 'IncomingServiceCode': -1, 'ServiceGroup': -1, 'NCMCode': -1, 'MaterialType': 'mt_FinishedGoods', 'MaterialGroup': -1, 'ProductSource': '', 'Properties1': 'tNO', 'Properties2': 'tNO', 'Properties3': 'tNO', 'Properties4': 'tNO', 'Properties5': 'tNO', 'Properties6': 'tNO', 'Properties7': 'tNO', 'Properties8': 'tNO', 'Properties9': 'tNO', 'Properties10': 'tNO', 'Properties11': 'tNO', 'Properties12': 'tNO', 'Properties13': 'tNO', 'Properties14': 'tNO', 'Properties15': 'tNO', 'Properties16': 'tNO', 'Properties17': 'tNO', 'Properties18': 'tNO', 'Properties19': 'tNO', 'Properties20': 'tNO', 'Properties21': 'tNO', 'Properties22': 'tNO', 'Properties23': 'tNO', 'Properties24': 'tNO', 'Properties25': 'tNO', 'Properties26': 'tNO', 'Properties27': 'tNO', 'Properties28': 'tNO', 'Properties29': 'tNO', 'Properties30': 'tNO', 'Properties31': 'tNO', 'Properties32': 'tNO', 'Properties33': 'tNO', 'Properties34': 'tNO', 'Properties35': 'tNO', 'Properties36': 'tNO', 'Properties37': 'tNO', 'Properties38': 'tNO', 'Properties39': 'tNO', 'Properties40': 'tNO', 'Properties41': 'tNO', 'Properties42': 'tNO', 'Properties43': 'tNO', 'Properties44': 'tNO', 'Properties45': 'tNO', 'Properties46': 'tNO', 'Properties47': 'tNO', 'Properties48': 'tNO', 'Properties49': 'tNO', 'Properties50': 'tNO', 'Properties51': 'tNO', 'Properties52': 'tNO', 'Properties53': 'tNO', 'Properties54': 'tNO', 'Properties55': 'tNO', 'Properties56': 'tNO', 'Properties57': 'tNO', 'Properties58': 'tNO', 'Properties59': 'tNO', 'Properties60': 'tNO', 'Properties61': 'tNO', 'Properties62': 'tNO', 'Properties63': 'tNO', 'Properties64': 'tNO', 'AutoCreateSerialNumbersOnRelease': 'tNO', 'DNFEntry': -1, 'GTSItemSpec': None, 'GTSItemTaxCategory': None, 'FuelID': None, 'BeverageTableCode': '', 'BeverageGroupCode': '', 'BeverageCommercialBrandCode': None, 'Series': 119, 'ToleranceDays': None, 'TypeOfAdvancedRules': 'toarGeneral', 'IssuePrimarilyBy': 'ipbBinLocations', 'NoDiscounts': 'tNO', 'AssetClass': '', 'AssetGroup': '', 'InventoryNumber': '', 'Technician': None, 'Employee': None, 'Location': None, 'AssetStatus': 'New', 'CapitalizationDate': None, 'StatisticalAsset': 'tNO', 'Cession': 'tNO', 'DeactivateAfterUsefulLife': 'tNO', 'ManageByQuantity': 'tNO', 'UoMGroupEntry': 1, 'InventoryUoMEntry': 1, 'DefaultSalesUoMEntry': None, 'DefaultPurchasingUoMEntry': None, 'DepreciationGroup': None, 'AssetSerialNumber': '', 'InventoryWeight': None, 'InventoryWeightUnit': None, 'InventoryWeight1': None, 'InventoryWeightUnit1': None, 'DefaultCountingUnit': 'Piece', 'CountingItemsPerUnit': 1.0, 'DefaultCountingUoMEntry': 1, 'Excisable': 'tNO', 'ChapterID': -1, 'ScsCode': None, 'SpProdType': None, 'ProdStdCost': 0.0, 'InCostRollup': 'tYES', 'VirtualAssetItem': 'tNO', 'EnforceAssetSerialNumbers': 'tNO', 'AttachmentEntry': None, 'LinkedResource': None, 'UpdateDate': '2025-01-26', 'UpdateTime': '09:35:56', 'GSTRelevnt': 'tNO', 'SACEntry': -1, 'GSTTaxCategory': 'gtc_Regular', 'ServiceCategoryEntry': -1, 'CapitalGoodsOnHoldPercent': 0.0, 'CapitalGoodsOnHoldLimit': 0.0, 'AssessableValue': 0.0, 'AssVal4WTR': 0.0, 'SOIExcisable': 'se_NotExcisable', 'TNVED': None, 'ImportedItem': 'tNO', 'PricingUnit': 1, 'CreateDate': '2025-01-26', 'CreateTime': '09:35:56', 'U_MfgH': None, 'U_Collection': None, 'U_OldCode': None, 'U_ItemsCat': None, 'U_NumberofSet': None, 'U_NileCode': None, 'U_TransferProductionLinkExclude': None, 'U_SBO_CodeType': 'GS1', 'U_SBO_EGSCode': None, 'U_ShopifyColor': None, 'U_SalesChannel': None, 'U_ShopifyItemIDLocal': None, 'U_ShopifyItemIDInternational': None, 'U_ParentCommercialName': None, 'ItemPrices': [{'PriceList': 1, 'Price': 0.0, 'Currency': None, 'AdditionalPrice1': 0.0, 'AdditionalCurrency1': None, 'AdditionalPrice2': 0.0, 'AdditionalCurrency2': None, 'BasePriceList': 1, 'Factor': 1.0, 'UoMPrices': []}, {'PriceList': 2, 'Price': 0.0, 'Currency': None, 'AdditionalPrice1': 0.0, 'AdditionalCurrency1': None, 'AdditionalPrice2': 0.0, 'AdditionalCurrency2': None, 'BasePriceList': 1, 'Factor': 0.4, 'UoMPrices': []}, {'PriceList': 3, 'Price': 0.0, 'Currency': None, 'AdditionalPrice1': 0.0, 'AdditionalCurrency1': None, 'AdditionalPrice2': 0.0, 'AdditionalCurrency2': None, 'BasePriceList': 3, 'Factor': 1.0, 'UoMPrices': []}, {'PriceList': 4, 'Price': 0.0, 'Currency': None, 'AdditionalPrice1': 0.0, 'AdditionalCurrency1': None, 'AdditionalPrice2': 0.0, 'AdditionalCurrency2': None, 'BasePriceList': 4, 'Factor': 1.0, 'UoMPrices': []}, {'PriceList': 5, 'Price': 0.0, 'Currency': None, 'AdditionalPrice1': 0.0, 'AdditionalCurrency1': None, 'AdditionalPrice2': 0.0, 'AdditionalCurrency2': None, 'BasePriceList': 5, 'Factor': 1.0, 'UoMPrices': []}, {'PriceList': 6, 'Price': 0.0, 'Currency': None, 'AdditionalPrice1': 0.0, 'AdditionalCurrency1': None, 'AdditionalPrice2': 0.0, 'AdditionalCurrency2': None, 'BasePriceList': 6, 'Factor': 1.0, 'UoMPrices': []}, {'PriceList': 7, 'Price': 0.0, 'Currency': None, 'AdditionalPrice1': 0.0, 'AdditionalCurrency1': None, 'AdditionalPrice2': 0.0, 'AdditionalCurrency2': None, 'BasePriceList': 7, 'Factor': 1.0, 'UoMPrices': []}, {'PriceList': 8, 'Price': 0.0, 'Currency': None, 'AdditionalPrice1': 0.0, 'AdditionalCurrency1': None, 'AdditionalPrice2': 0.0, 'AdditionalCurrency2': None, 'BasePriceList': 8, 'Factor': 1.0, 'UoMPrices': []}, {'PriceList': 9, 'Price': 0.0, 'Currency': None, 'AdditionalPrice1': 0.0, 'AdditionalCurrency1': None, 'AdditionalPrice2': 0.0, 'AdditionalCurrency2': None, 'BasePriceList': 9, 'Factor': 1.0, 'UoMPrices': []}, {'PriceList': 10, 'Price': 0.0, 'Currency': None, 'AdditionalPrice1': 0.0, 'AdditionalCurrency1': None, 'AdditionalPrice2': 0.0, 'AdditionalCurrency2': None, 'BasePriceList': 10, 'Factor': 1.0, 'UoMPrices': []}], 'ItemWarehouseInfoCollection': [{'MinimalStock': 0.0, 'MaximalStock': 0.0, 'MinimalOrder': 0.0, 'StandardAveragePrice': 180.0, 'Locked': 'tNO', 'InventoryAccount': None, 'CostAccount': None, 'TransferAccount': None, 'RevenuesAccount': None, 'VarienceAccount': None, 'DecreasingAccount': None, 'IncreasingAccount': None, 'ReturningAccount': None, 'ExpensesAccount': None, 'EURevenuesAccount': None, 'EUExpensesAccount': None, 'ForeignRevenueAcc': None, 'ForeignExpensAcc': None, 'ExemptIncomeAcc': None, 'PriceDifferenceAcc': None, 'WarehouseCode': '5A', 'InStock': 17.0, 'Committed': 0.0, 'Ordered': 0.0, 'CountedQuantity': 0.0, 'WasCounted': 'tNO', 'UserSignature': 50, 'Counted': 0.0, 'ExpenseClearingAct': None, 'PurchaseCreditAcc': None, 'EUPurchaseCreditAcc': None, 'ForeignPurchaseCreditAcc': None, 'SalesCreditAcc': None, 'SalesCreditEUAcc': None, 'ExemptedCredits': None, 'SalesCreditForeignAcc': None, 'ExpenseOffsettingAccount': None, 'WipAccount': None, 'ExchangeRateDifferencesAcct': None, 'GoodsClearingAcct': None, 'NegativeInventoryAdjustmentAccount': None, 'CostInflationOffsetAccount': None, 'GLDecreaseAcct': None, 'GLIncreaseAcct': None, 'PAReturnAcct': None, 'PurchaseAcct': None, 'PurchaseOffsetAcct': None, 'ShippedGoodsAccount': None, 'StockInflationOffsetAccount': None, 'StockInflationAdjustAccount': None, 'VATInRevenueAccount': None, 'WipVarianceAccount': None, 'CostInflationAccount': None, 'WHIncomingCenvatAccount': None, 'WHOutgoingCenvatAccount': None, 'StockInTransitAccount': None, 'WipOffsetProfitAndLossAccount': None, 'InventoryOffsetProfitAndLossAccount': None, 'DefaultBin': None, 'DefaultBinEnforced': 'tNO', 'PurchaseBalanceAccount': None, 'ItemCode': 'ACC-0000004', 'ItemCycleCounts': []}, {'MinimalStock': 0.0, 'MaximalStock': 0.0, 'MinimalOrder': 0.0, 'StandardAveragePrice': 180.0, 'Locked': 'tNO', 'InventoryAccount': None, 'CostAccount': None, 'TransferAccount': None, 'RevenuesAccount': None, 'VarienceAccount': None, 'DecreasingAccount': None, 'IncreasingAccount': None, 'ReturningAccount': None, 'ExpensesAccount': None, 'EURevenuesAccount': None, 'EUExpensesAccount': None, 'ForeignRevenueAcc': None, 'ForeignExpensAcc': None, 'ExemptIncomeAcc': None, 'PriceDifferenceAcc': None, 'WarehouseCode': 'Arkan', 'InStock': 18.0, 'Committed': 0.0, 'Ordered': 0.0, 'CountedQuantity': 0.0, 'WasCounted': 'tNO', 'UserSignature': 50, 'Counted': 0.0, 'ExpenseClearingAct': None, 'PurchaseCreditAcc': None, 'EUPurchaseCreditAcc': None, 'ForeignPurchaseCreditAcc': None, 'SalesCreditAcc': None, 'SalesCreditEUAcc': None, 'ExemptedCredits': None, 'SalesCreditForeignAcc': None, 'ExpenseOffsettingAccount': None, 'WipAccount': None, 'ExchangeRateDifferencesAcct': None, 'GoodsClearingAcct': None, 'NegativeInventoryAdjustmentAccount': None, 'CostInflationOffsetAccount': None, 'GLDecreaseAcct': None, 'GLIncreaseAcct': None, 'PAReturnAcct': None, 'PurchaseAcct': None, 'PurchaseOffsetAcct': None, 'ShippedGoodsAccount': None, 'StockInflationOffsetAccount': None, 'StockInflationAdjustAccount': None, 'VATInRevenueAccount': None, 'WipVarianceAccount': None, 'CostInflationAccount': None, 'WHIncomingCenvatAccount': None, 'WHOutgoingCenvatAccount': None, 'StockInTransitAccount': None, 'WipOffsetProfitAndLossAccount': None, 'InventoryOffsetProfitAndLossAccount': None, 'DefaultBin': None, 'DefaultBinEnforced': 'tNO', 'PurchaseBalanceAccount': None, 'ItemCode': 'ACC-0000004', 'ItemCycleCounts': []}, {'MinimalStock': 0.0, 'MaximalStock': 0.0, 'MinimalOrder': 0.0, 'StandardAveragePrice': 0.0, 'Locked': 'tNO', 'InventoryAccount': None, 'CostAccount': None, 'TransferAccount': None, 'RevenuesAccount': None, 'VarienceAccount': None, 'DecreasingAccount': None, 'IncreasingAccount': None, 'ReturningAccount': None, 'ExpensesAccount': None, 'EURevenuesAccount': None, 'EUExpensesAccount': None, 'ForeignRevenueAcc': None, 'ForeignExpensAcc': None, 'ExemptIncomeAcc': None, 'PriceDifferenceAcc': None, 'WarehouseCode': 'DIP', 'InStock': 0.0, 'Committed': 0.0, 'Ordered': 0.0, 'CountedQuantity': 0.0, 'WasCounted': 'tNO', 'UserSignature': 50, 'Counted': 0.0, 'ExpenseClearingAct': None, 'PurchaseCreditAcc': None, 'EUPurchaseCreditAcc': None, 'ForeignPurchaseCreditAcc': None, 'SalesCreditAcc': None, 'SalesCreditEUAcc': None, 'ExemptedCredits': None, 'SalesCreditForeignAcc': None, 'ExpenseOffsettingAccount': None, 'WipAccount': None, 'ExchangeRateDifferencesAcct': None, 'GoodsClearingAcct': None, 'NegativeInventoryAdjustmentAccount': None, 'CostInflationOffsetAccount': None, 'GLDecreaseAcct': None, 'GLIncreaseAcct': None, 'PAReturnAcct': None, 'PurchaseAcct': None, 'PurchaseOffsetAcct': None, 'ShippedGoodsAccount': None, 'StockInflationOffsetAccount': None, 'StockInflationAdjustAccount': None, 'VATInRevenueAccount': None, 'WipVarianceAccount': None, 'CostInflationAccount': None, 'WHIncomingCenvatAccount': None, 'WHOutgoingCenvatAccount': None, 'StockInTransitAccount': None, 'WipOffsetProfitAndLossAccount': None, 'InventoryOffsetProfitAndLossAccount': None, 'DefaultBin': None, 'DefaultBinEnforced': 'tNO', 'PurchaseBalanceAccount': None, 'ItemCode': 'ACC-0000004', 'ItemCycleCounts': []}, {'MinimalStock': 0.0, 'MaximalStock': 0.0, 'MinimalOrder': 0.0, 'StandardAveragePrice': 180.0, 'Locked': 'tNO', 'InventoryAccount': None, 'CostAccount': None, 'TransferAccount': None, 'RevenuesAccount': None, 'VarienceAccount': None, 'DecreasingAccount': None, 'IncreasingAccount': None, 'ReturningAccount': None, 'ExpensesAccount': None, 'EURevenuesAccount': None, 'EUExpensesAccount': None, 'ForeignRevenueAcc': None, 'ForeignExpensAcc': None, 'ExemptIncomeAcc': None, 'PriceDifferenceAcc': None, 'WarehouseCode': 'INC', 'InStock': 0.0, 'Committed': 0.0, 'Ordered': 0.0, 'CountedQuantity': 0.0, 'WasCounted': 'tNO', 'UserSignature': 50, 'Counted': 0.0, 'ExpenseClearingAct': None, 'PurchaseCreditAcc': None, 'EUPurchaseCreditAcc': None, 'ForeignPurchaseCreditAcc': None, 'SalesCreditAcc': None, 'SalesCreditEUAcc': None, 'ExemptedCredits': None, 'SalesCreditForeignAcc': None, 'ExpenseOffsettingAccount': None, 'WipAccount': None, 'ExchangeRateDifferencesAcct': None, 'GoodsClearingAcct': None, 'NegativeInventoryAdjustmentAccount': None, 'CostInflationOffsetAccount': None, 'GLDecreaseAcct': None, 'GLIncreaseAcct': None, 'PAReturnAcct': None, 'PurchaseAcct': None, 'PurchaseOffsetAcct': None, 'ShippedGoodsAccount': None, 'StockInflationOffsetAccount': None, 'StockInflationAdjustAccount': None, 'VATInRevenueAccount': None, 'WipVarianceAccount': None, 'CostInflationAccount': None, 'WHIncomingCenvatAccount': None, 'WHOutgoingCenvatAccount': None, 'StockInTransitAccount': None, 'WipOffsetProfitAndLossAccount': None, 'InventoryOffsetProfitAndLossAccount': None, 'DefaultBin': None, 'DefaultBinEnforced': 'tNO', 'PurchaseBalanceAccount': None, 'ItemCode': 'ACC-0000004', 'ItemCycleCounts': []}, {'MinimalStock': 0.0, 'MaximalStock': 0.0, 'MinimalOrder': 0.0, 'StandardAveragePrice': 0.0, 'Locked': 'tNO', 'InventoryAccount': None, 'CostAccount': None, 'TransferAccount': None, 'RevenuesAccount': None, 'VarienceAccount': None, 'DecreasingAccount': None, 'IncreasingAccount': None, 'ReturningAccount': None, 'ExpensesAccount': None, 'EURevenuesAccount': None, 'EUExpensesAccount': None, 'ForeignRevenueAcc': None, 'ForeignExpensAcc': None, 'ExemptIncomeAcc': None, 'PriceDifferenceAcc': None, 'WarehouseCode': 'ONL', 'InStock': 0.0, 'Committed': 0.0, 'Ordered': 0.0, 'CountedQuantity': 0.0, 'WasCounted': 'tNO', 'UserSignature': 50, 'Counted': 0.0, 'ExpenseClearingAct': None, 'PurchaseCreditAcc': None, 'EUPurchaseCreditAcc': None, 'ForeignPurchaseCreditAcc': None, 'SalesCreditAcc': None, 'SalesCreditEUAcc': None, 'ExemptedCredits': None, 'SalesCreditForeignAcc': None, 'ExpenseOffsettingAccount': None, 'WipAccount': None, 'ExchangeRateDifferencesAcct': None, 'GoodsClearingAcct': None, 'NegativeInventoryAdjustmentAccount': None, 'CostInflationOffsetAccount': None, 'GLDecreaseAcct': None, 'GLIncreaseAcct': None, 'PAReturnAcct': None, 'PurchaseAcct': None, 'PurchaseOffsetAcct': None, 'ShippedGoodsAccount': None, 'StockInflationOffsetAccount': None, 'StockInflationAdjustAccount': None, 'VATInRevenueAccount': None, 'WipVarianceAccount': None, 'CostInflationAccount': None, 'WHIncomingCenvatAccount': None, 'WHOutgoingCenvatAccount': None, 'StockInTransitAccount': None, 'WipOffsetProfitAndLossAccount': None, 'InventoryOffsetProfitAndLossAccount': None, 'DefaultBin': None, 'DefaultBinEnforced': 'tNO', 'PurchaseBalanceAccount': None, 'ItemCode': 'ACC-0000004', 'ItemCycleCounts': []}, {'MinimalStock': 0.0, 'MaximalStock': 0.0, 'MinimalOrder': 0.0, 'StandardAveragePrice': 0.0, 'Locked': 'tNO', 'InventoryAccount': None, 'CostAccount': None, 'TransferAccount': None, 'RevenuesAccount': None, 'VarienceAccount': None, 'DecreasingAccount': None, 'IncreasingAccount': None, 'ReturningAccount': None, 'ExpensesAccount': None, 'EURevenuesAccount': None, 'EUExpensesAccount': None, 'ForeignRevenueAcc': None, 'ForeignExpensAcc': None, 'ExemptIncomeAcc': None, 'PriceDifferenceAcc': None, 'WarehouseCode': 'PHO', 'InStock': 0.0, 'Committed': 0.0, 'Ordered': 0.0, 'CountedQuantity': 0.0, 'WasCounted': 'tNO', 'UserSignature': 50, 'Counted': 0.0, 'ExpenseClearingAct': None, 'PurchaseCreditAcc': None, 'EUPurchaseCreditAcc': None, 'ForeignPurchaseCreditAcc': None, 'SalesCreditAcc': None, 'SalesCreditEUAcc': None, 'ExemptedCredits': None, 'SalesCreditForeignAcc': None, 'ExpenseOffsettingAccount': None, 'WipAccount': None, 'ExchangeRateDifferencesAcct': None, 'GoodsClearingAcct': None, 'NegativeInventoryAdjustmentAccount': None, 'CostInflationOffsetAccount': None, 'GLDecreaseAcct': None, 'GLIncreaseAcct': None, 'PAReturnAcct': None, 'PurchaseAcct': None, 'PurchaseOffsetAcct': None, 'ShippedGoodsAccount': None, 'StockInflationOffsetAccount': None, 'StockInflationAdjustAccount': None, 'VATInRevenueAccount': None, 'WipVarianceAccount': None, 'CostInflationAccount': None, 'WHIncomingCenvatAccount': None, 'WHOutgoingCenvatAccount': None, 'StockInTransitAccount': None, 'WipOffsetProfitAndLossAccount': None, 'InventoryOffsetProfitAndLossAccount': None, 'DefaultBin': None, 'DefaultBinEnforced': 'tNO', 'PurchaseBalanceAccount': None, 'ItemCode': 'ACC-0000004', 'ItemCycleCounts': []}, {'MinimalStock': 0.0, 'MaximalStock': 0.0, 'MinimalOrder': 0.0, 'StandardAveragePrice': 0.0, 'Locked': 'tNO', 'InventoryAccount': None, 'CostAccount': None, 'TransferAccount': None, 'RevenuesAccount': None, 'VarienceAccount': None, 'DecreasingAccount': None, 'IncreasingAccount': None, 'ReturningAccount': None, 'ExpensesAccount': None, 'EURevenuesAccount': None, 'EUExpensesAccount': None, 'ForeignRevenueAcc': None, 'ForeignExpensAcc': None, 'ExemptIncomeAcc': None, 'PriceDifferenceAcc': None, 'WarehouseCode': 'PHO-EX', 'InStock': 0.0, 'Committed': 0.0, 'Ordered': 0.0, 'CountedQuantity': 0.0, 'WasCounted': 'tNO', 'UserSignature': 1, 'Counted': 0.0, 'ExpenseClearingAct': None, 'PurchaseCreditAcc': None, 'EUPurchaseCreditAcc': None, 'ForeignPurchaseCreditAcc': None, 'SalesCreditAcc': None, 'SalesCreditEUAcc': None, 'ExemptedCredits': None, 'SalesCreditForeignAcc': None, 'ExpenseOffsettingAccount': None, 'WipAccount': None, 'ExchangeRateDifferencesAcct': None, 'GoodsClearingAcct': None, 'NegativeInventoryAdjustmentAccount': None, 'CostInflationOffsetAccount': None, 'GLDecreaseAcct': None, 'GLIncreaseAcct': None, 'PAReturnAcct': None, 'PurchaseAcct': None, 'PurchaseOffsetAcct': None, 'ShippedGoodsAccount': None, 'StockInflationOffsetAccount': None, 'StockInflationAdjustAccount': None, 'VATInRevenueAccount': None, 'WipVarianceAccount': None, 'CostInflationAccount': None, 'WHIncomingCenvatAccount': None, 'WHOutgoingCenvatAccount': None, 'StockInTransitAccount': None, 'WipOffsetProfitAndLossAccount': None, 'InventoryOffsetProfitAndLossAccount': None, 'DefaultBin': None, 'DefaultBinEnforced': 'tNO', 'PurchaseBalanceAccount': None, 'ItemCode': 'ACC-0000004', 'ItemCycleCounts': []}, {'MinimalStock': 0.0, 'MaximalStock': 0.0, 'MinimalOrder': 0.0, 'StandardAveragePrice': 0.0, 'Locked': 'tNO', 'InventoryAccount': None, 'CostAccount': None, 'TransferAccount': None, 'RevenuesAccount': None, 'VarienceAccount': None, 'DecreasingAccount': None, 'IncreasingAccount': None, 'ReturningAccount': None, 'ExpensesAccount': None, 'EURevenuesAccount': None, 'EUExpensesAccount': None, 'ForeignRevenueAcc': None, 'ForeignExpensAcc': None, 'ExemptIncomeAcc': None, 'PriceDifferenceAcc': None, 'WarehouseCode': 'PHO-IN', 'InStock': 0.0, 'Committed': 0.0, 'Ordered': 0.0, 'CountedQuantity': 0.0, 'WasCounted': 'tNO', 'UserSignature': 1, 'Counted': 0.0, 'ExpenseClearingAct': None, 'PurchaseCreditAcc': None, 'EUPurchaseCreditAcc': None, 'ForeignPurchaseCreditAcc': None, 'SalesCreditAcc': None, 'SalesCreditEUAcc': None, 'ExemptedCredits': None, 'SalesCreditForeignAcc': None, 'ExpenseOffsettingAccount': None, 'WipAccount': None, 'ExchangeRateDifferencesAcct': None, 'GoodsClearingAcct': None, 'NegativeInventoryAdjustmentAccount': None, 'CostInflationOffsetAccount': None, 'GLDecreaseAcct': None, 'GLIncreaseAcct': None, 'PAReturnAcct': None, 'PurchaseAcct': None, 'PurchaseOffsetAcct': None, 'ShippedGoodsAccount': None, 'StockInflationOffsetAccount': None, 'StockInflationAdjustAccount': None, 'VATInRevenueAccount': None, 'WipVarianceAccount': None, 'CostInflationAccount': None, 'WHIncomingCenvatAccount': None, 'WHOutgoingCenvatAccount': None, 'StockInTransitAccount': None, 'WipOffsetProfitAndLossAccount': None, 'InventoryOffsetProfitAndLossAccount': None, 'DefaultBin': None, 'DefaultBinEnforced': 'tNO', 'PurchaseBalanceAccount': None, 'ItemCode': 'ACC-0000004', 'ItemCycleCounts': []}, {'MinimalStock': 0.0, 'MaximalStock': 0.0, 'MinimalOrder': 0.0, 'StandardAveragePrice': 0.0, 'Locked': 'tNO', 'InventoryAccount': None, 'CostAccount': None, 'TransferAccount': None, 'RevenuesAccount': None, 'VarienceAccount': None, 'DecreasingAccount': None, 'IncreasingAccount': None, 'ReturningAccount': None, 'ExpensesAccount': None, 'EURevenuesAccount': None, 'EUExpensesAccount': None, 'ForeignRevenueAcc': None, 'ForeignExpensAcc': None, 'ExemptIncomeAcc': None, 'PriceDifferenceAcc': None, 'WarehouseCode': 'RTW', 'InStock': 0.0, 'Committed': 0.0, 'Ordered': 0.0, 'CountedQuantity': 0.0, 'WasCounted': 'tNO', 'UserSignature': 50, 'Counted': 0.0, 'ExpenseClearingAct': None, 'PurchaseCreditAcc': None, 'EUPurchaseCreditAcc': None, 'ForeignPurchaseCreditAcc': None, 'SalesCreditAcc': None, 'SalesCreditEUAcc': None, 'ExemptedCredits': None, 'SalesCreditForeignAcc': None, 'ExpenseOffsettingAccount': None, 'WipAccount': None, 'ExchangeRateDifferencesAcct': None, 'GoodsClearingAcct': None, 'NegativeInventoryAdjustmentAccount': None, 'CostInflationOffsetAccount': None, 'GLDecreaseAcct': None, 'GLIncreaseAcct': None, 'PAReturnAcct': None, 'PurchaseAcct': None, 'PurchaseOffsetAcct': None, 'ShippedGoodsAccount': None, 'StockInflationOffsetAccount': None, 'StockInflationAdjustAccount': None, 'VATInRevenueAccount': None, 'WipVarianceAccount': None, 'CostInflationAccount': None, 'WHIncomingCenvatAccount': None, 'WHOutgoingCenvatAccount': None, 'StockInTransitAccount': None, 'WipOffsetProfitAndLossAccount': None, 'InventoryOffsetProfitAndLossAccount': None, 'DefaultBin': None, 'DefaultBinEnforced': 'tNO', 'PurchaseBalanceAccount': None, 'ItemCode': 'ACC-0000004', 'ItemCycleCounts': []}, {'MinimalStock': 0.0, 'MaximalStock': 0.0, 'MinimalOrder': 0.0, 'StandardAveragePrice': 0.0, 'Locked': 'tNO', 'InventoryAccount': None, 'CostAccount': None, 'TransferAccount': None, 'RevenuesAccount': None, 'VarienceAccount': None, 'DecreasingAccount': None, 'IncreasingAccount': None, 'ReturningAccount': None, 'ExpensesAccount': None, 'EURevenuesAccount': None, 'EUExpensesAccount': None, 'ForeignRevenueAcc': None, 'ForeignExpensAcc': None, 'ExemptIncomeAcc': None, 'PriceDifferenceAcc': None, 'WarehouseCode': 'RTWH', 'InStock': 0.0, 'Committed': 0.0, 'Ordered': 0.0, 'CountedQuantity': 0.0, 'WasCounted': 'tNO', 'UserSignature': 1, 'Counted': 0.0, 'ExpenseClearingAct': None, 'PurchaseCreditAcc': None, 'EUPurchaseCreditAcc': None, 'ForeignPurchaseCreditAcc': None, 'SalesCreditAcc': None, 'SalesCreditEUAcc': None, 'ExemptedCredits': None, 'SalesCreditForeignAcc': None, 'ExpenseOffsettingAccount': None, 'WipAccount': None, 'ExchangeRateDifferencesAcct': None, 'GoodsClearingAcct': None, 'NegativeInventoryAdjustmentAccount': None, 'CostInflationOffsetAccount': None, 'GLDecreaseAcct': None, 'GLIncreaseAcct': None, 'PAReturnAcct': None, 'PurchaseAcct': None, 'PurchaseOffsetAcct': None, 'ShippedGoodsAccount': None, 'StockInflationOffsetAccount': None, 'StockInflationAdjustAccount': None, 'VATInRevenueAccount': None, 'WipVarianceAccount': None, 'CostInflationAccount': None, 'WHIncomingCenvatAccount': None, 'WHOutgoingCenvatAccount': None, 'StockInTransitAccount': None, 'WipOffsetProfitAndLossAccount': None, 'InventoryOffsetProfitAndLossAccount': None, 'DefaultBin': None, 'DefaultBinEnforced': 'tNO', 'PurchaseBalanceAccount': None, 'ItemCode': 'ACC-0000004', 'ItemCycleCounts': []}, {'MinimalStock': 0.0, 'MaximalStock': 0.0, 'MinimalOrder': 0.0, 'StandardAveragePrice': 0.0, 'Locked': 'tNO', 'InventoryAccount': None, 'CostAccount': None, 'TransferAccount': None, 'RevenuesAccount': None, 'VarienceAccount': None, 'DecreasingAccount': None, 'IncreasingAccount': None, 'ReturningAccount': None, 'ExpensesAccount': None, 'EURevenuesAccount': None, 'EUExpensesAccount': None, 'ForeignRevenueAcc': None, 'ForeignExpensAcc': None, 'ExemptIncomeAcc': None, 'PriceDifferenceAcc': None, 'WarehouseCode': 'SW', 'InStock': 0.0, 'Committed': 0.0, 'Ordered': 0.0, 'CountedQuantity': 0.0, 'WasCounted': 'tNO', 'UserSignature': 50, 'Counted': 0.0, 'ExpenseClearingAct': None, 'PurchaseCreditAcc': None, 'EUPurchaseCreditAcc': None, 'ForeignPurchaseCreditAcc': None, 'SalesCreditAcc': None, 'SalesCreditEUAcc': None, 'ExemptedCredits': None, 'SalesCreditForeignAcc': None, 'ExpenseOffsettingAccount': None, 'WipAccount': None, 'ExchangeRateDifferencesAcct': None, 'GoodsClearingAcct': None, 'NegativeInventoryAdjustmentAccount': None, 'CostInflationOffsetAccount': None, 'GLDecreaseAcct': None, 'GLIncreaseAcct': None, 'PAReturnAcct': None, 'PurchaseAcct': None, 'PurchaseOffsetAcct': None, 'ShippedGoodsAccount': None, 'StockInflationOffsetAccount': None, 'StockInflationAdjustAccount': None, 'VATInRevenueAccount': None, 'WipVarianceAccount': None, 'CostInflationAccount': None, 'WHIncomingCenvatAccount': None, 'WHOutgoingCenvatAccount': None, 'StockInTransitAccount': None, 'WipOffsetProfitAndLossAccount': None, 'InventoryOffsetProfitAndLossAccount': None, 'DefaultBin': None, 'DefaultBinEnforced': 'tNO', 'PurchaseBalanceAccount': None, 'ItemCode': 'ACC-0000004', 'ItemCycleCounts': []}, {'MinimalStock': 0.0, 'MaximalStock': 0.0, 'MinimalOrder': 0.0, 'StandardAveragePrice': 0.0, 'Locked': 'tNO', 'InventoryAccount': None, 'CostAccount': None, 'TransferAccount': None, 'RevenuesAccount': None, 'VarienceAccount': None, 'DecreasingAccount': None, 'IncreasingAccount': None, 'ReturningAccount': None, 'ExpensesAccount': None, 'EURevenuesAccount': None, 'EUExpensesAccount': None, 'ForeignRevenueAcc': None, 'ForeignExpensAcc': None, 'ExemptIncomeAcc': None, 'PriceDifferenceAcc': None, 'WarehouseCode': 'WLS', 'InStock': 0.0, 'Committed': 0.0, 'Ordered': 0.0, 'CountedQuantity': 0.0, 'WasCounted': 'tNO', 'UserSignature': 50, 'Counted': 0.0, 'ExpenseClearingAct': None, 'PurchaseCreditAcc': None, 'EUPurchaseCreditAcc': None, 'ForeignPurchaseCreditAcc': None, 'SalesCreditAcc': None, 'SalesCreditEUAcc': None, 'ExemptedCredits': None, 'SalesCreditForeignAcc': None, 'ExpenseOffsettingAccount': None, 'WipAccount': None, 'ExchangeRateDifferencesAcct': None, 'GoodsClearingAcct': None, 'NegativeInventoryAdjustmentAccount': None, 'CostInflationOffsetAccount': None, 'GLDecreaseAcct': None, 'GLIncreaseAcct': None, 'PAReturnAcct': None, 'PurchaseAcct': None, 'PurchaseOffsetAcct': None, 'ShippedGoodsAccount': None, 'StockInflationOffsetAccount': None, 'StockInflationAdjustAccount': None, 'VATInRevenueAccount': None, 'WipVarianceAccount': None, 'CostInflationAccount': None, 'WHIncomingCenvatAccount': None, 'WHOutgoingCenvatAccount': None, 'StockInTransitAccount': None, 'WipOffsetProfitAndLossAccount': None, 'InventoryOffsetProfitAndLossAccount': None, 'DefaultBin': None, 'DefaultBinEnforced': 'tNO', 'PurchaseBalanceAccount': None, 'ItemCode': 'ACC-0000004', 'ItemCycleCounts': []}, {'MinimalStock': 0.0, 'MaximalStock': 0.0, 'MinimalOrder': 0.0, 'StandardAveragePrice': 0.0, 'Locked': 'tNO', 'InventoryAccount': None, 'CostAccount': None, 'TransferAccount': None, 'RevenuesAccount': None, 'VarienceAccount': None, 'DecreasingAccount': None, 'IncreasingAccount': None, 'ReturningAccount': None, 'ExpensesAccount': None, 'EURevenuesAccount': None, 'EUExpensesAccount': None, 'ForeignRevenueAcc': None, 'ForeignExpensAcc': None, 'ExemptIncomeAcc': None, 'PriceDifferenceAcc': None, 'WarehouseCode': 'WW', 'InStock': 0.0, 'Committed': 0.0, 'Ordered': 0.0, 'CountedQuantity': 0.0, 'WasCounted': 'tNO', 'UserSignature': 50, 'Counted': 0.0, 'ExpenseClearingAct': None, 'PurchaseCreditAcc': None, 'EUPurchaseCreditAcc': None, 'ForeignPurchaseCreditAcc': None, 'SalesCreditAcc': None, 'SalesCreditEUAcc': None, 'ExemptedCredits': None, 'SalesCreditForeignAcc': None, 'ExpenseOffsettingAccount': None, 'WipAccount': None, 'ExchangeRateDifferencesAcct': None, 'GoodsClearingAcct': None, 'NegativeInventoryAdjustmentAccount': None, 'CostInflationOffsetAccount': None, 'GLDecreaseAcct': None, 'GLIncreaseAcct': None, 'PAReturnAcct': None, 'PurchaseAcct': None, 'PurchaseOffsetAcct': None, 'ShippedGoodsAccount': None, 'StockInflationOffsetAccount': None, 'StockInflationAdjustAccount': None, 'VATInRevenueAccount': None, 'WipVarianceAccount': None, 'CostInflationAccount': None, 'WHIncomingCenvatAccount': None, 'WHOutgoingCenvatAccount': None, 'StockInTransitAccount': None, 'WipOffsetProfitAndLossAccount': None, 'InventoryOffsetProfitAndLossAccount': None, 'DefaultBin': None, 'DefaultBinEnforced': 'tNO', 'PurchaseBalanceAccount': None, 'ItemCode': 'ACC-0000004', 'ItemCycleCounts': []}, {'MinimalStock': 0.0, 'MaximalStock': 0.0, 'MinimalOrder': 0.0, 'StandardAveragePrice': 0.0, 'Locked': 'tNO', 'InventoryAccount': None, 'CostAccount': None, 'TransferAccount': None, 'RevenuesAccount': None, 'VarienceAccount': None, 'DecreasingAccount': None, 'IncreasingAccount': None, 'ReturningAccount': None, 'ExpensesAccount': None, 'EURevenuesAccount': None, 'EUExpensesAccount': None, 'ForeignRevenueAcc': None, 'ForeignExpensAcc': None, 'ExemptIncomeAcc': None, 'PriceDifferenceAcc': None, 'WarehouseCode': 'WW-CON', 'InStock': 0.0, 'Committed': 0.0, 'Ordered': 0.0, 'CountedQuantity': 0.0, 'WasCounted': 'tNO', 'UserSignature': 50, 'Counted': 0.0, 'ExpenseClearingAct': None, 'PurchaseCreditAcc': None, 'EUPurchaseCreditAcc': None, 'ForeignPurchaseCreditAcc': None, 'SalesCreditAcc': None, 'SalesCreditEUAcc': None, 'ExemptedCredits': None, 'SalesCreditForeignAcc': None, 'ExpenseOffsettingAccount': None, 'WipAccount': None, 'ExchangeRateDifferencesAcct': None, 'GoodsClearingAcct': None, 'NegativeInventoryAdjustmentAccount': None, 'CostInflationOffsetAccount': None, 'GLDecreaseAcct': None, 'GLIncreaseAcct': None, 'PAReturnAcct': None, 'PurchaseAcct': None, 'PurchaseOffsetAcct': None, 'ShippedGoodsAccount': None, 'StockInflationOffsetAccount': None, 'StockInflationAdjustAccount': None, 'VATInRevenueAccount': None, 'WipVarianceAccount': None, 'CostInflationAccount': None, 'WHIncomingCenvatAccount': None, 'WHOutgoingCenvatAccount': None, 'StockInTransitAccount': None, 'WipOffsetProfitAndLossAccount': None, 'InventoryOffsetProfitAndLossAccount': None, 'DefaultBin': None, 'DefaultBinEnforced': 'tNO', 'PurchaseBalanceAccount': None, 'ItemCode': 'ACC-0000004', 'ItemCycleCounts': []}, {'MinimalStock': 0.0, 'MaximalStock': 0.0, 'MinimalOrder': 0.0, 'StandardAveragePrice': 0.0, 'Locked': 'tNO', 'InventoryAccount': None, 'CostAccount': None, 'TransferAccount': None, 'RevenuesAccount': None, 'VarienceAccount': None, 'DecreasingAccount': None, 'IncreasingAccount': None, 'ReturningAccount': None, 'ExpensesAccount': None, 'EURevenuesAccount': None, 'EUExpensesAccount': None, 'ForeignRevenueAcc': None, 'ForeignExpensAcc': None, 'ExemptIncomeAcc': None, 'PriceDifferenceAcc': None, 'WarehouseCode': 'WW-DAM', 'InStock': 0.0, 'Committed': 0.0, 'Ordered': 0.0, 'CountedQuantity': 0.0, 'WasCounted': 'tNO', 'UserSignature': 50, 'Counted': 0.0, 'ExpenseClearingAct': None, 'PurchaseCreditAcc': None, 'EUPurchaseCreditAcc': None, 'ForeignPurchaseCreditAcc': None, 'SalesCreditAcc': None, 'SalesCreditEUAcc': None, 'ExemptedCredits': None, 'SalesCreditForeignAcc': None, 'ExpenseOffsettingAccount': None, 'WipAccount': None, 'ExchangeRateDifferencesAcct': None, 'GoodsClearingAcct': None, 'NegativeInventoryAdjustmentAccount': None, 'CostInflationOffsetAccount': None, 'GLDecreaseAcct': None, 'GLIncreaseAcct': None, 'PAReturnAcct': None, 'PurchaseAcct': None, 'PurchaseOffsetAcct': None, 'ShippedGoodsAccount': None, 'StockInflationOffsetAccount': None, 'StockInflationAdjustAccount': None, 'VATInRevenueAccount': None, 'WipVarianceAccount': None, 'CostInflationAccount': None, 'WHIncomingCenvatAccount': None, 'WHOutgoingCenvatAccount': None, 'StockInTransitAccount': None, 'WipOffsetProfitAndLossAccount': None, 'InventoryOffsetProfitAndLossAccount': None, 'DefaultBin': None, 'DefaultBinEnforced': 'tNO', 'PurchaseBalanceAccount': None, 'ItemCode': 'ACC-0000004', 'ItemCycleCounts': []}, {'MinimalStock': 0.0, 'MaximalStock': 0.0, 'MinimalOrder': 0.0, 'StandardAveragePrice': 0.0, 'Locked': 'tNO', 'InventoryAccount': None, 'CostAccount': None, 'TransferAccount': None, 'RevenuesAccount': None, 'VarienceAccount': None, 'DecreasingAccount': None, 'IncreasingAccount': None, 'ReturningAccount': None, 'ExpensesAccount': None, 'EURevenuesAccount': None, 'EUExpensesAccount': None, 'ForeignRevenueAcc': None, 'ForeignExpensAcc': None, 'ExemptIncomeAcc': None, 'PriceDifferenceAcc': None, 'WarehouseCode': 'WW-REP', 'InStock': 0.0, 'Committed': 0.0, 'Ordered': 0.0, 'CountedQuantity': 0.0, 'WasCounted': 'tNO', 'UserSignature': 50, 'Counted': 0.0, 'ExpenseClearingAct': None, 'PurchaseCreditAcc': None, 'EUPurchaseCreditAcc': None, 'ForeignPurchaseCreditAcc': None, 'SalesCreditAcc': None, 'SalesCreditEUAcc': None, 'ExemptedCredits': None, 'SalesCreditForeignAcc': None, 'ExpenseOffsettingAccount': None, 'WipAccount': None, 'ExchangeRateDifferencesAcct': None, 'GoodsClearingAcct': None, 'NegativeInventoryAdjustmentAccount': None, 'CostInflationOffsetAccount': None, 'GLDecreaseAcct': None, 'GLIncreaseAcct': None, 'PAReturnAcct': None, 'PurchaseAcct': None, 'PurchaseOffsetAcct': None, 'ShippedGoodsAccount': None, 'StockInflationOffsetAccount': None, 'StockInflationAdjustAccount': None, 'VATInRevenueAccount': None, 'WipVarianceAccount': None, 'CostInflationAccount': None, 'WHIncomingCenvatAccount': None, 'WHOutgoingCenvatAccount': None, 'StockInTransitAccount': None, 'WipOffsetProfitAndLossAccount': None, 'InventoryOffsetProfitAndLossAccount': None, 'DefaultBin': None, 'DefaultBinEnforced': 'tNO', 'PurchaseBalanceAccount': None, 'ItemCode': 'ACC-0000004', 'ItemCycleCounts': []}, {'MinimalStock': 0.0, 'MaximalStock': 0.0, 'MinimalOrder': 0.0, 'StandardAveragePrice': 0.0, 'Locked': 'tNO', 'InventoryAccount': None, 'CostAccount': None, 'TransferAccount': None, 'RevenuesAccount': None, 'VarienceAccount': None, 'DecreasingAccount': None, 'IncreasingAccount': None, 'ReturningAccount': None, 'ExpensesAccount': None, 'EURevenuesAccount': None, 'EUExpensesAccount': None, 'ForeignRevenueAcc': None, 'ForeignExpensAcc': None, 'ExemptIncomeAcc': None, 'PriceDifferenceAcc': None, 'WarehouseCode': 'WW-SAM', 'InStock': 0.0, 'Committed': 0.0, 'Ordered': 0.0, 'CountedQuantity': 0.0, 'WasCounted': 'tNO', 'UserSignature': 50, 'Counted': 0.0, 'ExpenseClearingAct': None, 'PurchaseCreditAcc': None, 'EUPurchaseCreditAcc': None, 'ForeignPurchaseCreditAcc': None, 'SalesCreditAcc': None, 'SalesCreditEUAcc': None, 'ExemptedCredits': None, 'SalesCreditForeignAcc': None, 'ExpenseOffsettingAccount': None, 'WipAccount': None, 'ExchangeRateDifferencesAcct': None, 'GoodsClearingAcct': None, 'NegativeInventoryAdjustmentAccount': None, 'CostInflationOffsetAccount': None, 'GLDecreaseAcct': None, 'GLIncreaseAcct': None, 'PAReturnAcct': None, 'PurchaseAcct': None, 'PurchaseOffsetAcct': None, 'ShippedGoodsAccount': None, 'StockInflationOffsetAccount': None, 'StockInflationAdjustAccount': None, 'VATInRevenueAccount': None, 'WipVarianceAccount': None, 'CostInflationAccount': None, 'WHIncomingCenvatAccount': None, 'WHOutgoingCenvatAccount': None, 'StockInTransitAccount': None, 'WipOffsetProfitAndLossAccount': None, 'InventoryOffsetProfitAndLossAccount': None, 'DefaultBin': None, 'DefaultBinEnforced': 'tNO', 'PurchaseBalanceAccount': None, 'ItemCode': 'ACC-0000004', 'ItemCycleCounts': []}, {'MinimalStock': 0.0, 'MaximalStock': 0.0, 'MinimalOrder': 0.0, 'StandardAveragePrice': 0.0, 'Locked': 'tNO', 'InventoryAccount': None, 'CostAccount': None, 'TransferAccount': None, 'RevenuesAccount': None, 'VarienceAccount': None, 'DecreasingAccount': None, 'IncreasingAccount': None, 'ReturningAccount': None, 'ExpensesAccount': None, 'EURevenuesAccount': None, 'EUExpensesAccount': None, 'ForeignRevenueAcc': None, 'ForeignExpensAcc': None, 'ExemptIncomeAcc': None, 'PriceDifferenceAcc': None, 'WarehouseCode': 'WW-WIP', 'InStock': 0.0, 'Committed': 0.0, 'Ordered': 0.0, 'CountedQuantity': 0.0, 'WasCounted': 'tNO', 'UserSignature': 50, 'Counted': 0.0, 'ExpenseClearingAct': None, 'PurchaseCreditAcc': None, 'EUPurchaseCreditAcc': None, 'ForeignPurchaseCreditAcc': None, 'SalesCreditAcc': None, 'SalesCreditEUAcc': None, 'ExemptedCredits': None, 'SalesCreditForeignAcc': None, 'ExpenseOffsettingAccount': None, 'WipAccount': None, 'ExchangeRateDifferencesAcct': None, 'GoodsClearingAcct': None, 'NegativeInventoryAdjustmentAccount': None, 'CostInflationOffsetAccount': None, 'GLDecreaseAcct': None, 'GLIncreaseAcct': None, 'PAReturnAcct': None, 'PurchaseAcct': None, 'PurchaseOffsetAcct': None, 'ShippedGoodsAccount': None, 'StockInflationOffsetAccount': None, 'StockInflationAdjustAccount': None, 'VATInRevenueAccount': None, 'WipVarianceAccount': None, 'CostInflationAccount': None, 'WHIncomingCenvatAccount': None, 'WHOutgoingCenvatAccount': None, 'StockInTransitAccount': None, 'WipOffsetProfitAndLossAccount': None, 'InventoryOffsetProfitAndLossAccount': None, 'DefaultBin': None, 'DefaultBinEnforced': 'tNO', 'PurchaseBalanceAccount': None, 'ItemCode': 'ACC-0000004', 'ItemCycleCounts': []}, {'MinimalStock': 0.0, 'MaximalStock': 0.0, 'MinimalOrder': 0.0, 'StandardAveragePrice': 0.0, 'Locked': 'tNO', 'InventoryAccount': None, 'CostAccount': None, 'TransferAccount': None, 'RevenuesAccount': None, 'VarienceAccount': None, 'DecreasingAccount': None, 'IncreasingAccount': None, 'ReturningAccount': None, 'ExpensesAccount': None, 'EURevenuesAccount': None, 'EUExpensesAccount': None, 'ForeignRevenueAcc': None, 'ForeignExpensAcc': None, 'ExemptIncomeAcc': None, 'PriceDifferenceAcc': None, 'WarehouseCode': 'ZW', 'InStock': 0.0, 'Committed': 0.0, 'Ordered': 0.0, 'CountedQuantity': 0.0, 'WasCounted': 'tNO', 'UserSignature': 50, 'Counted': 0.0, 'ExpenseClearingAct': None, 'PurchaseCreditAcc': None, 'EUPurchaseCreditAcc': None, 'ForeignPurchaseCreditAcc': None, 'SalesCreditAcc': None, 'SalesCreditEUAcc': None, 'ExemptedCredits': None, 'SalesCreditForeignAcc': None, 'ExpenseOffsettingAccount': None, 'WipAccount': None, 'ExchangeRateDifferencesAcct': None, 'GoodsClearingAcct': None, 'NegativeInventoryAdjustmentAccount': None, 'CostInflationOffsetAccount': None, 'GLDecreaseAcct': None, 'GLIncreaseAcct': None, 'PAReturnAcct': None, 'PurchaseAcct': None, 'PurchaseOffsetAcct': None, 'ShippedGoodsAccount': None, 'StockInflationOffsetAccount': None, 'StockInflationAdjustAccount': None, 'VATInRevenueAccount': None, 'WipVarianceAccount': None, 'CostInflationAccount': None, 'WHIncomingCenvatAccount': None, 'WHOutgoingCenvatAccount': None, 'StockInTransitAccount': None, 'WipOffsetProfitAndLossAccount': None, 'InventoryOffsetProfitAndLossAccount': None, 'DefaultBin': None, 'DefaultBinEnforced': 'tNO', 'PurchaseBalanceAccount': None, 'ItemCode': 'ACC-0000004', 'ItemCycleCounts': []}], 'ItemPreferredVendors': [], 'ItemLocalizationInfos': [], 'ItemProjects': [], 'ItemDistributionRules': [], 'ItemAttributeGroups': [], 'ItemDepreciationParameters': [], 'ItemPeriodControls': [], 'ItemUnitOfMeasurementCollection': [{'UoMType': 'iutInventory', 'UoMEntry': 1, 'DefaultBarcode': 0, 'DefaultPackage': None, 'Length1': 0.0, 'Length1Unit': None, 'Length2': 0.0, 'Length2Unit': None, 'Width1': 0.0, 'Width1Unit': None, 'Width2': 0.0, 'Width2Unit': None, 'Height1': 0.0, 'Height1Unit': None, 'Height2': 0.0, 'Height2Unit': None, 'Volume': 0.0, 'VolumeUnit': None, 'Weight1': 0.0, 'Weight1Unit': None, 'Weight2': 0.0, 'Weight2Unit': None, 'ItemUoMPackageCollection': []}, {'UoMType': 'iutPurchasing', 'UoMEntry': 1, 'DefaultBarcode': 0, 'DefaultPackage': None, 'Length1': 0.0, 'Length1Unit': None, 'Length2': 0.0, 'Length2Unit': None, 'Width1': 0.0, 'Width1Unit': None, 'Width2': 0.0, 'Width2Unit': None, 'Height1': 0.0, 'Height1Unit': None, 'Height2': 0.0, 'Height2Unit': None, 'Volume': 0.0, 'VolumeUnit': 2, 'Weight1': 0.0, 'Weight1Unit': None, 'Weight2': 0.0, 'Weight2Unit': None, 'ItemUoMPackageCollection': []}, {'UoMType': 'iutPurchasing', 'UoMEntry': 8, 'DefaultBarcode': None, 'DefaultPackage': None, 'Length1': 0.0, 'Length1Unit': None, 'Length2': 0.0, 'Length2Unit': None, 'Width1': 0.0, 'Width1Unit': None, 'Width2': 0.0, 'Width2Unit': None, 'Height1': 0.0, 'Height1Unit': None, 'Height2': 0.0, 'Height2Unit': None, 'Volume': 0.0, 'VolumeUnit': 4, 'Weight1': 0.0, 'Weight1Unit': None, 'Weight2': 0.0, 'Weight2Unit': None, 'ItemUoMPackageCollection': []}, {'UoMType': 'iutSales', 'UoMEntry': 1, 'DefaultBarcode': 0, 'DefaultPackage': None, 'Length1': 0.0, 'Length1Unit': None, 'Length2': 0.0, 'Length2Unit': None, 'Width1': 0.0, 'Width1Unit': None, 'Width2': 0.0, 'Width2Unit': None, 'Height1': 0.0, 'Height1Unit': None, 'Height2': 0.0, 'Height2Unit': None, 'Volume': 0.0, 'VolumeUnit': 2, 'Weight1': 0.0, 'Weight1Unit': None, 'Weight2': 0.0, 'Weight2Unit': None, 'ItemUoMPackageCollection': []}, {'UoMType': 'iutSales', 'UoMEntry': 8, 'DefaultBarcode': None, 'DefaultPackage': None, 'Length1': 0.0, 'Length1Unit': None, 'Length2': 0.0, 'Length2Unit': None, 'Width1': 0.0, 'Width1Unit': None, 'Width2': 0.0, 'Width2Unit': None, 'Height1': 0.0, 'Height1Unit': None, 'Height2': 0.0, 'Height2Unit': None, 'Volume': 0.0, 'VolumeUnit': 4, 'Weight1': 0.0, 'Weight1Unit': None, 'Weight2': 0.0, 'Weight2Unit': None, 'ItemUoMPackageCollection': []}], 'ItemBarCodeCollection': [], 'ItemIntrastatExtension': {'ItemCode': 'ACC-0000004', 'CommodityCode': None, 'SupplementaryUnit': None, 'FactorOfSupplementaryUnit': 0.0, 'ImportRegionState': 0, 'ExportRegionState': 0, 'ImportNatureOfTransaction': None, 'ExportNatureOfTransaction': None, 'ImportStatisticalProcedure': None, 'ExportStatisticalProcedure': None, 'CountryOfOrigin': None, 'ServiceCode': None, 'Type': 'dDocument_Items', 'ServiceSupplyMethod': 'ssmImmediate', 'ServicePaymentMethod': 'spmOther', 'ImportRegionCountry': 'GB', 'ExportRegionCountry': 'GB', 'UseWeightInCalculation': 'tYES', 'IntrastatRelevant': 'tNO', 'StatisticalCode': None}}, {'ItemCode': 'ACC-0000005', 'ItemName': 'Earring Stand ( Fabric Holder ) 7.5*7.5 CM base + 7.5 CM Heigh', 'ForeignName': None, 'ItemsGroupCode': 110, 'CustomsGroupCode': -1, 'SalesVATGroup': 'X0', 'BarCode': None, 'VatLiable': 'tYES', 'PurchaseItem': 'tYES', 'SalesItem': 'tNO', 'InventoryItem': 'tYES', 'IncomeAccount': None, 'ExemptIncomeAccount': None, 'ExpanseAccount': None, 'Mainsupplier': None, 'SupplierCatalogNo': None, 'DesiredInventory': 0.0, 'MinInventory': 0.0, 'Picture': None, 'User_Text': None, 'SerialNum': None, 'CommissionPercent': 0.0, 'CommissionSum': 0.0, 'CommissionGroup': 0, 'TreeType': 'iNotATree', 'AssetItem': 'tNO', 'DataExportCode': None, 'Manufacturer': -1, 'QuantityOnStock': 50.0, 'QuantityOrderedFromVendors': 0.0, 'QuantityOrderedByCustomers': 0.0, 'ManageSerialNumbers': 'tNO', 'ManageBatchNumbers': 'tNO', 'Valid': 'tYES', 'ValidFrom': None, 'ValidTo': None, 'ValidRemarks': None, 'Frozen': 'tNO', 'FrozenFrom': None, 'FrozenTo': None, 'FrozenRemarks': None, 'SalesUnit': None, 'SalesItemsPerUnit': 1.0, 'SalesPackagingUnit': None, 'SalesQtyPerPackUnit': 1.0, 'SalesUnitLength': None, 'SalesLengthUnit': None, 'SalesUnitWidth': None, 'SalesWidthUnit': None, 'SalesUnitHeight': None, 'SalesHeightUnit': None, 'SalesUnitVolume': 0.0, 'SalesVolumeUnit': 4, 'SalesUnitWeight': None, 'SalesWeightUnit': None, 'PurchaseUnit': None, 'PurchaseItemsPerUnit': 1.0, 'PurchasePackagingUnit': None, 'PurchaseQtyPerPackUnit': 1.0, 'PurchaseUnitLength': None, 'PurchaseLengthUnit': None, 'PurchaseUnitWidth': None, 'PurchaseWidthUnit': None, 'PurchaseUnitHeight': None, 'PurchaseHeightUnit': None, 'PurchaseUnitVolume': 0.0, 'PurchaseVolumeUnit': 4, 'PurchaseUnitWeight': None, 'PurchaseWeightUnit': None, 'PurchaseVATGroup': 'X1', 'SalesFactor1': 1.0, 'SalesFactor2': 1.0, 'SalesFactor3': 1.0, 'SalesFactor4': 1.0, 'PurchaseFactor1': 1.0, 'PurchaseFactor2': 1.0, 'PurchaseFactor3': 1.0, 'PurchaseFactor4': 1.0, 'MovingAveragePrice': 0.0, 'ForeignRevenuesAccount': None, 'ECRevenuesAccount': None, 'ForeignExpensesAccount': None, 'ECExpensesAccount': None, 'AvgStdPrice': 0.0, 'DefaultWarehouse': None, 'ShipType': None, 'GLMethod': 'glm_ItemClass', 'TaxType': 'tt_Yes', 'MaxInventory': 0.0, 'ManageStockByWarehouse': 'tNO', 'PurchaseHeightUnit1': None, 'PurchaseUnitHeight1': None, 'PurchaseLengthUnit1': None, 'PurchaseUnitLength1': None, 'PurchaseWeightUnit1': None, 'PurchaseUnitWeight1': None, 'PurchaseWidthUnit1': None, 'PurchaseUnitWidth1': None, 'SalesHeightUnit1': None, 'SalesUnitHeight1': None, 'SalesLengthUnit1': None, 'SalesUnitLength1': None, 'SalesWeightUnit1': None, 'SalesUnitWeight1': None, 'SalesWidthUnit1': None, 'SalesUnitWidth1': None, 'ForceSelectionOfSerialNumber': 'tYES', 'ManageSerialNumbersOnReleaseOnly': 'tNO', 'WTLiable': 'tNO', 'CostAccountingMethod': 'bis_MovingAverage', 'SWW': None, 'WarrantyTemplate': '', 'IndirectTax': 'tNO', 'ArTaxCode': None, 'ApTaxCode': None, 'BaseUnitName': None, 'ItemCountryOrg': None, 'IssueMethod': 'im_Backflush', 'SRIAndBatchManageMethod': 'bomm_OnEveryTransaction', 'IsPhantom': 'tNO', 'InventoryUOM': 'Piece', 'PlanningSystem': 'bop_None', 'ProcurementMethod': 'bom_Buy', 'ComponentWarehouse': 'bomcw_BOM', 'OrderIntervals': None, 'OrderMultiple': 0.0, 'LeadTime': None, 'MinOrderQuantity': 0.0, 'ItemType': 'itItems', 'ItemClass': 'itcMaterial', 'OutgoingServiceCode': -1, 'IncomingServiceCode': -1, 'ServiceGroup': -1, 'NCMCode': -1, 'MaterialType': 'mt_FinishedGoods', 'MaterialGroup': -1, 'ProductSource': '', 'Properties1': 'tNO', 'Properties2': 'tNO', 'Properties3': 'tNO', 'Properties4': 'tNO', 'Properties5': 'tNO', 'Properties6': 'tNO', 'Properties7': 'tNO', 'Properties8': 'tNO', 'Properties9': 'tNO', 'Properties10': 'tNO', 'Properties11': 'tNO', 'Properties12': 'tNO', 'Properties13': 'tNO', 'Properties14': 'tNO', 'Properties15': 'tNO', 'Properties16': 'tNO', 'Properties17': 'tNO', 'Properties18': 'tNO', 'Properties19': 'tNO', 'Properties20': 'tNO', 'Properties21': 'tNO', 'Properties22': 'tNO', 'Properties23': 'tNO', 'Properties24': 'tNO', 'Properties25': 'tNO', 'Properties26': 'tNO', 'Properties27': 'tNO', 'Properties28': 'tNO', 'Properties29': 'tNO', 'Properties30': 'tNO', 'Properties31': 'tNO', 'Properties32': 'tNO', 'Properties33': 'tNO', 'Properties34': 'tNO', 'Properties35': 'tNO', 'Properties36': 'tNO', 'Properties37': 'tNO', 'Properties38': 'tNO', 'Properties39': 'tNO', 'Properties40': 'tNO', 'Properties41': 'tNO', 'Properties42': 'tNO', 'Properties43': 'tNO', 'Properties44': 'tNO', 'Properties45': 'tNO', 'Properties46': 'tNO', 'Properties47': 'tNO', 'Properties48': 'tNO', 'Properties49': 'tNO', 'Properties50': 'tNO', 'Properties51': 'tNO', 'Properties52': 'tNO', 'Properties53': 'tNO', 'Properties54': 'tNO', 'Properties55': 'tNO', 'Properties56': 'tNO', 'Properties57': 'tNO', 'Properties58': 'tNO', 'Properties59': 'tNO', 'Properties60': 'tNO', 'Properties61': 'tNO', 'Properties62': 'tNO', 'Properties63': 'tNO', 'Properties64': 'tNO', 'AutoCreateSerialNumbersOnRelease': 'tNO', 'DNFEntry': -1, 'GTSItemSpec': None, 'GTSItemTaxCategory': None, 'FuelID': None, 'BeverageTableCode': '', 'BeverageGroupCode': '', 'BeverageCommercialBrandCode': None, 'Series': 119, 'ToleranceDays': None, 'TypeOfAdvancedRules': 'toarGeneral', 'IssuePrimarilyBy': 'ipbBinLocations', 'NoDiscounts': 'tNO', 'AssetClass': '', 'AssetGroup': '', 'InventoryNumber': '', 'Technician': None, 'Employee': None, 'Location': None, 'AssetStatus': 'New', 'CapitalizationDate': None, 'StatisticalAsset': 'tNO', 'Cession': 'tNO', 'DeactivateAfterUsefulLife': 'tNO', 'ManageByQuantity': 'tNO', 'UoMGroupEntry': 1, 'InventoryUoMEntry': 1, 'DefaultSalesUoMEntry': None, 'DefaultPurchasingUoMEntry': None, 'DepreciationGroup': None, 'AssetSerialNumber': '', 'InventoryWeight': None, 'InventoryWeightUnit': None, 'InventoryWeight1': None, 'InventoryWeightUnit1': None, 'DefaultCountingUnit': 'Piece', 'CountingItemsPerUnit': 1.0, 'DefaultCountingUoMEntry': 1, 'Excisable': 'tNO', 'ChapterID': -1, 'ScsCode': None, 'SpProdType': None, 'ProdStdCost': 0.0, 'InCostRollup': 'tYES', 'VirtualAssetItem': 'tNO', 'EnforceAssetSerialNumbers': 'tNO', 'AttachmentEntry': None, 'LinkedResource': None, 'UpdateDate': '2025-01-26', 'UpdateTime': '09:40:52', 'GSTRelevnt': 'tNO', 'SACEntry': -1, 'GSTTaxCategory': 'gtc_Regular', 'ServiceCategoryEntry': -1, 'CapitalGoodsOnHoldPercent': 0.0, 'CapitalGoodsOnHoldLimit': 0.0, 'AssessableValue': 0.0, 'AssVal4WTR': 0.0, 'SOIExcisable': 'se_NotExcisable', 'TNVED': None, 'ImportedItem': 'tNO', 'PricingUnit': 1, 'CreateDate': '2025-01-26', 'CreateTime': '09:40:52', 'U_MfgH': None, 'U_Collection': None, 'U_OldCode': None, 'U_ItemsCat': None, 'U_NumberofSet': None, 'U_NileCode': None, 'U_TransferProductionLinkExclude': None, 'U_SBO_CodeType': 'GS1', 'U_SBO_EGSCode': None, 'U_ShopifyColor': None, 'U_SalesChannel': None, 'U_ShopifyItemIDLocal': None, 'U_ShopifyItemIDInternational': None, 'U_ParentCommercialName': None, 'ItemPrices': [{'PriceList': 1, 'Price': 0.0, 'Currency': None, 'AdditionalPrice1': 0.0, 'AdditionalCurrency1': None, 'AdditionalPrice2': 0.0, 'AdditionalCurrency2': None, 'BasePriceList': 1, 'Factor': 1.0, 'UoMPrices': []}, {'PriceList': 2, 'Price': 0.0, 'Currency': None, 'AdditionalPrice1': 0.0, 'AdditionalCurrency1': None, 'AdditionalPrice2': 0.0, 'AdditionalCurrency2': None, 'BasePriceList': 1, 'Factor': 0.4, 'UoMPrices': []}, {'PriceList': 3, 'Price': 0.0, 'Currency': None, 'AdditionalPrice1': 0.0, 'AdditionalCurrency1': None, 'AdditionalPrice2': 0.0, 'AdditionalCurrency2': None, 'BasePriceList': 3, 'Factor': 1.0, 'UoMPrices': []}, {'PriceList': 4, 'Price': 0.0, 'Currency': None, 'AdditionalPrice1': 0.0, 'AdditionalCurrency1': None, 'AdditionalPrice2': 0.0, 'AdditionalCurrency2': None, 'BasePriceList': 4, 'Factor': 1.0, 'UoMPrices': []}, {'PriceList': 5, 'Price': 0.0, 'Currency': None, 'AdditionalPrice1': 0.0, 'AdditionalCurrency1': None, 'AdditionalPrice2': 0.0, 'AdditionalCurrency2': None, 'BasePriceList': 5, 'Factor': 1.0, 'UoMPrices': []}, {'PriceList': 6, 'Price': 0.0, 'Currency': None, 'AdditionalPrice1': 0.0, 'AdditionalCurrency1': None, 'AdditionalPrice2': 0.0, 'AdditionalCurrency2': None, 'BasePriceList': 6, 'Factor': 1.0, 'UoMPrices': []}, {'PriceList': 7, 'Price': 0.0, 'Currency': None, 'AdditionalPrice1': 0.0, 'AdditionalCurrency1': None, 'AdditionalPrice2': 0.0, 'AdditionalCurrency2': None, 'BasePriceList': 7, 'Factor': 1.0, 'UoMPrices': []}, {'PriceList': 8, 'Price': 0.0, 'Currency': None, 'AdditionalPrice1': 0.0, 'AdditionalCurrency1': None, 'AdditionalPrice2': 0.0, 'AdditionalCurrency2': None, 'BasePriceList': 8, 'Factor': 1.0, 'UoMPrices': []}, {'PriceList': 9, 'Price': 0.0, 'Currency': None, 'AdditionalPrice1': 0.0, 'AdditionalCurrency1': None, 'AdditionalPrice2': 0.0, 'AdditionalCurrency2': None, 'BasePriceList': 9, 'Factor': 1.0, 'UoMPrices': []}, {'PriceList': 10, 'Price': 0.0, 'Currency': None, 'AdditionalPrice1': 0.0, 'AdditionalCurrency1': None, 'AdditionalPrice2': 0.0, 'AdditionalCurrency2': None, 'BasePriceList': 10, 'Factor': 1.0, 'UoMPrices': []}], 'ItemWarehouseInfoCollection': [{'MinimalStock': 0.0, 'MaximalStock': 0.0, 'MinimalOrder': 0.0, 'StandardAveragePrice': 180.0, 'Locked': 'tNO', 'InventoryAccount': None, 'CostAccount': None, 'TransferAccount': None, 'RevenuesAccount': None, 'VarienceAccount': None, 'DecreasingAccount': None, 'IncreasingAccount': None, 'ReturningAccount': None, 'ExpensesAccount': None, 'EURevenuesAccount': None, 'EUExpensesAccount': None, 'ForeignRevenueAcc': None, 'ForeignExpensAcc': None, 'ExemptIncomeAcc': None, 'PriceDifferenceAcc': None, 'WarehouseCode': '5A', 'InStock': 25.0, 'Committed': 0.0, 'Ordered': 0.0, 'CountedQuantity': 0.0, 'WasCounted': 'tNO', 'UserSignature': 50, 'Counted': 0.0, 'ExpenseClearingAct': None, 'PurchaseCreditAcc': None, 'EUPurchaseCreditAcc': None, 'ForeignPurchaseCreditAcc': None, 'SalesCreditAcc': None, 'SalesCreditEUAcc': None, 'ExemptedCredits': None, 'SalesCreditForeignAcc': None, 'ExpenseOffsettingAccount': None, 'WipAccount': None, 'ExchangeRateDifferencesAcct': None, 'GoodsClearingAcct': None, 'NegativeInventoryAdjustmentAccount': None, 'CostInflationOffsetAccount': None, 'GLDecreaseAcct': None, 'GLIncreaseAcct': None, 'PAReturnAcct': None, 'PurchaseAcct': None, 'PurchaseOffsetAcct': None, 'ShippedGoodsAccount': None, 'StockInflationOffsetAccount': None, 'StockInflationAdjustAccount': None, 'VATInRevenueAccount': None, 'WipVarianceAccount': None, 'CostInflationAccount': None, 'WHIncomingCenvatAccount': None, 'WHOutgoingCenvatAccount': None, 'StockInTransitAccount': None, 'WipOffsetProfitAndLossAccount': None, 'InventoryOffsetProfitAndLossAccount': None, 'DefaultBin': None, 'DefaultBinEnforced': 'tNO', 'PurchaseBalanceAccount': None, 'ItemCode': 'ACC-0000005', 'ItemCycleCounts': []}, {'MinimalStock': 0.0, 'MaximalStock': 0.0, 'MinimalOrder': 0.0, 'StandardAveragePrice': 180.0, 'Locked': 'tNO', 'InventoryAccount': None, 'CostAccount': None, 'TransferAccount': None, 'RevenuesAccount': None, 'VarienceAccount': None, 'DecreasingAccount': None, 'IncreasingAccount': None, 'ReturningAccount': None, 'ExpensesAccount': None, 'EURevenuesAccount': None, 'EUExpensesAccount': None, 'ForeignRevenueAcc': None, 'ForeignExpensAcc': None, 'ExemptIncomeAcc': None, 'PriceDifferenceAcc': None, 'WarehouseCode': 'Arkan', 'InStock': 25.0, 'Committed': 0.0, 'Ordered': 0.0, 'CountedQuantity': 0.0, 'WasCounted': 'tNO', 'UserSignature': 50, 'Counted': 0.0, 'ExpenseClearingAct': None, 'PurchaseCreditAcc': None, 'EUPurchaseCreditAcc': None, 'ForeignPurchaseCreditAcc': None, 'SalesCreditAcc': None, 'SalesCreditEUAcc': None, 'ExemptedCredits': None, 'SalesCreditForeignAcc': None, 'ExpenseOffsettingAccount': None, 'WipAccount': None, 'ExchangeRateDifferencesAcct': None, 'GoodsClearingAcct': None, 'NegativeInventoryAdjustmentAccount': None, 'CostInflationOffsetAccount': None, 'GLDecreaseAcct': None, 'GLIncreaseAcct': None, 'PAReturnAcct': None, 'PurchaseAcct': None, 'PurchaseOffsetAcct': None, 'ShippedGoodsAccount': None, 'StockInflationOffsetAccount': None, 'StockInflationAdjustAccount': None, 'VATInRevenueAccount': None, 'WipVarianceAccount': None, 'CostInflationAccount': None, 'WHIncomingCenvatAccount': None, 'WHOutgoingCenvatAccount': None, 'StockInTransitAccount': None, 'WipOffsetProfitAndLossAccount': None, 'InventoryOffsetProfitAndLossAccount': None, 'DefaultBin': None, 'DefaultBinEnforced': 'tNO', 'PurchaseBalanceAccount': None, 'ItemCode': 'ACC-0000005', 'ItemCycleCounts': []}, {'MinimalStock': 0.0, 'MaximalStock': 0.0, 'MinimalOrder': 0.0, 'StandardAveragePrice': 0.0, 'Locked': 'tNO', 'InventoryAccount': None, 'CostAccount': None, 'TransferAccount': None, 'RevenuesAccount': None, 'VarienceAccount': None, 'DecreasingAccount': None, 'IncreasingAccount': None, 'ReturningAccount': None, 'ExpensesAccount': None, 'EURevenuesAccount': None, 'EUExpensesAccount': None, 'ForeignRevenueAcc': None, 'ForeignExpensAcc': None, 'ExemptIncomeAcc': None, 'PriceDifferenceAcc': None, 'WarehouseCode': 'DIP', 'InStock': 0.0, 'Committed': 0.0, 'Ordered': 0.0, 'CountedQuantity': 0.0, 'WasCounted': 'tNO', 'UserSignature': 50, 'Counted': 0.0, 'ExpenseClearingAct': None, 'PurchaseCreditAcc': None, 'EUPurchaseCreditAcc': None, 'ForeignPurchaseCreditAcc': None, 'SalesCreditAcc': None, 'SalesCreditEUAcc': None, 'ExemptedCredits': None, 'SalesCreditForeignAcc': None, 'ExpenseOffsettingAccount': None, 'WipAccount': None, 'ExchangeRateDifferencesAcct': None, 'GoodsClearingAcct': None, 'NegativeInventoryAdjustmentAccount': None, 'CostInflationOffsetAccount': None, 'GLDecreaseAcct': None, 'GLIncreaseAcct': None, 'PAReturnAcct': None, 'PurchaseAcct': None, 'PurchaseOffsetAcct': None, 'ShippedGoodsAccount': None, 'StockInflationOffsetAccount': None, 'StockInflationAdjustAccount': None, 'VATInRevenueAccount': None, 'WipVarianceAccount': None, 'CostInflationAccount': None, 'WHIncomingCenvatAccount': None, 'WHOutgoingCenvatAccount': None, 'StockInTransitAccount': None, 'WipOffsetProfitAndLossAccount': None, 'InventoryOffsetProfitAndLossAccount': None, 'DefaultBin': None, 'DefaultBinEnforced': 'tNO', 'PurchaseBalanceAccount': None, 'ItemCode': 'ACC-0000005', 'ItemCycleCounts': []}, {'MinimalStock': 0.0, 'MaximalStock': 0.0, 'MinimalOrder': 0.0, 'StandardAveragePrice': 180.0, 'Locked': 'tNO', 'InventoryAccount': None, 'CostAccount': None, 'TransferAccount': None, 'RevenuesAccount': None, 'VarienceAccount': None, 'DecreasingAccount': None, 'IncreasingAccount': None, 'ReturningAccount': None, 'ExpensesAccount': None, 'EURevenuesAccount': None, 'EUExpensesAccount': None, 'ForeignRevenueAcc': None, 'ForeignExpensAcc': None, 'ExemptIncomeAcc': None, 'PriceDifferenceAcc': None, 'WarehouseCode': 'INC', 'InStock': 0.0, 'Committed': 0.0, 'Ordered': 0.0, 'CountedQuantity': 0.0, 'WasCounted': 'tNO', 'UserSignature': 50, 'Counted': 0.0, 'ExpenseClearingAct': None, 'PurchaseCreditAcc': None, 'EUPurchaseCreditAcc': None, 'ForeignPurchaseCreditAcc': None, 'SalesCreditAcc': None, 'SalesCreditEUAcc': None, 'ExemptedCredits': None, 'SalesCreditForeignAcc': None, 'ExpenseOffsettingAccount': None, 'WipAccount': None, 'ExchangeRateDifferencesAcct': None, 'GoodsClearingAcct': None, 'NegativeInventoryAdjustmentAccount': None, 'CostInflationOffsetAccount': None, 'GLDecreaseAcct': None, 'GLIncreaseAcct': None, 'PAReturnAcct': None, 'PurchaseAcct': None, 'PurchaseOffsetAcct': None, 'ShippedGoodsAccount': None, 'StockInflationOffsetAccount': None, 'StockInflationAdjustAccount': None, 'VATInRevenueAccount': None, 'WipVarianceAccount': None, 'CostInflationAccount': None, 'WHIncomingCenvatAccount': None, 'WHOutgoingCenvatAccount': None, 'StockInTransitAccount': None, 'WipOffsetProfitAndLossAccount': None, 'InventoryOffsetProfitAndLossAccount': None, 'DefaultBin': None, 'DefaultBinEnforced': 'tNO', 'PurchaseBalanceAccount': None, 'ItemCode': 'ACC-0000005', 'ItemCycleCounts': []}, {'MinimalStock': 0.0, 'MaximalStock': 0.0, 'MinimalOrder': 0.0, 'StandardAveragePrice': 0.0, 'Locked': 'tNO', 'InventoryAccount': None, 'CostAccount': None, 'TransferAccount': None, 'RevenuesAccount': None, 'VarienceAccount': None, 'DecreasingAccount': None, 'IncreasingAccount': None, 'ReturningAccount': None, 'ExpensesAccount': None, 'EURevenuesAccount': None, 'EUExpensesAccount': None, 'ForeignRevenueAcc': None, 'ForeignExpensAcc': None, 'ExemptIncomeAcc': None, 'PriceDifferenceAcc': None, 'WarehouseCode': 'ONL', 'InStock': 0.0, 'Committed': 0.0, 'Ordered': 0.0, 'CountedQuantity': 0.0, 'WasCounted': 'tNO', 'UserSignature': 50, 'Counted': 0.0, 'ExpenseClearingAct': None, 'PurchaseCreditAcc': None, 'EUPurchaseCreditAcc': None, 'ForeignPurchaseCreditAcc': None, 'SalesCreditAcc': None, 'SalesCreditEUAcc': None, 'ExemptedCredits': None, 'SalesCreditForeignAcc': None, 'ExpenseOffsettingAccount': None, 'WipAccount': None, 'ExchangeRateDifferencesAcct': None, 'GoodsClearingAcct': None, 'NegativeInventoryAdjustmentAccount': None, 'CostInflationOffsetAccount': None, 'GLDecreaseAcct': None, 'GLIncreaseAcct': None, 'PAReturnAcct': None, 'PurchaseAcct': None, 'PurchaseOffsetAcct': None, 'ShippedGoodsAccount': None, 'StockInflationOffsetAccount': None, 'StockInflationAdjustAccount': None, 'VATInRevenueAccount': None, 'WipVarianceAccount': None, 'CostInflationAccount': None, 'WHIncomingCenvatAccount': None, 'WHOutgoingCenvatAccount': None, 'StockInTransitAccount': None, 'WipOffsetProfitAndLossAccount': None, 'InventoryOffsetProfitAndLossAccount': None, 'DefaultBin': None, 'DefaultBinEnforced': 'tNO', 'PurchaseBalanceAccount': None, 'ItemCode': 'ACC-0000005', 'ItemCycleCounts': []}, {'MinimalStock': 0.0, 'MaximalStock': 0.0, 'MinimalOrder': 0.0, 'StandardAveragePrice': 0.0, 'Locked': 'tNO', 'InventoryAccount': None, 'CostAccount': None, 'TransferAccount': None, 'RevenuesAccount': None, 'VarienceAccount': None, 'DecreasingAccount': None, 'IncreasingAccount': None, 'ReturningAccount': None, 'ExpensesAccount': None, 'EURevenuesAccount': None, 'EUExpensesAccount': None, 'ForeignRevenueAcc': None, 'ForeignExpensAcc': None, 'ExemptIncomeAcc': None, 'PriceDifferenceAcc': None, 'WarehouseCode': 'PHO', 'InStock': 0.0, 'Committed': 0.0, 'Ordered': 0.0, 'CountedQuantity': 0.0, 'WasCounted': 'tNO', 'UserSignature': 50, 'Counted': 0.0, 'ExpenseClearingAct': None, 'PurchaseCreditAcc': None, 'EUPurchaseCreditAcc': None, 'ForeignPurchaseCreditAcc': None, 'SalesCreditAcc': None, 'SalesCreditEUAcc': None, 'ExemptedCredits': None, 'SalesCreditForeignAcc': None, 'ExpenseOffsettingAccount': None, 'WipAccount': None, 'ExchangeRateDifferencesAcct': None, 'GoodsClearingAcct': None, 'NegativeInventoryAdjustmentAccount': None, 'CostInflationOffsetAccount': None, 'GLDecreaseAcct': None, 'GLIncreaseAcct': None, 'PAReturnAcct': None, 'PurchaseAcct': None, 'PurchaseOffsetAcct': None, 'ShippedGoodsAccount': None, 'StockInflationOffsetAccount': None, 'StockInflationAdjustAccount': None, 'VATInRevenueAccount': None, 'WipVarianceAccount': None, 'CostInflationAccount': None, 'WHIncomingCenvatAccount': None, 'WHOutgoingCenvatAccount': None, 'StockInTransitAccount': None, 'WipOffsetProfitAndLossAccount': None, 'InventoryOffsetProfitAndLossAccount': None, 'DefaultBin': None, 'DefaultBinEnforced': 'tNO', 'PurchaseBalanceAccount': None, 'ItemCode': 'ACC-0000005', 'ItemCycleCounts': []}, {'MinimalStock': 0.0, 'MaximalStock': 0.0, 'MinimalOrder': 0.0, 'StandardAveragePrice': 0.0, 'Locked': 'tNO', 'InventoryAccount': None, 'CostAccount': None, 'TransferAccount': None, 'RevenuesAccount': None, 'VarienceAccount': None, 'DecreasingAccount': None, 'IncreasingAccount': None, 'ReturningAccount': None, 'ExpensesAccount': None, 'EURevenuesAccount': None, 'EUExpensesAccount': None, 'ForeignRevenueAcc': None, 'ForeignExpensAcc': None, 'ExemptIncomeAcc': None, 'PriceDifferenceAcc': None, 'WarehouseCode': 'PHO-EX', 'InStock': 0.0, 'Committed': 0.0, 'Ordered': 0.0, 'CountedQuantity': 0.0, 'WasCounted': 'tNO', 'UserSignature': 1, 'Counted': 0.0, 'ExpenseClearingAct': None, 'PurchaseCreditAcc': None, 'EUPurchaseCreditAcc': None, 'ForeignPurchaseCreditAcc': None, 'SalesCreditAcc': None, 'SalesCreditEUAcc': None, 'ExemptedCredits': None, 'SalesCreditForeignAcc': None, 'ExpenseOffsettingAccount': None, 'WipAccount': None, 'ExchangeRateDifferencesAcct': None, 'GoodsClearingAcct': None, 'NegativeInventoryAdjustmentAccount': None, 'CostInflationOffsetAccount': None, 'GLDecreaseAcct': None, 'GLIncreaseAcct': None, 'PAReturnAcct': None, 'PurchaseAcct': None, 'PurchaseOffsetAcct': None, 'ShippedGoodsAccount': None, 'StockInflationOffsetAccount': None, 'StockInflationAdjustAccount': None, 'VATInRevenueAccount': None, 'WipVarianceAccount': None, 'CostInflationAccount': None, 'WHIncomingCenvatAccount': None, 'WHOutgoingCenvatAccount': None, 'StockInTransitAccount': None, 'WipOffsetProfitAndLossAccount': None, 'InventoryOffsetProfitAndLossAccount': None, 'DefaultBin': None, 'DefaultBinEnforced': 'tNO', 'PurchaseBalanceAccount': None, 'ItemCode': 'ACC-0000005', 'ItemCycleCounts': []}, {'MinimalStock': 0.0, 'MaximalStock': 0.0, 'MinimalOrder': 0.0, 'StandardAveragePrice': 0.0, 'Locked': 'tNO', 'InventoryAccount': None, 'CostAccount': None, 'TransferAccount': None, 'RevenuesAccount': None, 'VarienceAccount': None, 'DecreasingAccount': None, 'IncreasingAccount': None, 'ReturningAccount': None, 'ExpensesAccount': None, 'EURevenuesAccount': None, 'EUExpensesAccount': None, 'ForeignRevenueAcc': None, 'ForeignExpensAcc': None, 'ExemptIncomeAcc': None, 'PriceDifferenceAcc': None, 'WarehouseCode': 'PHO-IN', 'InStock': 0.0, 'Committed': 0.0, 'Ordered': 0.0, 'CountedQuantity': 0.0, 'WasCounted': 'tNO', 'UserSignature': 1, 'Counted': 0.0, 'ExpenseClearingAct': None, 'PurchaseCreditAcc': None, 'EUPurchaseCreditAcc': None, 'ForeignPurchaseCreditAcc': None, 'SalesCreditAcc': None, 'SalesCreditEUAcc': None, 'ExemptedCredits': None, 'SalesCreditForeignAcc': None, 'ExpenseOffsettingAccount': None, 'WipAccount': None, 'ExchangeRateDifferencesAcct': None, 'GoodsClearingAcct': None, 'NegativeInventoryAdjustmentAccount': None, 'CostInflationOffsetAccount': None, 'GLDecreaseAcct': None, 'GLIncreaseAcct': None, 'PAReturnAcct': None, 'PurchaseAcct': None, 'PurchaseOffsetAcct': None, 'ShippedGoodsAccount': None, 'StockInflationOffsetAccount': None, 'StockInflationAdjustAccount': None, 'VATInRevenueAccount': None, 'WipVarianceAccount': None, 'CostInflationAccount': None, 'WHIncomingCenvatAccount': None, 'WHOutgoingCenvatAccount': None, 'StockInTransitAccount': None, 'WipOffsetProfitAndLossAccount': None, 'InventoryOffsetProfitAndLossAccount': None, 'DefaultBin': None, 'DefaultBinEnforced': 'tNO', 'PurchaseBalanceAccount': None, 'ItemCode': 'ACC-0000005', 'ItemCycleCounts': []}, {'MinimalStock': 0.0, 'MaximalStock': 0.0, 'MinimalOrder': 0.0, 'StandardAveragePrice': 0.0, 'Locked': 'tNO', 'InventoryAccount': None, 'CostAccount': None, 'TransferAccount': None, 'RevenuesAccount': None, 'VarienceAccount': None, 'DecreasingAccount': None, 'IncreasingAccount': None, 'ReturningAccount': None, 'ExpensesAccount': None, 'EURevenuesAccount': None, 'EUExpensesAccount': None, 'ForeignRevenueAcc': None, 'ForeignExpensAcc': None, 'ExemptIncomeAcc': None, 'PriceDifferenceAcc': None, 'WarehouseCode': 'RTW', 'InStock': 0.0, 'Committed': 0.0, 'Ordered': 0.0, 'CountedQuantity': 0.0, 'WasCounted': 'tNO', 'UserSignature': 50, 'Counted': 0.0, 'ExpenseClearingAct': None, 'PurchaseCreditAcc': None, 'EUPurchaseCreditAcc': None, 'ForeignPurchaseCreditAcc': None, 'SalesCreditAcc': None, 'SalesCreditEUAcc': None, 'ExemptedCredits': None, 'SalesCreditForeignAcc': None, 'ExpenseOffsettingAccount': None, 'WipAccount': None, 'ExchangeRateDifferencesAcct': None, 'GoodsClearingAcct': None, 'NegativeInventoryAdjustmentAccount': None, 'CostInflationOffsetAccount': None, 'GLDecreaseAcct': None, 'GLIncreaseAcct': None, 'PAReturnAcct': None, 'PurchaseAcct': None, 'PurchaseOffsetAcct': None, 'ShippedGoodsAccount': None, 'StockInflationOffsetAccount': None, 'StockInflationAdjustAccount': None, 'VATInRevenueAccount': None, 'WipVarianceAccount': None, 'CostInflationAccount': None, 'WHIncomingCenvatAccount': None, 'WHOutgoingCenvatAccount': None, 'StockInTransitAccount': None, 'WipOffsetProfitAndLossAccount': None, 'InventoryOffsetProfitAndLossAccount': None, 'DefaultBin': None, 'DefaultBinEnforced': 'tNO', 'PurchaseBalanceAccount': None, 'ItemCode': 'ACC-0000005', 'ItemCycleCounts': []}, {'MinimalStock': 0.0, 'MaximalStock': 0.0, 'MinimalOrder': 0.0, 'StandardAveragePrice': 0.0, 'Locked': 'tNO', 'InventoryAccount': None, 'CostAccount': None, 'TransferAccount': None, 'RevenuesAccount': None, 'VarienceAccount': None, 'DecreasingAccount': None, 'IncreasingAccount': None, 'ReturningAccount': None, 'ExpensesAccount': None, 'EURevenuesAccount': None, 'EUExpensesAccount': None, 'ForeignRevenueAcc': None, 'ForeignExpensAcc': None, 'ExemptIncomeAcc': None, 'PriceDifferenceAcc': None, 'WarehouseCode': 'RTWH', 'InStock': 0.0, 'Committed': 0.0, 'Ordered': 0.0, 'CountedQuantity': 0.0, 'WasCounted': 'tNO', 'UserSignature': 1, 'Counted': 0.0, 'ExpenseClearingAct': None, 'PurchaseCreditAcc': None, 'EUPurchaseCreditAcc': None, 'ForeignPurchaseCreditAcc': None, 'SalesCreditAcc': None, 'SalesCreditEUAcc': None, 'ExemptedCredits': None, 'SalesCreditForeignAcc': None, 'ExpenseOffsettingAccount': None, 'WipAccount': None, 'ExchangeRateDifferencesAcct': None, 'GoodsClearingAcct': None, 'NegativeInventoryAdjustmentAccount': None, 'CostInflationOffsetAccount': None, 'GLDecreaseAcct': None, 'GLIncreaseAcct': None, 'PAReturnAcct': None, 'PurchaseAcct': None, 'PurchaseOffsetAcct': None, 'ShippedGoodsAccount': None, 'StockInflationOffsetAccount': None, 'StockInflationAdjustAccount': None, 'VATInRevenueAccount': None, 'WipVarianceAccount': None, 'CostInflationAccount': None, 'WHIncomingCenvatAccount': None, 'WHOutgoingCenvatAccount': None, 'StockInTransitAccount': None, 'WipOffsetProfitAndLossAccount': None, 'InventoryOffsetProfitAndLossAccount': None, 'DefaultBin': None, 'DefaultBinEnforced': 'tNO', 'PurchaseBalanceAccount': None, 'ItemCode': 'ACC-0000005', 'ItemCycleCounts': []}, {'MinimalStock': 0.0, 'MaximalStock': 0.0, 'MinimalOrder': 0.0, 'StandardAveragePrice': 0.0, 'Locked': 'tNO', 'InventoryAccount': None, 'CostAccount': None, 'TransferAccount': None, 'RevenuesAccount': None, 'VarienceAccount': None, 'DecreasingAccount': None, 'IncreasingAccount': None, 'ReturningAccount': None, 'ExpensesAccount': None, 'EURevenuesAccount': None, 'EUExpensesAccount': None, 'ForeignRevenueAcc': None, 'ForeignExpensAcc': None, 'ExemptIncomeAcc': None, 'PriceDifferenceAcc': None, 'WarehouseCode': 'SW', 'InStock': 0.0, 'Committed': 0.0, 'Ordered': 0.0, 'CountedQuantity': 0.0, 'WasCounted': 'tNO', 'UserSignature': 50, 'Counted': 0.0, 'ExpenseClearingAct': None, 'PurchaseCreditAcc': None, 'EUPurchaseCreditAcc': None, 'ForeignPurchaseCreditAcc': None, 'SalesCreditAcc': None, 'SalesCreditEUAcc': None, 'ExemptedCredits': None, 'SalesCreditForeignAcc': None, 'ExpenseOffsettingAccount': None, 'WipAccount': None, 'ExchangeRateDifferencesAcct': None, 'GoodsClearingAcct': None, 'NegativeInventoryAdjustmentAccount': None, 'CostInflationOffsetAccount': None, 'GLDecreaseAcct': None, 'GLIncreaseAcct': None, 'PAReturnAcct': None, 'PurchaseAcct': None, 'PurchaseOffsetAcct': None, 'ShippedGoodsAccount': None, 'StockInflationOffsetAccount': None, 'StockInflationAdjustAccount': None, 'VATInRevenueAccount': None, 'WipVarianceAccount': None, 'CostInflationAccount': None, 'WHIncomingCenvatAccount': None, 'WHOutgoingCenvatAccount': None, 'StockInTransitAccount': None, 'WipOffsetProfitAndLossAccount': None, 'InventoryOffsetProfitAndLossAccount': None, 'DefaultBin': None, 'DefaultBinEnforced': 'tNO', 'PurchaseBalanceAccount': None, 'ItemCode': 'ACC-0000005', 'ItemCycleCounts': []}, {'MinimalStock': 0.0, 'MaximalStock': 0.0, 'MinimalOrder': 0.0, 'StandardAveragePrice': 0.0, 'Locked': 'tNO', 'InventoryAccount': None, 'CostAccount': None, 'TransferAccount': None, 'RevenuesAccount': None, 'VarienceAccount': None, 'DecreasingAccount': None, 'IncreasingAccount': None, 'ReturningAccount': None, 'ExpensesAccount': None, 'EURevenuesAccount': None, 'EUExpensesAccount': None, 'ForeignRevenueAcc': None, 'ForeignExpensAcc': None, 'ExemptIncomeAcc': None, 'PriceDifferenceAcc': None, 'WarehouseCode': 'WLS', 'InStock': 0.0, 'Committed': 0.0, 'Ordered': 0.0, 'CountedQuantity': 0.0, 'WasCounted': 'tNO', 'UserSignature': 50, 'Counted': 0.0, 'ExpenseClearingAct': None, 'PurchaseCreditAcc': None, 'EUPurchaseCreditAcc': None, 'ForeignPurchaseCreditAcc': None, 'SalesCreditAcc': None, 'SalesCreditEUAcc': None, 'ExemptedCredits': None, 'SalesCreditForeignAcc': None, 'ExpenseOffsettingAccount': None, 'WipAccount': None, 'ExchangeRateDifferencesAcct': None, 'GoodsClearingAcct': None, 'NegativeInventoryAdjustmentAccount': None, 'CostInflationOffsetAccount': None, 'GLDecreaseAcct': None, 'GLIncreaseAcct': None, 'PAReturnAcct': None, 'PurchaseAcct': None, 'PurchaseOffsetAcct': None, 'ShippedGoodsAccount': None, 'StockInflationOffsetAccount': None, 'StockInflationAdjustAccount': None, 'VATInRevenueAccount': None, 'WipVarianceAccount': None, 'CostInflationAccount': None, 'WHIncomingCenvatAccount': None, 'WHOutgoingCenvatAccount': None, 'StockInTransitAccount': None, 'WipOffsetProfitAndLossAccount': None, 'InventoryOffsetProfitAndLossAccount': None, 'DefaultBin': None, 'DefaultBinEnforced': 'tNO', 'PurchaseBalanceAccount': None, 'ItemCode': 'ACC-0000005', 'ItemCycleCounts': []}, {'MinimalStock': 0.0, 'MaximalStock': 0.0, 'MinimalOrder': 0.0, 'StandardAveragePrice': 0.0, 'Locked': 'tNO', 'InventoryAccount': None, 'CostAccount': None, 'TransferAccount': None, 'RevenuesAccount': None, 'VarienceAccount': None, 'DecreasingAccount': None, 'IncreasingAccount': None, 'ReturningAccount': None, 'ExpensesAccount': None, 'EURevenuesAccount': None, 'EUExpensesAccount': None, 'ForeignRevenueAcc': None, 'ForeignExpensAcc': None, 'ExemptIncomeAcc': None, 'PriceDifferenceAcc': None, 'WarehouseCode': 'WW', 'InStock': 0.0, 'Committed': 0.0, 'Ordered': 0.0, 'CountedQuantity': 0.0, 'WasCounted': 'tNO', 'UserSignature': 50, 'Counted': 0.0, 'ExpenseClearingAct': None, 'PurchaseCreditAcc': None, 'EUPurchaseCreditAcc': None, 'ForeignPurchaseCreditAcc': None, 'SalesCreditAcc': None, 'SalesCreditEUAcc': None, 'ExemptedCredits': None, 'SalesCreditForeignAcc': None, 'ExpenseOffsettingAccount': None, 'WipAccount': None, 'ExchangeRateDifferencesAcct': None, 'GoodsClearingAcct': None, 'NegativeInventoryAdjustmentAccount': None, 'CostInflationOffsetAccount': None, 'GLDecreaseAcct': None, 'GLIncreaseAcct': None, 'PAReturnAcct': None, 'PurchaseAcct': None, 'PurchaseOffsetAcct': None, 'ShippedGoodsAccount': None, 'StockInflationOffsetAccount': None, 'StockInflationAdjustAccount': None, 'VATInRevenueAccount': None, 'WipVarianceAccount': None, 'CostInflationAccount': None, 'WHIncomingCenvatAccount': None, 'WHOutgoingCenvatAccount': None, 'StockInTransitAccount': None, 'WipOffsetProfitAndLossAccount': None, 'InventoryOffsetProfitAndLossAccount': None, 'DefaultBin': None, 'DefaultBinEnforced': 'tNO', 'PurchaseBalanceAccount': None, 'ItemCode': 'ACC-0000005', 'ItemCycleCounts': []}, {'MinimalStock': 0.0, 'MaximalStock': 0.0, 'MinimalOrder': 0.0, 'StandardAveragePrice': 0.0, 'Locked': 'tNO', 'InventoryAccount': None, 'CostAccount': None, 'TransferAccount': None, 'RevenuesAccount': None, 'VarienceAccount': None, 'DecreasingAccount': None, 'IncreasingAccount': None, 'ReturningAccount': None, 'ExpensesAccount': None, 'EURevenuesAccount': None, 'EUExpensesAccount': None, 'ForeignRevenueAcc': None, 'ForeignExpensAcc': None, 'ExemptIncomeAcc': None, 'PriceDifferenceAcc': None, 'WarehouseCode': 'WW-CON', 'InStock': 0.0, 'Committed': 0.0, 'Ordered': 0.0, 'CountedQuantity': 0.0, 'WasCounted': 'tNO', 'UserSignature': 50, 'Counted': 0.0, 'ExpenseClearingAct': None, 'PurchaseCreditAcc': None, 'EUPurchaseCreditAcc': None, 'ForeignPurchaseCreditAcc': None, 'SalesCreditAcc': None, 'SalesCreditEUAcc': None, 'ExemptedCredits': None, 'SalesCreditForeignAcc': None, 'ExpenseOffsettingAccount': None, 'WipAccount': None, 'ExchangeRateDifferencesAcct': None, 'GoodsClearingAcct': None, 'NegativeInventoryAdjustmentAccount': None, 'CostInflationOffsetAccount': None, 'GLDecreaseAcct': None, 'GLIncreaseAcct': None, 'PAReturnAcct': None, 'PurchaseAcct': None, 'PurchaseOffsetAcct': None, 'ShippedGoodsAccount': None, 'StockInflationOffsetAccount': None, 'StockInflationAdjustAccount': None, 'VATInRevenueAccount': None, 'WipVarianceAccount': None, 'CostInflationAccount': None, 'WHIncomingCenvatAccount': None, 'WHOutgoingCenvatAccount': None, 'StockInTransitAccount': None, 'WipOffsetProfitAndLossAccount': None, 'InventoryOffsetProfitAndLossAccount': None, 'DefaultBin': None, 'DefaultBinEnforced': 'tNO', 'PurchaseBalanceAccount': None, 'ItemCode': 'ACC-0000005', 'ItemCycleCounts': []}, {'MinimalStock': 0.0, 'MaximalStock': 0.0, 'MinimalOrder': 0.0, 'StandardAveragePrice': 0.0, 'Locked': 'tNO', 'InventoryAccount': None, 'CostAccount': None, 'TransferAccount': None, 'RevenuesAccount': None, 'VarienceAccount': None, 'DecreasingAccount': None, 'IncreasingAccount': None, 'ReturningAccount': None, 'ExpensesAccount': None, 'EURevenuesAccount': None, 'EUExpensesAccount': None, 'ForeignRevenueAcc': None, 'ForeignExpensAcc': None, 'ExemptIncomeAcc': None, 'PriceDifferenceAcc': None, 'WarehouseCode': 'WW-DAM', 'InStock': 0.0, 'Committed': 0.0, 'Ordered': 0.0, 'CountedQuantity': 0.0, 'WasCounted': 'tNO', 'UserSignature': 50, 'Counted': 0.0, 'ExpenseClearingAct': None, 'PurchaseCreditAcc': None, 'EUPurchaseCreditAcc': None, 'ForeignPurchaseCreditAcc': None, 'SalesCreditAcc': None, 'SalesCreditEUAcc': None, 'ExemptedCredits': None, 'SalesCreditForeignAcc': None, 'ExpenseOffsettingAccount': None, 'WipAccount': None, 'ExchangeRateDifferencesAcct': None, 'GoodsClearingAcct': None, 'NegativeInventoryAdjustmentAccount': None, 'CostInflationOffsetAccount': None, 'GLDecreaseAcct': None, 'GLIncreaseAcct': None, 'PAReturnAcct': None, 'PurchaseAcct': None, 'PurchaseOffsetAcct': None, 'ShippedGoodsAccount': None, 'StockInflationOffsetAccount': None, 'StockInflationAdjustAccount': None, 'VATInRevenueAccount': None, 'WipVarianceAccount': None, 'CostInflationAccount': None, 'WHIncomingCenvatAccount': None, 'WHOutgoingCenvatAccount': None, 'StockInTransitAccount': None, 'WipOffsetProfitAndLossAccount': None, 'InventoryOffsetProfitAndLossAccount': None, 'DefaultBin': None, 'DefaultBinEnforced': 'tNO', 'PurchaseBalanceAccount': None, 'ItemCode': 'ACC-0000005', 'ItemCycleCounts': []}, {'MinimalStock': 0.0, 'MaximalStock': 0.0, 'MinimalOrder': 0.0, 'StandardAveragePrice': 0.0, 'Locked': 'tNO', 'InventoryAccount': None, 'CostAccount': None, 'TransferAccount': None, 'RevenuesAccount': None, 'VarienceAccount': None, 'DecreasingAccount': None, 'IncreasingAccount': None, 'ReturningAccount': None, 'ExpensesAccount': None, 'EURevenuesAccount': None, 'EUExpensesAccount': None, 'ForeignRevenueAcc': None, 'ForeignExpensAcc': None, 'ExemptIncomeAcc': None, 'PriceDifferenceAcc': None, 'WarehouseCode': 'WW-REP', 'InStock': 0.0, 'Committed': 0.0, 'Ordered': 0.0, 'CountedQuantity': 0.0, 'WasCounted': 'tNO', 'UserSignature': 50, 'Counted': 0.0, 'ExpenseClearingAct': None, 'PurchaseCreditAcc': None, 'EUPurchaseCreditAcc': None, 'ForeignPurchaseCreditAcc': None, 'SalesCreditAcc': None, 'SalesCreditEUAcc': None, 'ExemptedCredits': None, 'SalesCreditForeignAcc': None, 'ExpenseOffsettingAccount': None, 'WipAccount': None, 'ExchangeRateDifferencesAcct': None, 'GoodsClearingAcct': None, 'NegativeInventoryAdjustmentAccount': None, 'CostInflationOffsetAccount': None, 'GLDecreaseAcct': None, 'GLIncreaseAcct': None, 'PAReturnAcct': None, 'PurchaseAcct': None, 'PurchaseOffsetAcct': None, 'ShippedGoodsAccount': None, 'StockInflationOffsetAccount': None, 'StockInflationAdjustAccount': None, 'VATInRevenueAccount': None, 'WipVarianceAccount': None, 'CostInflationAccount': None, 'WHIncomingCenvatAccount': None, 'WHOutgoingCenvatAccount': None, 'StockInTransitAccount': None, 'WipOffsetProfitAndLossAccount': None, 'InventoryOffsetProfitAndLossAccount': None, 'DefaultBin': None, 'DefaultBinEnforced': 'tNO', 'PurchaseBalanceAccount': None, 'ItemCode': 'ACC-0000005', 'ItemCycleCounts': []}, {'MinimalStock': 0.0, 'MaximalStock': 0.0, 'MinimalOrder': 0.0, 'StandardAveragePrice': 0.0, 'Locked': 'tNO', 'InventoryAccount': None, 'CostAccount': None, 'TransferAccount': None, 'RevenuesAccount': None, 'VarienceAccount': None, 'DecreasingAccount': None, 'IncreasingAccount': None, 'ReturningAccount': None, 'ExpensesAccount': None, 'EURevenuesAccount': None, 'EUExpensesAccount': None, 'ForeignRevenueAcc': None, 'ForeignExpensAcc': None, 'ExemptIncomeAcc': None, 'PriceDifferenceAcc': None, 'WarehouseCode': 'WW-SAM', 'InStock': 0.0, 'Committed': 0.0, 'Ordered': 0.0, 'CountedQuantity': 0.0, 'WasCounted': 'tNO', 'UserSignature': 50, 'Counted': 0.0, 'ExpenseClearingAct': None, 'PurchaseCreditAcc': None, 'EUPurchaseCreditAcc': None, 'ForeignPurchaseCreditAcc': None, 'SalesCreditAcc': None, 'SalesCreditEUAcc': None, 'ExemptedCredits': None, 'SalesCreditForeignAcc': None, 'ExpenseOffsettingAccount': None, 'WipAccount': None, 'ExchangeRateDifferencesAcct': None, 'GoodsClearingAcct': None, 'NegativeInventoryAdjustmentAccount': None, 'CostInflationOffsetAccount': None, 'GLDecreaseAcct': None, 'GLIncreaseAcct': None, 'PAReturnAcct': None, 'PurchaseAcct': None, 'PurchaseOffsetAcct': None, 'ShippedGoodsAccount': None, 'StockInflationOffsetAccount': None, 'StockInflationAdjustAccount': None, 'VATInRevenueAccount': None, 'WipVarianceAccount': None, 'CostInflationAccount': None, 'WHIncomingCenvatAccount': None, 'WHOutgoingCenvatAccount': None, 'StockInTransitAccount': None, 'WipOffsetProfitAndLossAccount': None, 'InventoryOffsetProfitAndLossAccount': None, 'DefaultBin': None, 'DefaultBinEnforced': 'tNO', 'PurchaseBalanceAccount': None, 'ItemCode': 'ACC-0000005', 'ItemCycleCounts': []}, {'MinimalStock': 0.0, 'MaximalStock': 0.0, 'MinimalOrder': 0.0, 'StandardAveragePrice': 0.0, 'Locked': 'tNO', 'InventoryAccount': None, 'CostAccount': None, 'TransferAccount': None, 'RevenuesAccount': None, 'VarienceAccount': None, 'DecreasingAccount': None, 'IncreasingAccount': None, 'ReturningAccount': None, 'ExpensesAccount': None, 'EURevenuesAccount': None, 'EUExpensesAccount': None, 'ForeignRevenueAcc': None, 'ForeignExpensAcc': None, 'ExemptIncomeAcc': None, 'PriceDifferenceAcc': None, 'WarehouseCode': 'WW-WIP', 'InStock': 0.0, 'Committed': 0.0, 'Ordered': 0.0, 'CountedQuantity': 0.0, 'WasCounted': 'tNO', 'UserSignature': 50, 'Counted': 0.0, 'ExpenseClearingAct': None, 'PurchaseCreditAcc': None, 'EUPurchaseCreditAcc': None, 'ForeignPurchaseCreditAcc': None, 'SalesCreditAcc': None, 'SalesCreditEUAcc': None, 'ExemptedCredits': None, 'SalesCreditForeignAcc': None, 'ExpenseOffsettingAccount': None, 'WipAccount': None, 'ExchangeRateDifferencesAcct': None, 'GoodsClearingAcct': None, 'NegativeInventoryAdjustmentAccount': None, 'CostInflationOffsetAccount': None, 'GLDecreaseAcct': None, 'GLIncreaseAcct': None, 'PAReturnAcct': None, 'PurchaseAcct': None, 'PurchaseOffsetAcct': None, 'ShippedGoodsAccount': None, 'StockInflationOffsetAccount': None, 'StockInflationAdjustAccount': None, 'VATInRevenueAccount': None, 'WipVarianceAccount': None, 'CostInflationAccount': None, 'WHIncomingCenvatAccount': None, 'WHOutgoingCenvatAccount': None, 'StockInTransitAccount': None, 'WipOffsetProfitAndLossAccount': None, 'InventoryOffsetProfitAndLossAccount': None, 'DefaultBin': None, 'DefaultBinEnforced': 'tNO', 'PurchaseBalanceAccount': None, 'ItemCode': 'ACC-0000005', 'ItemCycleCounts': []}, {'MinimalStock': 0.0, 'MaximalStock': 0.0, 'MinimalOrder': 0.0, 'StandardAveragePrice': 0.0, 'Locked': 'tNO', 'InventoryAccount': None, 'CostAccount': None, 'TransferAccount': None, 'RevenuesAccount': None, 'VarienceAccount': None, 'DecreasingAccount': None, 'IncreasingAccount': None, 'ReturningAccount': None, 'ExpensesAccount': None, 'EURevenuesAccount': None, 'EUExpensesAccount': None, 'ForeignRevenueAcc': None, 'ForeignExpensAcc': None, 'ExemptIncomeAcc': None, 'PriceDifferenceAcc': None, 'WarehouseCode': 'ZW', 'InStock': 0.0, 'Committed': 0.0, 'Ordered': 0.0, 'CountedQuantity': 0.0, 'WasCounted': 'tNO', 'UserSignature': 50, 'Counted': 0.0, 'ExpenseClearingAct': None, 'PurchaseCreditAcc': None, 'EUPurchaseCreditAcc': None, 'ForeignPurchaseCreditAcc': None, 'SalesCreditAcc': None, 'SalesCreditEUAcc': None, 'ExemptedCredits': None, 'SalesCreditForeignAcc': None, 'ExpenseOffsettingAccount': None, 'WipAccount': None, 'ExchangeRateDifferencesAcct': None, 'GoodsClearingAcct': None, 'NegativeInventoryAdjustmentAccount': None, 'CostInflationOffsetAccount': None, 'GLDecreaseAcct': None, 'GLIncreaseAcct': None, 'PAReturnAcct': None, 'PurchaseAcct': None, 'PurchaseOffsetAcct': None, 'ShippedGoodsAccount': None, 'StockInflationOffsetAccount': None, 'StockInflationAdjustAccount': None, 'VATInRevenueAccount': None, 'WipVarianceAccount': None, 'CostInflationAccount': None, 'WHIncomingCenvatAccount': None, 'WHOutgoingCenvatAccount': None, 'StockInTransitAccount': None, 'WipOffsetProfitAndLossAccount': None, 'InventoryOffsetProfitAndLossAccount': None, 'DefaultBin': None, 'DefaultBinEnforced': 'tNO', 'PurchaseBalanceAccount': None, 'ItemCode': 'ACC-0000005', 'ItemCycleCounts': []}], 'ItemPreferredVendors': [], 'ItemLocalizationInfos': [], 'ItemProjects': [], 'ItemDistributionRules': [], 'ItemAttributeGroups': [], 'ItemDepreciationParameters': [], 'ItemPeriodControls': [], 'ItemUnitOfMeasurementCollection': [{'UoMType': 'iutInventory', 'UoMEntry': 1, 'DefaultBarcode': 0, 'DefaultPackage': None, 'Length1': 0.0, 'Length1Unit': None, 'Length2': 0.0, 'Length2Unit': None, 'Width1': 0.0, 'Width1Unit': None, 'Width2': 0.0, 'Width2Unit': None, 'Height1': 0.0, 'Height1Unit': None, 'Height2': 0.0, 'Height2Unit': None, 'Volume': 0.0, 'VolumeUnit': None, 'Weight1': 0.0, 'Weight1Unit': None, 'Weight2': 0.0, 'Weight2Unit': None, 'ItemUoMPackageCollection': []}, {'UoMType': 'iutPurchasing', 'UoMEntry': 1, 'DefaultBarcode': 0, 'DefaultPackage': None, 'Length1': 0.0, 'Length1Unit': None, 'Length2': 0.0, 'Length2Unit': None, 'Width1': 0.0, 'Width1Unit': None, 'Width2': 0.0, 'Width2Unit': None, 'Height1': 0.0, 'Height1Unit': None, 'Height2': 0.0, 'Height2Unit': None, 'Volume': 0.0, 'VolumeUnit': 2, 'Weight1': 0.0, 'Weight1Unit': None, 'Weight2': 0.0, 'Weight2Unit': None, 'ItemUoMPackageCollection': []}, {'UoMType': 'iutPurchasing', 'UoMEntry': 8, 'DefaultBarcode': None, 'DefaultPackage': None, 'Length1': 0.0, 'Length1Unit': None, 'Length2': 0.0, 'Length2Unit': None, 'Width1': 0.0, 'Width1Unit': None, 'Width2': 0.0, 'Width2Unit': None, 'Height1': 0.0, 'Height1Unit': None, 'Height2': 0.0, 'Height2Unit': None, 'Volume': 0.0, 'VolumeUnit': 4, 'Weight1': 0.0, 'Weight1Unit': None, 'Weight2': 0.0, 'Weight2Unit': None, 'ItemUoMPackageCollection': []}, {'UoMType': 'iutSales', 'UoMEntry': 1, 'DefaultBarcode': 0, 'DefaultPackage': None, 'Length1': 0.0, 'Length1Unit': None, 'Length2': 0.0, 'Length2Unit': None, 'Width1': 0.0, 'Width1Unit': None, 'Width2': 0.0, 'Width2Unit': None, 'Height1': 0.0, 'Height1Unit': None, 'Height2': 0.0, 'Height2Unit': None, 'Volume': 0.0, 'VolumeUnit': 2, 'Weight1': 0.0, 'Weight1Unit': None, 'Weight2': 0.0, 'Weight2Unit': None, 'ItemUoMPackageCollection': []}, {'UoMType': 'iutSales', 'UoMEntry': 8, 'DefaultBarcode': None, 'DefaultPackage': None, 'Length1': 0.0, 'Length1Unit': None, 'Length2': 0.0, 'Length2Unit': None, 'Width1': 0.0, 'Width1Unit': None, 'Width2': 0.0, 'Width2Unit': None, 'Height1': 0.0, 'Height1Unit': None, 'Height2': 0.0, 'Height2Unit': None, 'Volume': 0.0, 'VolumeUnit': 4, 'Weight1': 0.0, 'Weight1Unit': None, 'Weight2': 0.0, 'Weight2Unit': None, 'ItemUoMPackageCollection': []}], 'ItemBarCodeCollection': [], 'ItemIntrastatExtension': {'ItemCode': 'ACC-0000005', 'CommodityCode': None, 'SupplementaryUnit': None, 'FactorOfSupplementaryUnit': 0.0, 'ImportRegionState': 0, 'ExportRegionState': 0, 'ImportNatureOfTransaction': None, 'ExportNatureOfTransaction': None, 'ImportStatisticalProcedure': None, 'ExportStatisticalProcedure': None, 'CountryOfOrigin': None, 'ServiceCode': None, 'Type': 'dDocument_Items', 'ServiceSupplyMethod': 'ssmImmediate', 'ServicePaymentMethod': 'spmOther', 'ImportRegionCountry': 'GB', 'ExportRegionCountry': 'GB', 'UseWeightInCalculation': 'tYES', 'IntrastatRelevant': 'tNO', 'StatisticalCode': None}}]}, 'status': 'success'}
2025-08-05 18:10:35,876 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'Expenses', 'request': {'method': 'GET', 'url': 'https://10.0.0.100:50000/b1s/v1/Expenses', 'data': None, 'params': None}, 'response': None, 'status': None}
2025-08-05 18:10:36,550 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'Expenses', 'request': None, 'response': {'status_code': 400, 'text': '{\n   "error" : {\n      "code" : 200,\n      "message" : {\n         "lang" : "en-us",\n         "value" : "Unrecognized resource path."\n      }\n   }\n}\n'}, 'status': 'failure'}
2025-08-05 18:10:36,554 - sync_service - INFO - API Call: {'service': 'shopify', 'endpoint': 'graphql_local', 'request': {'query': '\n        query getOrders($first: Int!) {\n            orders(first: $first) {\n                edges {\n                    node {\n                        id\n                        name\n                        createdAt\n                    }\n                }\n            }\n        }\n        ', 'variables': {'first': 1}}, 'response': None, 'status': None}
2025-08-05 18:10:37,066 - sync_service - INFO - API Call: {'service': 'shopify', 'endpoint': 'graphql_local', 'request': None, 'response': {'orders': {'edges': [{'node': {'id': 'gid://shopify/Order/6170973569090', 'name': '#1001', 'createdAt': '2025-05-15T08:35:47Z'}}]}}, 'status': 'success'}
2025-08-05 18:10:37,079 - sync_service - INFO - API Call: {'service': 'shopify', 'endpoint': 'graphql_local', 'request': {'query': '\n            query getOrders($first: Int!, $after: String) {\n                orders(first: $first, after: $after, sortKey: CREATED_AT, reverse: true) {\n                    edges {\n                        node {\n                            id\n                            name\n                            createdAt\n                            tags\n                            totalPriceSet {\n                                shopMoney {\n                                    amount\n                                    currencyCode\n                                }\n                            }\n                            subtotalPriceSet {\n                                shopMoney {\n                                    amount\n                                    currencyCode\n                                }\n                            }\n                            totalTaxSet {\n                                shopMoney {\n                                    amount\n                                    currencyCode\n                                }\n                            }\n                            totalShippingPriceSet {\n                                shopMoney {\n                                    amount\n                                    currencyCode\n                                }\n                            }\n                            customer {\n                                id\n                                firstName\n                                lastName\n                                email\n                                phone\n                                addresses {\n                                    address1\n                                    address2\n                                    city\n                                    province\n                                    zip\n                                    country\n                                    phone\n                                }\n                            }\n                            shippingAddress {\n                                address1\n                                address2\n                                city\n                                province\n                                zip\n                                country\n                                phone\n                            }\n                            billingAddress {\n                                address1\n                                address2\n                                city\n                                province\n                                zip\n                                country\n                                phone\n                            }\n                            lineItems(first: 50) {\n                                edges {\n                                    node {\n                                        id\n                                        quantity\n                                        sku\n                                        title\n                                        variant {\n                                            id\n                                            sku\n                                            price\n                                            product {\n                                                id\n                                                title\n                                            }\n                                        }\n                                        discountedTotalSet {\n                                            shopMoney {\n                                                amount\n                                                currencyCode\n                                            }\n                                        }\n                                    }\n                                }\n                            }\n                            note\n                        }\n                    }\n                    pageInfo {\n                        hasNextPage\n                        endCursor\n                    }\n                }\n            }\n            ', 'variables': {'first': 20, 'after': None}}, 'response': None, 'status': None}
2025-08-05 18:10:37,868 - sync_service - INFO - API Call: {'service': 'shopify', 'endpoint': 'graphql_local', 'request': None, 'response': {'orders': {'edges': [{'node': {'id': 'gid://shopify/Order/6318310686786', 'name': '#1480', 'createdAt': '2025-08-05T09:59:13Z', 'tags': [], 'totalPriceSet': {'shopMoney': {'amount': '5200.0', 'currencyCode': 'EGP'}}, 'subtotalPriceSet': {'shopMoney': {'amount': '5000.0', 'currencyCode': 'EGP'}}, 'totalTaxSet': {'shopMoney': {'amount': '0.0', 'currencyCode': 'EGP'}}, 'totalShippingPriceSet': {'shopMoney': {'amount': '200.0', 'currencyCode': 'EGP'}}, 'customer': {'id': 'gid://shopify/Customer/8037256233026', 'firstName': 'Omnia', 'lastName': 'Ezz Elarab', 'email': 'nezzelarab@ezz-elarab.com', 'phone': None, 'addresses': [{'address1': 'Palm hills 6th october, phase 1', 'address2': 'Villa b53', 'city': 'Giza', 'province': '6th of October', 'zip': '00000', 'country': 'Egypt', 'phone': '00201003370743'}]}, 'shippingAddress': {'address1': 'Palm hills 6th october, phase 1', 'address2': 'Villa b53', 'city': 'Giza', 'province': '6th of October', 'zip': '00000', 'country': 'Egypt', 'phone': '00201003370743'}, 'billingAddress': {'address1': 'Palm hills 6th october, phase 1', 'address2': 'Villa b53', 'city': 'Giza', 'province': '6th of October', 'zip': '00000', 'country': 'Egypt', 'phone': '00201003370743'}, 'lineItems': {'edges': [{'node': {'id': 'gid://shopify/LineItem/15830693707842', 'quantity': 1, 'sku': 'FG-0000632', 'title': 'Ember Earrings', 'variant': {'id': 'gid://shopify/ProductVariant/42194952650818', 'sku': 'FG-0000632', 'price': '5000.00', 'product': {'id': 'gid://shopify/Product/7490852847682', 'title': 'Ember Earrings'}}, 'discountedTotalSet': {'shopMoney': {'amount': '5000.0', 'currencyCode': 'EGP'}}}}]}, 'note': None}}, {'node': {'id': 'gid://shopify/Order/6318078263362', 'name': '#1479', 'createdAt': '2025-08-05T04:44:47Z', 'tags': [], 'totalPriceSet': {'shopMoney': {'amount': '7460.0', 'currencyCode': 'EGP'}}, 'subtotalPriceSet': {'shopMoney': {'amount': '7300.0', 'currencyCode': 'EGP'}}, 'totalTaxSet': {'shopMoney': {'amount': '0.0', 'currencyCode': 'EGP'}}, 'totalShippingPriceSet': {'shopMoney': {'amount': '160.0', 'currencyCode': 'EGP'}}, 'customer': {'id': 'gid://shopify/Customer/8035661905986', 'firstName': 'Ziad', 'lastName': 'Fawi', 'email': 'ziadfawi6@gmail.com', 'phone': None, 'addresses': [{'address1': None, 'address2': None, 'city': None, 'province': None, 'zip': None, 'country': 'Egypt', 'phone': None}, {'address1': '46 soultan street behind ices hospital', 'address2': 'Number of the apartment 17', 'city': 'Alexandria', 'province': 'Alexandria', 'zip': None, 'country': 'Egypt', 'phone': '01271088966'}]}, 'shippingAddress': {'address1': '46 soultan street behind ices hospital', 'address2': 'Number of the apartment 17', 'city': 'Alexandria', 'province': 'Alexandria', 'zip': None, 'country': 'Egypt', 'phone': '01271088966'}, 'billingAddress': {'address1': '46 soultan street behind ices hospital', 'address2': 'Number of the apartment 17', 'city': 'Alexandria', 'province': 'Alexandria', 'zip': None, 'country': 'Egypt', 'phone': '01271088966'}, 'lineItems': {'edges': [{'node': {'id': 'gid://shopify/LineItem/15830286434370', 'quantity': 1, 'sku': 'FG-0000077', 'title': 'Sulla Luna Mix Earrings', 'variant': {'id': 'gid://shopify/ProductVariant/42003146276930', 'sku': 'FG-0000077', 'price': '7300.00', 'product': {'id': 'gid://shopify/Product/7442022203458', 'title': 'Sulla Luna Mix Earrings'}}, 'discountedTotalSet': {'shopMoney': {'amount': '7300.0', 'currencyCode': 'EGP'}}}}]}, 'note': None}}, {'node': {'id': 'gid://shopify/Order/6317218398274', 'name': '#1478', 'createdAt': '2025-08-04T18:33:12Z', 'tags': [], 'totalPriceSet': {'shopMoney': {'amount': '2880.0', 'currencyCode': 'EGP'}}, 'subtotalPriceSet': {'shopMoney': {'amount': '2880.0', 'currencyCode': 'EGP'}}, 'totalTaxSet': {'shopMoney': {'amount': '0.0', 'currencyCode': 'EGP'}}, 'totalShippingPriceSet': {'shopMoney': {'amount': '0.0', 'currencyCode': 'EGP'}}, 'customer': {'id': 'gid://shopify/Customer/8032449527874', 'firstName': 'Mahmoud', 'lastName': 'Ayman', 'email': 'mahmoudayman80@yahoo.com', 'phone': None, 'addresses': [{'address1': None, 'address2': None, 'city': None, 'province': None, 'zip': None, 'country': 'Egypt', 'phone': None}, {'address1': '5370 el mokattam', 'address2': None, 'city': 'Cairo', 'province': 'Cairo', 'zip': None, 'country': 'Egypt', 'phone': '01111346333'}]}, 'shippingAddress': None, 'billingAddress': {'address1': '5370 el mokattam', 'address2': None, 'city': 'Cairo', 'province': 'Cairo', 'zip': None, 'country': 'Egypt', 'phone': '01111346333'}, 'lineItems': {'edges': [{'node': {'id': 'gid://shopify/LineItem/15828170047554', 'quantity': 1, 'sku': 'FG-0000589', 'title': 'Una Ring', 'variant': {'id': 'gid://shopify/ProductVariant/42003153518658', 'sku': 'FG-0000589', 'price': '3200.00', 'product': {'id': 'gid://shopify/Product/7442026070082', 'title': 'Una Ring'}}, 'discountedTotalSet': {'shopMoney': {'amount': '3200.0', 'currencyCode': 'EGP'}}}}]}, 'note': None}}, {'node': {'id': 'gid://shopify/Order/6317035520066', 'name': '#1477', 'createdAt': '2025-08-04T16:50:11Z', 'tags': [], 'totalPriceSet': {'shopMoney': {'amount': '5060.0', 'currencyCode': 'EGP'}}, 'subtotalPriceSet': {'shopMoney': {'amount': '4900.0', 'currencyCode': 'EGP'}}, 'totalTaxSet': {'shopMoney': {'amount': '0.0', 'currencyCode': 'EGP'}}, 'totalShippingPriceSet': {'shopMoney': {'amount': '160.0', 'currencyCode': 'EGP'}}, 'customer': {'id': 'gid://shopify/Customer/8031975374914', 'firstName': 'Passant', 'lastName': 'Dawood', 'email': 'passantdawood@gmail.com', 'phone': None, 'addresses': [{'address1': '399 elguish road san stefano grand plaza', 'address2': '1', 'city': 'Alexandria', 'province': 'Alexandria', 'zip': None, 'country': 'Egypt', 'phone': '01223100564'}]}, 'shippingAddress': {'address1': '399 elguish road san stefano grand plaza', 'address2': '1', 'city': 'Alexandria', 'province': 'Alexandria', 'zip': None, 'country': 'Egypt', 'phone': '01223100564'}, 'billingAddress': {'address1': '399 elguish road san stefano grand plaza', 'address2': '1', 'city': 'Alexandria', 'province': 'Alexandria', 'zip': None, 'country': 'Egypt', 'phone': '01223100564'}, 'lineItems': {'edges': [{'node': {'id': 'gid://shopify/LineItem/15827708805186', 'quantity': 1, 'sku': 'FG-0000688', 'title': 'Multi-way Halo Ring', 'variant': {'id': 'gid://shopify/ProductVariant/42194980896834', 'sku': 'FG-0000688', 'price': '4900.00', 'product': {'id': 'gid://shopify/Product/7490853339202', 'title': 'Multi-way Halo Ring'}}, 'discountedTotalSet': {'shopMoney': {'amount': '4900.0', 'currencyCode': 'EGP'}}}}]}, 'note': None}}, {'node': {'id': 'gid://shopify/Order/6317030244418', 'name': '#1476', 'createdAt': '2025-08-04T16:47:03Z', 'tags': [], 'totalPriceSet': {'shopMoney': {'amount': '5320.0', 'currencyCode': 'EGP'}}, 'subtotalPriceSet': {'shopMoney': {'amount': '5200.0', 'currencyCode': 'EGP'}}, 'totalTaxSet': {'shopMoney': {'amount': '0.0', 'currencyCode': 'EGP'}}, 'totalShippingPriceSet': {'shopMoney': {'amount': '120.0', 'currencyCode': 'EGP'}}, 'customer': {'id': 'gid://shopify/Customer/8031970918466', 'firstName': 'Noha', 'lastName': 'Emad', 'email': 'noha@kitshe-eg.com', 'phone': None, 'addresses': [{'address1': 'التجمع الخامس االدور الاول شقه ٤جنوب الأكاديمية أ شارع ان', 'address2': 'التجمع الخامس- جنوب الاكادميه أ شارع انس ابن مالك فيلا ٢٨٦', 'city': 'Cairo', 'province': 'Cairo', 'zip': '11865', 'country': 'Egypt', 'phone': '01200008517'}]}, 'shippingAddress': {'address1': 'التجمع الخامس االدور الاول شقه ٤جنوب الأكاديمية أ شارع ان', 'address2': 'التجمع الخامس- جنوب الاكادميه أ شارع انس ابن مالك فيلا ٢٨٦', 'city': 'Cairo', 'province': 'Cairo', 'zip': '11865', 'country': 'Egypt', 'phone': '01200008517'}, 'billingAddress': {'address1': 'التجمع الخامس االدور الاول شقه ٤جنوب الأكاديمية أ شارع ان', 'address2': 'التجمع الخامس- جنوب الاكادميه أ شارع انس ابن مالك فيلا ٢٨٦', 'city': 'Cairo', 'province': 'Cairo', 'zip': '11865', 'country': 'Egypt', 'phone': '01200008517'}, 'lineItems': {'edges': [{'node': {'id': 'gid://shopify/LineItem/15827697336386', 'quantity': 1, 'sku': 'FG-0000640', 'title': 'Essence Earrings', 'variant': {'id': 'gid://shopify/ProductVariant/42194952945730', 'sku': 'FG-0000640', 'price': '5200.00', 'product': {'id': 'gid://shopify/Product/7490852945986', 'title': 'Essence Earrings'}}, 'discountedTotalSet': {'shopMoney': {'amount': '5200.0', 'currencyCode': 'EGP'}}}}]}, 'note': None}}, {'node': {'id': 'gid://shopify/Order/6316680347714', 'name': '#1475', 'createdAt': '2025-08-04T12:56:00Z', 'tags': [], 'totalPriceSet': {'shopMoney': {'amount': '5120.0', 'currencyCode': 'EGP'}}, 'subtotalPriceSet': {'shopMoney': {'amount': '5000.0', 'currencyCode': 'EGP'}}, 'totalTaxSet': {'shopMoney': {'amount': '0.0', 'currencyCode': 'EGP'}}, 'totalShippingPriceSet': {'shopMoney': {'amount': '120.0', 'currencyCode': 'EGP'}}, 'customer': {'id': 'gid://shopify/Customer/8031264636994', 'firstName': 'Hanan', 'lastName': 'HASSAN', 'email': 'hananhassan1204@gmail.com', 'phone': None, 'addresses': [{'address1': 'القاهرة الجديدة / كمبوند سوديك ڤيليت عمارة واحد إف شقة أرضي زيرو أربعة', 'address2': '04 الدور الارضي', 'city': 'القاهرة', 'province': 'Cairo', 'zip': '11511', 'country': 'Egypt', 'phone': '01000340138'}]}, 'shippingAddress': {'address1': 'القاهرة الجديدة / كمبوند سوديك ڤيليت عمارة واحد إف شقة أرضي زيرو أربعة', 'address2': '04 الدور الارضي', 'city': 'القاهرة', 'province': 'Cairo', 'zip': '11511', 'country': 'Egypt', 'phone': '01000340138'}, 'billingAddress': {'address1': 'القاهرة الجديدة / كمبوند سوديك ڤيليت عمارة واحد إف شقة أرضي زيرو أربعة', 'address2': '04 الدور الارضي', 'city': 'القاهرة', 'province': 'Cairo', 'zip': '11511', 'country': 'Egypt', 'phone': '01000340138'}, 'lineItems': {'edges': [{'node': {'id': 'gid://shopify/LineItem/15826901237826', 'quantity': 1, 'sku': 'FG-0000632', 'title': 'Ember Earrings', 'variant': {'id': 'gid://shopify/ProductVariant/42194952650818', 'sku': 'FG-0000632', 'price': '5000.00', 'product': {'id': 'gid://shopify/Product/7490852847682', 'title': 'Ember Earrings'}}, 'discountedTotalSet': {'shopMoney': {'amount': '5000.0', 'currencyCode': 'EGP'}}}}]}, 'note': None}}, {'node': {'id': 'gid://shopify/Order/6316580536386', 'name': '#1474', 'createdAt': '2025-08-04T11:08:05Z', 'tags': [], 'totalPriceSet': {'shopMoney': {'amount': '6020.0', 'currencyCode': 'EGP'}}, 'subtotalPriceSet': {'shopMoney': {'amount': '5900.0', 'currencyCode': 'EGP'}}, 'totalTaxSet': {'shopMoney': {'amount': '0.0', 'currencyCode': 'EGP'}}, 'totalShippingPriceSet': {'shopMoney': {'amount': '120.0', 'currencyCode': 'EGP'}}, 'customer': {'id': 'gid://shopify/Customer/8031120457794', 'firstName': 'Nourhan', 'lastName': 'Swellam', 'email': 'swellam@aucegypt.edu', 'phone': None, 'addresses': [{'address1': '144 el banafseg 11 ', 'address2': 'Villa 144', 'city': 'Cairo', 'province': 'Cairo', 'zip': '11341', 'country': 'Egypt', 'phone': '+201003928976'}]}, 'shippingAddress': {'address1': '144 el banafseg 11', 'address2': 'Villa 144', 'city': 'Cairo', 'province': 'Cairo', 'zip': '11341', 'country': 'Egypt', 'phone': '+201003928976'}, 'billingAddress': {'address1': '144 el banafseg 11', 'address2': 'Villa 144', 'city': 'Cairo', 'province': 'Cairo', 'zip': '11341', 'country': 'Egypt', 'phone': '+201003928976'}, 'lineItems': {'edges': [{'node': {'id': 'gid://shopify/LineItem/15826707382338', 'quantity': 1, 'sku': 'FG-0000369', 'title': 'Mini Sahara Mix Hoop', 'variant': {'id': 'gid://shopify/ProductVariant/42003146997826', 'sku': 'FG-0000369', 'price': '5900.00', 'product': {'id': 'gid://shopify/Product/7442022989890', 'title': 'Mini Sahara Mix Hoop'}}, 'discountedTotalSet': {'shopMoney': {'amount': '5900.0', 'currencyCode': 'EGP'}}}}]}, 'note': None}}, {'node': {'id': 'gid://shopify/Order/6315006394434', 'name': '#1473', 'createdAt': '2025-08-03T15:21:25Z', 'tags': [], 'totalPriceSet': {'shopMoney': {'amount': '4420.0', 'currencyCode': 'EGP'}}, 'subtotalPriceSet': {'shopMoney': {'amount': '4300.0', 'currencyCode': 'EGP'}}, 'totalTaxSet': {'shopMoney': {'amount': '0.0', 'currencyCode': 'EGP'}}, 'totalShippingPriceSet': {'shopMoney': {'amount': '120.0', 'currencyCode': 'EGP'}}, 'customer': {'id': 'gid://shopify/Customer/8015867478082', 'firstName': 'Yomna', 'lastName': 'Sherif', 'email': 'yomna.sherif.nawal@gmail.com', 'phone': None, 'addresses': [{'address1': 'Group 15 , building 5 , apartment 22', 'address2': 'Group 15 , building 5 , apartment 22', 'city': 'Rehab City', 'province': 'Cairo', 'zip': '0000', 'country': 'Egypt', 'phone': '+201003988787'}, {'address1': None, 'address2': None, 'city': None, 'province': None, 'zip': None, 'country': 'Egypt', 'phone': None}]}, 'shippingAddress': {'address1': 'Group 15 , building 5 , apartment 22', 'address2': 'Group 15 , building 5 , apartment 22', 'city': 'Rehab City', 'province': 'Cairo', 'zip': '0000', 'country': 'Egypt', 'phone': '+201003988787'}, 'billingAddress': {'address1': 'Group 15 , building 5 , apartment 22', 'address2': 'Group 15 , building 5 , apartment 22', 'city': 'Rehab City', 'province': 'Cairo', 'zip': '0000', 'country': 'Egypt', 'phone': '+201003988787'}, 'lineItems': {'edges': [{'node': {'id': 'gid://shopify/LineItem/15822752055362', 'quantity': 1, 'sku': 'FG-0000499', 'title': 'Cassandra Mix Pinky Ring', 'variant': {'id': 'gid://shopify/ProductVariant/42003149815874', 'sku': 'FG-0000499', 'price': '4300.00', 'product': {'id': 'gid://shopify/Product/7442024235074', 'title': 'Cassandra Mix Pinky Ring'}}, 'discountedTotalSet': {'shopMoney': {'amount': '4300.0', 'currencyCode': 'EGP'}}}}]}, 'note': None}}, {'node': {'id': 'gid://shopify/Order/6314877780034', 'name': '#1472', 'createdAt': '2025-08-03T13:47:12Z', 'tags': [], 'totalPriceSet': {'shopMoney': {'amount': '121.0', 'currencyCode': 'EGP'}}, 'subtotalPriceSet': {'shopMoney': {'amount': '1.0', 'currencyCode': 'EGP'}}, 'totalTaxSet': {'shopMoney': {'amount': '0.0', 'currencyCode': 'EGP'}}, 'totalShippingPriceSet': {'shopMoney': {'amount': '120.0', 'currencyCode': 'EGP'}}, 'customer': {'id': 'gid://shopify/Customer/7539785334850', 'firstName': 'Karim', 'lastName': 'Wafik', 'email': 'karimwafik.kw@gmail.com', 'phone': None, 'addresses': [{'address1': '97 Marghany st., Heliopolis, Cairo, Egypt', 'address2': None, 'city': 'Cairo', 'province': 'Cairo', 'zip': '21113', 'country': 'Egypt', 'phone': '+201005527292'}, {'address1': 'Stone Residence Compound 306, Third Settlement', 'address2': '9', 'city': 'Cairo', 'province': 'Cairo', 'zip': None, 'country': 'Egypt', 'phone': '01005527292'}]}, 'shippingAddress': {'address1': 'Stone Residence Compound 306, Third Settlement', 'address2': '9', 'city': 'Cairo', 'province': 'Cairo', 'zip': None, 'country': 'Egypt', 'phone': '01005527292'}, 'billingAddress': {'address1': 'Stone Residence Compound 306, Third Settlement', 'address2': '9', 'city': 'Cairo', 'province': 'Cairo', 'zip': None, 'country': 'Egypt', 'phone': '01005527292'}, 'lineItems': {'edges': [{'node': {'id': 'gid://shopify/LineItem/15822411366466', 'quantity': 1, 'sku': None, 'title': 'karim test', 'variant': {'id': 'gid://shopify/ProductVariant/42361056985154', 'sku': None, 'price': '1.00', 'product': {'id': 'gid://shopify/Product/7522803515458', 'title': 'karim test'}}, 'discountedTotalSet': {'shopMoney': {'amount': '1.0', 'currencyCode': 'EGP'}}}}]}, 'note': None}}, {'node': {'id': 'gid://shopify/Order/6314801463362', 'name': '#1471', 'createdAt': '2025-08-03T12:37:41Z', 'tags': [], 'totalPriceSet': {'shopMoney': {'amount': '4620.0', 'currencyCode': 'EGP'}}, 'subtotalPriceSet': {'shopMoney': {'amount': '4500.0', 'currencyCode': 'EGP'}}, 'totalTaxSet': {'shopMoney': {'amount': '0.0', 'currencyCode': 'EGP'}}, 'totalShippingPriceSet': {'shopMoney': {'amount': '120.0', 'currencyCode': 'EGP'}}, 'customer': {'id': 'gid://shopify/Customer/8028986572866', 'firstName': 'Manal', 'lastName': 'Dorgham', 'email': 'manaldorgham4@gmail.com', 'phone': None, 'addresses': [{'address1': 'Moon valley compound. New Cairo', 'address2': '45 D', 'city': 'Cairo', 'province': 'Cairo', 'zip': None, 'country': 'Egypt', 'phone': '01222455309'}]}, 'shippingAddress': {'address1': 'Moon valley compound. New Cairo', 'address2': '45 D', 'city': 'Cairo', 'province': 'Cairo', 'zip': None, 'country': 'Egypt', 'phone': '01222455309'}, 'billingAddress': {'address1': 'Moon valley compound. New Cairo', 'address2': '45 D', 'city': 'Cairo', 'province': 'Cairo', 'zip': None, 'country': 'Egypt', 'phone': '01222455309'}, 'lineItems': {'edges': [{'node': {'id': 'gid://shopify/LineItem/15822235631682', 'quantity': 1, 'sku': 'FG-0000544', 'title': 'Floway ring set', 'variant': {'id': 'gid://shopify/ProductVariant/42003150602306', 'sku': 'FG-0000544', 'price': '4500.00', 'product': {'id': 'gid://shopify/Product/7442024890434', 'title': 'Floway ring set'}}, 'discountedTotalSet': {'shopMoney': {'amount': '4500.0', 'currencyCode': 'EGP'}}}}]}, 'note': None}}, {'node': {'id': 'gid://shopify/Order/6314790420546', 'name': '#1470', 'createdAt': '2025-08-03T12:26:20Z', 'tags': [], 'totalPriceSet': {'shopMoney': {'amount': '7600.0', 'currencyCode': 'EGP'}}, 'subtotalPriceSet': {'shopMoney': {'amount': '7600.0', 'currencyCode': 'EGP'}}, 'totalTaxSet': {'shopMoney': {'amount': '0.0', 'currencyCode': 'EGP'}}, 'totalShippingPriceSet': {'shopMoney': {'amount': '0.0', 'currencyCode': 'EGP'}}, 'customer': {'id': 'gid://shopify/Customer/7539785334850', 'firstName': 'Karim', 'lastName': 'Wafik', 'email': 'karimwafik.kw@gmail.com', 'phone': None, 'addresses': [{'address1': '97 Marghany st., Heliopolis, Cairo, Egypt', 'address2': None, 'city': 'Cairo', 'province': 'Cairo', 'zip': '21113', 'country': 'Egypt', 'phone': '+201005527292'}, {'address1': 'Stone Residence Compound 306, Third Settlement', 'address2': '9', 'city': 'Cairo', 'province': 'Cairo', 'zip': None, 'country': 'Egypt', 'phone': '01005527292'}]}, 'shippingAddress': None, 'billingAddress': None, 'lineItems': {'edges': [{'node': {'id': 'gid://shopify/LineItem/15822212661314', 'quantity': 1, 'sku': 'FG-0000645', 'title': 'Flare Earrings', 'variant': {'id': 'gid://shopify/ProductVariant/42277872271426', 'sku': 'FG-0000645', 'price': '3800.00', 'product': {'id': 'gid://shopify/Product/7506409586754', 'title': 'Flare Earrings'}}, 'discountedTotalSet': {'shopMoney': {'amount': '3800.0', 'currencyCode': 'EGP'}}}}, {'node': {'id': 'gid://shopify/LineItem/15822221770818', 'quantity': 1, 'sku': None, 'title': 'Gift Card', 'variant': None, 'discountedTotalSet': {'shopMoney': {'amount': '3800.0', 'currencyCode': 'EGP'}}}}]}, 'note': None}}, {'node': {'id': 'gid://shopify/Order/6314786357314', 'name': '#1469', 'createdAt': '2025-08-03T12:21:46Z', 'tags': [], 'totalPriceSet': {'shopMoney': {'amount': '6900.0', 'currencyCode': 'EGP'}}, 'subtotalPriceSet': {'shopMoney': {'amount': '6900.0', 'currencyCode': 'EGP'}}, 'totalTaxSet': {'shopMoney': {'amount': '0.0', 'currencyCode': 'EGP'}}, 'totalShippingPriceSet': {'shopMoney': {'amount': '0.0', 'currencyCode': 'EGP'}}, 'customer': None, 'shippingAddress': None, 'billingAddress': None, 'lineItems': {'edges': [{'node': {'id': 'gid://shopify/LineItem/15822205321282', 'quantity': 1, 'sku': 'FG-0000345', 'title': 'Mini Harmonia Earrings', 'variant': {'id': 'gid://shopify/ProductVariant/42003146801218', 'sku': 'FG-0000345', 'price': '6900.00', 'product': {'id': 'gid://shopify/Product/7442022793282', 'title': 'Mini Harmonia Earrings'}}, 'discountedTotalSet': {'shopMoney': {'amount': '6900.0', 'currencyCode': 'EGP'}}}}]}, 'note': None}}, {'node': {'id': 'gid://shopify/Order/6314775969858', 'name': '#1468', 'createdAt': '2025-08-03T12:12:09Z', 'tags': [], 'totalPriceSet': {'shopMoney': {'amount': '2920.0', 'currencyCode': 'EGP'}}, 'subtotalPriceSet': {'shopMoney': {'amount': '2800.0', 'currencyCode': 'EGP'}}, 'totalTaxSet': {'shopMoney': {'amount': '0.0', 'currencyCode': 'EGP'}}, 'totalShippingPriceSet': {'shopMoney': {'amount': '120.0', 'currencyCode': 'EGP'}}, 'customer': {'id': 'gid://shopify/Customer/8028955639874', 'firstName': 'Mariam', 'lastName': 'Mackawy', 'email': 'mariammackawy5@gmail.com', 'phone': None, 'addresses': [{'address1': 'الرحاب ٢، مجموعة ١٣١، عمارة ٢٠، شقة ٤١', 'address2': '41 El Rehab2, Group 131, Building 20, Apartment', 'city': 'Cairo', 'province': 'Cairo', 'zip': '11511', 'country': 'Egypt', 'phone': '01285358540'}]}, 'shippingAddress': {'address1': 'الرحاب ٢، مجموعة ١٣١، عمارة ٢٠، شقة ٤١', 'address2': '41 El Rehab2, Group 131, Building 20, Apartment', 'city': 'Cairo', 'province': 'Cairo', 'zip': '11511', 'country': 'Egypt', 'phone': '01285358540'}, 'billingAddress': {'address1': 'الرحاب ٢، مجموعة ١٣١، عمارة ٢٠، شقة ٤١', 'address2': '41 El Rehab2, Group 131, Building 20, Apartment', 'city': 'Cairo', 'province': 'Cairo', 'zip': '11511', 'country': 'Egypt', 'phone': '01285358540'}, 'lineItems': {'edges': [{'node': {'id': 'gid://shopify/LineItem/15822184742978', 'quantity': 1, 'sku': 'FG-0000498', 'title': 'Cassandra Pinky Ring', 'variant': {'id': 'gid://shopify/ProductVariant/42003149881410', 'sku': 'FG-0000498', 'price': '2800.00', 'product': {'id': 'gid://shopify/Product/7442024300610', 'title': 'Cassandra Pinky Ring'}}, 'discountedTotalSet': {'shopMoney': {'amount': '2800.0', 'currencyCode': 'EGP'}}}}]}, 'note': None}}, {'node': {'id': 'gid://shopify/Order/6314438000706', 'name': '#1467', 'createdAt': '2025-08-03T04:32:29Z', 'tags': [], 'totalPriceSet': {'shopMoney': {'amount': '3200.0', 'currencyCode': 'EGP'}}, 'subtotalPriceSet': {'shopMoney': {'amount': '3200.0', 'currencyCode': 'EGP'}}, 'totalTaxSet': {'shopMoney': {'amount': '0.0', 'currencyCode': 'EGP'}}, 'totalShippingPriceSet': {'shopMoney': {'amount': '0.0', 'currencyCode': 'EGP'}}, 'customer': {'id': 'gid://shopify/Customer/8026031751234', 'firstName': 'sally', 'lastName': 'monir', 'email': 'sallymonir@yahoo.com', 'phone': None, 'addresses': [{'address1': '113, st. 17, First Area, fifth zone, fifth settlement', 'address2': '2', 'city': 'New Cairo', 'province': 'Cairo', 'zip': None, 'country': 'Egypt', 'phone': '+201273099926'}]}, 'shippingAddress': None, 'billingAddress': {'address1': '113, st. 17, First Area, fifth zone, fifth settlement', 'address2': '2', 'city': 'New Cairo', 'province': 'Cairo', 'zip': None, 'country': 'Egypt', 'phone': '+201273099926'}, 'lineItems': {'edges': [{'node': {'id': 'gid://shopify/LineItem/15821581156418', 'quantity': 1, 'sku': 'FG-0000468', 'title': 'Frost Ring', 'variant': {'id': 'gid://shopify/ProductVariant/42003151618114', 'sku': 'FG-0000468', 'price': '3200.00', 'product': {'id': 'gid://shopify/Product/7442025381954', 'title': 'Frost Ring'}}, 'discountedTotalSet': {'shopMoney': {'amount': '3200.0', 'currencyCode': 'EGP'}}}}]}, 'note': None}}, {'node': {'id': 'gid://shopify/Order/6312813002818', 'name': '#1466', 'createdAt': '2025-08-02T11:04:39Z', 'tags': [], 'totalPriceSet': {'shopMoney': {'amount': '4420.0', 'currencyCode': 'EGP'}}, 'subtotalPriceSet': {'shopMoney': {'amount': '4300.0', 'currencyCode': 'EGP'}}, 'totalTaxSet': {'shopMoney': {'amount': '0.0', 'currencyCode': 'EGP'}}, 'totalShippingPriceSet': {'shopMoney': {'amount': '120.0', 'currencyCode': 'EGP'}}, 'customer': {'id': 'gid://shopify/Customer/8026480607298', 'firstName': 'Nadine', 'lastName': 'GALAL', 'email': 'nadinegalal09@gmail.com', 'phone': None, 'addresses': [{'address1': 'امام ٣١ شارع ابراهيم حلمي الدور ٣ شقة ١١', 'address2': 'الدور ٣ شقة ١١', 'city': 'Alexandria', 'province': 'Alexandria', 'zip': None, 'country': 'Egypt', 'phone': '01284444565'}]}, 'shippingAddress': {'address1': 'امام ٣١ شارع ابراهيم حلمي الدور ٣ شقة ١١', 'address2': 'الدور ٣ شقة ١١', 'city': 'Alexandria', 'province': 'Alexandria', 'zip': None, 'country': 'Egypt', 'phone': '01284444565'}, 'billingAddress': {'address1': 'امام ٣١ شارع ابراهيم حلمي الدور ٣ شقة ١١', 'address2': 'الدور ٣ شقة ١١', 'city': 'Alexandria', 'province': 'Alexandria', 'zip': None, 'country': 'Egypt', 'phone': '01284444565'}, 'lineItems': {'edges': [{'node': {'id': 'gid://shopify/LineItem/15817138307138', 'quantity': 1, 'sku': 'FG-0000499', 'title': 'Cassandra Mix Pinky Ring', 'variant': {'id': 'gid://shopify/ProductVariant/42003149815874', 'sku': 'FG-0000499', 'price': '4300.00', 'product': {'id': 'gid://shopify/Product/7442024235074', 'title': 'Cassandra Mix Pinky Ring'}}, 'discountedTotalSet': {'shopMoney': {'amount': '4300.0', 'currencyCode': 'EGP'}}}}]}, 'note': None}}, {'node': {'id': 'gid://shopify/Order/6312140603458', 'name': '#1465', 'createdAt': '2025-08-01T23:27:00Z', 'tags': [], 'totalPriceSet': {'shopMoney': {'amount': '8860.0', 'currencyCode': 'EGP'}}, 'subtotalPriceSet': {'shopMoney': {'amount': '8700.0', 'currencyCode': 'EGP'}}, 'totalTaxSet': {'shopMoney': {'amount': '0.0', 'currencyCode': 'EGP'}}, 'totalShippingPriceSet': {'shopMoney': {'amount': '160.0', 'currencyCode': 'EGP'}}, 'customer': {'id': 'gid://shopify/Customer/8024664145986', 'firstName': 'Mai', 'lastName': 'Aladdin', 'email': 'mayyo69@gmail.com', 'phone': None, 'addresses': [{'address1': 'Sohag - shar2', 'address2': None, 'city': 'Sohag', 'province': 'Sohag', 'zip': None, 'country': 'Egypt', 'phone': '01027733614'}]}, 'shippingAddress': {'address1': 'Sohag - shar2', 'address2': None, 'city': 'Sohag', 'province': 'Sohag', 'zip': None, 'country': 'Egypt', 'phone': '01027733614'}, 'billingAddress': {'address1': 'Sohag - shar2', 'address2': None, 'city': 'Sohag', 'province': 'Sohag', 'zip': None, 'country': 'Egypt', 'phone': '01027733614'}, 'lineItems': {'edges': [{'node': {'id': 'gid://shopify/LineItem/15815787151426', 'quantity': 1, 'sku': 'FG-0000498', 'title': 'Cassandra Pinky Ring', 'variant': {'id': 'gid://shopify/ProductVariant/42003149881410', 'sku': 'FG-0000498', 'price': '2800.00', 'product': {'id': 'gid://shopify/Product/7442024300610', 'title': 'Cassandra Pinky Ring'}}, 'discountedTotalSet': {'shopMoney': {'amount': '2800.0', 'currencyCode': 'EGP'}}}}, {'node': {'id': 'gid://shopify/LineItem/15815787184194', 'quantity': 1, 'sku': 'FG-0000575', 'title': 'Janus Cuff', 'variant': {'id': 'gid://shopify/ProductVariant/42003153256514', 'sku': 'FG-0000575', 'price': '5900.00', 'product': {'id': 'gid://shopify/Product/7442025906242', 'title': 'Janus Cuff'}}, 'discountedTotalSet': {'shopMoney': {'amount': '5900.0', 'currencyCode': 'EGP'}}}}]}, 'note': None}}, {'node': {'id': 'gid://shopify/Order/6311861026882', 'name': '#1464', 'createdAt': '2025-08-01T20:45:45Z', 'tags': [], 'totalPriceSet': {'shopMoney': {'amount': '4800.0', 'currencyCode': 'EGP'}}, 'subtotalPriceSet': {'shopMoney': {'amount': '4800.0', 'currencyCode': 'EGP'}}, 'totalTaxSet': {'shopMoney': {'amount': '0.0', 'currencyCode': 'EGP'}}, 'totalShippingPriceSet': {'shopMoney': {'amount': '0.0', 'currencyCode': 'EGP'}}, 'customer': {'id': 'gid://shopify/Customer/8024130191426', 'firstName': 'Ibrahim', 'lastName': 'ElGohary', 'email': 'hima22may@hotmail.com', 'phone': None, 'addresses': [{'address1': 'Wady compound', 'address2': 'Home', 'city': 'Cairo', 'province': 'Cairo', 'zip': None, 'country': 'Egypt', 'phone': '01007217010'}]}, 'shippingAddress': None, 'billingAddress': {'address1': 'Wady compound', 'address2': 'Home', 'city': 'Cairo', 'province': 'Cairo', 'zip': None, 'country': 'Egypt', 'phone': '01007217010'}, 'lineItems': {'edges': [{'node': {'id': 'gid://shopify/LineItem/15815036600386', 'quantity': 1, 'sku': 'FG-0000075', 'title': 'Sulla Luna Earrings', 'variant': {'id': 'gid://shopify/ProductVariant/42003146211394', 'sku': 'FG-0000075', 'price': '4800.00', 'product': {'id': 'gid://shopify/Product/7442022170690', 'title': 'Sulla Luna Earrings'}}, 'discountedTotalSet': {'shopMoney': {'amount': '4800.0', 'currencyCode': 'EGP'}}}}]}, 'note': None}}, {'node': {'id': 'gid://shopify/Order/6311162380354', 'name': '#1463', 'createdAt': '2025-08-01T15:19:07Z', 'tags': [], 'totalPriceSet': {'shopMoney': {'amount': '7460.0', 'currencyCode': 'EGP'}}, 'subtotalPriceSet': {'shopMoney': {'amount': '7300.0', 'currencyCode': 'EGP'}}, 'totalTaxSet': {'shopMoney': {'amount': '0.0', 'currencyCode': 'EGP'}}, 'totalShippingPriceSet': {'shopMoney': {'amount': '160.0', 'currencyCode': 'EGP'}}, 'customer': {'id': 'gid://shopify/Customer/8022959784002', 'firstName': 'Nahed', 'lastName': 'Mohamed', 'email': 'nahedmohamed714@gmail.com', 'phone': None, 'addresses': [{'address1': 'العصافره بحرى الاسكندريه شارع اطلس عماره ١١ مكرر بجوار سوبر ناركت تسالى جاد امام مايوركا كافيه', 'address2': 'الدور التامن شقه ١٥', 'city': 'alexandria', 'province': 'Alexandria', 'zip': None, 'country': 'Egypt', 'phone': '+201284002489'}]}, 'shippingAddress': {'address1': 'العصافره بحرى الاسكندريه شارع اطلس عماره ١١ مكرر بجوار سوبر ناركت تسالى جاد امام مايوركا كافيه', 'address2': 'الدور التامن شقه ١٥', 'city': 'alexandria', 'province': 'Alexandria', 'zip': None, 'country': 'Egypt', 'phone': '+201284002489'}, 'billingAddress': {'address1': 'العصافره بحرى الاسكندريه شارع اطلس عماره ١١ مكرر بجوار سوبر ناركت تسالى جاد امام مايوركا كافيه', 'address2': 'الدور التامن شقه ١٥', 'city': 'alexandria', 'province': 'Alexandria', 'zip': None, 'country': 'Egypt', 'phone': '+201284002489'}, 'lineItems': {'edges': [{'node': {'id': 'gid://shopify/LineItem/15813349867586', 'quantity': 1, 'sku': 'FG-0000077', 'title': 'Sulla Luna Mix Earrings', 'variant': {'id': 'gid://shopify/ProductVariant/42003146276930', 'sku': 'FG-0000077', 'price': '7300.00', 'product': {'id': 'gid://shopify/Product/7442022203458', 'title': 'Sulla Luna Mix Earrings'}}, 'discountedTotalSet': {'shopMoney': {'amount': '7300.0', 'currencyCode': 'EGP'}}}}]}, 'note': None}}, {'node': {'id': 'gid://shopify/Order/6308680728642', 'name': '#1462', 'createdAt': '2025-07-31T09:58:23Z', 'tags': [], 'totalPriceSet': {'shopMoney': {'amount': '25900.0', 'currencyCode': 'EGP'}}, 'subtotalPriceSet': {'shopMoney': {'amount': '25700.0', 'currencyCode': 'EGP'}}, 'totalTaxSet': {'shopMoney': {'amount': '0.0', 'currencyCode': 'EGP'}}, 'totalShippingPriceSet': {'shopMoney': {'amount': '200.0', 'currencyCode': 'EGP'}}, 'customer': {'id': 'gid://shopify/Customer/8016631660610', 'firstName': 'Mohamed', 'lastName': 'Maher', 'email': 'm.maher525@gmail.com', 'phone': None, 'addresses': [{'address1': None, 'address2': None, 'city': None, 'province': None, 'zip': None, 'country': 'Egypt', 'phone': None}, {'address1': 'الهضبة الوسطى الحي الثالث كمباوند ديار سيتي 3 خلف مدرسة ريماس', 'address2': 'عمارة 2 شقة 20 بوابة 3', 'city': 'Al Mokkatam', 'province': 'Cairo', 'zip': None, 'country': 'Egypt', 'phone': '01069987443'}]}, 'shippingAddress': {'address1': 'الهضبة الوسطى الحي الثالث كمباوند ديار سيتي 3 خلف مدرسة ريماس', 'address2': 'عمارة 2 شقة 20 بوابة 3', 'city': 'Al Mokkatam', 'province': 'Cairo', 'zip': None, 'country': 'Egypt', 'phone': '01069987443'}, 'billingAddress': {'address1': 'الهضبة الوسطى الحي الثالث كمباوند ديار سيتي 3 خلف مدرسة ريماس', 'address2': 'عمارة 2 شقة 20 بوابة 3', 'city': 'Al Mokkatam', 'province': 'Cairo', 'zip': None, 'country': 'Egypt', 'phone': '01069987443'}, 'lineItems': {'edges': [{'node': {'id': 'gid://shopify/LineItem/15807895044162', 'quantity': 1, 'sku': 'FG-0000512', 'title': 'Riverstone Bracelet', 'variant': {'id': 'gid://shopify/ProductVariant/42003152404546', 'sku': 'FG-0000512', 'price': '5000.00', 'product': {'id': 'gid://shopify/Product/7442025611330', 'title': 'Riverstone Bracelet'}}, 'discountedTotalSet': {'shopMoney': {'amount': '5000.0', 'currencyCode': 'EGP'}}}}, {'node': {'id': 'gid://shopify/LineItem/15807895076930', 'quantity': 1, 'sku': 'FG-0000571', 'title': 'Riverstone Ring Mix', 'variant': {'id': 'gid://shopify/ProductVariant/42003150995522', 'sku': 'FG-0000571', 'price': '3900.00', 'product': {'id': 'gid://shopify/Product/7442025152578', 'title': 'Riverstone Ring Mix'}}, 'discountedTotalSet': {'shopMoney': {'amount': '3900.0', 'currencyCode': 'EGP'}}}}, {'node': {'id': 'gid://shopify/LineItem/15807895109698', 'quantity': 1, 'sku': 'FG-0000568', 'title': 'Riverstone Necklace Mix', 'variant': {'id': 'gid://shopify/ProductVariant/42003150962754', 'sku': 'FG-0000568', 'price': '16800.00', 'product': {'id': 'gid://shopify/Product/7442025119810', 'title': 'Riverstone Necklace Mix'}}, 'discountedTotalSet': {'shopMoney': {'amount': '16800.0', 'currencyCode': 'EGP'}}}}]}, 'note': None}}, {'node': {'id': 'gid://shopify/Order/6308073570370', 'name': '#1461', 'createdAt': '2025-07-30T23:37:58Z', 'tags': [], 'totalPriceSet': {'shopMoney': {'amount': '6700.0', 'currencyCode': 'EGP'}}, 'subtotalPriceSet': {'shopMoney': {'amount': '6500.0', 'currencyCode': 'EGP'}}, 'totalTaxSet': {'shopMoney': {'amount': '0.0', 'currencyCode': 'EGP'}}, 'totalShippingPriceSet': {'shopMoney': {'amount': '200.0', 'currencyCode': 'EGP'}}, 'customer': {'id': 'gid://shopify/Customer/8015808462914', 'firstName': 'farouk', 'lastName': 'yehia', 'email': 'farouky01@gmail.com', 'phone': None, 'addresses': [{'address1': 'mesaha sq', 'address2': '5 mesaha sq, 15th floor', 'city': 'giza', 'province': 'Cairo', 'zip': '12611', 'country': 'Egypt', 'phone': '+201060520013'}]}, 'shippingAddress': {'address1': 'mesaha sq', 'address2': '5 mesaha sq, 15th floor', 'city': 'giza', 'province': 'Cairo', 'zip': '12611', 'country': 'Egypt', 'phone': '+201060520013'}, 'billingAddress': {'address1': 'mesaha sq', 'address2': '5 mesaha sq, 15th floor', 'city': 'giza', 'province': 'Cairo', 'zip': '12611', 'country': 'Egypt', 'phone': '+201060520013'}, 'lineItems': {'edges': [{'node': {'id': 'gid://shopify/LineItem/15806636818498', 'quantity': 1, 'sku': 'FG-0000408', 'title': 'Nightfall Earrings', 'variant': {'id': 'gid://shopify/ProductVariant/42003148996674', 'sku': 'FG-0000408', 'price': '6500.00', 'product': {'id': 'gid://shopify/Product/7442023841858', 'title': 'Nightfall Earrings'}}, 'discountedTotalSet': {'shopMoney': {'amount': '6500.0', 'currencyCode': 'EGP'}}}}]}, 'note': None}}], 'pageInfo': {'hasNextPage': True, 'endCursor': 'eyJsYXN0X2lkIjo2MzA4MDczNTcwMzcwLCJsYXN0X3ZhbHVlIjoiMjAyNS0wNy0zMCAyMzozNzo1OC45MDkxNTcifQ=='}}}, 'status': 'success'}
2025-08-05 18:10:37,874 - sync_service - INFO - Retrieved 20 total orders, 20 unsynced orders from Shopify store local
2025-08-05 18:10:37,874 - sync_service - INFO - Processing order: #1480
2025-08-05 18:10:37,875 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'BusinessPartners', 'request': {'method': 'GET', 'url': 'https://10.0.0.100:50000/b1s/v1/BusinessPartners', 'data': None, 'params': {'$filter': "Phone1 eq '00201003370743' or Phone2 eq '00201003370743' or Cellular eq '00201003370743'", '$top': 1}}, 'response': None, 'status': None}
2025-08-05 18:10:38,624 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'BusinessPartners', 'request': None, 'response': {'odata.metadata': 'https://10.0.0.100:50000/b1s/v1/$metadata#BusinessPartners', 'value': [{'CardCode': 'C0021031', 'CardName': 'Omnia Ezz Elarab', 'CardType': 'cCustomer', 'GroupCode': 100, 'Address': None, 'ZipCode': None, 'MailAddress': 'Palm hills 6th october, phase 1 Villa b53', 'MailZipCode': '00000', 'Phone1': None, 'Phone2': None, 'Fax': None, 'ContactPerson': None, 'Notes': None, 'PayTermsGrpCode': -1, 'CreditLimit': 0.0, 'MaxCommitment': 0.0, 'DiscountPercent': 0.0, 'VatLiable': 'vLiable', 'FederalTaxID': None, 'DeductibleAtSource': 'tNO', 'DeductionPercent': 0.0, 'DeductionValidUntil': None, 'PriceListNum': 1, 'IntrestRatePercent': 0.0, 'CommissionPercent': 0.0, 'CommissionGroupCode': 0, 'FreeText': None, 'SalesPersonCode': -1, 'Currency': 'EGP', 'RateDiffAccount': None, 'Cellular': '00201003370743', 'AvarageLate': None, 'City': None, 'County': None, 'Country': 'EG', 'MailCity': 'Giza', 'MailCounty': None, 'MailCountry': 'EG', 'EmailAddress': None, 'Picture': None, 'DefaultAccount': None, 'DefaultBranch': None, 'DefaultBankCode': '-1', 'AdditionalID': None, 'Pager': None, 'FatherCard': None, 'CardForeignName': None, 'FatherType': 'cPayments_sum', 'DeductionOffice': None, 'ExportCode': None, 'MinIntrest': 0.0, 'CurrentAccountBalance': 0.0, 'OpenDeliveryNotesBalance': 0.0, 'OpenOrdersBalance': 0.0, 'OpenChecksBalance': 0.0, 'VatGroup': None, 'ShippingType': None, 'Password': None, 'Indicator': None, 'IBAN': None, 'CreditCardCode': -1, 'CreditCardNum': '', 'CreditCardExpiration': None, 'DebitorAccount': '10601110', 'OpenOpportunities': None, 'Valid': 'tYES', 'ValidFrom': None, 'ValidTo': None, 'ValidRemarks': None, 'Frozen': 'tNO', 'FrozenFrom': None, 'FrozenTo': None, 'FrozenRemarks': None, 'Block': None, 'BillToState': None, 'ShipToState': None, 'ExemptNum': None, 'Priority': -1, 'FormCode1099': None, 'Box1099': None, 'PeymentMethodCode': None, 'BackOrder': 'tYES', 'PartialDelivery': 'tYES', 'BlockDunning': 'tNO', 'BankCountry': None, 'HouseBank': 'CIB', 'HouseBankCountry': 'EG', 'HouseBankAccount': '100029997769', 'ShipToDefault': 'Omnia Ezz Elarab 1', 'DunningLevel': None, 'DunningDate': None, 'CollectionAuthorization': 'tNO', 'DME': None, 'InstructionKey': None, 'SinglePayment': 'tNO', 'ISRBillerID': None, 'PaymentBlock': 'tNO', 'ReferenceDetails': None, 'HouseBankBranch': 'New Cairo', 'OwnerIDNumber': None, 'PaymentBlockDescription': -1, 'TaxExemptionLetterNum': None, 'MaxAmountOfExemption': 0.0, 'ExemptionValidityDateFrom': None, 'ExemptionValidityDateTo': None, 'LinkedBusinessPartner': None, 'LastMultiReconciliationNum': None, 'DeferredTax': 'tNO', 'Equalization': 'tNO', 'SubjectToWithholdingTax': 'boNO', 'CertificateNumber': None, 'ExpirationDate': None, 'NationalInsuranceNum': None, 'AccrualCriteria': 'tNO', 'WTCode': None, 'BillToBuildingFloorRoom': None, 'DownPaymentClearAct': '20101212', 'ChannelBP': None, 'DefaultTechnician': None, 'BilltoDefault': None, 'CustomerBillofExchangDisc': None, 'Territory': None, 'ShipToBuildingFloorRoom': '', 'CustomerBillofExchangPres': None, 'ProjectCode': None, 'VatGroupLatinAmerica': None, 'DunningTerm': None, 'Website': None, 'OtherReceivablePayable': None, 'BillofExchangeonCollection': None, 'CompanyPrivate': 'cCompany', 'LanguageCode': 8, 'UnpaidBillofExchange': None, 'WithholdingTaxDeductionGroup': -1, 'ClosingDateProcedureNumber': None, 'Profession': None, 'BankChargesAllocationCode': None, 'TaxRoundingRule': 'trr_CompanyDefault', 'Properties1': 'tNO', 'Properties2': 'tNO', 'Properties3': 'tNO', 'Properties4': 'tNO', 'Properties5': 'tNO', 'Properties6': 'tNO', 'Properties7': 'tNO', 'Properties8': 'tNO', 'Properties9': 'tNO', 'Properties10': 'tNO', 'Properties11': 'tNO', 'Properties12': 'tNO', 'Properties13': 'tNO', 'Properties14': 'tNO', 'Properties15': 'tNO', 'Properties16': 'tNO', 'Properties17': 'tNO', 'Properties18': 'tNO', 'Properties19': 'tNO', 'Properties20': 'tNO', 'Properties21': 'tNO', 'Properties22': 'tNO', 'Properties23': 'tNO', 'Properties24': 'tNO', 'Properties25': 'tNO', 'Properties26': 'tNO', 'Properties27': 'tNO', 'Properties28': 'tNO', 'Properties29': 'tNO', 'Properties30': 'tNO', 'Properties31': 'tNO', 'Properties32': 'tNO', 'Properties33': 'tNO', 'Properties34': 'tNO', 'Properties35': 'tNO', 'Properties36': 'tNO', 'Properties37': 'tNO', 'Properties38': 'tNO', 'Properties39': 'tNO', 'Properties40': 'tNO', 'Properties41': 'tNO', 'Properties42': 'tNO', 'Properties43': 'tNO', 'Properties44': 'tNO', 'Properties45': 'tNO', 'Properties46': 'tNO', 'Properties47': 'tNO', 'Properties48': 'tNO', 'Properties49': 'tNO', 'Properties50': 'tNO', 'Properties51': 'tNO', 'Properties52': 'tNO', 'Properties53': 'tNO', 'Properties54': 'tNO', 'Properties55': 'tNO', 'Properties56': 'tNO', 'Properties57': 'tNO', 'Properties58': 'tNO', 'Properties59': 'tNO', 'Properties60': 'tNO', 'Properties61': 'tNO', 'Properties62': 'tNO', 'Properties63': 'tNO', 'Properties64': 'tNO', 'CompanyRegistrationNumber': None, 'VerificationNumber': None, 'DiscountBaseObject': 'dgboNone', 'DiscountRelations': 'dgrLowestDiscount', 'TypeReport': 'atCompany', 'ThresholdOverlook': 'tNO', 'SurchargeOverlook': 'tNO', 'DownPaymentInterimAccount': None, 'OperationCode347': 'ocSalesOrServicesRevenues', 'InsuranceOperation347': 'tNO', 'HierarchicalDeduction': 'tNO', 'ShaamGroup': 'sgServicesAndAsset', 'WithholdingTaxCertified': 'tNO', 'BookkeepingCertified': 'tNO', 'PlanningGroup': None, 'Affiliate': 'tNO', 'Industry': None, 'VatIDNum': None, 'DatevAccount': None, 'DatevFirstDataEntry': 'tYES', 'UseShippedGoodsAccount': 'tNO', 'GTSRegNo': None, 'GTSBankAccountNo': None, 'GTSBillingAddrTel': None, 'ETaxWebSite': None, 'HouseBankIBAN': None, 'VATRegistrationNumber': None, 'RepresentativeName': None, 'IndustryType': None, 'BusinessType': None, 'Series': 87, 'AutomaticPosting': 'apNo', 'InterestAccount': None, 'FeeAccount': None, 'CampaignNumber': None, 'AliasName': None, 'DefaultBlanketAgreementNumber': None, 'EffectiveDiscount': 'dgrLowestDiscount', 'NoDiscounts': 'tNO', 'EffectivePrice': 'epDefaultPriority', 'EffectivePriceConsidersPriceBeforeDiscount': 'tNO', 'GlobalLocationNumber': None, 'EDISenderID': None, 'EDIRecipientID': None, 'ResidenNumber': 'rntSpanishFiscalID', 'RelationshipCode': None, 'RelationshipDateFrom': None, 'RelationshipDateTill': None, 'UnifiedFederalTaxID': None, 'AttachmentEntry': None, 'TypeOfOperation': None, 'EndorsableChecksFromBP': 'tYES', 'AcceptsEndorsedChecks': 'tNO', 'OwnerCode': None, 'BlockSendingMarketingContent': 'tNO', 'AgentCode': None, 'PriceMode': 'pmNet', 'EDocGenerationType': None, 'EDocStreet': None, 'EDocStreetNumber': None, 'EDocBuildingNumber': None, 'EDocZipCode': None, 'EDocCity': None, 'EDocCountry': None, 'EDocDistrict': None, 'EDocRepresentativeFirstName': None, 'EDocRepresentativeSurname': None, 'EDocRepresentativeCompany': None, 'EDocRepresentativeFiscalCode': None, 'EDocRepresentativeAdditionalId': None, 'EDocPECAddress': None, 'IPACodeForPA': None, 'UpdateDate': '2025-08-05', 'UpdateTime': '18:02:59', 'ExemptionMaxAmountValidationType': 'emaIndividual', 'ECommerceMerchantID': None, 'UseBillToAddrToDetermineTax': 'tNO', 'CreateDate': '2025-08-05', 'CreateTime': '18:02:59', 'DefaultTransporterEntry': None, 'DefaultTransporterLineNumber': None, 'FCERelevant': 'tNO', 'FCEValidateBaseDelivery': 'tNO', 'MainUsage': None, 'EBooksVATExemptionCause': None, 'U_BP_Old': None, 'U_SBO_BPType': 'Person', 'ElectronicProtocols': [], 'BPAddresses': [{'AddressName': 'Omnia Ezz Elarab 1', 'Street': 'Palm hills 6th october, phase 1 Villa b53', 'Block': None, 'ZipCode': '00000', 'City': 'Giza', 'County': None, 'Country': 'EG', 'State': None, 'FederalTaxID': None, 'TaxCode': None, 'BuildingFloorRoom': None, 'AddressType': 'bo_ShipTo', 'AddressName2': None, 'AddressName3': None, 'TypeOfAddress': None, 'StreetNo': None, 'BPCode': 'C0021031', 'RowNum': 0, 'GlobalLocationNumber': None, 'Nationality': None, 'TaxOffice': None, 'GSTIN': None, 'GstType': None, 'CreateDate': '2025-08-05', 'CreateTime': '18:02:59', 'MYFType': None, 'TaasEnabled': 'tYES'}], 'ContactEmployees': [], 'BPAccountReceivablePaybleCollection': [], 'BPPaymentMethods': [], 'BPWithholdingTaxCollection': [], 'BPPaymentDates': [], 'BPBranchAssignment': [], 'BPBankAccounts': [], 'BPFiscalTaxIDCollection': [], 'DiscountGroups': [], 'BPIntrastatExtension': {}, 'BPBlockSendingMarketingContents': []}]}, 'status': 'success'}
2025-08-05 18:10:38,626 - sync_service - INFO - Found existing customer: C0021031
2025-08-05 18:10:38,627 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'Invoices', 'request': {'method': 'POST', 'url': 'https://10.0.0.100:50000/b1s/v1/Invoices', 'data': {'DocDate': '2025-08-05', 'CardCode': 'C0021031', 'NumAtCard': '', 'Comments': '', 'ShipToCode': 'Omnia Ezz Elarab Address 1', 'U_Shopify_Order_ID': '#1480', 'SalesPersonCode': 97, 'DocumentLines': [{'ItemCode': 'FG-0000632', 'Quantity': 1, 'UnitPrice': 5000.0, 'WarehouseCode': 'Wh-0020'}], 'DocumentAdditionalExpenses': [{'ExpenseCode': 1, 'LineTotal': 200.0, 'Remarks': 'Shipping fee'}]}, 'params': None}, 'response': None, 'status': None}
2025-08-05 18:10:39,371 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'Invoices', 'request': None, 'response': {'status_code': 404, 'text': '{\n   "error" : {\n      "code" : -2028,\n      "message" : {\n         "lang" : "en-us",\n         "value" : "No matching records found (ODBC -2028)"\n      }\n   }\n}\n'}, 'status': 'failure'}
2025-08-05 18:10:39,372 - sync_service - ERROR - Failed to create invoice in SAP: HTTP 404: {
   "error" : {
      "code" : -2028,
      "message" : {
         "lang" : "en-us",
         "value" : "No matching records found (ODBC -2028)"
      }
   }
}

2025-08-05 18:17:10,627 - sync_service - INFO - Initialized Shopify client for store: Local Store (local)
2025-08-05 18:17:10,671 - sync_service - INFO - API Call: {'service': 'shopify', 'endpoint': 'graphql_local', 'request': {'query': '\n            query getOrders($first: Int!, $after: String) {\n                orders(first: $first, after: $after, sortKey: CREATED_AT, reverse: true) {\n                    edges {\n                        node {\n                            id\n                            name\n                            createdAt\n                            tags\n                            financialStatus\n                            fulfillmentStatus\n                            totalPriceSet {\n                                shopMoney {\n                                    amount\n                                    currencyCode\n                                }\n                            }\n                            subtotalPriceSet {\n                                shopMoney {\n                                    amount\n                                    currencyCode\n                                }\n                            }\n                            totalTaxSet {\n                                shopMoney {\n                                    amount\n                                    currencyCode\n                                }\n                            }\n                            totalShippingPriceSet {\n                                shopMoney {\n                                    amount\n                                    currencyCode\n                                }\n                            }\n                            customer {\n                                id\n                                firstName\n                                lastName\n                                email\n                                phone\n                                addresses {\n                                    address1\n                                    address2\n                                    city\n                                    province\n                                    zip\n                                    country\n                                    phone\n                                }\n                            }\n                            shippingAddress {\n                                address1\n                                address2\n                                city\n                                province\n                                zip\n                                country\n                                phone\n                            }\n                            billingAddress {\n                                address1\n                                address2\n                                city\n                                province\n                                zip\n                                country\n                                phone\n                            }\n                            lineItems(first: 50) {\n                                edges {\n                                    node {\n                                        id\n                                        quantity\n                                        sku\n                                        title\n                                        variant {\n                                            id\n                                            sku\n                                            price\n                                            product {\n                                                id\n                                                title\n                                            }\n                                        }\n                                        discountedTotalSet {\n                                            shopMoney {\n                                                amount\n                                                currencyCode\n                                            }\n                                        }\n                                    }\n                                }\n                            }\n                            note\n                        }\n                    }\n                    pageInfo {\n                        hasNextPage\n                        endCursor\n                    }\n                }\n            }\n            ', 'variables': {'first': 20, 'after': None}}, 'response': None, 'status': None}
2025-08-05 18:17:11,222 - sync_service - ERROR - GraphQL query error for store local: {'message': "Field 'financialStatus' doesn't exist on type 'Order'", 'locations': [{'line': 9, 'column': 9}], 'path': ['query getOrders', 'orders', 'edges', 'node', 'financialStatus'], 'extensions': {'code': 'undefinedField', 'typeName': 'Order', 'fieldName': 'financialStatus'}}
GraphQL Errors: [
  {
    "message": "Field 'financialStatus' doesn't exist on type 'Order'",
    "locations": [
      {
        "line": 9,
        "column": 9
      }
    ],
    "path": [
      "query getOrders",
      "orders",
      "edges",
      "node",
      "financialStatus"
    ],
    "extensions": {
      "code": "undefinedField",
      "typeName": "Order",
      "fieldName": "financialStatus"
    }
  },
  {
    "message": "Field 'fulfillmentStatus' doesn't exist on type 'Order'",
    "locations": [
      {
        "line": 10,
        "column": 9
      }
    ],
    "path": [
      "query getOrders",
      "orders",
      "edges",
      "node",
      "fulfillmentStatus"
    ],
    "extensions": {
      "code": "undefinedField",
      "typeName": "Order",
      "fieldName": "fulfillmentStatus"
    }
  }
]
GraphQL Data: null
GraphQL Extensions: null
2025-08-09 14:10:05,382 - sync_service - INFO - Initialized Shopify client for store: Local Store (local)
2025-08-09 14:10:05,384 - sync_service - INFO - API Call: {'service': 'shopify', 'endpoint': 'graphql_local', 'request': {'query': '\n        query {\n            locations(first: 10) {\n                edges {\n                    node {\n                        id\n                        name\n                        address {\n                            address1\n                            city\n                            country\n                        }\n                        isActive\n                    }\n                }\n            }\n        }\n        ', 'variables': None}, 'response': None, 'status': None}
2025-08-09 14:10:15,397 - sync_service - ERROR - GraphQL query error for store local: 
2025-08-09 14:10:16,666 - sync_service - INFO - SAP logging client login successful
2025-08-09 14:10:17,420 - sync_service - INFO - API log added to SAP: shopify - /admin/api/graphql_local - failure
2025-08-10 08:10:51,301 - sync_service - INFO - Initialized Shopify client for store: Local Store (local)
2025-08-10 08:18:29,947 - sync_service - INFO - Initialized Shopify client for store: Local Store (local)
2025-08-10 08:45:41,398 - sync_service - INFO - Initialized Shopify client for store: Local Store (local)
2025-08-10 08:49:24,284 - sync_service - INFO - Initialized Shopify client for store: Local Store (local)
2025-08-10 08:49:24,341 - sync_service - INFO - Starting all syncs...
2025-08-10 08:49:24,341 - sync_service - INFO - Starting new items sync...
2025-08-10 08:49:24,342 - sync_service - INFO - Starting multi-store new items sync from SAP to Shopify
2025-08-10 08:49:24,343 - sync_service - INFO - Fetching new items for store: local
2025-08-10 08:49:24,347 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'login', 'request': {'company': 'JudeBenHalim_Test', 'user': 'manager'}, 'response': None, 'status': None}
2025-08-10 08:49:25,198 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'login', 'request': None, 'response': {'status': 'success'}, 'status': 'success'}
2025-08-10 08:49:25,199 - sync_service - INFO - SAP login successful
2025-08-10 08:49:25,201 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': "view.svc/MASHURA_New_ItemsB1SLQuery?$filter=Shopify_Store eq 'local'&$orderby=MainProduct", 'request': {'method': 'GET', 'url': "https://10.0.0.100:50000/b1s/v1/view.svc/MASHURA_New_ItemsB1SLQuery?$filter=Shopify_Store eq 'local'&$orderby=MainProduct", 'data': None, 'params': None}, 'response': None, 'status': None}
2025-08-10 08:49:26,178 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': "view.svc/MASHURA_New_ItemsB1SLQuery?$filter=Shopify_Store eq 'local'&$orderby=MainProduct", 'request': None, 'response': {'odata.metadata': 'https://10.0.0.100:50000/b1s/v1/view.svc/$metadata#MASHURA_New_ItemsB1SLQuery', 'value': [{'itemcode': 'FG-0000704', 'ItemName': 'Morsi Bracelet', 'MainProduct': None, 'Color': None, 'Price': 3200.0, 'Shopify_Store': 'local', 'Shopify_ProductCode': None, 'Status': 'new', 'Barcode': '645464644', 'id__': 1}, {'itemcode': 'FG-0000708', 'ItemName': 'Morsi Socks', 'MainProduct': None, 'Color': None, 'Price': 200.0, 'Shopify_Store': 'local', 'Shopify_ProductCode': None, 'Status': 'new', 'Barcode': None, 'id__': 2}, {'itemcode': 'FG-0000711', 'ItemName': 'Morsi Keyboard', 'MainProduct': None, 'Color': None, 'Price': 1000.0, 'Shopify_Store': 'local', 'Shopify_ProductCode': None, 'Status': 'new', 'Barcode': None, 'id__': 3}, {'itemcode': 'FG-0000712', 'ItemName': 'AA-Iron Man Necklace', 'MainProduct': None, 'Color': None, 'Price': 1000.0, 'Shopify_Store': 'local', 'Shopify_ProductCode': None, 'Status': 'new', 'Barcode': '203090', 'id__': 4}, {'itemcode': 'FG-0000713', 'ItemName': 'AA-Ring Red', 'MainProduct': 'Iron Man Necklace', 'Color': 'Red', 'Price': 2000.0, 'Shopify_Store': 'local', 'Shopify_ProductCode': None, 'Status': 'new', 'Barcode': '203090', 'id__': 5}, {'itemcode': 'FG-0000714', 'ItemName': 'AA-Ring Blue', 'MainProduct': 'Iron Man Necklace', 'Color': 'Blue', 'Price': 3000.0, 'Shopify_Store': 'local', 'Shopify_ProductCode': None, 'Status': 'new', 'Barcode': '203090', 'id__': 6}, {'itemcode': 'FG-0000709', 'ItemName': 'Morsi-Laptop-Black', 'MainProduct': 'Morsi Laptop', 'Color': 'Black', 'Price': 1000.0, 'Shopify_Store': 'local', 'Shopify_ProductCode': None, 'Status': 'new', 'Barcode': None, 'id__': 7}, {'itemcode': 'FG-0000710', 'ItemName': 'Morsi-Laptop-Grey', 'MainProduct': 'Morsi Laptop', 'Color': 'Grey', 'Price': 1000.0, 'Shopify_Store': 'local', 'Shopify_ProductCode': None, 'Status': 'new', 'Barcode': None, 'id__': 8}, {'itemcode': 'FG-0000702', 'ItemName': 'Morsi-Necklace-Black', 'MainProduct': 'Morsi Necklace', 'Color': 'Black', 'Price': 2500.0, 'Shopify_Store': 'local', 'Shopify_ProductCode': None, 'Status': 'new', 'Barcode': '2123243245', 'id__': 9}, {'itemcode': 'FG-0000703', 'ItemName': 'Morsi-Necklace-White', 'MainProduct': 'Morsi Necklace', 'Color': 'White', 'Price': 2500.0, 'Shopify_Store': 'local', 'Shopify_ProductCode': None, 'Status': 'new', 'Barcode': '242342342', 'id__': 10}, {'itemcode': 'FG-0000705', 'ItemName': 'Morsi-Necklace-Green', 'MainProduct': 'Morsi Necklace', 'Color': 'Green', 'Price': 2500.0, 'Shopify_Store': 'local', 'Shopify_ProductCode': None, 'Status': 'new', 'Barcode': None, 'id__': 11}, {'itemcode': 'FG-0000706', 'ItemName': 'Morsi-Shoes-Green', 'MainProduct': 'Morsi Shoes', 'Color': 'Green', 'Price': 1000.0, 'Shopify_Store': 'local', 'Shopify_ProductCode': None, 'Status': 'new', 'Barcode': None, 'id__': 12}, {'itemcode': 'FG-0000707', 'ItemName': 'Morsi-Shoes-Beige', 'MainProduct': 'Morsi Shoes', 'Color': 'Beige', 'Price': 1000.0, 'Shopify_Store': 'local', 'Shopify_ProductCode': None, 'Status': 'new', 'Barcode': None, 'id__': 13}]}, 'status': 'success'}
2025-08-10 08:49:26,179 - sync_service - INFO - Product group: ('FG-0000704', 'local') has 1 items
2025-08-10 08:49:26,180 - sync_service - INFO - Product group: ('FG-0000708', 'local') has 1 items
2025-08-10 08:49:26,181 - sync_service - INFO - Product group: ('FG-0000711', 'local') has 1 items
2025-08-10 08:49:26,181 - sync_service - INFO - Product group: ('FG-0000712', 'local') has 1 items
2025-08-10 08:49:26,181 - sync_service - INFO - Product group: ('Iron Man Necklace', 'local') has 2 items
2025-08-10 08:49:26,183 - sync_service - INFO - Product group: ('Morsi Laptop', 'local') has 2 items
2025-08-10 08:49:26,184 - sync_service - INFO - Product group: ('Morsi Necklace', 'local') has 3 items
2025-08-10 08:49:26,185 - sync_service - INFO - Product group: ('Morsi Shoes', 'local') has 2 items
2025-08-10 08:49:26,185 - sync_service - INFO - Grouped 13 items into 8 product groups for store local
2025-08-10 08:49:26,185 - sync_service - INFO - Processing product group: ('FG-0000704', 'local') with 1 items for store local
2025-08-10 08:49:26,186 - sync_service - INFO - API Call: {'service': 'shopify', 'endpoint': 'graphql_local', 'request': {'query': '\n        query GetProductByHandle($handle: String!) {\n            productByHandle(handle: $handle) {\n                id\n                title\n                handle\n                description\n                variants(first: 50) {\n                    edges {\n                        node {\n                            id\n                            sku\n                            price\n                            inventoryItem {\n                                id\n                            }\n                            selectedOptions {\n                                name\n                                value\n                            }\n                        }\n                    }\n                }\n            }\n        }\n        ', 'variables': {'handle': 'default'}}, 'response': None, 'status': None}
2025-08-10 08:49:36,207 - sync_service - ERROR - GraphQL query error for store local: 
2025-08-10 08:49:37,004 - sync_service - INFO - SAP logging client login successful
2025-08-10 08:49:38,518 - sync_service - INFO - API log added to SAP: shopify - /admin/api/graphql_local - failure
2025-08-10 08:49:38,520 - sync_service - INFO - Product None doesn't exist in store local, creating new product
2025-08-10 08:49:40,068 - sync_service - INFO - API log added to SAP: shopify - /admin/api/graphql_local - success
2025-08-10 08:49:40,068 - sync_service - INFO - API Call: {'service': 'shopify', 'endpoint': 'graphql_local', 'request': {'query': '\n        mutation productCreate($input: ProductInput!) {\n            productCreate(input: $input) {\n                product {\n                    id\n                    title\n                    handle\n                    variants(first: 50) {\n                        edges {\n                            node {\n                                id\n                                sku\n                                inventoryItem {\n                                    id\n                                }\n                                selectedOptions {\n                                    name\n                                    value\n                                }\n                            }\n                        }\n                    }\n                }\n                userErrors {\n                    field\n                    message\n                }\n            }\n        }\n        ', 'variables': {'input': {'title': 'Morsi Bracelet', 'descriptionHtml': '', 'vendor': '', 'productType': 'Default', 'status': 'DRAFT', 'tags': [], 'variants': [{'sku': 'FG-0000704', 'price': '3200.0', 'inventoryPolicy': 'DENY', 'inventoryManagement': 'SHOPIFY', 'weight': 0.0, 'weightUnit': 'KILOGRAMS', 'taxable': False, 'barcode': '645464644'}], 'seo': {'title': 'Morsi Bracelet', 'description': ''}}}}, 'response': None, 'status': None}
2025-08-10 08:49:40,563 - sync_service - ERROR - GraphQL query error for store local: {'message': 'Variable $input of type ProductInput! was provided invalid value for variants (Field is not defined on ProductInput)', 'locations': [{'line': 1, 'column': 24}], 'extensions': {'value': {'title': 'Morsi Bracelet', 'descriptionHtml': '', 'vendor': '', 'productType': 'Default', 'status': 'DRAFT', 'tags': [], 'variants': [{'sku': 'FG-0000704', 'price': '3200.0', 'inventoryPolicy': 'DENY', 'inventoryManagement': 'SHOPIFY', 'weight': 0.0, 'weightUnit': 'KILOGRAMS', 'taxable': False, 'barcode': '645464644'}], 'seo': {'title': 'Morsi Bracelet', 'description': ''}}, 'problems': [{'path': ['variants'], 'explanation': 'Field is not defined on ProductInput'}]}}
GraphQL Errors: [
  {
    "message": "Variable $input of type ProductInput! was provided invalid value for variants (Field is not defined on ProductInput)",
    "locations": [
      {
        "line": 1,
        "column": 24
      }
    ],
    "extensions": {
      "value": {
        "title": "Morsi Bracelet",
        "descriptionHtml": "",
        "vendor": "",
        "productType": "Default",
        "status": "DRAFT",
        "tags": [],
        "variants": [
          {
            "sku": "FG-0000704",
            "price": "3200.0",
            "inventoryPolicy": "DENY",
            "inventoryManagement": "SHOPIFY",
            "weight": 0.0,
            "weightUnit": "KILOGRAMS",
            "taxable": false,
            "barcode": "645464644"
          }
        ],
        "seo": {
          "title": "Morsi Bracelet",
          "description": ""
        }
      },
      "problems": [
        {
          "path": [
            "variants"
          ],
          "explanation": "Field is not defined on ProductInput"
        }
      ]
    }
  }
]
GraphQL Data: null
GraphQL Extensions: null
2025-08-10 08:49:42,038 - sync_service - INFO - API log added to SAP: shopify - /admin/api/graphql_local - failure
2025-08-10 08:49:42,039 - sync_service - ERROR - Shopify full response for store local: {'msg': 'failure', 'error': 'GraphQL query error for store local: {\'message\': \'Variable $input of type ProductInput! was provided invalid value for variants (Field is not defined on ProductInput)\', \'locations\': [{\'line\': 1, \'column\': 24}], \'extensions\': {\'value\': {\'title\': \'Morsi Bracelet\', \'descriptionHtml\': \'\', \'vendor\': \'\', \'productType\': \'Default\', \'status\': \'DRAFT\', \'tags\': [], \'variants\': [{\'sku\': \'FG-0000704\', \'price\': \'3200.0\', \'inventoryPolicy\': \'DENY\', \'inventoryManagement\': \'SHOPIFY\', \'weight\': 0.0, \'weightUnit\': \'KILOGRAMS\', \'taxable\': False, \'barcode\': \'645464644\'}], \'seo\': {\'title\': \'Morsi Bracelet\', \'description\': \'\'}}, \'problems\': [{\'path\': [\'variants\'], \'explanation\': \'Field is not defined on ProductInput\'}]}}\nGraphQL Errors: [\n  {\n    "message": "Variable $input of type ProductInput! was provided invalid value for variants (Field is not defined on ProductInput)",\n    "locations": [\n      {\n        "line": 1,\n        "column": 24\n      }\n    ],\n    "extensions": {\n      "value": {\n        "title": "Morsi Bracelet",\n        "descriptionHtml": "",\n        "vendor": "",\n        "productType": "Default",\n        "status": "DRAFT",\n        "tags": [],\n        "variants": [\n          {\n            "sku": "FG-0000704",\n            "price": "3200.0",\n            "inventoryPolicy": "DENY",\n            "inventoryManagement": "SHOPIFY",\n            "weight": 0.0,\n            "weightUnit": "KILOGRAMS",\n            "taxable": false,\n            "barcode": "645464644"\n          }\n        ],\n        "seo": {\n          "title": "Morsi Bracelet",\n          "description": ""\n        }\n      },\n      "problems": [\n        {\n          "path": [\n            "variants"\n          ],\n          "explanation": "Field is not defined on ProductInput"\n        }\n      ]\n    }\n  }\n]\nGraphQL Data: null\nGraphQL Extensions: null'}
2025-08-10 08:49:43,659 - sync_service - INFO - API log added to SAP: shopify - /admin/api/graphql_local - failure
2025-08-10 08:49:43,660 - sync_service - ERROR - Failed to create product in store local: GraphQL query error for store local: {'message': 'Variable $input of type ProductInput! was provided invalid value for variants (Field is not defined on ProductInput)', 'locations': [{'line': 1, 'column': 24}], 'extensions': {'value': {'title': 'Morsi Bracelet', 'descriptionHtml': '', 'vendor': '', 'productType': 'Default', 'status': 'DRAFT', 'tags': [], 'variants': [{'sku': 'FG-0000704', 'price': '3200.0', 'inventoryPolicy': 'DENY', 'inventoryManagement': 'SHOPIFY', 'weight': 0.0, 'weightUnit': 'KILOGRAMS', 'taxable': False, 'barcode': '645464644'}], 'seo': {'title': 'Morsi Bracelet', 'description': ''}}, 'problems': [{'path': ['variants'], 'explanation': 'Field is not defined on ProductInput'}]}}
GraphQL Errors: [
  {
    "message": "Variable $input of type ProductInput! was provided invalid value for variants (Field is not defined on ProductInput)",
    "locations": [
      {
        "line": 1,
        "column": 24
      }
    ],
    "extensions": {
      "value": {
        "title": "Morsi Bracelet",
        "descriptionHtml": "",
        "vendor": "",
        "productType": "Default",
        "status": "DRAFT",
        "tags": [],
        "variants": [
          {
            "sku": "FG-0000704",
            "price": "3200.0",
            "inventoryPolicy": "DENY",
            "inventoryManagement": "SHOPIFY",
            "weight": 0.0,
            "weightUnit": "KILOGRAMS",
            "taxable": false,
            "barcode": "645464644"
          }
        ],
        "seo": {
          "title": "Morsi Bracelet",
          "description": ""
        }
      },
      "problems": [
        {
          "path": [
            "variants"
          ],
          "explanation": "Field is not defined on ProductInput"
        }
      ]
    }
  }
]
GraphQL Data: null
GraphQL Extensions: null
2025-08-10 08:49:43,661 - sync_service - INFO - Processing product group: ('FG-0000708', 'local') with 1 items for store local
2025-08-10 08:49:43,661 - sync_service - INFO - API Call: {'service': 'shopify', 'endpoint': 'graphql_local', 'request': {'query': '\n        query GetProductByHandle($handle: String!) {\n            productByHandle(handle: $handle) {\n                id\n                title\n                handle\n                description\n                variants(first: 50) {\n                    edges {\n                        node {\n                            id\n                            sku\n                            price\n                            inventoryItem {\n                                id\n                            }\n                            selectedOptions {\n                                name\n                                value\n                            }\n                        }\n                    }\n                }\n            }\n        }\n        ', 'variables': {'handle': 'default'}}, 'response': None, 'status': None}
2025-08-10 08:49:53,675 - sync_service - ERROR - GraphQL query error for store local: 
2025-08-10 08:49:55,220 - sync_service - INFO - API log added to SAP: shopify - /admin/api/graphql_local - failure
2025-08-10 08:49:55,221 - sync_service - INFO - Product None doesn't exist in store local, creating new product
2025-08-10 08:49:55,876 - sync_service - INFO - API log added to SAP: shopify - /admin/api/graphql_local - success
2025-08-10 08:49:55,877 - sync_service - INFO - API Call: {'service': 'shopify', 'endpoint': 'graphql_local', 'request': {'query': '\n        mutation productCreate($input: ProductInput!) {\n            productCreate(input: $input) {\n                product {\n                    id\n                    title\n                    handle\n                    variants(first: 50) {\n                        edges {\n                            node {\n                                id\n                                sku\n                                inventoryItem {\n                                    id\n                                }\n                                selectedOptions {\n                                    name\n                                    value\n                                }\n                            }\n                        }\n                    }\n                }\n                userErrors {\n                    field\n                    message\n                }\n            }\n        }\n        ', 'variables': {'input': {'title': 'Morsi Socks', 'descriptionHtml': '', 'vendor': '', 'productType': 'Default', 'status': 'DRAFT', 'tags': [], 'variants': [{'sku': 'FG-0000708', 'price': '200.0', 'inventoryPolicy': 'DENY', 'inventoryManagement': 'SHOPIFY', 'weight': 0.0, 'weightUnit': 'KILOGRAMS', 'taxable': False}], 'seo': {'title': 'Morsi Socks', 'description': ''}}}}, 'response': None, 'status': None}
2025-08-10 08:49:56,355 - sync_service - ERROR - GraphQL query error for store local: {'message': 'Variable $input of type ProductInput! was provided invalid value for variants (Field is not defined on ProductInput)', 'locations': [{'line': 1, 'column': 24}], 'extensions': {'value': {'title': 'Morsi Socks', 'descriptionHtml': '', 'vendor': '', 'productType': 'Default', 'status': 'DRAFT', 'tags': [], 'variants': [{'sku': 'FG-0000708', 'price': '200.0', 'inventoryPolicy': 'DENY', 'inventoryManagement': 'SHOPIFY', 'weight': 0.0, 'weightUnit': 'KILOGRAMS', 'taxable': False}], 'seo': {'title': 'Morsi Socks', 'description': ''}}, 'problems': [{'path': ['variants'], 'explanation': 'Field is not defined on ProductInput'}]}}
GraphQL Errors: [
  {
    "message": "Variable $input of type ProductInput! was provided invalid value for variants (Field is not defined on ProductInput)",
    "locations": [
      {
        "line": 1,
        "column": 24
      }
    ],
    "extensions": {
      "value": {
        "title": "Morsi Socks",
        "descriptionHtml": "",
        "vendor": "",
        "productType": "Default",
        "status": "DRAFT",
        "tags": [],
        "variants": [
          {
            "sku": "FG-0000708",
            "price": "200.0",
            "inventoryPolicy": "DENY",
            "inventoryManagement": "SHOPIFY",
            "weight": 0.0,
            "weightUnit": "KILOGRAMS",
            "taxable": false
          }
        ],
        "seo": {
          "title": "Morsi Socks",
          "description": ""
        }
      },
      "problems": [
        {
          "path": [
            "variants"
          ],
          "explanation": "Field is not defined on ProductInput"
        }
      ]
    }
  }
]
GraphQL Data: null
GraphQL Extensions: null
2025-08-10 08:49:57,372 - sync_service - INFO - API log added to SAP: shopify - /admin/api/graphql_local - failure
2025-08-10 08:49:57,374 - sync_service - ERROR - Shopify full response for store local: {'msg': 'failure', 'error': 'GraphQL query error for store local: {\'message\': \'Variable $input of type ProductInput! was provided invalid value for variants (Field is not defined on ProductInput)\', \'locations\': [{\'line\': 1, \'column\': 24}], \'extensions\': {\'value\': {\'title\': \'Morsi Socks\', \'descriptionHtml\': \'\', \'vendor\': \'\', \'productType\': \'Default\', \'status\': \'DRAFT\', \'tags\': [], \'variants\': [{\'sku\': \'FG-0000708\', \'price\': \'200.0\', \'inventoryPolicy\': \'DENY\', \'inventoryManagement\': \'SHOPIFY\', \'weight\': 0.0, \'weightUnit\': \'KILOGRAMS\', \'taxable\': False}], \'seo\': {\'title\': \'Morsi Socks\', \'description\': \'\'}}, \'problems\': [{\'path\': [\'variants\'], \'explanation\': \'Field is not defined on ProductInput\'}]}}\nGraphQL Errors: [\n  {\n    "message": "Variable $input of type ProductInput! was provided invalid value for variants (Field is not defined on ProductInput)",\n    "locations": [\n      {\n        "line": 1,\n        "column": 24\n      }\n    ],\n    "extensions": {\n      "value": {\n        "title": "Morsi Socks",\n        "descriptionHtml": "",\n        "vendor": "",\n        "productType": "Default",\n        "status": "DRAFT",\n        "tags": [],\n        "variants": [\n          {\n            "sku": "FG-0000708",\n            "price": "200.0",\n            "inventoryPolicy": "DENY",\n            "inventoryManagement": "SHOPIFY",\n            "weight": 0.0,\n            "weightUnit": "KILOGRAMS",\n            "taxable": false\n          }\n        ],\n        "seo": {\n          "title": "Morsi Socks",\n          "description": ""\n        }\n      },\n      "problems": [\n        {\n          "path": [\n            "variants"\n          ],\n          "explanation": "Field is not defined on ProductInput"\n        }\n      ]\n    }\n  }\n]\nGraphQL Data: null\nGraphQL Extensions: null'}
2025-08-10 08:49:57,637 - sync_service - INFO - API log added to SAP: shopify - /admin/api/graphql_local - failure
2025-08-10 08:49:57,638 - sync_service - ERROR - Failed to create product in store local: GraphQL query error for store local: {'message': 'Variable $input of type ProductInput! was provided invalid value for variants (Field is not defined on ProductInput)', 'locations': [{'line': 1, 'column': 24}], 'extensions': {'value': {'title': 'Morsi Socks', 'descriptionHtml': '', 'vendor': '', 'productType': 'Default', 'status': 'DRAFT', 'tags': [], 'variants': [{'sku': 'FG-0000708', 'price': '200.0', 'inventoryPolicy': 'DENY', 'inventoryManagement': 'SHOPIFY', 'weight': 0.0, 'weightUnit': 'KILOGRAMS', 'taxable': False}], 'seo': {'title': 'Morsi Socks', 'description': ''}}, 'problems': [{'path': ['variants'], 'explanation': 'Field is not defined on ProductInput'}]}}
GraphQL Errors: [
  {
    "message": "Variable $input of type ProductInput! was provided invalid value for variants (Field is not defined on ProductInput)",
    "locations": [
      {
        "line": 1,
        "column": 24
      }
    ],
    "extensions": {
      "value": {
        "title": "Morsi Socks",
        "descriptionHtml": "",
        "vendor": "",
        "productType": "Default",
        "status": "DRAFT",
        "tags": [],
        "variants": [
          {
            "sku": "FG-0000708",
            "price": "200.0",
            "inventoryPolicy": "DENY",
            "inventoryManagement": "SHOPIFY",
            "weight": 0.0,
            "weightUnit": "KILOGRAMS",
            "taxable": false
          }
        ],
        "seo": {
          "title": "Morsi Socks",
          "description": ""
        }
      },
      "problems": [
        {
          "path": [
            "variants"
          ],
          "explanation": "Field is not defined on ProductInput"
        }
      ]
    }
  }
]
GraphQL Data: null
GraphQL Extensions: null
2025-08-10 08:49:57,639 - sync_service - INFO - Processing product group: ('FG-0000711', 'local') with 1 items for store local
2025-08-10 08:49:57,640 - sync_service - INFO - API Call: {'service': 'shopify', 'endpoint': 'graphql_local', 'request': {'query': '\n        query GetProductByHandle($handle: String!) {\n            productByHandle(handle: $handle) {\n                id\n                title\n                handle\n                description\n                variants(first: 50) {\n                    edges {\n                        node {\n                            id\n                            sku\n                            price\n                            inventoryItem {\n                                id\n                            }\n                            selectedOptions {\n                                name\n                                value\n                            }\n                        }\n                    }\n                }\n            }\n        }\n        ', 'variables': {'handle': 'default'}}, 'response': None, 'status': None}
2025-08-10 08:49:58,095 - sync_service - INFO - API Call: {'service': 'shopify', 'endpoint': 'graphql_local', 'request': None, 'response': {'productByHandle': None}, 'status': 'success'}
2025-08-10 08:49:58,095 - sync_service - INFO - Product None doesn't exist in store local, creating new product
2025-08-10 08:49:58,361 - sync_service - INFO - API log added to SAP: shopify - /admin/api/graphql_local - success
2025-08-10 08:49:58,361 - sync_service - INFO - API Call: {'service': 'shopify', 'endpoint': 'graphql_local', 'request': {'query': '\n        mutation productCreate($input: ProductInput!) {\n            productCreate(input: $input) {\n                product {\n                    id\n                    title\n                    handle\n                    variants(first: 50) {\n                        edges {\n                            node {\n                                id\n                                sku\n                                inventoryItem {\n                                    id\n                                }\n                                selectedOptions {\n                                    name\n                                    value\n                                }\n                            }\n                        }\n                    }\n                }\n                userErrors {\n                    field\n                    message\n                }\n            }\n        }\n        ', 'variables': {'input': {'title': 'Morsi Keyboard', 'descriptionHtml': '', 'vendor': '', 'productType': 'Default', 'status': 'DRAFT', 'tags': [], 'variants': [{'sku': 'FG-0000711', 'price': '1000.0', 'inventoryPolicy': 'DENY', 'inventoryManagement': 'SHOPIFY', 'weight': 0.0, 'weightUnit': 'KILOGRAMS', 'taxable': False}], 'seo': {'title': 'Morsi Keyboard', 'description': ''}}}}, 'response': None, 'status': None}
2025-08-10 08:49:58,810 - sync_service - ERROR - GraphQL query error for store local: {'message': 'Variable $input of type ProductInput! was provided invalid value for variants (Field is not defined on ProductInput)', 'locations': [{'line': 1, 'column': 24}], 'extensions': {'value': {'title': 'Morsi Keyboard', 'descriptionHtml': '', 'vendor': '', 'productType': 'Default', 'status': 'DRAFT', 'tags': [], 'variants': [{'sku': 'FG-0000711', 'price': '1000.0', 'inventoryPolicy': 'DENY', 'inventoryManagement': 'SHOPIFY', 'weight': 0.0, 'weightUnit': 'KILOGRAMS', 'taxable': False}], 'seo': {'title': 'Morsi Keyboard', 'description': ''}}, 'problems': [{'path': ['variants'], 'explanation': 'Field is not defined on ProductInput'}]}}
GraphQL Errors: [
  {
    "message": "Variable $input of type ProductInput! was provided invalid value for variants (Field is not defined on ProductInput)",
    "locations": [
      {
        "line": 1,
        "column": 24
      }
    ],
    "extensions": {
      "value": {
        "title": "Morsi Keyboard",
        "descriptionHtml": "",
        "vendor": "",
        "productType": "Default",
        "status": "DRAFT",
        "tags": [],
        "variants": [
          {
            "sku": "FG-0000711",
            "price": "1000.0",
            "inventoryPolicy": "DENY",
            "inventoryManagement": "SHOPIFY",
            "weight": 0.0,
            "weightUnit": "KILOGRAMS",
            "taxable": false
          }
        ],
        "seo": {
          "title": "Morsi Keyboard",
          "description": ""
        }
      },
      "problems": [
        {
          "path": [
            "variants"
          ],
          "explanation": "Field is not defined on ProductInput"
        }
      ]
    }
  }
]
GraphQL Data: null
GraphQL Extensions: null
2025-08-10 08:49:59,074 - sync_service - INFO - API log added to SAP: shopify - /admin/api/graphql_local - failure
2025-08-10 08:49:59,075 - sync_service - ERROR - Shopify full response for store local: {'msg': 'failure', 'error': 'GraphQL query error for store local: {\'message\': \'Variable $input of type ProductInput! was provided invalid value for variants (Field is not defined on ProductInput)\', \'locations\': [{\'line\': 1, \'column\': 24}], \'extensions\': {\'value\': {\'title\': \'Morsi Keyboard\', \'descriptionHtml\': \'\', \'vendor\': \'\', \'productType\': \'Default\', \'status\': \'DRAFT\', \'tags\': [], \'variants\': [{\'sku\': \'FG-0000711\', \'price\': \'1000.0\', \'inventoryPolicy\': \'DENY\', \'inventoryManagement\': \'SHOPIFY\', \'weight\': 0.0, \'weightUnit\': \'KILOGRAMS\', \'taxable\': False}], \'seo\': {\'title\': \'Morsi Keyboard\', \'description\': \'\'}}, \'problems\': [{\'path\': [\'variants\'], \'explanation\': \'Field is not defined on ProductInput\'}]}}\nGraphQL Errors: [\n  {\n    "message": "Variable $input of type ProductInput! was provided invalid value for variants (Field is not defined on ProductInput)",\n    "locations": [\n      {\n        "line": 1,\n        "column": 24\n      }\n    ],\n    "extensions": {\n      "value": {\n        "title": "Morsi Keyboard",\n        "descriptionHtml": "",\n        "vendor": "",\n        "productType": "Default",\n        "status": "DRAFT",\n        "tags": [],\n        "variants": [\n          {\n            "sku": "FG-0000711",\n            "price": "1000.0",\n            "inventoryPolicy": "DENY",\n            "inventoryManagement": "SHOPIFY",\n            "weight": 0.0,\n            "weightUnit": "KILOGRAMS",\n            "taxable": false\n          }\n        ],\n        "seo": {\n          "title": "Morsi Keyboard",\n          "description": ""\n        }\n      },\n      "problems": [\n        {\n          "path": [\n            "variants"\n          ],\n          "explanation": "Field is not defined on ProductInput"\n        }\n      ]\n    }\n  }\n]\nGraphQL Data: null\nGraphQL Extensions: null'}
2025-08-10 08:49:59,340 - sync_service - INFO - API log added to SAP: shopify - /admin/api/graphql_local - failure
2025-08-10 08:49:59,341 - sync_service - ERROR - Failed to create product in store local: GraphQL query error for store local: {'message': 'Variable $input of type ProductInput! was provided invalid value for variants (Field is not defined on ProductInput)', 'locations': [{'line': 1, 'column': 24}], 'extensions': {'value': {'title': 'Morsi Keyboard', 'descriptionHtml': '', 'vendor': '', 'productType': 'Default', 'status': 'DRAFT', 'tags': [], 'variants': [{'sku': 'FG-0000711', 'price': '1000.0', 'inventoryPolicy': 'DENY', 'inventoryManagement': 'SHOPIFY', 'weight': 0.0, 'weightUnit': 'KILOGRAMS', 'taxable': False}], 'seo': {'title': 'Morsi Keyboard', 'description': ''}}, 'problems': [{'path': ['variants'], 'explanation': 'Field is not defined on ProductInput'}]}}
GraphQL Errors: [
  {
    "message": "Variable $input of type ProductInput! was provided invalid value for variants (Field is not defined on ProductInput)",
    "locations": [
      {
        "line": 1,
        "column": 24
      }
    ],
    "extensions": {
      "value": {
        "title": "Morsi Keyboard",
        "descriptionHtml": "",
        "vendor": "",
        "productType": "Default",
        "status": "DRAFT",
        "tags": [],
        "variants": [
          {
            "sku": "FG-0000711",
            "price": "1000.0",
            "inventoryPolicy": "DENY",
            "inventoryManagement": "SHOPIFY",
            "weight": 0.0,
            "weightUnit": "KILOGRAMS",
            "taxable": false
          }
        ],
        "seo": {
          "title": "Morsi Keyboard",
          "description": ""
        }
      },
      "problems": [
        {
          "path": [
            "variants"
          ],
          "explanation": "Field is not defined on ProductInput"
        }
      ]
    }
  }
]
GraphQL Data: null
GraphQL Extensions: null
2025-08-10 08:49:59,341 - sync_service - INFO - Processing product group: ('FG-0000712', 'local') with 1 items for store local
2025-08-10 08:49:59,341 - sync_service - INFO - API Call: {'service': 'shopify', 'endpoint': 'graphql_local', 'request': {'query': '\n        query GetProductByHandle($handle: String!) {\n            productByHandle(handle: $handle) {\n                id\n                title\n                handle\n                description\n                variants(first: 50) {\n                    edges {\n                        node {\n                            id\n                            sku\n                            price\n                            inventoryItem {\n                                id\n                            }\n                            selectedOptions {\n                                name\n                                value\n                            }\n                        }\n                    }\n                }\n            }\n        }\n        ', 'variables': {'handle': 'default'}}, 'response': None, 'status': None}
2025-08-10 08:49:59,791 - sync_service - INFO - API Call: {'service': 'shopify', 'endpoint': 'graphql_local', 'request': None, 'response': {'productByHandle': None}, 'status': 'success'}
2025-08-10 08:49:59,792 - sync_service - INFO - Product None doesn't exist in store local, creating new product
2025-08-10 08:50:00,054 - sync_service - INFO - API log added to SAP: shopify - /admin/api/graphql_local - success
2025-08-10 08:50:00,055 - sync_service - INFO - API Call: {'service': 'shopify', 'endpoint': 'graphql_local', 'request': {'query': '\n        mutation productCreate($input: ProductInput!) {\n            productCreate(input: $input) {\n                product {\n                    id\n                    title\n                    handle\n                    variants(first: 50) {\n                        edges {\n                            node {\n                                id\n                                sku\n                                inventoryItem {\n                                    id\n                                }\n                                selectedOptions {\n                                    name\n                                    value\n                                }\n                            }\n                        }\n                    }\n                }\n                userErrors {\n                    field\n                    message\n                }\n            }\n        }\n        ', 'variables': {'input': {'title': 'AA-Iron Man Necklace', 'descriptionHtml': '', 'vendor': '', 'productType': 'Default', 'status': 'DRAFT', 'tags': [], 'variants': [{'sku': 'FG-0000712', 'price': '1000.0', 'inventoryPolicy': 'DENY', 'inventoryManagement': 'SHOPIFY', 'weight': 0.0, 'weightUnit': 'KILOGRAMS', 'taxable': False, 'barcode': '203090'}], 'seo': {'title': 'AA-Iron Man Necklace', 'description': ''}}}}, 'response': None, 'status': None}
2025-08-10 08:50:07,407 - sync_service - ERROR - GraphQL query error for store local: {'message': 'Variable $input of type ProductInput! was provided invalid value for variants (Field is not defined on ProductInput)', 'locations': [{'line': 1, 'column': 24}], 'extensions': {'value': {'title': 'AA-Iron Man Necklace', 'descriptionHtml': '', 'vendor': '', 'productType': 'Default', 'status': 'DRAFT', 'tags': [], 'variants': [{'sku': 'FG-0000712', 'price': '1000.0', 'inventoryPolicy': 'DENY', 'inventoryManagement': 'SHOPIFY', 'weight': 0.0, 'weightUnit': 'KILOGRAMS', 'taxable': False, 'barcode': '203090'}], 'seo': {'title': 'AA-Iron Man Necklace', 'description': ''}}, 'problems': [{'path': ['variants'], 'explanation': 'Field is not defined on ProductInput'}]}}
GraphQL Errors: [
  {
    "message": "Variable $input of type ProductInput! was provided invalid value for variants (Field is not defined on ProductInput)",
    "locations": [
      {
        "line": 1,
        "column": 24
      }
    ],
    "extensions": {
      "value": {
        "title": "AA-Iron Man Necklace",
        "descriptionHtml": "",
        "vendor": "",
        "productType": "Default",
        "status": "DRAFT",
        "tags": [],
        "variants": [
          {
            "sku": "FG-0000712",
            "price": "1000.0",
            "inventoryPolicy": "DENY",
            "inventoryManagement": "SHOPIFY",
            "weight": 0.0,
            "weightUnit": "KILOGRAMS",
            "taxable": false,
            "barcode": "203090"
          }
        ],
        "seo": {
          "title": "AA-Iron Man Necklace",
          "description": ""
        }
      },
      "problems": [
        {
          "path": [
            "variants"
          ],
          "explanation": "Field is not defined on ProductInput"
        }
      ]
    }
  }
]
GraphQL Data: null
GraphQL Extensions: null
2025-08-10 08:50:07,674 - sync_service - INFO - API log added to SAP: shopify - /admin/api/graphql_local - failure
2025-08-10 08:50:07,675 - sync_service - ERROR - Shopify full response for store local: {'msg': 'failure', 'error': 'GraphQL query error for store local: {\'message\': \'Variable $input of type ProductInput! was provided invalid value for variants (Field is not defined on ProductInput)\', \'locations\': [{\'line\': 1, \'column\': 24}], \'extensions\': {\'value\': {\'title\': \'AA-Iron Man Necklace\', \'descriptionHtml\': \'\', \'vendor\': \'\', \'productType\': \'Default\', \'status\': \'DRAFT\', \'tags\': [], \'variants\': [{\'sku\': \'FG-0000712\', \'price\': \'1000.0\', \'inventoryPolicy\': \'DENY\', \'inventoryManagement\': \'SHOPIFY\', \'weight\': 0.0, \'weightUnit\': \'KILOGRAMS\', \'taxable\': False, \'barcode\': \'203090\'}], \'seo\': {\'title\': \'AA-Iron Man Necklace\', \'description\': \'\'}}, \'problems\': [{\'path\': [\'variants\'], \'explanation\': \'Field is not defined on ProductInput\'}]}}\nGraphQL Errors: [\n  {\n    "message": "Variable $input of type ProductInput! was provided invalid value for variants (Field is not defined on ProductInput)",\n    "locations": [\n      {\n        "line": 1,\n        "column": 24\n      }\n    ],\n    "extensions": {\n      "value": {\n        "title": "AA-Iron Man Necklace",\n        "descriptionHtml": "",\n        "vendor": "",\n        "productType": "Default",\n        "status": "DRAFT",\n        "tags": [],\n        "variants": [\n          {\n            "sku": "FG-0000712",\n            "price": "1000.0",\n            "inventoryPolicy": "DENY",\n            "inventoryManagement": "SHOPIFY",\n            "weight": 0.0,\n            "weightUnit": "KILOGRAMS",\n            "taxable": false,\n            "barcode": "203090"\n          }\n        ],\n        "seo": {\n          "title": "AA-Iron Man Necklace",\n          "description": ""\n        }\n      },\n      "problems": [\n        {\n          "path": [\n            "variants"\n          ],\n          "explanation": "Field is not defined on ProductInput"\n        }\n      ]\n    }\n  }\n]\nGraphQL Data: null\nGraphQL Extensions: null'}
2025-08-10 08:50:07,938 - sync_service - INFO - API log added to SAP: shopify - /admin/api/graphql_local - failure
2025-08-10 08:50:07,939 - sync_service - ERROR - Failed to create product in store local: GraphQL query error for store local: {'message': 'Variable $input of type ProductInput! was provided invalid value for variants (Field is not defined on ProductInput)', 'locations': [{'line': 1, 'column': 24}], 'extensions': {'value': {'title': 'AA-Iron Man Necklace', 'descriptionHtml': '', 'vendor': '', 'productType': 'Default', 'status': 'DRAFT', 'tags': [], 'variants': [{'sku': 'FG-0000712', 'price': '1000.0', 'inventoryPolicy': 'DENY', 'inventoryManagement': 'SHOPIFY', 'weight': 0.0, 'weightUnit': 'KILOGRAMS', 'taxable': False, 'barcode': '203090'}], 'seo': {'title': 'AA-Iron Man Necklace', 'description': ''}}, 'problems': [{'path': ['variants'], 'explanation': 'Field is not defined on ProductInput'}]}}
GraphQL Errors: [
  {
    "message": "Variable $input of type ProductInput! was provided invalid value for variants (Field is not defined on ProductInput)",
    "locations": [
      {
        "line": 1,
        "column": 24
      }
    ],
    "extensions": {
      "value": {
        "title": "AA-Iron Man Necklace",
        "descriptionHtml": "",
        "vendor": "",
        "productType": "Default",
        "status": "DRAFT",
        "tags": [],
        "variants": [
          {
            "sku": "FG-0000712",
            "price": "1000.0",
            "inventoryPolicy": "DENY",
            "inventoryManagement": "SHOPIFY",
            "weight": 0.0,
            "weightUnit": "KILOGRAMS",
            "taxable": false,
            "barcode": "203090"
          }
        ],
        "seo": {
          "title": "AA-Iron Man Necklace",
          "description": ""
        }
      },
      "problems": [
        {
          "path": [
            "variants"
          ],
          "explanation": "Field is not defined on ProductInput"
        }
      ]
    }
  }
]
GraphQL Data: null
GraphQL Extensions: null
2025-08-10 08:50:07,940 - sync_service - INFO - Processing product group: ('Iron Man Necklace', 'local') with 2 items for store local
2025-08-10 08:50:07,941 - sync_service - INFO - API Call: {'service': 'shopify', 'endpoint': 'graphql_local', 'request': {'query': '\n        query GetProductByHandle($handle: String!) {\n            productByHandle(handle: $handle) {\n                id\n                title\n                handle\n                description\n                variants(first: 50) {\n                    edges {\n                        node {\n                            id\n                            sku\n                            price\n                            inventoryItem {\n                                id\n                            }\n                            selectedOptions {\n                                name\n                                value\n                            }\n                        }\n                    }\n                }\n            }\n        }\n        ', 'variables': {'handle': 'iron-man-necklace'}}, 'response': None, 'status': None}
2025-08-10 08:50:08,436 - sync_service - INFO - API Call: {'service': 'shopify', 'endpoint': 'graphql_local', 'request': None, 'response': {'productByHandle': None}, 'status': 'success'}
2025-08-10 08:50:08,437 - sync_service - INFO - Product Iron Man Necklace doesn't exist in store local, creating new product
2025-08-10 08:50:08,706 - sync_service - INFO - API log added to SAP: shopify - /admin/api/graphql_local - success
2025-08-10 08:50:08,707 - sync_service - INFO - API Call: {'service': 'shopify', 'endpoint': 'graphql_local', 'request': {'query': '\n        mutation productCreate($input: ProductInput!) {\n            productCreate(input: $input) {\n                product {\n                    id\n                    title\n                    handle\n                    variants(first: 50) {\n                        edges {\n                            node {\n                                id\n                                sku\n                                inventoryItem {\n                                    id\n                                }\n                                selectedOptions {\n                                    name\n                                    value\n                                }\n                            }\n                        }\n                    }\n                }\n                userErrors {\n                    field\n                    message\n                }\n            }\n        }\n        ', 'variables': {'input': {'title': 'Iron Man Necklace', 'status': 'DRAFT', 'options': ['Color'], 'variants': [{'options': ['Red'], 'sku': 'FG-0000713', 'price': '2000.0', 'inventoryManagement': 'SHOPIFY', 'inventoryPolicy': 'DENY', 'taxable': False, 'barcode': '203090'}, {'options': ['Blue'], 'sku': 'FG-0000714', 'price': '3000.0', 'inventoryManagement': 'SHOPIFY', 'inventoryPolicy': 'DENY', 'taxable': False, 'barcode': '203090'}]}}}, 'response': None, 'status': None}
2025-08-10 08:50:09,169 - sync_service - ERROR - GraphQL query error for store local: {'message': 'Variable $input of type ProductInput! was provided invalid value for options (Field is not defined on ProductInput), variants (Field is not defined on ProductInput)', 'locations': [{'line': 1, 'column': 24}], 'extensions': {'value': {'title': 'Iron Man Necklace', 'status': 'DRAFT', 'options': ['Color'], 'variants': [{'options': ['Red'], 'sku': 'FG-0000713', 'price': '2000.0', 'inventoryManagement': 'SHOPIFY', 'inventoryPolicy': 'DENY', 'taxable': False, 'barcode': '203090'}, {'options': ['Blue'], 'sku': 'FG-0000714', 'price': '3000.0', 'inventoryManagement': 'SHOPIFY', 'inventoryPolicy': 'DENY', 'taxable': False, 'barcode': '203090'}]}, 'problems': [{'path': ['options'], 'explanation': 'Field is not defined on ProductInput'}, {'path': ['variants'], 'explanation': 'Field is not defined on ProductInput'}]}}
GraphQL Errors: [
  {
    "message": "Variable $input of type ProductInput! was provided invalid value for options (Field is not defined on ProductInput), variants (Field is not defined on ProductInput)",
    "locations": [
      {
        "line": 1,
        "column": 24
      }
    ],
    "extensions": {
      "value": {
        "title": "Iron Man Necklace",
        "status": "DRAFT",
        "options": [
          "Color"
        ],
        "variants": [
          {
            "options": [
              "Red"
            ],
            "sku": "FG-0000713",
            "price": "2000.0",
            "inventoryManagement": "SHOPIFY",
            "inventoryPolicy": "DENY",
            "taxable": false,
            "barcode": "203090"
          },
          {
            "options": [
              "Blue"
            ],
            "sku": "FG-0000714",
            "price": "3000.0",
            "inventoryManagement": "SHOPIFY",
            "inventoryPolicy": "DENY",
            "taxable": false,
            "barcode": "203090"
          }
        ]
      },
      "problems": [
        {
          "path": [
            "options"
          ],
          "explanation": "Field is not defined on ProductInput"
        },
        {
          "path": [
            "variants"
          ],
          "explanation": "Field is not defined on ProductInput"
        }
      ]
    }
  }
]
GraphQL Data: null
GraphQL Extensions: null
2025-08-10 08:50:09,438 - sync_service - INFO - API log added to SAP: shopify - /admin/api/graphql_local - failure
2025-08-10 08:50:09,439 - sync_service - ERROR - Shopify full response for store local: {'msg': 'failure', 'error': 'GraphQL query error for store local: {\'message\': \'Variable $input of type ProductInput! was provided invalid value for options (Field is not defined on ProductInput), variants (Field is not defined on ProductInput)\', \'locations\': [{\'line\': 1, \'column\': 24}], \'extensions\': {\'value\': {\'title\': \'Iron Man Necklace\', \'status\': \'DRAFT\', \'options\': [\'Color\'], \'variants\': [{\'options\': [\'Red\'], \'sku\': \'FG-0000713\', \'price\': \'2000.0\', \'inventoryManagement\': \'SHOPIFY\', \'inventoryPolicy\': \'DENY\', \'taxable\': False, \'barcode\': \'203090\'}, {\'options\': [\'Blue\'], \'sku\': \'FG-0000714\', \'price\': \'3000.0\', \'inventoryManagement\': \'SHOPIFY\', \'inventoryPolicy\': \'DENY\', \'taxable\': False, \'barcode\': \'203090\'}]}, \'problems\': [{\'path\': [\'options\'], \'explanation\': \'Field is not defined on ProductInput\'}, {\'path\': [\'variants\'], \'explanation\': \'Field is not defined on ProductInput\'}]}}\nGraphQL Errors: [\n  {\n    "message": "Variable $input of type ProductInput! was provided invalid value for options (Field is not defined on ProductInput), variants (Field is not defined on ProductInput)",\n    "locations": [\n      {\n        "line": 1,\n        "column": 24\n      }\n    ],\n    "extensions": {\n      "value": {\n        "title": "Iron Man Necklace",\n        "status": "DRAFT",\n        "options": [\n          "Color"\n        ],\n        "variants": [\n          {\n            "options": [\n              "Red"\n            ],\n            "sku": "FG-0000713",\n            "price": "2000.0",\n            "inventoryManagement": "SHOPIFY",\n            "inventoryPolicy": "DENY",\n            "taxable": false,\n            "barcode": "203090"\n          },\n          {\n            "options": [\n              "Blue"\n            ],\n            "sku": "FG-0000714",\n            "price": "3000.0",\n            "inventoryManagement": "SHOPIFY",\n            "inventoryPolicy": "DENY",\n            "taxable": false,\n            "barcode": "203090"\n          }\n        ]\n      },\n      "problems": [\n        {\n          "path": [\n            "options"\n          ],\n          "explanation": "Field is not defined on ProductInput"\n        },\n        {\n          "path": [\n            "variants"\n          ],\n          "explanation": "Field is not defined on ProductInput"\n        }\n      ]\n    }\n  }\n]\nGraphQL Data: null\nGraphQL Extensions: null'}
2025-08-10 08:50:09,707 - sync_service - INFO - API log added to SAP: shopify - /admin/api/graphql_local - failure
2025-08-10 08:50:09,707 - sync_service - ERROR - Failed to create product in store local: GraphQL query error for store local: {'message': 'Variable $input of type ProductInput! was provided invalid value for options (Field is not defined on ProductInput), variants (Field is not defined on ProductInput)', 'locations': [{'line': 1, 'column': 24}], 'extensions': {'value': {'title': 'Iron Man Necklace', 'status': 'DRAFT', 'options': ['Color'], 'variants': [{'options': ['Red'], 'sku': 'FG-0000713', 'price': '2000.0', 'inventoryManagement': 'SHOPIFY', 'inventoryPolicy': 'DENY', 'taxable': False, 'barcode': '203090'}, {'options': ['Blue'], 'sku': 'FG-0000714', 'price': '3000.0', 'inventoryManagement': 'SHOPIFY', 'inventoryPolicy': 'DENY', 'taxable': False, 'barcode': '203090'}]}, 'problems': [{'path': ['options'], 'explanation': 'Field is not defined on ProductInput'}, {'path': ['variants'], 'explanation': 'Field is not defined on ProductInput'}]}}
GraphQL Errors: [
  {
    "message": "Variable $input of type ProductInput! was provided invalid value for options (Field is not defined on ProductInput), variants (Field is not defined on ProductInput)",
    "locations": [
      {
        "line": 1,
        "column": 24
      }
    ],
    "extensions": {
      "value": {
        "title": "Iron Man Necklace",
        "status": "DRAFT",
        "options": [
          "Color"
        ],
        "variants": [
          {
            "options": [
              "Red"
            ],
            "sku": "FG-0000713",
            "price": "2000.0",
            "inventoryManagement": "SHOPIFY",
            "inventoryPolicy": "DENY",
            "taxable": false,
            "barcode": "203090"
          },
          {
            "options": [
              "Blue"
            ],
            "sku": "FG-0000714",
            "price": "3000.0",
            "inventoryManagement": "SHOPIFY",
            "inventoryPolicy": "DENY",
            "taxable": false,
            "barcode": "203090"
          }
        ]
      },
      "problems": [
        {
          "path": [
            "options"
          ],
          "explanation": "Field is not defined on ProductInput"
        },
        {
          "path": [
            "variants"
          ],
          "explanation": "Field is not defined on ProductInput"
        }
      ]
    }
  }
]
GraphQL Data: null
GraphQL Extensions: null
2025-08-10 08:50:09,708 - sync_service - INFO - Processing product group: ('Morsi Laptop', 'local') with 2 items for store local
2025-08-10 08:50:09,709 - sync_service - INFO - API Call: {'service': 'shopify', 'endpoint': 'graphql_local', 'request': {'query': '\n        query GetProductByHandle($handle: String!) {\n            productByHandle(handle: $handle) {\n                id\n                title\n                handle\n                description\n                variants(first: 50) {\n                    edges {\n                        node {\n                            id\n                            sku\n                            price\n                            inventoryItem {\n                                id\n                            }\n                            selectedOptions {\n                                name\n                                value\n                            }\n                        }\n                    }\n                }\n            }\n        }\n        ', 'variables': {'handle': 'morsi-laptop'}}, 'response': None, 'status': None}
2025-08-10 08:50:10,162 - sync_service - INFO - API Call: {'service': 'shopify', 'endpoint': 'graphql_local', 'request': None, 'response': {'productByHandle': None}, 'status': 'success'}
2025-08-10 08:50:10,164 - sync_service - INFO - Product Morsi Laptop doesn't exist in store local, creating new product
2025-08-10 08:50:10,439 - sync_service - INFO - API log added to SAP: shopify - /admin/api/graphql_local - success
2025-08-10 08:50:10,440 - sync_service - INFO - API Call: {'service': 'shopify', 'endpoint': 'graphql_local', 'request': {'query': '\n        mutation productCreate($input: ProductInput!) {\n            productCreate(input: $input) {\n                product {\n                    id\n                    title\n                    handle\n                    variants(first: 50) {\n                        edges {\n                            node {\n                                id\n                                sku\n                                inventoryItem {\n                                    id\n                                }\n                                selectedOptions {\n                                    name\n                                    value\n                                }\n                            }\n                        }\n                    }\n                }\n                userErrors {\n                    field\n                    message\n                }\n            }\n        }\n        ', 'variables': {'input': {'title': 'Morsi Laptop', 'status': 'DRAFT', 'options': ['Color'], 'variants': [{'options': ['Black'], 'sku': 'FG-0000709', 'price': '1000.0', 'inventoryManagement': 'SHOPIFY', 'inventoryPolicy': 'DENY', 'taxable': False}, {'options': ['Gray'], 'sku': 'FG-0000710', 'price': '1000.0', 'inventoryManagement': 'SHOPIFY', 'inventoryPolicy': 'DENY', 'taxable': False}]}}}, 'response': None, 'status': None}
2025-08-10 08:50:10,892 - sync_service - ERROR - GraphQL query error for store local: {'message': 'Variable $input of type ProductInput! was provided invalid value for options (Field is not defined on ProductInput), variants (Field is not defined on ProductInput)', 'locations': [{'line': 1, 'column': 24}], 'extensions': {'value': {'title': 'Morsi Laptop', 'status': 'DRAFT', 'options': ['Color'], 'variants': [{'options': ['Black'], 'sku': 'FG-0000709', 'price': '1000.0', 'inventoryManagement': 'SHOPIFY', 'inventoryPolicy': 'DENY', 'taxable': False}, {'options': ['Gray'], 'sku': 'FG-0000710', 'price': '1000.0', 'inventoryManagement': 'SHOPIFY', 'inventoryPolicy': 'DENY', 'taxable': False}]}, 'problems': [{'path': ['options'], 'explanation': 'Field is not defined on ProductInput'}, {'path': ['variants'], 'explanation': 'Field is not defined on ProductInput'}]}}
GraphQL Errors: [
  {
    "message": "Variable $input of type ProductInput! was provided invalid value for options (Field is not defined on ProductInput), variants (Field is not defined on ProductInput)",
    "locations": [
      {
        "line": 1,
        "column": 24
      }
    ],
    "extensions": {
      "value": {
        "title": "Morsi Laptop",
        "status": "DRAFT",
        "options": [
          "Color"
        ],
        "variants": [
          {
            "options": [
              "Black"
            ],
            "sku": "FG-0000709",
            "price": "1000.0",
            "inventoryManagement": "SHOPIFY",
            "inventoryPolicy": "DENY",
            "taxable": false
          },
          {
            "options": [
              "Gray"
            ],
            "sku": "FG-0000710",
            "price": "1000.0",
            "inventoryManagement": "SHOPIFY",
            "inventoryPolicy": "DENY",
            "taxable": false
          }
        ]
      },
      "problems": [
        {
          "path": [
            "options"
          ],
          "explanation": "Field is not defined on ProductInput"
        },
        {
          "path": [
            "variants"
          ],
          "explanation": "Field is not defined on ProductInput"
        }
      ]
    }
  }
]
GraphQL Data: null
GraphQL Extensions: null
2025-08-10 08:50:11,160 - sync_service - INFO - API log added to SAP: shopify - /admin/api/graphql_local - failure
2025-08-10 08:50:11,161 - sync_service - ERROR - Shopify full response for store local: {'msg': 'failure', 'error': 'GraphQL query error for store local: {\'message\': \'Variable $input of type ProductInput! was provided invalid value for options (Field is not defined on ProductInput), variants (Field is not defined on ProductInput)\', \'locations\': [{\'line\': 1, \'column\': 24}], \'extensions\': {\'value\': {\'title\': \'Morsi Laptop\', \'status\': \'DRAFT\', \'options\': [\'Color\'], \'variants\': [{\'options\': [\'Black\'], \'sku\': \'FG-0000709\', \'price\': \'1000.0\', \'inventoryManagement\': \'SHOPIFY\', \'inventoryPolicy\': \'DENY\', \'taxable\': False}, {\'options\': [\'Gray\'], \'sku\': \'FG-0000710\', \'price\': \'1000.0\', \'inventoryManagement\': \'SHOPIFY\', \'inventoryPolicy\': \'DENY\', \'taxable\': False}]}, \'problems\': [{\'path\': [\'options\'], \'explanation\': \'Field is not defined on ProductInput\'}, {\'path\': [\'variants\'], \'explanation\': \'Field is not defined on ProductInput\'}]}}\nGraphQL Errors: [\n  {\n    "message": "Variable $input of type ProductInput! was provided invalid value for options (Field is not defined on ProductInput), variants (Field is not defined on ProductInput)",\n    "locations": [\n      {\n        "line": 1,\n        "column": 24\n      }\n    ],\n    "extensions": {\n      "value": {\n        "title": "Morsi Laptop",\n        "status": "DRAFT",\n        "options": [\n          "Color"\n        ],\n        "variants": [\n          {\n            "options": [\n              "Black"\n            ],\n            "sku": "FG-0000709",\n            "price": "1000.0",\n            "inventoryManagement": "SHOPIFY",\n            "inventoryPolicy": "DENY",\n            "taxable": false\n          },\n          {\n            "options": [\n              "Gray"\n            ],\n            "sku": "FG-0000710",\n            "price": "1000.0",\n            "inventoryManagement": "SHOPIFY",\n            "inventoryPolicy": "DENY",\n            "taxable": false\n          }\n        ]\n      },\n      "problems": [\n        {\n          "path": [\n            "options"\n          ],\n          "explanation": "Field is not defined on ProductInput"\n        },\n        {\n          "path": [\n            "variants"\n          ],\n          "explanation": "Field is not defined on ProductInput"\n        }\n      ]\n    }\n  }\n]\nGraphQL Data: null\nGraphQL Extensions: null'}
2025-08-10 08:50:11,426 - sync_service - INFO - API log added to SAP: shopify - /admin/api/graphql_local - failure
2025-08-10 08:50:11,427 - sync_service - ERROR - Failed to create product in store local: GraphQL query error for store local: {'message': 'Variable $input of type ProductInput! was provided invalid value for options (Field is not defined on ProductInput), variants (Field is not defined on ProductInput)', 'locations': [{'line': 1, 'column': 24}], 'extensions': {'value': {'title': 'Morsi Laptop', 'status': 'DRAFT', 'options': ['Color'], 'variants': [{'options': ['Black'], 'sku': 'FG-0000709', 'price': '1000.0', 'inventoryManagement': 'SHOPIFY', 'inventoryPolicy': 'DENY', 'taxable': False}, {'options': ['Gray'], 'sku': 'FG-0000710', 'price': '1000.0', 'inventoryManagement': 'SHOPIFY', 'inventoryPolicy': 'DENY', 'taxable': False}]}, 'problems': [{'path': ['options'], 'explanation': 'Field is not defined on ProductInput'}, {'path': ['variants'], 'explanation': 'Field is not defined on ProductInput'}]}}
GraphQL Errors: [
  {
    "message": "Variable $input of type ProductInput! was provided invalid value for options (Field is not defined on ProductInput), variants (Field is not defined on ProductInput)",
    "locations": [
      {
        "line": 1,
        "column": 24
      }
    ],
    "extensions": {
      "value": {
        "title": "Morsi Laptop",
        "status": "DRAFT",
        "options": [
          "Color"
        ],
        "variants": [
          {
            "options": [
              "Black"
            ],
            "sku": "FG-0000709",
            "price": "1000.0",
            "inventoryManagement": "SHOPIFY",
            "inventoryPolicy": "DENY",
            "taxable": false
          },
          {
            "options": [
              "Gray"
            ],
            "sku": "FG-0000710",
            "price": "1000.0",
            "inventoryManagement": "SHOPIFY",
            "inventoryPolicy": "DENY",
            "taxable": false
          }
        ]
      },
      "problems": [
        {
          "path": [
            "options"
          ],
          "explanation": "Field is not defined on ProductInput"
        },
        {
          "path": [
            "variants"
          ],
          "explanation": "Field is not defined on ProductInput"
        }
      ]
    }
  }
]
GraphQL Data: null
GraphQL Extensions: null
2025-08-10 08:50:11,429 - sync_service - INFO - Processing product group: ('Morsi Necklace', 'local') with 3 items for store local
2025-08-10 08:50:11,430 - sync_service - INFO - API Call: {'service': 'shopify', 'endpoint': 'graphql_local', 'request': {'query': '\n        query GetProductByHandle($handle: String!) {\n            productByHandle(handle: $handle) {\n                id\n                title\n                handle\n                description\n                variants(first: 50) {\n                    edges {\n                        node {\n                            id\n                            sku\n                            price\n                            inventoryItem {\n                                id\n                            }\n                            selectedOptions {\n                                name\n                                value\n                            }\n                        }\n                    }\n                }\n            }\n        }\n        ', 'variables': {'handle': 'morsi-necklace'}}, 'response': None, 'status': None}
2025-08-10 08:50:11,897 - sync_service - INFO - API Call: {'service': 'shopify', 'endpoint': 'graphql_local', 'request': None, 'response': {'productByHandle': None}, 'status': 'success'}
2025-08-10 08:50:11,899 - sync_service - INFO - Product Morsi Necklace doesn't exist in store local, creating new product
2025-08-10 08:50:12,163 - sync_service - INFO - API log added to SAP: shopify - /admin/api/graphql_local - success
2025-08-10 08:50:12,164 - sync_service - INFO - API Call: {'service': 'shopify', 'endpoint': 'graphql_local', 'request': {'query': '\n        mutation productCreate($input: ProductInput!) {\n            productCreate(input: $input) {\n                product {\n                    id\n                    title\n                    handle\n                    variants(first: 50) {\n                        edges {\n                            node {\n                                id\n                                sku\n                                inventoryItem {\n                                    id\n                                }\n                                selectedOptions {\n                                    name\n                                    value\n                                }\n                            }\n                        }\n                    }\n                }\n                userErrors {\n                    field\n                    message\n                }\n            }\n        }\n        ', 'variables': {'input': {'title': 'Morsi Necklace', 'status': 'DRAFT', 'options': ['Color'], 'variants': [{'options': ['Black'], 'sku': 'FG-0000702', 'price': '2500.0', 'inventoryManagement': 'SHOPIFY', 'inventoryPolicy': 'DENY', 'taxable': False, 'barcode': '2123243245'}, {'options': ['White'], 'sku': 'FG-0000703', 'price': '2500.0', 'inventoryManagement': 'SHOPIFY', 'inventoryPolicy': 'DENY', 'taxable': False, 'barcode': '242342342'}, {'options': ['Green'], 'sku': 'FG-0000705', 'price': '2500.0', 'inventoryManagement': 'SHOPIFY', 'inventoryPolicy': 'DENY', 'taxable': False}]}}}, 'response': None, 'status': None}
2025-08-10 08:50:12,605 - sync_service - ERROR - GraphQL query error for store local: {'message': 'Variable $input of type ProductInput! was provided invalid value for options (Field is not defined on ProductInput), variants (Field is not defined on ProductInput)', 'locations': [{'line': 1, 'column': 24}], 'extensions': {'value': {'title': 'Morsi Necklace', 'status': 'DRAFT', 'options': ['Color'], 'variants': [{'options': ['Black'], 'sku': 'FG-0000702', 'price': '2500.0', 'inventoryManagement': 'SHOPIFY', 'inventoryPolicy': 'DENY', 'taxable': False, 'barcode': '2123243245'}, {'options': ['White'], 'sku': 'FG-0000703', 'price': '2500.0', 'inventoryManagement': 'SHOPIFY', 'inventoryPolicy': 'DENY', 'taxable': False, 'barcode': '242342342'}, {'options': ['Green'], 'sku': 'FG-0000705', 'price': '2500.0', 'inventoryManagement': 'SHOPIFY', 'inventoryPolicy': 'DENY', 'taxable': False}]}, 'problems': [{'path': ['options'], 'explanation': 'Field is not defined on ProductInput'}, {'path': ['variants'], 'explanation': 'Field is not defined on ProductInput'}]}}
GraphQL Errors: [
  {
    "message": "Variable $input of type ProductInput! was provided invalid value for options (Field is not defined on ProductInput), variants (Field is not defined on ProductInput)",
    "locations": [
      {
        "line": 1,
        "column": 24
      }
    ],
    "extensions": {
      "value": {
        "title": "Morsi Necklace",
        "status": "DRAFT",
        "options": [
          "Color"
        ],
        "variants": [
          {
            "options": [
              "Black"
            ],
            "sku": "FG-0000702",
            "price": "2500.0",
            "inventoryManagement": "SHOPIFY",
            "inventoryPolicy": "DENY",
            "taxable": false,
            "barcode": "2123243245"
          },
          {
            "options": [
              "White"
            ],
            "sku": "FG-0000703",
            "price": "2500.0",
            "inventoryManagement": "SHOPIFY",
            "inventoryPolicy": "DENY",
            "taxable": false,
            "barcode": "242342342"
          },
          {
            "options": [
              "Green"
            ],
            "sku": "FG-0000705",
            "price": "2500.0",
            "inventoryManagement": "SHOPIFY",
            "inventoryPolicy": "DENY",
            "taxable": false
          }
        ]
      },
      "problems": [
        {
          "path": [
            "options"
          ],
          "explanation": "Field is not defined on ProductInput"
        },
        {
          "path": [
            "variants"
          ],
          "explanation": "Field is not defined on ProductInput"
        }
      ]
    }
  }
]
GraphQL Data: null
GraphQL Extensions: null
2025-08-10 08:50:12,874 - sync_service - INFO - API log added to SAP: shopify - /admin/api/graphql_local - failure
2025-08-10 08:50:12,876 - sync_service - ERROR - Shopify full response for store local: {'msg': 'failure', 'error': 'GraphQL query error for store local: {\'message\': \'Variable $input of type ProductInput! was provided invalid value for options (Field is not defined on ProductInput), variants (Field is not defined on ProductInput)\', \'locations\': [{\'line\': 1, \'column\': 24}], \'extensions\': {\'value\': {\'title\': \'Morsi Necklace\', \'status\': \'DRAFT\', \'options\': [\'Color\'], \'variants\': [{\'options\': [\'Black\'], \'sku\': \'FG-0000702\', \'price\': \'2500.0\', \'inventoryManagement\': \'SHOPIFY\', \'inventoryPolicy\': \'DENY\', \'taxable\': False, \'barcode\': \'2123243245\'}, {\'options\': [\'White\'], \'sku\': \'FG-0000703\', \'price\': \'2500.0\', \'inventoryManagement\': \'SHOPIFY\', \'inventoryPolicy\': \'DENY\', \'taxable\': False, \'barcode\': \'242342342\'}, {\'options\': [\'Green\'], \'sku\': \'FG-0000705\', \'price\': \'2500.0\', \'inventoryManagement\': \'SHOPIFY\', \'inventoryPolicy\': \'DENY\', \'taxable\': False}]}, \'problems\': [{\'path\': [\'options\'], \'explanation\': \'Field is not defined on ProductInput\'}, {\'path\': [\'variants\'], \'explanation\': \'Field is not defined on ProductInput\'}]}}\nGraphQL Errors: [\n  {\n    "message": "Variable $input of type ProductInput! was provided invalid value for options (Field is not defined on ProductInput), variants (Field is not defined on ProductInput)",\n    "locations": [\n      {\n        "line": 1,\n        "column": 24\n      }\n    ],\n    "extensions": {\n      "value": {\n        "title": "Morsi Necklace",\n        "status": "DRAFT",\n        "options": [\n          "Color"\n        ],\n        "variants": [\n          {\n            "options": [\n              "Black"\n            ],\n            "sku": "FG-0000702",\n            "price": "2500.0",\n            "inventoryManagement": "SHOPIFY",\n            "inventoryPolicy": "DENY",\n            "taxable": false,\n            "barcode": "2123243245"\n          },\n          {\n            "options": [\n              "White"\n            ],\n            "sku": "FG-0000703",\n            "price": "2500.0",\n            "inventoryManagement": "SHOPIFY",\n            "inventoryPolicy": "DENY",\n            "taxable": false,\n            "barcode": "242342342"\n          },\n          {\n            "options": [\n              "Green"\n            ],\n            "sku": "FG-0000705",\n            "price": "2500.0",\n            "inventoryManagement": "SHOPIFY",\n            "inventoryPolicy": "DENY",\n            "taxable": false\n          }\n        ]\n      },\n      "problems": [\n        {\n          "path": [\n            "options"\n          ],\n          "explanation": "Field is not defined on ProductInput"\n        },\n        {\n          "path": [\n            "variants"\n          ],\n          "explanation": "Field is not defined on ProductInput"\n        }\n      ]\n    }\n  }\n]\nGraphQL Data: null\nGraphQL Extensions: null'}
2025-08-10 08:50:13,138 - sync_service - INFO - API log added to SAP: shopify - /admin/api/graphql_local - failure
2025-08-10 08:50:13,139 - sync_service - ERROR - Failed to create product in store local: GraphQL query error for store local: {'message': 'Variable $input of type ProductInput! was provided invalid value for options (Field is not defined on ProductInput), variants (Field is not defined on ProductInput)', 'locations': [{'line': 1, 'column': 24}], 'extensions': {'value': {'title': 'Morsi Necklace', 'status': 'DRAFT', 'options': ['Color'], 'variants': [{'options': ['Black'], 'sku': 'FG-0000702', 'price': '2500.0', 'inventoryManagement': 'SHOPIFY', 'inventoryPolicy': 'DENY', 'taxable': False, 'barcode': '2123243245'}, {'options': ['White'], 'sku': 'FG-0000703', 'price': '2500.0', 'inventoryManagement': 'SHOPIFY', 'inventoryPolicy': 'DENY', 'taxable': False, 'barcode': '242342342'}, {'options': ['Green'], 'sku': 'FG-0000705', 'price': '2500.0', 'inventoryManagement': 'SHOPIFY', 'inventoryPolicy': 'DENY', 'taxable': False}]}, 'problems': [{'path': ['options'], 'explanation': 'Field is not defined on ProductInput'}, {'path': ['variants'], 'explanation': 'Field is not defined on ProductInput'}]}}
GraphQL Errors: [
  {
    "message": "Variable $input of type ProductInput! was provided invalid value for options (Field is not defined on ProductInput), variants (Field is not defined on ProductInput)",
    "locations": [
      {
        "line": 1,
        "column": 24
      }
    ],
    "extensions": {
      "value": {
        "title": "Morsi Necklace",
        "status": "DRAFT",
        "options": [
          "Color"
        ],
        "variants": [
          {
            "options": [
              "Black"
            ],
            "sku": "FG-0000702",
            "price": "2500.0",
            "inventoryManagement": "SHOPIFY",
            "inventoryPolicy": "DENY",
            "taxable": false,
            "barcode": "2123243245"
          },
          {
            "options": [
              "White"
            ],
            "sku": "FG-0000703",
            "price": "2500.0",
            "inventoryManagement": "SHOPIFY",
            "inventoryPolicy": "DENY",
            "taxable": false,
            "barcode": "242342342"
          },
          {
            "options": [
              "Green"
            ],
            "sku": "FG-0000705",
            "price": "2500.0",
            "inventoryManagement": "SHOPIFY",
            "inventoryPolicy": "DENY",
            "taxable": false
          }
        ]
      },
      "problems": [
        {
          "path": [
            "options"
          ],
          "explanation": "Field is not defined on ProductInput"
        },
        {
          "path": [
            "variants"
          ],
          "explanation": "Field is not defined on ProductInput"
        }
      ]
    }
  }
]
GraphQL Data: null
GraphQL Extensions: null
2025-08-10 08:50:13,140 - sync_service - INFO - Processing product group: ('Morsi Shoes', 'local') with 2 items for store local
2025-08-10 08:50:13,141 - sync_service - INFO - API Call: {'service': 'shopify', 'endpoint': 'graphql_local', 'request': {'query': '\n        query GetProductByHandle($handle: String!) {\n            productByHandle(handle: $handle) {\n                id\n                title\n                handle\n                description\n                variants(first: 50) {\n                    edges {\n                        node {\n                            id\n                            sku\n                            price\n                            inventoryItem {\n                                id\n                            }\n                            selectedOptions {\n                                name\n                                value\n                            }\n                        }\n                    }\n                }\n            }\n        }\n        ', 'variables': {'handle': 'morsi-shoes'}}, 'response': None, 'status': None}
2025-08-10 08:50:13,594 - sync_service - INFO - API Call: {'service': 'shopify', 'endpoint': 'graphql_local', 'request': None, 'response': {'productByHandle': None}, 'status': 'success'}
2025-08-10 08:50:13,595 - sync_service - INFO - Product Morsi Shoes doesn't exist in store local, creating new product
2025-08-10 08:50:13,870 - sync_service - INFO - API log added to SAP: shopify - /admin/api/graphql_local - success
2025-08-10 08:50:13,870 - sync_service - INFO - API Call: {'service': 'shopify', 'endpoint': 'graphql_local', 'request': {'query': '\n        mutation productCreate($input: ProductInput!) {\n            productCreate(input: $input) {\n                product {\n                    id\n                    title\n                    handle\n                    variants(first: 50) {\n                        edges {\n                            node {\n                                id\n                                sku\n                                inventoryItem {\n                                    id\n                                }\n                                selectedOptions {\n                                    name\n                                    value\n                                }\n                            }\n                        }\n                    }\n                }\n                userErrors {\n                    field\n                    message\n                }\n            }\n        }\n        ', 'variables': {'input': {'title': 'Morsi Shoes', 'status': 'DRAFT', 'options': ['Color'], 'variants': [{'options': ['Green'], 'sku': 'FG-0000706', 'price': '1000.0', 'inventoryManagement': 'SHOPIFY', 'inventoryPolicy': 'DENY', 'taxable': False}, {'options': ['Beige'], 'sku': 'FG-0000707', 'price': '1000.0', 'inventoryManagement': 'SHOPIFY', 'inventoryPolicy': 'DENY', 'taxable': False}]}}}, 'response': None, 'status': None}
2025-08-10 08:50:19,463 - sync_service - ERROR - GraphQL query error for store local: {'message': 'Variable $input of type ProductInput! was provided invalid value for options (Field is not defined on ProductInput), variants (Field is not defined on ProductInput)', 'locations': [{'line': 1, 'column': 24}], 'extensions': {'value': {'title': 'Morsi Shoes', 'status': 'DRAFT', 'options': ['Color'], 'variants': [{'options': ['Green'], 'sku': 'FG-0000706', 'price': '1000.0', 'inventoryManagement': 'SHOPIFY', 'inventoryPolicy': 'DENY', 'taxable': False}, {'options': ['Beige'], 'sku': 'FG-0000707', 'price': '1000.0', 'inventoryManagement': 'SHOPIFY', 'inventoryPolicy': 'DENY', 'taxable': False}]}, 'problems': [{'path': ['options'], 'explanation': 'Field is not defined on ProductInput'}, {'path': ['variants'], 'explanation': 'Field is not defined on ProductInput'}]}}
GraphQL Errors: [
  {
    "message": "Variable $input of type ProductInput! was provided invalid value for options (Field is not defined on ProductInput), variants (Field is not defined on ProductInput)",
    "locations": [
      {
        "line": 1,
        "column": 24
      }
    ],
    "extensions": {
      "value": {
        "title": "Morsi Shoes",
        "status": "DRAFT",
        "options": [
          "Color"
        ],
        "variants": [
          {
            "options": [
              "Green"
            ],
            "sku": "FG-0000706",
            "price": "1000.0",
            "inventoryManagement": "SHOPIFY",
            "inventoryPolicy": "DENY",
            "taxable": false
          },
          {
            "options": [
              "Beige"
            ],
            "sku": "FG-0000707",
            "price": "1000.0",
            "inventoryManagement": "SHOPIFY",
            "inventoryPolicy": "DENY",
            "taxable": false
          }
        ]
      },
      "problems": [
        {
          "path": [
            "options"
          ],
          "explanation": "Field is not defined on ProductInput"
        },
        {
          "path": [
            "variants"
          ],
          "explanation": "Field is not defined on ProductInput"
        }
      ]
    }
  }
]
GraphQL Data: null
GraphQL Extensions: null
2025-08-10 08:50:19,738 - sync_service - INFO - API log added to SAP: shopify - /admin/api/graphql_local - failure
2025-08-10 08:50:19,739 - sync_service - ERROR - Shopify full response for store local: {'msg': 'failure', 'error': 'GraphQL query error for store local: {\'message\': \'Variable $input of type ProductInput! was provided invalid value for options (Field is not defined on ProductInput), variants (Field is not defined on ProductInput)\', \'locations\': [{\'line\': 1, \'column\': 24}], \'extensions\': {\'value\': {\'title\': \'Morsi Shoes\', \'status\': \'DRAFT\', \'options\': [\'Color\'], \'variants\': [{\'options\': [\'Green\'], \'sku\': \'FG-0000706\', \'price\': \'1000.0\', \'inventoryManagement\': \'SHOPIFY\', \'inventoryPolicy\': \'DENY\', \'taxable\': False}, {\'options\': [\'Beige\'], \'sku\': \'FG-0000707\', \'price\': \'1000.0\', \'inventoryManagement\': \'SHOPIFY\', \'inventoryPolicy\': \'DENY\', \'taxable\': False}]}, \'problems\': [{\'path\': [\'options\'], \'explanation\': \'Field is not defined on ProductInput\'}, {\'path\': [\'variants\'], \'explanation\': \'Field is not defined on ProductInput\'}]}}\nGraphQL Errors: [\n  {\n    "message": "Variable $input of type ProductInput! was provided invalid value for options (Field is not defined on ProductInput), variants (Field is not defined on ProductInput)",\n    "locations": [\n      {\n        "line": 1,\n        "column": 24\n      }\n    ],\n    "extensions": {\n      "value": {\n        "title": "Morsi Shoes",\n        "status": "DRAFT",\n        "options": [\n          "Color"\n        ],\n        "variants": [\n          {\n            "options": [\n              "Green"\n            ],\n            "sku": "FG-0000706",\n            "price": "1000.0",\n            "inventoryManagement": "SHOPIFY",\n            "inventoryPolicy": "DENY",\n            "taxable": false\n          },\n          {\n            "options": [\n              "Beige"\n            ],\n            "sku": "FG-0000707",\n            "price": "1000.0",\n            "inventoryManagement": "SHOPIFY",\n            "inventoryPolicy": "DENY",\n            "taxable": false\n          }\n        ]\n      },\n      "problems": [\n        {\n          "path": [\n            "options"\n          ],\n          "explanation": "Field is not defined on ProductInput"\n        },\n        {\n          "path": [\n            "variants"\n          ],\n          "explanation": "Field is not defined on ProductInput"\n        }\n      ]\n    }\n  }\n]\nGraphQL Data: null\nGraphQL Extensions: null'}
2025-08-10 08:50:20,011 - sync_service - INFO - API log added to SAP: shopify - /admin/api/graphql_local - failure
2025-08-10 08:50:20,011 - sync_service - ERROR - Failed to create product in store local: GraphQL query error for store local: {'message': 'Variable $input of type ProductInput! was provided invalid value for options (Field is not defined on ProductInput), variants (Field is not defined on ProductInput)', 'locations': [{'line': 1, 'column': 24}], 'extensions': {'value': {'title': 'Morsi Shoes', 'status': 'DRAFT', 'options': ['Color'], 'variants': [{'options': ['Green'], 'sku': 'FG-0000706', 'price': '1000.0', 'inventoryManagement': 'SHOPIFY', 'inventoryPolicy': 'DENY', 'taxable': False}, {'options': ['Beige'], 'sku': 'FG-0000707', 'price': '1000.0', 'inventoryManagement': 'SHOPIFY', 'inventoryPolicy': 'DENY', 'taxable': False}]}, 'problems': [{'path': ['options'], 'explanation': 'Field is not defined on ProductInput'}, {'path': ['variants'], 'explanation': 'Field is not defined on ProductInput'}]}}
GraphQL Errors: [
  {
    "message": "Variable $input of type ProductInput! was provided invalid value for options (Field is not defined on ProductInput), variants (Field is not defined on ProductInput)",
    "locations": [
      {
        "line": 1,
        "column": 24
      }
    ],
    "extensions": {
      "value": {
        "title": "Morsi Shoes",
        "status": "DRAFT",
        "options": [
          "Color"
        ],
        "variants": [
          {
            "options": [
              "Green"
            ],
            "sku": "FG-0000706",
            "price": "1000.0",
            "inventoryManagement": "SHOPIFY",
            "inventoryPolicy": "DENY",
            "taxable": false
          },
          {
            "options": [
              "Beige"
            ],
            "sku": "FG-0000707",
            "price": "1000.0",
            "inventoryManagement": "SHOPIFY",
            "inventoryPolicy": "DENY",
            "taxable": false
          }
        ]
      },
      "problems": [
        {
          "path": [
            "options"
          ],
          "explanation": "Field is not defined on ProductInput"
        },
        {
          "path": [
            "variants"
          ],
          "explanation": "Field is not defined on ProductInput"
        }
      ]
    }
  }
]
GraphQL Data: null
GraphQL Extensions: null
2025-08-10 08:50:20,012 - sync_service - INFO - Sync Event: {'sync_type': 'multi_store_new_items_sap_to_shopify', 'items_processed': 0, 'success_count': 0, 'error_count': 8, 'details': None}
2025-08-10 08:50:20,013 - sync_service - INFO - Multi-store new items sync completed: 0 processed, 0 successful, 8 errors
2025-08-10 08:50:20,014 - sync_service - INFO - Starting stock change sync...
2025-08-10 08:50:20,015 - sync_service - INFO - Starting stock change sync using MASHURA_StockChangeB1SLQuery view
2025-08-10 08:50:20,016 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'view.svc/MASHURA_StockChangeB1SLQuery', 'request': {'method': 'GET', 'url': 'https://10.0.0.100:50000/b1s/v1/view.svc/MASHURA_StockChangeB1SLQuery', 'data': None, 'params': {'$top': 50}}, 'response': None, 'status': None}
2025-08-10 08:50:20,824 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'view.svc/MASHURA_StockChangeB1SLQuery', 'request': None, 'response': {'odata.metadata': 'https://10.0.0.100:50000/b1s/v1/view.svc/$metadata#MASHURA_StockChangeB1SLQuery', 'value': []}, 'status': 'success'}
2025-08-10 08:50:20,825 - sync_service - INFO - No stock changes found in the view.
2025-08-10 08:50:20,826 - sync_service - INFO - Starting item changes sync...
2025-08-10 08:50:20,826 - sync_service - INFO - Starting item changes sync from SAP to Shopify
2025-08-10 08:50:20,826 - sync_service - INFO - Processing item changes for store: local
2025-08-10 08:50:20,827 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': "view.svc/MASHURA_ItemChangeB1SLQuery?$filter=Shopify_Store eq 'local'", 'request': {'method': 'GET', 'url': "https://10.0.0.100:50000/b1s/v1/view.svc/MASHURA_ItemChangeB1SLQuery?$filter=Shopify_Store eq 'local'", 'data': None, 'params': None}, 'response': None, 'status': None}
2025-08-10 08:50:21,583 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': "view.svc/MASHURA_ItemChangeB1SLQuery?$filter=Shopify_Store eq 'local'", 'request': None, 'response': {'odata.metadata': 'https://10.0.0.100:50000/b1s/v1/view.svc/$metadata#MASHURA_ItemChangeB1SLQuery', 'value': []}, 'status': 'success'}
2025-08-10 08:50:21,586 - sync_service - INFO - Found 0 item changes for store local
2025-08-10 08:50:21,588 - sync_service - INFO - No item changes found for store local
2025-08-10 08:50:21,589 - sync_service - INFO - Sync Event: {'sync_type': 'item_changes_sap_to_shopify', 'items_processed': 0, 'success_count': 0, 'error_count': 0, 'details': None}
2025-08-10 08:50:21,590 - sync_service - INFO - Item changes sync completed: 0 processed, 0 successful, 0 errors
2025-08-10 08:50:21,591 - sync_service - INFO - Starting price changes sync...
2025-08-10 08:50:21,591 - sync_service - INFO - Starting price changes sync from SAP to Shopify
2025-08-10 08:50:21,592 - sync_service - INFO - Processing price changes for store: local
2025-08-10 08:50:21,593 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': "view.svc/MASHURA_PriceChangeB1SLQuery?$filter=Shopify_Store eq 'local'", 'request': {'method': 'GET', 'url': "https://10.0.0.100:50000/b1s/v1/view.svc/MASHURA_PriceChangeB1SLQuery?$filter=Shopify_Store eq 'local'", 'data': None, 'params': None}, 'response': None, 'status': None}
2025-08-10 08:50:22,368 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': "view.svc/MASHURA_PriceChangeB1SLQuery?$filter=Shopify_Store eq 'local'", 'request': None, 'response': {'odata.metadata': 'https://10.0.0.100:50000/b1s/v1/view.svc/$metadata#MASHURA_PriceChangeB1SLQuery', 'value': []}, 'status': 'success'}
2025-08-10 08:50:22,370 - sync_service - INFO - Found 0 price changes for store local
2025-08-10 08:50:22,372 - sync_service - INFO - No price changes found for store local
2025-08-10 08:50:22,373 - sync_service - INFO - Sync Event: {'sync_type': 'price_changes_sap_to_shopify', 'items_processed': 0, 'success_count': 0, 'error_count': 0, 'details': None}
2025-08-10 08:50:22,374 - sync_service - INFO - Price changes sync completed: 0 processed, 0 successful, 0 errors
2025-08-10 08:51:10,675 - sync_service - INFO - Initialized Shopify client for store: Local Store (local)
2025-08-10 08:51:10,687 - sync_service - INFO - Starting all syncs...
2025-08-10 08:51:10,688 - sync_service - INFO - Starting new items sync...
2025-08-10 08:51:10,688 - sync_service - INFO - Starting multi-store new items sync from SAP to Shopify
2025-08-10 08:51:10,689 - sync_service - INFO - Fetching new items for store: local
2025-08-10 08:51:10,689 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'login', 'request': {'company': 'JudeBenHalim_Test', 'user': 'manager'}, 'response': None, 'status': None}
2025-08-10 08:51:11,430 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'login', 'request': None, 'response': {'status': 'success'}, 'status': 'success'}
2025-08-10 08:51:11,431 - sync_service - INFO - SAP login successful
2025-08-10 08:51:11,432 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': "view.svc/MASHURA_New_ItemsB1SLQuery?$filter=Shopify_Store eq 'local'&$orderby=MainProduct", 'request': {'method': 'GET', 'url': "https://10.0.0.100:50000/b1s/v1/view.svc/MASHURA_New_ItemsB1SLQuery?$filter=Shopify_Store eq 'local'&$orderby=MainProduct", 'data': None, 'params': None}, 'response': None, 'status': None}
2025-08-10 08:51:12,137 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': "view.svc/MASHURA_New_ItemsB1SLQuery?$filter=Shopify_Store eq 'local'&$orderby=MainProduct", 'request': None, 'response': {'odata.metadata': 'https://10.0.0.100:50000/b1s/v1/view.svc/$metadata#MASHURA_New_ItemsB1SLQuery', 'value': [{'itemcode': 'FG-0000704', 'ItemName': 'Morsi Bracelet', 'MainProduct': None, 'Color': None, 'Price': 3200.0, 'Shopify_Store': 'local', 'Shopify_ProductCode': None, 'Status': 'new', 'Barcode': '645464644', 'id__': 1}, {'itemcode': 'FG-0000708', 'ItemName': 'Morsi Socks', 'MainProduct': None, 'Color': None, 'Price': 200.0, 'Shopify_Store': 'local', 'Shopify_ProductCode': None, 'Status': 'new', 'Barcode': None, 'id__': 2}, {'itemcode': 'FG-0000711', 'ItemName': 'Morsi Keyboard', 'MainProduct': None, 'Color': None, 'Price': 1000.0, 'Shopify_Store': 'local', 'Shopify_ProductCode': None, 'Status': 'new', 'Barcode': None, 'id__': 3}, {'itemcode': 'FG-0000712', 'ItemName': 'AA-Iron Man Necklace', 'MainProduct': None, 'Color': None, 'Price': 1000.0, 'Shopify_Store': 'local', 'Shopify_ProductCode': None, 'Status': 'new', 'Barcode': '203090', 'id__': 4}, {'itemcode': 'FG-0000713', 'ItemName': 'AA-Ring Red', 'MainProduct': 'Iron Man Necklace', 'Color': 'Red', 'Price': 2000.0, 'Shopify_Store': 'local', 'Shopify_ProductCode': None, 'Status': 'new', 'Barcode': '203090', 'id__': 5}, {'itemcode': 'FG-0000714', 'ItemName': 'AA-Ring Blue', 'MainProduct': 'Iron Man Necklace', 'Color': 'Blue', 'Price': 3000.0, 'Shopify_Store': 'local', 'Shopify_ProductCode': None, 'Status': 'new', 'Barcode': '203090', 'id__': 6}, {'itemcode': 'FG-0000709', 'ItemName': 'Morsi-Laptop-Black', 'MainProduct': 'Morsi Laptop', 'Color': 'Black', 'Price': 1000.0, 'Shopify_Store': 'local', 'Shopify_ProductCode': None, 'Status': 'new', 'Barcode': None, 'id__': 7}, {'itemcode': 'FG-0000710', 'ItemName': 'Morsi-Laptop-Grey', 'MainProduct': 'Morsi Laptop', 'Color': 'Grey', 'Price': 1000.0, 'Shopify_Store': 'local', 'Shopify_ProductCode': None, 'Status': 'new', 'Barcode': None, 'id__': 8}, {'itemcode': 'FG-0000702', 'ItemName': 'Morsi-Necklace-Black', 'MainProduct': 'Morsi Necklace', 'Color': 'Black', 'Price': 2500.0, 'Shopify_Store': 'local', 'Shopify_ProductCode': None, 'Status': 'new', 'Barcode': '2123243245', 'id__': 9}, {'itemcode': 'FG-0000703', 'ItemName': 'Morsi-Necklace-White', 'MainProduct': 'Morsi Necklace', 'Color': 'White', 'Price': 2500.0, 'Shopify_Store': 'local', 'Shopify_ProductCode': None, 'Status': 'new', 'Barcode': '242342342', 'id__': 10}, {'itemcode': 'FG-0000705', 'ItemName': 'Morsi-Necklace-Green', 'MainProduct': 'Morsi Necklace', 'Color': 'Green', 'Price': 2500.0, 'Shopify_Store': 'local', 'Shopify_ProductCode': None, 'Status': 'new', 'Barcode': None, 'id__': 11}, {'itemcode': 'FG-0000706', 'ItemName': 'Morsi-Shoes-Green', 'MainProduct': 'Morsi Shoes', 'Color': 'Green', 'Price': 1000.0, 'Shopify_Store': 'local', 'Shopify_ProductCode': None, 'Status': 'new', 'Barcode': None, 'id__': 12}, {'itemcode': 'FG-0000707', 'ItemName': 'Morsi-Shoes-Beige', 'MainProduct': 'Morsi Shoes', 'Color': 'Beige', 'Price': 1000.0, 'Shopify_Store': 'local', 'Shopify_ProductCode': None, 'Status': 'new', 'Barcode': None, 'id__': 13}]}, 'status': 'success'}
2025-08-10 08:51:12,138 - sync_service - INFO - Product group: ('FG-0000704', 'local') has 1 items
2025-08-10 08:51:12,138 - sync_service - INFO - Product group: ('FG-0000708', 'local') has 1 items
2025-08-10 08:51:12,139 - sync_service - INFO - Product group: ('FG-0000711', 'local') has 1 items
2025-08-10 08:51:12,139 - sync_service - INFO - Product group: ('FG-0000712', 'local') has 1 items
2025-08-10 08:51:12,139 - sync_service - INFO - Product group: ('Iron Man Necklace', 'local') has 2 items
2025-08-10 08:51:12,140 - sync_service - INFO - Product group: ('Morsi Laptop', 'local') has 2 items
2025-08-10 08:51:12,140 - sync_service - INFO - Product group: ('Morsi Necklace', 'local') has 3 items
2025-08-10 08:51:12,141 - sync_service - INFO - Product group: ('Morsi Shoes', 'local') has 2 items
2025-08-10 08:51:12,141 - sync_service - INFO - Grouped 13 items into 8 product groups for store local
2025-08-10 08:51:12,142 - sync_service - INFO - Processing product group: ('FG-0000704', 'local') with 1 items for store local
2025-08-10 08:51:12,142 - sync_service - INFO - API Call: {'service': 'shopify', 'endpoint': 'graphql_local', 'request': {'query': '\n        query GetProductByHandle($handle: String!) {\n            productByHandle(handle: $handle) {\n                id\n                title\n                handle\n                description\n                variants(first: 50) {\n                    edges {\n                        node {\n                            id\n                            sku\n                            price\n                            inventoryItem {\n                                id\n                            }\n                            selectedOptions {\n                                name\n                                value\n                            }\n                        }\n                    }\n                }\n            }\n        }\n        ', 'variables': {'handle': 'default'}}, 'response': None, 'status': None}
2025-08-10 08:51:12,595 - sync_service - INFO - API Call: {'service': 'shopify', 'endpoint': 'graphql_local', 'request': None, 'response': {'productByHandle': None}, 'status': 'success'}
2025-08-10 08:51:12,596 - sync_service - INFO - Product None doesn't exist in store local, creating new product
2025-08-10 08:51:13,312 - sync_service - INFO - SAP logging client login successful
2025-08-10 08:51:14,002 - sync_service - INFO - API log added to SAP: shopify - /admin/api/graphql_local - success
2025-08-10 08:51:14,003 - sync_service - INFO - API Call: {'service': 'shopify', 'endpoint': 'graphql_local', 'request': {'query': '\n        mutation productCreate($input: ProductInput!) {\n            productCreate(input: $input) {\n                product {\n                    id\n                    title\n                    handle\n                    variants(first: 50) {\n                        edges {\n                            node {\n                                id\n                                sku\n                                inventoryItem {\n                                    id\n                                }\n                                selectedOptions {\n                                    name\n                                    value\n                                }\n                            }\n                        }\n                    }\n                }\n                userErrors {\n                    field\n                    message\n                }\n            }\n        }\n        ', 'variables': {'input': {'title': 'Morsi Bracelet', 'descriptionHtml': '', 'vendor': '', 'productType': 'Default', 'status': 'DRAFT', 'tags': [], 'seo': {'title': 'Morsi Bracelet', 'description': ''}}}}, 'response': None, 'status': None}
2025-08-10 08:51:14,903 - sync_service - INFO - API Call: {'service': 'shopify', 'endpoint': 'graphql_local', 'request': None, 'response': {'productCreate': {'product': {'id': 'gid://shopify/Product/7526282166338', 'title': 'Morsi Bracelet', 'handle': 'morsi-bracelet', 'variants': {'edges': [{'node': {'id': 'gid://shopify/ProductVariant/42380103942210', 'sku': None, 'inventoryItem': {'id': 'gid://shopify/InventoryItem/44480622919746'}, 'selectedOptions': [{'name': 'Title', 'value': 'Default Title'}]}}]}}, 'userErrors': []}}, 'status': 'success'}
2025-08-10 08:51:14,903 - sync_service - INFO - API Call: {'service': 'shopify', 'endpoint': 'graphql_local', 'request': {'query': '\n        mutation productVariantCreate($input: ProductVariantInput!) {\n            productVariantCreate(input: $input) {\n                productVariant {\n                    id\n                    sku\n                    price\n                    inventoryItem {\n                        id\n                    }\n                    selectedOptions {\n                        name\n                        value\n                    }\n                }\n                userErrors {\n                    field\n                    message\n                }\n            }\n        }\n        ', 'variables': {'input': {'sku': 'FG-0000704', 'price': '3200.0', 'inventoryPolicy': 'DENY', 'inventoryManagement': 'SHOPIFY', 'weight': 0.0, 'weightUnit': 'KILOGRAMS', 'taxable': False, 'barcode': '645464644', 'productId': 'gid://shopify/Product/7526282166338'}}}, 'response': None, 'status': None}
2025-08-10 08:51:15,386 - sync_service - ERROR - GraphQL query error for store local: {'message': "Field 'productVariantCreate' doesn't exist on type 'Mutation'", 'locations': [{'line': 2, 'column': 3}], 'path': ['mutation productVariantCreate', 'productVariantCreate'], 'extensions': {'code': 'undefinedField', 'typeName': 'Mutation', 'fieldName': 'productVariantCreate'}}
GraphQL Errors: [
  {
    "message": "Field 'productVariantCreate' doesn't exist on type 'Mutation'",
    "locations": [
      {
        "line": 2,
        "column": 3
      }
    ],
    "path": [
      "mutation productVariantCreate",
      "productVariantCreate"
    ],
    "extensions": {
      "code": "undefinedField",
      "typeName": "Mutation",
      "fieldName": "productVariantCreate"
    }
  },
  {
    "message": "Variable $input is declared by productVariantCreate but not used",
    "locations": [
      {
        "line": 1,
        "column": 1
      }
    ],
    "path": [
      "mutation productVariantCreate"
    ],
    "extensions": {
      "code": "variableNotUsed",
      "variableName": "input"
    }
  }
]
GraphQL Data: null
GraphQL Extensions: null
2025-08-10 08:51:16,071 - sync_service - INFO - API log added to SAP: shopify - /admin/api/graphql_local - failure
2025-08-10 08:51:16,071 - sync_service - ERROR - Shopify full response for store local: {'msg': 'success', 'data': {'productCreate': {'product': {'id': 'gid://shopify/Product/7526282166338', 'title': 'Morsi Bracelet', 'handle': 'morsi-bracelet', 'variants': {'edges': [{'node': {'id': 'gid://shopify/ProductVariant/42380103942210', 'sku': None, 'inventoryItem': {'id': 'gid://shopify/InventoryItem/44480622919746'}, 'selectedOptions': [{'name': 'Title', 'value': 'Default Title'}]}}]}}, 'userErrors': []}}}
2025-08-10 08:51:16,728 - sync_service - INFO - API log added to SAP: shopify - /admin/api/graphql_local - success
2025-08-10 08:51:16,728 - sync_service - INFO - Successfully created product in store local
2025-08-10 08:51:17,884 - sync_service - INFO - Processing product group: ('FG-0000708', 'local') with 1 items for store local
2025-08-10 08:51:17,886 - sync_service - INFO - API Call: {'service': 'shopify', 'endpoint': 'graphql_local', 'request': {'query': '\n        query GetProductByHandle($handle: String!) {\n            productByHandle(handle: $handle) {\n                id\n                title\n                handle\n                description\n                variants(first: 50) {\n                    edges {\n                        node {\n                            id\n                            sku\n                            price\n                            inventoryItem {\n                                id\n                            }\n                            selectedOptions {\n                                name\n                                value\n                            }\n                        }\n                    }\n                }\n            }\n        }\n        ', 'variables': {'handle': 'default'}}, 'response': None, 'status': None}
2025-08-10 08:51:23,692 - sync_service - INFO - API Call: {'service': 'shopify', 'endpoint': 'graphql_local', 'request': None, 'response': {'productByHandle': None}, 'status': 'success'}
2025-08-10 08:51:23,693 - sync_service - INFO - Product None doesn't exist in store local, creating new product
2025-08-10 08:51:24,407 - sync_service - INFO - API log added to SAP: shopify - /admin/api/graphql_local - success
2025-08-10 08:51:24,409 - sync_service - INFO - API Call: {'service': 'shopify', 'endpoint': 'graphql_local', 'request': {'query': '\n        mutation productCreate($input: ProductInput!) {\n            productCreate(input: $input) {\n                product {\n                    id\n                    title\n                    handle\n                    variants(first: 50) {\n                        edges {\n                            node {\n                                id\n                                sku\n                                inventoryItem {\n                                    id\n                                }\n                                selectedOptions {\n                                    name\n                                    value\n                                }\n                            }\n                        }\n                    }\n                }\n                userErrors {\n                    field\n                    message\n                }\n            }\n        }\n        ', 'variables': {'input': {'title': 'Morsi Socks', 'descriptionHtml': '', 'vendor': '', 'productType': 'Default', 'status': 'DRAFT', 'tags': [], 'seo': {'title': 'Morsi Socks', 'description': ''}}}}, 'response': None, 'status': None}
2025-08-10 08:51:25,256 - sync_service - INFO - API Call: {'service': 'shopify', 'endpoint': 'graphql_local', 'request': None, 'response': {'productCreate': {'product': {'id': 'gid://shopify/Product/7526282199106', 'title': 'Morsi Socks', 'handle': 'morsi-socks', 'variants': {'edges': [{'node': {'id': 'gid://shopify/ProductVariant/42380103974978', 'sku': None, 'inventoryItem': {'id': 'gid://shopify/InventoryItem/44480622952514'}, 'selectedOptions': [{'name': 'Title', 'value': 'Default Title'}]}}]}}, 'userErrors': []}}, 'status': 'success'}
2025-08-10 08:51:25,258 - sync_service - INFO - API Call: {'service': 'shopify', 'endpoint': 'graphql_local', 'request': {'query': '\n        mutation productVariantCreate($input: ProductVariantInput!) {\n            productVariantCreate(input: $input) {\n                productVariant {\n                    id\n                    sku\n                    price\n                    inventoryItem {\n                        id\n                    }\n                    selectedOptions {\n                        name\n                        value\n                    }\n                }\n                userErrors {\n                    field\n                    message\n                }\n            }\n        }\n        ', 'variables': {'input': {'sku': 'FG-0000708', 'price': '200.0', 'inventoryPolicy': 'DENY', 'inventoryManagement': 'SHOPIFY', 'weight': 0.0, 'weightUnit': 'KILOGRAMS', 'taxable': False, 'productId': 'gid://shopify/Product/7526282199106'}}}, 'response': None, 'status': None}
2025-08-10 08:51:25,740 - sync_service - ERROR - GraphQL query error for store local: {'message': "Field 'productVariantCreate' doesn't exist on type 'Mutation'", 'locations': [{'line': 2, 'column': 3}], 'path': ['mutation productVariantCreate', 'productVariantCreate'], 'extensions': {'code': 'undefinedField', 'typeName': 'Mutation', 'fieldName': 'productVariantCreate'}}
GraphQL Errors: [
  {
    "message": "Field 'productVariantCreate' doesn't exist on type 'Mutation'",
    "locations": [
      {
        "line": 2,
        "column": 3
      }
    ],
    "path": [
      "mutation productVariantCreate",
      "productVariantCreate"
    ],
    "extensions": {
      "code": "undefinedField",
      "typeName": "Mutation",
      "fieldName": "productVariantCreate"
    }
  },
  {
    "message": "Variable $input is declared by productVariantCreate but not used",
    "locations": [
      {
        "line": 1,
        "column": 1
      }
    ],
    "path": [
      "mutation productVariantCreate"
    ],
    "extensions": {
      "code": "variableNotUsed",
      "variableName": "input"
    }
  }
]
GraphQL Data: null
GraphQL Extensions: null
2025-08-10 08:51:26,407 - sync_service - INFO - API log added to SAP: shopify - /admin/api/graphql_local - failure
2025-08-10 08:51:26,409 - sync_service - ERROR - Shopify full response for store local: {'msg': 'success', 'data': {'productCreate': {'product': {'id': 'gid://shopify/Product/7526282199106', 'title': 'Morsi Socks', 'handle': 'morsi-socks', 'variants': {'edges': [{'node': {'id': 'gid://shopify/ProductVariant/42380103974978', 'sku': None, 'inventoryItem': {'id': 'gid://shopify/InventoryItem/44480622952514'}, 'selectedOptions': [{'name': 'Title', 'value': 'Default Title'}]}}]}}, 'userErrors': []}}}
2025-08-10 08:51:26,676 - sync_service - INFO - API log added to SAP: shopify - /admin/api/graphql_local - success
2025-08-10 08:51:26,677 - sync_service - INFO - Successfully created product in store local
2025-08-10 08:51:27,848 - sync_service - INFO - Processing product group: ('FG-0000711', 'local') with 1 items for store local
2025-08-10 08:51:27,849 - sync_service - INFO - API Call: {'service': 'shopify', 'endpoint': 'graphql_local', 'request': {'query': '\n        query GetProductByHandle($handle: String!) {\n            productByHandle(handle: $handle) {\n                id\n                title\n                handle\n                description\n                variants(first: 50) {\n                    edges {\n                        node {\n                            id\n                            sku\n                            price\n                            inventoryItem {\n                                id\n                            }\n                            selectedOptions {\n                                name\n                                value\n                            }\n                        }\n                    }\n                }\n            }\n        }\n        ', 'variables': {'handle': 'default'}}, 'response': None, 'status': None}
2025-08-10 08:51:28,312 - sync_service - INFO - API Call: {'service': 'shopify', 'endpoint': 'graphql_local', 'request': None, 'response': {'productByHandle': None}, 'status': 'success'}
2025-08-10 08:51:28,313 - sync_service - INFO - Product None doesn't exist in store local, creating new product
2025-08-10 08:51:28,593 - sync_service - INFO - API log added to SAP: shopify - /admin/api/graphql_local - success
2025-08-10 08:51:28,594 - sync_service - INFO - API Call: {'service': 'shopify', 'endpoint': 'graphql_local', 'request': {'query': '\n        mutation productCreate($input: ProductInput!) {\n            productCreate(input: $input) {\n                product {\n                    id\n                    title\n                    handle\n                    variants(first: 50) {\n                        edges {\n                            node {\n                                id\n                                sku\n                                inventoryItem {\n                                    id\n                                }\n                                selectedOptions {\n                                    name\n                                    value\n                                }\n                            }\n                        }\n                    }\n                }\n                userErrors {\n                    field\n                    message\n                }\n            }\n        }\n        ', 'variables': {'input': {'title': 'Morsi Keyboard', 'descriptionHtml': '', 'vendor': '', 'productType': 'Default', 'status': 'DRAFT', 'tags': [], 'seo': {'title': 'Morsi Keyboard', 'description': ''}}}}, 'response': None, 'status': None}
2025-08-10 08:51:36,341 - sync_service - INFO - API Call: {'service': 'shopify', 'endpoint': 'graphql_local', 'request': None, 'response': {'productCreate': {'product': {'id': 'gid://shopify/Product/7526282231874', 'title': 'Morsi Keyboard', 'handle': 'morsi-keyboard', 'variants': {'edges': [{'node': {'id': 'gid://shopify/ProductVariant/42380104007746', 'sku': None, 'inventoryItem': {'id': 'gid://shopify/InventoryItem/44480622985282'}, 'selectedOptions': [{'name': 'Title', 'value': 'Default Title'}]}}]}}, 'userErrors': []}}, 'status': 'success'}
2025-08-10 08:51:36,342 - sync_service - INFO - API Call: {'service': 'shopify', 'endpoint': 'graphql_local', 'request': {'query': '\n        mutation productVariantCreate($input: ProductVariantInput!) {\n            productVariantCreate(input: $input) {\n                productVariant {\n                    id\n                    sku\n                    price\n                    inventoryItem {\n                        id\n                    }\n                    selectedOptions {\n                        name\n                        value\n                    }\n                }\n                userErrors {\n                    field\n                    message\n                }\n            }\n        }\n        ', 'variables': {'input': {'sku': 'FG-0000711', 'price': '1000.0', 'inventoryPolicy': 'DENY', 'inventoryManagement': 'SHOPIFY', 'weight': 0.0, 'weightUnit': 'KILOGRAMS', 'taxable': False, 'productId': 'gid://shopify/Product/7526282231874'}}}, 'response': None, 'status': None}
2025-08-10 08:51:36,809 - sync_service - ERROR - GraphQL query error for store local: {'message': "Field 'productVariantCreate' doesn't exist on type 'Mutation'", 'locations': [{'line': 2, 'column': 3}], 'path': ['mutation productVariantCreate', 'productVariantCreate'], 'extensions': {'code': 'undefinedField', 'typeName': 'Mutation', 'fieldName': 'productVariantCreate'}}
GraphQL Errors: [
  {
    "message": "Field 'productVariantCreate' doesn't exist on type 'Mutation'",
    "locations": [
      {
        "line": 2,
        "column": 3
      }
    ],
    "path": [
      "mutation productVariantCreate",
      "productVariantCreate"
    ],
    "extensions": {
      "code": "undefinedField",
      "typeName": "Mutation",
      "fieldName": "productVariantCreate"
    }
  },
  {
    "message": "Variable $input is declared by productVariantCreate but not used",
    "locations": [
      {
        "line": 1,
        "column": 1
      }
    ],
    "path": [
      "mutation productVariantCreate"
    ],
    "extensions": {
      "code": "variableNotUsed",
      "variableName": "input"
    }
  }
]
GraphQL Data: null
GraphQL Extensions: null
2025-08-10 08:51:37,076 - sync_service - INFO - API log added to SAP: shopify - /admin/api/graphql_local - failure
2025-08-10 08:51:37,077 - sync_service - ERROR - Shopify full response for store local: {'msg': 'success', 'data': {'productCreate': {'product': {'id': 'gid://shopify/Product/7526282231874', 'title': 'Morsi Keyboard', 'handle': 'morsi-keyboard', 'variants': {'edges': [{'node': {'id': 'gid://shopify/ProductVariant/42380104007746', 'sku': None, 'inventoryItem': {'id': 'gid://shopify/InventoryItem/44480622985282'}, 'selectedOptions': [{'name': 'Title', 'value': 'Default Title'}]}}]}}, 'userErrors': []}}}
2025-08-10 08:51:37,776 - sync_service - INFO - API log added to SAP: shopify - /admin/api/graphql_local - success
2025-08-10 08:51:37,777 - sync_service - INFO - Successfully created product in store local
2025-08-10 08:51:38,724 - sync_service - INFO - Processing product group: ('FG-0000712', 'local') with 1 items for store local
2025-08-10 08:51:38,726 - sync_service - INFO - API Call: {'service': 'shopify', 'endpoint': 'graphql_local', 'request': {'query': '\n        query GetProductByHandle($handle: String!) {\n            productByHandle(handle: $handle) {\n                id\n                title\n                handle\n                description\n                variants(first: 50) {\n                    edges {\n                        node {\n                            id\n                            sku\n                            price\n                            inventoryItem {\n                                id\n                            }\n                            selectedOptions {\n                                name\n                                value\n                            }\n                        }\n                    }\n                }\n            }\n        }\n        ', 'variables': {'handle': 'default'}}, 'response': None, 'status': None}
2025-08-10 08:51:39,193 - sync_service - INFO - API Call: {'service': 'shopify', 'endpoint': 'graphql_local', 'request': None, 'response': {'productByHandle': None}, 'status': 'success'}
2025-08-10 08:51:39,195 - sync_service - INFO - Product None doesn't exist in store local, creating new product
2025-08-10 08:51:39,466 - sync_service - INFO - API log added to SAP: shopify - /admin/api/graphql_local - success
2025-08-10 08:51:39,467 - sync_service - INFO - API Call: {'service': 'shopify', 'endpoint': 'graphql_local', 'request': {'query': '\n        mutation productCreate($input: ProductInput!) {\n            productCreate(input: $input) {\n                product {\n                    id\n                    title\n                    handle\n                    variants(first: 50) {\n                        edges {\n                            node {\n                                id\n                                sku\n                                inventoryItem {\n                                    id\n                                }\n                                selectedOptions {\n                                    name\n                                    value\n                                }\n                            }\n                        }\n                    }\n                }\n                userErrors {\n                    field\n                    message\n                }\n            }\n        }\n        ', 'variables': {'input': {'title': 'AA-Iron Man Necklace', 'descriptionHtml': '', 'vendor': '', 'productType': 'Default', 'status': 'DRAFT', 'tags': [], 'seo': {'title': 'AA-Iron Man Necklace', 'description': ''}}}}, 'response': None, 'status': None}
2025-08-10 08:51:40,325 - sync_service - INFO - API Call: {'service': 'shopify', 'endpoint': 'graphql_local', 'request': None, 'response': {'productCreate': {'product': {'id': 'gid://shopify/Product/7526282264642', 'title': 'AA-Iron Man Necklace', 'handle': 'aa-iron-man-necklace', 'variants': {'edges': [{'node': {'id': 'gid://shopify/ProductVariant/42380104040514', 'sku': None, 'inventoryItem': {'id': 'gid://shopify/InventoryItem/44480623018050'}, 'selectedOptions': [{'name': 'Title', 'value': 'Default Title'}]}}]}}, 'userErrors': []}}, 'status': 'success'}
2025-08-10 08:51:40,328 - sync_service - INFO - API Call: {'service': 'shopify', 'endpoint': 'graphql_local', 'request': {'query': '\n        mutation productVariantCreate($input: ProductVariantInput!) {\n            productVariantCreate(input: $input) {\n                productVariant {\n                    id\n                    sku\n                    price\n                    inventoryItem {\n                        id\n                    }\n                    selectedOptions {\n                        name\n                        value\n                    }\n                }\n                userErrors {\n                    field\n                    message\n                }\n            }\n        }\n        ', 'variables': {'input': {'sku': 'FG-0000712', 'price': '1000.0', 'inventoryPolicy': 'DENY', 'inventoryManagement': 'SHOPIFY', 'weight': 0.0, 'weightUnit': 'KILOGRAMS', 'taxable': False, 'barcode': '203090', 'productId': 'gid://shopify/Product/7526282264642'}}}, 'response': None, 'status': None}
2025-08-10 08:51:50,340 - sync_service - ERROR - GraphQL query error for store local: 
2025-08-10 08:51:50,625 - sync_service - INFO - API log added to SAP: shopify - /admin/api/graphql_local - failure
2025-08-10 08:51:50,626 - sync_service - ERROR - Shopify full response for store local: {'msg': 'success', 'data': {'productCreate': {'product': {'id': 'gid://shopify/Product/7526282264642', 'title': 'AA-Iron Man Necklace', 'handle': 'aa-iron-man-necklace', 'variants': {'edges': [{'node': {'id': 'gid://shopify/ProductVariant/42380104040514', 'sku': None, 'inventoryItem': {'id': 'gid://shopify/InventoryItem/44480623018050'}, 'selectedOptions': [{'name': 'Title', 'value': 'Default Title'}]}}]}}, 'userErrors': []}}}
2025-08-10 08:51:50,892 - sync_service - INFO - API log added to SAP: shopify - /admin/api/graphql_local - success
2025-08-10 08:51:50,893 - sync_service - INFO - Successfully created product in store local
2025-08-10 08:51:52,576 - sync_service - INFO - Processing product group: ('Iron Man Necklace', 'local') with 2 items for store local
2025-08-10 08:51:52,576 - sync_service - INFO - API Call: {'service': 'shopify', 'endpoint': 'graphql_local', 'request': {'query': '\n        query GetProductByHandle($handle: String!) {\n            productByHandle(handle: $handle) {\n                id\n                title\n                handle\n                description\n                variants(first: 50) {\n                    edges {\n                        node {\n                            id\n                            sku\n                            price\n                            inventoryItem {\n                                id\n                            }\n                            selectedOptions {\n                                name\n                                value\n                            }\n                        }\n                    }\n                }\n            }\n        }\n        ', 'variables': {'handle': 'iron-man-necklace'}}, 'response': None, 'status': None}
2025-08-10 08:52:02,582 - sync_service - ERROR - GraphQL query error for store local: 
2025-08-10 08:52:02,853 - sync_service - INFO - API log added to SAP: shopify - /admin/api/graphql_local - failure
2025-08-10 08:52:02,855 - sync_service - INFO - Product Iron Man Necklace doesn't exist in store local, creating new product
2025-08-10 08:52:03,123 - sync_service - INFO - API log added to SAP: shopify - /admin/api/graphql_local - success
2025-08-10 08:52:03,124 - sync_service - INFO - API Call: {'service': 'shopify', 'endpoint': 'graphql_local', 'request': {'query': '\n        mutation productCreate($input: ProductInput!) {\n            productCreate(input: $input) {\n                product {\n                    id\n                    title\n                    handle\n                    variants(first: 50) {\n                        edges {\n                            node {\n                                id\n                                sku\n                                inventoryItem {\n                                    id\n                                }\n                                selectedOptions {\n                                    name\n                                    value\n                                }\n                            }\n                        }\n                    }\n                }\n                userErrors {\n                    field\n                    message\n                }\n            }\n        }\n        ', 'variables': {'input': {'title': 'Iron Man Necklace', 'status': 'DRAFT'}}}, 'response': None, 'status': None}
2025-08-10 08:52:04,436 - sync_service - INFO - API Call: {'service': 'shopify', 'endpoint': 'graphql_local', 'request': None, 'response': {'productCreate': {'product': {'id': 'gid://shopify/Product/7526282330178', 'title': 'Iron Man Necklace', 'handle': 'iron-man-necklace', 'variants': {'edges': [{'node': {'id': 'gid://shopify/ProductVariant/42380104106050', 'sku': None, 'inventoryItem': {'id': 'gid://shopify/InventoryItem/44480623083586'}, 'selectedOptions': [{'name': 'Title', 'value': 'Default Title'}]}}]}}, 'userErrors': []}}, 'status': 'success'}
2025-08-10 08:52:04,437 - sync_service - INFO - API Call: {'service': 'shopify', 'endpoint': 'graphql_local', 'request': {'query': '\n        mutation productUpdate($input: ProductInput!) {\n            productUpdate(input: $input) {\n                product {\n                    id\n                    title\n                    options {\n                        id\n                        name\n                        values\n                    }\n                }\n                userErrors {\n                    field\n                    message\n                }\n            }\n        }\n        ', 'variables': {'input': {'id': 'gid://shopify/Product/7526282330178', 'options': ['Color']}}}, 'response': None, 'status': None}
2025-08-10 08:52:04,871 - sync_service - ERROR - GraphQL query error for store local: {'message': 'Variable $input of type ProductInput! was provided invalid value for options (Field is not defined on ProductInput)', 'locations': [{'line': 1, 'column': 24}], 'extensions': {'value': {'id': 'gid://shopify/Product/7526282330178', 'options': ['Color']}, 'problems': [{'path': ['options'], 'explanation': 'Field is not defined on ProductInput'}]}}
GraphQL Errors: [
  {
    "message": "Variable $input of type ProductInput! was provided invalid value for options (Field is not defined on ProductInput)",
    "locations": [
      {
        "line": 1,
        "column": 24
      }
    ],
    "extensions": {
      "value": {
        "id": "gid://shopify/Product/7526282330178",
        "options": [
          "Color"
        ]
      },
      "problems": [
        {
          "path": [
            "options"
          ],
          "explanation": "Field is not defined on ProductInput"
        }
      ]
    }
  }
]
GraphQL Data: null
GraphQL Extensions: null
2025-08-10 08:52:05,140 - sync_service - INFO - API log added to SAP: shopify - /admin/api/graphql_local - failure
2025-08-10 08:52:05,141 - sync_service - INFO - API Call: {'service': 'shopify', 'endpoint': 'graphql_local', 'request': {'query': '\n        mutation productVariantCreate($input: ProductVariantInput!) {\n            productVariantCreate(input: $input) {\n                productVariant {\n                    id\n                    sku\n                    price\n                    inventoryItem {\n                        id\n                    }\n                    selectedOptions {\n                        name\n                        value\n                    }\n                }\n                userErrors {\n                    field\n                    message\n                }\n            }\n        }\n        ', 'variables': {'input': {'options': ['Red'], 'sku': 'FG-0000713', 'price': '2000.0', 'inventoryManagement': 'SHOPIFY', 'inventoryPolicy': 'DENY', 'taxable': False, 'barcode': '203090', 'productId': 'gid://shopify/Product/7526282330178'}}}, 'response': None, 'status': None}
2025-08-10 08:52:05,626 - sync_service - ERROR - GraphQL query error for store local: {'message': "Field 'productVariantCreate' doesn't exist on type 'Mutation'", 'locations': [{'line': 2, 'column': 3}], 'path': ['mutation productVariantCreate', 'productVariantCreate'], 'extensions': {'code': 'undefinedField', 'typeName': 'Mutation', 'fieldName': 'productVariantCreate'}}
GraphQL Errors: [
  {
    "message": "Field 'productVariantCreate' doesn't exist on type 'Mutation'",
    "locations": [
      {
        "line": 2,
        "column": 3
      }
    ],
    "path": [
      "mutation productVariantCreate",
      "productVariantCreate"
    ],
    "extensions": {
      "code": "undefinedField",
      "typeName": "Mutation",
      "fieldName": "productVariantCreate"
    }
  },
  {
    "message": "Variable $input is declared by productVariantCreate but not used",
    "locations": [
      {
        "line": 1,
        "column": 1
      }
    ],
    "path": [
      "mutation productVariantCreate"
    ],
    "extensions": {
      "code": "variableNotUsed",
      "variableName": "input"
    }
  }
]
GraphQL Data: null
GraphQL Extensions: null
2025-08-10 08:52:05,891 - sync_service - INFO - API log added to SAP: shopify - /admin/api/graphql_local - failure
2025-08-10 08:52:05,892 - sync_service - INFO - API Call: {'service': 'shopify', 'endpoint': 'graphql_local', 'request': {'query': '\n        mutation productVariantCreate($input: ProductVariantInput!) {\n            productVariantCreate(input: $input) {\n                productVariant {\n                    id\n                    sku\n                    price\n                    inventoryItem {\n                        id\n                    }\n                    selectedOptions {\n                        name\n                        value\n                    }\n                }\n                userErrors {\n                    field\n                    message\n                }\n            }\n        }\n        ', 'variables': {'input': {'options': ['Blue'], 'sku': 'FG-0000714', 'price': '3000.0', 'inventoryManagement': 'SHOPIFY', 'inventoryPolicy': 'DENY', 'taxable': False, 'barcode': '203090', 'productId': 'gid://shopify/Product/7526282330178'}}}, 'response': None, 'status': None}
2025-08-10 08:52:06,358 - sync_service - ERROR - GraphQL query error for store local: {'message': "Field 'productVariantCreate' doesn't exist on type 'Mutation'", 'locations': [{'line': 2, 'column': 3}], 'path': ['mutation productVariantCreate', 'productVariantCreate'], 'extensions': {'code': 'undefinedField', 'typeName': 'Mutation', 'fieldName': 'productVariantCreate'}}
GraphQL Errors: [
  {
    "message": "Field 'productVariantCreate' doesn't exist on type 'Mutation'",
    "locations": [
      {
        "line": 2,
        "column": 3
      }
    ],
    "path": [
      "mutation productVariantCreate",
      "productVariantCreate"
    ],
    "extensions": {
      "code": "undefinedField",
      "typeName": "Mutation",
      "fieldName": "productVariantCreate"
    }
  },
  {
    "message": "Variable $input is declared by productVariantCreate but not used",
    "locations": [
      {
        "line": 1,
        "column": 1
      }
    ],
    "path": [
      "mutation productVariantCreate"
    ],
    "extensions": {
      "code": "variableNotUsed",
      "variableName": "input"
    }
  }
]
GraphQL Data: null
GraphQL Extensions: null
2025-08-10 08:52:06,619 - sync_service - INFO - API log added to SAP: shopify - /admin/api/graphql_local - failure
2025-08-10 08:52:06,620 - sync_service - ERROR - Shopify full response for store local: {'msg': 'success', 'data': {'productCreate': {'product': {'id': 'gid://shopify/Product/7526282330178', 'title': 'Iron Man Necklace', 'handle': 'iron-man-necklace', 'variants': {'edges': [{'node': {'id': 'gid://shopify/ProductVariant/42380104106050', 'sku': None, 'inventoryItem': {'id': 'gid://shopify/InventoryItem/44480623083586'}, 'selectedOptions': [{'name': 'Title', 'value': 'Default Title'}]}}]}}, 'userErrors': []}}}
2025-08-10 08:52:06,884 - sync_service - INFO - API log added to SAP: shopify - /admin/api/graphql_local - success
2025-08-10 08:52:06,885 - sync_service - INFO - Successfully created product in store local
2025-08-10 08:52:07,656 - sync_service - INFO - Processing product group: ('Morsi Laptop', 'local') with 2 items for store local
2025-08-10 08:52:07,656 - sync_service - INFO - API Call: {'service': 'shopify', 'endpoint': 'graphql_local', 'request': {'query': '\n        query GetProductByHandle($handle: String!) {\n            productByHandle(handle: $handle) {\n                id\n                title\n                handle\n                description\n                variants(first: 50) {\n                    edges {\n                        node {\n                            id\n                            sku\n                            price\n                            inventoryItem {\n                                id\n                            }\n                            selectedOptions {\n                                name\n                                value\n                            }\n                        }\n                    }\n                }\n            }\n        }\n        ', 'variables': {'handle': 'morsi-laptop'}}, 'response': None, 'status': None}
2025-08-10 08:52:08,110 - sync_service - INFO - API Call: {'service': 'shopify', 'endpoint': 'graphql_local', 'request': None, 'response': {'productByHandle': None}, 'status': 'success'}
2025-08-10 08:52:08,112 - sync_service - INFO - Product Morsi Laptop doesn't exist in store local, creating new product
2025-08-10 08:52:08,376 - sync_service - INFO - API log added to SAP: shopify - /admin/api/graphql_local - success
2025-08-10 08:52:08,378 - sync_service - INFO - API Call: {'service': 'shopify', 'endpoint': 'graphql_local', 'request': {'query': '\n        mutation productCreate($input: ProductInput!) {\n            productCreate(input: $input) {\n                product {\n                    id\n                    title\n                    handle\n                    variants(first: 50) {\n                        edges {\n                            node {\n                                id\n                                sku\n                                inventoryItem {\n                                    id\n                                }\n                                selectedOptions {\n                                    name\n                                    value\n                                }\n                            }\n                        }\n                    }\n                }\n                userErrors {\n                    field\n                    message\n                }\n            }\n        }\n        ', 'variables': {'input': {'title': 'Morsi Laptop', 'status': 'DRAFT'}}}, 'response': None, 'status': None}
2025-08-10 08:52:09,211 - sync_service - INFO - API Call: {'service': 'shopify', 'endpoint': 'graphql_local', 'request': None, 'response': {'productCreate': {'product': {'id': 'gid://shopify/Product/7526282362946', 'title': 'Morsi Laptop', 'handle': 'morsi-laptop', 'variants': {'edges': [{'node': {'id': 'gid://shopify/ProductVariant/42380104138818', 'sku': None, 'inventoryItem': {'id': 'gid://shopify/InventoryItem/44480623116354'}, 'selectedOptions': [{'name': 'Title', 'value': 'Default Title'}]}}]}}, 'userErrors': []}}, 'status': 'success'}
2025-08-10 08:52:09,212 - sync_service - INFO - API Call: {'service': 'shopify', 'endpoint': 'graphql_local', 'request': {'query': '\n        mutation productUpdate($input: ProductInput!) {\n            productUpdate(input: $input) {\n                product {\n                    id\n                    title\n                    options {\n                        id\n                        name\n                        values\n                    }\n                }\n                userErrors {\n                    field\n                    message\n                }\n            }\n        }\n        ', 'variables': {'input': {'id': 'gid://shopify/Product/7526282362946', 'options': ['Color']}}}, 'response': None, 'status': None}
2025-08-10 08:52:15,935 - sync_service - ERROR - GraphQL query error for store local: {'message': 'Variable $input of type ProductInput! was provided invalid value for options (Field is not defined on ProductInput)', 'locations': [{'line': 1, 'column': 24}], 'extensions': {'value': {'id': 'gid://shopify/Product/7526282362946', 'options': ['Color']}, 'problems': [{'path': ['options'], 'explanation': 'Field is not defined on ProductInput'}]}}
GraphQL Errors: [
  {
    "message": "Variable $input of type ProductInput! was provided invalid value for options (Field is not defined on ProductInput)",
    "locations": [
      {
        "line": 1,
        "column": 24
      }
    ],
    "extensions": {
      "value": {
        "id": "gid://shopify/Product/7526282362946",
        "options": [
          "Color"
        ]
      },
      "problems": [
        {
          "path": [
            "options"
          ],
          "explanation": "Field is not defined on ProductInput"
        }
      ]
    }
  }
]
GraphQL Data: null
GraphQL Extensions: null
2025-08-10 08:52:16,206 - sync_service - INFO - API log added to SAP: shopify - /admin/api/graphql_local - failure
2025-08-10 08:52:16,208 - sync_service - INFO - API Call: {'service': 'shopify', 'endpoint': 'graphql_local', 'request': {'query': '\n        mutation productVariantCreate($input: ProductVariantInput!) {\n            productVariantCreate(input: $input) {\n                productVariant {\n                    id\n                    sku\n                    price\n                    inventoryItem {\n                        id\n                    }\n                    selectedOptions {\n                        name\n                        value\n                    }\n                }\n                userErrors {\n                    field\n                    message\n                }\n            }\n        }\n        ', 'variables': {'input': {'options': ['Black'], 'sku': 'FG-0000709', 'price': '1000.0', 'inventoryManagement': 'SHOPIFY', 'inventoryPolicy': 'DENY', 'taxable': False, 'productId': 'gid://shopify/Product/7526282362946'}}}, 'response': None, 'status': None}
2025-08-10 08:52:16,679 - sync_service - ERROR - GraphQL query error for store local: {'message': "Field 'productVariantCreate' doesn't exist on type 'Mutation'", 'locations': [{'line': 2, 'column': 3}], 'path': ['mutation productVariantCreate', 'productVariantCreate'], 'extensions': {'code': 'undefinedField', 'typeName': 'Mutation', 'fieldName': 'productVariantCreate'}}
GraphQL Errors: [
  {
    "message": "Field 'productVariantCreate' doesn't exist on type 'Mutation'",
    "locations": [
      {
        "line": 2,
        "column": 3
      }
    ],
    "path": [
      "mutation productVariantCreate",
      "productVariantCreate"
    ],
    "extensions": {
      "code": "undefinedField",
      "typeName": "Mutation",
      "fieldName": "productVariantCreate"
    }
  },
  {
    "message": "Variable $input is declared by productVariantCreate but not used",
    "locations": [
      {
        "line": 1,
        "column": 1
      }
    ],
    "path": [
      "mutation productVariantCreate"
    ],
    "extensions": {
      "code": "variableNotUsed",
      "variableName": "input"
    }
  }
]
GraphQL Data: null
GraphQL Extensions: null
2025-08-10 08:52:16,946 - sync_service - INFO - API log added to SAP: shopify - /admin/api/graphql_local - failure
2025-08-10 08:52:16,946 - sync_service - INFO - API Call: {'service': 'shopify', 'endpoint': 'graphql_local', 'request': {'query': '\n        mutation productVariantCreate($input: ProductVariantInput!) {\n            productVariantCreate(input: $input) {\n                productVariant {\n                    id\n                    sku\n                    price\n                    inventoryItem {\n                        id\n                    }\n                    selectedOptions {\n                        name\n                        value\n                    }\n                }\n                userErrors {\n                    field\n                    message\n                }\n            }\n        }\n        ', 'variables': {'input': {'options': ['Gray'], 'sku': 'FG-0000710', 'price': '1000.0', 'inventoryManagement': 'SHOPIFY', 'inventoryPolicy': 'DENY', 'taxable': False, 'productId': 'gid://shopify/Product/7526282362946'}}}, 'response': None, 'status': None}
2025-08-10 08:52:17,420 - sync_service - ERROR - GraphQL query error for store local: {'message': "Field 'productVariantCreate' doesn't exist on type 'Mutation'", 'locations': [{'line': 2, 'column': 3}], 'path': ['mutation productVariantCreate', 'productVariantCreate'], 'extensions': {'code': 'undefinedField', 'typeName': 'Mutation', 'fieldName': 'productVariantCreate'}}
GraphQL Errors: [
  {
    "message": "Field 'productVariantCreate' doesn't exist on type 'Mutation'",
    "locations": [
      {
        "line": 2,
        "column": 3
      }
    ],
    "path": [
      "mutation productVariantCreate",
      "productVariantCreate"
    ],
    "extensions": {
      "code": "undefinedField",
      "typeName": "Mutation",
      "fieldName": "productVariantCreate"
    }
  },
  {
    "message": "Variable $input is declared by productVariantCreate but not used",
    "locations": [
      {
        "line": 1,
        "column": 1
      }
    ],
    "path": [
      "mutation productVariantCreate"
    ],
    "extensions": {
      "code": "variableNotUsed",
      "variableName": "input"
    }
  }
]
GraphQL Data: null
GraphQL Extensions: null
2025-08-10 08:52:17,691 - sync_service - INFO - API log added to SAP: shopify - /admin/api/graphql_local - failure
2025-08-10 08:52:17,692 - sync_service - ERROR - Shopify full response for store local: {'msg': 'success', 'data': {'productCreate': {'product': {'id': 'gid://shopify/Product/7526282362946', 'title': 'Morsi Laptop', 'handle': 'morsi-laptop', 'variants': {'edges': [{'node': {'id': 'gid://shopify/ProductVariant/42380104138818', 'sku': None, 'inventoryItem': {'id': 'gid://shopify/InventoryItem/44480623116354'}, 'selectedOptions': [{'name': 'Title', 'value': 'Default Title'}]}}]}}, 'userErrors': []}}}
2025-08-10 08:52:17,986 - sync_service - INFO - API log added to SAP: shopify - /admin/api/graphql_local - success
2025-08-10 08:52:17,988 - sync_service - INFO - Successfully created product in store local
2025-08-10 08:52:18,776 - sync_service - INFO - Processing product group: ('Morsi Necklace', 'local') with 3 items for store local
2025-08-10 08:52:18,777 - sync_service - INFO - API Call: {'service': 'shopify', 'endpoint': 'graphql_local', 'request': {'query': '\n        query GetProductByHandle($handle: String!) {\n            productByHandle(handle: $handle) {\n                id\n                title\n                handle\n                description\n                variants(first: 50) {\n                    edges {\n                        node {\n                            id\n                            sku\n                            price\n                            inventoryItem {\n                                id\n                            }\n                            selectedOptions {\n                                name\n                                value\n                            }\n                        }\n                    }\n                }\n            }\n        }\n        ', 'variables': {'handle': 'morsi-necklace'}}, 'response': None, 'status': None}
2025-08-10 08:52:19,241 - sync_service - INFO - API Call: {'service': 'shopify', 'endpoint': 'graphql_local', 'request': None, 'response': {'productByHandle': None}, 'status': 'success'}
2025-08-10 08:52:19,241 - sync_service - INFO - Product Morsi Necklace doesn't exist in store local, creating new product
2025-08-10 08:52:19,536 - sync_service - INFO - API log added to SAP: shopify - /admin/api/graphql_local - success
2025-08-10 08:52:19,537 - sync_service - INFO - API Call: {'service': 'shopify', 'endpoint': 'graphql_local', 'request': {'query': '\n        mutation productCreate($input: ProductInput!) {\n            productCreate(input: $input) {\n                product {\n                    id\n                    title\n                    handle\n                    variants(first: 50) {\n                        edges {\n                            node {\n                                id\n                                sku\n                                inventoryItem {\n                                    id\n                                }\n                                selectedOptions {\n                                    name\n                                    value\n                                }\n                            }\n                        }\n                    }\n                }\n                userErrors {\n                    field\n                    message\n                }\n            }\n        }\n        ', 'variables': {'input': {'title': 'Morsi Necklace', 'status': 'DRAFT'}}}, 'response': None, 'status': None}
2025-08-10 08:52:20,368 - sync_service - INFO - API Call: {'service': 'shopify', 'endpoint': 'graphql_local', 'request': None, 'response': {'productCreate': {'product': {'id': 'gid://shopify/Product/7526282395714', 'title': 'Morsi Necklace', 'handle': 'morsi-necklace', 'variants': {'edges': [{'node': {'id': 'gid://shopify/ProductVariant/42380104171586', 'sku': None, 'inventoryItem': {'id': 'gid://shopify/InventoryItem/44480623149122'}, 'selectedOptions': [{'name': 'Title', 'value': 'Default Title'}]}}]}}, 'userErrors': []}}, 'status': 'success'}
2025-08-10 08:52:20,370 - sync_service - INFO - API Call: {'service': 'shopify', 'endpoint': 'graphql_local', 'request': {'query': '\n        mutation productUpdate($input: ProductInput!) {\n            productUpdate(input: $input) {\n                product {\n                    id\n                    title\n                    options {\n                        id\n                        name\n                        values\n                    }\n                }\n                userErrors {\n                    field\n                    message\n                }\n            }\n        }\n        ', 'variables': {'input': {'id': 'gid://shopify/Product/7526282395714', 'options': ['Color']}}}, 'response': None, 'status': None}
2025-08-10 08:52:20,808 - sync_service - ERROR - GraphQL query error for store local: {'message': 'Variable $input of type ProductInput! was provided invalid value for options (Field is not defined on ProductInput)', 'locations': [{'line': 1, 'column': 24}], 'extensions': {'value': {'id': 'gid://shopify/Product/7526282395714', 'options': ['Color']}, 'problems': [{'path': ['options'], 'explanation': 'Field is not defined on ProductInput'}]}}
GraphQL Errors: [
  {
    "message": "Variable $input of type ProductInput! was provided invalid value for options (Field is not defined on ProductInput)",
    "locations": [
      {
        "line": 1,
        "column": 24
      }
    ],
    "extensions": {
      "value": {
        "id": "gid://shopify/Product/7526282395714",
        "options": [
          "Color"
        ]
      },
      "problems": [
        {
          "path": [
            "options"
          ],
          "explanation": "Field is not defined on ProductInput"
        }
      ]
    }
  }
]
GraphQL Data: null
GraphQL Extensions: null
2025-08-10 08:52:21,106 - sync_service - INFO - API log added to SAP: shopify - /admin/api/graphql_local - failure
2025-08-10 08:52:21,107 - sync_service - INFO - API Call: {'service': 'shopify', 'endpoint': 'graphql_local', 'request': {'query': '\n        mutation productVariantCreate($input: ProductVariantInput!) {\n            productVariantCreate(input: $input) {\n                productVariant {\n                    id\n                    sku\n                    price\n                    inventoryItem {\n                        id\n                    }\n                    selectedOptions {\n                        name\n                        value\n                    }\n                }\n                userErrors {\n                    field\n                    message\n                }\n            }\n        }\n        ', 'variables': {'input': {'options': ['Black'], 'sku': 'FG-0000702', 'price': '2500.0', 'inventoryManagement': 'SHOPIFY', 'inventoryPolicy': 'DENY', 'taxable': False, 'barcode': '2123243245', 'productId': 'gid://shopify/Product/7526282395714'}}}, 'response': None, 'status': None}
2025-08-10 08:52:27,849 - sync_service - ERROR - GraphQL query error for store local: {'message': "Field 'productVariantCreate' doesn't exist on type 'Mutation'", 'locations': [{'line': 2, 'column': 3}], 'path': ['mutation productVariantCreate', 'productVariantCreate'], 'extensions': {'code': 'undefinedField', 'typeName': 'Mutation', 'fieldName': 'productVariantCreate'}}
GraphQL Errors: [
  {
    "message": "Field 'productVariantCreate' doesn't exist on type 'Mutation'",
    "locations": [
      {
        "line": 2,
        "column": 3
      }
    ],
    "path": [
      "mutation productVariantCreate",
      "productVariantCreate"
    ],
    "extensions": {
      "code": "undefinedField",
      "typeName": "Mutation",
      "fieldName": "productVariantCreate"
    }
  },
  {
    "message": "Variable $input is declared by productVariantCreate but not used",
    "locations": [
      {
        "line": 1,
        "column": 1
      }
    ],
    "path": [
      "mutation productVariantCreate"
    ],
    "extensions": {
      "code": "variableNotUsed",
      "variableName": "input"
    }
  }
]
GraphQL Data: null
GraphQL Extensions: null
2025-08-10 08:52:28,124 - sync_service - INFO - API log added to SAP: shopify - /admin/api/graphql_local - failure
2025-08-10 08:52:28,125 - sync_service - INFO - API Call: {'service': 'shopify', 'endpoint': 'graphql_local', 'request': {'query': '\n        mutation productVariantCreate($input: ProductVariantInput!) {\n            productVariantCreate(input: $input) {\n                productVariant {\n                    id\n                    sku\n                    price\n                    inventoryItem {\n                        id\n                    }\n                    selectedOptions {\n                        name\n                        value\n                    }\n                }\n                userErrors {\n                    field\n                    message\n                }\n            }\n        }\n        ', 'variables': {'input': {'options': ['White'], 'sku': 'FG-0000703', 'price': '2500.0', 'inventoryManagement': 'SHOPIFY', 'inventoryPolicy': 'DENY', 'taxable': False, 'barcode': '242342342', 'productId': 'gid://shopify/Product/7526282395714'}}}, 'response': None, 'status': None}
2025-08-10 08:52:28,610 - sync_service - ERROR - GraphQL query error for store local: {'message': "Field 'productVariantCreate' doesn't exist on type 'Mutation'", 'locations': [{'line': 2, 'column': 3}], 'path': ['mutation productVariantCreate', 'productVariantCreate'], 'extensions': {'code': 'undefinedField', 'typeName': 'Mutation', 'fieldName': 'productVariantCreate'}}
GraphQL Errors: [
  {
    "message": "Field 'productVariantCreate' doesn't exist on type 'Mutation'",
    "locations": [
      {
        "line": 2,
        "column": 3
      }
    ],
    "path": [
      "mutation productVariantCreate",
      "productVariantCreate"
    ],
    "extensions": {
      "code": "undefinedField",
      "typeName": "Mutation",
      "fieldName": "productVariantCreate"
    }
  },
  {
    "message": "Variable $input is declared by productVariantCreate but not used",
    "locations": [
      {
        "line": 1,
        "column": 1
      }
    ],
    "path": [
      "mutation productVariantCreate"
    ],
    "extensions": {
      "code": "variableNotUsed",
      "variableName": "input"
    }
  }
]
GraphQL Data: null
GraphQL Extensions: null
2025-08-10 08:52:28,915 - sync_service - INFO - API log added to SAP: shopify - /admin/api/graphql_local - failure
2025-08-10 08:52:28,917 - sync_service - INFO - API Call: {'service': 'shopify', 'endpoint': 'graphql_local', 'request': {'query': '\n        mutation productVariantCreate($input: ProductVariantInput!) {\n            productVariantCreate(input: $input) {\n                productVariant {\n                    id\n                    sku\n                    price\n                    inventoryItem {\n                        id\n                    }\n                    selectedOptions {\n                        name\n                        value\n                    }\n                }\n                userErrors {\n                    field\n                    message\n                }\n            }\n        }\n        ', 'variables': {'input': {'options': ['Green'], 'sku': 'FG-0000705', 'price': '2500.0', 'inventoryManagement': 'SHOPIFY', 'inventoryPolicy': 'DENY', 'taxable': False, 'productId': 'gid://shopify/Product/7526282395714'}}}, 'response': None, 'status': None}
2025-08-10 08:52:29,428 - sync_service - ERROR - GraphQL query error for store local: {'message': "Field 'productVariantCreate' doesn't exist on type 'Mutation'", 'locations': [{'line': 2, 'column': 3}], 'path': ['mutation productVariantCreate', 'productVariantCreate'], 'extensions': {'code': 'undefinedField', 'typeName': 'Mutation', 'fieldName': 'productVariantCreate'}}
GraphQL Errors: [
  {
    "message": "Field 'productVariantCreate' doesn't exist on type 'Mutation'",
    "locations": [
      {
        "line": 2,
        "column": 3
      }
    ],
    "path": [
      "mutation productVariantCreate",
      "productVariantCreate"
    ],
    "extensions": {
      "code": "undefinedField",
      "typeName": "Mutation",
      "fieldName": "productVariantCreate"
    }
  },
  {
    "message": "Variable $input is declared by productVariantCreate but not used",
    "locations": [
      {
        "line": 1,
        "column": 1
      }
    ],
    "path": [
      "mutation productVariantCreate"
    ],
    "extensions": {
      "code": "variableNotUsed",
      "variableName": "input"
    }
  }
]
GraphQL Data: null
GraphQL Extensions: null
2025-08-10 08:52:29,734 - sync_service - INFO - API log added to SAP: shopify - /admin/api/graphql_local - failure
2025-08-10 08:52:29,736 - sync_service - ERROR - Shopify full response for store local: {'msg': 'success', 'data': {'productCreate': {'product': {'id': 'gid://shopify/Product/7526282395714', 'title': 'Morsi Necklace', 'handle': 'morsi-necklace', 'variants': {'edges': [{'node': {'id': 'gid://shopify/ProductVariant/42380104171586', 'sku': None, 'inventoryItem': {'id': 'gid://shopify/InventoryItem/44480623149122'}, 'selectedOptions': [{'name': 'Title', 'value': 'Default Title'}]}}]}}, 'userErrors': []}}}
2025-08-10 08:52:30,017 - sync_service - INFO - API log added to SAP: shopify - /admin/api/graphql_local - success
2025-08-10 08:52:30,019 - sync_service - INFO - Successfully created product in store local
2025-08-10 08:52:30,845 - sync_service - INFO - Processing product group: ('Morsi Shoes', 'local') with 2 items for store local
2025-08-10 08:52:30,846 - sync_service - INFO - API Call: {'service': 'shopify', 'endpoint': 'graphql_local', 'request': {'query': '\n        query GetProductByHandle($handle: String!) {\n            productByHandle(handle: $handle) {\n                id\n                title\n                handle\n                description\n                variants(first: 50) {\n                    edges {\n                        node {\n                            id\n                            sku\n                            price\n                            inventoryItem {\n                                id\n                            }\n                            selectedOptions {\n                                name\n                                value\n                            }\n                        }\n                    }\n                }\n            }\n        }\n        ', 'variables': {'handle': 'morsi-shoes'}}, 'response': None, 'status': None}
2025-08-10 08:52:31,323 - sync_service - INFO - API Call: {'service': 'shopify', 'endpoint': 'graphql_local', 'request': None, 'response': {'productByHandle': None}, 'status': 'success'}
2025-08-10 08:52:31,324 - sync_service - INFO - Product Morsi Shoes doesn't exist in store local, creating new product
2025-08-10 08:52:31,588 - sync_service - INFO - API log added to SAP: shopify - /admin/api/graphql_local - success
2025-08-10 08:52:31,589 - sync_service - INFO - API Call: {'service': 'shopify', 'endpoint': 'graphql_local', 'request': {'query': '\n        mutation productCreate($input: ProductInput!) {\n            productCreate(input: $input) {\n                product {\n                    id\n                    title\n                    handle\n                    variants(first: 50) {\n                        edges {\n                            node {\n                                id\n                                sku\n                                inventoryItem {\n                                    id\n                                }\n                                selectedOptions {\n                                    name\n                                    value\n                                }\n                            }\n                        }\n                    }\n                }\n                userErrors {\n                    field\n                    message\n                }\n            }\n        }\n        ', 'variables': {'input': {'title': 'Morsi Shoes', 'status': 'DRAFT'}}}, 'response': None, 'status': None}
2025-08-10 08:52:32,402 - sync_service - INFO - API Call: {'service': 'shopify', 'endpoint': 'graphql_local', 'request': None, 'response': {'productCreate': {'product': {'id': 'gid://shopify/Product/7526282461250', 'title': 'Morsi Shoes', 'handle': 'morsi-shoes', 'variants': {'edges': [{'node': {'id': 'gid://shopify/ProductVariant/42380104663106', 'sku': None, 'inventoryItem': {'id': 'gid://shopify/InventoryItem/44480623640642'}, 'selectedOptions': [{'name': 'Title', 'value': 'Default Title'}]}}]}}, 'userErrors': []}}, 'status': 'success'}
2025-08-10 08:52:32,402 - sync_service - INFO - API Call: {'service': 'shopify', 'endpoint': 'graphql_local', 'request': {'query': '\n        mutation productUpdate($input: ProductInput!) {\n            productUpdate(input: $input) {\n                product {\n                    id\n                    title\n                    options {\n                        id\n                        name\n                        values\n                    }\n                }\n                userErrors {\n                    field\n                    message\n                }\n            }\n        }\n        ', 'variables': {'input': {'id': 'gid://shopify/Product/7526282461250', 'options': ['Color']}}}, 'response': None, 'status': None}
2025-08-10 08:52:39,619 - sync_service - ERROR - GraphQL query error for store local: {'message': 'Variable $input of type ProductInput! was provided invalid value for options (Field is not defined on ProductInput)', 'locations': [{'line': 1, 'column': 24}], 'extensions': {'value': {'id': 'gid://shopify/Product/7526282461250', 'options': ['Color']}, 'problems': [{'path': ['options'], 'explanation': 'Field is not defined on ProductInput'}]}}
GraphQL Errors: [
  {
    "message": "Variable $input of type ProductInput! was provided invalid value for options (Field is not defined on ProductInput)",
    "locations": [
      {
        "line": 1,
        "column": 24
      }
    ],
    "extensions": {
      "value": {
        "id": "gid://shopify/Product/7526282461250",
        "options": [
          "Color"
        ]
      },
      "problems": [
        {
          "path": [
            "options"
          ],
          "explanation": "Field is not defined on ProductInput"
        }
      ]
    }
  }
]
GraphQL Data: null
GraphQL Extensions: null
2025-08-10 08:52:39,891 - sync_service - INFO - API log added to SAP: shopify - /admin/api/graphql_local - failure
2025-08-10 08:52:39,892 - sync_service - INFO - API Call: {'service': 'shopify', 'endpoint': 'graphql_local', 'request': {'query': '\n        mutation productVariantCreate($input: ProductVariantInput!) {\n            productVariantCreate(input: $input) {\n                productVariant {\n                    id\n                    sku\n                    price\n                    inventoryItem {\n                        id\n                    }\n                    selectedOptions {\n                        name\n                        value\n                    }\n                }\n                userErrors {\n                    field\n                    message\n                }\n            }\n        }\n        ', 'variables': {'input': {'options': ['Green'], 'sku': 'FG-0000706', 'price': '1000.0', 'inventoryManagement': 'SHOPIFY', 'inventoryPolicy': 'DENY', 'taxable': False, 'productId': 'gid://shopify/Product/7526282461250'}}}, 'response': None, 'status': None}
2025-08-10 08:52:40,372 - sync_service - ERROR - GraphQL query error for store local: {'message': "Field 'productVariantCreate' doesn't exist on type 'Mutation'", 'locations': [{'line': 2, 'column': 3}], 'path': ['mutation productVariantCreate', 'productVariantCreate'], 'extensions': {'code': 'undefinedField', 'typeName': 'Mutation', 'fieldName': 'productVariantCreate'}}
GraphQL Errors: [
  {
    "message": "Field 'productVariantCreate' doesn't exist on type 'Mutation'",
    "locations": [
      {
        "line": 2,
        "column": 3
      }
    ],
    "path": [
      "mutation productVariantCreate",
      "productVariantCreate"
    ],
    "extensions": {
      "code": "undefinedField",
      "typeName": "Mutation",
      "fieldName": "productVariantCreate"
    }
  },
  {
    "message": "Variable $input is declared by productVariantCreate but not used",
    "locations": [
      {
        "line": 1,
        "column": 1
      }
    ],
    "path": [
      "mutation productVariantCreate"
    ],
    "extensions": {
      "code": "variableNotUsed",
      "variableName": "input"
    }
  }
]
GraphQL Data: null
GraphQL Extensions: null
2025-08-10 08:52:40,669 - sync_service - INFO - API log added to SAP: shopify - /admin/api/graphql_local - failure
2025-08-10 08:52:40,670 - sync_service - INFO - API Call: {'service': 'shopify', 'endpoint': 'graphql_local', 'request': {'query': '\n        mutation productVariantCreate($input: ProductVariantInput!) {\n            productVariantCreate(input: $input) {\n                productVariant {\n                    id\n                    sku\n                    price\n                    inventoryItem {\n                        id\n                    }\n                    selectedOptions {\n                        name\n                        value\n                    }\n                }\n                userErrors {\n                    field\n                    message\n                }\n            }\n        }\n        ', 'variables': {'input': {'options': ['Beige'], 'sku': 'FG-0000707', 'price': '1000.0', 'inventoryManagement': 'SHOPIFY', 'inventoryPolicy': 'DENY', 'taxable': False, 'productId': 'gid://shopify/Product/7526282461250'}}}, 'response': None, 'status': None}
2025-08-10 08:52:41,134 - sync_service - ERROR - GraphQL query error for store local: {'message': "Field 'productVariantCreate' doesn't exist on type 'Mutation'", 'locations': [{'line': 2, 'column': 3}], 'path': ['mutation productVariantCreate', 'productVariantCreate'], 'extensions': {'code': 'undefinedField', 'typeName': 'Mutation', 'fieldName': 'productVariantCreate'}}
GraphQL Errors: [
  {
    "message": "Field 'productVariantCreate' doesn't exist on type 'Mutation'",
    "locations": [
      {
        "line": 2,
        "column": 3
      }
    ],
    "path": [
      "mutation productVariantCreate",
      "productVariantCreate"
    ],
    "extensions": {
      "code": "undefinedField",
      "typeName": "Mutation",
      "fieldName": "productVariantCreate"
    }
  },
  {
    "message": "Variable $input is declared by productVariantCreate but not used",
    "locations": [
      {
        "line": 1,
        "column": 1
      }
    ],
    "path": [
      "mutation productVariantCreate"
    ],
    "extensions": {
      "code": "variableNotUsed",
      "variableName": "input"
    }
  }
]
GraphQL Data: null
GraphQL Extensions: null
2025-08-10 08:52:41,403 - sync_service - INFO - API log added to SAP: shopify - /admin/api/graphql_local - failure
2025-08-10 08:52:41,405 - sync_service - ERROR - Shopify full response for store local: {'msg': 'success', 'data': {'productCreate': {'product': {'id': 'gid://shopify/Product/7526282461250', 'title': 'Morsi Shoes', 'handle': 'morsi-shoes', 'variants': {'edges': [{'node': {'id': 'gid://shopify/ProductVariant/42380104663106', 'sku': None, 'inventoryItem': {'id': 'gid://shopify/InventoryItem/44480623640642'}, 'selectedOptions': [{'name': 'Title', 'value': 'Default Title'}]}}]}}, 'userErrors': []}}}
2025-08-10 08:52:41,674 - sync_service - INFO - API log added to SAP: shopify - /admin/api/graphql_local - success
2025-08-10 08:52:41,675 - sync_service - INFO - Successfully created product in store local
2025-08-10 08:52:42,896 - sync_service - INFO - Sync Event: {'sync_type': 'multi_store_new_items_sap_to_shopify', 'items_processed': 8, 'success_count': 8, 'error_count': 0, 'details': None}
2025-08-10 08:52:42,897 - sync_service - INFO - Multi-store new items sync completed: 8 processed, 8 successful, 0 errors
2025-08-10 08:52:42,899 - sync_service - INFO - Starting stock change sync...
2025-08-10 08:52:42,901 - sync_service - INFO - Starting stock change sync using MASHURA_StockChangeB1SLQuery view
2025-08-10 08:52:42,903 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'view.svc/MASHURA_StockChangeB1SLQuery', 'request': {'method': 'GET', 'url': 'https://10.0.0.100:50000/b1s/v1/view.svc/MASHURA_StockChangeB1SLQuery', 'data': None, 'params': {'$top': 50}}, 'response': None, 'status': None}
2025-08-10 08:52:43,177 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'view.svc/MASHURA_StockChangeB1SLQuery', 'request': None, 'response': {'odata.metadata': 'https://10.0.0.100:50000/b1s/v1/view.svc/$metadata#MASHURA_StockChangeB1SLQuery', 'value': []}, 'status': 'success'}
2025-08-10 08:52:43,179 - sync_service - INFO - No stock changes found in the view.
2025-08-10 08:52:43,180 - sync_service - INFO - Starting item changes sync...
2025-08-10 08:52:43,181 - sync_service - INFO - Starting item changes sync from SAP to Shopify
2025-08-10 08:52:43,183 - sync_service - INFO - Processing item changes for store: local
2025-08-10 08:52:43,184 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': "view.svc/MASHURA_ItemChangeB1SLQuery?$filter=Shopify_Store eq 'local'", 'request': {'method': 'GET', 'url': "https://10.0.0.100:50000/b1s/v1/view.svc/MASHURA_ItemChangeB1SLQuery?$filter=Shopify_Store eq 'local'", 'data': None, 'params': None}, 'response': None, 'status': None}
2025-08-10 08:52:43,460 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': "view.svc/MASHURA_ItemChangeB1SLQuery?$filter=Shopify_Store eq 'local'", 'request': None, 'response': {'odata.metadata': 'https://10.0.0.100:50000/b1s/v1/view.svc/$metadata#MASHURA_ItemChangeB1SLQuery', 'value': []}, 'status': 'success'}
2025-08-10 08:52:43,462 - sync_service - INFO - Found 0 item changes for store local
2025-08-10 08:52:43,463 - sync_service - INFO - No item changes found for store local
2025-08-10 08:52:43,464 - sync_service - INFO - Sync Event: {'sync_type': 'item_changes_sap_to_shopify', 'items_processed': 0, 'success_count': 0, 'error_count': 0, 'details': None}
2025-08-10 08:52:43,465 - sync_service - INFO - Item changes sync completed: 0 processed, 0 successful, 0 errors
2025-08-10 08:52:43,467 - sync_service - INFO - Starting price changes sync...
2025-08-10 08:52:43,469 - sync_service - INFO - Starting price changes sync from SAP to Shopify
2025-08-10 08:52:43,470 - sync_service - INFO - Processing price changes for store: local
2025-08-10 08:52:43,472 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': "view.svc/MASHURA_PriceChangeB1SLQuery?$filter=Shopify_Store eq 'local'", 'request': {'method': 'GET', 'url': "https://10.0.0.100:50000/b1s/v1/view.svc/MASHURA_PriceChangeB1SLQuery?$filter=Shopify_Store eq 'local'", 'data': None, 'params': None}, 'response': None, 'status': None}
2025-08-10 08:52:44,175 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': "view.svc/MASHURA_PriceChangeB1SLQuery?$filter=Shopify_Store eq 'local'", 'request': None, 'response': {'odata.metadata': 'https://10.0.0.100:50000/b1s/v1/view.svc/$metadata#MASHURA_PriceChangeB1SLQuery', 'value': []}, 'status': 'success'}
2025-08-10 08:52:44,177 - sync_service - INFO - Found 0 price changes for store local
2025-08-10 08:52:44,178 - sync_service - INFO - No price changes found for store local
2025-08-10 08:52:44,178 - sync_service - INFO - Sync Event: {'sync_type': 'price_changes_sap_to_shopify', 'items_processed': 0, 'success_count': 0, 'error_count': 0, 'details': None}
2025-08-10 08:52:44,179 - sync_service - INFO - Price changes sync completed: 0 processed, 0 successful, 0 errors
2025-08-10 08:53:34,785 - sync_service - INFO - Initialized Shopify client for store: Local Store (local)
2025-08-10 08:53:34,809 - sync_service - INFO - Starting all syncs...
2025-08-10 08:53:34,810 - sync_service - INFO - Starting new items sync...
2025-08-10 08:53:34,811 - sync_service - INFO - Starting multi-store new items sync from SAP to Shopify
2025-08-10 08:53:34,811 - sync_service - INFO - Fetching new items for store: local
2025-08-10 08:53:34,812 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'login', 'request': {'company': 'JudeBenHalim_Test', 'user': 'manager'}, 'response': None, 'status': None}
2025-08-10 08:53:35,571 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'login', 'request': None, 'response': {'status': 'success'}, 'status': 'success'}
2025-08-10 08:53:35,572 - sync_service - INFO - SAP login successful
2025-08-10 08:53:35,573 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': "view.svc/MASHURA_New_ItemsB1SLQuery?$filter=Shopify_Store eq 'local'&$orderby=MainProduct", 'request': {'method': 'GET', 'url': "https://10.0.0.100:50000/b1s/v1/view.svc/MASHURA_New_ItemsB1SLQuery?$filter=Shopify_Store eq 'local'&$orderby=MainProduct", 'data': None, 'params': None}, 'response': None, 'status': None}
2025-08-10 08:53:36,279 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': "view.svc/MASHURA_New_ItemsB1SLQuery?$filter=Shopify_Store eq 'local'&$orderby=MainProduct", 'request': None, 'response': {'odata.metadata': 'https://10.0.0.100:50000/b1s/v1/view.svc/$metadata#MASHURA_New_ItemsB1SLQuery', 'value': [{'itemcode': 'FG-0000704', 'ItemName': 'Morsi Bracelet', 'MainProduct': None, 'Color': None, 'Price': 3200.0, 'Shopify_Store': 'local', 'Shopify_ProductCode': '7526282166338', 'Status': 'existing', 'Barcode': '645464644', 'id__': 1}, {'itemcode': 'FG-0000708', 'ItemName': 'Morsi Socks', 'MainProduct': None, 'Color': None, 'Price': 200.0, 'Shopify_Store': 'local', 'Shopify_ProductCode': '7526282199106', 'Status': 'existing', 'Barcode': None, 'id__': 2}, {'itemcode': 'FG-0000711', 'ItemName': 'Morsi Keyboard', 'MainProduct': None, 'Color': None, 'Price': 1000.0, 'Shopify_Store': 'local', 'Shopify_ProductCode': '7526282231874', 'Status': 'existing', 'Barcode': None, 'id__': 3}, {'itemcode': 'FG-0000712', 'ItemName': 'AA-Iron Man Necklace', 'MainProduct': None, 'Color': None, 'Price': 1000.0, 'Shopify_Store': 'local', 'Shopify_ProductCode': '7526282264642', 'Status': 'existing', 'Barcode': '203090', 'id__': 4}, {'itemcode': 'FG-0000713', 'ItemName': 'AA-Ring Red', 'MainProduct': 'Iron Man Necklace', 'Color': 'Red', 'Price': 2000.0, 'Shopify_Store': 'local', 'Shopify_ProductCode': '7526282330178', 'Status': 'existing', 'Barcode': '203090', 'id__': 5}, {'itemcode': 'FG-0000714', 'ItemName': 'AA-Ring Blue', 'MainProduct': 'Iron Man Necklace', 'Color': 'Blue', 'Price': 3000.0, 'Shopify_Store': 'local', 'Shopify_ProductCode': '7526282330178', 'Status': 'existing', 'Barcode': '203090', 'id__': 6}, {'itemcode': 'FG-0000709', 'ItemName': 'Morsi-Laptop-Black', 'MainProduct': 'Morsi Laptop', 'Color': 'Black', 'Price': 1000.0, 'Shopify_Store': 'local', 'Shopify_ProductCode': '7526282362946', 'Status': 'existing', 'Barcode': None, 'id__': 7}, {'itemcode': 'FG-0000710', 'ItemName': 'Morsi-Laptop-Grey', 'MainProduct': 'Morsi Laptop', 'Color': 'Grey', 'Price': 1000.0, 'Shopify_Store': 'local', 'Shopify_ProductCode': '7526282362946', 'Status': 'existing', 'Barcode': None, 'id__': 8}, {'itemcode': 'FG-0000702', 'ItemName': 'Morsi-Necklace-Black', 'MainProduct': 'Morsi Necklace', 'Color': 'Black', 'Price': 2500.0, 'Shopify_Store': 'local', 'Shopify_ProductCode': '7526282395714', 'Status': 'existing', 'Barcode': '2123243245', 'id__': 9}, {'itemcode': 'FG-0000703', 'ItemName': 'Morsi-Necklace-White', 'MainProduct': 'Morsi Necklace', 'Color': 'White', 'Price': 2500.0, 'Shopify_Store': 'local', 'Shopify_ProductCode': '7526282395714', 'Status': 'existing', 'Barcode': '242342342', 'id__': 10}, {'itemcode': 'FG-0000705', 'ItemName': 'Morsi-Necklace-Green', 'MainProduct': 'Morsi Necklace', 'Color': 'Green', 'Price': 2500.0, 'Shopify_Store': 'local', 'Shopify_ProductCode': '7526282395714', 'Status': 'existing', 'Barcode': None, 'id__': 11}, {'itemcode': 'FG-0000706', 'ItemName': 'Morsi-Shoes-Green', 'MainProduct': 'Morsi Shoes', 'Color': 'Green', 'Price': 1000.0, 'Shopify_Store': 'local', 'Shopify_ProductCode': '7526282461250', 'Status': 'existing', 'Barcode': None, 'id__': 12}, {'itemcode': 'FG-0000707', 'ItemName': 'Morsi-Shoes-Beige', 'MainProduct': 'Morsi Shoes', 'Color': 'Beige', 'Price': 1000.0, 'Shopify_Store': 'local', 'Shopify_ProductCode': '7526282461250', 'Status': 'existing', 'Barcode': None, 'id__': 13}]}, 'status': 'success'}
2025-08-10 08:53:36,283 - sync_service - INFO - Product group: ('FG-0000704', 'local') has 1 items
2025-08-10 08:53:36,285 - sync_service - INFO - Product group: ('FG-0000708', 'local') has 1 items
2025-08-10 08:53:36,286 - sync_service - INFO - Product group: ('FG-0000711', 'local') has 1 items
2025-08-10 08:53:36,288 - sync_service - INFO - Product group: ('FG-0000712', 'local') has 1 items
2025-08-10 08:53:36,290 - sync_service - INFO - Product group: ('Iron Man Necklace', 'local') has 2 items
2025-08-10 08:53:36,293 - sync_service - INFO - Product group: ('Morsi Laptop', 'local') has 2 items
2025-08-10 08:53:36,294 - sync_service - INFO - Product group: ('Morsi Necklace', 'local') has 3 items
2025-08-10 08:53:36,296 - sync_service - INFO - Product group: ('Morsi Shoes', 'local') has 2 items
2025-08-10 08:53:36,297 - sync_service - INFO - Grouped 13 items into 8 product groups for store local
2025-08-10 08:53:36,298 - sync_service - INFO - Processing product group: ('FG-0000704', 'local') with 1 items for store local
2025-08-10 08:53:36,300 - sync_service - INFO - Found existing Shopify product ID: 7526282166338 for None
2025-08-10 08:53:36,301 - sync_service - INFO - Product None already exists in store local, adding variants
2025-08-10 08:53:36,303 - sync_service - INFO - API Call: {'service': 'shopify', 'endpoint': 'graphql_local', 'request': {'query': '\n        query GetProduct($id: ID!) {\n            product(id: $id) {\n                id\n                title\n                handle\n                description\n                variants(first: 50) {\n                    edges {\n                        node {\n                            id\n                            sku\n                            price\n                            inventoryItem {\n                                id\n                            }\n                            selectedOptions {\n                                name\n                                value\n                            }\n                        }\n                    }\n                }\n            }\n        }\n        ', 'variables': {'id': 'gid://shopify/Product/7526282166338'}}, 'response': None, 'status': None}
2025-08-10 08:53:46,317 - sync_service - ERROR - GraphQL query error for store local: 
2025-08-10 08:53:47,574 - sync_service - INFO - SAP logging client login successful
2025-08-10 08:53:48,669 - sync_service - INFO - API log added to SAP: shopify - /admin/api/graphql_local - failure
2025-08-10 08:53:48,671 - sync_service - INFO - API Call: {'service': 'shopify', 'endpoint': 'graphql_local', 'request': {'query': '\n        query GetProduct($id: ID!) {\n            product(id: $id) {\n                id\n                title\n                handle\n                description\n                variants(first: 50) {\n                    edges {\n                        node {\n                            id\n                            sku\n                            price\n                            inventoryItem {\n                                id\n                            }\n                            selectedOptions {\n                                name\n                                value\n                            }\n                        }\n                    }\n                }\n            }\n        }\n        ', 'variables': {'id': 'gid://shopify/Product/7526282166338'}}, 'response': None, 'status': None}
2025-08-10 08:53:49,161 - sync_service - INFO - API Call: {'service': 'shopify', 'endpoint': 'graphql_local', 'request': None, 'response': {'product': {'id': 'gid://shopify/Product/7526282166338', 'title': 'Morsi Bracelet', 'handle': 'morsi-bracelet', 'description': '', 'variants': {'edges': [{'node': {'id': 'gid://shopify/ProductVariant/42380103942210', 'sku': None, 'price': '0.00', 'inventoryItem': {'id': 'gid://shopify/InventoryItem/44480622919746'}, 'selectedOptions': [{'name': 'Title', 'value': 'Default Title'}]}}]}}}, 'status': 'success'}
2025-08-10 08:53:49,856 - sync_service - INFO - API log added to SAP: shopify - /admin/api/graphql_local - success
2025-08-10 08:53:49,857 - sync_service - INFO - API Call: {'service': 'shopify', 'endpoint': 'graphql_local', 'request': {'query': '\n        mutation productVariantCreate($input: ProductVariantInput!) {\n            productVariantCreate(input: $input) {\n                productVariant {\n                    id\n                    sku\n                    price\n                    inventoryItem {\n                        id\n                    }\n                    selectedOptions {\n                        name\n                        value\n                    }\n                }\n                userErrors {\n                    field\n                    message\n                }\n            }\n        }\n        ', 'variables': {'input': {'sku': 'FG-0000704', 'price': '3200.0', 'inventoryPolicy': 'DENY', 'inventoryManagement': 'SHOPIFY', 'weight': 0.0, 'weightUnit': 'KILOGRAMS', 'taxable': False, 'barcode': '645464644', 'productId': 'gid://shopify/Product/7526282166338'}}}, 'response': None, 'status': None}
2025-08-10 08:53:50,345 - sync_service - ERROR - GraphQL query error for store local: {'message': "Field 'productVariantCreate' doesn't exist on type 'Mutation'", 'locations': [{'line': 2, 'column': 3}], 'path': ['mutation productVariantCreate', 'productVariantCreate'], 'extensions': {'code': 'undefinedField', 'typeName': 'Mutation', 'fieldName': 'productVariantCreate'}}
GraphQL Errors: [
  {
    "message": "Field 'productVariantCreate' doesn't exist on type 'Mutation'",
    "locations": [
      {
        "line": 2,
        "column": 3
      }
    ],
    "path": [
      "mutation productVariantCreate",
      "productVariantCreate"
    ],
    "extensions": {
      "code": "undefinedField",
      "typeName": "Mutation",
      "fieldName": "productVariantCreate"
    }
  },
  {
    "message": "Variable $input is declared by productVariantCreate but not used",
    "locations": [
      {
        "line": 1,
        "column": 1
      }
    ],
    "path": [
      "mutation productVariantCreate"
    ],
    "extensions": {
      "code": "variableNotUsed",
      "variableName": "input"
    }
  }
]
GraphQL Data: null
GraphQL Extensions: null
2025-08-10 08:53:51,028 - sync_service - INFO - API log added to SAP: shopify - /admin/api/graphql_local - failure
2025-08-10 08:53:51,030 - sync_service - ERROR - Detailed variant creation error for FG-0000704: GraphQL query error for store local: {'message': "Field 'productVariantCreate' doesn't exist on type 'Mutation'", 'locations': [{'line': 2, 'column': 3}], 'path': ['mutation productVariantCreate', 'productVariantCreate'], 'extensions': {'code': 'undefinedField', 'typeName': 'Mutation', 'fieldName': 'productVariantCreate'}}
GraphQL Errors: [
  {
    "message": "Field 'productVariantCreate' doesn't exist on type 'Mutation'",
    "locations": [
      {
        "line": 2,
        "column": 3
      }
    ],
    "path": [
      "mutation productVariantCreate",
      "productVariantCreate"
    ],
    "extensions": {
      "code": "undefinedField",
      "typeName": "Mutation",
      "fieldName": "productVariantCreate"
    }
  },
  {
    "message": "Variable $input is declared by productVariantCreate but not used",
    "locations": [
      {
        "line": 1,
        "column": 1
      }
    ],
    "path": [
      "mutation productVariantCreate"
    ],
    "extensions": {
      "code": "variableNotUsed",
      "variableName": "input"
    }
  }
]
GraphQL Data: null
GraphQL Extensions: null
2025-08-10 08:53:51,691 - sync_service - INFO - API log added to SAP: shopify - /admin/api/graphql_local - failure
2025-08-10 08:53:51,692 - sync_service - ERROR - Failed to add variant FG-0000704: GraphQL query error for store local: {'message': "Field 'productVariantCreate' doesn't exist on type 'Mutation'", 'locations': [{'line': 2, 'column': 3}], 'path': ['mutation productVariantCreate', 'productVariantCreate'], 'extensions': {'code': 'undefinedField', 'typeName': 'Mutation', 'fieldName': 'productVariantCreate'}}
GraphQL Errors: [
  {
    "message": "Field 'productVariantCreate' doesn't exist on type 'Mutation'",
    "locations": [
      {
        "line": 2,
        "column": 3
      }
    ],
    "path": [
      "mutation productVariantCreate",
      "productVariantCreate"
    ],
    "extensions": {
      "code": "undefinedField",
      "typeName": "Mutation",
      "fieldName": "productVariantCreate"
    }
  },
  {
    "message": "Variable $input is declared by productVariantCreate but not used",
    "locations": [
      {
        "line": 1,
        "column": 1
      }
    ],
    "path": [
      "mutation productVariantCreate"
    ],
    "extensions": {
      "code": "variableNotUsed",
      "variableName": "input"
    }
  }
]
GraphQL Data: null
GraphQL Extensions: null
2025-08-10 08:53:52,476 - sync_service - INFO - Processing product group: ('FG-0000708', 'local') with 1 items for store local
2025-08-10 08:53:52,478 - sync_service - INFO - Found existing Shopify product ID: 7526282199106 for None
2025-08-10 08:53:52,480 - sync_service - INFO - Product None already exists in store local, adding variants
2025-08-10 08:53:52,482 - sync_service - INFO - API Call: {'service': 'shopify', 'endpoint': 'graphql_local', 'request': {'query': '\n        query GetProduct($id: ID!) {\n            product(id: $id) {\n                id\n                title\n                handle\n                description\n                variants(first: 50) {\n                    edges {\n                        node {\n                            id\n                            sku\n                            price\n                            inventoryItem {\n                                id\n                            }\n                            selectedOptions {\n                                name\n                                value\n                            }\n                        }\n                    }\n                }\n            }\n        }\n        ', 'variables': {'id': 'gid://shopify/Product/7526282199106'}}, 'response': None, 'status': None}
2025-08-10 08:54:00,255 - sync_service - INFO - API Call: {'service': 'shopify', 'endpoint': 'graphql_local', 'request': None, 'response': {'product': {'id': 'gid://shopify/Product/7526282199106', 'title': 'Morsi Socks', 'handle': 'morsi-socks', 'description': '', 'variants': {'edges': [{'node': {'id': 'gid://shopify/ProductVariant/42380103974978', 'sku': None, 'price': '0.00', 'inventoryItem': {'id': 'gid://shopify/InventoryItem/44480622952514'}, 'selectedOptions': [{'name': 'Title', 'value': 'Default Title'}]}}]}}}, 'status': 'success'}
2025-08-10 08:54:00,257 - sync_service - INFO - API Call: {'service': 'shopify', 'endpoint': 'graphql_local', 'request': {'query': '\n        query GetProduct($id: ID!) {\n            product(id: $id) {\n                id\n                title\n                handle\n                description\n                variants(first: 50) {\n                    edges {\n                        node {\n                            id\n                            sku\n                            price\n                            inventoryItem {\n                                id\n                            }\n                            selectedOptions {\n                                name\n                                value\n                            }\n                        }\n                    }\n                }\n            }\n        }\n        ', 'variables': {'id': 'gid://shopify/Product/7526282199106'}}, 'response': None, 'status': None}
2025-08-10 08:54:00,740 - sync_service - INFO - API Call: {'service': 'shopify', 'endpoint': 'graphql_local', 'request': None, 'response': {'product': {'id': 'gid://shopify/Product/7526282199106', 'title': 'Morsi Socks', 'handle': 'morsi-socks', 'description': '', 'variants': {'edges': [{'node': {'id': 'gid://shopify/ProductVariant/42380103974978', 'sku': None, 'price': '0.00', 'inventoryItem': {'id': 'gid://shopify/InventoryItem/44480622952514'}, 'selectedOptions': [{'name': 'Title', 'value': 'Default Title'}]}}]}}}, 'status': 'success'}
2025-08-10 08:54:01,419 - sync_service - INFO - API log added to SAP: shopify - /admin/api/graphql_local - success
2025-08-10 08:54:01,421 - sync_service - INFO - API Call: {'service': 'shopify', 'endpoint': 'graphql_local', 'request': {'query': '\n        mutation productVariantCreate($input: ProductVariantInput!) {\n            productVariantCreate(input: $input) {\n                productVariant {\n                    id\n                    sku\n                    price\n                    inventoryItem {\n                        id\n                    }\n                    selectedOptions {\n                        name\n                        value\n                    }\n                }\n                userErrors {\n                    field\n                    message\n                }\n            }\n        }\n        ', 'variables': {'input': {'sku': 'FG-0000708', 'price': '200.0', 'inventoryPolicy': 'DENY', 'inventoryManagement': 'SHOPIFY', 'weight': 0.0, 'weightUnit': 'KILOGRAMS', 'taxable': False, 'productId': 'gid://shopify/Product/7526282199106'}}}, 'response': None, 'status': None}
2025-08-10 08:54:01,943 - sync_service - ERROR - GraphQL query error for store local: {'message': "Field 'productVariantCreate' doesn't exist on type 'Mutation'", 'locations': [{'line': 2, 'column': 3}], 'path': ['mutation productVariantCreate', 'productVariantCreate'], 'extensions': {'code': 'undefinedField', 'typeName': 'Mutation', 'fieldName': 'productVariantCreate'}}
GraphQL Errors: [
  {
    "message": "Field 'productVariantCreate' doesn't exist on type 'Mutation'",
    "locations": [
      {
        "line": 2,
        "column": 3
      }
    ],
    "path": [
      "mutation productVariantCreate",
      "productVariantCreate"
    ],
    "extensions": {
      "code": "undefinedField",
      "typeName": "Mutation",
      "fieldName": "productVariantCreate"
    }
  },
  {
    "message": "Variable $input is declared by productVariantCreate but not used",
    "locations": [
      {
        "line": 1,
        "column": 1
      }
    ],
    "path": [
      "mutation productVariantCreate"
    ],
    "extensions": {
      "code": "variableNotUsed",
      "variableName": "input"
    }
  }
]
GraphQL Data: null
GraphQL Extensions: null
2025-08-10 08:54:02,227 - sync_service - INFO - API log added to SAP: shopify - /admin/api/graphql_local - failure
2025-08-10 08:54:02,229 - sync_service - ERROR - Detailed variant creation error for FG-0000708: GraphQL query error for store local: {'message': "Field 'productVariantCreate' doesn't exist on type 'Mutation'", 'locations': [{'line': 2, 'column': 3}], 'path': ['mutation productVariantCreate', 'productVariantCreate'], 'extensions': {'code': 'undefinedField', 'typeName': 'Mutation', 'fieldName': 'productVariantCreate'}}
GraphQL Errors: [
  {
    "message": "Field 'productVariantCreate' doesn't exist on type 'Mutation'",
    "locations": [
      {
        "line": 2,
        "column": 3
      }
    ],
    "path": [
      "mutation productVariantCreate",
      "productVariantCreate"
    ],
    "extensions": {
      "code": "undefinedField",
      "typeName": "Mutation",
      "fieldName": "productVariantCreate"
    }
  },
  {
    "message": "Variable $input is declared by productVariantCreate but not used",
    "locations": [
      {
        "line": 1,
        "column": 1
      }
    ],
    "path": [
      "mutation productVariantCreate"
    ],
    "extensions": {
      "code": "variableNotUsed",
      "variableName": "input"
    }
  }
]
GraphQL Data: null
GraphQL Extensions: null
2025-08-10 08:54:02,511 - sync_service - INFO - API log added to SAP: shopify - /admin/api/graphql_local - failure
2025-08-10 08:54:02,512 - sync_service - ERROR - Failed to add variant FG-0000708: GraphQL query error for store local: {'message': "Field 'productVariantCreate' doesn't exist on type 'Mutation'", 'locations': [{'line': 2, 'column': 3}], 'path': ['mutation productVariantCreate', 'productVariantCreate'], 'extensions': {'code': 'undefinedField', 'typeName': 'Mutation', 'fieldName': 'productVariantCreate'}}
GraphQL Errors: [
  {
    "message": "Field 'productVariantCreate' doesn't exist on type 'Mutation'",
    "locations": [
      {
        "line": 2,
        "column": 3
      }
    ],
    "path": [
      "mutation productVariantCreate",
      "productVariantCreate"
    ],
    "extensions": {
      "code": "undefinedField",
      "typeName": "Mutation",
      "fieldName": "productVariantCreate"
    }
  },
  {
    "message": "Variable $input is declared by productVariantCreate but not used",
    "locations": [
      {
        "line": 1,
        "column": 1
      }
    ],
    "path": [
      "mutation productVariantCreate"
    ],
    "extensions": {
      "code": "variableNotUsed",
      "variableName": "input"
    }
  }
]
GraphQL Data: null
GraphQL Extensions: null
2025-08-10 08:54:03,727 - sync_service - INFO - Processing product group: ('FG-0000711', 'local') with 1 items for store local
2025-08-10 08:54:03,728 - sync_service - INFO - Found existing Shopify product ID: 7526282231874 for None
2025-08-10 08:54:03,729 - sync_service - INFO - Product None already exists in store local, adding variants
2025-08-10 08:54:03,730 - sync_service - INFO - API Call: {'service': 'shopify', 'endpoint': 'graphql_local', 'request': {'query': '\n        query GetProduct($id: ID!) {\n            product(id: $id) {\n                id\n                title\n                handle\n                description\n                variants(first: 50) {\n                    edges {\n                        node {\n                            id\n                            sku\n                            price\n                            inventoryItem {\n                                id\n                            }\n                            selectedOptions {\n                                name\n                                value\n                            }\n                        }\n                    }\n                }\n            }\n        }\n        ', 'variables': {'id': 'gid://shopify/Product/7526282231874'}}, 'response': None, 'status': None}
2025-08-10 08:54:04,212 - sync_service - INFO - API Call: {'service': 'shopify', 'endpoint': 'graphql_local', 'request': None, 'response': {'product': {'id': 'gid://shopify/Product/7526282231874', 'title': 'Morsi Keyboard', 'handle': 'morsi-keyboard', 'description': '', 'variants': {'edges': [{'node': {'id': 'gid://shopify/ProductVariant/42380104007746', 'sku': None, 'price': '0.00', 'inventoryItem': {'id': 'gid://shopify/InventoryItem/44480622985282'}, 'selectedOptions': [{'name': 'Title', 'value': 'Default Title'}]}}]}}}, 'status': 'success'}
2025-08-10 08:54:04,214 - sync_service - INFO - API Call: {'service': 'shopify', 'endpoint': 'graphql_local', 'request': {'query': '\n        query GetProduct($id: ID!) {\n            product(id: $id) {\n                id\n                title\n                handle\n                description\n                variants(first: 50) {\n                    edges {\n                        node {\n                            id\n                            sku\n                            price\n                            inventoryItem {\n                                id\n                            }\n                            selectedOptions {\n                                name\n                                value\n                            }\n                        }\n                    }\n                }\n            }\n        }\n        ', 'variables': {'id': 'gid://shopify/Product/7526282231874'}}, 'response': None, 'status': None}
2025-08-10 08:54:04,706 - sync_service - INFO - API Call: {'service': 'shopify', 'endpoint': 'graphql_local', 'request': None, 'response': {'product': {'id': 'gid://shopify/Product/7526282231874', 'title': 'Morsi Keyboard', 'handle': 'morsi-keyboard', 'description': '', 'variants': {'edges': [{'node': {'id': 'gid://shopify/ProductVariant/42380104007746', 'sku': None, 'price': '0.00', 'inventoryItem': {'id': 'gid://shopify/InventoryItem/44480622985282'}, 'selectedOptions': [{'name': 'Title', 'value': 'Default Title'}]}}]}}}, 'status': 'success'}
2025-08-10 08:54:04,984 - sync_service - INFO - API log added to SAP: shopify - /admin/api/graphql_local - success
2025-08-10 08:54:04,986 - sync_service - INFO - API Call: {'service': 'shopify', 'endpoint': 'graphql_local', 'request': {'query': '\n        mutation productVariantCreate($input: ProductVariantInput!) {\n            productVariantCreate(input: $input) {\n                productVariant {\n                    id\n                    sku\n                    price\n                    inventoryItem {\n                        id\n                    }\n                    selectedOptions {\n                        name\n                        value\n                    }\n                }\n                userErrors {\n                    field\n                    message\n                }\n            }\n        }\n        ', 'variables': {'input': {'sku': 'FG-0000711', 'price': '1000.0', 'inventoryPolicy': 'DENY', 'inventoryManagement': 'SHOPIFY', 'weight': 0.0, 'weightUnit': 'KILOGRAMS', 'taxable': False, 'productId': 'gid://shopify/Product/7526282231874'}}}, 'response': None, 'status': None}
2025-08-10 08:54:11,857 - sync_service - ERROR - GraphQL query error for store local: {'message': "Field 'productVariantCreate' doesn't exist on type 'Mutation'", 'locations': [{'line': 2, 'column': 3}], 'path': ['mutation productVariantCreate', 'productVariantCreate'], 'extensions': {'code': 'undefinedField', 'typeName': 'Mutation', 'fieldName': 'productVariantCreate'}}
GraphQL Errors: [
  {
    "message": "Field 'productVariantCreate' doesn't exist on type 'Mutation'",
    "locations": [
      {
        "line": 2,
        "column": 3
      }
    ],
    "path": [
      "mutation productVariantCreate",
      "productVariantCreate"
    ],
    "extensions": {
      "code": "undefinedField",
      "typeName": "Mutation",
      "fieldName": "productVariantCreate"
    }
  },
  {
    "message": "Variable $input is declared by productVariantCreate but not used",
    "locations": [
      {
        "line": 1,
        "column": 1
      }
    ],
    "path": [
      "mutation productVariantCreate"
    ],
    "extensions": {
      "code": "variableNotUsed",
      "variableName": "input"
    }
  }
]
GraphQL Data: null
GraphQL Extensions: null
2025-08-10 08:54:12,139 - sync_service - INFO - API log added to SAP: shopify - /admin/api/graphql_local - failure
2025-08-10 08:54:12,141 - sync_service - ERROR - Detailed variant creation error for FG-0000711: GraphQL query error for store local: {'message': "Field 'productVariantCreate' doesn't exist on type 'Mutation'", 'locations': [{'line': 2, 'column': 3}], 'path': ['mutation productVariantCreate', 'productVariantCreate'], 'extensions': {'code': 'undefinedField', 'typeName': 'Mutation', 'fieldName': 'productVariantCreate'}}
GraphQL Errors: [
  {
    "message": "Field 'productVariantCreate' doesn't exist on type 'Mutation'",
    "locations": [
      {
        "line": 2,
        "column": 3
      }
    ],
    "path": [
      "mutation productVariantCreate",
      "productVariantCreate"
    ],
    "extensions": {
      "code": "undefinedField",
      "typeName": "Mutation",
      "fieldName": "productVariantCreate"
    }
  },
  {
    "message": "Variable $input is declared by productVariantCreate but not used",
    "locations": [
      {
        "line": 1,
        "column": 1
      }
    ],
    "path": [
      "mutation productVariantCreate"
    ],
    "extensions": {
      "code": "variableNotUsed",
      "variableName": "input"
    }
  }
]
GraphQL Data: null
GraphQL Extensions: null
2025-08-10 08:54:12,416 - sync_service - INFO - API log added to SAP: shopify - /admin/api/graphql_local - failure
2025-08-10 08:54:12,418 - sync_service - ERROR - Failed to add variant FG-0000711: GraphQL query error for store local: {'message': "Field 'productVariantCreate' doesn't exist on type 'Mutation'", 'locations': [{'line': 2, 'column': 3}], 'path': ['mutation productVariantCreate', 'productVariantCreate'], 'extensions': {'code': 'undefinedField', 'typeName': 'Mutation', 'fieldName': 'productVariantCreate'}}
GraphQL Errors: [
  {
    "message": "Field 'productVariantCreate' doesn't exist on type 'Mutation'",
    "locations": [
      {
        "line": 2,
        "column": 3
      }
    ],
    "path": [
      "mutation productVariantCreate",
      "productVariantCreate"
    ],
    "extensions": {
      "code": "undefinedField",
      "typeName": "Mutation",
      "fieldName": "productVariantCreate"
    }
  },
  {
    "message": "Variable $input is declared by productVariantCreate but not used",
    "locations": [
      {
        "line": 1,
        "column": 1
      }
    ],
    "path": [
      "mutation productVariantCreate"
    ],
    "extensions": {
      "code": "variableNotUsed",
      "variableName": "input"
    }
  }
]
GraphQL Data: null
GraphQL Extensions: null
2025-08-10 08:54:13,199 - sync_service - INFO - Processing product group: ('FG-0000712', 'local') with 1 items for store local
2025-08-10 08:54:13,202 - sync_service - INFO - Found existing Shopify product ID: 7526282264642 for None
2025-08-10 08:54:13,203 - sync_service - INFO - Product None already exists in store local, adding variants
2025-08-10 08:54:13,205 - sync_service - INFO - API Call: {'service': 'shopify', 'endpoint': 'graphql_local', 'request': {'query': '\n        query GetProduct($id: ID!) {\n            product(id: $id) {\n                id\n                title\n                handle\n                description\n                variants(first: 50) {\n                    edges {\n                        node {\n                            id\n                            sku\n                            price\n                            inventoryItem {\n                                id\n                            }\n                            selectedOptions {\n                                name\n                                value\n                            }\n                        }\n                    }\n                }\n            }\n        }\n        ', 'variables': {'id': 'gid://shopify/Product/7526282264642'}}, 'response': None, 'status': None}
2025-08-10 08:54:13,673 - sync_service - INFO - API Call: {'service': 'shopify', 'endpoint': 'graphql_local', 'request': None, 'response': {'product': {'id': 'gid://shopify/Product/7526282264642', 'title': 'AA-Iron Man Necklace', 'handle': 'aa-iron-man-necklace', 'description': '', 'variants': {'edges': [{'node': {'id': 'gid://shopify/ProductVariant/42380104040514', 'sku': None, 'price': '0.00', 'inventoryItem': {'id': 'gid://shopify/InventoryItem/44480623018050'}, 'selectedOptions': [{'name': 'Title', 'value': 'Default Title'}]}}]}}}, 'status': 'success'}
2025-08-10 08:54:13,675 - sync_service - INFO - API Call: {'service': 'shopify', 'endpoint': 'graphql_local', 'request': {'query': '\n        query GetProduct($id: ID!) {\n            product(id: $id) {\n                id\n                title\n                handle\n                description\n                variants(first: 50) {\n                    edges {\n                        node {\n                            id\n                            sku\n                            price\n                            inventoryItem {\n                                id\n                            }\n                            selectedOptions {\n                                name\n                                value\n                            }\n                        }\n                    }\n                }\n            }\n        }\n        ', 'variables': {'id': 'gid://shopify/Product/7526282264642'}}, 'response': None, 'status': None}
2025-08-10 08:54:14,192 - sync_service - INFO - API Call: {'service': 'shopify', 'endpoint': 'graphql_local', 'request': None, 'response': {'product': {'id': 'gid://shopify/Product/7526282264642', 'title': 'AA-Iron Man Necklace', 'handle': 'aa-iron-man-necklace', 'description': '', 'variants': {'edges': [{'node': {'id': 'gid://shopify/ProductVariant/42380104040514', 'sku': None, 'price': '0.00', 'inventoryItem': {'id': 'gid://shopify/InventoryItem/44480623018050'}, 'selectedOptions': [{'name': 'Title', 'value': 'Default Title'}]}}]}}}, 'status': 'success'}
2025-08-10 08:54:14,473 - sync_service - INFO - API log added to SAP: shopify - /admin/api/graphql_local - success
2025-08-10 08:54:14,475 - sync_service - INFO - API Call: {'service': 'shopify', 'endpoint': 'graphql_local', 'request': {'query': '\n        mutation productVariantCreate($input: ProductVariantInput!) {\n            productVariantCreate(input: $input) {\n                productVariant {\n                    id\n                    sku\n                    price\n                    inventoryItem {\n                        id\n                    }\n                    selectedOptions {\n                        name\n                        value\n                    }\n                }\n                userErrors {\n                    field\n                    message\n                }\n            }\n        }\n        ', 'variables': {'input': {'sku': 'FG-0000712', 'price': '1000.0', 'inventoryPolicy': 'DENY', 'inventoryManagement': 'SHOPIFY', 'weight': 0.0, 'weightUnit': 'KILOGRAMS', 'taxable': False, 'barcode': '203090', 'productId': 'gid://shopify/Product/7526282264642'}}}, 'response': None, 'status': None}
2025-08-10 08:54:14,952 - sync_service - ERROR - GraphQL query error for store local: {'message': "Field 'productVariantCreate' doesn't exist on type 'Mutation'", 'locations': [{'line': 2, 'column': 3}], 'path': ['mutation productVariantCreate', 'productVariantCreate'], 'extensions': {'code': 'undefinedField', 'typeName': 'Mutation', 'fieldName': 'productVariantCreate'}}
GraphQL Errors: [
  {
    "message": "Field 'productVariantCreate' doesn't exist on type 'Mutation'",
    "locations": [
      {
        "line": 2,
        "column": 3
      }
    ],
    "path": [
      "mutation productVariantCreate",
      "productVariantCreate"
    ],
    "extensions": {
      "code": "undefinedField",
      "typeName": "Mutation",
      "fieldName": "productVariantCreate"
    }
  },
  {
    "message": "Variable $input is declared by productVariantCreate but not used",
    "locations": [
      {
        "line": 1,
        "column": 1
      }
    ],
    "path": [
      "mutation productVariantCreate"
    ],
    "extensions": {
      "code": "variableNotUsed",
      "variableName": "input"
    }
  }
]
GraphQL Data: null
GraphQL Extensions: null
2025-08-10 08:54:15,237 - sync_service - INFO - API log added to SAP: shopify - /admin/api/graphql_local - failure
2025-08-10 08:54:15,240 - sync_service - ERROR - Detailed variant creation error for FG-0000712: GraphQL query error for store local: {'message': "Field 'productVariantCreate' doesn't exist on type 'Mutation'", 'locations': [{'line': 2, 'column': 3}], 'path': ['mutation productVariantCreate', 'productVariantCreate'], 'extensions': {'code': 'undefinedField', 'typeName': 'Mutation', 'fieldName': 'productVariantCreate'}}
GraphQL Errors: [
  {
    "message": "Field 'productVariantCreate' doesn't exist on type 'Mutation'",
    "locations": [
      {
        "line": 2,
        "column": 3
      }
    ],
    "path": [
      "mutation productVariantCreate",
      "productVariantCreate"
    ],
    "extensions": {
      "code": "undefinedField",
      "typeName": "Mutation",
      "fieldName": "productVariantCreate"
    }
  },
  {
    "message": "Variable $input is declared by productVariantCreate but not used",
    "locations": [
      {
        "line": 1,
        "column": 1
      }
    ],
    "path": [
      "mutation productVariantCreate"
    ],
    "extensions": {
      "code": "variableNotUsed",
      "variableName": "input"
    }
  }
]
GraphQL Data: null
GraphQL Extensions: null
2025-08-10 08:54:15,513 - sync_service - INFO - API log added to SAP: shopify - /admin/api/graphql_local - failure
2025-08-10 08:54:15,516 - sync_service - ERROR - Failed to add variant FG-0000712: GraphQL query error for store local: {'message': "Field 'productVariantCreate' doesn't exist on type 'Mutation'", 'locations': [{'line': 2, 'column': 3}], 'path': ['mutation productVariantCreate', 'productVariantCreate'], 'extensions': {'code': 'undefinedField', 'typeName': 'Mutation', 'fieldName': 'productVariantCreate'}}
GraphQL Errors: [
  {
    "message": "Field 'productVariantCreate' doesn't exist on type 'Mutation'",
    "locations": [
      {
        "line": 2,
        "column": 3
      }
    ],
    "path": [
      "mutation productVariantCreate",
      "productVariantCreate"
    ],
    "extensions": {
      "code": "undefinedField",
      "typeName": "Mutation",
      "fieldName": "productVariantCreate"
    }
  },
  {
    "message": "Variable $input is declared by productVariantCreate but not used",
    "locations": [
      {
        "line": 1,
        "column": 1
      }
    ],
    "path": [
      "mutation productVariantCreate"
    ],
    "extensions": {
      "code": "variableNotUsed",
      "variableName": "input"
    }
  }
]
GraphQL Data: null
GraphQL Extensions: null
2025-08-10 08:54:16,301 - sync_service - INFO - Processing product group: ('Iron Man Necklace', 'local') with 2 items for store local
2025-08-10 08:54:16,303 - sync_service - INFO - Found existing Shopify product ID: 7526282330178 for Iron Man Necklace
2025-08-10 08:54:16,305 - sync_service - INFO - Product Iron Man Necklace already exists in store local, adding variants
2025-08-10 08:54:16,307 - sync_service - INFO - API Call: {'service': 'shopify', 'endpoint': 'graphql_local', 'request': {'query': '\n        query GetProduct($id: ID!) {\n            product(id: $id) {\n                id\n                title\n                handle\n                description\n                variants(first: 50) {\n                    edges {\n                        node {\n                            id\n                            sku\n                            price\n                            inventoryItem {\n                                id\n                            }\n                            selectedOptions {\n                                name\n                                value\n                            }\n                        }\n                    }\n                }\n            }\n        }\n        ', 'variables': {'id': 'gid://shopify/Product/7526282330178'}}, 'response': None, 'status': None}
2025-08-10 08:54:16,800 - sync_service - INFO - API Call: {'service': 'shopify', 'endpoint': 'graphql_local', 'request': None, 'response': {'product': {'id': 'gid://shopify/Product/7526282330178', 'title': 'Iron Man Necklace', 'handle': 'iron-man-necklace', 'description': '', 'variants': {'edges': [{'node': {'id': 'gid://shopify/ProductVariant/42380104106050', 'sku': None, 'price': '0.00', 'inventoryItem': {'id': 'gid://shopify/InventoryItem/44480623083586'}, 'selectedOptions': [{'name': 'Title', 'value': 'Default Title'}]}}]}}}, 'status': 'success'}
2025-08-10 08:54:16,802 - sync_service - INFO - API Call: {'service': 'shopify', 'endpoint': 'graphql_local', 'request': {'query': '\n        query GetProduct($id: ID!) {\n            product(id: $id) {\n                id\n                title\n                handle\n                description\n                variants(first: 50) {\n                    edges {\n                        node {\n                            id\n                            sku\n                            price\n                            inventoryItem {\n                                id\n                            }\n                            selectedOptions {\n                                name\n                                value\n                            }\n                        }\n                    }\n                }\n            }\n        }\n        ', 'variables': {'id': 'gid://shopify/Product/7526282330178'}}, 'response': None, 'status': None}
2025-08-10 08:54:17,291 - sync_service - INFO - API Call: {'service': 'shopify', 'endpoint': 'graphql_local', 'request': None, 'response': {'product': {'id': 'gid://shopify/Product/7526282330178', 'title': 'Iron Man Necklace', 'handle': 'iron-man-necklace', 'description': '', 'variants': {'edges': [{'node': {'id': 'gid://shopify/ProductVariant/42380104106050', 'sku': None, 'price': '0.00', 'inventoryItem': {'id': 'gid://shopify/InventoryItem/44480623083586'}, 'selectedOptions': [{'name': 'Title', 'value': 'Default Title'}]}}]}}}, 'status': 'success'}
2025-08-10 08:54:17,568 - sync_service - INFO - API log added to SAP: shopify - /admin/api/graphql_local - success
2025-08-10 08:54:17,570 - sync_service - INFO - API Call: {'service': 'shopify', 'endpoint': 'graphql_local', 'request': {'query': '\n        mutation productVariantCreate($input: ProductVariantInput!) {\n            productVariantCreate(input: $input) {\n                productVariant {\n                    id\n                    sku\n                    price\n                    inventoryItem {\n                        id\n                    }\n                    selectedOptions {\n                        name\n                        value\n                    }\n                }\n                userErrors {\n                    field\n                    message\n                }\n            }\n        }\n        ', 'variables': {'input': {'sku': 'FG-0000713', 'price': '2000.0', 'inventoryPolicy': 'DENY', 'inventoryManagement': 'SHOPIFY', 'weight': 0.0, 'weightUnit': 'KILOGRAMS', 'taxable': False, 'barcode': '203090', 'productId': 'gid://shopify/Product/7526282330178', 'option1': 'Red', 'option2': None, 'option3': None}}}, 'response': None, 'status': None}
2025-08-10 08:54:18,053 - sync_service - ERROR - GraphQL query error for store local: {'message': "Field 'productVariantCreate' doesn't exist on type 'Mutation'", 'locations': [{'line': 2, 'column': 3}], 'path': ['mutation productVariantCreate', 'productVariantCreate'], 'extensions': {'code': 'undefinedField', 'typeName': 'Mutation', 'fieldName': 'productVariantCreate'}}
GraphQL Errors: [
  {
    "message": "Field 'productVariantCreate' doesn't exist on type 'Mutation'",
    "locations": [
      {
        "line": 2,
        "column": 3
      }
    ],
    "path": [
      "mutation productVariantCreate",
      "productVariantCreate"
    ],
    "extensions": {
      "code": "undefinedField",
      "typeName": "Mutation",
      "fieldName": "productVariantCreate"
    }
  },
  {
    "message": "Variable $input is declared by productVariantCreate but not used",
    "locations": [
      {
        "line": 1,
        "column": 1
      }
    ],
    "path": [
      "mutation productVariantCreate"
    ],
    "extensions": {
      "code": "variableNotUsed",
      "variableName": "input"
    }
  }
]
GraphQL Data: null
GraphQL Extensions: null
2025-08-10 08:54:18,328 - sync_service - INFO - API log added to SAP: shopify - /admin/api/graphql_local - failure
2025-08-10 08:54:18,329 - sync_service - ERROR - Detailed variant creation error for FG-0000713: GraphQL query error for store local: {'message': "Field 'productVariantCreate' doesn't exist on type 'Mutation'", 'locations': [{'line': 2, 'column': 3}], 'path': ['mutation productVariantCreate', 'productVariantCreate'], 'extensions': {'code': 'undefinedField', 'typeName': 'Mutation', 'fieldName': 'productVariantCreate'}}
GraphQL Errors: [
  {
    "message": "Field 'productVariantCreate' doesn't exist on type 'Mutation'",
    "locations": [
      {
        "line": 2,
        "column": 3
      }
    ],
    "path": [
      "mutation productVariantCreate",
      "productVariantCreate"
    ],
    "extensions": {
      "code": "undefinedField",
      "typeName": "Mutation",
      "fieldName": "productVariantCreate"
    }
  },
  {
    "message": "Variable $input is declared by productVariantCreate but not used",
    "locations": [
      {
        "line": 1,
        "column": 1
      }
    ],
    "path": [
      "mutation productVariantCreate"
    ],
    "extensions": {
      "code": "variableNotUsed",
      "variableName": "input"
    }
  }
]
GraphQL Data: null
GraphQL Extensions: null
2025-08-10 08:54:18,606 - sync_service - INFO - API log added to SAP: shopify - /admin/api/graphql_local - failure
2025-08-10 08:54:18,608 - sync_service - ERROR - Failed to add variant FG-0000713: GraphQL query error for store local: {'message': "Field 'productVariantCreate' doesn't exist on type 'Mutation'", 'locations': [{'line': 2, 'column': 3}], 'path': ['mutation productVariantCreate', 'productVariantCreate'], 'extensions': {'code': 'undefinedField', 'typeName': 'Mutation', 'fieldName': 'productVariantCreate'}}
GraphQL Errors: [
  {
    "message": "Field 'productVariantCreate' doesn't exist on type 'Mutation'",
    "locations": [
      {
        "line": 2,
        "column": 3
      }
    ],
    "path": [
      "mutation productVariantCreate",
      "productVariantCreate"
    ],
    "extensions": {
      "code": "undefinedField",
      "typeName": "Mutation",
      "fieldName": "productVariantCreate"
    }
  },
  {
    "message": "Variable $input is declared by productVariantCreate but not used",
    "locations": [
      {
        "line": 1,
        "column": 1
      }
    ],
    "path": [
      "mutation productVariantCreate"
    ],
    "extensions": {
      "code": "variableNotUsed",
      "variableName": "input"
    }
  }
]
GraphQL Data: null
GraphQL Extensions: null
2025-08-10 08:54:18,608 - sync_service - INFO - API Call: {'service': 'shopify', 'endpoint': 'graphql_local', 'request': {'query': '\n        query GetProduct($id: ID!) {\n            product(id: $id) {\n                id\n                title\n                handle\n                description\n                variants(first: 50) {\n                    edges {\n                        node {\n                            id\n                            sku\n                            price\n                            inventoryItem {\n                                id\n                            }\n                            selectedOptions {\n                                name\n                                value\n                            }\n                        }\n                    }\n                }\n            }\n        }\n        ', 'variables': {'id': 'gid://shopify/Product/7526282330178'}}, 'response': None, 'status': None}
2025-08-10 08:54:19,097 - sync_service - INFO - API Call: {'service': 'shopify', 'endpoint': 'graphql_local', 'request': None, 'response': {'product': {'id': 'gid://shopify/Product/7526282330178', 'title': 'Iron Man Necklace', 'handle': 'iron-man-necklace', 'description': '', 'variants': {'edges': [{'node': {'id': 'gid://shopify/ProductVariant/42380104106050', 'sku': None, 'price': '0.00', 'inventoryItem': {'id': 'gid://shopify/InventoryItem/44480623083586'}, 'selectedOptions': [{'name': 'Title', 'value': 'Default Title'}]}}]}}}, 'status': 'success'}
2025-08-10 08:54:19,804 - sync_service - INFO - API log added to SAP: shopify - /admin/api/graphql_local - success
2025-08-10 08:54:19,807 - sync_service - INFO - API Call: {'service': 'shopify', 'endpoint': 'graphql_local', 'request': {'query': '\n        mutation productVariantCreate($input: ProductVariantInput!) {\n            productVariantCreate(input: $input) {\n                productVariant {\n                    id\n                    sku\n                    price\n                    inventoryItem {\n                        id\n                    }\n                    selectedOptions {\n                        name\n                        value\n                    }\n                }\n                userErrors {\n                    field\n                    message\n                }\n            }\n        }\n        ', 'variables': {'input': {'sku': 'FG-0000714', 'price': '3000.0', 'inventoryPolicy': 'DENY', 'inventoryManagement': 'SHOPIFY', 'weight': 0.0, 'weightUnit': 'KILOGRAMS', 'taxable': False, 'barcode': '203090', 'productId': 'gid://shopify/Product/7526282330178', 'option1': 'Blue', 'option2': None, 'option3': None}}}, 'response': None, 'status': None}
2025-08-10 08:54:20,327 - sync_service - ERROR - GraphQL query error for store local: {'message': "Field 'productVariantCreate' doesn't exist on type 'Mutation'", 'locations': [{'line': 2, 'column': 3}], 'path': ['mutation productVariantCreate', 'productVariantCreate'], 'extensions': {'code': 'undefinedField', 'typeName': 'Mutation', 'fieldName': 'productVariantCreate'}}
GraphQL Errors: [
  {
    "message": "Field 'productVariantCreate' doesn't exist on type 'Mutation'",
    "locations": [
      {
        "line": 2,
        "column": 3
      }
    ],
    "path": [
      "mutation productVariantCreate",
      "productVariantCreate"
    ],
    "extensions": {
      "code": "undefinedField",
      "typeName": "Mutation",
      "fieldName": "productVariantCreate"
    }
  },
  {
    "message": "Variable $input is declared by productVariantCreate but not used",
    "locations": [
      {
        "line": 1,
        "column": 1
      }
    ],
    "path": [
      "mutation productVariantCreate"
    ],
    "extensions": {
      "code": "variableNotUsed",
      "variableName": "input"
    }
  }
]
GraphQL Data: null
GraphQL Extensions: null
2025-08-10 08:54:20,605 - sync_service - INFO - API log added to SAP: shopify - /admin/api/graphql_local - failure
2025-08-10 08:54:20,607 - sync_service - ERROR - Detailed variant creation error for FG-0000714: GraphQL query error for store local: {'message': "Field 'productVariantCreate' doesn't exist on type 'Mutation'", 'locations': [{'line': 2, 'column': 3}], 'path': ['mutation productVariantCreate', 'productVariantCreate'], 'extensions': {'code': 'undefinedField', 'typeName': 'Mutation', 'fieldName': 'productVariantCreate'}}
GraphQL Errors: [
  {
    "message": "Field 'productVariantCreate' doesn't exist on type 'Mutation'",
    "locations": [
      {
        "line": 2,
        "column": 3
      }
    ],
    "path": [
      "mutation productVariantCreate",
      "productVariantCreate"
    ],
    "extensions": {
      "code": "undefinedField",
      "typeName": "Mutation",
      "fieldName": "productVariantCreate"
    }
  },
  {
    "message": "Variable $input is declared by productVariantCreate but not used",
    "locations": [
      {
        "line": 1,
        "column": 1
      }
    ],
    "path": [
      "mutation productVariantCreate"
    ],
    "extensions": {
      "code": "variableNotUsed",
      "variableName": "input"
    }
  }
]
GraphQL Data: null
GraphQL Extensions: null
2025-08-10 08:54:20,878 - sync_service - INFO - API log added to SAP: shopify - /admin/api/graphql_local - failure
2025-08-10 08:54:20,879 - sync_service - ERROR - Failed to add variant FG-0000714: GraphQL query error for store local: {'message': "Field 'productVariantCreate' doesn't exist on type 'Mutation'", 'locations': [{'line': 2, 'column': 3}], 'path': ['mutation productVariantCreate', 'productVariantCreate'], 'extensions': {'code': 'undefinedField', 'typeName': 'Mutation', 'fieldName': 'productVariantCreate'}}
GraphQL Errors: [
  {
    "message": "Field 'productVariantCreate' doesn't exist on type 'Mutation'",
    "locations": [
      {
        "line": 2,
        "column": 3
      }
    ],
    "path": [
      "mutation productVariantCreate",
      "productVariantCreate"
    ],
    "extensions": {
      "code": "undefinedField",
      "typeName": "Mutation",
      "fieldName": "productVariantCreate"
    }
  },
  {
    "message": "Variable $input is declared by productVariantCreate but not used",
    "locations": [
      {
        "line": 1,
        "column": 1
      }
    ],
    "path": [
      "mutation productVariantCreate"
    ],
    "extensions": {
      "code": "variableNotUsed",
      "variableName": "input"
    }
  }
]
GraphQL Data: null
GraphQL Extensions: null
2025-08-10 08:54:22,045 - sync_service - INFO - Processing product group: ('Morsi Laptop', 'local') with 2 items for store local
2025-08-10 08:54:22,047 - sync_service - INFO - Found existing Shopify product ID: 7526282362946 for Morsi Laptop
2025-08-10 08:54:22,049 - sync_service - INFO - Product Morsi Laptop already exists in store local, adding variants
2025-08-10 08:54:22,051 - sync_service - INFO - API Call: {'service': 'shopify', 'endpoint': 'graphql_local', 'request': {'query': '\n        query GetProduct($id: ID!) {\n            product(id: $id) {\n                id\n                title\n                handle\n                description\n                variants(first: 50) {\n                    edges {\n                        node {\n                            id\n                            sku\n                            price\n                            inventoryItem {\n                                id\n                            }\n                            selectedOptions {\n                                name\n                                value\n                            }\n                        }\n                    }\n                }\n            }\n        }\n        ', 'variables': {'id': 'gid://shopify/Product/7526282362946'}}, 'response': None, 'status': None}
2025-08-10 08:54:24,728 - sync_service - INFO - API Call: {'service': 'shopify', 'endpoint': 'graphql_local', 'request': None, 'response': {'product': {'id': 'gid://shopify/Product/7526282362946', 'title': 'Morsi Laptop', 'handle': 'morsi-laptop', 'description': '', 'variants': {'edges': [{'node': {'id': 'gid://shopify/ProductVariant/42380104138818', 'sku': None, 'price': '0.00', 'inventoryItem': {'id': 'gid://shopify/InventoryItem/44480623116354'}, 'selectedOptions': [{'name': 'Title', 'value': 'Default Title'}]}}]}}}, 'status': 'success'}
2025-08-10 08:54:24,729 - sync_service - INFO - API Call: {'service': 'shopify', 'endpoint': 'graphql_local', 'request': {'query': '\n        query GetProduct($id: ID!) {\n            product(id: $id) {\n                id\n                title\n                handle\n                description\n                variants(first: 50) {\n                    edges {\n                        node {\n                            id\n                            sku\n                            price\n                            inventoryItem {\n                                id\n                            }\n                            selectedOptions {\n                                name\n                                value\n                            }\n                        }\n                    }\n                }\n            }\n        }\n        ', 'variables': {'id': 'gid://shopify/Product/7526282362946'}}, 'response': None, 'status': None}
2025-08-10 08:54:25,224 - sync_service - INFO - API Call: {'service': 'shopify', 'endpoint': 'graphql_local', 'request': None, 'response': {'product': {'id': 'gid://shopify/Product/7526282362946', 'title': 'Morsi Laptop', 'handle': 'morsi-laptop', 'description': '', 'variants': {'edges': [{'node': {'id': 'gid://shopify/ProductVariant/42380104138818', 'sku': None, 'price': '0.00', 'inventoryItem': {'id': 'gid://shopify/InventoryItem/44480623116354'}, 'selectedOptions': [{'name': 'Title', 'value': 'Default Title'}]}}]}}}, 'status': 'success'}
2025-08-10 08:54:25,914 - sync_service - INFO - API log added to SAP: shopify - /admin/api/graphql_local - success
2025-08-10 08:54:25,917 - sync_service - INFO - API Call: {'service': 'shopify', 'endpoint': 'graphql_local', 'request': {'query': '\n        mutation productVariantCreate($input: ProductVariantInput!) {\n            productVariantCreate(input: $input) {\n                productVariant {\n                    id\n                    sku\n                    price\n                    inventoryItem {\n                        id\n                    }\n                    selectedOptions {\n                        name\n                        value\n                    }\n                }\n                userErrors {\n                    field\n                    message\n                }\n            }\n        }\n        ', 'variables': {'input': {'sku': 'FG-0000709', 'price': '1000.0', 'inventoryPolicy': 'DENY', 'inventoryManagement': 'SHOPIFY', 'weight': 0.0, 'weightUnit': 'KILOGRAMS', 'taxable': False, 'productId': 'gid://shopify/Product/7526282362946', 'option1': 'Black', 'option2': None, 'option3': None}}}, 'response': None, 'status': None}
2025-08-10 08:54:26,409 - sync_service - ERROR - GraphQL query error for store local: {'message': "Field 'productVariantCreate' doesn't exist on type 'Mutation'", 'locations': [{'line': 2, 'column': 3}], 'path': ['mutation productVariantCreate', 'productVariantCreate'], 'extensions': {'code': 'undefinedField', 'typeName': 'Mutation', 'fieldName': 'productVariantCreate'}}
GraphQL Errors: [
  {
    "message": "Field 'productVariantCreate' doesn't exist on type 'Mutation'",
    "locations": [
      {
        "line": 2,
        "column": 3
      }
    ],
    "path": [
      "mutation productVariantCreate",
      "productVariantCreate"
    ],
    "extensions": {
      "code": "undefinedField",
      "typeName": "Mutation",
      "fieldName": "productVariantCreate"
    }
  },
  {
    "message": "Variable $input is declared by productVariantCreate but not used",
    "locations": [
      {
        "line": 1,
        "column": 1
      }
    ],
    "path": [
      "mutation productVariantCreate"
    ],
    "extensions": {
      "code": "variableNotUsed",
      "variableName": "input"
    }
  }
]
GraphQL Data: null
GraphQL Extensions: null
2025-08-10 08:54:26,689 - sync_service - INFO - API log added to SAP: shopify - /admin/api/graphql_local - failure
2025-08-10 08:54:26,692 - sync_service - ERROR - Detailed variant creation error for FG-0000709: GraphQL query error for store local: {'message': "Field 'productVariantCreate' doesn't exist on type 'Mutation'", 'locations': [{'line': 2, 'column': 3}], 'path': ['mutation productVariantCreate', 'productVariantCreate'], 'extensions': {'code': 'undefinedField', 'typeName': 'Mutation', 'fieldName': 'productVariantCreate'}}
GraphQL Errors: [
  {
    "message": "Field 'productVariantCreate' doesn't exist on type 'Mutation'",
    "locations": [
      {
        "line": 2,
        "column": 3
      }
    ],
    "path": [
      "mutation productVariantCreate",
      "productVariantCreate"
    ],
    "extensions": {
      "code": "undefinedField",
      "typeName": "Mutation",
      "fieldName": "productVariantCreate"
    }
  },
  {
    "message": "Variable $input is declared by productVariantCreate but not used",
    "locations": [
      {
        "line": 1,
        "column": 1
      }
    ],
    "path": [
      "mutation productVariantCreate"
    ],
    "extensions": {
      "code": "variableNotUsed",
      "variableName": "input"
    }
  }
]
GraphQL Data: null
GraphQL Extensions: null
2025-08-10 08:54:26,975 - sync_service - INFO - API log added to SAP: shopify - /admin/api/graphql_local - failure
2025-08-10 08:54:26,977 - sync_service - ERROR - Failed to add variant FG-0000709: GraphQL query error for store local: {'message': "Field 'productVariantCreate' doesn't exist on type 'Mutation'", 'locations': [{'line': 2, 'column': 3}], 'path': ['mutation productVariantCreate', 'productVariantCreate'], 'extensions': {'code': 'undefinedField', 'typeName': 'Mutation', 'fieldName': 'productVariantCreate'}}
GraphQL Errors: [
  {
    "message": "Field 'productVariantCreate' doesn't exist on type 'Mutation'",
    "locations": [
      {
        "line": 2,
        "column": 3
      }
    ],
    "path": [
      "mutation productVariantCreate",
      "productVariantCreate"
    ],
    "extensions": {
      "code": "undefinedField",
      "typeName": "Mutation",
      "fieldName": "productVariantCreate"
    }
  },
  {
    "message": "Variable $input is declared by productVariantCreate but not used",
    "locations": [
      {
        "line": 1,
        "column": 1
      }
    ],
    "path": [
      "mutation productVariantCreate"
    ],
    "extensions": {
      "code": "variableNotUsed",
      "variableName": "input"
    }
  }
]
GraphQL Data: null
GraphQL Extensions: null
2025-08-10 08:54:26,979 - sync_service - INFO - API Call: {'service': 'shopify', 'endpoint': 'graphql_local', 'request': {'query': '\n        query GetProduct($id: ID!) {\n            product(id: $id) {\n                id\n                title\n                handle\n                description\n                variants(first: 50) {\n                    edges {\n                        node {\n                            id\n                            sku\n                            price\n                            inventoryItem {\n                                id\n                            }\n                            selectedOptions {\n                                name\n                                value\n                            }\n                        }\n                    }\n                }\n            }\n        }\n        ', 'variables': {'id': 'gid://shopify/Product/7526282362946'}}, 'response': None, 'status': None}
2025-08-10 08:54:27,454 - sync_service - INFO - API Call: {'service': 'shopify', 'endpoint': 'graphql_local', 'request': None, 'response': {'product': {'id': 'gid://shopify/Product/7526282362946', 'title': 'Morsi Laptop', 'handle': 'morsi-laptop', 'description': '', 'variants': {'edges': [{'node': {'id': 'gid://shopify/ProductVariant/42380104138818', 'sku': None, 'price': '0.00', 'inventoryItem': {'id': 'gid://shopify/InventoryItem/44480623116354'}, 'selectedOptions': [{'name': 'Title', 'value': 'Default Title'}]}}]}}}, 'status': 'success'}
2025-08-10 08:54:27,738 - sync_service - INFO - API log added to SAP: shopify - /admin/api/graphql_local - success
2025-08-10 08:54:27,740 - sync_service - INFO - API Call: {'service': 'shopify', 'endpoint': 'graphql_local', 'request': {'query': '\n        mutation productVariantCreate($input: ProductVariantInput!) {\n            productVariantCreate(input: $input) {\n                productVariant {\n                    id\n                    sku\n                    price\n                    inventoryItem {\n                        id\n                    }\n                    selectedOptions {\n                        name\n                        value\n                    }\n                }\n                userErrors {\n                    field\n                    message\n                }\n            }\n        }\n        ', 'variables': {'input': {'sku': 'FG-0000710', 'price': '1000.0', 'inventoryPolicy': 'DENY', 'inventoryManagement': 'SHOPIFY', 'weight': 0.0, 'weightUnit': 'KILOGRAMS', 'taxable': False, 'productId': 'gid://shopify/Product/7526282362946', 'option1': 'Gray', 'option2': None, 'option3': None}}}, 'response': None, 'status': None}
2025-08-10 08:54:28,217 - sync_service - ERROR - GraphQL query error for store local: {'message': "Field 'productVariantCreate' doesn't exist on type 'Mutation'", 'locations': [{'line': 2, 'column': 3}], 'path': ['mutation productVariantCreate', 'productVariantCreate'], 'extensions': {'code': 'undefinedField', 'typeName': 'Mutation', 'fieldName': 'productVariantCreate'}}
GraphQL Errors: [
  {
    "message": "Field 'productVariantCreate' doesn't exist on type 'Mutation'",
    "locations": [
      {
        "line": 2,
        "column": 3
      }
    ],
    "path": [
      "mutation productVariantCreate",
      "productVariantCreate"
    ],
    "extensions": {
      "code": "undefinedField",
      "typeName": "Mutation",
      "fieldName": "productVariantCreate"
    }
  },
  {
    "message": "Variable $input is declared by productVariantCreate but not used",
    "locations": [
      {
        "line": 1,
        "column": 1
      }
    ],
    "path": [
      "mutation productVariantCreate"
    ],
    "extensions": {
      "code": "variableNotUsed",
      "variableName": "input"
    }
  }
]
GraphQL Data: null
GraphQL Extensions: null
2025-08-10 08:54:28,492 - sync_service - INFO - API log added to SAP: shopify - /admin/api/graphql_local - failure
2025-08-10 08:54:28,492 - sync_service - ERROR - Detailed variant creation error for FG-0000710: GraphQL query error for store local: {'message': "Field 'productVariantCreate' doesn't exist on type 'Mutation'", 'locations': [{'line': 2, 'column': 3}], 'path': ['mutation productVariantCreate', 'productVariantCreate'], 'extensions': {'code': 'undefinedField', 'typeName': 'Mutation', 'fieldName': 'productVariantCreate'}}
GraphQL Errors: [
  {
    "message": "Field 'productVariantCreate' doesn't exist on type 'Mutation'",
    "locations": [
      {
        "line": 2,
        "column": 3
      }
    ],
    "path": [
      "mutation productVariantCreate",
      "productVariantCreate"
    ],
    "extensions": {
      "code": "undefinedField",
      "typeName": "Mutation",
      "fieldName": "productVariantCreate"
    }
  },
  {
    "message": "Variable $input is declared by productVariantCreate but not used",
    "locations": [
      {
        "line": 1,
        "column": 1
      }
    ],
    "path": [
      "mutation productVariantCreate"
    ],
    "extensions": {
      "code": "variableNotUsed",
      "variableName": "input"
    }
  }
]
GraphQL Data: null
GraphQL Extensions: null
2025-08-10 08:54:28,760 - sync_service - INFO - API log added to SAP: shopify - /admin/api/graphql_local - failure
2025-08-10 08:54:28,762 - sync_service - ERROR - Failed to add variant FG-0000710: GraphQL query error for store local: {'message': "Field 'productVariantCreate' doesn't exist on type 'Mutation'", 'locations': [{'line': 2, 'column': 3}], 'path': ['mutation productVariantCreate', 'productVariantCreate'], 'extensions': {'code': 'undefinedField', 'typeName': 'Mutation', 'fieldName': 'productVariantCreate'}}
GraphQL Errors: [
  {
    "message": "Field 'productVariantCreate' doesn't exist on type 'Mutation'",
    "locations": [
      {
        "line": 2,
        "column": 3
      }
    ],
    "path": [
      "mutation productVariantCreate",
      "productVariantCreate"
    ],
    "extensions": {
      "code": "undefinedField",
      "typeName": "Mutation",
      "fieldName": "productVariantCreate"
    }
  },
  {
    "message": "Variable $input is declared by productVariantCreate but not used",
    "locations": [
      {
        "line": 1,
        "column": 1
      }
    ],
    "path": [
      "mutation productVariantCreate"
    ],
    "extensions": {
      "code": "variableNotUsed",
      "variableName": "input"
    }
  }
]
GraphQL Data: null
GraphQL Extensions: null
2025-08-10 08:54:29,952 - sync_service - INFO - Processing product group: ('Morsi Necklace', 'local') with 3 items for store local
2025-08-10 08:54:29,953 - sync_service - INFO - Found existing Shopify product ID: 7526282395714 for Morsi Necklace
2025-08-10 08:54:29,954 - sync_service - INFO - Product Morsi Necklace already exists in store local, adding variants
2025-08-10 08:54:29,956 - sync_service - INFO - API Call: {'service': 'shopify', 'endpoint': 'graphql_local', 'request': {'query': '\n        query GetProduct($id: ID!) {\n            product(id: $id) {\n                id\n                title\n                handle\n                description\n                variants(first: 50) {\n                    edges {\n                        node {\n                            id\n                            sku\n                            price\n                            inventoryItem {\n                                id\n                            }\n                            selectedOptions {\n                                name\n                                value\n                            }\n                        }\n                    }\n                }\n            }\n        }\n        ', 'variables': {'id': 'gid://shopify/Product/7526282395714'}}, 'response': None, 'status': None}
2025-08-10 08:54:36,263 - sync_service - INFO - API Call: {'service': 'shopify', 'endpoint': 'graphql_local', 'request': None, 'response': {'product': {'id': 'gid://shopify/Product/7526282395714', 'title': 'Morsi Necklace', 'handle': 'morsi-necklace', 'description': '', 'variants': {'edges': [{'node': {'id': 'gid://shopify/ProductVariant/42380104171586', 'sku': None, 'price': '0.00', 'inventoryItem': {'id': 'gid://shopify/InventoryItem/44480623149122'}, 'selectedOptions': [{'name': 'Title', 'value': 'Default Title'}]}}]}}}, 'status': 'success'}
2025-08-10 08:54:36,265 - sync_service - INFO - API Call: {'service': 'shopify', 'endpoint': 'graphql_local', 'request': {'query': '\n        query GetProduct($id: ID!) {\n            product(id: $id) {\n                id\n                title\n                handle\n                description\n                variants(first: 50) {\n                    edges {\n                        node {\n                            id\n                            sku\n                            price\n                            inventoryItem {\n                                id\n                            }\n                            selectedOptions {\n                                name\n                                value\n                            }\n                        }\n                    }\n                }\n            }\n        }\n        ', 'variables': {'id': 'gid://shopify/Product/7526282395714'}}, 'response': None, 'status': None}
2025-08-10 08:54:36,743 - sync_service - INFO - API Call: {'service': 'shopify', 'endpoint': 'graphql_local', 'request': None, 'response': {'product': {'id': 'gid://shopify/Product/7526282395714', 'title': 'Morsi Necklace', 'handle': 'morsi-necklace', 'description': '', 'variants': {'edges': [{'node': {'id': 'gid://shopify/ProductVariant/42380104171586', 'sku': None, 'price': '0.00', 'inventoryItem': {'id': 'gid://shopify/InventoryItem/44480623149122'}, 'selectedOptions': [{'name': 'Title', 'value': 'Default Title'}]}}]}}}, 'status': 'success'}
2025-08-10 08:54:37,020 - sync_service - INFO - API log added to SAP: shopify - /admin/api/graphql_local - success
2025-08-10 08:54:37,022 - sync_service - INFO - API Call: {'service': 'shopify', 'endpoint': 'graphql_local', 'request': {'query': '\n        mutation productVariantCreate($input: ProductVariantInput!) {\n            productVariantCreate(input: $input) {\n                productVariant {\n                    id\n                    sku\n                    price\n                    inventoryItem {\n                        id\n                    }\n                    selectedOptions {\n                        name\n                        value\n                    }\n                }\n                userErrors {\n                    field\n                    message\n                }\n            }\n        }\n        ', 'variables': {'input': {'sku': 'FG-0000702', 'price': '2500.0', 'inventoryPolicy': 'DENY', 'inventoryManagement': 'SHOPIFY', 'weight': 0.0, 'weightUnit': 'KILOGRAMS', 'taxable': False, 'barcode': '2123243245', 'productId': 'gid://shopify/Product/7526282395714', 'option1': 'Black', 'option2': None, 'option3': None}}}, 'response': None, 'status': None}
2025-08-10 08:54:37,507 - sync_service - ERROR - GraphQL query error for store local: {'message': "Field 'productVariantCreate' doesn't exist on type 'Mutation'", 'locations': [{'line': 2, 'column': 3}], 'path': ['mutation productVariantCreate', 'productVariantCreate'], 'extensions': {'code': 'undefinedField', 'typeName': 'Mutation', 'fieldName': 'productVariantCreate'}}
GraphQL Errors: [
  {
    "message": "Field 'productVariantCreate' doesn't exist on type 'Mutation'",
    "locations": [
      {
        "line": 2,
        "column": 3
      }
    ],
    "path": [
      "mutation productVariantCreate",
      "productVariantCreate"
    ],
    "extensions": {
      "code": "undefinedField",
      "typeName": "Mutation",
      "fieldName": "productVariantCreate"
    }
  },
  {
    "message": "Variable $input is declared by productVariantCreate but not used",
    "locations": [
      {
        "line": 1,
        "column": 1
      }
    ],
    "path": [
      "mutation productVariantCreate"
    ],
    "extensions": {
      "code": "variableNotUsed",
      "variableName": "input"
    }
  }
]
GraphQL Data: null
GraphQL Extensions: null
2025-08-10 08:54:37,778 - sync_service - INFO - API log added to SAP: shopify - /admin/api/graphql_local - failure
2025-08-10 08:54:37,778 - sync_service - ERROR - Detailed variant creation error for FG-0000702: GraphQL query error for store local: {'message': "Field 'productVariantCreate' doesn't exist on type 'Mutation'", 'locations': [{'line': 2, 'column': 3}], 'path': ['mutation productVariantCreate', 'productVariantCreate'], 'extensions': {'code': 'undefinedField', 'typeName': 'Mutation', 'fieldName': 'productVariantCreate'}}
GraphQL Errors: [
  {
    "message": "Field 'productVariantCreate' doesn't exist on type 'Mutation'",
    "locations": [
      {
        "line": 2,
        "column": 3
      }
    ],
    "path": [
      "mutation productVariantCreate",
      "productVariantCreate"
    ],
    "extensions": {
      "code": "undefinedField",
      "typeName": "Mutation",
      "fieldName": "productVariantCreate"
    }
  },
  {
    "message": "Variable $input is declared by productVariantCreate but not used",
    "locations": [
      {
        "line": 1,
        "column": 1
      }
    ],
    "path": [
      "mutation productVariantCreate"
    ],
    "extensions": {
      "code": "variableNotUsed",
      "variableName": "input"
    }
  }
]
GraphQL Data: null
GraphQL Extensions: null
2025-08-10 08:54:38,051 - sync_service - INFO - API log added to SAP: shopify - /admin/api/graphql_local - failure
2025-08-10 08:54:38,053 - sync_service - ERROR - Failed to add variant FG-0000702: GraphQL query error for store local: {'message': "Field 'productVariantCreate' doesn't exist on type 'Mutation'", 'locations': [{'line': 2, 'column': 3}], 'path': ['mutation productVariantCreate', 'productVariantCreate'], 'extensions': {'code': 'undefinedField', 'typeName': 'Mutation', 'fieldName': 'productVariantCreate'}}
GraphQL Errors: [
  {
    "message": "Field 'productVariantCreate' doesn't exist on type 'Mutation'",
    "locations": [
      {
        "line": 2,
        "column": 3
      }
    ],
    "path": [
      "mutation productVariantCreate",
      "productVariantCreate"
    ],
    "extensions": {
      "code": "undefinedField",
      "typeName": "Mutation",
      "fieldName": "productVariantCreate"
    }
  },
  {
    "message": "Variable $input is declared by productVariantCreate but not used",
    "locations": [
      {
        "line": 1,
        "column": 1
      }
    ],
    "path": [
      "mutation productVariantCreate"
    ],
    "extensions": {
      "code": "variableNotUsed",
      "variableName": "input"
    }
  }
]
GraphQL Data: null
GraphQL Extensions: null
2025-08-10 08:54:38,054 - sync_service - INFO - API Call: {'service': 'shopify', 'endpoint': 'graphql_local', 'request': {'query': '\n        query GetProduct($id: ID!) {\n            product(id: $id) {\n                id\n                title\n                handle\n                description\n                variants(first: 50) {\n                    edges {\n                        node {\n                            id\n                            sku\n                            price\n                            inventoryItem {\n                                id\n                            }\n                            selectedOptions {\n                                name\n                                value\n                            }\n                        }\n                    }\n                }\n            }\n        }\n        ', 'variables': {'id': 'gid://shopify/Product/7526282395714'}}, 'response': None, 'status': None}
2025-08-10 08:54:38,525 - sync_service - INFO - API Call: {'service': 'shopify', 'endpoint': 'graphql_local', 'request': None, 'response': {'product': {'id': 'gid://shopify/Product/7526282395714', 'title': 'Morsi Necklace', 'handle': 'morsi-necklace', 'description': '', 'variants': {'edges': [{'node': {'id': 'gid://shopify/ProductVariant/42380104171586', 'sku': None, 'price': '0.00', 'inventoryItem': {'id': 'gid://shopify/InventoryItem/44480623149122'}, 'selectedOptions': [{'name': 'Title', 'value': 'Default Title'}]}}]}}}, 'status': 'success'}
2025-08-10 08:54:38,795 - sync_service - INFO - API log added to SAP: shopify - /admin/api/graphql_local - success
2025-08-10 08:54:38,797 - sync_service - INFO - API Call: {'service': 'shopify', 'endpoint': 'graphql_local', 'request': {'query': '\n        mutation productVariantCreate($input: ProductVariantInput!) {\n            productVariantCreate(input: $input) {\n                productVariant {\n                    id\n                    sku\n                    price\n                    inventoryItem {\n                        id\n                    }\n                    selectedOptions {\n                        name\n                        value\n                    }\n                }\n                userErrors {\n                    field\n                    message\n                }\n            }\n        }\n        ', 'variables': {'input': {'sku': 'FG-0000703', 'price': '2500.0', 'inventoryPolicy': 'DENY', 'inventoryManagement': 'SHOPIFY', 'weight': 0.0, 'weightUnit': 'KILOGRAMS', 'taxable': False, 'barcode': '242342342', 'productId': 'gid://shopify/Product/7526282395714', 'option1': 'White', 'option2': None, 'option3': None}}}, 'response': None, 'status': None}
2025-08-10 08:54:39,307 - sync_service - ERROR - GraphQL query error for store local: {'message': "Field 'productVariantCreate' doesn't exist on type 'Mutation'", 'locations': [{'line': 2, 'column': 3}], 'path': ['mutation productVariantCreate', 'productVariantCreate'], 'extensions': {'code': 'undefinedField', 'typeName': 'Mutation', 'fieldName': 'productVariantCreate'}}
GraphQL Errors: [
  {
    "message": "Field 'productVariantCreate' doesn't exist on type 'Mutation'",
    "locations": [
      {
        "line": 2,
        "column": 3
      }
    ],
    "path": [
      "mutation productVariantCreate",
      "productVariantCreate"
    ],
    "extensions": {
      "code": "undefinedField",
      "typeName": "Mutation",
      "fieldName": "productVariantCreate"
    }
  },
  {
    "message": "Variable $input is declared by productVariantCreate but not used",
    "locations": [
      {
        "line": 1,
        "column": 1
      }
    ],
    "path": [
      "mutation productVariantCreate"
    ],
    "extensions": {
      "code": "variableNotUsed",
      "variableName": "input"
    }
  }
]
GraphQL Data: null
GraphQL Extensions: null
2025-08-10 08:54:39,588 - sync_service - INFO - API log added to SAP: shopify - /admin/api/graphql_local - failure
2025-08-10 08:54:39,589 - sync_service - ERROR - Detailed variant creation error for FG-0000703: GraphQL query error for store local: {'message': "Field 'productVariantCreate' doesn't exist on type 'Mutation'", 'locations': [{'line': 2, 'column': 3}], 'path': ['mutation productVariantCreate', 'productVariantCreate'], 'extensions': {'code': 'undefinedField', 'typeName': 'Mutation', 'fieldName': 'productVariantCreate'}}
GraphQL Errors: [
  {
    "message": "Field 'productVariantCreate' doesn't exist on type 'Mutation'",
    "locations": [
      {
        "line": 2,
        "column": 3
      }
    ],
    "path": [
      "mutation productVariantCreate",
      "productVariantCreate"
    ],
    "extensions": {
      "code": "undefinedField",
      "typeName": "Mutation",
      "fieldName": "productVariantCreate"
    }
  },
  {
    "message": "Variable $input is declared by productVariantCreate but not used",
    "locations": [
      {
        "line": 1,
        "column": 1
      }
    ],
    "path": [
      "mutation productVariantCreate"
    ],
    "extensions": {
      "code": "variableNotUsed",
      "variableName": "input"
    }
  }
]
GraphQL Data: null
GraphQL Extensions: null
2025-08-10 08:54:39,872 - sync_service - INFO - API log added to SAP: shopify - /admin/api/graphql_local - failure
2025-08-10 08:54:39,873 - sync_service - ERROR - Failed to add variant FG-0000703: GraphQL query error for store local: {'message': "Field 'productVariantCreate' doesn't exist on type 'Mutation'", 'locations': [{'line': 2, 'column': 3}], 'path': ['mutation productVariantCreate', 'productVariantCreate'], 'extensions': {'code': 'undefinedField', 'typeName': 'Mutation', 'fieldName': 'productVariantCreate'}}
GraphQL Errors: [
  {
    "message": "Field 'productVariantCreate' doesn't exist on type 'Mutation'",
    "locations": [
      {
        "line": 2,
        "column": 3
      }
    ],
    "path": [
      "mutation productVariantCreate",
      "productVariantCreate"
    ],
    "extensions": {
      "code": "undefinedField",
      "typeName": "Mutation",
      "fieldName": "productVariantCreate"
    }
  },
  {
    "message": "Variable $input is declared by productVariantCreate but not used",
    "locations": [
      {
        "line": 1,
        "column": 1
      }
    ],
    "path": [
      "mutation productVariantCreate"
    ],
    "extensions": {
      "code": "variableNotUsed",
      "variableName": "input"
    }
  }
]
GraphQL Data: null
GraphQL Extensions: null
2025-08-10 08:54:39,874 - sync_service - INFO - API Call: {'service': 'shopify', 'endpoint': 'graphql_local', 'request': {'query': '\n        query GetProduct($id: ID!) {\n            product(id: $id) {\n                id\n                title\n                handle\n                description\n                variants(first: 50) {\n                    edges {\n                        node {\n                            id\n                            sku\n                            price\n                            inventoryItem {\n                                id\n                            }\n                            selectedOptions {\n                                name\n                                value\n                            }\n                        }\n                    }\n                }\n            }\n        }\n        ', 'variables': {'id': 'gid://shopify/Product/7526282395714'}}, 'response': None, 'status': None}
2025-08-10 08:54:40,375 - sync_service - INFO - API Call: {'service': 'shopify', 'endpoint': 'graphql_local', 'request': None, 'response': {'product': {'id': 'gid://shopify/Product/7526282395714', 'title': 'Morsi Necklace', 'handle': 'morsi-necklace', 'description': '', 'variants': {'edges': [{'node': {'id': 'gid://shopify/ProductVariant/42380104171586', 'sku': None, 'price': '0.00', 'inventoryItem': {'id': 'gid://shopify/InventoryItem/44480623149122'}, 'selectedOptions': [{'name': 'Title', 'value': 'Default Title'}]}}]}}}, 'status': 'success'}
2025-08-10 08:54:40,660 - sync_service - INFO - API log added to SAP: shopify - /admin/api/graphql_local - success
2025-08-10 08:54:40,661 - sync_service - INFO - API Call: {'service': 'shopify', 'endpoint': 'graphql_local', 'request': {'query': '\n        mutation productVariantCreate($input: ProductVariantInput!) {\n            productVariantCreate(input: $input) {\n                productVariant {\n                    id\n                    sku\n                    price\n                    inventoryItem {\n                        id\n                    }\n                    selectedOptions {\n                        name\n                        value\n                    }\n                }\n                userErrors {\n                    field\n                    message\n                }\n            }\n        }\n        ', 'variables': {'input': {'sku': 'FG-0000705', 'price': '2500.0', 'inventoryPolicy': 'DENY', 'inventoryManagement': 'SHOPIFY', 'weight': 0.0, 'weightUnit': 'KILOGRAMS', 'taxable': False, 'productId': 'gid://shopify/Product/7526282395714', 'option1': 'Green', 'option2': None, 'option3': None}}}, 'response': None, 'status': None}
2025-08-10 08:54:41,140 - sync_service - ERROR - GraphQL query error for store local: {'message': "Field 'productVariantCreate' doesn't exist on type 'Mutation'", 'locations': [{'line': 2, 'column': 3}], 'path': ['mutation productVariantCreate', 'productVariantCreate'], 'extensions': {'code': 'undefinedField', 'typeName': 'Mutation', 'fieldName': 'productVariantCreate'}}
GraphQL Errors: [
  {
    "message": "Field 'productVariantCreate' doesn't exist on type 'Mutation'",
    "locations": [
      {
        "line": 2,
        "column": 3
      }
    ],
    "path": [
      "mutation productVariantCreate",
      "productVariantCreate"
    ],
    "extensions": {
      "code": "undefinedField",
      "typeName": "Mutation",
      "fieldName": "productVariantCreate"
    }
  },
  {
    "message": "Variable $input is declared by productVariantCreate but not used",
    "locations": [
      {
        "line": 1,
        "column": 1
      }
    ],
    "path": [
      "mutation productVariantCreate"
    ],
    "extensions": {
      "code": "variableNotUsed",
      "variableName": "input"
    }
  }
]
GraphQL Data: null
GraphQL Extensions: null
2025-08-10 08:54:41,408 - sync_service - INFO - API log added to SAP: shopify - /admin/api/graphql_local - failure
2025-08-10 08:54:41,409 - sync_service - ERROR - Detailed variant creation error for FG-0000705: GraphQL query error for store local: {'message': "Field 'productVariantCreate' doesn't exist on type 'Mutation'", 'locations': [{'line': 2, 'column': 3}], 'path': ['mutation productVariantCreate', 'productVariantCreate'], 'extensions': {'code': 'undefinedField', 'typeName': 'Mutation', 'fieldName': 'productVariantCreate'}}
GraphQL Errors: [
  {
    "message": "Field 'productVariantCreate' doesn't exist on type 'Mutation'",
    "locations": [
      {
        "line": 2,
        "column": 3
      }
    ],
    "path": [
      "mutation productVariantCreate",
      "productVariantCreate"
    ],
    "extensions": {
      "code": "undefinedField",
      "typeName": "Mutation",
      "fieldName": "productVariantCreate"
    }
  },
  {
    "message": "Variable $input is declared by productVariantCreate but not used",
    "locations": [
      {
        "line": 1,
        "column": 1
      }
    ],
    "path": [
      "mutation productVariantCreate"
    ],
    "extensions": {
      "code": "variableNotUsed",
      "variableName": "input"
    }
  }
]
GraphQL Data: null
GraphQL Extensions: null
2025-08-10 08:54:41,674 - sync_service - INFO - API log added to SAP: shopify - /admin/api/graphql_local - failure
2025-08-10 08:54:41,675 - sync_service - ERROR - Failed to add variant FG-0000705: GraphQL query error for store local: {'message': "Field 'productVariantCreate' doesn't exist on type 'Mutation'", 'locations': [{'line': 2, 'column': 3}], 'path': ['mutation productVariantCreate', 'productVariantCreate'], 'extensions': {'code': 'undefinedField', 'typeName': 'Mutation', 'fieldName': 'productVariantCreate'}}
GraphQL Errors: [
  {
    "message": "Field 'productVariantCreate' doesn't exist on type 'Mutation'",
    "locations": [
      {
        "line": 2,
        "column": 3
      }
    ],
    "path": [
      "mutation productVariantCreate",
      "productVariantCreate"
    ],
    "extensions": {
      "code": "undefinedField",
      "typeName": "Mutation",
      "fieldName": "productVariantCreate"
    }
  },
  {
    "message": "Variable $input is declared by productVariantCreate but not used",
    "locations": [
      {
        "line": 1,
        "column": 1
      }
    ],
    "path": [
      "mutation productVariantCreate"
    ],
    "extensions": {
      "code": "variableNotUsed",
      "variableName": "input"
    }
  }
]
GraphQL Data: null
GraphQL Extensions: null
2025-08-10 08:54:42,453 - sync_service - INFO - Processing product group: ('Morsi Shoes', 'local') with 2 items for store local
2025-08-10 08:54:42,454 - sync_service - INFO - Found existing Shopify product ID: 7526282461250 for Morsi Shoes
2025-08-10 08:54:42,454 - sync_service - INFO - Product Morsi Shoes already exists in store local, adding variants
2025-08-10 08:54:42,455 - sync_service - INFO - API Call: {'service': 'shopify', 'endpoint': 'graphql_local', 'request': {'query': '\n        query GetProduct($id: ID!) {\n            product(id: $id) {\n                id\n                title\n                handle\n                description\n                variants(first: 50) {\n                    edges {\n                        node {\n                            id\n                            sku\n                            price\n                            inventoryItem {\n                                id\n                            }\n                            selectedOptions {\n                                name\n                                value\n                            }\n                        }\n                    }\n                }\n            }\n        }\n        ', 'variables': {'id': 'gid://shopify/Product/7526282461250'}}, 'response': None, 'status': None}
2025-08-10 08:54:47,861 - sync_service - INFO - API Call: {'service': 'shopify', 'endpoint': 'graphql_local', 'request': None, 'response': {'product': {'id': 'gid://shopify/Product/7526282461250', 'title': 'Morsi Shoes', 'handle': 'morsi-shoes', 'description': '', 'variants': {'edges': [{'node': {'id': 'gid://shopify/ProductVariant/42380104663106', 'sku': None, 'price': '0.00', 'inventoryItem': {'id': 'gid://shopify/InventoryItem/44480623640642'}, 'selectedOptions': [{'name': 'Title', 'value': 'Default Title'}]}}]}}}, 'status': 'success'}
2025-08-10 08:54:47,861 - sync_service - INFO - API Call: {'service': 'shopify', 'endpoint': 'graphql_local', 'request': {'query': '\n        query GetProduct($id: ID!) {\n            product(id: $id) {\n                id\n                title\n                handle\n                description\n                variants(first: 50) {\n                    edges {\n                        node {\n                            id\n                            sku\n                            price\n                            inventoryItem {\n                                id\n                            }\n                            selectedOptions {\n                                name\n                                value\n                            }\n                        }\n                    }\n                }\n            }\n        }\n        ', 'variables': {'id': 'gid://shopify/Product/7526282461250'}}, 'response': None, 'status': None}
2025-08-10 08:54:48,341 - sync_service - INFO - API Call: {'service': 'shopify', 'endpoint': 'graphql_local', 'request': None, 'response': {'product': {'id': 'gid://shopify/Product/7526282461250', 'title': 'Morsi Shoes', 'handle': 'morsi-shoes', 'description': '', 'variants': {'edges': [{'node': {'id': 'gid://shopify/ProductVariant/42380104663106', 'sku': None, 'price': '0.00', 'inventoryItem': {'id': 'gid://shopify/InventoryItem/44480623640642'}, 'selectedOptions': [{'name': 'Title', 'value': 'Default Title'}]}}]}}}, 'status': 'success'}
2025-08-10 08:54:48,611 - sync_service - INFO - API log added to SAP: shopify - /admin/api/graphql_local - success
2025-08-10 08:54:48,616 - sync_service - INFO - API Call: {'service': 'shopify', 'endpoint': 'graphql_local', 'request': {'query': '\n        mutation productVariantCreate($input: ProductVariantInput!) {\n            productVariantCreate(input: $input) {\n                productVariant {\n                    id\n                    sku\n                    price\n                    inventoryItem {\n                        id\n                    }\n                    selectedOptions {\n                        name\n                        value\n                    }\n                }\n                userErrors {\n                    field\n                    message\n                }\n            }\n        }\n        ', 'variables': {'input': {'sku': 'FG-0000706', 'price': '1000.0', 'inventoryPolicy': 'DENY', 'inventoryManagement': 'SHOPIFY', 'weight': 0.0, 'weightUnit': 'KILOGRAMS', 'taxable': False, 'productId': 'gid://shopify/Product/7526282461250', 'option1': 'Green', 'option2': None, 'option3': None}}}, 'response': None, 'status': None}
2025-08-10 08:54:49,092 - sync_service - ERROR - GraphQL query error for store local: {'message': "Field 'productVariantCreate' doesn't exist on type 'Mutation'", 'locations': [{'line': 2, 'column': 3}], 'path': ['mutation productVariantCreate', 'productVariantCreate'], 'extensions': {'code': 'undefinedField', 'typeName': 'Mutation', 'fieldName': 'productVariantCreate'}}
GraphQL Errors: [
  {
    "message": "Field 'productVariantCreate' doesn't exist on type 'Mutation'",
    "locations": [
      {
        "line": 2,
        "column": 3
      }
    ],
    "path": [
      "mutation productVariantCreate",
      "productVariantCreate"
    ],
    "extensions": {
      "code": "undefinedField",
      "typeName": "Mutation",
      "fieldName": "productVariantCreate"
    }
  },
  {
    "message": "Variable $input is declared by productVariantCreate but not used",
    "locations": [
      {
        "line": 1,
        "column": 1
      }
    ],
    "path": [
      "mutation productVariantCreate"
    ],
    "extensions": {
      "code": "variableNotUsed",
      "variableName": "input"
    }
  }
]
GraphQL Data: null
GraphQL Extensions: null
2025-08-10 08:54:49,360 - sync_service - INFO - API log added to SAP: shopify - /admin/api/graphql_local - failure
2025-08-10 08:54:49,360 - sync_service - ERROR - Detailed variant creation error for FG-0000706: GraphQL query error for store local: {'message': "Field 'productVariantCreate' doesn't exist on type 'Mutation'", 'locations': [{'line': 2, 'column': 3}], 'path': ['mutation productVariantCreate', 'productVariantCreate'], 'extensions': {'code': 'undefinedField', 'typeName': 'Mutation', 'fieldName': 'productVariantCreate'}}
GraphQL Errors: [
  {
    "message": "Field 'productVariantCreate' doesn't exist on type 'Mutation'",
    "locations": [
      {
        "line": 2,
        "column": 3
      }
    ],
    "path": [
      "mutation productVariantCreate",
      "productVariantCreate"
    ],
    "extensions": {
      "code": "undefinedField",
      "typeName": "Mutation",
      "fieldName": "productVariantCreate"
    }
  },
  {
    "message": "Variable $input is declared by productVariantCreate but not used",
    "locations": [
      {
        "line": 1,
        "column": 1
      }
    ],
    "path": [
      "mutation productVariantCreate"
    ],
    "extensions": {
      "code": "variableNotUsed",
      "variableName": "input"
    }
  }
]
GraphQL Data: null
GraphQL Extensions: null
2025-08-10 08:54:49,628 - sync_service - INFO - API log added to SAP: shopify - /admin/api/graphql_local - failure
2025-08-10 08:54:49,630 - sync_service - ERROR - Failed to add variant FG-0000706: GraphQL query error for store local: {'message': "Field 'productVariantCreate' doesn't exist on type 'Mutation'", 'locations': [{'line': 2, 'column': 3}], 'path': ['mutation productVariantCreate', 'productVariantCreate'], 'extensions': {'code': 'undefinedField', 'typeName': 'Mutation', 'fieldName': 'productVariantCreate'}}
GraphQL Errors: [
  {
    "message": "Field 'productVariantCreate' doesn't exist on type 'Mutation'",
    "locations": [
      {
        "line": 2,
        "column": 3
      }
    ],
    "path": [
      "mutation productVariantCreate",
      "productVariantCreate"
    ],
    "extensions": {
      "code": "undefinedField",
      "typeName": "Mutation",
      "fieldName": "productVariantCreate"
    }
  },
  {
    "message": "Variable $input is declared by productVariantCreate but not used",
    "locations": [
      {
        "line": 1,
        "column": 1
      }
    ],
    "path": [
      "mutation productVariantCreate"
    ],
    "extensions": {
      "code": "variableNotUsed",
      "variableName": "input"
    }
  }
]
GraphQL Data: null
GraphQL Extensions: null
2025-08-10 08:54:49,634 - sync_service - INFO - API Call: {'service': 'shopify', 'endpoint': 'graphql_local', 'request': {'query': '\n        query GetProduct($id: ID!) {\n            product(id: $id) {\n                id\n                title\n                handle\n                description\n                variants(first: 50) {\n                    edges {\n                        node {\n                            id\n                            sku\n                            price\n                            inventoryItem {\n                                id\n                            }\n                            selectedOptions {\n                                name\n                                value\n                            }\n                        }\n                    }\n                }\n            }\n        }\n        ', 'variables': {'id': 'gid://shopify/Product/7526282461250'}}, 'response': None, 'status': None}
2025-08-10 08:54:50,125 - sync_service - INFO - API Call: {'service': 'shopify', 'endpoint': 'graphql_local', 'request': None, 'response': {'product': {'id': 'gid://shopify/Product/7526282461250', 'title': 'Morsi Shoes', 'handle': 'morsi-shoes', 'description': '', 'variants': {'edges': [{'node': {'id': 'gid://shopify/ProductVariant/42380104663106', 'sku': None, 'price': '0.00', 'inventoryItem': {'id': 'gid://shopify/InventoryItem/44480623640642'}, 'selectedOptions': [{'name': 'Title', 'value': 'Default Title'}]}}]}}}, 'status': 'success'}
2025-08-10 08:54:50,405 - sync_service - INFO - API log added to SAP: shopify - /admin/api/graphql_local - success
2025-08-10 08:54:50,408 - sync_service - INFO - API Call: {'service': 'shopify', 'endpoint': 'graphql_local', 'request': {'query': '\n        mutation productVariantCreate($input: ProductVariantInput!) {\n            productVariantCreate(input: $input) {\n                productVariant {\n                    id\n                    sku\n                    price\n                    inventoryItem {\n                        id\n                    }\n                    selectedOptions {\n                        name\n                        value\n                    }\n                }\n                userErrors {\n                    field\n                    message\n                }\n            }\n        }\n        ', 'variables': {'input': {'sku': 'FG-0000707', 'price': '1000.0', 'inventoryPolicy': 'DENY', 'inventoryManagement': 'SHOPIFY', 'weight': 0.0, 'weightUnit': 'KILOGRAMS', 'taxable': False, 'productId': 'gid://shopify/Product/7526282461250', 'option1': 'Beige', 'option2': None, 'option3': None}}}, 'response': None, 'status': None}
2025-08-10 08:54:50,888 - sync_service - ERROR - GraphQL query error for store local: {'message': "Field 'productVariantCreate' doesn't exist on type 'Mutation'", 'locations': [{'line': 2, 'column': 3}], 'path': ['mutation productVariantCreate', 'productVariantCreate'], 'extensions': {'code': 'undefinedField', 'typeName': 'Mutation', 'fieldName': 'productVariantCreate'}}
GraphQL Errors: [
  {
    "message": "Field 'productVariantCreate' doesn't exist on type 'Mutation'",
    "locations": [
      {
        "line": 2,
        "column": 3
      }
    ],
    "path": [
      "mutation productVariantCreate",
      "productVariantCreate"
    ],
    "extensions": {
      "code": "undefinedField",
      "typeName": "Mutation",
      "fieldName": "productVariantCreate"
    }
  },
  {
    "message": "Variable $input is declared by productVariantCreate but not used",
    "locations": [
      {
        "line": 1,
        "column": 1
      }
    ],
    "path": [
      "mutation productVariantCreate"
    ],
    "extensions": {
      "code": "variableNotUsed",
      "variableName": "input"
    }
  }
]
GraphQL Data: null
GraphQL Extensions: null
2025-08-10 08:54:51,157 - sync_service - INFO - API log added to SAP: shopify - /admin/api/graphql_local - failure
2025-08-10 08:54:51,158 - sync_service - ERROR - Detailed variant creation error for FG-0000707: GraphQL query error for store local: {'message': "Field 'productVariantCreate' doesn't exist on type 'Mutation'", 'locations': [{'line': 2, 'column': 3}], 'path': ['mutation productVariantCreate', 'productVariantCreate'], 'extensions': {'code': 'undefinedField', 'typeName': 'Mutation', 'fieldName': 'productVariantCreate'}}
GraphQL Errors: [
  {
    "message": "Field 'productVariantCreate' doesn't exist on type 'Mutation'",
    "locations": [
      {
        "line": 2,
        "column": 3
      }
    ],
    "path": [
      "mutation productVariantCreate",
      "productVariantCreate"
    ],
    "extensions": {
      "code": "undefinedField",
      "typeName": "Mutation",
      "fieldName": "productVariantCreate"
    }
  },
  {
    "message": "Variable $input is declared by productVariantCreate but not used",
    "locations": [
      {
        "line": 1,
        "column": 1
      }
    ],
    "path": [
      "mutation productVariantCreate"
    ],
    "extensions": {
      "code": "variableNotUsed",
      "variableName": "input"
    }
  }
]
GraphQL Data: null
GraphQL Extensions: null
2025-08-10 08:54:51,452 - sync_service - INFO - API log added to SAP: shopify - /admin/api/graphql_local - failure
2025-08-10 08:54:51,453 - sync_service - ERROR - Failed to add variant FG-0000707: GraphQL query error for store local: {'message': "Field 'productVariantCreate' doesn't exist on type 'Mutation'", 'locations': [{'line': 2, 'column': 3}], 'path': ['mutation productVariantCreate', 'productVariantCreate'], 'extensions': {'code': 'undefinedField', 'typeName': 'Mutation', 'fieldName': 'productVariantCreate'}}
GraphQL Errors: [
  {
    "message": "Field 'productVariantCreate' doesn't exist on type 'Mutation'",
    "locations": [
      {
        "line": 2,
        "column": 3
      }
    ],
    "path": [
      "mutation productVariantCreate",
      "productVariantCreate"
    ],
    "extensions": {
      "code": "undefinedField",
      "typeName": "Mutation",
      "fieldName": "productVariantCreate"
    }
  },
  {
    "message": "Variable $input is declared by productVariantCreate but not used",
    "locations": [
      {
        "line": 1,
        "column": 1
      }
    ],
    "path": [
      "mutation productVariantCreate"
    ],
    "extensions": {
      "code": "variableNotUsed",
      "variableName": "input"
    }
  }
]
GraphQL Data: null
GraphQL Extensions: null
2025-08-10 08:54:52,232 - sync_service - INFO - Sync Event: {'sync_type': 'multi_store_new_items_sap_to_shopify', 'items_processed': 8, 'success_count': 0, 'error_count': 13, 'details': None}
2025-08-10 08:54:52,234 - sync_service - INFO - Multi-store new items sync completed: 8 processed, 0 successful, 13 errors
2025-08-10 08:54:52,234 - sync_service - INFO - Starting stock change sync...
2025-08-10 08:54:52,235 - sync_service - INFO - Starting stock change sync using MASHURA_StockChangeB1SLQuery view
2025-08-10 08:54:52,236 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'view.svc/MASHURA_StockChangeB1SLQuery', 'request': {'method': 'GET', 'url': 'https://10.0.0.100:50000/b1s/v1/view.svc/MASHURA_StockChangeB1SLQuery', 'data': None, 'params': {'$top': 50}}, 'response': None, 'status': None}
2025-08-10 08:54:52,503 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'view.svc/MASHURA_StockChangeB1SLQuery', 'request': None, 'response': {'odata.metadata': 'https://10.0.0.100:50000/b1s/v1/view.svc/$metadata#MASHURA_StockChangeB1SLQuery', 'value': []}, 'status': 'success'}
2025-08-10 08:54:52,504 - sync_service - INFO - No stock changes found in the view.
2025-08-10 08:54:52,505 - sync_service - INFO - Starting item changes sync...
2025-08-10 08:54:52,506 - sync_service - INFO - Starting item changes sync from SAP to Shopify
2025-08-10 08:54:52,507 - sync_service - INFO - Processing item changes for store: local
2025-08-10 08:54:52,507 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': "view.svc/MASHURA_ItemChangeB1SLQuery?$filter=Shopify_Store eq 'local'", 'request': {'method': 'GET', 'url': "https://10.0.0.100:50000/b1s/v1/view.svc/MASHURA_ItemChangeB1SLQuery?$filter=Shopify_Store eq 'local'", 'data': None, 'params': None}, 'response': None, 'status': None}
2025-08-10 08:54:53,224 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': "view.svc/MASHURA_ItemChangeB1SLQuery?$filter=Shopify_Store eq 'local'", 'request': None, 'response': {'odata.metadata': 'https://10.0.0.100:50000/b1s/v1/view.svc/$metadata#MASHURA_ItemChangeB1SLQuery', 'value': []}, 'status': 'success'}
2025-08-10 08:54:53,224 - sync_service - INFO - Found 0 item changes for store local
2025-08-10 08:54:53,225 - sync_service - INFO - No item changes found for store local
2025-08-10 08:54:53,225 - sync_service - INFO - Sync Event: {'sync_type': 'item_changes_sap_to_shopify', 'items_processed': 0, 'success_count': 0, 'error_count': 0, 'details': None}
2025-08-10 08:54:53,226 - sync_service - INFO - Item changes sync completed: 0 processed, 0 successful, 0 errors
2025-08-10 08:54:53,226 - sync_service - INFO - Starting price changes sync...
2025-08-10 08:54:53,226 - sync_service - INFO - Starting price changes sync from SAP to Shopify
2025-08-10 08:54:53,227 - sync_service - INFO - Processing price changes for store: local
2025-08-10 08:54:53,227 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': "view.svc/MASHURA_PriceChangeB1SLQuery?$filter=Shopify_Store eq 'local'", 'request': {'method': 'GET', 'url': "https://10.0.0.100:50000/b1s/v1/view.svc/MASHURA_PriceChangeB1SLQuery?$filter=Shopify_Store eq 'local'", 'data': None, 'params': None}, 'response': None, 'status': None}
2025-08-10 08:54:53,892 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': "view.svc/MASHURA_PriceChangeB1SLQuery?$filter=Shopify_Store eq 'local'", 'request': None, 'response': {'odata.metadata': 'https://10.0.0.100:50000/b1s/v1/view.svc/$metadata#MASHURA_PriceChangeB1SLQuery', 'value': []}, 'status': 'success'}
2025-08-10 08:54:53,893 - sync_service - INFO - Found 0 price changes for store local
2025-08-10 08:54:53,894 - sync_service - INFO - No price changes found for store local
2025-08-10 08:54:53,894 - sync_service - INFO - Sync Event: {'sync_type': 'price_changes_sap_to_shopify', 'items_processed': 0, 'success_count': 0, 'error_count': 0, 'details': None}
2025-08-10 08:54:53,895 - sync_service - INFO - Price changes sync completed: 0 processed, 0 successful, 0 errors
2025-08-10 08:55:18,886 - sync_service - INFO - Initialized Shopify client for store: Local Store (local)
2025-08-10 08:55:18,945 - sync_service - INFO - Starting all syncs...
2025-08-10 08:55:18,946 - sync_service - INFO - Starting new items sync...
2025-08-10 08:55:18,949 - sync_service - INFO - Starting multi-store new items sync from SAP to Shopify
2025-08-10 08:55:18,953 - sync_service - INFO - Fetching new items for store: local
2025-08-10 08:55:18,958 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'login', 'request': {'company': 'JudeBenHalim_Test', 'user': 'manager'}, 'response': None, 'status': None}
2025-08-10 08:55:19,760 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'login', 'request': None, 'response': {'status': 'success'}, 'status': 'success'}
2025-08-10 08:55:19,761 - sync_service - INFO - SAP login successful
2025-08-10 08:55:19,763 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': "view.svc/MASHURA_New_ItemsB1SLQuery?$filter=Shopify_Store eq 'local'&$orderby=MainProduct", 'request': {'method': 'GET', 'url': "https://10.0.0.100:50000/b1s/v1/view.svc/MASHURA_New_ItemsB1SLQuery?$filter=Shopify_Store eq 'local'&$orderby=MainProduct", 'data': None, 'params': None}, 'response': None, 'status': None}
2025-08-10 08:58:20,110 - sync_service - INFO - Initialized Shopify client for store: Local Store (local)
2025-08-10 08:58:20,158 - sync_service - INFO - Starting all syncs...
2025-08-10 08:58:20,159 - sync_service - INFO - Starting new items sync...
2025-08-10 08:58:20,160 - sync_service - INFO - Starting multi-store new items sync from SAP to Shopify
2025-08-10 08:58:20,161 - sync_service - INFO - Fetching new items for store: local
2025-08-10 08:58:20,163 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'login', 'request': {'company': 'JudeBenHalim_Test', 'user': 'manager'}, 'response': None, 'status': None}
2025-08-10 08:58:20,990 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'login', 'request': None, 'response': {'status': 'success'}, 'status': 'success'}
2025-08-10 08:58:20,991 - sync_service - INFO - SAP login successful
2025-08-10 08:58:20,994 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': "view.svc/MASHURA_New_ItemsB1SLQuery?$filter=Shopify_Store eq 'local'&$orderby=MainProduct", 'request': {'method': 'GET', 'url': "https://10.0.0.100:50000/b1s/v1/view.svc/MASHURA_New_ItemsB1SLQuery?$filter=Shopify_Store eq 'local'&$orderby=MainProduct", 'data': None, 'params': None}, 'response': None, 'status': None}
2025-08-10 08:58:21,747 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': "view.svc/MASHURA_New_ItemsB1SLQuery?$filter=Shopify_Store eq 'local'&$orderby=MainProduct", 'request': None, 'response': {'odata.metadata': 'https://10.0.0.100:50000/b1s/v1/view.svc/$metadata#MASHURA_New_ItemsB1SLQuery', 'value': [{'itemcode': 'FG-0000704', 'ItemName': 'Morsi Bracelet', 'MainProduct': None, 'Color': None, 'Price': 3200.0, 'Shopify_Store': 'local', 'Shopify_ProductCode': '7526282166338', 'Status': 'existing', 'Barcode': '645464644', 'id__': 1}, {'itemcode': 'FG-0000708', 'ItemName': 'Morsi Socks', 'MainProduct': None, 'Color': None, 'Price': 200.0, 'Shopify_Store': 'local', 'Shopify_ProductCode': '7526282199106', 'Status': 'existing', 'Barcode': None, 'id__': 2}, {'itemcode': 'FG-0000711', 'ItemName': 'Morsi Keyboard', 'MainProduct': None, 'Color': None, 'Price': 1000.0, 'Shopify_Store': 'local', 'Shopify_ProductCode': '7526282231874', 'Status': 'existing', 'Barcode': None, 'id__': 3}, {'itemcode': 'FG-0000712', 'ItemName': 'AA-Iron Man Necklace', 'MainProduct': None, 'Color': None, 'Price': 1000.0, 'Shopify_Store': 'local', 'Shopify_ProductCode': '7526282264642', 'Status': 'existing', 'Barcode': '203090', 'id__': 4}, {'itemcode': 'FG-0000713', 'ItemName': 'AA-Ring Red', 'MainProduct': 'Iron Man Necklace', 'Color': 'Red', 'Price': 2000.0, 'Shopify_Store': 'local', 'Shopify_ProductCode': '7526282330178', 'Status': 'existing', 'Barcode': '203090', 'id__': 5}, {'itemcode': 'FG-0000714', 'ItemName': 'AA-Ring Blue', 'MainProduct': 'Iron Man Necklace', 'Color': 'Blue', 'Price': 3000.0, 'Shopify_Store': 'local', 'Shopify_ProductCode': '7526282330178', 'Status': 'existing', 'Barcode': '203090', 'id__': 6}, {'itemcode': 'FG-0000709', 'ItemName': 'Morsi-Laptop-Black', 'MainProduct': 'Morsi Laptop', 'Color': 'Black', 'Price': 1000.0, 'Shopify_Store': 'local', 'Shopify_ProductCode': '7526282362946', 'Status': 'existing', 'Barcode': None, 'id__': 7}, {'itemcode': 'FG-0000710', 'ItemName': 'Morsi-Laptop-Grey', 'MainProduct': 'Morsi Laptop', 'Color': 'Grey', 'Price': 1000.0, 'Shopify_Store': 'local', 'Shopify_ProductCode': '7526282362946', 'Status': 'existing', 'Barcode': None, 'id__': 8}, {'itemcode': 'FG-0000702', 'ItemName': 'Morsi-Necklace-Black', 'MainProduct': 'Morsi Necklace', 'Color': 'Black', 'Price': 2500.0, 'Shopify_Store': 'local', 'Shopify_ProductCode': '7526282395714', 'Status': 'existing', 'Barcode': '2123243245', 'id__': 9}, {'itemcode': 'FG-0000703', 'ItemName': 'Morsi-Necklace-White', 'MainProduct': 'Morsi Necklace', 'Color': 'White', 'Price': 2500.0, 'Shopify_Store': 'local', 'Shopify_ProductCode': '7526282395714', 'Status': 'existing', 'Barcode': '242342342', 'id__': 10}, {'itemcode': 'FG-0000705', 'ItemName': 'Morsi-Necklace-Green', 'MainProduct': 'Morsi Necklace', 'Color': 'Green', 'Price': 2500.0, 'Shopify_Store': 'local', 'Shopify_ProductCode': '7526282395714', 'Status': 'existing', 'Barcode': None, 'id__': 11}, {'itemcode': 'FG-0000706', 'ItemName': 'Morsi-Shoes-Green', 'MainProduct': 'Morsi Shoes', 'Color': 'Green', 'Price': 1000.0, 'Shopify_Store': 'local', 'Shopify_ProductCode': '7526282461250', 'Status': 'existing', 'Barcode': None, 'id__': 12}, {'itemcode': 'FG-0000707', 'ItemName': 'Morsi-Shoes-Beige', 'MainProduct': 'Morsi Shoes', 'Color': 'Beige', 'Price': 1000.0, 'Shopify_Store': 'local', 'Shopify_ProductCode': '7526282461250', 'Status': 'existing', 'Barcode': None, 'id__': 13}]}, 'status': 'success'}
2025-08-10 08:58:21,751 - sync_service - INFO - Product group: ('FG-0000704', 'local') has 1 items
2025-08-10 08:58:21,755 - sync_service - INFO - Product group: ('FG-0000708', 'local') has 1 items
2025-08-10 08:58:21,756 - sync_service - INFO - Product group: ('FG-0000711', 'local') has 1 items
2025-08-10 08:58:21,757 - sync_service - INFO - Product group: ('FG-0000712', 'local') has 1 items
2025-08-10 08:58:21,757 - sync_service - INFO - Product group: ('Iron Man Necklace', 'local') has 2 items
2025-08-10 08:58:21,758 - sync_service - INFO - Product group: ('Morsi Laptop', 'local') has 2 items
2025-08-10 08:58:21,759 - sync_service - INFO - Product group: ('Morsi Necklace', 'local') has 3 items
2025-08-10 08:58:21,760 - sync_service - INFO - Product group: ('Morsi Shoes', 'local') has 2 items
2025-08-10 08:58:21,761 - sync_service - INFO - Grouped 13 items into 8 product groups for store local
2025-08-10 08:58:21,762 - sync_service - INFO - Processing product group: ('FG-0000704', 'local') with 1 items for store local
2025-08-10 08:58:21,762 - sync_service - INFO - Found existing Shopify product ID: 7526282166338 for None
2025-08-10 08:58:21,764 - sync_service - INFO - Product None already exists in store local, adding variants
2025-08-10 08:58:21,765 - sync_service - INFO - API Call: {'service': 'shopify', 'endpoint': 'graphql_local', 'request': {'query': '\n        query GetProduct($id: ID!) {\n            product(id: $id) {\n                id\n                title\n                handle\n                description\n                variants(first: 50) {\n                    edges {\n                        node {\n                            id\n                            sku\n                            price\n                            inventoryItem {\n                                id\n                            }\n                            selectedOptions {\n                                name\n                                value\n                            }\n                        }\n                    }\n                }\n            }\n        }\n        ', 'variables': {'id': 'gid://shopify/Product/7526282166338'}}, 'response': None, 'status': None}
2025-08-10 08:58:22,306 - sync_service - INFO - API Call: {'service': 'shopify', 'endpoint': 'graphql_local', 'request': None, 'response': {'product': {'id': 'gid://shopify/Product/7526282166338', 'title': 'Morsi Bracelet', 'handle': 'morsi-bracelet', 'description': '', 'variants': {'edges': [{'node': {'id': 'gid://shopify/ProductVariant/42380103942210', 'sku': None, 'price': '0.00', 'inventoryItem': {'id': 'gid://shopify/InventoryItem/44480622919746'}, 'selectedOptions': [{'name': 'Title', 'value': 'Default Title'}]}}]}}}, 'status': 'success'}
2025-08-10 08:58:22,307 - sync_service - INFO - API Call: {'service': 'shopify', 'endpoint': 'graphql_local', 'request': {'query': '\n        query GetProduct($id: ID!) {\n            product(id: $id) {\n                id\n                title\n                handle\n                description\n                variants(first: 50) {\n                    edges {\n                        node {\n                            id\n                            sku\n                            price\n                            inventoryItem {\n                                id\n                            }\n                            selectedOptions {\n                                name\n                                value\n                            }\n                        }\n                    }\n                }\n            }\n        }\n        ', 'variables': {'id': 'gid://shopify/Product/7526282166338'}}, 'response': None, 'status': None}
2025-08-10 08:58:22,845 - sync_service - INFO - API Call: {'service': 'shopify', 'endpoint': 'graphql_local', 'request': None, 'response': {'product': {'id': 'gid://shopify/Product/7526282166338', 'title': 'Morsi Bracelet', 'handle': 'morsi-bracelet', 'description': '', 'variants': {'edges': [{'node': {'id': 'gid://shopify/ProductVariant/42380103942210', 'sku': None, 'price': '0.00', 'inventoryItem': {'id': 'gid://shopify/InventoryItem/44480622919746'}, 'selectedOptions': [{'name': 'Title', 'value': 'Default Title'}]}}]}}}, 'status': 'success'}
2025-08-10 08:58:23,592 - sync_service - INFO - SAP logging client login successful
2025-08-10 08:58:24,279 - sync_service - INFO - API log added to SAP: shopify - /admin/api/graphql_local - success
2025-08-10 08:58:24,281 - sync_service - INFO - API Call: {'service': 'shopify', 'endpoint': 'graphql_local', 'request': {'query': '\n        mutation productVariantCreate($input: ProductVariantInput!) {\n            productVariantCreate(input: $input) {\n                productVariant {\n                    id\n                    sku\n                    price\n                    inventoryItem {\n                        id\n                    }\n                    selectedOptions {\n                        name\n                        value\n                    }\n                }\n                userErrors {\n                    field\n                    message\n                }\n            }\n        }\n        ', 'variables': {'input': {'sku': 'FG-0000704', 'price': '3200.0', 'inventoryPolicy': 'DENY', 'inventoryManagement': 'SHOPIFY', 'weight': 0.0, 'weightUnit': 'KILOGRAMS', 'taxable': False, 'barcode': '645464644', 'productId': 'gid://shopify/Product/7526282166338'}}}, 'response': None, 'status': None}
2025-08-10 08:58:24,860 - sync_service - INFO - API Call: {'service': 'shopify', 'endpoint': 'graphql_local', 'request': None, 'response': {'productVariantCreate': {'productVariant': None, 'userErrors': [{'field': None, 'message': "The variant 'Default Title' already exists."}]}}, 'status': 'success'}
2025-08-10 08:58:24,862 - sync_service - INFO - Variant FG-0000704 already exists, treating as success
2025-08-10 08:58:24,864 - sync_service - INFO - Successfully added variant FG-0000704 to existing product
2025-08-10 08:58:27,658 - sync_service - INFO - Processing product group: ('FG-0000708', 'local') with 1 items for store local
2025-08-10 08:58:27,659 - sync_service - INFO - Found existing Shopify product ID: 7526282199106 for None
2025-08-10 08:58:27,659 - sync_service - INFO - Product None already exists in store local, adding variants
2025-08-10 08:58:27,661 - sync_service - INFO - API Call: {'service': 'shopify', 'endpoint': 'graphql_local', 'request': {'query': '\n        query GetProduct($id: ID!) {\n            product(id: $id) {\n                id\n                title\n                handle\n                description\n                variants(first: 50) {\n                    edges {\n                        node {\n                            id\n                            sku\n                            price\n                            inventoryItem {\n                                id\n                            }\n                            selectedOptions {\n                                name\n                                value\n                            }\n                        }\n                    }\n                }\n            }\n        }\n        ', 'variables': {'id': 'gid://shopify/Product/7526282199106'}}, 'response': None, 'status': None}
2025-08-10 08:58:28,195 - sync_service - INFO - API Call: {'service': 'shopify', 'endpoint': 'graphql_local', 'request': None, 'response': {'product': {'id': 'gid://shopify/Product/7526282199106', 'title': 'Morsi Socks', 'handle': 'morsi-socks', 'description': '', 'variants': {'edges': [{'node': {'id': 'gid://shopify/ProductVariant/42380103974978', 'sku': None, 'price': '0.00', 'inventoryItem': {'id': 'gid://shopify/InventoryItem/44480622952514'}, 'selectedOptions': [{'name': 'Title', 'value': 'Default Title'}]}}]}}}, 'status': 'success'}
2025-08-10 08:58:28,198 - sync_service - INFO - API Call: {'service': 'shopify', 'endpoint': 'graphql_local', 'request': {'query': '\n        query GetProduct($id: ID!) {\n            product(id: $id) {\n                id\n                title\n                handle\n                description\n                variants(first: 50) {\n                    edges {\n                        node {\n                            id\n                            sku\n                            price\n                            inventoryItem {\n                                id\n                            }\n                            selectedOptions {\n                                name\n                                value\n                            }\n                        }\n                    }\n                }\n            }\n        }\n        ', 'variables': {'id': 'gid://shopify/Product/7526282199106'}}, 'response': None, 'status': None}
2025-08-10 08:58:28,736 - sync_service - INFO - API Call: {'service': 'shopify', 'endpoint': 'graphql_local', 'request': None, 'response': {'product': {'id': 'gid://shopify/Product/7526282199106', 'title': 'Morsi Socks', 'handle': 'morsi-socks', 'description': '', 'variants': {'edges': [{'node': {'id': 'gid://shopify/ProductVariant/42380103974978', 'sku': None, 'price': '0.00', 'inventoryItem': {'id': 'gid://shopify/InventoryItem/44480622952514'}, 'selectedOptions': [{'name': 'Title', 'value': 'Default Title'}]}}]}}}, 'status': 'success'}
2025-08-10 08:58:29,463 - sync_service - INFO - API log added to SAP: shopify - /admin/api/graphql_local - success
2025-08-10 08:58:29,467 - sync_service - INFO - API Call: {'service': 'shopify', 'endpoint': 'graphql_local', 'request': {'query': '\n        mutation productVariantCreate($input: ProductVariantInput!) {\n            productVariantCreate(input: $input) {\n                productVariant {\n                    id\n                    sku\n                    price\n                    inventoryItem {\n                        id\n                    }\n                    selectedOptions {\n                        name\n                        value\n                    }\n                }\n                userErrors {\n                    field\n                    message\n                }\n            }\n        }\n        ', 'variables': {'input': {'sku': 'FG-0000708', 'price': '200.0', 'inventoryPolicy': 'DENY', 'inventoryManagement': 'SHOPIFY', 'weight': 0.0, 'weightUnit': 'KILOGRAMS', 'taxable': False, 'productId': 'gid://shopify/Product/7526282199106'}}}, 'response': None, 'status': None}
2025-08-10 08:58:30,030 - sync_service - INFO - API Call: {'service': 'shopify', 'endpoint': 'graphql_local', 'request': None, 'response': {'productVariantCreate': {'productVariant': None, 'userErrors': [{'field': None, 'message': "The variant 'Default Title' already exists."}]}}, 'status': 'success'}
2025-08-10 08:58:30,032 - sync_service - INFO - Variant FG-0000708 already exists, treating as success
2025-08-10 08:58:30,033 - sync_service - INFO - Successfully added variant FG-0000708 to existing product
2025-08-10 08:58:31,927 - sync_service - INFO - Processing product group: ('FG-0000711', 'local') with 1 items for store local
2025-08-10 08:58:31,928 - sync_service - INFO - Found existing Shopify product ID: 7526282231874 for None
2025-08-10 08:58:31,929 - sync_service - INFO - Product None already exists in store local, adding variants
2025-08-10 08:58:31,930 - sync_service - INFO - API Call: {'service': 'shopify', 'endpoint': 'graphql_local', 'request': {'query': '\n        query GetProduct($id: ID!) {\n            product(id: $id) {\n                id\n                title\n                handle\n                description\n                variants(first: 50) {\n                    edges {\n                        node {\n                            id\n                            sku\n                            price\n                            inventoryItem {\n                                id\n                            }\n                            selectedOptions {\n                                name\n                                value\n                            }\n                        }\n                    }\n                }\n            }\n        }\n        ', 'variables': {'id': 'gid://shopify/Product/7526282231874'}}, 'response': None, 'status': None}
2025-08-10 08:58:41,928 - sync_service - ERROR - GraphQL query error for store local: 
2025-08-10 08:58:42,268 - sync_service - INFO - API log added to SAP: shopify - /admin/api/graphql_local - failure
2025-08-10 08:58:42,269 - sync_service - INFO - API Call: {'service': 'shopify', 'endpoint': 'graphql_local', 'request': {'query': '\n        query GetProduct($id: ID!) {\n            product(id: $id) {\n                id\n                title\n                handle\n                description\n                variants(first: 50) {\n                    edges {\n                        node {\n                            id\n                            sku\n                            price\n                            inventoryItem {\n                                id\n                            }\n                            selectedOptions {\n                                name\n                                value\n                            }\n                        }\n                    }\n                }\n            }\n        }\n        ', 'variables': {'id': 'gid://shopify/Product/7526282231874'}}, 'response': None, 'status': None}
2025-08-10 08:58:42,781 - sync_service - INFO - API Call: {'service': 'shopify', 'endpoint': 'graphql_local', 'request': None, 'response': {'product': {'id': 'gid://shopify/Product/7526282231874', 'title': 'Morsi Keyboard', 'handle': 'morsi-keyboard', 'description': '', 'variants': {'edges': [{'node': {'id': 'gid://shopify/ProductVariant/42380104007746', 'sku': None, 'price': '0.00', 'inventoryItem': {'id': 'gid://shopify/InventoryItem/44480622985282'}, 'selectedOptions': [{'name': 'Title', 'value': 'Default Title'}]}}]}}}, 'status': 'success'}
2025-08-10 08:58:43,503 - sync_service - INFO - API log added to SAP: shopify - /admin/api/graphql_local - success
2025-08-10 08:58:43,504 - sync_service - INFO - API Call: {'service': 'shopify', 'endpoint': 'graphql_local', 'request': {'query': '\n        mutation productVariantCreate($input: ProductVariantInput!) {\n            productVariantCreate(input: $input) {\n                productVariant {\n                    id\n                    sku\n                    price\n                    inventoryItem {\n                        id\n                    }\n                    selectedOptions {\n                        name\n                        value\n                    }\n                }\n                userErrors {\n                    field\n                    message\n                }\n            }\n        }\n        ', 'variables': {'input': {'sku': 'FG-0000711', 'price': '1000.0', 'inventoryPolicy': 'DENY', 'inventoryManagement': 'SHOPIFY', 'weight': 0.0, 'weightUnit': 'KILOGRAMS', 'taxable': False, 'productId': 'gid://shopify/Product/7526282231874'}}}, 'response': None, 'status': None}
2025-08-10 08:58:44,070 - sync_service - INFO - API Call: {'service': 'shopify', 'endpoint': 'graphql_local', 'request': None, 'response': {'productVariantCreate': {'productVariant': None, 'userErrors': [{'field': None, 'message': "The variant 'Default Title' already exists."}]}}, 'status': 'success'}
2025-08-10 08:58:44,071 - sync_service - INFO - Variant FG-0000711 already exists, treating as success
2025-08-10 08:58:44,072 - sync_service - INFO - Successfully added variant FG-0000711 to existing product
2025-08-10 08:58:45,994 - sync_service - INFO - Processing product group: ('FG-0000712', 'local') with 1 items for store local
2025-08-10 08:58:45,994 - sync_service - INFO - Found existing Shopify product ID: 7526282264642 for None
2025-08-10 08:58:45,995 - sync_service - INFO - Product None already exists in store local, adding variants
2025-08-10 08:58:45,996 - sync_service - INFO - API Call: {'service': 'shopify', 'endpoint': 'graphql_local', 'request': {'query': '\n        query GetProduct($id: ID!) {\n            product(id: $id) {\n                id\n                title\n                handle\n                description\n                variants(first: 50) {\n                    edges {\n                        node {\n                            id\n                            sku\n                            price\n                            inventoryItem {\n                                id\n                            }\n                            selectedOptions {\n                                name\n                                value\n                            }\n                        }\n                    }\n                }\n            }\n        }\n        ', 'variables': {'id': 'gid://shopify/Product/7526282264642'}}, 'response': None, 'status': None}
2025-08-10 08:58:46,519 - sync_service - INFO - API Call: {'service': 'shopify', 'endpoint': 'graphql_local', 'request': None, 'response': {'product': {'id': 'gid://shopify/Product/7526282264642', 'title': 'AA-Iron Man Necklace', 'handle': 'aa-iron-man-necklace', 'description': '', 'variants': {'edges': [{'node': {'id': 'gid://shopify/ProductVariant/42380104040514', 'sku': None, 'price': '0.00', 'inventoryItem': {'id': 'gid://shopify/InventoryItem/44480623018050'}, 'selectedOptions': [{'name': 'Title', 'value': 'Default Title'}]}}]}}}, 'status': 'success'}
2025-08-10 08:58:46,519 - sync_service - INFO - API Call: {'service': 'shopify', 'endpoint': 'graphql_local', 'request': {'query': '\n        query GetProduct($id: ID!) {\n            product(id: $id) {\n                id\n                title\n                handle\n                description\n                variants(first: 50) {\n                    edges {\n                        node {\n                            id\n                            sku\n                            price\n                            inventoryItem {\n                                id\n                            }\n                            selectedOptions {\n                                name\n                                value\n                            }\n                        }\n                    }\n                }\n            }\n        }\n        ', 'variables': {'id': 'gid://shopify/Product/7526282264642'}}, 'response': None, 'status': None}
2025-08-10 08:58:47,104 - sync_service - INFO - API Call: {'service': 'shopify', 'endpoint': 'graphql_local', 'request': None, 'response': {'product': {'id': 'gid://shopify/Product/7526282264642', 'title': 'AA-Iron Man Necklace', 'handle': 'aa-iron-man-necklace', 'description': '', 'variants': {'edges': [{'node': {'id': 'gid://shopify/ProductVariant/42380104040514', 'sku': None, 'price': '0.00', 'inventoryItem': {'id': 'gid://shopify/InventoryItem/44480623018050'}, 'selectedOptions': [{'name': 'Title', 'value': 'Default Title'}]}}]}}}, 'status': 'success'}
2025-08-10 08:58:47,818 - sync_service - INFO - API log added to SAP: shopify - /admin/api/graphql_local - success
2025-08-10 08:58:47,819 - sync_service - INFO - API Call: {'service': 'shopify', 'endpoint': 'graphql_local', 'request': {'query': '\n        mutation productVariantCreate($input: ProductVariantInput!) {\n            productVariantCreate(input: $input) {\n                productVariant {\n                    id\n                    sku\n                    price\n                    inventoryItem {\n                        id\n                    }\n                    selectedOptions {\n                        name\n                        value\n                    }\n                }\n                userErrors {\n                    field\n                    message\n                }\n            }\n        }\n        ', 'variables': {'input': {'sku': 'FG-0000712', 'price': '1000.0', 'inventoryPolicy': 'DENY', 'inventoryManagement': 'SHOPIFY', 'weight': 0.0, 'weightUnit': 'KILOGRAMS', 'taxable': False, 'barcode': '203090', 'productId': 'gid://shopify/Product/7526282264642'}}}, 'response': None, 'status': None}
2025-08-10 08:58:48,393 - sync_service - INFO - API Call: {'service': 'shopify', 'endpoint': 'graphql_local', 'request': None, 'response': {'productVariantCreate': {'productVariant': None, 'userErrors': [{'field': None, 'message': "The variant 'Default Title' already exists."}]}}, 'status': 'success'}
2025-08-10 08:58:48,394 - sync_service - INFO - Variant FG-0000712 already exists, treating as success
2025-08-10 08:58:48,395 - sync_service - INFO - Successfully added variant FG-0000712 to existing product
2025-08-10 08:58:50,209 - sync_service - INFO - Processing product group: ('Iron Man Necklace', 'local') with 2 items for store local
2025-08-10 08:58:50,210 - sync_service - INFO - Found existing Shopify product ID: 7526282330178 for Iron Man Necklace
2025-08-10 08:58:50,211 - sync_service - INFO - Product Iron Man Necklace already exists in store local, adding variants
2025-08-10 08:58:50,212 - sync_service - INFO - API Call: {'service': 'shopify', 'endpoint': 'graphql_local', 'request': {'query': '\n        query GetProduct($id: ID!) {\n            product(id: $id) {\n                id\n                title\n                handle\n                description\n                variants(first: 50) {\n                    edges {\n                        node {\n                            id\n                            sku\n                            price\n                            inventoryItem {\n                                id\n                            }\n                            selectedOptions {\n                                name\n                                value\n                            }\n                        }\n                    }\n                }\n            }\n        }\n        ', 'variables': {'id': 'gid://shopify/Product/7526282330178'}}, 'response': None, 'status': None}
2025-08-10 08:58:55,193 - sync_service - INFO - API Call: {'service': 'shopify', 'endpoint': 'graphql_local', 'request': None, 'response': {'product': {'id': 'gid://shopify/Product/7526282330178', 'title': 'Iron Man Necklace', 'handle': 'iron-man-necklace', 'description': '', 'variants': {'edges': [{'node': {'id': 'gid://shopify/ProductVariant/42380104106050', 'sku': None, 'price': '0.00', 'inventoryItem': {'id': 'gid://shopify/InventoryItem/44480623083586'}, 'selectedOptions': [{'name': 'Title', 'value': 'Default Title'}]}}]}}}, 'status': 'success'}
2025-08-10 08:58:55,195 - sync_service - INFO - API Call: {'service': 'shopify', 'endpoint': 'graphql_local', 'request': {'query': '\n        query GetProduct($id: ID!) {\n            product(id: $id) {\n                id\n                title\n                handle\n                description\n                variants(first: 50) {\n                    edges {\n                        node {\n                            id\n                            sku\n                            price\n                            inventoryItem {\n                                id\n                            }\n                            selectedOptions {\n                                name\n                                value\n                            }\n                        }\n                    }\n                }\n            }\n        }\n        ', 'variables': {'id': 'gid://shopify/Product/7526282330178'}}, 'response': None, 'status': None}
2025-08-10 08:58:55,740 - sync_service - INFO - API Call: {'service': 'shopify', 'endpoint': 'graphql_local', 'request': None, 'response': {'product': {'id': 'gid://shopify/Product/7526282330178', 'title': 'Iron Man Necklace', 'handle': 'iron-man-necklace', 'description': '', 'variants': {'edges': [{'node': {'id': 'gid://shopify/ProductVariant/42380104106050', 'sku': None, 'price': '0.00', 'inventoryItem': {'id': 'gid://shopify/InventoryItem/44480623083586'}, 'selectedOptions': [{'name': 'Title', 'value': 'Default Title'}]}}]}}}, 'status': 'success'}
2025-08-10 08:58:56,087 - sync_service - INFO - API log added to SAP: shopify - /admin/api/graphql_local - success
2025-08-10 08:58:56,088 - sync_service - INFO - API Call: {'service': 'shopify', 'endpoint': 'graphql_local', 'request': {'query': '\n        mutation productVariantCreate($input: ProductVariantInput!) {\n            productVariantCreate(input: $input) {\n                productVariant {\n                    id\n                    sku\n                    price\n                    inventoryItem {\n                        id\n                    }\n                    selectedOptions {\n                        name\n                        value\n                    }\n                }\n                userErrors {\n                    field\n                    message\n                }\n            }\n        }\n        ', 'variables': {'input': {'sku': 'FG-0000713', 'price': '2000.0', 'inventoryPolicy': 'DENY', 'inventoryManagement': 'SHOPIFY', 'weight': 0.0, 'weightUnit': 'KILOGRAMS', 'taxable': False, 'barcode': '203090', 'options': ['Red'], 'productId': 'gid://shopify/Product/7526282330178'}}}, 'response': None, 'status': None}
2025-08-10 08:58:56,854 - sync_service - INFO - API Call: {'service': 'shopify', 'endpoint': 'graphql_local', 'request': None, 'response': {'productVariantCreate': {'productVariant': {'id': 'gid://shopify/ProductVariant/42380109283394', 'sku': 'FG-0000713', 'price': '2000.00', 'inventoryItem': {'id': 'gid://shopify/InventoryItem/44480628260930'}, 'selectedOptions': [{'name': 'Title', 'value': 'Red'}]}, 'userErrors': []}}, 'status': 'success'}
2025-08-10 08:58:56,856 - sync_service - INFO - API Call: {'service': 'shopify', 'endpoint': 'graphql_local', 'request': {'query': '\n        mutation productVariantUpdate($input: ProductVariantInput!) {\n            productVariantUpdate(input: $input) {\n                productVariant {\n                    id\n                    sku\n                    title\n                    selectedOptions {\n                        name\n                        value\n                    }\n                }\n                userErrors {\n                    field\n                    message\n                }\n            }\n        }\n        ', 'variables': {'input': {'title': 'Red', 'id': 'gid://shopify/ProductVariant/42380109283394'}}}, 'response': None, 'status': None}
2025-08-10 08:58:57,442 - sync_service - INFO - API Call: {'service': 'shopify', 'endpoint': 'graphql_local', 'request': None, 'response': {'productVariantUpdate': {'productVariant': {'id': 'gid://shopify/ProductVariant/42380109283394', 'sku': 'FG-0000713', 'title': 'Red', 'selectedOptions': [{'name': 'Title', 'value': 'Red'}]}, 'userErrors': []}}, 'status': 'success'}
2025-08-10 08:58:57,443 - sync_service - INFO - Updated variant FG-0000713 title to 'Red'
2025-08-10 08:58:58,169 - sync_service - INFO - API log added to SAP: shopify - /admin/api/graphql_local - success
2025-08-10 08:58:58,921 - sync_service - INFO - API log added to SAP: shopify - /admin/api/graphql_local - failure
2025-08-10 08:58:58,924 - sync_service - ERROR - Error adding variant to product in store local: name 'inventory_quantity' is not defined
2025-08-10 08:58:58,925 - sync_service - ERROR - Failed to add variant FG-0000713: name 'inventory_quantity' is not defined
2025-08-10 08:58:58,926 - sync_service - INFO - API Call: {'service': 'shopify', 'endpoint': 'graphql_local', 'request': {'query': '\n        query GetProduct($id: ID!) {\n            product(id: $id) {\n                id\n                title\n                handle\n                description\n                variants(first: 50) {\n                    edges {\n                        node {\n                            id\n                            sku\n                            price\n                            inventoryItem {\n                                id\n                            }\n                            selectedOptions {\n                                name\n                                value\n                            }\n                        }\n                    }\n                }\n            }\n        }\n        ', 'variables': {'id': 'gid://shopify/Product/7526282330178'}}, 'response': None, 'status': None}
2025-08-10 08:59:08,943 - sync_service - ERROR - GraphQL query error for store local: 
2025-08-10 08:59:09,269 - sync_service - INFO - API log added to SAP: shopify - /admin/api/graphql_local - failure
2025-08-10 08:59:09,587 - sync_service - INFO - API log added to SAP: shopify - /admin/api/graphql_local - success
2025-08-10 08:59:09,588 - sync_service - INFO - API Call: {'service': 'shopify', 'endpoint': 'graphql_local', 'request': {'query': '\n        mutation productVariantCreate($input: ProductVariantInput!) {\n            productVariantCreate(input: $input) {\n                productVariant {\n                    id\n                    sku\n                    price\n                    inventoryItem {\n                        id\n                    }\n                    selectedOptions {\n                        name\n                        value\n                    }\n                }\n                userErrors {\n                    field\n                    message\n                }\n            }\n        }\n        ', 'variables': {'input': {'sku': 'FG-0000714', 'price': '3000.0', 'inventoryPolicy': 'DENY', 'inventoryManagement': 'SHOPIFY', 'weight': 0.0, 'weightUnit': 'KILOGRAMS', 'taxable': False, 'barcode': '203090', 'options': ['Blue'], 'productId': 'gid://shopify/Product/7526282330178'}}}, 'response': None, 'status': None}
2025-08-10 08:59:10,723 - sync_service - INFO - API Call: {'service': 'shopify', 'endpoint': 'graphql_local', 'request': None, 'response': {'productVariantCreate': {'productVariant': {'id': 'gid://shopify/ProductVariant/42380109316162', 'sku': 'FG-0000714', 'price': '3000.00', 'inventoryItem': {'id': 'gid://shopify/InventoryItem/44480628293698'}, 'selectedOptions': [{'name': 'Title', 'value': 'Blue'}]}, 'userErrors': []}}, 'status': 'success'}
2025-08-10 08:59:10,724 - sync_service - INFO - API Call: {'service': 'shopify', 'endpoint': 'graphql_local', 'request': {'query': '\n        mutation productVariantUpdate($input: ProductVariantInput!) {\n            productVariantUpdate(input: $input) {\n                productVariant {\n                    id\n                    sku\n                    title\n                    selectedOptions {\n                        name\n                        value\n                    }\n                }\n                userErrors {\n                    field\n                    message\n                }\n            }\n        }\n        ', 'variables': {'input': {'title': 'Blue', 'id': 'gid://shopify/ProductVariant/42380109316162'}}}, 'response': None, 'status': None}
2025-08-10 08:59:20,740 - sync_service - ERROR - GraphQL query error for store local: 
2025-08-10 08:59:21,439 - sync_service - INFO - API log added to SAP: shopify - /admin/api/graphql_local - failure
2025-08-10 08:59:21,441 - sync_service - WARNING - Failed to update variant FG-0000714 title: GraphQL query error for store local: 
2025-08-10 08:59:21,707 - sync_service - INFO - API log added to SAP: shopify - /admin/api/graphql_local - success
2025-08-10 08:59:21,976 - sync_service - INFO - API log added to SAP: shopify - /admin/api/graphql_local - failure
2025-08-10 08:59:21,977 - sync_service - ERROR - Error adding variant to product in store local: name 'inventory_quantity' is not defined
2025-08-10 08:59:21,978 - sync_service - ERROR - Failed to add variant FG-0000714: name 'inventory_quantity' is not defined
2025-08-10 08:59:22,745 - sync_service - INFO - Processing product group: ('Morsi Laptop', 'local') with 2 items for store local
2025-08-10 08:59:22,745 - sync_service - INFO - Found existing Shopify product ID: 7526282362946 for Morsi Laptop
2025-08-10 08:59:22,746 - sync_service - INFO - Product Morsi Laptop already exists in store local, adding variants
2025-08-10 08:59:22,747 - sync_service - INFO - API Call: {'service': 'shopify', 'endpoint': 'graphql_local', 'request': {'query': '\n        query GetProduct($id: ID!) {\n            product(id: $id) {\n                id\n                title\n                handle\n                description\n                variants(first: 50) {\n                    edges {\n                        node {\n                            id\n                            sku\n                            price\n                            inventoryItem {\n                                id\n                            }\n                            selectedOptions {\n                                name\n                                value\n                            }\n                        }\n                    }\n                }\n            }\n        }\n        ', 'variables': {'id': 'gid://shopify/Product/7526282362946'}}, 'response': None, 'status': None}
2025-08-10 08:59:23,225 - sync_service - INFO - API Call: {'service': 'shopify', 'endpoint': 'graphql_local', 'request': None, 'response': {'product': {'id': 'gid://shopify/Product/7526282362946', 'title': 'Morsi Laptop', 'handle': 'morsi-laptop', 'description': '', 'variants': {'edges': [{'node': {'id': 'gid://shopify/ProductVariant/42380104138818', 'sku': None, 'price': '0.00', 'inventoryItem': {'id': 'gid://shopify/InventoryItem/44480623116354'}, 'selectedOptions': [{'name': 'Title', 'value': 'Default Title'}]}}]}}}, 'status': 'success'}
2025-08-10 08:59:23,226 - sync_service - INFO - API Call: {'service': 'shopify', 'endpoint': 'graphql_local', 'request': {'query': '\n        query GetProduct($id: ID!) {\n            product(id: $id) {\n                id\n                title\n                handle\n                description\n                variants(first: 50) {\n                    edges {\n                        node {\n                            id\n                            sku\n                            price\n                            inventoryItem {\n                                id\n                            }\n                            selectedOptions {\n                                name\n                                value\n                            }\n                        }\n                    }\n                }\n            }\n        }\n        ', 'variables': {'id': 'gid://shopify/Product/7526282362946'}}, 'response': None, 'status': None}
2025-08-10 08:59:23,720 - sync_service - INFO - API Call: {'service': 'shopify', 'endpoint': 'graphql_local', 'request': None, 'response': {'product': {'id': 'gid://shopify/Product/7526282362946', 'title': 'Morsi Laptop', 'handle': 'morsi-laptop', 'description': '', 'variants': {'edges': [{'node': {'id': 'gid://shopify/ProductVariant/42380104138818', 'sku': None, 'price': '0.00', 'inventoryItem': {'id': 'gid://shopify/InventoryItem/44480623116354'}, 'selectedOptions': [{'name': 'Title', 'value': 'Default Title'}]}}]}}}, 'status': 'success'}
2025-08-10 08:59:23,992 - sync_service - INFO - API log added to SAP: shopify - /admin/api/graphql_local - success
2025-08-10 08:59:23,992 - sync_service - INFO - API Call: {'service': 'shopify', 'endpoint': 'graphql_local', 'request': {'query': '\n        mutation productVariantCreate($input: ProductVariantInput!) {\n            productVariantCreate(input: $input) {\n                productVariant {\n                    id\n                    sku\n                    price\n                    inventoryItem {\n                        id\n                    }\n                    selectedOptions {\n                        name\n                        value\n                    }\n                }\n                userErrors {\n                    field\n                    message\n                }\n            }\n        }\n        ', 'variables': {'input': {'sku': 'FG-0000709', 'price': '1000.0', 'inventoryPolicy': 'DENY', 'inventoryManagement': 'SHOPIFY', 'weight': 0.0, 'weightUnit': 'KILOGRAMS', 'taxable': False, 'options': ['Black'], 'productId': 'gid://shopify/Product/7526282362946'}}}, 'response': None, 'status': None}
2025-08-10 08:59:24,708 - sync_service - INFO - API Call: {'service': 'shopify', 'endpoint': 'graphql_local', 'request': None, 'response': {'productVariantCreate': {'productVariant': {'id': 'gid://shopify/ProductVariant/42380109348930', 'sku': 'FG-0000709', 'price': '1000.00', 'inventoryItem': {'id': 'gid://shopify/InventoryItem/44480628326466'}, 'selectedOptions': [{'name': 'Title', 'value': 'Black'}]}, 'userErrors': []}}, 'status': 'success'}
2025-08-10 08:59:24,708 - sync_service - INFO - API Call: {'service': 'shopify', 'endpoint': 'graphql_local', 'request': {'query': '\n        mutation productVariantUpdate($input: ProductVariantInput!) {\n            productVariantUpdate(input: $input) {\n                productVariant {\n                    id\n                    sku\n                    title\n                    selectedOptions {\n                        name\n                        value\n                    }\n                }\n                userErrors {\n                    field\n                    message\n                }\n            }\n        }\n        ', 'variables': {'input': {'title': 'Black', 'id': 'gid://shopify/ProductVariant/42380109348930'}}}, 'response': None, 'status': None}
2025-08-10 08:59:25,197 - sync_service - INFO - API Call: {'service': 'shopify', 'endpoint': 'graphql_local', 'request': None, 'response': {'productVariantUpdate': {'productVariant': {'id': 'gid://shopify/ProductVariant/42380109348930', 'sku': 'FG-0000709', 'title': 'Black', 'selectedOptions': [{'name': 'Title', 'value': 'Black'}]}, 'userErrors': []}}, 'status': 'success'}
2025-08-10 08:59:25,198 - sync_service - INFO - Updated variant FG-0000709 title to 'Black'
2025-08-10 08:59:25,499 - sync_service - INFO - API log added to SAP: shopify - /admin/api/graphql_local - success
2025-08-10 08:59:25,779 - sync_service - INFO - API log added to SAP: shopify - /admin/api/graphql_local - failure
2025-08-10 08:59:25,780 - sync_service - ERROR - Error adding variant to product in store local: name 'inventory_quantity' is not defined
2025-08-10 08:59:25,782 - sync_service - ERROR - Failed to add variant FG-0000709: name 'inventory_quantity' is not defined
2025-08-10 08:59:25,783 - sync_service - INFO - API Call: {'service': 'shopify', 'endpoint': 'graphql_local', 'request': {'query': '\n        query GetProduct($id: ID!) {\n            product(id: $id) {\n                id\n                title\n                handle\n                description\n                variants(first: 50) {\n                    edges {\n                        node {\n                            id\n                            sku\n                            price\n                            inventoryItem {\n                                id\n                            }\n                            selectedOptions {\n                                name\n                                value\n                            }\n                        }\n                    }\n                }\n            }\n        }\n        ', 'variables': {'id': 'gid://shopify/Product/7526282362946'}}, 'response': None, 'status': None}
2025-08-10 08:59:26,272 - sync_service - INFO - API Call: {'service': 'shopify', 'endpoint': 'graphql_local', 'request': None, 'response': {'product': {'id': 'gid://shopify/Product/7526282362946', 'title': 'Morsi Laptop', 'handle': 'morsi-laptop', 'description': '', 'variants': {'edges': [{'node': {'id': 'gid://shopify/ProductVariant/42380104138818', 'sku': None, 'price': '0.00', 'inventoryItem': {'id': 'gid://shopify/InventoryItem/44480623116354'}, 'selectedOptions': [{'name': 'Title', 'value': 'Default Title'}]}}, {'node': {'id': 'gid://shopify/ProductVariant/42380109348930', 'sku': 'FG-0000709', 'price': '1000.00', 'inventoryItem': {'id': 'gid://shopify/InventoryItem/44480628326466'}, 'selectedOptions': [{'name': 'Title', 'value': 'Black'}]}}]}}}, 'status': 'success'}
2025-08-10 08:59:26,553 - sync_service - INFO - API log added to SAP: shopify - /admin/api/graphql_local - success
2025-08-10 08:59:26,554 - sync_service - INFO - API Call: {'service': 'shopify', 'endpoint': 'graphql_local', 'request': {'query': '\n        mutation productVariantCreate($input: ProductVariantInput!) {\n            productVariantCreate(input: $input) {\n                productVariant {\n                    id\n                    sku\n                    price\n                    inventoryItem {\n                        id\n                    }\n                    selectedOptions {\n                        name\n                        value\n                    }\n                }\n                userErrors {\n                    field\n                    message\n                }\n            }\n        }\n        ', 'variables': {'input': {'sku': 'FG-0000710', 'price': '1000.0', 'inventoryPolicy': 'DENY', 'inventoryManagement': 'SHOPIFY', 'weight': 0.0, 'weightUnit': 'KILOGRAMS', 'taxable': False, 'options': ['Gray'], 'productId': 'gid://shopify/Product/7526282362946'}}}, 'response': None, 'status': None}
2025-08-10 08:59:27,238 - sync_service - INFO - API Call: {'service': 'shopify', 'endpoint': 'graphql_local', 'request': None, 'response': {'productVariantCreate': {'productVariant': {'id': 'gid://shopify/ProductVariant/42380109381698', 'sku': 'FG-0000710', 'price': '1000.00', 'inventoryItem': {'id': 'gid://shopify/InventoryItem/44480628359234'}, 'selectedOptions': [{'name': 'Title', 'value': 'Gray'}]}, 'userErrors': []}}, 'status': 'success'}
2025-08-10 08:59:27,240 - sync_service - INFO - API Call: {'service': 'shopify', 'endpoint': 'graphql_local', 'request': {'query': '\n        mutation productVariantUpdate($input: ProductVariantInput!) {\n            productVariantUpdate(input: $input) {\n                productVariant {\n                    id\n                    sku\n                    title\n                    selectedOptions {\n                        name\n                        value\n                    }\n                }\n                userErrors {\n                    field\n                    message\n                }\n            }\n        }\n        ', 'variables': {'input': {'title': 'Gray', 'id': 'gid://shopify/ProductVariant/42380109381698'}}}, 'response': None, 'status': None}
2025-08-10 08:59:34,361 - sync_service - INFO - API Call: {'service': 'shopify', 'endpoint': 'graphql_local', 'request': None, 'response': {'productVariantUpdate': {'productVariant': {'id': 'gid://shopify/ProductVariant/42380109381698', 'sku': 'FG-0000710', 'title': 'Gray', 'selectedOptions': [{'name': 'Title', 'value': 'Gray'}]}, 'userErrors': []}}, 'status': 'success'}
2025-08-10 08:59:34,363 - sync_service - INFO - Updated variant FG-0000710 title to 'Grey'
2025-08-10 08:59:34,656 - sync_service - INFO - API log added to SAP: shopify - /admin/api/graphql_local - success
2025-08-10 08:59:34,972 - sync_service - INFO - API log added to SAP: shopify - /admin/api/graphql_local - failure
2025-08-10 08:59:34,972 - sync_service - ERROR - Error adding variant to product in store local: name 'inventory_quantity' is not defined
2025-08-10 08:59:34,974 - sync_service - ERROR - Failed to add variant FG-0000710: name 'inventory_quantity' is not defined
2025-08-10 08:59:35,755 - sync_service - INFO - Processing product group: ('Morsi Necklace', 'local') with 3 items for store local
2025-08-10 08:59:35,758 - sync_service - INFO - Found existing Shopify product ID: 7526282395714 for Morsi Necklace
2025-08-10 08:59:35,762 - sync_service - INFO - Product Morsi Necklace already exists in store local, adding variants
2025-08-10 08:59:35,764 - sync_service - INFO - API Call: {'service': 'shopify', 'endpoint': 'graphql_local', 'request': {'query': '\n        query GetProduct($id: ID!) {\n            product(id: $id) {\n                id\n                title\n                handle\n                description\n                variants(first: 50) {\n                    edges {\n                        node {\n                            id\n                            sku\n                            price\n                            inventoryItem {\n                                id\n                            }\n                            selectedOptions {\n                                name\n                                value\n                            }\n                        }\n                    }\n                }\n            }\n        }\n        ', 'variables': {'id': 'gid://shopify/Product/7526282395714'}}, 'response': None, 'status': None}
2025-08-10 08:59:36,261 - sync_service - INFO - API Call: {'service': 'shopify', 'endpoint': 'graphql_local', 'request': None, 'response': {'product': {'id': 'gid://shopify/Product/7526282395714', 'title': 'Morsi Necklace', 'handle': 'morsi-necklace', 'description': '', 'variants': {'edges': [{'node': {'id': 'gid://shopify/ProductVariant/42380104171586', 'sku': None, 'price': '0.00', 'inventoryItem': {'id': 'gid://shopify/InventoryItem/44480623149122'}, 'selectedOptions': [{'name': 'Title', 'value': 'Default Title'}]}}]}}}, 'status': 'success'}
2025-08-10 08:59:36,263 - sync_service - INFO - API Call: {'service': 'shopify', 'endpoint': 'graphql_local', 'request': {'query': '\n        query GetProduct($id: ID!) {\n            product(id: $id) {\n                id\n                title\n                handle\n                description\n                variants(first: 50) {\n                    edges {\n                        node {\n                            id\n                            sku\n                            price\n                            inventoryItem {\n                                id\n                            }\n                            selectedOptions {\n                                name\n                                value\n                            }\n                        }\n                    }\n                }\n            }\n        }\n        ', 'variables': {'id': 'gid://shopify/Product/7526282395714'}}, 'response': None, 'status': None}
2025-08-10 08:59:36,764 - sync_service - INFO - API Call: {'service': 'shopify', 'endpoint': 'graphql_local', 'request': None, 'response': {'product': {'id': 'gid://shopify/Product/7526282395714', 'title': 'Morsi Necklace', 'handle': 'morsi-necklace', 'description': '', 'variants': {'edges': [{'node': {'id': 'gid://shopify/ProductVariant/42380104171586', 'sku': None, 'price': '0.00', 'inventoryItem': {'id': 'gid://shopify/InventoryItem/44480623149122'}, 'selectedOptions': [{'name': 'Title', 'value': 'Default Title'}]}}]}}}, 'status': 'success'}
2025-08-10 08:59:37,058 - sync_service - INFO - API log added to SAP: shopify - /admin/api/graphql_local - success
2025-08-10 08:59:37,060 - sync_service - INFO - API Call: {'service': 'shopify', 'endpoint': 'graphql_local', 'request': {'query': '\n        mutation productVariantCreate($input: ProductVariantInput!) {\n            productVariantCreate(input: $input) {\n                productVariant {\n                    id\n                    sku\n                    price\n                    inventoryItem {\n                        id\n                    }\n                    selectedOptions {\n                        name\n                        value\n                    }\n                }\n                userErrors {\n                    field\n                    message\n                }\n            }\n        }\n        ', 'variables': {'input': {'sku': 'FG-0000702', 'price': '2500.0', 'inventoryPolicy': 'DENY', 'inventoryManagement': 'SHOPIFY', 'weight': 0.0, 'weightUnit': 'KILOGRAMS', 'taxable': False, 'barcode': '2123243245', 'options': ['Black'], 'productId': 'gid://shopify/Product/7526282395714'}}}, 'response': None, 'status': None}
2025-08-10 08:59:37,813 - sync_service - INFO - API Call: {'service': 'shopify', 'endpoint': 'graphql_local', 'request': None, 'response': {'productVariantCreate': {'productVariant': {'id': 'gid://shopify/ProductVariant/42380109414466', 'sku': 'FG-0000702', 'price': '2500.00', 'inventoryItem': {'id': 'gid://shopify/InventoryItem/44480628392002'}, 'selectedOptions': [{'name': 'Title', 'value': 'Black'}]}, 'userErrors': []}}, 'status': 'success'}
2025-08-10 08:59:37,815 - sync_service - INFO - API Call: {'service': 'shopify', 'endpoint': 'graphql_local', 'request': {'query': '\n        mutation productVariantUpdate($input: ProductVariantInput!) {\n            productVariantUpdate(input: $input) {\n                productVariant {\n                    id\n                    sku\n                    title\n                    selectedOptions {\n                        name\n                        value\n                    }\n                }\n                userErrors {\n                    field\n                    message\n                }\n            }\n        }\n        ', 'variables': {'input': {'title': 'Black', 'id': 'gid://shopify/ProductVariant/42380109414466'}}}, 'response': None, 'status': None}
2025-08-10 08:59:38,344 - sync_service - INFO - API Call: {'service': 'shopify', 'endpoint': 'graphql_local', 'request': None, 'response': {'productVariantUpdate': {'productVariant': {'id': 'gid://shopify/ProductVariant/42380109414466', 'sku': 'FG-0000702', 'title': 'Black', 'selectedOptions': [{'name': 'Title', 'value': 'Black'}]}, 'userErrors': []}}, 'status': 'success'}
2025-08-10 08:59:38,345 - sync_service - INFO - Updated variant FG-0000702 title to 'Black'
2025-08-10 08:59:38,641 - sync_service - INFO - API log added to SAP: shopify - /admin/api/graphql_local - success
2025-08-10 08:59:38,954 - sync_service - INFO - API log added to SAP: shopify - /admin/api/graphql_local - failure
2025-08-10 08:59:38,956 - sync_service - ERROR - Error adding variant to product in store local: name 'inventory_quantity' is not defined
2025-08-10 08:59:38,958 - sync_service - ERROR - Failed to add variant FG-0000702: name 'inventory_quantity' is not defined
2025-08-10 08:59:38,959 - sync_service - INFO - API Call: {'service': 'shopify', 'endpoint': 'graphql_local', 'request': {'query': '\n        query GetProduct($id: ID!) {\n            product(id: $id) {\n                id\n                title\n                handle\n                description\n                variants(first: 50) {\n                    edges {\n                        node {\n                            id\n                            sku\n                            price\n                            inventoryItem {\n                                id\n                            }\n                            selectedOptions {\n                                name\n                                value\n                            }\n                        }\n                    }\n                }\n            }\n        }\n        ', 'variables': {'id': 'gid://shopify/Product/7526282395714'}}, 'response': None, 'status': None}
2025-08-10 08:59:47,339 - sync_service - INFO - API Call: {'service': 'shopify', 'endpoint': 'graphql_local', 'request': None, 'response': {'product': {'id': 'gid://shopify/Product/7526282395714', 'title': 'Morsi Necklace', 'handle': 'morsi-necklace', 'description': '', 'variants': {'edges': [{'node': {'id': 'gid://shopify/ProductVariant/42380104171586', 'sku': None, 'price': '0.00', 'inventoryItem': {'id': 'gid://shopify/InventoryItem/44480623149122'}, 'selectedOptions': [{'name': 'Title', 'value': 'Default Title'}]}}, {'node': {'id': 'gid://shopify/ProductVariant/42380109414466', 'sku': 'FG-0000702', 'price': '2500.00', 'inventoryItem': {'id': 'gid://shopify/InventoryItem/44480628392002'}, 'selectedOptions': [{'name': 'Title', 'value': 'Black'}]}}]}}}, 'status': 'success'}
2025-08-10 08:59:47,638 - sync_service - INFO - API log added to SAP: shopify - /admin/api/graphql_local - success
2025-08-10 08:59:47,641 - sync_service - INFO - API Call: {'service': 'shopify', 'endpoint': 'graphql_local', 'request': {'query': '\n        mutation productVariantCreate($input: ProductVariantInput!) {\n            productVariantCreate(input: $input) {\n                productVariant {\n                    id\n                    sku\n                    price\n                    inventoryItem {\n                        id\n                    }\n                    selectedOptions {\n                        name\n                        value\n                    }\n                }\n                userErrors {\n                    field\n                    message\n                }\n            }\n        }\n        ', 'variables': {'input': {'sku': 'FG-0000703', 'price': '2500.0', 'inventoryPolicy': 'DENY', 'inventoryManagement': 'SHOPIFY', 'weight': 0.0, 'weightUnit': 'KILOGRAMS', 'taxable': False, 'barcode': '242342342', 'options': ['White'], 'productId': 'gid://shopify/Product/7526282395714'}}}, 'response': None, 'status': None}
2025-08-10 08:59:48,424 - sync_service - INFO - API Call: {'service': 'shopify', 'endpoint': 'graphql_local', 'request': None, 'response': {'productVariantCreate': {'productVariant': {'id': 'gid://shopify/ProductVariant/42380109447234', 'sku': 'FG-0000703', 'price': '2500.00', 'inventoryItem': {'id': 'gid://shopify/InventoryItem/44480628424770'}, 'selectedOptions': [{'name': 'Title', 'value': 'White'}]}, 'userErrors': []}}, 'status': 'success'}
2025-08-10 08:59:48,425 - sync_service - INFO - API Call: {'service': 'shopify', 'endpoint': 'graphql_local', 'request': {'query': '\n        mutation productVariantUpdate($input: ProductVariantInput!) {\n            productVariantUpdate(input: $input) {\n                productVariant {\n                    id\n                    sku\n                    title\n                    selectedOptions {\n                        name\n                        value\n                    }\n                }\n                userErrors {\n                    field\n                    message\n                }\n            }\n        }\n        ', 'variables': {'input': {'title': 'White', 'id': 'gid://shopify/ProductVariant/42380109447234'}}}, 'response': None, 'status': None}
2025-08-10 08:59:48,918 - sync_service - INFO - API Call: {'service': 'shopify', 'endpoint': 'graphql_local', 'request': None, 'response': {'productVariantUpdate': {'productVariant': {'id': 'gid://shopify/ProductVariant/42380109447234', 'sku': 'FG-0000703', 'title': 'White', 'selectedOptions': [{'name': 'Title', 'value': 'White'}]}, 'userErrors': []}}, 'status': 'success'}
2025-08-10 08:59:48,920 - sync_service - INFO - Updated variant FG-0000703 title to 'White'
2025-08-10 08:59:49,250 - sync_service - INFO - API log added to SAP: shopify - /admin/api/graphql_local - success
2025-08-10 08:59:49,557 - sync_service - INFO - API log added to SAP: shopify - /admin/api/graphql_local - failure
2025-08-10 08:59:49,558 - sync_service - ERROR - Error adding variant to product in store local: name 'inventory_quantity' is not defined
2025-08-10 08:59:49,558 - sync_service - ERROR - Failed to add variant FG-0000703: name 'inventory_quantity' is not defined
2025-08-10 08:59:49,558 - sync_service - INFO - API Call: {'service': 'shopify', 'endpoint': 'graphql_local', 'request': {'query': '\n        query GetProduct($id: ID!) {\n            product(id: $id) {\n                id\n                title\n                handle\n                description\n                variants(first: 50) {\n                    edges {\n                        node {\n                            id\n                            sku\n                            price\n                            inventoryItem {\n                                id\n                            }\n                            selectedOptions {\n                                name\n                                value\n                            }\n                        }\n                    }\n                }\n            }\n        }\n        ', 'variables': {'id': 'gid://shopify/Product/7526282395714'}}, 'response': None, 'status': None}
2025-08-10 08:59:50,047 - sync_service - INFO - API Call: {'service': 'shopify', 'endpoint': 'graphql_local', 'request': None, 'response': {'product': {'id': 'gid://shopify/Product/7526282395714', 'title': 'Morsi Necklace', 'handle': 'morsi-necklace', 'description': '', 'variants': {'edges': [{'node': {'id': 'gid://shopify/ProductVariant/42380104171586', 'sku': None, 'price': '0.00', 'inventoryItem': {'id': 'gid://shopify/InventoryItem/44480623149122'}, 'selectedOptions': [{'name': 'Title', 'value': 'Default Title'}]}}, {'node': {'id': 'gid://shopify/ProductVariant/42380109414466', 'sku': 'FG-0000702', 'price': '2500.00', 'inventoryItem': {'id': 'gid://shopify/InventoryItem/44480628392002'}, 'selectedOptions': [{'name': 'Title', 'value': 'Black'}]}}, {'node': {'id': 'gid://shopify/ProductVariant/42380109447234', 'sku': 'FG-0000703', 'price': '2500.00', 'inventoryItem': {'id': 'gid://shopify/InventoryItem/44480628424770'}, 'selectedOptions': [{'name': 'Title', 'value': 'White'}]}}]}}}, 'status': 'success'}
2025-08-10 08:59:50,353 - sync_service - INFO - API log added to SAP: shopify - /admin/api/graphql_local - success
2025-08-10 08:59:50,355 - sync_service - INFO - API Call: {'service': 'shopify', 'endpoint': 'graphql_local', 'request': {'query': '\n        mutation productVariantCreate($input: ProductVariantInput!) {\n            productVariantCreate(input: $input) {\n                productVariant {\n                    id\n                    sku\n                    price\n                    inventoryItem {\n                        id\n                    }\n                    selectedOptions {\n                        name\n                        value\n                    }\n                }\n                userErrors {\n                    field\n                    message\n                }\n            }\n        }\n        ', 'variables': {'input': {'sku': 'FG-0000705', 'price': '2500.0', 'inventoryPolicy': 'DENY', 'inventoryManagement': 'SHOPIFY', 'weight': 0.0, 'weightUnit': 'KILOGRAMS', 'taxable': False, 'options': ['Green'], 'productId': 'gid://shopify/Product/7526282395714'}}}, 'response': None, 'status': None}
2025-08-10 08:59:51,114 - sync_service - INFO - API Call: {'service': 'shopify', 'endpoint': 'graphql_local', 'request': None, 'response': {'productVariantCreate': {'productVariant': {'id': 'gid://shopify/ProductVariant/42380109480002', 'sku': 'FG-0000705', 'price': '2500.00', 'inventoryItem': {'id': 'gid://shopify/InventoryItem/44480628457538'}, 'selectedOptions': [{'name': 'Title', 'value': 'Green'}]}, 'userErrors': []}}, 'status': 'success'}
2025-08-10 08:59:51,115 - sync_service - INFO - API Call: {'service': 'shopify', 'endpoint': 'graphql_local', 'request': {'query': '\n        mutation productVariantUpdate($input: ProductVariantInput!) {\n            productVariantUpdate(input: $input) {\n                productVariant {\n                    id\n                    sku\n                    title\n                    selectedOptions {\n                        name\n                        value\n                    }\n                }\n                userErrors {\n                    field\n                    message\n                }\n            }\n        }\n        ', 'variables': {'input': {'title': 'Green', 'id': 'gid://shopify/ProductVariant/42380109480002'}}}, 'response': None, 'status': None}
2025-08-10 08:59:51,601 - sync_service - INFO - API Call: {'service': 'shopify', 'endpoint': 'graphql_local', 'request': None, 'response': {'productVariantUpdate': {'productVariant': {'id': 'gid://shopify/ProductVariant/42380109480002', 'sku': 'FG-0000705', 'title': 'Green', 'selectedOptions': [{'name': 'Title', 'value': 'Green'}]}, 'userErrors': []}}, 'status': 'success'}
2025-08-10 08:59:51,604 - sync_service - INFO - Updated variant FG-0000705 title to 'Green'
2025-08-10 08:59:51,922 - sync_service - INFO - API log added to SAP: shopify - /admin/api/graphql_local - success
2025-08-10 08:59:52,215 - sync_service - INFO - API log added to SAP: shopify - /admin/api/graphql_local - failure
2025-08-10 08:59:52,217 - sync_service - ERROR - Error adding variant to product in store local: name 'inventory_quantity' is not defined
2025-08-10 08:59:52,218 - sync_service - ERROR - Failed to add variant FG-0000705: name 'inventory_quantity' is not defined
2025-08-10 08:59:53,034 - sync_service - INFO - Processing product group: ('Morsi Shoes', 'local') with 2 items for store local
2025-08-10 08:59:53,038 - sync_service - INFO - Found existing Shopify product ID: 7526282461250 for Morsi Shoes
2025-08-10 08:59:53,040 - sync_service - INFO - Product Morsi Shoes already exists in store local, adding variants
2025-08-10 08:59:53,041 - sync_service - INFO - API Call: {'service': 'shopify', 'endpoint': 'graphql_local', 'request': {'query': '\n        query GetProduct($id: ID!) {\n            product(id: $id) {\n                id\n                title\n                handle\n                description\n                variants(first: 50) {\n                    edges {\n                        node {\n                            id\n                            sku\n                            price\n                            inventoryItem {\n                                id\n                            }\n                            selectedOptions {\n                                name\n                                value\n                            }\n                        }\n                    }\n                }\n            }\n        }\n        ', 'variables': {'id': 'gid://shopify/Product/7526282461250'}}, 'response': None, 'status': None}
2025-08-10 08:59:59,216 - sync_service - INFO - API Call: {'service': 'shopify', 'endpoint': 'graphql_local', 'request': None, 'response': {'product': {'id': 'gid://shopify/Product/7526282461250', 'title': 'Morsi Shoes', 'handle': 'morsi-shoes', 'description': '', 'variants': {'edges': [{'node': {'id': 'gid://shopify/ProductVariant/42380104663106', 'sku': None, 'price': '0.00', 'inventoryItem': {'id': 'gid://shopify/InventoryItem/44480623640642'}, 'selectedOptions': [{'name': 'Title', 'value': 'Default Title'}]}}]}}}, 'status': 'success'}
2025-08-10 08:59:59,217 - sync_service - INFO - API Call: {'service': 'shopify', 'endpoint': 'graphql_local', 'request': {'query': '\n        query GetProduct($id: ID!) {\n            product(id: $id) {\n                id\n                title\n                handle\n                description\n                variants(first: 50) {\n                    edges {\n                        node {\n                            id\n                            sku\n                            price\n                            inventoryItem {\n                                id\n                            }\n                            selectedOptions {\n                                name\n                                value\n                            }\n                        }\n                    }\n                }\n            }\n        }\n        ', 'variables': {'id': 'gid://shopify/Product/7526282461250'}}, 'response': None, 'status': None}
2025-08-10 08:59:59,708 - sync_service - INFO - API Call: {'service': 'shopify', 'endpoint': 'graphql_local', 'request': None, 'response': {'product': {'id': 'gid://shopify/Product/7526282461250', 'title': 'Morsi Shoes', 'handle': 'morsi-shoes', 'description': '', 'variants': {'edges': [{'node': {'id': 'gid://shopify/ProductVariant/42380104663106', 'sku': None, 'price': '0.00', 'inventoryItem': {'id': 'gid://shopify/InventoryItem/44480623640642'}, 'selectedOptions': [{'name': 'Title', 'value': 'Default Title'}]}}]}}}, 'status': 'success'}
2025-08-10 09:00:00,078 - sync_service - INFO - API log added to SAP: shopify - /admin/api/graphql_local - success
2025-08-10 09:00:00,081 - sync_service - INFO - API Call: {'service': 'shopify', 'endpoint': 'graphql_local', 'request': {'query': '\n        mutation productVariantCreate($input: ProductVariantInput!) {\n            productVariantCreate(input: $input) {\n                productVariant {\n                    id\n                    sku\n                    price\n                    inventoryItem {\n                        id\n                    }\n                    selectedOptions {\n                        name\n                        value\n                    }\n                }\n                userErrors {\n                    field\n                    message\n                }\n            }\n        }\n        ', 'variables': {'input': {'sku': 'FG-0000706', 'price': '1000.0', 'inventoryPolicy': 'DENY', 'inventoryManagement': 'SHOPIFY', 'weight': 0.0, 'weightUnit': 'KILOGRAMS', 'taxable': False, 'options': ['Green'], 'productId': 'gid://shopify/Product/7526282461250'}}}, 'response': None, 'status': None}
2025-08-10 09:00:00,821 - sync_service - INFO - API Call: {'service': 'shopify', 'endpoint': 'graphql_local', 'request': None, 'response': {'productVariantCreate': {'productVariant': {'id': 'gid://shopify/ProductVariant/42380109512770', 'sku': 'FG-0000706', 'price': '1000.00', 'inventoryItem': {'id': 'gid://shopify/InventoryItem/44480628490306'}, 'selectedOptions': [{'name': 'Title', 'value': 'Green'}]}, 'userErrors': []}}, 'status': 'success'}
2025-08-10 09:00:00,824 - sync_service - INFO - API Call: {'service': 'shopify', 'endpoint': 'graphql_local', 'request': {'query': '\n        mutation productVariantUpdate($input: ProductVariantInput!) {\n            productVariantUpdate(input: $input) {\n                productVariant {\n                    id\n                    sku\n                    title\n                    selectedOptions {\n                        name\n                        value\n                    }\n                }\n                userErrors {\n                    field\n                    message\n                }\n            }\n        }\n        ', 'variables': {'input': {'title': 'Green', 'id': 'gid://shopify/ProductVariant/42380109512770'}}}, 'response': None, 'status': None}
2025-08-10 09:00:01,305 - sync_service - INFO - API Call: {'service': 'shopify', 'endpoint': 'graphql_local', 'request': None, 'response': {'productVariantUpdate': {'productVariant': {'id': 'gid://shopify/ProductVariant/42380109512770', 'sku': 'FG-0000706', 'title': 'Green', 'selectedOptions': [{'name': 'Title', 'value': 'Green'}]}, 'userErrors': []}}, 'status': 'success'}
2025-08-10 09:00:01,307 - sync_service - INFO - Updated variant FG-0000706 title to 'Green'
2025-08-10 09:00:01,576 - sync_service - INFO - API log added to SAP: shopify - /admin/api/graphql_local - success
2025-08-10 09:00:01,843 - sync_service - INFO - API log added to SAP: shopify - /admin/api/graphql_local - failure
2025-08-10 09:00:01,843 - sync_service - ERROR - Error adding variant to product in store local: name 'inventory_quantity' is not defined
2025-08-10 09:00:01,844 - sync_service - ERROR - Failed to add variant FG-0000706: name 'inventory_quantity' is not defined
2025-08-10 09:00:01,844 - sync_service - INFO - API Call: {'service': 'shopify', 'endpoint': 'graphql_local', 'request': {'query': '\n        query GetProduct($id: ID!) {\n            product(id: $id) {\n                id\n                title\n                handle\n                description\n                variants(first: 50) {\n                    edges {\n                        node {\n                            id\n                            sku\n                            price\n                            inventoryItem {\n                                id\n                            }\n                            selectedOptions {\n                                name\n                                value\n                            }\n                        }\n                    }\n                }\n            }\n        }\n        ', 'variables': {'id': 'gid://shopify/Product/7526282461250'}}, 'response': None, 'status': None}
2025-08-10 09:00:02,395 - sync_service - INFO - API Call: {'service': 'shopify', 'endpoint': 'graphql_local', 'request': None, 'response': {'product': {'id': 'gid://shopify/Product/7526282461250', 'title': 'Morsi Shoes', 'handle': 'morsi-shoes', 'description': '', 'variants': {'edges': [{'node': {'id': 'gid://shopify/ProductVariant/42380104663106', 'sku': None, 'price': '0.00', 'inventoryItem': {'id': 'gid://shopify/InventoryItem/44480623640642'}, 'selectedOptions': [{'name': 'Title', 'value': 'Default Title'}]}}, {'node': {'id': 'gid://shopify/ProductVariant/42380109512770', 'sku': 'FG-0000706', 'price': '1000.00', 'inventoryItem': {'id': 'gid://shopify/InventoryItem/44480628490306'}, 'selectedOptions': [{'name': 'Title', 'value': 'Green'}]}}]}}}, 'status': 'success'}
2025-08-10 09:00:02,673 - sync_service - INFO - API log added to SAP: shopify - /admin/api/graphql_local - success
2025-08-10 09:00:02,673 - sync_service - INFO - API Call: {'service': 'shopify', 'endpoint': 'graphql_local', 'request': {'query': '\n        mutation productVariantCreate($input: ProductVariantInput!) {\n            productVariantCreate(input: $input) {\n                productVariant {\n                    id\n                    sku\n                    price\n                    inventoryItem {\n                        id\n                    }\n                    selectedOptions {\n                        name\n                        value\n                    }\n                }\n                userErrors {\n                    field\n                    message\n                }\n            }\n        }\n        ', 'variables': {'input': {'sku': 'FG-0000707', 'price': '1000.0', 'inventoryPolicy': 'DENY', 'inventoryManagement': 'SHOPIFY', 'weight': 0.0, 'weightUnit': 'KILOGRAMS', 'taxable': False, 'options': ['Beige'], 'productId': 'gid://shopify/Product/7526282461250'}}}, 'response': None, 'status': None}
2025-08-10 09:00:03,340 - sync_service - INFO - API Call: {'service': 'shopify', 'endpoint': 'graphql_local', 'request': None, 'response': {'productVariantCreate': {'productVariant': {'id': 'gid://shopify/ProductVariant/42380109578306', 'sku': 'FG-0000707', 'price': '1000.00', 'inventoryItem': {'id': 'gid://shopify/InventoryItem/44480628555842'}, 'selectedOptions': [{'name': 'Title', 'value': 'Beige'}]}, 'userErrors': []}}, 'status': 'success'}
2025-08-10 09:00:03,341 - sync_service - INFO - API Call: {'service': 'shopify', 'endpoint': 'graphql_local', 'request': {'query': '\n        mutation productVariantUpdate($input: ProductVariantInput!) {\n            productVariantUpdate(input: $input) {\n                productVariant {\n                    id\n                    sku\n                    title\n                    selectedOptions {\n                        name\n                        value\n                    }\n                }\n                userErrors {\n                    field\n                    message\n                }\n            }\n        }\n        ', 'variables': {'input': {'title': 'Beige', 'id': 'gid://shopify/ProductVariant/42380109578306'}}}, 'response': None, 'status': None}
2025-08-10 09:00:03,814 - sync_service - INFO - API Call: {'service': 'shopify', 'endpoint': 'graphql_local', 'request': None, 'response': {'productVariantUpdate': {'productVariant': {'id': 'gid://shopify/ProductVariant/42380109578306', 'sku': 'FG-0000707', 'title': 'Beige', 'selectedOptions': [{'name': 'Title', 'value': 'Beige'}]}, 'userErrors': []}}, 'status': 'success'}
2025-08-10 09:00:03,815 - sync_service - INFO - Updated variant FG-0000707 title to 'Beige'
2025-08-10 09:00:04,095 - sync_service - INFO - API log added to SAP: shopify - /admin/api/graphql_local - success
2025-08-10 09:00:04,407 - sync_service - INFO - API log added to SAP: shopify - /admin/api/graphql_local - failure
2025-08-10 09:00:04,409 - sync_service - ERROR - Error adding variant to product in store local: name 'inventory_quantity' is not defined
2025-08-10 09:00:04,410 - sync_service - ERROR - Failed to add variant FG-0000707: name 'inventory_quantity' is not defined
2025-08-10 09:00:05,227 - sync_service - INFO - Sync Event: {'sync_type': 'multi_store_new_items_sap_to_shopify', 'items_processed': 8, 'success_count': 4, 'error_count': 9, 'details': None}
2025-08-10 09:00:05,228 - sync_service - INFO - Multi-store new items sync completed: 8 processed, 4 successful, 9 errors
2025-08-10 09:00:05,230 - sync_service - INFO - Starting stock change sync...
2025-08-10 09:00:05,231 - sync_service - INFO - Starting stock change sync using MASHURA_StockChangeB1SLQuery view
2025-08-10 09:00:05,233 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'view.svc/MASHURA_StockChangeB1SLQuery', 'request': {'method': 'GET', 'url': 'https://10.0.0.100:50000/b1s/v1/view.svc/MASHURA_StockChangeB1SLQuery', 'data': None, 'params': {'$top': 50}}, 'response': None, 'status': None}
2025-08-10 09:00:05,542 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'view.svc/MASHURA_StockChangeB1SLQuery', 'request': None, 'response': {'odata.metadata': 'https://10.0.0.100:50000/b1s/v1/view.svc/$metadata#MASHURA_StockChangeB1SLQuery', 'value': []}, 'status': 'success'}
2025-08-10 09:00:05,545 - sync_service - INFO - No stock changes found in the view.
2025-08-10 09:00:05,547 - sync_service - INFO - Starting item changes sync...
2025-08-10 09:00:05,548 - sync_service - INFO - Starting item changes sync from SAP to Shopify
2025-08-10 09:00:05,551 - sync_service - INFO - Processing item changes for store: local
2025-08-10 09:00:05,554 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': "view.svc/MASHURA_ItemChangeB1SLQuery?$filter=Shopify_Store eq 'local'", 'request': {'method': 'GET', 'url': "https://10.0.0.100:50000/b1s/v1/view.svc/MASHURA_ItemChangeB1SLQuery?$filter=Shopify_Store eq 'local'", 'data': None, 'params': None}, 'response': None, 'status': None}
2025-08-10 09:00:05,883 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': "view.svc/MASHURA_ItemChangeB1SLQuery?$filter=Shopify_Store eq 'local'", 'request': None, 'response': {'odata.metadata': 'https://10.0.0.100:50000/b1s/v1/view.svc/$metadata#MASHURA_ItemChangeB1SLQuery', 'value': []}, 'status': 'success'}
2025-08-10 09:00:05,887 - sync_service - INFO - Found 0 item changes for store local
2025-08-10 09:00:05,889 - sync_service - INFO - No item changes found for store local
2025-08-10 09:00:05,890 - sync_service - INFO - Sync Event: {'sync_type': 'item_changes_sap_to_shopify', 'items_processed': 0, 'success_count': 0, 'error_count': 0, 'details': None}
2025-08-10 09:00:05,892 - sync_service - INFO - Item changes sync completed: 0 processed, 0 successful, 0 errors
2025-08-10 09:00:05,892 - sync_service - INFO - Starting price changes sync...
2025-08-10 09:00:05,893 - sync_service - INFO - Starting price changes sync from SAP to Shopify
2025-08-10 09:00:05,893 - sync_service - INFO - Processing price changes for store: local
2025-08-10 09:00:05,894 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': "view.svc/MASHURA_PriceChangeB1SLQuery?$filter=Shopify_Store eq 'local'", 'request': {'method': 'GET', 'url': "https://10.0.0.100:50000/b1s/v1/view.svc/MASHURA_PriceChangeB1SLQuery?$filter=Shopify_Store eq 'local'", 'data': None, 'params': None}, 'response': None, 'status': None}
2025-08-10 09:00:06,192 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': "view.svc/MASHURA_PriceChangeB1SLQuery?$filter=Shopify_Store eq 'local'", 'request': None, 'response': {'odata.metadata': 'https://10.0.0.100:50000/b1s/v1/view.svc/$metadata#MASHURA_PriceChangeB1SLQuery', 'value': []}, 'status': 'success'}
2025-08-10 09:00:06,193 - sync_service - INFO - Found 0 price changes for store local
2025-08-10 09:00:06,194 - sync_service - INFO - No price changes found for store local
2025-08-10 09:00:06,195 - sync_service - INFO - Sync Event: {'sync_type': 'price_changes_sap_to_shopify', 'items_processed': 0, 'success_count': 0, 'error_count': 0, 'details': None}
2025-08-10 09:00:06,196 - sync_service - INFO - Price changes sync completed: 0 processed, 0 successful, 0 errors
2025-08-10 09:03:30,445 - sync_service - INFO - Initialized Shopify client for store: Local Store (local)
2025-08-10 09:03:30,476 - sync_service - INFO - Starting all syncs...
2025-08-10 09:03:30,477 - sync_service - INFO - Starting new items sync...
2025-08-10 09:03:30,478 - sync_service - INFO - Starting multi-store new items sync from SAP to Shopify
2025-08-10 09:03:30,478 - sync_service - INFO - Fetching new items for store: local
2025-08-10 09:03:30,480 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'login', 'request': {'company': 'JudeBenHalim_Test', 'user': 'manager'}, 'response': None, 'status': None}
2025-08-10 09:03:31,841 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'login', 'request': None, 'response': {'status': 'success'}, 'status': 'success'}
2025-08-10 09:03:31,842 - sync_service - INFO - SAP login successful
2025-08-10 09:03:31,843 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': "view.svc/MASHURA_New_ItemsB1SLQuery?$filter=Shopify_Store eq 'local'&$orderby=MainProduct", 'request': {'method': 'GET', 'url': "https://10.0.0.100:50000/b1s/v1/view.svc/MASHURA_New_ItemsB1SLQuery?$filter=Shopify_Store eq 'local'&$orderby=MainProduct", 'data': None, 'params': None}, 'response': None, 'status': None}
2025-08-10 09:03:32,555 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': "view.svc/MASHURA_New_ItemsB1SLQuery?$filter=Shopify_Store eq 'local'&$orderby=MainProduct", 'request': None, 'response': {'odata.metadata': 'https://10.0.0.100:50000/b1s/v1/view.svc/$metadata#MASHURA_New_ItemsB1SLQuery', 'value': [{'itemcode': 'FG-0000704', 'ItemName': 'Morsi Bracelet', 'MainProduct': None, 'Color': None, 'Price': 3200.0, 'Shopify_Store': 'local', 'Shopify_ProductCode': '7526282166338', 'Status': 'existing', 'Barcode': '645464644', 'id__': 1}, {'itemcode': 'FG-0000708', 'ItemName': 'Morsi Socks', 'MainProduct': None, 'Color': None, 'Price': 200.0, 'Shopify_Store': 'local', 'Shopify_ProductCode': '7526282199106', 'Status': 'existing', 'Barcode': None, 'id__': 2}, {'itemcode': 'FG-0000711', 'ItemName': 'Morsi Keyboard', 'MainProduct': None, 'Color': None, 'Price': 1000.0, 'Shopify_Store': 'local', 'Shopify_ProductCode': '7526282231874', 'Status': 'existing', 'Barcode': None, 'id__': 3}, {'itemcode': 'FG-0000712', 'ItemName': 'AA-Iron Man Necklace', 'MainProduct': None, 'Color': None, 'Price': 1000.0, 'Shopify_Store': 'local', 'Shopify_ProductCode': '7526282264642', 'Status': 'existing', 'Barcode': '203090', 'id__': 4}, {'itemcode': 'FG-0000713', 'ItemName': 'AA-Ring Red', 'MainProduct': 'Iron Man Necklace', 'Color': 'Red', 'Price': 2000.0, 'Shopify_Store': 'local', 'Shopify_ProductCode': '7526282330178', 'Status': 'existing', 'Barcode': '203090', 'id__': 5}, {'itemcode': 'FG-0000714', 'ItemName': 'AA-Ring Blue', 'MainProduct': 'Iron Man Necklace', 'Color': 'Blue', 'Price': 3000.0, 'Shopify_Store': 'local', 'Shopify_ProductCode': '7526282330178', 'Status': 'existing', 'Barcode': '203090', 'id__': 6}, {'itemcode': 'FG-0000709', 'ItemName': 'Morsi-Laptop-Black', 'MainProduct': 'Morsi Laptop', 'Color': 'Black', 'Price': 1000.0, 'Shopify_Store': 'local', 'Shopify_ProductCode': '7526282362946', 'Status': 'existing', 'Barcode': None, 'id__': 7}, {'itemcode': 'FG-0000710', 'ItemName': 'Morsi-Laptop-Grey', 'MainProduct': 'Morsi Laptop', 'Color': 'Grey', 'Price': 1000.0, 'Shopify_Store': 'local', 'Shopify_ProductCode': '7526282362946', 'Status': 'existing', 'Barcode': None, 'id__': 8}, {'itemcode': 'FG-0000702', 'ItemName': 'Morsi-Necklace-Black', 'MainProduct': 'Morsi Necklace', 'Color': 'Black', 'Price': 2500.0, 'Shopify_Store': 'local', 'Shopify_ProductCode': '7526282395714', 'Status': 'existing', 'Barcode': '2123243245', 'id__': 9}, {'itemcode': 'FG-0000703', 'ItemName': 'Morsi-Necklace-White', 'MainProduct': 'Morsi Necklace', 'Color': 'White', 'Price': 2500.0, 'Shopify_Store': 'local', 'Shopify_ProductCode': '7526282395714', 'Status': 'existing', 'Barcode': '242342342', 'id__': 10}, {'itemcode': 'FG-0000705', 'ItemName': 'Morsi-Necklace-Green', 'MainProduct': 'Morsi Necklace', 'Color': 'Green', 'Price': 2500.0, 'Shopify_Store': 'local', 'Shopify_ProductCode': '7526282395714', 'Status': 'existing', 'Barcode': None, 'id__': 11}, {'itemcode': 'FG-0000706', 'ItemName': 'Morsi-Shoes-Green', 'MainProduct': 'Morsi Shoes', 'Color': 'Green', 'Price': 1000.0, 'Shopify_Store': 'local', 'Shopify_ProductCode': '7526282461250', 'Status': 'existing', 'Barcode': None, 'id__': 12}, {'itemcode': 'FG-0000707', 'ItemName': 'Morsi-Shoes-Beige', 'MainProduct': 'Morsi Shoes', 'Color': 'Beige', 'Price': 1000.0, 'Shopify_Store': 'local', 'Shopify_ProductCode': '7526282461250', 'Status': 'existing', 'Barcode': None, 'id__': 13}]}, 'status': 'success'}
2025-08-10 09:03:32,557 - sync_service - INFO - Product group: ('FG-0000704', 'local') has 1 items
2025-08-10 09:03:32,557 - sync_service - INFO - Product group: ('FG-0000708', 'local') has 1 items
2025-08-10 09:03:32,558 - sync_service - INFO - Product group: ('FG-0000711', 'local') has 1 items
2025-08-10 09:03:32,558 - sync_service - INFO - Product group: ('FG-0000712', 'local') has 1 items
2025-08-10 09:03:32,558 - sync_service - INFO - Product group: ('Iron Man Necklace', 'local') has 2 items
2025-08-10 09:03:32,560 - sync_service - INFO - Product group: ('Morsi Laptop', 'local') has 2 items
2025-08-10 09:03:32,560 - sync_service - INFO - Product group: ('Morsi Necklace', 'local') has 3 items
2025-08-10 09:03:32,561 - sync_service - INFO - Product group: ('Morsi Shoes', 'local') has 2 items
2025-08-10 09:03:32,561 - sync_service - INFO - Grouped 13 items into 8 product groups for store local
2025-08-10 09:03:32,564 - sync_service - INFO - Processing product group: ('FG-0000704', 'local') with 1 items for store local
2025-08-10 09:03:32,568 - sync_service - INFO - Found existing Shopify product ID: 7526282166338 for None
2025-08-10 09:03:32,570 - sync_service - INFO - Product None already exists in store local, adding variants
2025-08-10 09:03:32,572 - sync_service - INFO - API Call: {'service': 'shopify', 'endpoint': 'graphql_local', 'request': {'query': '\n        query GetProduct($id: ID!) {\n            product(id: $id) {\n                id\n                title\n                handle\n                description\n                variants(first: 50) {\n                    edges {\n                        node {\n                            id\n                            sku\n                            price\n                            inventoryItem {\n                                id\n                            }\n                            selectedOptions {\n                                name\n                                value\n                            }\n                        }\n                    }\n                }\n            }\n        }\n        ', 'variables': {'id': 'gid://shopify/Product/7526282166338'}}, 'response': None, 'status': None}
2025-08-10 09:03:33,089 - sync_service - INFO - API Call: {'service': 'shopify', 'endpoint': 'graphql_local', 'request': None, 'response': {'product': {'id': 'gid://shopify/Product/7526282166338', 'title': 'Morsi Bracelet', 'handle': 'morsi-bracelet', 'description': '', 'variants': {'edges': [{'node': {'id': 'gid://shopify/ProductVariant/42380103942210', 'sku': None, 'price': '0.00', 'inventoryItem': {'id': 'gid://shopify/InventoryItem/44480622919746'}, 'selectedOptions': [{'name': 'Title', 'value': 'Default Title'}]}}]}}}, 'status': 'success'}
2025-08-10 09:03:33,090 - sync_service - INFO - API Call: {'service': 'shopify', 'endpoint': 'graphql_local', 'request': {'query': '\n        query GetProduct($id: ID!) {\n            product(id: $id) {\n                id\n                title\n                handle\n                description\n                variants(first: 50) {\n                    edges {\n                        node {\n                            id\n                            sku\n                            price\n                            inventoryItem {\n                                id\n                            }\n                            selectedOptions {\n                                name\n                                value\n                            }\n                        }\n                    }\n                }\n            }\n        }\n        ', 'variables': {'id': 'gid://shopify/Product/7526282166338'}}, 'response': None, 'status': None}
2025-08-10 09:03:33,576 - sync_service - INFO - API Call: {'service': 'shopify', 'endpoint': 'graphql_local', 'request': None, 'response': {'product': {'id': 'gid://shopify/Product/7526282166338', 'title': 'Morsi Bracelet', 'handle': 'morsi-bracelet', 'description': '', 'variants': {'edges': [{'node': {'id': 'gid://shopify/ProductVariant/42380103942210', 'sku': None, 'price': '0.00', 'inventoryItem': {'id': 'gid://shopify/InventoryItem/44480622919746'}, 'selectedOptions': [{'name': 'Title', 'value': 'Default Title'}]}}]}}}, 'status': 'success'}
2025-08-10 09:03:34,294 - sync_service - INFO - SAP logging client login successful
2025-08-10 09:03:35,009 - sync_service - INFO - API log added to SAP: shopify - /admin/api/graphql_local - success
2025-08-10 09:03:35,010 - sync_service - INFO - API Call: {'service': 'shopify', 'endpoint': 'graphql_local', 'request': {'query': '\n        mutation productVariantCreate($input: ProductVariantInput!) {\n            productVariantCreate(input: $input) {\n                productVariant {\n                    id\n                    sku\n                    price\n                    inventoryItem {\n                        id\n                    }\n                    selectedOptions {\n                        name\n                        value\n                    }\n                }\n                userErrors {\n                    field\n                    message\n                }\n            }\n        }\n        ', 'variables': {'input': {'sku': 'FG-0000704', 'price': '3200.0', 'inventoryPolicy': 'DENY', 'inventoryManagement': 'SHOPIFY', 'weight': 0.0, 'weightUnit': 'KILOGRAMS', 'taxable': False, 'barcode': '645464644', 'productId': 'gid://shopify/Product/7526282166338'}}}, 'response': None, 'status': None}
2025-08-10 09:03:35,507 - sync_service - INFO - API Call: {'service': 'shopify', 'endpoint': 'graphql_local', 'request': None, 'response': {'productVariantCreate': {'productVariant': None, 'userErrors': [{'field': None, 'message': "The variant 'Default Title' already exists."}]}}, 'status': 'success'}
2025-08-10 09:03:35,508 - sync_service - INFO - Variant FG-0000704 already exists, attempting to find it
2025-08-10 09:03:35,509 - sync_service - INFO - API Call: {'service': 'shopify', 'endpoint': 'graphql_local', 'request': {'query': '\n        query GetProduct($id: ID!) {\n            product(id: $id) {\n                id\n                title\n                handle\n                description\n                variants(first: 50) {\n                    edges {\n                        node {\n                            id\n                            sku\n                            price\n                            inventoryItem {\n                                id\n                            }\n                            selectedOptions {\n                                name\n                                value\n                            }\n                        }\n                    }\n                }\n            }\n        }\n        ', 'variables': {'id': 'gid://shopify/Product/7526282166338'}}, 'response': None, 'status': None}
2025-08-10 09:03:36,068 - sync_service - INFO - API Call: {'service': 'shopify', 'endpoint': 'graphql_local', 'request': None, 'response': {'product': {'id': 'gid://shopify/Product/7526282166338', 'title': 'Morsi Bracelet', 'handle': 'morsi-bracelet', 'description': '', 'variants': {'edges': [{'node': {'id': 'gid://shopify/ProductVariant/42380103942210', 'sku': None, 'price': '0.00', 'inventoryItem': {'id': 'gid://shopify/InventoryItem/44480622919746'}, 'selectedOptions': [{'name': 'Title', 'value': 'Default Title'}]}}]}}}, 'status': 'success'}
2025-08-10 09:03:36,070 - sync_service - ERROR - Variant FG-0000704 already exists but couldn't be found
2025-08-10 09:03:36,071 - sync_service - ERROR - Failed to add variant FG-0000704: Variant FG-0000704 already exists but couldn't be found
2025-08-10 09:03:37,309 - sync_service - INFO - Processing product group: ('FG-0000708', 'local') with 1 items for store local
2025-08-10 09:03:37,309 - sync_service - INFO - Found existing Shopify product ID: 7526282199106 for None
2025-08-10 09:03:37,310 - sync_service - INFO - Product None already exists in store local, adding variants
2025-08-10 09:03:37,311 - sync_service - INFO - API Call: {'service': 'shopify', 'endpoint': 'graphql_local', 'request': {'query': '\n        query GetProduct($id: ID!) {\n            product(id: $id) {\n                id\n                title\n                handle\n                description\n                variants(first: 50) {\n                    edges {\n                        node {\n                            id\n                            sku\n                            price\n                            inventoryItem {\n                                id\n                            }\n                            selectedOptions {\n                                name\n                                value\n                            }\n                        }\n                    }\n                }\n            }\n        }\n        ', 'variables': {'id': 'gid://shopify/Product/7526282199106'}}, 'response': None, 'status': None}
2025-08-10 09:03:47,325 - sync_service - ERROR - GraphQL query error for store local: 
2025-08-10 09:03:48,279 - sync_service - INFO - API log added to SAP: shopify - /admin/api/graphql_local - failure
2025-08-10 09:03:48,282 - sync_service - INFO - API Call: {'service': 'shopify', 'endpoint': 'graphql_local', 'request': {'query': '\n        query GetProduct($id: ID!) {\n            product(id: $id) {\n                id\n                title\n                handle\n                description\n                variants(first: 50) {\n                    edges {\n                        node {\n                            id\n                            sku\n                            price\n                            inventoryItem {\n                                id\n                            }\n                            selectedOptions {\n                                name\n                                value\n                            }\n                        }\n                    }\n                }\n            }\n        }\n        ', 'variables': {'id': 'gid://shopify/Product/7526282199106'}}, 'response': None, 'status': None}
2025-08-10 09:03:49,101 - sync_service - INFO - API Call: {'service': 'shopify', 'endpoint': 'graphql_local', 'request': None, 'response': {'product': {'id': 'gid://shopify/Product/7526282199106', 'title': 'Morsi Socks', 'handle': 'morsi-socks', 'description': '', 'variants': {'edges': [{'node': {'id': 'gid://shopify/ProductVariant/42380103974978', 'sku': None, 'price': '0.00', 'inventoryItem': {'id': 'gid://shopify/InventoryItem/44480622952514'}, 'selectedOptions': [{'name': 'Title', 'value': 'Default Title'}]}}]}}}, 'status': 'success'}
2025-08-10 09:03:49,835 - sync_service - INFO - API log added to SAP: shopify - /admin/api/graphql_local - success
2025-08-10 09:03:49,837 - sync_service - INFO - API Call: {'service': 'shopify', 'endpoint': 'graphql_local', 'request': {'query': '\n        mutation productVariantCreate($input: ProductVariantInput!) {\n            productVariantCreate(input: $input) {\n                productVariant {\n                    id\n                    sku\n                    price\n                    inventoryItem {\n                        id\n                    }\n                    selectedOptions {\n                        name\n                        value\n                    }\n                }\n                userErrors {\n                    field\n                    message\n                }\n            }\n        }\n        ', 'variables': {'input': {'sku': 'FG-0000708', 'price': '200.0', 'inventoryPolicy': 'DENY', 'inventoryManagement': 'SHOPIFY', 'weight': 0.0, 'weightUnit': 'KILOGRAMS', 'taxable': False, 'productId': 'gid://shopify/Product/7526282199106'}}}, 'response': None, 'status': None}
2025-08-10 09:03:59,853 - sync_service - ERROR - GraphQL query error for store local: 
2025-08-10 09:04:00,584 - sync_service - INFO - API log added to SAP: shopify - /admin/api/graphql_local - failure
2025-08-10 09:04:00,586 - sync_service - ERROR - Detailed variant creation error for FG-0000708: GraphQL query error for store local: 
2025-08-10 09:04:01,251 - sync_service - INFO - API log added to SAP: shopify - /admin/api/graphql_local - failure
2025-08-10 09:04:01,253 - sync_service - ERROR - Failed to add variant FG-0000708: GraphQL query error for store local: 
2025-08-10 09:04:02,031 - sync_service - INFO - Processing product group: ('FG-0000711', 'local') with 1 items for store local
2025-08-10 09:04:02,034 - sync_service - INFO - Found existing Shopify product ID: 7526282231874 for None
2025-08-10 09:04:02,037 - sync_service - INFO - Product None already exists in store local, adding variants
2025-08-10 09:04:02,039 - sync_service - INFO - API Call: {'service': 'shopify', 'endpoint': 'graphql_local', 'request': {'query': '\n        query GetProduct($id: ID!) {\n            product(id: $id) {\n                id\n                title\n                handle\n                description\n                variants(first: 50) {\n                    edges {\n                        node {\n                            id\n                            sku\n                            price\n                            inventoryItem {\n                                id\n                            }\n                            selectedOptions {\n                                name\n                                value\n                            }\n                        }\n                    }\n                }\n            }\n        }\n        ', 'variables': {'id': 'gid://shopify/Product/7526282231874'}}, 'response': None, 'status': None}
2025-08-10 09:04:02,589 - sync_service - INFO - API Call: {'service': 'shopify', 'endpoint': 'graphql_local', 'request': None, 'response': {'product': {'id': 'gid://shopify/Product/7526282231874', 'title': 'Morsi Keyboard', 'handle': 'morsi-keyboard', 'description': '', 'variants': {'edges': [{'node': {'id': 'gid://shopify/ProductVariant/42380104007746', 'sku': None, 'price': '0.00', 'inventoryItem': {'id': 'gid://shopify/InventoryItem/44480622985282'}, 'selectedOptions': [{'name': 'Title', 'value': 'Default Title'}]}}]}}}, 'status': 'success'}
2025-08-10 09:04:02,591 - sync_service - INFO - API Call: {'service': 'shopify', 'endpoint': 'graphql_local', 'request': {'query': '\n        query GetProduct($id: ID!) {\n            product(id: $id) {\n                id\n                title\n                handle\n                description\n                variants(first: 50) {\n                    edges {\n                        node {\n                            id\n                            sku\n                            price\n                            inventoryItem {\n                                id\n                            }\n                            selectedOptions {\n                                name\n                                value\n                            }\n                        }\n                    }\n                }\n            }\n        }\n        ', 'variables': {'id': 'gid://shopify/Product/7526282231874'}}, 'response': None, 'status': None}
2025-08-10 09:04:03,089 - sync_service - INFO - API Call: {'service': 'shopify', 'endpoint': 'graphql_local', 'request': None, 'response': {'product': {'id': 'gid://shopify/Product/7526282231874', 'title': 'Morsi Keyboard', 'handle': 'morsi-keyboard', 'description': '', 'variants': {'edges': [{'node': {'id': 'gid://shopify/ProductVariant/42380104007746', 'sku': None, 'price': '0.00', 'inventoryItem': {'id': 'gid://shopify/InventoryItem/44480622985282'}, 'selectedOptions': [{'name': 'Title', 'value': 'Default Title'}]}}]}}}, 'status': 'success'}
2025-08-10 09:04:03,364 - sync_service - INFO - API log added to SAP: shopify - /admin/api/graphql_local - success
2025-08-10 09:04:03,367 - sync_service - INFO - API Call: {'service': 'shopify', 'endpoint': 'graphql_local', 'request': {'query': '\n        mutation productVariantCreate($input: ProductVariantInput!) {\n            productVariantCreate(input: $input) {\n                productVariant {\n                    id\n                    sku\n                    price\n                    inventoryItem {\n                        id\n                    }\n                    selectedOptions {\n                        name\n                        value\n                    }\n                }\n                userErrors {\n                    field\n                    message\n                }\n            }\n        }\n        ', 'variables': {'input': {'sku': 'FG-0000711', 'price': '1000.0', 'inventoryPolicy': 'DENY', 'inventoryManagement': 'SHOPIFY', 'weight': 0.0, 'weightUnit': 'KILOGRAMS', 'taxable': False, 'productId': 'gid://shopify/Product/7526282231874'}}}, 'response': None, 'status': None}
2025-08-10 09:04:03,889 - sync_service - INFO - API Call: {'service': 'shopify', 'endpoint': 'graphql_local', 'request': None, 'response': {'productVariantCreate': {'productVariant': None, 'userErrors': [{'field': None, 'message': "The variant 'Default Title' already exists."}]}}, 'status': 'success'}
2025-08-10 09:04:03,890 - sync_service - INFO - Variant FG-0000711 already exists, attempting to find it
2025-08-10 09:04:03,891 - sync_service - INFO - API Call: {'service': 'shopify', 'endpoint': 'graphql_local', 'request': {'query': '\n        query GetProduct($id: ID!) {\n            product(id: $id) {\n                id\n                title\n                handle\n                description\n                variants(first: 50) {\n                    edges {\n                        node {\n                            id\n                            sku\n                            price\n                            inventoryItem {\n                                id\n                            }\n                            selectedOptions {\n                                name\n                                value\n                            }\n                        }\n                    }\n                }\n            }\n        }\n        ', 'variables': {'id': 'gid://shopify/Product/7526282231874'}}, 'response': None, 'status': None}
2025-08-10 09:04:04,375 - sync_service - INFO - API Call: {'service': 'shopify', 'endpoint': 'graphql_local', 'request': None, 'response': {'product': {'id': 'gid://shopify/Product/7526282231874', 'title': 'Morsi Keyboard', 'handle': 'morsi-keyboard', 'description': '', 'variants': {'edges': [{'node': {'id': 'gid://shopify/ProductVariant/42380104007746', 'sku': None, 'price': '0.00', 'inventoryItem': {'id': 'gid://shopify/InventoryItem/44480622985282'}, 'selectedOptions': [{'name': 'Title', 'value': 'Default Title'}]}}]}}}, 'status': 'success'}
2025-08-10 09:04:04,377 - sync_service - ERROR - Variant FG-0000711 already exists but couldn't be found
2025-08-10 09:04:04,378 - sync_service - ERROR - Failed to add variant FG-0000711: Variant FG-0000711 already exists but couldn't be found
2025-08-10 09:04:05,548 - sync_service - INFO - Processing product group: ('FG-0000712', 'local') with 1 items for store local
2025-08-10 09:04:05,551 - sync_service - INFO - Found existing Shopify product ID: 7526282264642 for None
2025-08-10 09:04:05,554 - sync_service - INFO - Product None already exists in store local, adding variants
2025-08-10 09:04:05,555 - sync_service - INFO - API Call: {'service': 'shopify', 'endpoint': 'graphql_local', 'request': {'query': '\n        query GetProduct($id: ID!) {\n            product(id: $id) {\n                id\n                title\n                handle\n                description\n                variants(first: 50) {\n                    edges {\n                        node {\n                            id\n                            sku\n                            price\n                            inventoryItem {\n                                id\n                            }\n                            selectedOptions {\n                                name\n                                value\n                            }\n                        }\n                    }\n                }\n            }\n        }\n        ', 'variables': {'id': 'gid://shopify/Product/7526282264642'}}, 'response': None, 'status': None}
2025-08-10 09:04:06,027 - sync_service - INFO - API Call: {'service': 'shopify', 'endpoint': 'graphql_local', 'request': None, 'response': {'product': {'id': 'gid://shopify/Product/7526282264642', 'title': 'AA-Iron Man Necklace', 'handle': 'aa-iron-man-necklace', 'description': '', 'variants': {'edges': [{'node': {'id': 'gid://shopify/ProductVariant/42380104040514', 'sku': None, 'price': '0.00', 'inventoryItem': {'id': 'gid://shopify/InventoryItem/44480623018050'}, 'selectedOptions': [{'name': 'Title', 'value': 'Default Title'}]}}]}}}, 'status': 'success'}
2025-08-10 09:04:06,029 - sync_service - INFO - API Call: {'service': 'shopify', 'endpoint': 'graphql_local', 'request': {'query': '\n        query GetProduct($id: ID!) {\n            product(id: $id) {\n                id\n                title\n                handle\n                description\n                variants(first: 50) {\n                    edges {\n                        node {\n                            id\n                            sku\n                            price\n                            inventoryItem {\n                                id\n                            }\n                            selectedOptions {\n                                name\n                                value\n                            }\n                        }\n                    }\n                }\n            }\n        }\n        ', 'variables': {'id': 'gid://shopify/Product/7526282264642'}}, 'response': None, 'status': None}
2025-08-10 09:04:13,665 - sync_service - INFO - API Call: {'service': 'shopify', 'endpoint': 'graphql_local', 'request': None, 'response': {'product': {'id': 'gid://shopify/Product/7526282264642', 'title': 'AA-Iron Man Necklace', 'handle': 'aa-iron-man-necklace', 'description': '', 'variants': {'edges': [{'node': {'id': 'gid://shopify/ProductVariant/42380104040514', 'sku': None, 'price': '0.00', 'inventoryItem': {'id': 'gid://shopify/InventoryItem/44480623018050'}, 'selectedOptions': [{'name': 'Title', 'value': 'Default Title'}]}}]}}}, 'status': 'success'}
2025-08-10 09:04:14,372 - sync_service - INFO - API log added to SAP: shopify - /admin/api/graphql_local - success
2025-08-10 09:04:14,374 - sync_service - INFO - API Call: {'service': 'shopify', 'endpoint': 'graphql_local', 'request': {'query': '\n        mutation productVariantCreate($input: ProductVariantInput!) {\n            productVariantCreate(input: $input) {\n                productVariant {\n                    id\n                    sku\n                    price\n                    inventoryItem {\n                        id\n                    }\n                    selectedOptions {\n                        name\n                        value\n                    }\n                }\n                userErrors {\n                    field\n                    message\n                }\n            }\n        }\n        ', 'variables': {'input': {'sku': 'FG-0000712', 'price': '1000.0', 'inventoryPolicy': 'DENY', 'inventoryManagement': 'SHOPIFY', 'weight': 0.0, 'weightUnit': 'KILOGRAMS', 'taxable': False, 'barcode': '203090', 'productId': 'gid://shopify/Product/7526282264642'}}}, 'response': None, 'status': None}
2025-08-10 09:04:14,884 - sync_service - INFO - API Call: {'service': 'shopify', 'endpoint': 'graphql_local', 'request': None, 'response': {'productVariantCreate': {'productVariant': None, 'userErrors': [{'field': None, 'message': "The variant 'Default Title' already exists."}]}}, 'status': 'success'}
2025-08-10 09:04:14,885 - sync_service - INFO - Variant FG-0000712 already exists, attempting to find it
2025-08-10 09:04:14,886 - sync_service - INFO - API Call: {'service': 'shopify', 'endpoint': 'graphql_local', 'request': {'query': '\n        query GetProduct($id: ID!) {\n            product(id: $id) {\n                id\n                title\n                handle\n                description\n                variants(first: 50) {\n                    edges {\n                        node {\n                            id\n                            sku\n                            price\n                            inventoryItem {\n                                id\n                            }\n                            selectedOptions {\n                                name\n                                value\n                            }\n                        }\n                    }\n                }\n            }\n        }\n        ', 'variables': {'id': 'gid://shopify/Product/7526282264642'}}, 'response': None, 'status': None}
2025-08-10 09:04:15,350 - sync_service - INFO - API Call: {'service': 'shopify', 'endpoint': 'graphql_local', 'request': None, 'response': {'product': {'id': 'gid://shopify/Product/7526282264642', 'title': 'AA-Iron Man Necklace', 'handle': 'aa-iron-man-necklace', 'description': '', 'variants': {'edges': [{'node': {'id': 'gid://shopify/ProductVariant/42380104040514', 'sku': None, 'price': '0.00', 'inventoryItem': {'id': 'gid://shopify/InventoryItem/44480623018050'}, 'selectedOptions': [{'name': 'Title', 'value': 'Default Title'}]}}]}}}, 'status': 'success'}
2025-08-10 09:04:15,351 - sync_service - ERROR - Variant FG-0000712 already exists but couldn't be found
2025-08-10 09:04:15,352 - sync_service - ERROR - Failed to add variant FG-0000712: Variant FG-0000712 already exists but couldn't be found
2025-08-10 09:04:16,530 - sync_service - INFO - Processing product group: ('Iron Man Necklace', 'local') with 2 items for store local
2025-08-10 09:04:16,532 - sync_service - INFO - Found existing Shopify product ID: 7526282330178 for Iron Man Necklace
2025-08-10 09:04:16,534 - sync_service - INFO - Product Iron Man Necklace already exists in store local, adding variants
2025-08-10 09:04:16,535 - sync_service - INFO - API Call: {'service': 'shopify', 'endpoint': 'graphql_local', 'request': {'query': '\n        query GetProduct($id: ID!) {\n            product(id: $id) {\n                id\n                title\n                handle\n                description\n                variants(first: 50) {\n                    edges {\n                        node {\n                            id\n                            sku\n                            price\n                            inventoryItem {\n                                id\n                            }\n                            selectedOptions {\n                                name\n                                value\n                            }\n                        }\n                    }\n                }\n            }\n        }\n        ', 'variables': {'id': 'gid://shopify/Product/7526282330178'}}, 'response': None, 'status': None}
2025-08-10 09:04:17,040 - sync_service - INFO - API Call: {'service': 'shopify', 'endpoint': 'graphql_local', 'request': None, 'response': {'product': {'id': 'gid://shopify/Product/7526282330178', 'title': 'Iron Man Necklace', 'handle': 'iron-man-necklace', 'description': '', 'variants': {'edges': [{'node': {'id': 'gid://shopify/ProductVariant/42380104106050', 'sku': None, 'price': '0.00', 'inventoryItem': {'id': 'gid://shopify/InventoryItem/44480623083586'}, 'selectedOptions': [{'name': 'Title', 'value': 'Default Title'}]}}, {'node': {'id': 'gid://shopify/ProductVariant/42380109283394', 'sku': 'FG-0000713', 'price': '2000.00', 'inventoryItem': {'id': 'gid://shopify/InventoryItem/44480628260930'}, 'selectedOptions': [{'name': 'Title', 'value': 'Red'}]}}, {'node': {'id': 'gid://shopify/ProductVariant/42380109316162', 'sku': 'FG-0000714', 'price': '3000.00', 'inventoryItem': {'id': 'gid://shopify/InventoryItem/44480628293698'}, 'selectedOptions': [{'name': 'Title', 'value': 'Blue'}]}}]}}}, 'status': 'success'}
2025-08-10 09:04:17,040 - sync_service - INFO - Variant FG-0000713 already exists, skipping
2025-08-10 09:04:17,041 - sync_service - INFO - Variant FG-0000714 already exists, skipping
2025-08-10 09:04:18,201 - sync_service - INFO - Processing product group: ('Morsi Laptop', 'local') with 2 items for store local
2025-08-10 09:04:18,202 - sync_service - INFO - Found existing Shopify product ID: 7526282362946 for Morsi Laptop
2025-08-10 09:04:18,204 - sync_service - INFO - Product Morsi Laptop already exists in store local, adding variants
2025-08-10 09:04:18,206 - sync_service - INFO - API Call: {'service': 'shopify', 'endpoint': 'graphql_local', 'request': {'query': '\n        query GetProduct($id: ID!) {\n            product(id: $id) {\n                id\n                title\n                handle\n                description\n                variants(first: 50) {\n                    edges {\n                        node {\n                            id\n                            sku\n                            price\n                            inventoryItem {\n                                id\n                            }\n                            selectedOptions {\n                                name\n                                value\n                            }\n                        }\n                    }\n                }\n            }\n        }\n        ', 'variables': {'id': 'gid://shopify/Product/7526282362946'}}, 'response': None, 'status': None}
2025-08-10 09:04:25,968 - sync_service - INFO - API Call: {'service': 'shopify', 'endpoint': 'graphql_local', 'request': None, 'response': {'product': {'id': 'gid://shopify/Product/7526282362946', 'title': 'Morsi Laptop', 'handle': 'morsi-laptop', 'description': '', 'variants': {'edges': [{'node': {'id': 'gid://shopify/ProductVariant/42380104138818', 'sku': None, 'price': '0.00', 'inventoryItem': {'id': 'gid://shopify/InventoryItem/44480623116354'}, 'selectedOptions': [{'name': 'Title', 'value': 'Default Title'}]}}, {'node': {'id': 'gid://shopify/ProductVariant/42380109348930', 'sku': 'FG-0000709', 'price': '1000.00', 'inventoryItem': {'id': 'gid://shopify/InventoryItem/44480628326466'}, 'selectedOptions': [{'name': 'Title', 'value': 'Black'}]}}, {'node': {'id': 'gid://shopify/ProductVariant/42380109381698', 'sku': 'FG-0000710', 'price': '1000.00', 'inventoryItem': {'id': 'gid://shopify/InventoryItem/44480628359234'}, 'selectedOptions': [{'name': 'Title', 'value': 'Gray'}]}}]}}}, 'status': 'success'}
2025-08-10 09:04:25,969 - sync_service - INFO - Variant FG-0000709 already exists, skipping
2025-08-10 09:04:25,971 - sync_service - INFO - Variant FG-0000710 already exists, skipping
2025-08-10 09:04:27,177 - sync_service - INFO - Processing product group: ('Morsi Necklace', 'local') with 3 items for store local
2025-08-10 09:04:27,177 - sync_service - INFO - Found existing Shopify product ID: 7526282395714 for Morsi Necklace
2025-08-10 09:04:27,178 - sync_service - INFO - Product Morsi Necklace already exists in store local, adding variants
2025-08-10 09:04:27,179 - sync_service - INFO - API Call: {'service': 'shopify', 'endpoint': 'graphql_local', 'request': {'query': '\n        query GetProduct($id: ID!) {\n            product(id: $id) {\n                id\n                title\n                handle\n                description\n                variants(first: 50) {\n                    edges {\n                        node {\n                            id\n                            sku\n                            price\n                            inventoryItem {\n                                id\n                            }\n                            selectedOptions {\n                                name\n                                value\n                            }\n                        }\n                    }\n                }\n            }\n        }\n        ', 'variables': {'id': 'gid://shopify/Product/7526282395714'}}, 'response': None, 'status': None}
2025-08-10 09:04:27,729 - sync_service - INFO - API Call: {'service': 'shopify', 'endpoint': 'graphql_local', 'request': None, 'response': {'product': {'id': 'gid://shopify/Product/7526282395714', 'title': 'Morsi Necklace', 'handle': 'morsi-necklace', 'description': '', 'variants': {'edges': [{'node': {'id': 'gid://shopify/ProductVariant/42380104171586', 'sku': None, 'price': '0.00', 'inventoryItem': {'id': 'gid://shopify/InventoryItem/44480623149122'}, 'selectedOptions': [{'name': 'Title', 'value': 'Default Title'}]}}, {'node': {'id': 'gid://shopify/ProductVariant/42380109414466', 'sku': 'FG-0000702', 'price': '2500.00', 'inventoryItem': {'id': 'gid://shopify/InventoryItem/44480628392002'}, 'selectedOptions': [{'name': 'Title', 'value': 'Black'}]}}, {'node': {'id': 'gid://shopify/ProductVariant/42380109447234', 'sku': 'FG-0000703', 'price': '2500.00', 'inventoryItem': {'id': 'gid://shopify/InventoryItem/44480628424770'}, 'selectedOptions': [{'name': 'Title', 'value': 'White'}]}}, {'node': {'id': 'gid://shopify/ProductVariant/42380109480002', 'sku': 'FG-0000705', 'price': '2500.00', 'inventoryItem': {'id': 'gid://shopify/InventoryItem/44480628457538'}, 'selectedOptions': [{'name': 'Title', 'value': 'Green'}]}}]}}}, 'status': 'success'}
2025-08-10 09:04:27,733 - sync_service - INFO - Variant FG-0000702 already exists, skipping
2025-08-10 09:04:27,735 - sync_service - INFO - Variant FG-0000703 already exists, skipping
2025-08-10 09:04:27,739 - sync_service - INFO - Variant FG-0000705 already exists, skipping
2025-08-10 09:04:28,552 - sync_service - INFO - Processing product group: ('Morsi Shoes', 'local') with 2 items for store local
2025-08-10 09:04:28,554 - sync_service - INFO - Found existing Shopify product ID: 7526282461250 for Morsi Shoes
2025-08-10 09:04:28,555 - sync_service - INFO - Product Morsi Shoes already exists in store local, adding variants
2025-08-10 09:04:28,556 - sync_service - INFO - API Call: {'service': 'shopify', 'endpoint': 'graphql_local', 'request': {'query': '\n        query GetProduct($id: ID!) {\n            product(id: $id) {\n                id\n                title\n                handle\n                description\n                variants(first: 50) {\n                    edges {\n                        node {\n                            id\n                            sku\n                            price\n                            inventoryItem {\n                                id\n                            }\n                            selectedOptions {\n                                name\n                                value\n                            }\n                        }\n                    }\n                }\n            }\n        }\n        ', 'variables': {'id': 'gid://shopify/Product/7526282461250'}}, 'response': None, 'status': None}
2025-08-10 09:04:29,065 - sync_service - INFO - API Call: {'service': 'shopify', 'endpoint': 'graphql_local', 'request': None, 'response': {'product': {'id': 'gid://shopify/Product/7526282461250', 'title': 'Morsi Shoes', 'handle': 'morsi-shoes', 'description': '', 'variants': {'edges': [{'node': {'id': 'gid://shopify/ProductVariant/42380104663106', 'sku': None, 'price': '0.00', 'inventoryItem': {'id': 'gid://shopify/InventoryItem/44480623640642'}, 'selectedOptions': [{'name': 'Title', 'value': 'Default Title'}]}}, {'node': {'id': 'gid://shopify/ProductVariant/42380109512770', 'sku': 'FG-0000706', 'price': '1000.00', 'inventoryItem': {'id': 'gid://shopify/InventoryItem/44480628490306'}, 'selectedOptions': [{'name': 'Title', 'value': 'Green'}]}}, {'node': {'id': 'gid://shopify/ProductVariant/42380109578306', 'sku': 'FG-0000707', 'price': '1000.00', 'inventoryItem': {'id': 'gid://shopify/InventoryItem/44480628555842'}, 'selectedOptions': [{'name': 'Title', 'value': 'Beige'}]}}]}}}, 'status': 'success'}
2025-08-10 09:04:29,067 - sync_service - INFO - Variant FG-0000706 already exists, skipping
2025-08-10 09:04:29,069 - sync_service - INFO - Variant FG-0000707 already exists, skipping
2025-08-10 09:04:29,861 - sync_service - INFO - Sync Event: {'sync_type': 'multi_store_new_items_sap_to_shopify', 'items_processed': 8, 'success_count': 0, 'error_count': 4, 'details': None}
2025-08-10 09:04:29,862 - sync_service - INFO - Multi-store new items sync completed: 8 processed, 0 successful, 4 errors
2025-08-10 09:04:29,864 - sync_service - INFO - Starting stock change sync...
2025-08-10 09:04:29,865 - sync_service - INFO - Starting stock change sync using MASHURA_StockChangeB1SLQuery view
2025-08-10 09:04:29,867 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'view.svc/MASHURA_StockChangeB1SLQuery', 'request': {'method': 'GET', 'url': 'https://10.0.0.100:50000/b1s/v1/view.svc/MASHURA_StockChangeB1SLQuery', 'data': None, 'params': {'$top': 50}}, 'response': None, 'status': None}
2025-08-10 09:04:30,533 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'view.svc/MASHURA_StockChangeB1SLQuery', 'request': None, 'response': {'odata.metadata': 'https://10.0.0.100:50000/b1s/v1/view.svc/$metadata#MASHURA_StockChangeB1SLQuery', 'value': []}, 'status': 'success'}
2025-08-10 09:04:30,535 - sync_service - INFO - No stock changes found in the view.
2025-08-10 09:04:30,536 - sync_service - INFO - Starting item changes sync...
2025-08-10 09:04:30,536 - sync_service - INFO - Starting item changes sync from SAP to Shopify
2025-08-10 09:04:30,537 - sync_service - INFO - Processing item changes for store: local
2025-08-10 09:04:30,538 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': "view.svc/MASHURA_ItemChangeB1SLQuery?$filter=Shopify_Store eq 'local'", 'request': {'method': 'GET', 'url': "https://10.0.0.100:50000/b1s/v1/view.svc/MASHURA_ItemChangeB1SLQuery?$filter=Shopify_Store eq 'local'", 'data': None, 'params': None}, 'response': None, 'status': None}
2025-08-10 09:04:30,836 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': "view.svc/MASHURA_ItemChangeB1SLQuery?$filter=Shopify_Store eq 'local'", 'request': None, 'response': {'odata.metadata': 'https://10.0.0.100:50000/b1s/v1/view.svc/$metadata#MASHURA_ItemChangeB1SLQuery', 'value': []}, 'status': 'success'}
2025-08-10 09:04:30,838 - sync_service - INFO - Found 0 item changes for store local
2025-08-10 09:04:30,839 - sync_service - INFO - No item changes found for store local
2025-08-10 09:04:30,840 - sync_service - INFO - Sync Event: {'sync_type': 'item_changes_sap_to_shopify', 'items_processed': 0, 'success_count': 0, 'error_count': 0, 'details': None}
2025-08-10 09:04:30,840 - sync_service - INFO - Item changes sync completed: 0 processed, 0 successful, 0 errors
2025-08-10 09:04:30,841 - sync_service - INFO - Starting price changes sync...
2025-08-10 09:04:30,841 - sync_service - INFO - Starting price changes sync from SAP to Shopify
2025-08-10 09:04:30,841 - sync_service - INFO - Processing price changes for store: local
2025-08-10 09:04:30,842 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': "view.svc/MASHURA_PriceChangeB1SLQuery?$filter=Shopify_Store eq 'local'", 'request': {'method': 'GET', 'url': "https://10.0.0.100:50000/b1s/v1/view.svc/MASHURA_PriceChangeB1SLQuery?$filter=Shopify_Store eq 'local'", 'data': None, 'params': None}, 'response': None, 'status': None}
2025-08-10 09:04:31,118 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': "view.svc/MASHURA_PriceChangeB1SLQuery?$filter=Shopify_Store eq 'local'", 'request': None, 'response': {'odata.metadata': 'https://10.0.0.100:50000/b1s/v1/view.svc/$metadata#MASHURA_PriceChangeB1SLQuery', 'value': []}, 'status': 'success'}
2025-08-10 09:04:31,122 - sync_service - INFO - Found 0 price changes for store local
2025-08-10 09:04:31,122 - sync_service - INFO - No price changes found for store local
2025-08-10 09:04:31,123 - sync_service - INFO - Sync Event: {'sync_type': 'price_changes_sap_to_shopify', 'items_processed': 0, 'success_count': 0, 'error_count': 0, 'details': None}
2025-08-10 09:04:31,123 - sync_service - INFO - Price changes sync completed: 0 processed, 0 successful, 0 errors
2025-08-10 09:05:39,493 - sync_service - INFO - Initialized Shopify client for store: Local Store (local)
2025-08-10 09:05:39,507 - sync_service - INFO - Starting all syncs...
2025-08-10 09:05:39,507 - sync_service - INFO - Starting new items sync...
2025-08-10 09:05:39,514 - sync_service - INFO - Starting multi-store new items sync from SAP to Shopify
2025-08-10 09:05:39,515 - sync_service - INFO - Fetching new items for store: local
2025-08-10 09:05:39,515 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'login', 'request': {'company': 'JudeBenHalim_Test', 'user': 'manager'}, 'response': None, 'status': None}
2025-08-10 09:05:40,275 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'login', 'request': None, 'response': {'status': 'success'}, 'status': 'success'}
2025-08-10 09:05:40,276 - sync_service - INFO - SAP login successful
2025-08-10 09:05:40,276 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': "view.svc/MASHURA_New_ItemsB1SLQuery?$filter=Shopify_Store eq 'local'&$orderby=MainProduct", 'request': {'method': 'GET', 'url': "https://10.0.0.100:50000/b1s/v1/view.svc/MASHURA_New_ItemsB1SLQuery?$filter=Shopify_Store eq 'local'&$orderby=MainProduct", 'data': None, 'params': None}, 'response': None, 'status': None}
2025-08-10 09:05:40,961 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': "view.svc/MASHURA_New_ItemsB1SLQuery?$filter=Shopify_Store eq 'local'&$orderby=MainProduct", 'request': None, 'response': {'odata.metadata': 'https://10.0.0.100:50000/b1s/v1/view.svc/$metadata#MASHURA_New_ItemsB1SLQuery', 'value': [{'itemcode': 'FG-0000704', 'ItemName': 'Morsi Bracelet', 'MainProduct': None, 'Color': None, 'Price': 3200.0, 'Shopify_Store': 'local', 'Shopify_ProductCode': '7526282166338', 'Status': 'existing', 'Barcode': '645464644', 'id__': 1}, {'itemcode': 'FG-0000708', 'ItemName': 'Morsi Socks', 'MainProduct': None, 'Color': None, 'Price': 200.0, 'Shopify_Store': 'local', 'Shopify_ProductCode': '7526282199106', 'Status': 'existing', 'Barcode': None, 'id__': 2}, {'itemcode': 'FG-0000711', 'ItemName': 'Morsi Keyboard', 'MainProduct': None, 'Color': None, 'Price': 1000.0, 'Shopify_Store': 'local', 'Shopify_ProductCode': '7526282231874', 'Status': 'existing', 'Barcode': None, 'id__': 3}, {'itemcode': 'FG-0000712', 'ItemName': 'AA-Iron Man Necklace', 'MainProduct': None, 'Color': None, 'Price': 1000.0, 'Shopify_Store': 'local', 'Shopify_ProductCode': '7526282264642', 'Status': 'existing', 'Barcode': '203090', 'id__': 4}, {'itemcode': 'FG-0000713', 'ItemName': 'AA-Ring Red', 'MainProduct': 'Iron Man Necklace', 'Color': 'Red', 'Price': 2000.0, 'Shopify_Store': 'local', 'Shopify_ProductCode': '7526282330178', 'Status': 'existing', 'Barcode': '203090', 'id__': 5}, {'itemcode': 'FG-0000714', 'ItemName': 'AA-Ring Blue', 'MainProduct': 'Iron Man Necklace', 'Color': 'Blue', 'Price': 3000.0, 'Shopify_Store': 'local', 'Shopify_ProductCode': '7526282330178', 'Status': 'existing', 'Barcode': '203090', 'id__': 6}, {'itemcode': 'FG-0000709', 'ItemName': 'Morsi-Laptop-Black', 'MainProduct': 'Morsi Laptop', 'Color': 'Black', 'Price': 1000.0, 'Shopify_Store': 'local', 'Shopify_ProductCode': '7526282362946', 'Status': 'existing', 'Barcode': None, 'id__': 7}, {'itemcode': 'FG-0000710', 'ItemName': 'Morsi-Laptop-Grey', 'MainProduct': 'Morsi Laptop', 'Color': 'Grey', 'Price': 1000.0, 'Shopify_Store': 'local', 'Shopify_ProductCode': '7526282362946', 'Status': 'existing', 'Barcode': None, 'id__': 8}, {'itemcode': 'FG-0000702', 'ItemName': 'Morsi-Necklace-Black', 'MainProduct': 'Morsi Necklace', 'Color': 'Black', 'Price': 2500.0, 'Shopify_Store': 'local', 'Shopify_ProductCode': '7526282395714', 'Status': 'existing', 'Barcode': '2123243245', 'id__': 9}, {'itemcode': 'FG-0000703', 'ItemName': 'Morsi-Necklace-White', 'MainProduct': 'Morsi Necklace', 'Color': 'White', 'Price': 2500.0, 'Shopify_Store': 'local', 'Shopify_ProductCode': '7526282395714', 'Status': 'existing', 'Barcode': '242342342', 'id__': 10}, {'itemcode': 'FG-0000705', 'ItemName': 'Morsi-Necklace-Green', 'MainProduct': 'Morsi Necklace', 'Color': 'Green', 'Price': 2500.0, 'Shopify_Store': 'local', 'Shopify_ProductCode': '7526282395714', 'Status': 'existing', 'Barcode': None, 'id__': 11}, {'itemcode': 'FG-0000706', 'ItemName': 'Morsi-Shoes-Green', 'MainProduct': 'Morsi Shoes', 'Color': 'Green', 'Price': 1000.0, 'Shopify_Store': 'local', 'Shopify_ProductCode': '7526282461250', 'Status': 'existing', 'Barcode': None, 'id__': 12}, {'itemcode': 'FG-0000707', 'ItemName': 'Morsi-Shoes-Beige', 'MainProduct': 'Morsi Shoes', 'Color': 'Beige', 'Price': 1000.0, 'Shopify_Store': 'local', 'Shopify_ProductCode': '7526282461250', 'Status': 'existing', 'Barcode': None, 'id__': 13}]}, 'status': 'success'}
2025-08-10 09:05:40,963 - sync_service - INFO - Product group: ('FG-0000704', 'local') has 1 items
2025-08-10 09:05:40,963 - sync_service - INFO - Product group: ('FG-0000708', 'local') has 1 items
2025-08-10 09:05:40,965 - sync_service - INFO - Product group: ('FG-0000711', 'local') has 1 items
2025-08-10 09:05:40,965 - sync_service - INFO - Product group: ('FG-0000712', 'local') has 1 items
2025-08-10 09:05:40,965 - sync_service - INFO - Product group: ('Iron Man Necklace', 'local') has 2 items
2025-08-10 09:05:40,965 - sync_service - INFO - Product group: ('Morsi Laptop', 'local') has 2 items
2025-08-10 09:05:40,965 - sync_service - INFO - Product group: ('Morsi Necklace', 'local') has 3 items
2025-08-10 09:05:40,967 - sync_service - INFO - Product group: ('Morsi Shoes', 'local') has 2 items
2025-08-10 09:05:40,967 - sync_service - INFO - Grouped 13 items into 8 product groups for store local
2025-08-10 09:05:40,968 - sync_service - INFO - Processing product group: ('FG-0000704', 'local') with 1 items for store local
2025-08-10 09:05:40,968 - sync_service - INFO - Found existing Shopify product ID: 7526282166338 for None
2025-08-10 09:05:40,969 - sync_service - INFO - Product None already exists in store local, adding variants
2025-08-10 09:05:40,969 - sync_service - INFO - API Call: {'service': 'shopify', 'endpoint': 'graphql_local', 'request': {'query': '\n        query GetProduct($id: ID!) {\n            product(id: $id) {\n                id\n                title\n                handle\n                description\n                variants(first: 50) {\n                    edges {\n                        node {\n                            id\n                            sku\n                            price\n                            inventoryItem {\n                                id\n                            }\n                            selectedOptions {\n                                name\n                                value\n                            }\n                        }\n                    }\n                }\n            }\n        }\n        ', 'variables': {'id': 'gid://shopify/Product/7526282166338'}}, 'response': None, 'status': None}
2025-08-10 09:05:41,454 - sync_service - INFO - API Call: {'service': 'shopify', 'endpoint': 'graphql_local', 'request': None, 'response': {'product': {'id': 'gid://shopify/Product/7526282166338', 'title': 'Morsi Bracelet', 'handle': 'morsi-bracelet', 'description': '', 'variants': {'edges': [{'node': {'id': 'gid://shopify/ProductVariant/42380103942210', 'sku': None, 'price': '0.00', 'inventoryItem': {'id': 'gid://shopify/InventoryItem/44480622919746'}, 'selectedOptions': [{'name': 'Title', 'value': 'Default Title'}]}}]}}}, 'status': 'success'}
2025-08-10 09:05:41,455 - sync_service - INFO - API Call: {'service': 'shopify', 'endpoint': 'graphql_local', 'request': {'query': '\n        query GetProduct($id: ID!) {\n            product(id: $id) {\n                id\n                title\n                handle\n                description\n                variants(first: 50) {\n                    edges {\n                        node {\n                            id\n                            sku\n                            price\n                            inventoryItem {\n                                id\n                            }\n                            selectedOptions {\n                                name\n                                value\n                            }\n                        }\n                    }\n                }\n            }\n        }\n        ', 'variables': {'id': 'gid://shopify/Product/7526282166338'}}, 'response': None, 'status': None}
2025-08-10 09:05:41,924 - sync_service - INFO - API Call: {'service': 'shopify', 'endpoint': 'graphql_local', 'request': None, 'response': {'product': {'id': 'gid://shopify/Product/7526282166338', 'title': 'Morsi Bracelet', 'handle': 'morsi-bracelet', 'description': '', 'variants': {'edges': [{'node': {'id': 'gid://shopify/ProductVariant/42380103942210', 'sku': None, 'price': '0.00', 'inventoryItem': {'id': 'gid://shopify/InventoryItem/44480622919746'}, 'selectedOptions': [{'name': 'Title', 'value': 'Default Title'}]}}]}}}, 'status': 'success'}
2025-08-10 09:05:42,615 - sync_service - INFO - SAP logging client login successful
2025-08-10 09:05:43,296 - sync_service - INFO - API log added to SAP: shopify - /admin/api/graphql_local - success
2025-08-10 09:05:43,297 - sync_service - INFO - API Call: {'service': 'shopify', 'endpoint': 'graphql_local', 'request': {'query': '\n        mutation productVariantCreate($input: ProductVariantInput!) {\n            productVariantCreate(input: $input) {\n                productVariant {\n                    id\n                    sku\n                    price\n                    inventoryItem {\n                        id\n                    }\n                    selectedOptions {\n                        name\n                        value\n                    }\n                }\n                userErrors {\n                    field\n                    message\n                }\n            }\n        }\n        ', 'variables': {'input': {'sku': 'FG-0000704', 'price': '3200.0', 'inventoryPolicy': 'DENY', 'inventoryManagement': 'SHOPIFY', 'weight': 0.0, 'weightUnit': 'KILOGRAMS', 'taxable': False, 'barcode': '645464644', 'productId': 'gid://shopify/Product/7526282166338'}}}, 'response': None, 'status': None}
2025-08-10 09:05:53,309 - sync_service - ERROR - GraphQL query error for store local: 
2025-08-10 09:05:54,020 - sync_service - INFO - API log added to SAP: shopify - /admin/api/graphql_local - failure
2025-08-10 09:05:54,021 - sync_service - ERROR - Detailed variant creation error for FG-0000704: GraphQL query error for store local: 
2025-08-10 09:05:54,690 - sync_service - INFO - API log added to SAP: shopify - /admin/api/graphql_local - failure
2025-08-10 09:05:54,690 - sync_service - ERROR - Failed to add variant FG-0000704: GraphQL query error for store local: 
2025-08-10 09:05:55,863 - sync_service - INFO - Processing product group: ('FG-0000708', 'local') with 1 items for store local
2025-08-10 09:05:55,863 - sync_service - INFO - Found existing Shopify product ID: 7526282199106 for None
2025-08-10 09:05:55,864 - sync_service - INFO - Product None already exists in store local, adding variants
2025-08-10 09:05:55,864 - sync_service - INFO - API Call: {'service': 'shopify', 'endpoint': 'graphql_local', 'request': {'query': '\n        query GetProduct($id: ID!) {\n            product(id: $id) {\n                id\n                title\n                handle\n                description\n                variants(first: 50) {\n                    edges {\n                        node {\n                            id\n                            sku\n                            price\n                            inventoryItem {\n                                id\n                            }\n                            selectedOptions {\n                                name\n                                value\n                            }\n                        }\n                    }\n                }\n            }\n        }\n        ', 'variables': {'id': 'gid://shopify/Product/7526282199106'}}, 'response': None, 'status': None}
2025-08-10 09:05:56,342 - sync_service - INFO - API Call: {'service': 'shopify', 'endpoint': 'graphql_local', 'request': None, 'response': {'product': {'id': 'gid://shopify/Product/7526282199106', 'title': 'Morsi Socks', 'handle': 'morsi-socks', 'description': '', 'variants': {'edges': [{'node': {'id': 'gid://shopify/ProductVariant/42380103974978', 'sku': None, 'price': '0.00', 'inventoryItem': {'id': 'gid://shopify/InventoryItem/44480622952514'}, 'selectedOptions': [{'name': 'Title', 'value': 'Default Title'}]}}]}}}, 'status': 'success'}
2025-08-10 09:05:56,343 - sync_service - INFO - API Call: {'service': 'shopify', 'endpoint': 'graphql_local', 'request': {'query': '\n        query GetProduct($id: ID!) {\n            product(id: $id) {\n                id\n                title\n                handle\n                description\n                variants(first: 50) {\n                    edges {\n                        node {\n                            id\n                            sku\n                            price\n                            inventoryItem {\n                                id\n                            }\n                            selectedOptions {\n                                name\n                                value\n                            }\n                        }\n                    }\n                }\n            }\n        }\n        ', 'variables': {'id': 'gid://shopify/Product/7526282199106'}}, 'response': None, 'status': None}
2025-08-10 09:05:56,816 - sync_service - INFO - API Call: {'service': 'shopify', 'endpoint': 'graphql_local', 'request': None, 'response': {'product': {'id': 'gid://shopify/Product/7526282199106', 'title': 'Morsi Socks', 'handle': 'morsi-socks', 'description': '', 'variants': {'edges': [{'node': {'id': 'gid://shopify/ProductVariant/42380103974978', 'sku': None, 'price': '0.00', 'inventoryItem': {'id': 'gid://shopify/InventoryItem/44480622952514'}, 'selectedOptions': [{'name': 'Title', 'value': 'Default Title'}]}}]}}}, 'status': 'success'}
2025-08-10 09:05:57,492 - sync_service - INFO - API log added to SAP: shopify - /admin/api/graphql_local - success
2025-08-10 09:05:57,492 - sync_service - INFO - API Call: {'service': 'shopify', 'endpoint': 'graphql_local', 'request': {'query': '\n        mutation productVariantCreate($input: ProductVariantInput!) {\n            productVariantCreate(input: $input) {\n                productVariant {\n                    id\n                    sku\n                    price\n                    inventoryItem {\n                        id\n                    }\n                    selectedOptions {\n                        name\n                        value\n                    }\n                }\n                userErrors {\n                    field\n                    message\n                }\n            }\n        }\n        ', 'variables': {'input': {'sku': 'FG-0000708', 'price': '200.0', 'inventoryPolicy': 'DENY', 'inventoryManagement': 'SHOPIFY', 'weight': 0.0, 'weightUnit': 'KILOGRAMS', 'taxable': False, 'productId': 'gid://shopify/Product/7526282199106'}}}, 'response': None, 'status': None}
2025-08-10 09:05:57,980 - sync_service - INFO - API Call: {'service': 'shopify', 'endpoint': 'graphql_local', 'request': None, 'response': {'productVariantCreate': {'productVariant': None, 'userErrors': [{'field': None, 'message': "The variant 'Default Title' already exists."}]}}, 'status': 'success'}
2025-08-10 09:05:57,980 - sync_service - INFO - Variant FG-0000708 already exists, attempting to find it
2025-08-10 09:05:57,981 - sync_service - INFO - API Call: {'service': 'shopify', 'endpoint': 'graphql_local', 'request': {'query': '\n        query GetProduct($id: ID!) {\n            product(id: $id) {\n                id\n                title\n                handle\n                description\n                variants(first: 50) {\n                    edges {\n                        node {\n                            id\n                            sku\n                            price\n                            inventoryItem {\n                                id\n                            }\n                            selectedOptions {\n                                name\n                                value\n                            }\n                        }\n                    }\n                }\n            }\n        }\n        ', 'variables': {'id': 'gid://shopify/Product/7526282199106'}}, 'response': None, 'status': None}
2025-08-10 09:05:58,440 - sync_service - INFO - API Call: {'service': 'shopify', 'endpoint': 'graphql_local', 'request': None, 'response': {'product': {'id': 'gid://shopify/Product/7526282199106', 'title': 'Morsi Socks', 'handle': 'morsi-socks', 'description': '', 'variants': {'edges': [{'node': {'id': 'gid://shopify/ProductVariant/42380103974978', 'sku': None, 'price': '0.00', 'inventoryItem': {'id': 'gid://shopify/InventoryItem/44480622952514'}, 'selectedOptions': [{'name': 'Title', 'value': 'Default Title'}]}}]}}}, 'status': 'success'}
2025-08-10 09:05:58,440 - sync_service - ERROR - Variant FG-0000708 already exists but couldn't be found
2025-08-10 09:05:58,441 - sync_service - ERROR - Failed to add variant FG-0000708: Variant FG-0000708 already exists but couldn't be found
2025-08-10 09:05:59,207 - sync_service - INFO - Processing product group: ('FG-0000711', 'local') with 1 items for store local
2025-08-10 09:05:59,207 - sync_service - INFO - Found existing Shopify product ID: 7526282231874 for None
2025-08-10 09:05:59,208 - sync_service - INFO - Product None already exists in store local, adding variants
2025-08-10 09:05:59,208 - sync_service - INFO - API Call: {'service': 'shopify', 'endpoint': 'graphql_local', 'request': {'query': '\n        query GetProduct($id: ID!) {\n            product(id: $id) {\n                id\n                title\n                handle\n                description\n                variants(first: 50) {\n                    edges {\n                        node {\n                            id\n                            sku\n                            price\n                            inventoryItem {\n                                id\n                            }\n                            selectedOptions {\n                                name\n                                value\n                            }\n                        }\n                    }\n                }\n            }\n        }\n        ', 'variables': {'id': 'gid://shopify/Product/7526282231874'}}, 'response': None, 'status': None}
2025-08-10 09:05:59,684 - sync_service - INFO - API Call: {'service': 'shopify', 'endpoint': 'graphql_local', 'request': None, 'response': {'product': {'id': 'gid://shopify/Product/7526282231874', 'title': 'Morsi Keyboard', 'handle': 'morsi-keyboard', 'description': '', 'variants': {'edges': [{'node': {'id': 'gid://shopify/ProductVariant/42380104007746', 'sku': None, 'price': '0.00', 'inventoryItem': {'id': 'gid://shopify/InventoryItem/44480622985282'}, 'selectedOptions': [{'name': 'Title', 'value': 'Default Title'}]}}]}}}, 'status': 'success'}
2025-08-10 09:05:59,684 - sync_service - INFO - API Call: {'service': 'shopify', 'endpoint': 'graphql_local', 'request': {'query': '\n        query GetProduct($id: ID!) {\n            product(id: $id) {\n                id\n                title\n                handle\n                description\n                variants(first: 50) {\n                    edges {\n                        node {\n                            id\n                            sku\n                            price\n                            inventoryItem {\n                                id\n                            }\n                            selectedOptions {\n                                name\n                                value\n                            }\n                        }\n                    }\n                }\n            }\n        }\n        ', 'variables': {'id': 'gid://shopify/Product/7526282231874'}}, 'response': None, 'status': None}
2025-08-10 09:06:00,157 - sync_service - INFO - API Call: {'service': 'shopify', 'endpoint': 'graphql_local', 'request': None, 'response': {'product': {'id': 'gid://shopify/Product/7526282231874', 'title': 'Morsi Keyboard', 'handle': 'morsi-keyboard', 'description': '', 'variants': {'edges': [{'node': {'id': 'gid://shopify/ProductVariant/42380104007746', 'sku': None, 'price': '0.00', 'inventoryItem': {'id': 'gid://shopify/InventoryItem/44480622985282'}, 'selectedOptions': [{'name': 'Title', 'value': 'Default Title'}]}}]}}}, 'status': 'success'}
2025-08-10 09:06:00,797 - sync_service - INFO - API log added to SAP: shopify - /admin/api/graphql_local - success
2025-08-10 09:06:00,798 - sync_service - INFO - API Call: {'service': 'shopify', 'endpoint': 'graphql_local', 'request': {'query': '\n        mutation productVariantCreate($input: ProductVariantInput!) {\n            productVariantCreate(input: $input) {\n                productVariant {\n                    id\n                    sku\n                    price\n                    inventoryItem {\n                        id\n                    }\n                    selectedOptions {\n                        name\n                        value\n                    }\n                }\n                userErrors {\n                    field\n                    message\n                }\n            }\n        }\n        ', 'variables': {'input': {'sku': 'FG-0000711', 'price': '1000.0', 'inventoryPolicy': 'DENY', 'inventoryManagement': 'SHOPIFY', 'weight': 0.0, 'weightUnit': 'KILOGRAMS', 'taxable': False, 'productId': 'gid://shopify/Product/7526282231874'}}}, 'response': None, 'status': None}
2025-08-10 09:06:07,406 - sync_service - INFO - API Call: {'service': 'shopify', 'endpoint': 'graphql_local', 'request': None, 'response': {'productVariantCreate': {'productVariant': None, 'userErrors': [{'field': None, 'message': "The variant 'Default Title' already exists."}]}}, 'status': 'success'}
2025-08-10 09:06:07,406 - sync_service - INFO - Variant FG-0000711 already exists, attempting to find it
2025-08-10 09:06:07,407 - sync_service - INFO - API Call: {'service': 'shopify', 'endpoint': 'graphql_local', 'request': {'query': '\n        query GetProduct($id: ID!) {\n            product(id: $id) {\n                id\n                title\n                handle\n                description\n                variants(first: 50) {\n                    edges {\n                        node {\n                            id\n                            sku\n                            price\n                            inventoryItem {\n                                id\n                            }\n                            selectedOptions {\n                                name\n                                value\n                            }\n                        }\n                    }\n                }\n            }\n        }\n        ', 'variables': {'id': 'gid://shopify/Product/7526282231874'}}, 'response': None, 'status': None}
2025-08-10 09:06:07,869 - sync_service - INFO - API Call: {'service': 'shopify', 'endpoint': 'graphql_local', 'request': None, 'response': {'product': {'id': 'gid://shopify/Product/7526282231874', 'title': 'Morsi Keyboard', 'handle': 'morsi-keyboard', 'description': '', 'variants': {'edges': [{'node': {'id': 'gid://shopify/ProductVariant/42380104007746', 'sku': None, 'price': '0.00', 'inventoryItem': {'id': 'gid://shopify/InventoryItem/44480622985282'}, 'selectedOptions': [{'name': 'Title', 'value': 'Default Title'}]}}]}}}, 'status': 'success'}
2025-08-10 09:06:07,869 - sync_service - ERROR - Variant FG-0000711 already exists but couldn't be found
2025-08-10 09:06:07,870 - sync_service - ERROR - Failed to add variant FG-0000711: Variant FG-0000711 already exists but couldn't be found
2025-08-10 09:06:09,066 - sync_service - INFO - Processing product group: ('FG-0000712', 'local') with 1 items for store local
2025-08-10 09:06:09,066 - sync_service - INFO - Found existing Shopify product ID: 7526282264642 for None
2025-08-10 09:06:09,067 - sync_service - INFO - Product None already exists in store local, adding variants
2025-08-10 09:06:09,067 - sync_service - INFO - API Call: {'service': 'shopify', 'endpoint': 'graphql_local', 'request': {'query': '\n        query GetProduct($id: ID!) {\n            product(id: $id) {\n                id\n                title\n                handle\n                description\n                variants(first: 50) {\n                    edges {\n                        node {\n                            id\n                            sku\n                            price\n                            inventoryItem {\n                                id\n                            }\n                            selectedOptions {\n                                name\n                                value\n                            }\n                        }\n                    }\n                }\n            }\n        }\n        ', 'variables': {'id': 'gid://shopify/Product/7526282264642'}}, 'response': None, 'status': None}
2025-08-10 09:06:09,529 - sync_service - INFO - API Call: {'service': 'shopify', 'endpoint': 'graphql_local', 'request': None, 'response': {'product': {'id': 'gid://shopify/Product/7526282264642', 'title': 'AA-Iron Man Necklace', 'handle': 'aa-iron-man-necklace', 'description': '', 'variants': {'edges': [{'node': {'id': 'gid://shopify/ProductVariant/42380104040514', 'sku': None, 'price': '0.00', 'inventoryItem': {'id': 'gid://shopify/InventoryItem/44480623018050'}, 'selectedOptions': [{'name': 'Title', 'value': 'Default Title'}]}}]}}}, 'status': 'success'}
2025-08-10 09:06:09,529 - sync_service - INFO - API Call: {'service': 'shopify', 'endpoint': 'graphql_local', 'request': {'query': '\n        query GetProduct($id: ID!) {\n            product(id: $id) {\n                id\n                title\n                handle\n                description\n                variants(first: 50) {\n                    edges {\n                        node {\n                            id\n                            sku\n                            price\n                            inventoryItem {\n                                id\n                            }\n                            selectedOptions {\n                                name\n                                value\n                            }\n                        }\n                    }\n                }\n            }\n        }\n        ', 'variables': {'id': 'gid://shopify/Product/7526282264642'}}, 'response': None, 'status': None}
2025-08-10 09:06:10,003 - sync_service - INFO - API Call: {'service': 'shopify', 'endpoint': 'graphql_local', 'request': None, 'response': {'product': {'id': 'gid://shopify/Product/7526282264642', 'title': 'AA-Iron Man Necklace', 'handle': 'aa-iron-man-necklace', 'description': '', 'variants': {'edges': [{'node': {'id': 'gid://shopify/ProductVariant/42380104040514', 'sku': None, 'price': '0.00', 'inventoryItem': {'id': 'gid://shopify/InventoryItem/44480623018050'}, 'selectedOptions': [{'name': 'Title', 'value': 'Default Title'}]}}]}}}, 'status': 'success'}
2025-08-10 09:06:10,266 - sync_service - INFO - API log added to SAP: shopify - /admin/api/graphql_local - success
2025-08-10 09:06:10,266 - sync_service - INFO - API Call: {'service': 'shopify', 'endpoint': 'graphql_local', 'request': {'query': '\n        mutation productVariantCreate($input: ProductVariantInput!) {\n            productVariantCreate(input: $input) {\n                productVariant {\n                    id\n                    sku\n                    price\n                    inventoryItem {\n                        id\n                    }\n                    selectedOptions {\n                        name\n                        value\n                    }\n                }\n                userErrors {\n                    field\n                    message\n                }\n            }\n        }\n        ', 'variables': {'input': {'sku': 'FG-0000712', 'price': '1000.0', 'inventoryPolicy': 'DENY', 'inventoryManagement': 'SHOPIFY', 'weight': 0.0, 'weightUnit': 'KILOGRAMS', 'taxable': False, 'barcode': '203090', 'productId': 'gid://shopify/Product/7526282264642'}}}, 'response': None, 'status': None}
2025-08-10 09:06:10,770 - sync_service - INFO - API Call: {'service': 'shopify', 'endpoint': 'graphql_local', 'request': None, 'response': {'productVariantCreate': {'productVariant': None, 'userErrors': [{'field': None, 'message': "The variant 'Default Title' already exists."}]}}, 'status': 'success'}
2025-08-10 09:06:10,771 - sync_service - INFO - Variant FG-0000712 already exists, attempting to find it
2025-08-10 09:06:10,771 - sync_service - INFO - API Call: {'service': 'shopify', 'endpoint': 'graphql_local', 'request': {'query': '\n        query GetProduct($id: ID!) {\n            product(id: $id) {\n                id\n                title\n                handle\n                description\n                variants(first: 50) {\n                    edges {\n                        node {\n                            id\n                            sku\n                            price\n                            inventoryItem {\n                                id\n                            }\n                            selectedOptions {\n                                name\n                                value\n                            }\n                        }\n                    }\n                }\n            }\n        }\n        ', 'variables': {'id': 'gid://shopify/Product/7526282264642'}}, 'response': None, 'status': None}
2025-08-10 09:06:11,253 - sync_service - INFO - API Call: {'service': 'shopify', 'endpoint': 'graphql_local', 'request': None, 'response': {'product': {'id': 'gid://shopify/Product/7526282264642', 'title': 'AA-Iron Man Necklace', 'handle': 'aa-iron-man-necklace', 'description': '', 'variants': {'edges': [{'node': {'id': 'gid://shopify/ProductVariant/42380104040514', 'sku': None, 'price': '0.00', 'inventoryItem': {'id': 'gid://shopify/InventoryItem/44480623018050'}, 'selectedOptions': [{'name': 'Title', 'value': 'Default Title'}]}}]}}}, 'status': 'success'}
2025-08-10 09:06:11,254 - sync_service - ERROR - Variant FG-0000712 already exists but couldn't be found
2025-08-10 09:06:11,255 - sync_service - ERROR - Failed to add variant FG-0000712: Variant FG-0000712 already exists but couldn't be found
2025-08-10 09:06:12,424 - sync_service - INFO - Processing product group: ('Iron Man Necklace', 'local') with 2 items for store local
2025-08-10 09:06:12,424 - sync_service - INFO - Found existing Shopify product ID: 7526282330178 for Iron Man Necklace
2025-08-10 09:06:12,425 - sync_service - INFO - Product Iron Man Necklace already exists in store local, adding variants
2025-08-10 09:06:12,425 - sync_service - INFO - API Call: {'service': 'shopify', 'endpoint': 'graphql_local', 'request': {'query': '\n        query GetProduct($id: ID!) {\n            product(id: $id) {\n                id\n                title\n                handle\n                description\n                variants(first: 50) {\n                    edges {\n                        node {\n                            id\n                            sku\n                            price\n                            inventoryItem {\n                                id\n                            }\n                            selectedOptions {\n                                name\n                                value\n                            }\n                        }\n                    }\n                }\n            }\n        }\n        ', 'variables': {'id': 'gid://shopify/Product/7526282330178'}}, 'response': None, 'status': None}
2025-08-10 09:06:12,899 - sync_service - INFO - API Call: {'service': 'shopify', 'endpoint': 'graphql_local', 'request': None, 'response': {'product': {'id': 'gid://shopify/Product/7526282330178', 'title': 'Iron Man Necklace', 'handle': 'iron-man-necklace', 'description': '', 'variants': {'edges': [{'node': {'id': 'gid://shopify/ProductVariant/42380104106050', 'sku': None, 'price': '0.00', 'inventoryItem': {'id': 'gid://shopify/InventoryItem/44480623083586'}, 'selectedOptions': [{'name': 'Title', 'value': 'Default Title'}]}}, {'node': {'id': 'gid://shopify/ProductVariant/42380109283394', 'sku': 'FG-0000713', 'price': '2000.00', 'inventoryItem': {'id': 'gid://shopify/InventoryItem/44480628260930'}, 'selectedOptions': [{'name': 'Title', 'value': 'Red'}]}}, {'node': {'id': 'gid://shopify/ProductVariant/42380109316162', 'sku': 'FG-0000714', 'price': '3000.00', 'inventoryItem': {'id': 'gid://shopify/InventoryItem/44480628293698'}, 'selectedOptions': [{'name': 'Title', 'value': 'Blue'}]}}]}}}, 'status': 'success'}
2025-08-10 09:06:12,899 - sync_service - INFO - Variant FG-0000713 already exists, skipping
2025-08-10 09:06:12,900 - sync_service - INFO - Variant FG-0000714 already exists, skipping
2025-08-10 09:06:14,088 - sync_service - INFO - Processing product group: ('Morsi Laptop', 'local') with 2 items for store local
2025-08-10 09:06:14,088 - sync_service - INFO - Found existing Shopify product ID: 7526282362946 for Morsi Laptop
2025-08-10 09:06:14,089 - sync_service - INFO - Product Morsi Laptop already exists in store local, adding variants
2025-08-10 09:06:14,089 - sync_service - INFO - API Call: {'service': 'shopify', 'endpoint': 'graphql_local', 'request': {'query': '\n        query GetProduct($id: ID!) {\n            product(id: $id) {\n                id\n                title\n                handle\n                description\n                variants(first: 50) {\n                    edges {\n                        node {\n                            id\n                            sku\n                            price\n                            inventoryItem {\n                                id\n                            }\n                            selectedOptions {\n                                name\n                                value\n                            }\n                        }\n                    }\n                }\n            }\n        }\n        ', 'variables': {'id': 'gid://shopify/Product/7526282362946'}}, 'response': None, 'status': None}
2025-08-10 09:06:14,579 - sync_service - INFO - API Call: {'service': 'shopify', 'endpoint': 'graphql_local', 'request': None, 'response': {'product': {'id': 'gid://shopify/Product/7526282362946', 'title': 'Morsi Laptop', 'handle': 'morsi-laptop', 'description': '', 'variants': {'edges': [{'node': {'id': 'gid://shopify/ProductVariant/42380104138818', 'sku': None, 'price': '0.00', 'inventoryItem': {'id': 'gid://shopify/InventoryItem/44480623116354'}, 'selectedOptions': [{'name': 'Title', 'value': 'Default Title'}]}}, {'node': {'id': 'gid://shopify/ProductVariant/42380109348930', 'sku': 'FG-0000709', 'price': '1000.00', 'inventoryItem': {'id': 'gid://shopify/InventoryItem/44480628326466'}, 'selectedOptions': [{'name': 'Title', 'value': 'Black'}]}}, {'node': {'id': 'gid://shopify/ProductVariant/42380109381698', 'sku': 'FG-0000710', 'price': '1000.00', 'inventoryItem': {'id': 'gid://shopify/InventoryItem/44480628359234'}, 'selectedOptions': [{'name': 'Title', 'value': 'Gray'}]}}]}}}, 'status': 'success'}
2025-08-10 09:06:14,579 - sync_service - INFO - Variant FG-0000709 already exists, skipping
2025-08-10 09:06:14,580 - sync_service - INFO - Variant FG-0000710 already exists, skipping
2025-08-10 09:06:15,343 - sync_service - INFO - Processing product group: ('Morsi Necklace', 'local') with 3 items for store local
2025-08-10 09:06:15,343 - sync_service - INFO - Found existing Shopify product ID: 7526282395714 for Morsi Necklace
2025-08-10 09:06:15,344 - sync_service - INFO - Product Morsi Necklace already exists in store local, adding variants
2025-08-10 09:06:15,346 - sync_service - INFO - API Call: {'service': 'shopify', 'endpoint': 'graphql_local', 'request': {'query': '\n        query GetProduct($id: ID!) {\n            product(id: $id) {\n                id\n                title\n                handle\n                description\n                variants(first: 50) {\n                    edges {\n                        node {\n                            id\n                            sku\n                            price\n                            inventoryItem {\n                                id\n                            }\n                            selectedOptions {\n                                name\n                                value\n                            }\n                        }\n                    }\n                }\n            }\n        }\n        ', 'variables': {'id': 'gid://shopify/Product/7526282395714'}}, 'response': None, 'status': None}
2025-08-10 09:06:15,820 - sync_service - INFO - API Call: {'service': 'shopify', 'endpoint': 'graphql_local', 'request': None, 'response': {'product': {'id': 'gid://shopify/Product/7526282395714', 'title': 'Morsi Necklace', 'handle': 'morsi-necklace', 'description': '', 'variants': {'edges': [{'node': {'id': 'gid://shopify/ProductVariant/42380104171586', 'sku': None, 'price': '0.00', 'inventoryItem': {'id': 'gid://shopify/InventoryItem/44480623149122'}, 'selectedOptions': [{'name': 'Title', 'value': 'Default Title'}]}}, {'node': {'id': 'gid://shopify/ProductVariant/42380109414466', 'sku': 'FG-0000702', 'price': '2500.00', 'inventoryItem': {'id': 'gid://shopify/InventoryItem/44480628392002'}, 'selectedOptions': [{'name': 'Title', 'value': 'Black'}]}}, {'node': {'id': 'gid://shopify/ProductVariant/42380109447234', 'sku': 'FG-0000703', 'price': '2500.00', 'inventoryItem': {'id': 'gid://shopify/InventoryItem/44480628424770'}, 'selectedOptions': [{'name': 'Title', 'value': 'White'}]}}, {'node': {'id': 'gid://shopify/ProductVariant/42380109480002', 'sku': 'FG-0000705', 'price': '2500.00', 'inventoryItem': {'id': 'gid://shopify/InventoryItem/44480628457538'}, 'selectedOptions': [{'name': 'Title', 'value': 'Green'}]}}]}}}, 'status': 'success'}
2025-08-10 09:06:15,821 - sync_service - INFO - Variant FG-0000702 already exists, skipping
2025-08-10 09:06:15,821 - sync_service - INFO - Variant FG-0000703 already exists, skipping
2025-08-10 09:06:15,822 - sync_service - INFO - Variant FG-0000705 already exists, skipping
2025-08-10 09:06:16,994 - sync_service - INFO - Processing product group: ('Morsi Shoes', 'local') with 2 items for store local
2025-08-10 09:06:16,994 - sync_service - INFO - Found existing Shopify product ID: 7526282461250 for Morsi Shoes
2025-08-10 09:06:16,995 - sync_service - INFO - Product Morsi Shoes already exists in store local, adding variants
2025-08-10 09:06:16,995 - sync_service - INFO - API Call: {'service': 'shopify', 'endpoint': 'graphql_local', 'request': {'query': '\n        query GetProduct($id: ID!) {\n            product(id: $id) {\n                id\n                title\n                handle\n                description\n                variants(first: 50) {\n                    edges {\n                        node {\n                            id\n                            sku\n                            price\n                            inventoryItem {\n                                id\n                            }\n                            selectedOptions {\n                                name\n                                value\n                            }\n                        }\n                    }\n                }\n            }\n        }\n        ', 'variables': {'id': 'gid://shopify/Product/7526282461250'}}, 'response': None, 'status': None}
2025-08-10 09:06:17,472 - sync_service - INFO - API Call: {'service': 'shopify', 'endpoint': 'graphql_local', 'request': None, 'response': {'product': {'id': 'gid://shopify/Product/7526282461250', 'title': 'Morsi Shoes', 'handle': 'morsi-shoes', 'description': '', 'variants': {'edges': [{'node': {'id': 'gid://shopify/ProductVariant/42380104663106', 'sku': None, 'price': '0.00', 'inventoryItem': {'id': 'gid://shopify/InventoryItem/44480623640642'}, 'selectedOptions': [{'name': 'Title', 'value': 'Default Title'}]}}, {'node': {'id': 'gid://shopify/ProductVariant/42380109512770', 'sku': 'FG-0000706', 'price': '1000.00', 'inventoryItem': {'id': 'gid://shopify/InventoryItem/44480628490306'}, 'selectedOptions': [{'name': 'Title', 'value': 'Green'}]}}, {'node': {'id': 'gid://shopify/ProductVariant/42380109578306', 'sku': 'FG-0000707', 'price': '1000.00', 'inventoryItem': {'id': 'gid://shopify/InventoryItem/44480628555842'}, 'selectedOptions': [{'name': 'Title', 'value': 'Beige'}]}}]}}}, 'status': 'success'}
2025-08-10 09:06:17,472 - sync_service - INFO - Variant FG-0000706 already exists, skipping
2025-08-10 09:06:17,473 - sync_service - INFO - Variant FG-0000707 already exists, skipping
2025-08-10 09:06:18,237 - sync_service - INFO - Sync Event: {'sync_type': 'multi_store_new_items_sap_to_shopify', 'items_processed': 8, 'success_count': 0, 'error_count': 4, 'details': None}
2025-08-10 09:06:18,237 - sync_service - INFO - Multi-store new items sync completed: 8 processed, 0 successful, 4 errors
2025-08-10 09:06:18,238 - sync_service - INFO - Starting stock change sync...
2025-08-10 09:06:18,239 - sync_service - INFO - Starting stock change sync using MASHURA_StockChangeB1SLQuery view
2025-08-10 09:06:18,239 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'view.svc/MASHURA_StockChangeB1SLQuery', 'request': {'method': 'GET', 'url': 'https://10.0.0.100:50000/b1s/v1/view.svc/MASHURA_StockChangeB1SLQuery', 'data': None, 'params': {'$top': 50}}, 'response': None, 'status': None}
2025-08-10 09:06:18,503 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'view.svc/MASHURA_StockChangeB1SLQuery', 'request': None, 'response': {'odata.metadata': 'https://10.0.0.100:50000/b1s/v1/view.svc/$metadata#MASHURA_StockChangeB1SLQuery', 'value': []}, 'status': 'success'}
2025-08-10 09:06:18,504 - sync_service - INFO - No stock changes found in the view.
2025-08-10 09:06:18,504 - sync_service - INFO - Starting item changes sync...
2025-08-10 09:06:18,505 - sync_service - INFO - Starting item changes sync from SAP to Shopify
2025-08-10 09:06:18,505 - sync_service - INFO - Processing item changes for store: local
2025-08-10 09:06:18,505 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': "view.svc/MASHURA_ItemChangeB1SLQuery?$filter=Shopify_Store eq 'local'", 'request': {'method': 'GET', 'url': "https://10.0.0.100:50000/b1s/v1/view.svc/MASHURA_ItemChangeB1SLQuery?$filter=Shopify_Store eq 'local'", 'data': None, 'params': None}, 'response': None, 'status': None}
2025-08-10 09:06:18,764 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': "view.svc/MASHURA_ItemChangeB1SLQuery?$filter=Shopify_Store eq 'local'", 'request': None, 'response': {'odata.metadata': 'https://10.0.0.100:50000/b1s/v1/view.svc/$metadata#MASHURA_ItemChangeB1SLQuery', 'value': []}, 'status': 'success'}
2025-08-10 09:06:18,766 - sync_service - INFO - Found 0 item changes for store local
2025-08-10 09:06:18,767 - sync_service - INFO - No item changes found for store local
2025-08-10 09:06:18,767 - sync_service - INFO - Sync Event: {'sync_type': 'item_changes_sap_to_shopify', 'items_processed': 0, 'success_count': 0, 'error_count': 0, 'details': None}
2025-08-10 09:06:18,768 - sync_service - INFO - Item changes sync completed: 0 processed, 0 successful, 0 errors
2025-08-10 09:06:18,768 - sync_service - INFO - Starting price changes sync...
2025-08-10 09:06:18,768 - sync_service - INFO - Starting price changes sync from SAP to Shopify
2025-08-10 09:06:18,769 - sync_service - INFO - Processing price changes for store: local
2025-08-10 09:06:18,769 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': "view.svc/MASHURA_PriceChangeB1SLQuery?$filter=Shopify_Store eq 'local'", 'request': {'method': 'GET', 'url': "https://10.0.0.100:50000/b1s/v1/view.svc/MASHURA_PriceChangeB1SLQuery?$filter=Shopify_Store eq 'local'", 'data': None, 'params': None}, 'response': None, 'status': None}
2025-08-10 09:06:19,437 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': "view.svc/MASHURA_PriceChangeB1SLQuery?$filter=Shopify_Store eq 'local'", 'request': None, 'response': {'odata.metadata': 'https://10.0.0.100:50000/b1s/v1/view.svc/$metadata#MASHURA_PriceChangeB1SLQuery', 'value': []}, 'status': 'success'}
2025-08-10 09:06:19,438 - sync_service - INFO - Found 0 price changes for store local
2025-08-10 09:06:19,438 - sync_service - INFO - No price changes found for store local
2025-08-10 09:06:19,438 - sync_service - INFO - Sync Event: {'sync_type': 'price_changes_sap_to_shopify', 'items_processed': 0, 'success_count': 0, 'error_count': 0, 'details': None}
2025-08-10 09:06:19,440 - sync_service - INFO - Price changes sync completed: 0 processed, 0 successful, 0 errors
2025-08-10 09:08:37,581 - sync_service - INFO - Initialized Shopify client for store: Local Store (local)
2025-08-10 09:08:37,592 - sync_service - INFO - Starting all syncs...
2025-08-10 09:08:37,593 - sync_service - INFO - Starting new items sync...
2025-08-10 09:08:37,593 - sync_service - INFO - Starting multi-store new items sync from SAP to Shopify
2025-08-10 09:08:37,593 - sync_service - INFO - Fetching new items for store: local
2025-08-10 09:08:37,595 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'login', 'request': {'company': 'JudeBenHalim_Test', 'user': 'manager'}, 'response': None, 'status': None}
2025-08-10 09:08:38,348 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'login', 'request': None, 'response': {'status': 'success'}, 'status': 'success'}
2025-08-10 09:08:38,349 - sync_service - INFO - SAP login successful
2025-08-10 09:08:38,350 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': "view.svc/MASHURA_New_ItemsB1SLQuery?$filter=Shopify_Store eq 'local'&$orderby=MainProduct", 'request': {'method': 'GET', 'url': "https://10.0.0.100:50000/b1s/v1/view.svc/MASHURA_New_ItemsB1SLQuery?$filter=Shopify_Store eq 'local'&$orderby=MainProduct", 'data': None, 'params': None}, 'response': None, 'status': None}
2025-08-10 09:08:39,033 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': "view.svc/MASHURA_New_ItemsB1SLQuery?$filter=Shopify_Store eq 'local'&$orderby=MainProduct", 'request': None, 'response': {'odata.metadata': 'https://10.0.0.100:50000/b1s/v1/view.svc/$metadata#MASHURA_New_ItemsB1SLQuery', 'value': [{'itemcode': 'FG-0000704', 'ItemName': 'Morsi Bracelet', 'MainProduct': None, 'Color': None, 'Price': 3200.0, 'Shopify_Store': 'local', 'Shopify_ProductCode': None, 'Status': 'new', 'Barcode': '645464644', 'id__': 1}, {'itemcode': 'FG-0000708', 'ItemName': 'Morsi Socks', 'MainProduct': None, 'Color': None, 'Price': 200.0, 'Shopify_Store': 'local', 'Shopify_ProductCode': None, 'Status': 'new', 'Barcode': None, 'id__': 2}, {'itemcode': 'FG-0000711', 'ItemName': 'Morsi Keyboard', 'MainProduct': None, 'Color': None, 'Price': 1000.0, 'Shopify_Store': 'local', 'Shopify_ProductCode': None, 'Status': 'new', 'Barcode': None, 'id__': 3}, {'itemcode': 'FG-0000712', 'ItemName': 'AA-Iron Man Necklace', 'MainProduct': None, 'Color': None, 'Price': 1000.0, 'Shopify_Store': 'local', 'Shopify_ProductCode': None, 'Status': 'new', 'Barcode': '203090', 'id__': 4}, {'itemcode': 'FG-0000713', 'ItemName': 'AA-Ring Red', 'MainProduct': 'Iron Man Necklace', 'Color': 'Red', 'Price': 2000.0, 'Shopify_Store': 'local', 'Shopify_ProductCode': None, 'Status': 'new', 'Barcode': '203090', 'id__': 5}, {'itemcode': 'FG-0000714', 'ItemName': 'AA-Ring Blue', 'MainProduct': 'Iron Man Necklace', 'Color': 'Blue', 'Price': 3000.0, 'Shopify_Store': 'local', 'Shopify_ProductCode': None, 'Status': 'new', 'Barcode': '203090', 'id__': 6}, {'itemcode': 'FG-0000709', 'ItemName': 'Morsi-Laptop-Black', 'MainProduct': 'Morsi Laptop', 'Color': 'Black', 'Price': 1000.0, 'Shopify_Store': 'local', 'Shopify_ProductCode': None, 'Status': 'new', 'Barcode': None, 'id__': 7}, {'itemcode': 'FG-0000710', 'ItemName': 'Morsi-Laptop-Grey', 'MainProduct': 'Morsi Laptop', 'Color': 'Grey', 'Price': 1000.0, 'Shopify_Store': 'local', 'Shopify_ProductCode': None, 'Status': 'new', 'Barcode': None, 'id__': 8}, {'itemcode': 'FG-0000702', 'ItemName': 'Morsi-Necklace-Black', 'MainProduct': 'Morsi Necklace', 'Color': 'Black', 'Price': 2500.0, 'Shopify_Store': 'local', 'Shopify_ProductCode': None, 'Status': 'new', 'Barcode': '2123243245', 'id__': 9}, {'itemcode': 'FG-0000703', 'ItemName': 'Morsi-Necklace-White', 'MainProduct': 'Morsi Necklace', 'Color': 'White', 'Price': 2500.0, 'Shopify_Store': 'local', 'Shopify_ProductCode': None, 'Status': 'new', 'Barcode': '242342342', 'id__': 10}, {'itemcode': 'FG-0000705', 'ItemName': 'Morsi-Necklace-Green', 'MainProduct': 'Morsi Necklace', 'Color': 'Green', 'Price': 2500.0, 'Shopify_Store': 'local', 'Shopify_ProductCode': None, 'Status': 'new', 'Barcode': None, 'id__': 11}, {'itemcode': 'FG-0000706', 'ItemName': 'Morsi-Shoes-Green', 'MainProduct': 'Morsi Shoes', 'Color': 'Green', 'Price': 1000.0, 'Shopify_Store': 'local', 'Shopify_ProductCode': None, 'Status': 'new', 'Barcode': None, 'id__': 12}, {'itemcode': 'FG-0000707', 'ItemName': 'Morsi-Shoes-Beige', 'MainProduct': 'Morsi Shoes', 'Color': 'Beige', 'Price': 1000.0, 'Shopify_Store': 'local', 'Shopify_ProductCode': None, 'Status': 'new', 'Barcode': None, 'id__': 13}]}, 'status': 'success'}
2025-08-10 09:08:39,035 - sync_service - INFO - Product group: ('FG-0000704', 'local') has 1 items
2025-08-10 09:08:39,035 - sync_service - INFO - Product group: ('FG-0000708', 'local') has 1 items
2025-08-10 09:08:39,036 - sync_service - INFO - Product group: ('FG-0000711', 'local') has 1 items
2025-08-10 09:08:39,036 - sync_service - INFO - Product group: ('FG-0000712', 'local') has 1 items
2025-08-10 09:08:39,037 - sync_service - INFO - Product group: ('Iron Man Necklace', 'local') has 2 items
2025-08-10 09:08:39,038 - sync_service - INFO - Product group: ('Morsi Laptop', 'local') has 2 items
2025-08-10 09:08:39,038 - sync_service - INFO - Product group: ('Morsi Necklace', 'local') has 3 items
2025-08-10 09:08:39,039 - sync_service - INFO - Product group: ('Morsi Shoes', 'local') has 2 items
2025-08-10 09:08:39,039 - sync_service - INFO - Grouped 13 items into 8 product groups for store local
2025-08-10 09:08:39,040 - sync_service - INFO - Processing product group: ('FG-0000704', 'local') with 1 items for store local
2025-08-10 09:08:39,040 - sync_service - INFO - API Call: {'service': 'shopify', 'endpoint': 'graphql_local', 'request': {'query': '\n        query GetProductByHandle($handle: String!) {\n            productByHandle(handle: $handle) {\n                id\n                title\n                handle\n                description\n                variants(first: 50) {\n                    edges {\n                        node {\n                            id\n                            sku\n                            price\n                            inventoryItem {\n                                id\n                            }\n                            selectedOptions {\n                                name\n                                value\n                            }\n                        }\n                    }\n                }\n            }\n        }\n        ', 'variables': {'handle': 'default'}}, 'response': None, 'status': None}
2025-08-10 09:08:39,507 - sync_service - INFO - API Call: {'service': 'shopify', 'endpoint': 'graphql_local', 'request': None, 'response': {'productByHandle': None}, 'status': 'success'}
2025-08-10 09:08:39,508 - sync_service - INFO - Product None doesn't exist in store local, creating new product
2025-08-10 09:08:40,209 - sync_service - INFO - SAP logging client login successful
2025-08-10 09:08:40,908 - sync_service - INFO - API log added to SAP: shopify - /admin/api/graphql_local - success
2025-08-10 09:08:40,909 - sync_service - INFO - API Call: {'service': 'shopify', 'endpoint': 'graphql_local', 'request': {'query': '\n        mutation productCreate($input: ProductInput!) {\n            productCreate(input: $input) {\n                product {\n                    id\n                    title\n                    handle\n                    variants(first: 50) {\n                        edges {\n                            node {\n                                id\n                                sku\n                                inventoryItem {\n                                    id\n                                }\n                                selectedOptions {\n                                    name\n                                    value\n                                }\n                            }\n                        }\n                    }\n                }\n                userErrors {\n                    field\n                    message\n                }\n            }\n        }\n        ', 'variables': {'input': {'title': 'Morsi Bracelet', 'descriptionHtml': '', 'vendor': '', 'productType': 'Default', 'status': 'DRAFT', 'tags': [], 'variants': [{'sku': 'FG-0000704', 'price': '3200.0', 'inventoryPolicy': 'DENY', 'inventoryManagement': 'SHOPIFY', 'weight': 0.0, 'weightUnit': 'KILOGRAMS', 'taxable': False, 'barcode': '645464644'}], 'seo': {'title': 'Morsi Bracelet', 'description': ''}}}}, 'response': None, 'status': None}
2025-08-10 09:08:50,921 - sync_service - ERROR - GraphQL query error for store local: 
2025-08-10 09:08:51,600 - sync_service - INFO - API log added to SAP: shopify - /admin/api/graphql_local - failure
2025-08-10 09:08:51,602 - sync_service - ERROR - Shopify full response for store local: {'msg': 'failure', 'error': 'GraphQL query error for store local: '}
2025-08-10 09:08:52,301 - sync_service - INFO - API log added to SAP: shopify - /admin/api/graphql_local - failure
2025-08-10 09:08:52,301 - sync_service - ERROR - Failed to create product in store local: GraphQL query error for store local: 
2025-08-10 09:08:52,302 - sync_service - INFO - Processing product group: ('FG-0000708', 'local') with 1 items for store local
2025-08-10 09:08:52,304 - sync_service - INFO - API Call: {'service': 'shopify', 'endpoint': 'graphql_local', 'request': {'query': '\n        query GetProductByHandle($handle: String!) {\n            productByHandle(handle: $handle) {\n                id\n                title\n                handle\n                description\n                variants(first: 50) {\n                    edges {\n                        node {\n                            id\n                            sku\n                            price\n                            inventoryItem {\n                                id\n                            }\n                            selectedOptions {\n                                name\n                                value\n                            }\n                        }\n                    }\n                }\n            }\n        }\n        ', 'variables': {'handle': 'default'}}, 'response': None, 'status': None}
2025-08-10 09:08:52,756 - sync_service - INFO - API Call: {'service': 'shopify', 'endpoint': 'graphql_local', 'request': None, 'response': {'productByHandle': None}, 'status': 'success'}
2025-08-10 09:08:52,757 - sync_service - INFO - Product None doesn't exist in store local, creating new product
2025-08-10 09:08:53,418 - sync_service - INFO - API log added to SAP: shopify - /admin/api/graphql_local - success
2025-08-10 09:08:53,418 - sync_service - INFO - API Call: {'service': 'shopify', 'endpoint': 'graphql_local', 'request': {'query': '\n        mutation productCreate($input: ProductInput!) {\n            productCreate(input: $input) {\n                product {\n                    id\n                    title\n                    handle\n                    variants(first: 50) {\n                        edges {\n                            node {\n                                id\n                                sku\n                                inventoryItem {\n                                    id\n                                }\n                                selectedOptions {\n                                    name\n                                    value\n                                }\n                            }\n                        }\n                    }\n                }\n                userErrors {\n                    field\n                    message\n                }\n            }\n        }\n        ', 'variables': {'input': {'title': 'Morsi Socks', 'descriptionHtml': '', 'vendor': '', 'productType': 'Default', 'status': 'DRAFT', 'tags': [], 'variants': [{'sku': 'FG-0000708', 'price': '200.0', 'inventoryPolicy': 'DENY', 'inventoryManagement': 'SHOPIFY', 'weight': 0.0, 'weightUnit': 'KILOGRAMS', 'taxable': False}], 'seo': {'title': 'Morsi Socks', 'description': ''}}}}, 'response': None, 'status': None}
2025-08-10 09:08:54,187 - sync_service - INFO - API Call: {'service': 'shopify', 'endpoint': 'graphql_local', 'request': None, 'response': {'productCreate': {'product': {'id': 'gid://shopify/Product/7526285213762', 'title': 'Morsi Socks', 'handle': 'morsi-socks', 'variants': {'edges': [{'node': {'id': 'gid://shopify/ProductVariant/42380113608770', 'sku': 'FG-0000708', 'inventoryItem': {'id': 'gid://shopify/InventoryItem/44480632586306'}, 'selectedOptions': [{'name': 'Title', 'value': 'Default Title'}]}}]}}, 'userErrors': []}}, 'status': 'success'}
2025-08-10 09:08:54,188 - sync_service - ERROR - Shopify full response for store local: {'msg': 'success', 'data': {'productCreate': {'product': {'id': 'gid://shopify/Product/7526285213762', 'title': 'Morsi Socks', 'handle': 'morsi-socks', 'variants': {'edges': [{'node': {'id': 'gid://shopify/ProductVariant/42380113608770', 'sku': 'FG-0000708', 'inventoryItem': {'id': 'gid://shopify/InventoryItem/44480632586306'}, 'selectedOptions': [{'name': 'Title', 'value': 'Default Title'}]}}]}}, 'userErrors': []}}}
2025-08-10 09:08:54,859 - sync_service - INFO - API log added to SAP: shopify - /admin/api/graphql_local - success
2025-08-10 09:08:54,860 - sync_service - INFO - Successfully created product in store local
2025-08-10 09:08:56,552 - sync_service - INFO - Processing product group: ('FG-0000711', 'local') with 1 items for store local
2025-08-10 09:08:56,552 - sync_service - INFO - API Call: {'service': 'shopify', 'endpoint': 'graphql_local', 'request': {'query': '\n        query GetProductByHandle($handle: String!) {\n            productByHandle(handle: $handle) {\n                id\n                title\n                handle\n                description\n                variants(first: 50) {\n                    edges {\n                        node {\n                            id\n                            sku\n                            price\n                            inventoryItem {\n                                id\n                            }\n                            selectedOptions {\n                                name\n                                value\n                            }\n                        }\n                    }\n                }\n            }\n        }\n        ', 'variables': {'handle': 'default'}}, 'response': None, 'status': None}
2025-08-10 09:08:57,030 - sync_service - INFO - API Call: {'service': 'shopify', 'endpoint': 'graphql_local', 'request': None, 'response': {'productByHandle': None}, 'status': 'success'}
2025-08-10 09:08:57,030 - sync_service - INFO - Product None doesn't exist in store local, creating new product
2025-08-10 09:08:57,295 - sync_service - INFO - API log added to SAP: shopify - /admin/api/graphql_local - success
2025-08-10 09:08:57,296 - sync_service - INFO - API Call: {'service': 'shopify', 'endpoint': 'graphql_local', 'request': {'query': '\n        mutation productCreate($input: ProductInput!) {\n            productCreate(input: $input) {\n                product {\n                    id\n                    title\n                    handle\n                    variants(first: 50) {\n                        edges {\n                            node {\n                                id\n                                sku\n                                inventoryItem {\n                                    id\n                                }\n                                selectedOptions {\n                                    name\n                                    value\n                                }\n                            }\n                        }\n                    }\n                }\n                userErrors {\n                    field\n                    message\n                }\n            }\n        }\n        ', 'variables': {'input': {'title': 'Morsi Keyboard', 'descriptionHtml': '', 'vendor': '', 'productType': 'Default', 'status': 'DRAFT', 'tags': [], 'variants': [{'sku': 'FG-0000711', 'price': '1000.0', 'inventoryPolicy': 'DENY', 'inventoryManagement': 'SHOPIFY', 'weight': 0.0, 'weightUnit': 'KILOGRAMS', 'taxable': False}], 'seo': {'title': 'Morsi Keyboard', 'description': ''}}}}, 'response': None, 'status': None}
2025-08-10 09:09:04,348 - sync_service - INFO - API Call: {'service': 'shopify', 'endpoint': 'graphql_local', 'request': None, 'response': {'productCreate': {'product': {'id': 'gid://shopify/Product/7526285246530', 'title': 'Morsi Keyboard', 'handle': 'morsi-keyboard', 'variants': {'edges': [{'node': {'id': 'gid://shopify/ProductVariant/42380113641538', 'sku': 'FG-0000711', 'inventoryItem': {'id': 'gid://shopify/InventoryItem/44480632619074'}, 'selectedOptions': [{'name': 'Title', 'value': 'Default Title'}]}}]}}, 'userErrors': []}}, 'status': 'success'}
2025-08-10 09:09:04,349 - sync_service - ERROR - Shopify full response for store local: {'msg': 'success', 'data': {'productCreate': {'product': {'id': 'gid://shopify/Product/7526285246530', 'title': 'Morsi Keyboard', 'handle': 'morsi-keyboard', 'variants': {'edges': [{'node': {'id': 'gid://shopify/ProductVariant/42380113641538', 'sku': 'FG-0000711', 'inventoryItem': {'id': 'gid://shopify/InventoryItem/44480632619074'}, 'selectedOptions': [{'name': 'Title', 'value': 'Default Title'}]}}]}}, 'userErrors': []}}}
2025-08-10 09:09:04,615 - sync_service - INFO - API log added to SAP: shopify - /admin/api/graphql_local - success
2025-08-10 09:09:04,616 - sync_service - INFO - Successfully created product in store local
2025-08-10 09:09:07,103 - sync_service - INFO - Processing product group: ('FG-0000712', 'local') with 1 items for store local
2025-08-10 09:09:07,104 - sync_service - INFO - API Call: {'service': 'shopify', 'endpoint': 'graphql_local', 'request': {'query': '\n        query GetProductByHandle($handle: String!) {\n            productByHandle(handle: $handle) {\n                id\n                title\n                handle\n                description\n                variants(first: 50) {\n                    edges {\n                        node {\n                            id\n                            sku\n                            price\n                            inventoryItem {\n                                id\n                            }\n                            selectedOptions {\n                                name\n                                value\n                            }\n                        }\n                    }\n                }\n            }\n        }\n        ', 'variables': {'handle': 'default'}}, 'response': None, 'status': None}
2025-08-10 09:09:07,577 - sync_service - INFO - API Call: {'service': 'shopify', 'endpoint': 'graphql_local', 'request': None, 'response': {'productByHandle': None}, 'status': 'success'}
2025-08-10 09:09:07,577 - sync_service - INFO - Product None doesn't exist in store local, creating new product
2025-08-10 09:09:08,224 - sync_service - INFO - API log added to SAP: shopify - /admin/api/graphql_local - success
2025-08-10 09:09:08,225 - sync_service - INFO - API Call: {'service': 'shopify', 'endpoint': 'graphql_local', 'request': {'query': '\n        mutation productCreate($input: ProductInput!) {\n            productCreate(input: $input) {\n                product {\n                    id\n                    title\n                    handle\n                    variants(first: 50) {\n                        edges {\n                            node {\n                                id\n                                sku\n                                inventoryItem {\n                                    id\n                                }\n                                selectedOptions {\n                                    name\n                                    value\n                                }\n                            }\n                        }\n                    }\n                }\n                userErrors {\n                    field\n                    message\n                }\n            }\n        }\n        ', 'variables': {'input': {'title': 'AA-Iron Man Necklace', 'descriptionHtml': '', 'vendor': '', 'productType': 'Default', 'status': 'DRAFT', 'tags': [], 'variants': [{'sku': 'FG-0000712', 'price': '1000.0', 'inventoryPolicy': 'DENY', 'inventoryManagement': 'SHOPIFY', 'weight': 0.0, 'weightUnit': 'KILOGRAMS', 'taxable': False, 'barcode': '203090'}], 'seo': {'title': 'AA-Iron Man Necklace', 'description': ''}}}}, 'response': None, 'status': None}
2025-08-10 09:09:09,089 - sync_service - INFO - API Call: {'service': 'shopify', 'endpoint': 'graphql_local', 'request': None, 'response': {'productCreate': {'product': {'id': 'gid://shopify/Product/7526285312066', 'title': 'AA-Iron Man Necklace', 'handle': 'aa-iron-man-necklace', 'variants': {'edges': [{'node': {'id': 'gid://shopify/ProductVariant/42380113707074', 'sku': 'FG-0000712', 'inventoryItem': {'id': 'gid://shopify/InventoryItem/44480632684610'}, 'selectedOptions': [{'name': 'Title', 'value': 'Default Title'}]}}]}}, 'userErrors': []}}, 'status': 'success'}
2025-08-10 09:09:09,089 - sync_service - ERROR - Shopify full response for store local: {'msg': 'success', 'data': {'productCreate': {'product': {'id': 'gid://shopify/Product/7526285312066', 'title': 'AA-Iron Man Necklace', 'handle': 'aa-iron-man-necklace', 'variants': {'edges': [{'node': {'id': 'gid://shopify/ProductVariant/42380113707074', 'sku': 'FG-0000712', 'inventoryItem': {'id': 'gid://shopify/InventoryItem/44480632684610'}, 'selectedOptions': [{'name': 'Title', 'value': 'Default Title'}]}}]}}, 'userErrors': []}}}
2025-08-10 09:09:09,753 - sync_service - INFO - API log added to SAP: shopify - /admin/api/graphql_local - success
2025-08-10 09:09:09,753 - sync_service - INFO - Successfully created product in store local
2025-08-10 09:09:11,831 - sync_service - INFO - Processing product group: ('Iron Man Necklace', 'local') with 2 items for store local
2025-08-10 09:09:11,832 - sync_service - INFO - API Call: {'service': 'shopify', 'endpoint': 'graphql_local', 'request': {'query': '\n        query GetProductByHandle($handle: String!) {\n            productByHandle(handle: $handle) {\n                id\n                title\n                handle\n                description\n                variants(first: 50) {\n                    edges {\n                        node {\n                            id\n                            sku\n                            price\n                            inventoryItem {\n                                id\n                            }\n                            selectedOptions {\n                                name\n                                value\n                            }\n                        }\n                    }\n                }\n            }\n        }\n        ', 'variables': {'handle': 'iron-man-necklace'}}, 'response': None, 'status': None}
2025-08-10 09:09:21,848 - sync_service - ERROR - GraphQL query error for store local: 
2025-08-10 09:09:22,110 - sync_service - INFO - API log added to SAP: shopify - /admin/api/graphql_local - failure
2025-08-10 09:09:22,113 - sync_service - INFO - Product Iron Man Necklace doesn't exist in store local, creating new product
2025-08-10 09:09:22,380 - sync_service - INFO - API log added to SAP: shopify - /admin/api/graphql_local - success
2025-08-10 09:09:22,381 - sync_service - INFO - API Call: {'service': 'shopify', 'endpoint': 'graphql_local', 'request': {'query': '\n        mutation productCreate($input: ProductInput!) {\n            productCreate(input: $input) {\n                product {\n                    id\n                    title\n                    handle\n                    variants(first: 50) {\n                        edges {\n                            node {\n                                id\n                                sku\n                                inventoryItem {\n                                    id\n                                }\n                                selectedOptions {\n                                    name\n                                    value\n                                }\n                            }\n                        }\n                    }\n                }\n                userErrors {\n                    field\n                    message\n                }\n            }\n        }\n        ', 'variables': {'input': {'title': 'Iron Man Necklace', 'status': 'DRAFT', 'options': ['Color'], 'variants': [{'options': ['Red'], 'sku': 'FG-0000713', 'price': '2000.0', 'inventoryManagement': 'SHOPIFY', 'inventoryPolicy': 'DENY', 'taxable': False, 'barcode': '203090'}, {'options': ['Blue'], 'sku': 'FG-0000714', 'price': '3000.0', 'inventoryManagement': 'SHOPIFY', 'inventoryPolicy': 'DENY', 'taxable': False, 'barcode': '203090'}]}}}, 'response': None, 'status': None}
2025-08-10 09:09:23,745 - sync_service - INFO - API Call: {'service': 'shopify', 'endpoint': 'graphql_local', 'request': None, 'response': {'productCreate': {'product': {'id': 'gid://shopify/Product/7526285344834', 'title': 'Iron Man Necklace', 'handle': 'iron-man-necklace', 'variants': {'edges': [{'node': {'id': 'gid://shopify/ProductVariant/42380113739842', 'sku': 'FG-0000713', 'inventoryItem': {'id': 'gid://shopify/InventoryItem/44480632717378'}, 'selectedOptions': [{'name': 'Color', 'value': 'Red'}]}}, {'node': {'id': 'gid://shopify/ProductVariant/42380113772610', 'sku': 'FG-0000714', 'inventoryItem': {'id': 'gid://shopify/InventoryItem/44480632750146'}, 'selectedOptions': [{'name': 'Color', 'value': 'Blue'}]}}]}}, 'userErrors': []}}, 'status': 'success'}
2025-08-10 09:09:23,746 - sync_service - ERROR - Shopify full response for store local: {'msg': 'success', 'data': {'productCreate': {'product': {'id': 'gid://shopify/Product/7526285344834', 'title': 'Iron Man Necklace', 'handle': 'iron-man-necklace', 'variants': {'edges': [{'node': {'id': 'gid://shopify/ProductVariant/42380113739842', 'sku': 'FG-0000713', 'inventoryItem': {'id': 'gid://shopify/InventoryItem/44480632717378'}, 'selectedOptions': [{'name': 'Color', 'value': 'Red'}]}}, {'node': {'id': 'gid://shopify/ProductVariant/42380113772610', 'sku': 'FG-0000714', 'inventoryItem': {'id': 'gid://shopify/InventoryItem/44480632750146'}, 'selectedOptions': [{'name': 'Color', 'value': 'Blue'}]}}]}}, 'userErrors': []}}}
2025-08-10 09:09:24,004 - sync_service - INFO - API log added to SAP: shopify - /admin/api/graphql_local - success
2025-08-10 09:09:24,005 - sync_service - INFO - Successfully created product in store local
2025-08-10 09:09:25,860 - sync_service - INFO - Processing product group: ('Morsi Laptop', 'local') with 2 items for store local
2025-08-10 09:09:25,860 - sync_service - INFO - API Call: {'service': 'shopify', 'endpoint': 'graphql_local', 'request': {'query': '\n        query GetProductByHandle($handle: String!) {\n            productByHandle(handle: $handle) {\n                id\n                title\n                handle\n                description\n                variants(first: 50) {\n                    edges {\n                        node {\n                            id\n                            sku\n                            price\n                            inventoryItem {\n                                id\n                            }\n                            selectedOptions {\n                                name\n                                value\n                            }\n                        }\n                    }\n                }\n            }\n        }\n        ', 'variables': {'handle': 'morsi-laptop'}}, 'response': None, 'status': None}
2025-08-10 09:09:26,345 - sync_service - INFO - API Call: {'service': 'shopify', 'endpoint': 'graphql_local', 'request': None, 'response': {'productByHandle': None}, 'status': 'success'}
2025-08-10 09:09:26,347 - sync_service - INFO - Product Morsi Laptop doesn't exist in store local, creating new product
2025-08-10 09:09:26,604 - sync_service - INFO - API log added to SAP: shopify - /admin/api/graphql_local - success
2025-08-10 09:09:26,605 - sync_service - INFO - API Call: {'service': 'shopify', 'endpoint': 'graphql_local', 'request': {'query': '\n        mutation productCreate($input: ProductInput!) {\n            productCreate(input: $input) {\n                product {\n                    id\n                    title\n                    handle\n                    variants(first: 50) {\n                        edges {\n                            node {\n                                id\n                                sku\n                                inventoryItem {\n                                    id\n                                }\n                                selectedOptions {\n                                    name\n                                    value\n                                }\n                            }\n                        }\n                    }\n                }\n                userErrors {\n                    field\n                    message\n                }\n            }\n        }\n        ', 'variables': {'input': {'title': 'Morsi Laptop', 'status': 'DRAFT', 'options': ['Color'], 'variants': [{'options': ['Black'], 'sku': 'FG-0000709', 'price': '1000.0', 'inventoryManagement': 'SHOPIFY', 'inventoryPolicy': 'DENY', 'taxable': False}, {'options': ['Gray'], 'sku': 'FG-0000710', 'price': '1000.0', 'inventoryManagement': 'SHOPIFY', 'inventoryPolicy': 'DENY', 'taxable': False}]}}}, 'response': None, 'status': None}
2025-08-10 09:09:27,499 - sync_service - INFO - API Call: {'service': 'shopify', 'endpoint': 'graphql_local', 'request': None, 'response': {'productCreate': {'product': {'id': 'gid://shopify/Product/7526285377602', 'title': 'Morsi Laptop', 'handle': 'morsi-laptop', 'variants': {'edges': [{'node': {'id': 'gid://shopify/ProductVariant/42380113805378', 'sku': 'FG-0000709', 'inventoryItem': {'id': 'gid://shopify/InventoryItem/44480632782914'}, 'selectedOptions': [{'name': 'Color', 'value': 'Black'}]}}, {'node': {'id': 'gid://shopify/ProductVariant/42380113838146', 'sku': 'FG-0000710', 'inventoryItem': {'id': 'gid://shopify/InventoryItem/44480632815682'}, 'selectedOptions': [{'name': 'Color', 'value': 'Gray'}]}}]}}, 'userErrors': []}}, 'status': 'success'}
2025-08-10 09:09:27,500 - sync_service - ERROR - Shopify full response for store local: {'msg': 'success', 'data': {'productCreate': {'product': {'id': 'gid://shopify/Product/7526285377602', 'title': 'Morsi Laptop', 'handle': 'morsi-laptop', 'variants': {'edges': [{'node': {'id': 'gid://shopify/ProductVariant/42380113805378', 'sku': 'FG-0000709', 'inventoryItem': {'id': 'gid://shopify/InventoryItem/44480632782914'}, 'selectedOptions': [{'name': 'Color', 'value': 'Black'}]}}, {'node': {'id': 'gid://shopify/ProductVariant/42380113838146', 'sku': 'FG-0000710', 'inventoryItem': {'id': 'gid://shopify/InventoryItem/44480632815682'}, 'selectedOptions': [{'name': 'Color', 'value': 'Gray'}]}}]}}, 'userErrors': []}}}
2025-08-10 09:09:27,762 - sync_service - INFO - API log added to SAP: shopify - /admin/api/graphql_local - success
2025-08-10 09:09:27,763 - sync_service - INFO - Successfully created product in store local
2025-08-10 09:09:29,622 - sync_service - INFO - Processing product group: ('Morsi Necklace', 'local') with 3 items for store local
2025-08-10 09:09:29,622 - sync_service - INFO - API Call: {'service': 'shopify', 'endpoint': 'graphql_local', 'request': {'query': '\n        query GetProductByHandle($handle: String!) {\n            productByHandle(handle: $handle) {\n                id\n                title\n                handle\n                description\n                variants(first: 50) {\n                    edges {\n                        node {\n                            id\n                            sku\n                            price\n                            inventoryItem {\n                                id\n                            }\n                            selectedOptions {\n                                name\n                                value\n                            }\n                        }\n                    }\n                }\n            }\n        }\n        ', 'variables': {'handle': 'morsi-necklace'}}, 'response': None, 'status': None}
2025-08-10 09:09:37,391 - sync_service - INFO - API Call: {'service': 'shopify', 'endpoint': 'graphql_local', 'request': None, 'response': {'productByHandle': None}, 'status': 'success'}
2025-08-10 09:09:37,391 - sync_service - INFO - Product Morsi Necklace doesn't exist in store local, creating new product
2025-08-10 09:09:37,656 - sync_service - INFO - API log added to SAP: shopify - /admin/api/graphql_local - success
2025-08-10 09:09:37,656 - sync_service - INFO - API Call: {'service': 'shopify', 'endpoint': 'graphql_local', 'request': {'query': '\n        mutation productCreate($input: ProductInput!) {\n            productCreate(input: $input) {\n                product {\n                    id\n                    title\n                    handle\n                    variants(first: 50) {\n                        edges {\n                            node {\n                                id\n                                sku\n                                inventoryItem {\n                                    id\n                                }\n                                selectedOptions {\n                                    name\n                                    value\n                                }\n                            }\n                        }\n                    }\n                }\n                userErrors {\n                    field\n                    message\n                }\n            }\n        }\n        ', 'variables': {'input': {'title': 'Morsi Necklace', 'status': 'DRAFT', 'options': ['Color'], 'variants': [{'options': ['Black'], 'sku': 'FG-0000702', 'price': '2500.0', 'inventoryManagement': 'SHOPIFY', 'inventoryPolicy': 'DENY', 'taxable': False, 'barcode': '2123243245'}, {'options': ['White'], 'sku': 'FG-0000703', 'price': '2500.0', 'inventoryManagement': 'SHOPIFY', 'inventoryPolicy': 'DENY', 'taxable': False, 'barcode': '242342342'}, {'options': ['Green'], 'sku': 'FG-0000705', 'price': '2500.0', 'inventoryManagement': 'SHOPIFY', 'inventoryPolicy': 'DENY', 'taxable': False}]}}}, 'response': None, 'status': None}
2025-08-10 09:09:38,488 - sync_service - INFO - API Call: {'service': 'shopify', 'endpoint': 'graphql_local', 'request': None, 'response': {'productCreate': {'product': {'id': 'gid://shopify/Product/7526285443138', 'title': 'Morsi Necklace', 'handle': 'morsi-necklace', 'variants': {'edges': [{'node': {'id': 'gid://shopify/ProductVariant/42380113903682', 'sku': 'FG-0000702', 'inventoryItem': {'id': 'gid://shopify/InventoryItem/44480632881218'}, 'selectedOptions': [{'name': 'Color', 'value': 'Black'}]}}, {'node': {'id': 'gid://shopify/ProductVariant/42380113936450', 'sku': 'FG-0000703', 'inventoryItem': {'id': 'gid://shopify/InventoryItem/44480632913986'}, 'selectedOptions': [{'name': 'Color', 'value': 'White'}]}}, {'node': {'id': 'gid://shopify/ProductVariant/42380113969218', 'sku': 'FG-0000705', 'inventoryItem': {'id': 'gid://shopify/InventoryItem/44480632946754'}, 'selectedOptions': [{'name': 'Color', 'value': 'Green'}]}}]}}, 'userErrors': []}}, 'status': 'success'}
2025-08-10 09:09:38,489 - sync_service - ERROR - Shopify full response for store local: {'msg': 'success', 'data': {'productCreate': {'product': {'id': 'gid://shopify/Product/7526285443138', 'title': 'Morsi Necklace', 'handle': 'morsi-necklace', 'variants': {'edges': [{'node': {'id': 'gid://shopify/ProductVariant/42380113903682', 'sku': 'FG-0000702', 'inventoryItem': {'id': 'gid://shopify/InventoryItem/44480632881218'}, 'selectedOptions': [{'name': 'Color', 'value': 'Black'}]}}, {'node': {'id': 'gid://shopify/ProductVariant/42380113936450', 'sku': 'FG-0000703', 'inventoryItem': {'id': 'gid://shopify/InventoryItem/44480632913986'}, 'selectedOptions': [{'name': 'Color', 'value': 'White'}]}}, {'node': {'id': 'gid://shopify/ProductVariant/42380113969218', 'sku': 'FG-0000705', 'inventoryItem': {'id': 'gid://shopify/InventoryItem/44480632946754'}, 'selectedOptions': [{'name': 'Color', 'value': 'Green'}]}}]}}, 'userErrors': []}}}
2025-08-10 09:09:38,753 - sync_service - INFO - API log added to SAP: shopify - /admin/api/graphql_local - success
2025-08-10 09:09:38,754 - sync_service - INFO - Successfully created product in store local
2025-08-10 09:09:41,398 - sync_service - INFO - Processing product group: ('Morsi Shoes', 'local') with 2 items for store local
2025-08-10 09:09:41,398 - sync_service - INFO - API Call: {'service': 'shopify', 'endpoint': 'graphql_local', 'request': {'query': '\n        query GetProductByHandle($handle: String!) {\n            productByHandle(handle: $handle) {\n                id\n                title\n                handle\n                description\n                variants(first: 50) {\n                    edges {\n                        node {\n                            id\n                            sku\n                            price\n                            inventoryItem {\n                                id\n                            }\n                            selectedOptions {\n                                name\n                                value\n                            }\n                        }\n                    }\n                }\n            }\n        }\n        ', 'variables': {'handle': 'morsi-shoes'}}, 'response': None, 'status': None}
2025-08-10 09:09:41,879 - sync_service - INFO - API Call: {'service': 'shopify', 'endpoint': 'graphql_local', 'request': None, 'response': {'productByHandle': None}, 'status': 'success'}
2025-08-10 09:09:41,880 - sync_service - INFO - Product Morsi Shoes doesn't exist in store local, creating new product
2025-08-10 09:09:42,152 - sync_service - INFO - API log added to SAP: shopify - /admin/api/graphql_local - success
2025-08-10 09:09:42,154 - sync_service - INFO - API Call: {'service': 'shopify', 'endpoint': 'graphql_local', 'request': {'query': '\n        mutation productCreate($input: ProductInput!) {\n            productCreate(input: $input) {\n                product {\n                    id\n                    title\n                    handle\n                    variants(first: 50) {\n                        edges {\n                            node {\n                                id\n                                sku\n                                inventoryItem {\n                                    id\n                                }\n                                selectedOptions {\n                                    name\n                                    value\n                                }\n                            }\n                        }\n                    }\n                }\n                userErrors {\n                    field\n                    message\n                }\n            }\n        }\n        ', 'variables': {'input': {'title': 'Morsi Shoes', 'status': 'DRAFT', 'options': ['Color'], 'variants': [{'options': ['Green'], 'sku': 'FG-0000706', 'price': '1000.0', 'inventoryManagement': 'SHOPIFY', 'inventoryPolicy': 'DENY', 'taxable': False}, {'options': ['Beige'], 'sku': 'FG-0000707', 'price': '1000.0', 'inventoryManagement': 'SHOPIFY', 'inventoryPolicy': 'DENY', 'taxable': False}]}}}, 'response': None, 'status': None}
2025-08-10 09:09:52,160 - sync_service - ERROR - GraphQL query error for store local: 
2025-08-10 09:09:52,428 - sync_service - INFO - API log added to SAP: shopify - /admin/api/graphql_local - failure
2025-08-10 09:09:52,428 - sync_service - ERROR - Shopify full response for store local: {'msg': 'failure', 'error': 'GraphQL query error for store local: '}
2025-08-10 09:09:52,692 - sync_service - INFO - API log added to SAP: shopify - /admin/api/graphql_local - failure
2025-08-10 09:09:52,692 - sync_service - ERROR - Failed to create product in store local: GraphQL query error for store local: 
2025-08-10 09:09:52,693 - sync_service - INFO - Sync Event: {'sync_type': 'multi_store_new_items_sap_to_shopify', 'items_processed': 6, 'success_count': 6, 'error_count': 2, 'details': None}
2025-08-10 09:09:52,693 - sync_service - INFO - Multi-store new items sync completed: 6 processed, 6 successful, 2 errors
2025-08-10 09:09:52,695 - sync_service - INFO - Starting stock change sync...
2025-08-10 09:09:52,695 - sync_service - INFO - Starting stock change sync using MASHURA_StockChangeB1SLQuery view
2025-08-10 09:09:52,695 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'view.svc/MASHURA_StockChangeB1SLQuery', 'request': {'method': 'GET', 'url': 'https://10.0.0.100:50000/b1s/v1/view.svc/MASHURA_StockChangeB1SLQuery', 'data': None, 'params': {'$top': 50}}, 'response': None, 'status': None}
2025-08-10 09:09:52,963 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'view.svc/MASHURA_StockChangeB1SLQuery', 'request': None, 'response': {'odata.metadata': 'https://10.0.0.100:50000/b1s/v1/view.svc/$metadata#MASHURA_StockChangeB1SLQuery', 'value': [{'ItemCode': 'FG-0000708', 'Variant_ID': '44480632586306', 'OnHand': 400.0, 'Available': 200.0, 'Location_ID': '68605345858', 'id__': 1}, {'ItemCode': 'FG-0000711', 'Variant_ID': '44480632619074', 'OnHand': 60.0, 'Available': 30.0, 'Location_ID': '68605345858', 'id__': 2}, {'ItemCode': 'FG-0000712', 'Variant_ID': '44480632684610', 'OnHand': 1099.0, 'Available': 999.0, 'Location_ID': '68605345858', 'id__': 3}, {'ItemCode': 'FG-0000713', 'Variant_ID': '44480632717378', 'OnHand': 65.0, 'Available': 55.0, 'Location_ID': '68605345858', 'id__': 4}, {'ItemCode': 'FG-0000714', 'Variant_ID': '44480632750146', 'OnHand': 15.0, 'Available': 15.0, 'Location_ID': '68605345858', 'id__': 5}, {'ItemCode': 'FG-0000709', 'Variant_ID': '44480632782914', 'OnHand': 35.0, 'Available': 10.0, 'Location_ID': '68605345858', 'id__': 6}, {'ItemCode': 'FG-0000710', 'Variant_ID': '44480632815682', 'OnHand': 40.0, 'Available': 20.0, 'Location_ID': '68605345858', 'id__': 7}, {'ItemCode': 'FG-0000702', 'Variant_ID': '44480632881218', 'OnHand': 0.0, 'Available': 0.0, 'Location_ID': '68605345858', 'id__': 8}, {'ItemCode': 'FG-0000703', 'Variant_ID': '44480632913986', 'OnHand': 0.0, 'Available': 0.0, 'Location_ID': '68605345858', 'id__': 9}, {'ItemCode': 'FG-0000705', 'Variant_ID': '44480632946754', 'OnHand': 0.0, 'Available': 0.0, 'Location_ID': '68605345858', 'id__': 10}]}, 'status': 'success'}
2025-08-10 09:09:52,963 - sync_service - INFO - Updating inventory for item FG-0000708 (variant 44480632586306) at location 68605345858
2025-08-10 09:09:52,965 - sync_service - INFO - API Call: {'service': 'shopify', 'endpoint': 'rest_inventory_local', 'request': {'location_id': '68605345858', 'inventory_item_id': '44480632586306', 'available': 200}, 'response': None, 'status': None}
2025-08-10 09:09:53,883 - sync_service - INFO - API Call: {'service': 'shopify', 'endpoint': 'rest_inventory_local', 'request': None, 'response': {'inventory_level': {'inventory_item_id': 44480632586306, 'location_id': 68605345858, 'available': 200, 'updated_at': '2025-08-10T09:09:53+03:00', 'admin_graphql_api_id': 'gid://shopify/InventoryLevel/103109591106?inventory_item_id=44480632586306'}}, 'status': 'success'}
2025-08-10 09:10:05,680 - sync_service - INFO - API log added to SAP: shopify - inventory_levels - success
2025-08-10 09:10:05,785 - sync_service - INFO - Updating inventory for item FG-0000711 (variant 44480632619074) at location 68605345858
2025-08-10 09:10:05,787 - sync_service - INFO - API Call: {'service': 'shopify', 'endpoint': 'rest_inventory_local', 'request': {'location_id': '68605345858', 'inventory_item_id': '44480632619074', 'available': 30}, 'response': None, 'status': None}
2025-08-10 09:10:06,334 - sync_service - INFO - API Call: {'service': 'shopify', 'endpoint': 'rest_inventory_local', 'request': None, 'response': {'inventory_level': {'inventory_item_id': 44480632619074, 'location_id': 68605345858, 'available': 30, 'updated_at': '2025-08-10T09:10:06+03:00', 'admin_graphql_api_id': 'gid://shopify/InventoryLevel/103109591106?inventory_item_id=44480632619074'}}, 'status': 'success'}
2025-08-10 09:10:07,374 - sync_service - INFO - API log added to SAP: shopify - inventory_levels - success
2025-08-10 09:10:07,482 - sync_service - INFO - Updating inventory for item FG-0000712 (variant 44480632684610) at location 68605345858
2025-08-10 09:10:07,485 - sync_service - INFO - API Call: {'service': 'shopify', 'endpoint': 'rest_inventory_local', 'request': {'location_id': '68605345858', 'inventory_item_id': '44480632684610', 'available': 999}, 'response': None, 'status': None}
2025-08-10 09:10:07,979 - sync_service - INFO - API Call: {'service': 'shopify', 'endpoint': 'rest_inventory_local', 'request': None, 'response': {'inventory_level': {'inventory_item_id': 44480632684610, 'location_id': 68605345858, 'available': 999, 'updated_at': '2025-08-10T09:10:07+03:00', 'admin_graphql_api_id': 'gid://shopify/InventoryLevel/103109591106?inventory_item_id=44480632684610'}}, 'status': 'success'}
2025-08-10 09:10:08,705 - sync_service - INFO - API log added to SAP: shopify - inventory_levels - success
2025-08-10 09:10:08,811 - sync_service - INFO - Updating inventory for item FG-0000713 (variant 44480632717378) at location 68605345858
2025-08-10 09:10:08,812 - sync_service - INFO - API Call: {'service': 'shopify', 'endpoint': 'rest_inventory_local', 'request': {'location_id': '68605345858', 'inventory_item_id': '44480632717378', 'available': 55}, 'response': None, 'status': None}
2025-08-10 09:10:09,318 - sync_service - INFO - API Call: {'service': 'shopify', 'endpoint': 'rest_inventory_local', 'request': None, 'response': {'inventory_level': {'inventory_item_id': 44480632717378, 'location_id': 68605345858, 'available': 55, 'updated_at': '2025-08-10T09:10:09+03:00', 'admin_graphql_api_id': 'gid://shopify/InventoryLevel/103109591106?inventory_item_id=44480632717378'}}, 'status': 'success'}
2025-08-10 09:10:10,050 - sync_service - INFO - API log added to SAP: shopify - inventory_levels - success
2025-08-10 09:10:10,158 - sync_service - INFO - Updating inventory for item FG-0000714 (variant 44480632750146) at location 68605345858
2025-08-10 09:10:10,158 - sync_service - INFO - API Call: {'service': 'shopify', 'endpoint': 'rest_inventory_local', 'request': {'location_id': '68605345858', 'inventory_item_id': '44480632750146', 'available': 15}, 'response': None, 'status': None}
2025-08-10 09:10:21,754 - sync_service - INFO - API Call: {'service': 'shopify', 'endpoint': 'rest_inventory_local', 'request': None, 'response': {'inventory_level': {'inventory_item_id': 44480632750146, 'location_id': 68605345858, 'available': 15, 'updated_at': '2025-08-10T09:10:21+03:00', 'admin_graphql_api_id': 'gid://shopify/InventoryLevel/103109591106?inventory_item_id=44480632750146'}}, 'status': 'success'}
2025-08-10 09:10:22,634 - sync_service - INFO - API log added to SAP: shopify - inventory_levels - success
2025-08-10 09:10:22,744 - sync_service - INFO - Updating inventory for item FG-0000709 (variant 44480632782914) at location 68605345858
2025-08-10 09:10:22,748 - sync_service - INFO - API Call: {'service': 'shopify', 'endpoint': 'rest_inventory_local', 'request': {'location_id': '68605345858', 'inventory_item_id': '44480632782914', 'available': 10}, 'response': None, 'status': None}
2025-08-10 09:10:23,319 - sync_service - INFO - API Call: {'service': 'shopify', 'endpoint': 'rest_inventory_local', 'request': None, 'response': {'inventory_level': {'inventory_item_id': 44480632782914, 'location_id': 68605345858, 'available': 10, 'updated_at': '2025-08-10T09:10:23+03:00', 'admin_graphql_api_id': 'gid://shopify/InventoryLevel/103109591106?inventory_item_id=44480632782914'}}, 'status': 'success'}
2025-08-10 09:10:24,100 - sync_service - INFO - API log added to SAP: shopify - inventory_levels - success
2025-08-10 09:10:24,213 - sync_service - INFO - Updating inventory for item FG-0000710 (variant 44480632815682) at location 68605345858
2025-08-10 09:10:24,215 - sync_service - INFO - API Call: {'service': 'shopify', 'endpoint': 'rest_inventory_local', 'request': {'location_id': '68605345858', 'inventory_item_id': '44480632815682', 'available': 20}, 'response': None, 'status': None}
2025-08-10 09:10:24,737 - sync_service - INFO - API Call: {'service': 'shopify', 'endpoint': 'rest_inventory_local', 'request': None, 'response': {'inventory_level': {'inventory_item_id': 44480632815682, 'location_id': 68605345858, 'available': 20, 'updated_at': '2025-08-10T09:10:24+03:00', 'admin_graphql_api_id': 'gid://shopify/InventoryLevel/103109591106?inventory_item_id=44480632815682'}}, 'status': 'success'}
2025-08-10 09:10:25,634 - sync_service - INFO - API log added to SAP: shopify - inventory_levels - success
2025-08-10 09:10:25,748 - sync_service - INFO - Updating inventory for item FG-0000702 (variant 44480632881218) at location 68605345858
2025-08-10 09:10:25,748 - sync_service - INFO - API Call: {'service': 'shopify', 'endpoint': 'rest_inventory_local', 'request': {'location_id': '68605345858', 'inventory_item_id': '44480632881218', 'available': 0}, 'response': None, 'status': None}
2025-08-10 09:10:26,233 - sync_service - INFO - API Call: {'service': 'shopify', 'endpoint': 'rest_inventory_local', 'request': None, 'response': {'inventory_level': {'inventory_item_id': 44480632881218, 'location_id': 68605345858, 'available': 0, 'updated_at': '2025-08-10T09:09:38+03:00', 'admin_graphql_api_id': 'gid://shopify/InventoryLevel/103109591106?inventory_item_id=44480632881218'}}, 'status': 'success'}
2025-08-10 09:10:33,931 - sync_service - INFO - API log added to SAP: shopify - inventory_levels - success
2025-08-10 09:10:34,049 - sync_service - INFO - Updating inventory for item FG-0000703 (variant 44480632913986) at location 68605345858
2025-08-10 09:10:34,053 - sync_service - INFO - API Call: {'service': 'shopify', 'endpoint': 'rest_inventory_local', 'request': {'location_id': '68605345858', 'inventory_item_id': '44480632913986', 'available': 0}, 'response': None, 'status': None}
2025-08-10 09:10:34,580 - sync_service - INFO - API Call: {'service': 'shopify', 'endpoint': 'rest_inventory_local', 'request': None, 'response': {'inventory_level': {'inventory_item_id': 44480632913986, 'location_id': 68605345858, 'available': 0, 'updated_at': '2025-08-10T09:09:38+03:00', 'admin_graphql_api_id': 'gid://shopify/InventoryLevel/103109591106?inventory_item_id=44480632913986'}}, 'status': 'success'}
2025-08-10 09:10:35,943 - sync_service - INFO - API log added to SAP: shopify - inventory_levels - success
2025-08-10 09:10:36,053 - sync_service - INFO - Updating inventory for item FG-0000705 (variant 44480632946754) at location 68605345858
2025-08-10 09:10:36,055 - sync_service - INFO - API Call: {'service': 'shopify', 'endpoint': 'rest_inventory_local', 'request': {'location_id': '68605345858', 'inventory_item_id': '44480632946754', 'available': 0}, 'response': None, 'status': None}
2025-08-10 09:10:36,539 - sync_service - INFO - API Call: {'service': 'shopify', 'endpoint': 'rest_inventory_local', 'request': None, 'response': {'inventory_level': {'inventory_item_id': 44480632946754, 'location_id': 68605345858, 'available': 0, 'updated_at': '2025-08-10T09:09:38+03:00', 'admin_graphql_api_id': 'gid://shopify/InventoryLevel/103109591106?inventory_item_id=44480632946754'}}, 'status': 'success'}
2025-08-10 09:10:37,250 - sync_service - INFO - API log added to SAP: shopify - inventory_levels - success
2025-08-10 09:10:37,361 - sync_service - INFO - Stock change sync completed: 10 processed, 10 successful, 0 errors
2025-08-10 09:10:37,362 - sync_service - INFO - Starting item changes sync...
2025-08-10 09:10:37,362 - sync_service - INFO - Starting item changes sync from SAP to Shopify
2025-08-10 09:10:37,362 - sync_service - INFO - Processing item changes for store: local
2025-08-10 09:10:37,364 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': "view.svc/MASHURA_ItemChangeB1SLQuery?$filter=Shopify_Store eq 'local'", 'request': {'method': 'GET', 'url': "https://10.0.0.100:50000/b1s/v1/view.svc/MASHURA_ItemChangeB1SLQuery?$filter=Shopify_Store eq 'local'", 'data': None, 'params': None}, 'response': None, 'status': None}
2025-08-10 09:10:37,647 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': "view.svc/MASHURA_ItemChangeB1SLQuery?$filter=Shopify_Store eq 'local'", 'request': None, 'response': {'odata.metadata': 'https://10.0.0.100:50000/b1s/v1/view.svc/$metadata#MASHURA_ItemChangeB1SLQuery', 'value': [{'ItemCode': 'FG-0000712', 'ItemName': 'AA-Iron Man Necklace', 'Color': None, 'MainProduct': None, 'Barcode': '203090', 'IsActive': 'Y', 'Shopify_ProductCode': '7526285312066', 'Shopify_VariantId': '42380113707074', 'Shopify_Store': 'local', 'UpdateDate': '20250804', 'UpdateTS': 141822, 'id__': 1}, {'ItemCode': 'FG-0000713', 'ItemName': 'AA-Ring Red', 'Color': 'Red', 'MainProduct': 'Iron Man Necklace', 'Barcode': '203090', 'IsActive': 'Y', 'Shopify_ProductCode': None, 'Shopify_VariantId': '42380113739842', 'Shopify_Store': 'local', 'UpdateDate': '20250804', 'UpdateTS': 141839, 'id__': 2}, {'ItemCode': 'FG-0000714', 'ItemName': 'AA-Ring Blue', 'Color': 'Blue', 'MainProduct': 'Iron Man Necklace', 'Barcode': '203090', 'IsActive': 'Y', 'Shopify_ProductCode': None, 'Shopify_VariantId': '42380113772610', 'Shopify_Store': 'local', 'UpdateDate': '20250804', 'UpdateTS': 141849, 'id__': 3}]}, 'status': 'success'}
2025-08-10 09:10:37,648 - sync_service - INFO - Found 3 item changes for store local
2025-08-10 09:10:37,648 - sync_service - INFO - Processing 3 item changes for store local
2025-08-10 09:10:37,649 - sync_service - INFO - Processing product change for FG-0000712 (product ID: gid://shopify/Product/7526285312066)
2025-08-10 09:10:37,911 - sync_service - INFO - API log added to SAP: shopify - /admin/api/graphql_local - success
2025-08-10 09:10:37,912 - sync_service - INFO - API Call: {'service': 'shopify', 'endpoint': 'graphql_local', 'request': {'query': '\n        mutation productUpdate($input: ProductInput!) {\n            productUpdate(input: $input) {\n                product {\n                    id\n                    title\n                    status\n                    vendor\n                    descriptionHtml\n                }\n                userErrors {\n                    field\n                    message\n                }\n            }\n        }\n        ', 'variables': {'input': {'title': 'AA-Iron Man Necklace', 'id': 'gid://shopify/Product/7526285312066'}}}, 'response': None, 'status': None}
2025-08-10 09:10:47,923 - sync_service - ERROR - GraphQL query error for store local: 
2025-08-10 09:10:48,200 - sync_service - INFO - API log added to SAP: shopify - /admin/api/graphql_local - failure
2025-08-10 09:10:48,478 - sync_service - INFO - API log added to SAP: shopify - /admin/api/graphql_local - failure
2025-08-10 09:10:48,479 - sync_service - ERROR - Failed to update product gid://shopify/Product/7526285312066 details in store local: GraphQL query error for store local: 
2025-08-10 09:10:48,741 - sync_service - INFO - API log added to SAP: shopify - /admin/api/graphql_local - success
2025-08-10 09:10:48,742 - sync_service - INFO - API Call: {'service': 'shopify', 'endpoint': 'graphql_local', 'request': {'query': '\n        mutation productUpdate($input: ProductInput!) {\n            productUpdate(input: $input) {\n                product {\n                    id\n                    title\n                    status\n                    vendor\n                    descriptionHtml\n                }\n                userErrors {\n                    field\n                    message\n                }\n            }\n        }\n        ', 'variables': {'input': {'status': 'ACTIVE', 'id': 'gid://shopify/Product/7526285312066'}}}, 'response': None, 'status': None}
2025-08-10 09:10:49,470 - sync_service - INFO - API Call: {'service': 'shopify', 'endpoint': 'graphql_local', 'request': None, 'response': {'productUpdate': {'product': {'id': 'gid://shopify/Product/7526285312066', 'title': 'AA-Iron Man Necklace', 'status': 'ACTIVE', 'vendor': 'JUDE BENHALIM', 'descriptionHtml': ''}, 'userErrors': []}}, 'status': 'success'}
2025-08-10 09:10:49,744 - sync_service - INFO - API log added to SAP: shopify - /admin/api/graphql_local - success
2025-08-10 09:10:49,745 - sync_service - INFO - Successfully updated product gid://shopify/Product/7526285312066 status to ACTIVE in store local
2025-08-10 09:10:49,745 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': "U_ITEM_CHANGE('FG-0000712')", 'request': {'method': 'PATCH', 'url': "https://10.0.0.100:50000/b1s/v1/U_ITEM_CHANGE('FG-0000712')", 'data': {'U_LastChangeDate': '2025-08-04', 'U_LastChangeTime': '14:18:22'}, 'params': None}, 'response': None, 'status': None}
2025-08-10 09:10:50,027 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': "U_ITEM_CHANGE('FG-0000712')", 'request': None, 'response': {'status_code': 404, 'text': '{\n   "error" : {\n      "code" : -2028,\n      "message" : {\n         "lang" : "en-us",\n         "value" : "Entity with value(\'FG-0000712\') does not exist"\n      }\n   }\n}\n'}, 'status': 'failure'}
2025-08-10 09:10:50,028 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'U_ITEM_CHANGE', 'request': {'method': 'POST', 'url': 'https://10.0.0.100:50000/b1s/v1/U_ITEM_CHANGE', 'data': {'Code': 'FG-0000712', 'Name': 'FG-0000712', 'U_LastChangeDate': '2025-08-04', 'U_LastChangeTime': '14:18:22'}, 'params': None}, 'response': None, 'status': None}
2025-08-10 09:10:50,315 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'U_ITEM_CHANGE', 'request': None, 'response': {'odata.metadata': 'https://10.0.0.100:50000/b1s/v1/$metadata#U_ITEM_CHANGE/@Element', 'Code': 'FG-0000712', 'Name': 'FG-0000712', 'U_LastChangeDate': '2025-08-04', 'U_LastChangeTime': '14:18:00'}, 'status': 'success'}
2025-08-10 09:10:50,316 - sync_service - INFO - Successfully created item change record for FG-0000712
2025-08-10 09:10:50,316 - sync_service - INFO - Successfully processed item change for FG-0000712
2025-08-10 09:10:50,827 - sync_service - INFO - Processing variant change for FG-0000713 (variant ID: gid://shopify/ProductVariant/42380113739842)
2025-08-10 09:10:51,092 - sync_service - INFO - API log added to SAP: shopify - /admin/api/graphql_local - success
2025-08-10 09:10:51,093 - sync_service - INFO - API Call: {'service': 'shopify', 'endpoint': 'graphql_local', 'request': {'query': '\n        mutation productVariantUpdate($input: ProductVariantInput!) {\n            productVariantUpdate(input: $input) {\n                productVariant {\n                    id\n                    sku\n                    title\n                    selectedOptions {\n                        name\n                        value\n                    }\n                }\n                userErrors {\n                    field\n                    message\n                }\n            }\n        }\n        ', 'variables': {'input': {'sku': 'FG-0000713', 'barcode': '203090', 'id': 'gid://shopify/ProductVariant/42380113739842'}}}, 'response': None, 'status': None}
2025-08-10 09:10:51,588 - sync_service - INFO - API Call: {'service': 'shopify', 'endpoint': 'graphql_local', 'request': None, 'response': {'productVariantUpdate': {'productVariant': {'id': 'gid://shopify/ProductVariant/42380113739842', 'sku': 'FG-0000713', 'title': 'Red', 'selectedOptions': [{'name': 'Color', 'value': 'Red'}]}, 'userErrors': []}}, 'status': 'success'}
2025-08-10 09:10:51,853 - sync_service - INFO - API log added to SAP: shopify - /admin/api/graphql_local - success
2025-08-10 09:10:51,853 - sync_service - INFO - Successfully updated variant gid://shopify/ProductVariant/42380113739842 details in store local
2025-08-10 09:10:51,854 - sync_service - INFO - API Call: {'service': 'shopify', 'endpoint': 'graphql_local', 'request': {'query': '\n        query GetVariant($id: ID!) {\n            productVariant(id: $id) {\n                id\n                sku\n                price\n                product {\n                    id\n                    title\n                    status\n                }\n                selectedOptions {\n                    name\n                    value\n                }\n            }\n        }\n        ', 'variables': {'id': 'gid://shopify/ProductVariant/42380113739842'}}, 'response': None, 'status': None}
2025-08-10 09:11:01,844 - sync_service - ERROR - GraphQL query error for store local: 
2025-08-10 09:11:02,818 - sync_service - INFO - API log added to SAP: shopify - /admin/api/graphql_local - failure
2025-08-10 09:11:02,820 - sync_service - ERROR - Failed to get variant info for gid://shopify/ProductVariant/42380113739842: GraphQL query error for store local: 
2025-08-10 09:11:02,821 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': "U_ITEM_CHANGE('FG-0000713')", 'request': {'method': 'PATCH', 'url': "https://10.0.0.100:50000/b1s/v1/U_ITEM_CHANGE('FG-0000713')", 'data': {'U_LastChangeDate': '2025-08-04', 'U_LastChangeTime': '14:18:39'}, 'params': None}, 'response': None, 'status': None}
2025-08-10 09:11:03,118 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': "U_ITEM_CHANGE('FG-0000713')", 'request': None, 'response': {'status_code': 404, 'text': '{\n   "error" : {\n      "code" : -2028,\n      "message" : {\n         "lang" : "en-us",\n         "value" : "Entity with value(\'FG-0000713\') does not exist"\n      }\n   }\n}\n'}, 'status': 'failure'}
2025-08-10 09:11:03,119 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'U_ITEM_CHANGE', 'request': {'method': 'POST', 'url': 'https://10.0.0.100:50000/b1s/v1/U_ITEM_CHANGE', 'data': {'Code': 'FG-0000713', 'Name': 'FG-0000713', 'U_LastChangeDate': '2025-08-04', 'U_LastChangeTime': '14:18:39'}, 'params': None}, 'response': None, 'status': None}
2025-08-10 09:11:03,629 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'U_ITEM_CHANGE', 'request': None, 'response': {'odata.metadata': 'https://10.0.0.100:50000/b1s/v1/$metadata#U_ITEM_CHANGE/@Element', 'Code': 'FG-0000713', 'Name': 'FG-0000713', 'U_LastChangeDate': '2025-08-04', 'U_LastChangeTime': '14:18:00'}, 'status': 'success'}
2025-08-10 09:11:03,631 - sync_service - INFO - Successfully created item change record for FG-0000713
2025-08-10 09:11:03,632 - sync_service - INFO - Successfully processed item change for FG-0000713
2025-08-10 09:11:04,145 - sync_service - INFO - Processing variant change for FG-0000714 (variant ID: gid://shopify/ProductVariant/42380113772610)
2025-08-10 09:11:04,441 - sync_service - INFO - API log added to SAP: shopify - /admin/api/graphql_local - success
2025-08-10 09:11:04,444 - sync_service - INFO - API Call: {'service': 'shopify', 'endpoint': 'graphql_local', 'request': {'query': '\n        mutation productVariantUpdate($input: ProductVariantInput!) {\n            productVariantUpdate(input: $input) {\n                productVariant {\n                    id\n                    sku\n                    title\n                    selectedOptions {\n                        name\n                        value\n                    }\n                }\n                userErrors {\n                    field\n                    message\n                }\n            }\n        }\n        ', 'variables': {'input': {'sku': 'FG-0000714', 'barcode': '203090', 'id': 'gid://shopify/ProductVariant/42380113772610'}}}, 'response': None, 'status': None}
2025-08-10 09:11:14,448 - sync_service - ERROR - GraphQL query error for store local: 
2025-08-10 09:11:14,712 - sync_service - INFO - API log added to SAP: shopify - /admin/api/graphql_local - failure
2025-08-10 09:11:15,001 - sync_service - INFO - API log added to SAP: shopify - /admin/api/graphql_local - failure
2025-08-10 09:11:15,002 - sync_service - ERROR - Failed to update variant gid://shopify/ProductVariant/42380113772610 details in store local: GraphQL query error for store local: 
2025-08-10 09:11:15,003 - sync_service - INFO - API Call: {'service': 'shopify', 'endpoint': 'graphql_local', 'request': {'query': '\n        query GetVariant($id: ID!) {\n            productVariant(id: $id) {\n                id\n                sku\n                price\n                product {\n                    id\n                    title\n                    status\n                }\n                selectedOptions {\n                    name\n                    value\n                }\n            }\n        }\n        ', 'variables': {'id': 'gid://shopify/ProductVariant/42380113772610'}}, 'response': None, 'status': None}
2025-08-10 09:11:16,018 - sync_service - INFO - API Call: {'service': 'shopify', 'endpoint': 'graphql_local', 'request': None, 'response': {'productVariant': {'id': 'gid://shopify/ProductVariant/42380113772610', 'sku': 'FG-0000714', 'price': '3000.00', 'product': {'id': 'gid://shopify/Product/7526285344834', 'title': 'Iron Man Necklace', 'status': 'DRAFT'}, 'selectedOptions': [{'name': 'Color', 'value': 'Blue'}]}}, 'status': 'success'}
2025-08-10 09:11:16,307 - sync_service - INFO - API log added to SAP: shopify - /admin/api/graphql_local - success
2025-08-10 09:11:16,307 - sync_service - INFO - API Call: {'service': 'shopify', 'endpoint': 'graphql_local', 'request': {'query': '\n        mutation productUpdate($input: ProductInput!) {\n            productUpdate(input: $input) {\n                product {\n                    id\n                    title\n                    status\n                    vendor\n                    descriptionHtml\n                }\n                userErrors {\n                    field\n                    message\n                }\n            }\n        }\n        ', 'variables': {'input': {'status': 'ACTIVE', 'id': 'gid://shopify/Product/7526285344834'}}}, 'response': None, 'status': None}
2025-08-10 09:11:17,047 - sync_service - INFO - API Call: {'service': 'shopify', 'endpoint': 'graphql_local', 'request': None, 'response': {'productUpdate': {'product': {'id': 'gid://shopify/Product/7526285344834', 'title': 'Iron Man Necklace', 'status': 'ACTIVE', 'vendor': 'JUDE BENHALIM', 'descriptionHtml': ''}, 'userErrors': []}}, 'status': 'success'}
2025-08-10 09:11:17,336 - sync_service - INFO - API log added to SAP: shopify - /admin/api/graphql_local - success
2025-08-10 09:11:17,336 - sync_service - INFO - Successfully updated product gid://shopify/Product/7526285344834 status to ACTIVE in store local
2025-08-10 09:11:17,337 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': "U_ITEM_CHANGE('FG-0000714')", 'request': {'method': 'PATCH', 'url': "https://10.0.0.100:50000/b1s/v1/U_ITEM_CHANGE('FG-0000714')", 'data': {'U_LastChangeDate': '2025-08-04', 'U_LastChangeTime': '14:18:49'}, 'params': None}, 'response': None, 'status': None}
2025-08-10 09:11:17,624 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': "U_ITEM_CHANGE('FG-0000714')", 'request': None, 'response': {'status_code': 404, 'text': '{\n   "error" : {\n      "code" : -2028,\n      "message" : {\n         "lang" : "en-us",\n         "value" : "Entity with value(\'FG-0000714\') does not exist"\n      }\n   }\n}\n'}, 'status': 'failure'}
2025-08-10 09:11:17,625 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'U_ITEM_CHANGE', 'request': {'method': 'POST', 'url': 'https://10.0.0.100:50000/b1s/v1/U_ITEM_CHANGE', 'data': {'Code': 'FG-0000714', 'Name': 'FG-0000714', 'U_LastChangeDate': '2025-08-04', 'U_LastChangeTime': '14:18:49'}, 'params': None}, 'response': None, 'status': None}
2025-08-10 09:11:17,891 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'U_ITEM_CHANGE', 'request': None, 'response': {'odata.metadata': 'https://10.0.0.100:50000/b1s/v1/$metadata#U_ITEM_CHANGE/@Element', 'Code': 'FG-0000714', 'Name': 'FG-0000714', 'U_LastChangeDate': '2025-08-04', 'U_LastChangeTime': '14:18:00'}, 'status': 'success'}
2025-08-10 09:11:17,892 - sync_service - INFO - Successfully created item change record for FG-0000714
2025-08-10 09:11:17,892 - sync_service - INFO - Successfully processed item change for FG-0000714
2025-08-10 09:11:18,396 - sync_service - INFO - Sync Event: {'sync_type': 'item_changes_sap_to_shopify', 'items_processed': 3, 'success_count': 3, 'error_count': 0, 'details': None}
2025-08-10 09:11:18,396 - sync_service - INFO - Item changes sync completed: 3 processed, 3 successful, 0 errors
2025-08-10 09:11:18,397 - sync_service - INFO - Starting price changes sync...
2025-08-10 09:11:18,397 - sync_service - INFO - Starting price changes sync from SAP to Shopify
2025-08-10 09:11:18,397 - sync_service - INFO - Processing price changes for store: local
2025-08-10 09:11:18,398 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': "view.svc/MASHURA_PriceChangeB1SLQuery?$filter=Shopify_Store eq 'local'", 'request': {'method': 'GET', 'url': "https://10.0.0.100:50000/b1s/v1/view.svc/MASHURA_PriceChangeB1SLQuery?$filter=Shopify_Store eq 'local'", 'data': None, 'params': None}, 'response': None, 'status': None}
2025-08-10 09:11:18,659 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': "view.svc/MASHURA_PriceChangeB1SLQuery?$filter=Shopify_Store eq 'local'", 'request': None, 'response': {'odata.metadata': 'https://10.0.0.100:50000/b1s/v1/view.svc/$metadata#MASHURA_PriceChangeB1SLQuery', 'value': []}, 'status': 'success'}
2025-08-10 09:11:18,660 - sync_service - INFO - Found 0 price changes for store local
2025-08-10 09:11:18,660 - sync_service - INFO - No price changes found for store local
2025-08-10 09:11:18,660 - sync_service - INFO - Sync Event: {'sync_type': 'price_changes_sap_to_shopify', 'items_processed': 0, 'success_count': 0, 'error_count': 0, 'details': None}
2025-08-10 09:11:18,661 - sync_service - INFO - Price changes sync completed: 0 processed, 0 successful, 0 errors
2025-08-10 09:16:34,830 - sync_service - INFO - Initialized Shopify client for store: Local Store (local)
2025-08-10 09:16:34,856 - sync_service - INFO - Starting all syncs...
2025-08-10 09:16:34,857 - sync_service - INFO - Starting new items sync...
2025-08-10 09:16:34,857 - sync_service - INFO - Starting multi-store new items sync from SAP to Shopify
2025-08-10 09:16:34,858 - sync_service - INFO - Fetching new items for store: local
2025-08-10 09:16:34,858 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'login', 'request': {'company': 'JudeBenHalim_Test', 'user': 'manager'}, 'response': None, 'status': None}
2025-08-10 09:16:35,667 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'login', 'request': None, 'response': {'status': 'success'}, 'status': 'success'}
2025-08-10 09:16:35,668 - sync_service - INFO - SAP login successful
2025-08-10 09:16:35,671 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': "view.svc/MASHURA_New_ItemsB1SLQuery?$filter=Shopify_Store eq 'local'&$orderby=MainProduct", 'request': {'method': 'GET', 'url': "https://10.0.0.100:50000/b1s/v1/view.svc/MASHURA_New_ItemsB1SLQuery?$filter=Shopify_Store eq 'local'&$orderby=MainProduct", 'data': None, 'params': None}, 'response': None, 'status': None}
2025-08-10 09:16:36,372 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': "view.svc/MASHURA_New_ItemsB1SLQuery?$filter=Shopify_Store eq 'local'&$orderby=MainProduct", 'request': None, 'response': {'odata.metadata': 'https://10.0.0.100:50000/b1s/v1/view.svc/$metadata#MASHURA_New_ItemsB1SLQuery', 'value': [{'itemcode': 'FG-0000704', 'ItemName': 'Morsi Bracelet', 'MainProduct': None, 'Color': None, 'Price': 3200.0, 'Shopify_Store': 'local', 'Shopify_ProductCode': None, 'Status': 'new', 'Barcode': '645464644', 'id__': 1}, {'itemcode': 'FG-0000706', 'ItemName': 'Morsi-Shoes-Green', 'MainProduct': 'Morsi Shoes', 'Color': 'Green', 'Price': 1000.0, 'Shopify_Store': 'local', 'Shopify_ProductCode': None, 'Status': 'new', 'Barcode': None, 'id__': 2}, {'itemcode': 'FG-0000707', 'ItemName': 'Morsi-Shoes-Beige', 'MainProduct': 'Morsi Shoes', 'Color': 'Beige', 'Price': 1000.0, 'Shopify_Store': 'local', 'Shopify_ProductCode': None, 'Status': 'new', 'Barcode': None, 'id__': 3}]}, 'status': 'success'}
2025-08-10 09:16:36,374 - sync_service - INFO - Product group: ('FG-0000704', 'local') has 1 items
2025-08-10 09:16:36,374 - sync_service - INFO - Product group: ('Morsi Shoes', 'local') has 2 items
2025-08-10 09:16:36,374 - sync_service - INFO - Grouped 3 items into 2 product groups for store local
2025-08-10 09:16:36,375 - sync_service - INFO - Processing product group: ('FG-0000704', 'local') with 1 items for store local
2025-08-10 09:16:36,375 - sync_service - INFO - API Call: {'service': 'shopify', 'endpoint': 'graphql_local', 'request': {'query': '\n        query GetProductByHandle($handle: String!) {\n            productByHandle(handle: $handle) {\n                id\n                title\n                handle\n                description\n                variants(first: 50) {\n                    edges {\n                        node {\n                            id\n                            sku\n                            price\n                            inventoryItem {\n                                id\n                            }\n                            selectedOptions {\n                                name\n                                value\n                            }\n                        }\n                    }\n                }\n            }\n        }\n        ', 'variables': {'handle': 'default'}}, 'response': None, 'status': None}
2025-08-10 09:16:46,381 - sync_service - ERROR - GraphQL query error for store local: 
2025-08-10 09:16:47,094 - sync_service - INFO - SAP logging client login successful
2025-08-10 09:16:47,783 - sync_service - INFO - API log added to SAP: shopify - /admin/api/graphql_local - failure
2025-08-10 09:16:47,783 - sync_service - INFO - Product None doesn't exist in store local, creating new product
2025-08-10 09:16:48,451 - sync_service - INFO - API log added to SAP: shopify - /admin/api/graphql_local - success
2025-08-10 09:16:48,453 - sync_service - INFO - API Call: {'service': 'shopify', 'endpoint': 'graphql_local', 'request': {'query': '\n        mutation productCreate($input: ProductInput!) {\n            productCreate(input: $input) {\n                product {\n                    id\n                    title\n                    handle\n                    variants(first: 50) {\n                        edges {\n                            node {\n                                id\n                                sku\n                                inventoryItem {\n                                    id\n                                }\n                                selectedOptions {\n                                    name\n                                    value\n                                }\n                            }\n                        }\n                    }\n                }\n                userErrors {\n                    field\n                    message\n                }\n            }\n        }\n        ', 'variables': {'input': {'title': 'Morsi Bracelet', 'descriptionHtml': '', 'vendor': '', 'productType': 'Default', 'status': 'DRAFT', 'tags': [], 'variants': [{'sku': 'FG-0000704', 'price': '3200.0', 'inventoryPolicy': 'DENY', 'inventoryManagement': 'SHOPIFY', 'weight': 0.0, 'weightUnit': 'KILOGRAMS', 'taxable': False, 'barcode': '645464644'}], 'seo': {'title': 'Morsi Bracelet', 'description': ''}}}}, 'response': None, 'status': None}
2025-08-10 09:16:58,471 - sync_service - ERROR - GraphQL query error for store local: 
2025-08-10 09:16:59,158 - sync_service - INFO - API log added to SAP: shopify - /admin/api/graphql_local - failure
2025-08-10 09:16:59,158 - sync_service - ERROR - Shopify full response for store local: {'msg': 'failure', 'error': 'GraphQL query error for store local: '}
2025-08-10 09:16:59,823 - sync_service - INFO - API log added to SAP: shopify - /admin/api/graphql_local - failure
2025-08-10 09:16:59,823 - sync_service - ERROR - Failed to create product in store local: GraphQL query error for store local: 
2025-08-10 09:16:59,824 - sync_service - INFO - Processing product group: ('Morsi Shoes', 'local') with 2 items for store local
2025-08-10 09:16:59,824 - sync_service - INFO - API Call: {'service': 'shopify', 'endpoint': 'graphql_local', 'request': {'query': '\n        query GetProductByHandle($handle: String!) {\n            productByHandle(handle: $handle) {\n                id\n                title\n                handle\n                description\n                variants(first: 50) {\n                    edges {\n                        node {\n                            id\n                            sku\n                            price\n                            inventoryItem {\n                                id\n                            }\n                            selectedOptions {\n                                name\n                                value\n                            }\n                        }\n                    }\n                }\n            }\n        }\n        ', 'variables': {'handle': 'morsi-shoes'}}, 'response': None, 'status': None}
2025-08-10 09:17:00,273 - sync_service - INFO - API Call: {'service': 'shopify', 'endpoint': 'graphql_local', 'request': None, 'response': {'productByHandle': None}, 'status': 'success'}
2025-08-10 09:17:00,273 - sync_service - INFO - Product Morsi Shoes doesn't exist in store local, creating new product
2025-08-10 09:17:00,932 - sync_service - INFO - API log added to SAP: shopify - /admin/api/graphql_local - success
2025-08-10 09:17:00,932 - sync_service - INFO - API Call: {'service': 'shopify', 'endpoint': 'graphql_local', 'request': {'query': '\n        mutation productCreate($input: ProductInput!) {\n            productCreate(input: $input) {\n                product {\n                    id\n                    title\n                    handle\n                    variants(first: 50) {\n                        edges {\n                            node {\n                                id\n                                sku\n                                inventoryItem {\n                                    id\n                                }\n                                selectedOptions {\n                                    name\n                                    value\n                                }\n                            }\n                        }\n                    }\n                }\n                userErrors {\n                    field\n                    message\n                }\n            }\n        }\n        ', 'variables': {'input': {'title': 'Morsi Shoes', 'status': 'DRAFT', 'options': ['Color'], 'variants': [{'options': ['Green'], 'sku': 'FG-0000706', 'price': '1000.0', 'inventoryManagement': 'SHOPIFY', 'inventoryPolicy': 'DENY', 'taxable': False}, {'options': ['Beige'], 'sku': 'FG-0000707', 'price': '1000.0', 'inventoryManagement': 'SHOPIFY', 'inventoryPolicy': 'DENY', 'taxable': False}]}}}, 'response': None, 'status': None}
2025-08-10 09:17:01,768 - sync_service - INFO - API Call: {'service': 'shopify', 'endpoint': 'graphql_local', 'request': None, 'response': {'productCreate': {'product': {'id': 'gid://shopify/Product/7526286950466', 'title': 'Morsi Shoes', 'handle': 'morsi-shoes', 'variants': {'edges': [{'node': {'id': 'gid://shopify/ProductVariant/42380116525122', 'sku': 'FG-0000706', 'inventoryItem': {'id': 'gid://shopify/InventoryItem/44480635502658'}, 'selectedOptions': [{'name': 'Color', 'value': 'Green'}]}}, {'node': {'id': 'gid://shopify/ProductVariant/42380116557890', 'sku': 'FG-0000707', 'inventoryItem': {'id': 'gid://shopify/InventoryItem/44480635535426'}, 'selectedOptions': [{'name': 'Color', 'value': 'Beige'}]}}]}}, 'userErrors': []}}, 'status': 'success'}
2025-08-10 09:17:01,769 - sync_service - ERROR - Shopify full response for store local: {'msg': 'success', 'data': {'productCreate': {'product': {'id': 'gid://shopify/Product/7526286950466', 'title': 'Morsi Shoes', 'handle': 'morsi-shoes', 'variants': {'edges': [{'node': {'id': 'gid://shopify/ProductVariant/42380116525122', 'sku': 'FG-0000706', 'inventoryItem': {'id': 'gid://shopify/InventoryItem/44480635502658'}, 'selectedOptions': [{'name': 'Color', 'value': 'Green'}]}}, {'node': {'id': 'gid://shopify/ProductVariant/42380116557890', 'sku': 'FG-0000707', 'inventoryItem': {'id': 'gid://shopify/InventoryItem/44480635535426'}, 'selectedOptions': [{'name': 'Color', 'value': 'Beige'}]}}]}}, 'userErrors': []}}}
2025-08-10 09:17:02,405 - sync_service - INFO - API log added to SAP: shopify - /admin/api/graphql_local - success
2025-08-10 09:17:02,406 - sync_service - INFO - Successfully created product in store local
2025-08-10 09:17:05,751 - sync_service - INFO - Sync Event: {'sync_type': 'multi_store_new_items_sap_to_shopify', 'items_processed': 1, 'success_count': 1, 'error_count': 1, 'details': None}
2025-08-10 09:17:05,751 - sync_service - INFO - Multi-store new items sync completed: 1 processed, 1 successful, 1 errors
2025-08-10 09:17:05,753 - sync_service - INFO - Starting stock change sync...
2025-08-10 09:17:05,754 - sync_service - INFO - Starting stock change sync using MASHURA_StockChangeB1SLQuery view
2025-08-10 09:17:05,755 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'view.svc/MASHURA_StockChangeB1SLQuery', 'request': {'method': 'GET', 'url': 'https://10.0.0.100:50000/b1s/v1/view.svc/MASHURA_StockChangeB1SLQuery', 'data': None, 'params': {'$top': 50}}, 'response': None, 'status': None}
2025-08-10 09:17:06,406 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'view.svc/MASHURA_StockChangeB1SLQuery', 'request': None, 'response': {'odata.metadata': 'https://10.0.0.100:50000/b1s/v1/view.svc/$metadata#MASHURA_StockChangeB1SLQuery', 'value': [{'ItemCode': 'FG-0000708', 'Variant_ID': '44480632586306', 'OnHand': 400.0, 'Available': 200.0, 'Location_ID': '68605345858', 'id__': 1}, {'ItemCode': 'FG-0000711', 'Variant_ID': '44480632619074', 'OnHand': 60.0, 'Available': 30.0, 'Location_ID': '68605345858', 'id__': 2}, {'ItemCode': 'FG-0000712', 'Variant_ID': '44480632684610', 'OnHand': 1099.0, 'Available': 999.0, 'Location_ID': '68605345858', 'id__': 3}, {'ItemCode': 'FG-0000713', 'Variant_ID': '44480632717378', 'OnHand': 65.0, 'Available': 55.0, 'Location_ID': '68605345858', 'id__': 4}, {'ItemCode': 'FG-0000709', 'Variant_ID': '44480632782914', 'OnHand': 35.0, 'Available': 10.0, 'Location_ID': '68605345858', 'id__': 5}, {'ItemCode': 'FG-0000710', 'Variant_ID': '44480632815682', 'OnHand': 40.0, 'Available': 20.0, 'Location_ID': '68605345858', 'id__': 6}, {'ItemCode': 'FG-0000706', 'Variant_ID': '44480635502658', 'OnHand': 100.0, 'Available': 100.0, 'Location_ID': '68605345858', 'id__': 7}, {'ItemCode': 'FG-0000707', 'Variant_ID': '44480635535426', 'OnHand': 100.0, 'Available': 100.0, 'Location_ID': '68605345858', 'id__': 8}]}, 'status': 'success'}
2025-08-10 09:17:06,407 - sync_service - INFO - Updating inventory for item FG-0000708 (variant 44480632586306) at location 68605345858
2025-08-10 09:17:06,407 - sync_service - INFO - API Call: {'service': 'shopify', 'endpoint': 'rest_inventory_local', 'request': {'location_id': '68605345858', 'inventory_item_id': '44480632586306', 'available': 200}, 'response': None, 'status': None}
2025-08-10 09:17:17,994 - sync_service - INFO - API Call: {'service': 'shopify', 'endpoint': 'rest_inventory_local', 'request': None, 'response': {'inventory_level': {'inventory_item_id': 44480632586306, 'location_id': 68605345858, 'available': 200, 'updated_at': '2025-08-10T09:09:58+03:00', 'admin_graphql_api_id': 'gid://shopify/InventoryLevel/103109591106?inventory_item_id=44480632586306'}}, 'status': 'success'}
2025-08-10 09:17:18,738 - sync_service - INFO - API log added to SAP: shopify - inventory_levels - success
2025-08-10 09:17:18,851 - sync_service - INFO - Updating inventory for item FG-0000711 (variant 44480632619074) at location 68605345858
2025-08-10 09:17:18,852 - sync_service - INFO - API Call: {'service': 'shopify', 'endpoint': 'rest_inventory_local', 'request': {'location_id': '68605345858', 'inventory_item_id': '44480632619074', 'available': 30}, 'response': None, 'status': None}
2025-08-10 09:17:19,374 - sync_service - INFO - API Call: {'service': 'shopify', 'endpoint': 'rest_inventory_local', 'request': None, 'response': {'inventory_level': {'inventory_item_id': 44480632619074, 'location_id': 68605345858, 'available': 30, 'updated_at': '2025-08-10T09:10:21+03:00', 'admin_graphql_api_id': 'gid://shopify/InventoryLevel/103109591106?inventory_item_id=44480632619074'}}, 'status': 'success'}
2025-08-10 09:17:20,142 - sync_service - INFO - API log added to SAP: shopify - inventory_levels - success
2025-08-10 09:17:20,249 - sync_service - INFO - Updating inventory for item FG-0000712 (variant 44480632684610) at location 68605345858
2025-08-10 09:17:20,252 - sync_service - INFO - API Call: {'service': 'shopify', 'endpoint': 'rest_inventory_local', 'request': {'location_id': '68605345858', 'inventory_item_id': '44480632684610', 'available': 999}, 'response': None, 'status': None}
2025-08-10 09:17:20,756 - sync_service - INFO - API Call: {'service': 'shopify', 'endpoint': 'rest_inventory_local', 'request': None, 'response': {'inventory_level': {'inventory_item_id': 44480632684610, 'location_id': 68605345858, 'available': 999, 'updated_at': '2025-08-10T09:10:11+03:00', 'admin_graphql_api_id': 'gid://shopify/InventoryLevel/103109591106?inventory_item_id=44480632684610'}}, 'status': 'success'}
2025-08-10 09:17:21,891 - sync_service - INFO - API log added to SAP: shopify - inventory_levels - success
2025-08-10 09:17:22,007 - sync_service - INFO - Updating inventory for item FG-0000713 (variant 44480632717378) at location 68605345858
2025-08-10 09:17:22,010 - sync_service - INFO - API Call: {'service': 'shopify', 'endpoint': 'rest_inventory_local', 'request': {'location_id': '68605345858', 'inventory_item_id': '44480632717378', 'available': 55}, 'response': None, 'status': None}
2025-08-10 09:17:22,526 - sync_service - INFO - API Call: {'service': 'shopify', 'endpoint': 'rest_inventory_local', 'request': None, 'response': {'inventory_level': {'inventory_item_id': 44480632717378, 'location_id': 68605345858, 'available': 55, 'updated_at': '2025-08-10T09:10:11+03:00', 'admin_graphql_api_id': 'gid://shopify/InventoryLevel/103109591106?inventory_item_id=44480632717378'}}, 'status': 'success'}
2025-08-10 09:17:23,271 - sync_service - INFO - API log added to SAP: shopify - inventory_levels - success
2025-08-10 09:17:23,374 - sync_service - INFO - Updating inventory for item FG-0000709 (variant 44480632782914) at location 68605345858
2025-08-10 09:17:23,375 - sync_service - INFO - API Call: {'service': 'shopify', 'endpoint': 'rest_inventory_local', 'request': {'location_id': '68605345858', 'inventory_item_id': '44480632782914', 'available': 10}, 'response': None, 'status': None}
2025-08-10 09:17:23,937 - sync_service - INFO - API Call: {'service': 'shopify', 'endpoint': 'rest_inventory_local', 'request': None, 'response': {'inventory_level': {'inventory_item_id': 44480632782914, 'location_id': 68605345858, 'available': 10, 'updated_at': '2025-08-10T09:10:25+03:00', 'admin_graphql_api_id': 'gid://shopify/InventoryLevel/103109591106?inventory_item_id=44480632782914'}}, 'status': 'success'}
2025-08-10 09:17:30,696 - sync_service - INFO - API log added to SAP: shopify - inventory_levels - success
2025-08-10 09:17:30,817 - sync_service - INFO - Updating inventory for item FG-0000710 (variant 44480632815682) at location 68605345858
2025-08-10 09:17:30,823 - sync_service - INFO - API Call: {'service': 'shopify', 'endpoint': 'rest_inventory_local', 'request': {'location_id': '68605345858', 'inventory_item_id': '44480632815682', 'available': 20}, 'response': None, 'status': None}
2025-08-10 09:17:31,507 - sync_service - INFO - API Call: {'service': 'shopify', 'endpoint': 'rest_inventory_local', 'request': None, 'response': {'inventory_level': {'inventory_item_id': 44480632815682, 'location_id': 68605345858, 'available': 20, 'updated_at': '2025-08-10T09:10:26+03:00', 'admin_graphql_api_id': 'gid://shopify/InventoryLevel/103109591106?inventory_item_id=44480632815682'}}, 'status': 'success'}
2025-08-10 09:17:32,856 - sync_service - INFO - API log added to SAP: shopify - inventory_levels - success
2025-08-10 09:17:32,992 - sync_service - INFO - Updating inventory for item FG-0000706 (variant 44480635502658) at location 68605345858
2025-08-10 09:17:33,002 - sync_service - INFO - API Call: {'service': 'shopify', 'endpoint': 'rest_inventory_local', 'request': {'location_id': '68605345858', 'inventory_item_id': '44480635502658', 'available': 100}, 'response': None, 'status': None}
2025-08-10 09:17:33,835 - sync_service - INFO - API Call: {'service': 'shopify', 'endpoint': 'rest_inventory_local', 'request': None, 'response': {'inventory_level': {'inventory_item_id': 44480635502658, 'location_id': 68605345858, 'available': 100, 'updated_at': '2025-08-10T09:17:33+03:00', 'admin_graphql_api_id': 'gid://shopify/InventoryLevel/103109591106?inventory_item_id=44480635502658'}}, 'status': 'success'}
2025-08-10 09:17:35,983 - sync_service - INFO - API log added to SAP: shopify - inventory_levels - success
2025-08-10 09:17:36,264 - sync_service - INFO - Updating inventory for item FG-0000707 (variant 44480635535426) at location 68605345858
2025-08-10 09:17:36,323 - sync_service - INFO - API Call: {'service': 'shopify', 'endpoint': 'rest_inventory_local', 'request': {'location_id': '68605345858', 'inventory_item_id': '44480635535426', 'available': 100}, 'response': None, 'status': None}
2025-08-10 09:17:51,031 - sync_service - INFO - API Call: {'service': 'shopify', 'endpoint': 'rest_inventory_local', 'request': None, 'response': {'inventory_level': {'inventory_item_id': 44480635535426, 'location_id': 68605345858, 'available': 100, 'updated_at': '2025-08-10T09:17:50+03:00', 'admin_graphql_api_id': 'gid://shopify/InventoryLevel/103109591106?inventory_item_id=44480635535426'}}, 'status': 'success'}
2025-08-10 09:18:03,335 - sync_service - INFO - API log added to SAP: shopify - inventory_levels - success
2025-08-10 09:18:03,448 - sync_service - INFO - Stock change sync completed: 8 processed, 8 successful, 0 errors
2025-08-10 09:18:03,452 - sync_service - INFO - Starting item changes sync...
2025-08-10 09:18:03,457 - sync_service - INFO - Starting item changes sync from SAP to Shopify
2025-08-10 09:18:03,464 - sync_service - INFO - Processing item changes for store: local
2025-08-10 09:18:03,471 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': "view.svc/MASHURA_ItemChangeB1SLQuery?$filter=Shopify_Store eq 'local'", 'request': {'method': 'GET', 'url': "https://10.0.0.100:50000/b1s/v1/view.svc/MASHURA_ItemChangeB1SLQuery?$filter=Shopify_Store eq 'local'", 'data': None, 'params': None}, 'response': None, 'status': None}
2025-08-10 09:18:04,197 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': "view.svc/MASHURA_ItemChangeB1SLQuery?$filter=Shopify_Store eq 'local'", 'request': None, 'response': {'odata.metadata': 'https://10.0.0.100:50000/b1s/v1/view.svc/$metadata#MASHURA_ItemChangeB1SLQuery', 'value': []}, 'status': 'success'}
2025-08-10 09:18:04,200 - sync_service - INFO - Found 0 item changes for store local
2025-08-10 09:18:04,202 - sync_service - INFO - No item changes found for store local
2025-08-10 09:18:04,204 - sync_service - INFO - Sync Event: {'sync_type': 'item_changes_sap_to_shopify', 'items_processed': 0, 'success_count': 0, 'error_count': 0, 'details': None}
2025-08-10 09:18:04,207 - sync_service - INFO - Item changes sync completed: 0 processed, 0 successful, 0 errors
2025-08-10 09:18:04,209 - sync_service - INFO - Starting price changes sync...
2025-08-10 09:18:04,211 - sync_service - INFO - Starting price changes sync from SAP to Shopify
2025-08-10 09:18:04,212 - sync_service - INFO - Processing price changes for store: local
2025-08-10 09:18:04,213 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': "view.svc/MASHURA_PriceChangeB1SLQuery?$filter=Shopify_Store eq 'local'", 'request': {'method': 'GET', 'url': "https://10.0.0.100:50000/b1s/v1/view.svc/MASHURA_PriceChangeB1SLQuery?$filter=Shopify_Store eq 'local'", 'data': None, 'params': None}, 'response': None, 'status': None}
2025-08-10 09:18:04,522 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': "view.svc/MASHURA_PriceChangeB1SLQuery?$filter=Shopify_Store eq 'local'", 'request': None, 'response': {'odata.metadata': 'https://10.0.0.100:50000/b1s/v1/view.svc/$metadata#MASHURA_PriceChangeB1SLQuery', 'value': []}, 'status': 'success'}
2025-08-10 09:18:04,527 - sync_service - INFO - Found 0 price changes for store local
2025-08-10 09:18:04,529 - sync_service - INFO - No price changes found for store local
2025-08-10 09:18:04,531 - sync_service - INFO - Sync Event: {'sync_type': 'price_changes_sap_to_shopify', 'items_processed': 0, 'success_count': 0, 'error_count': 0, 'details': None}
2025-08-10 09:18:04,532 - sync_service - INFO - Price changes sync completed: 0 processed, 0 successful, 0 errors
2025-08-10 09:25:17,072 - sync_service - INFO - Initialized Shopify client for store: Local Store (local)
2025-08-10 09:25:17,091 - sync_service - INFO - Starting all syncs...
2025-08-10 09:25:17,091 - sync_service - INFO - Starting new items sync...
2025-08-10 09:25:17,092 - sync_service - INFO - Starting multi-store new items sync from SAP to Shopify
2025-08-10 09:25:17,092 - sync_service - INFO - Fetching new items for store: local
2025-08-10 09:25:17,093 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'login', 'request': {'company': 'JudeBenHalim_Test', 'user': 'manager'}, 'response': None, 'status': None}
2025-08-10 09:25:17,855 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'login', 'request': None, 'response': {'status': 'success'}, 'status': 'success'}
2025-08-10 09:25:17,856 - sync_service - INFO - SAP login successful
2025-08-10 09:25:17,857 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': "view.svc/MASHURA_New_ItemsB1SLQuery?$filter=Shopify_Store eq 'local'&$orderby=MainProduct", 'request': {'method': 'GET', 'url': "https://10.0.0.100:50000/b1s/v1/view.svc/MASHURA_New_ItemsB1SLQuery?$filter=Shopify_Store eq 'local'&$orderby=MainProduct", 'data': None, 'params': None}, 'response': None, 'status': None}
2025-08-10 09:25:18,564 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': "view.svc/MASHURA_New_ItemsB1SLQuery?$filter=Shopify_Store eq 'local'&$orderby=MainProduct", 'request': None, 'response': {'odata.metadata': 'https://10.0.0.100:50000/b1s/v1/view.svc/$metadata#MASHURA_New_ItemsB1SLQuery', 'value': [{'itemcode': 'FG-0000704', 'ItemName': 'Morsi Bracelet', 'MainProduct': None, 'Color': None, 'Price': 3200.0, 'Shopify_Store': 'local', 'Shopify_ProductCode': None, 'Status': 'new', 'Barcode': '645464644', 'id__': 1}]}, 'status': 'success'}
2025-08-10 09:25:18,565 - sync_service - INFO - Product group: ('FG-0000704', 'local') has 1 items
2025-08-10 09:25:18,565 - sync_service - INFO - Grouped 1 items into 1 product groups for store local
2025-08-10 09:25:18,566 - sync_service - INFO - Processing product group: ('FG-0000704', 'local') with 1 items for store local
2025-08-10 09:25:18,566 - sync_service - INFO - API Call: {'service': 'shopify', 'endpoint': 'graphql_local', 'request': {'query': '\n        query GetProductByHandle($handle: String!) {\n            productByHandle(handle: $handle) {\n                id\n                title\n                handle\n                description\n                variants(first: 50) {\n                    edges {\n                        node {\n                            id\n                            sku\n                            price\n                            inventoryItem {\n                                id\n                            }\n                            selectedOptions {\n                                name\n                                value\n                            }\n                        }\n                    }\n                }\n            }\n        }\n        ', 'variables': {'handle': 'default'}}, 'response': None, 'status': None}
2025-08-10 09:25:19,071 - sync_service - INFO - API Call: {'service': 'shopify', 'endpoint': 'graphql_local', 'request': None, 'response': {'productByHandle': None}, 'status': 'success'}
2025-08-10 09:25:19,072 - sync_service - INFO - Product None doesn't exist in store local, creating new product
2025-08-10 09:25:19,771 - sync_service - INFO - SAP logging client login successful
2025-08-10 09:25:20,467 - sync_service - INFO - API log added to SAP: shopify - /admin/api/graphql_local - success
2025-08-10 09:25:20,468 - sync_service - INFO - API Call: {'service': 'shopify', 'endpoint': 'graphql_local', 'request': {'query': '\n        mutation productCreate($input: ProductInput!) {\n            productCreate(input: $input) {\n                product {\n                    id\n                    title\n                    handle\n                    variants(first: 50) {\n                        edges {\n                            node {\n                                id\n                                sku\n                                inventoryItem {\n                                    id\n                                }\n                                selectedOptions {\n                                    name\n                                    value\n                                }\n                            }\n                        }\n                    }\n                }\n                userErrors {\n                    field\n                    message\n                }\n            }\n        }\n        ', 'variables': {'input': {'title': 'Morsi Bracelet', 'descriptionHtml': '', 'vendor': '', 'productType': 'Default', 'status': 'DRAFT', 'tags': [], 'variants': [{'sku': 'FG-0000704', 'price': '3200.0', 'inventoryPolicy': 'DENY', 'inventoryManagement': 'SHOPIFY', 'weight': 0.0, 'weightUnit': 'KILOGRAMS', 'taxable': False, 'barcode': '645464644'}], 'seo': {'title': 'Morsi Bracelet', 'description': ''}}}}, 'response': None, 'status': None}
2025-08-10 09:25:21,342 - sync_service - INFO - API Call: {'service': 'shopify', 'endpoint': 'graphql_local', 'request': None, 'response': {'productCreate': {'product': {'id': 'gid://shopify/Product/7526287179842', 'title': 'Morsi Bracelet', 'handle': 'morsi-bracelet', 'variants': {'edges': [{'node': {'id': 'gid://shopify/ProductVariant/42380118261826', 'sku': 'FG-0000704', 'inventoryItem': {'id': 'gid://shopify/InventoryItem/44480637239362'}, 'selectedOptions': [{'name': 'Title', 'value': 'Default Title'}]}}]}}, 'userErrors': []}}, 'status': 'success'}
2025-08-10 09:25:21,343 - sync_service - ERROR - Shopify full response for store local: {'msg': 'success', 'data': {'productCreate': {'product': {'id': 'gid://shopify/Product/7526287179842', 'title': 'Morsi Bracelet', 'handle': 'morsi-bracelet', 'variants': {'edges': [{'node': {'id': 'gid://shopify/ProductVariant/42380118261826', 'sku': 'FG-0000704', 'inventoryItem': {'id': 'gid://shopify/InventoryItem/44480637239362'}, 'selectedOptions': [{'name': 'Title', 'value': 'Default Title'}]}}]}}, 'userErrors': []}}}
2025-08-10 09:25:22,047 - sync_service - INFO - API log added to SAP: shopify - /admin/api/graphql_local - success
2025-08-10 09:25:22,048 - sync_service - INFO - Successfully created product in store local
2025-08-10 09:25:24,685 - sync_service - INFO - Sync Event: {'sync_type': 'multi_store_new_items_sap_to_shopify', 'items_processed': 1, 'success_count': 1, 'error_count': 0, 'details': None}
2025-08-10 09:25:24,685 - sync_service - INFO - Multi-store new items sync completed: 1 processed, 1 successful, 0 errors
2025-08-10 09:25:24,686 - sync_service - INFO - Starting stock change sync...
2025-08-10 09:25:24,686 - sync_service - INFO - Starting stock change sync using MASHURA_StockChangeB1SLQuery view
2025-08-10 09:25:24,687 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'view.svc/MASHURA_StockChangeB1SLQuery', 'request': {'method': 'GET', 'url': 'https://10.0.0.100:50000/b1s/v1/view.svc/MASHURA_StockChangeB1SLQuery', 'data': None, 'params': {'$top': 50}}, 'response': None, 'status': None}
2025-08-10 09:25:24,967 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'view.svc/MASHURA_StockChangeB1SLQuery', 'request': None, 'response': {'odata.metadata': 'https://10.0.0.100:50000/b1s/v1/view.svc/$metadata#MASHURA_StockChangeB1SLQuery', 'value': [{'ItemCode': 'FG-0000708', 'Variant_ID': '44480632586306', 'OnHand': 400.0, 'Available': 200.0, 'Location_ID': '68605345858', 'id__': 1}, {'ItemCode': 'FG-0000711', 'Variant_ID': '44480632619074', 'OnHand': 60.0, 'Available': 30.0, 'Location_ID': '68605345858', 'id__': 2}, {'ItemCode': 'FG-0000712', 'Variant_ID': '44480632684610', 'OnHand': 1099.0, 'Available': 999.0, 'Location_ID': '68605345858', 'id__': 3}, {'ItemCode': 'FG-0000713', 'Variant_ID': '44480632717378', 'OnHand': 65.0, 'Available': 55.0, 'Location_ID': '68605345858', 'id__': 4}, {'ItemCode': 'FG-0000709', 'Variant_ID': '44480632782914', 'OnHand': 35.0, 'Available': 10.0, 'Location_ID': '68605345858', 'id__': 5}, {'ItemCode': 'FG-0000710', 'Variant_ID': '44480632815682', 'OnHand': 40.0, 'Available': 20.0, 'Location_ID': '68605345858', 'id__': 6}, {'ItemCode': 'FG-0000704', 'Variant_ID': '44480637239362', 'OnHand': 0.0, 'Available': 0.0, 'Location_ID': '68605345858', 'id__': 7}]}, 'status': 'success'}
2025-08-10 09:25:24,969 - sync_service - INFO - Updating inventory for item FG-0000708 (variant 44480632586306) at location 68605345858
2025-08-10 09:25:24,969 - sync_service - INFO - API Call: {'service': 'shopify', 'endpoint': 'rest_inventory_local', 'request': {'location_id': '68605345858', 'inventory_item_id': '44480632586306', 'available': 200}, 'response': None, 'status': None}
2025-08-10 09:25:25,452 - sync_service - INFO - API Call: {'service': 'shopify', 'endpoint': 'rest_inventory_local', 'request': None, 'response': {'inventory_level': {'inventory_item_id': 44480632586306, 'location_id': 68605345858, 'available': 200, 'updated_at': '2025-08-10T09:09:58+03:00', 'admin_graphql_api_id': 'gid://shopify/InventoryLevel/103109591106?inventory_item_id=44480632586306'}}, 'status': 'success'}
2025-08-10 09:25:26,575 - sync_service - INFO - API log added to SAP: shopify - inventory_levels - success
2025-08-10 09:25:26,678 - sync_service - INFO - Updating inventory for item FG-0000711 (variant 44480632619074) at location 68605345858
2025-08-10 09:25:26,679 - sync_service - INFO - API Call: {'service': 'shopify', 'endpoint': 'rest_inventory_local', 'request': {'location_id': '68605345858', 'inventory_item_id': '44480632619074', 'available': 30}, 'response': None, 'status': None}
2025-08-10 09:25:27,220 - sync_service - INFO - API Call: {'service': 'shopify', 'endpoint': 'rest_inventory_local', 'request': None, 'response': {'inventory_level': {'inventory_item_id': 44480632619074, 'location_id': 68605345858, 'available': 30, 'updated_at': '2025-08-10T09:10:21+03:00', 'admin_graphql_api_id': 'gid://shopify/InventoryLevel/103109591106?inventory_item_id=44480632619074'}}, 'status': 'success'}
2025-08-10 09:25:27,944 - sync_service - INFO - API log added to SAP: shopify - inventory_levels - success
2025-08-10 09:25:28,062 - sync_service - INFO - Updating inventory for item FG-0000712 (variant 44480632684610) at location 68605345858
2025-08-10 09:25:28,062 - sync_service - INFO - API Call: {'service': 'shopify', 'endpoint': 'rest_inventory_local', 'request': {'location_id': '68605345858', 'inventory_item_id': '44480632684610', 'available': 999}, 'response': None, 'status': None}
2025-08-10 09:25:28,533 - sync_service - INFO - API Call: {'service': 'shopify', 'endpoint': 'rest_inventory_local', 'request': None, 'response': {'inventory_level': {'inventory_item_id': 44480632684610, 'location_id': 68605345858, 'available': 999, 'updated_at': '2025-08-10T09:10:11+03:00', 'admin_graphql_api_id': 'gid://shopify/InventoryLevel/103109591106?inventory_item_id=44480632684610'}}, 'status': 'success'}
2025-08-10 09:25:29,252 - sync_service - INFO - API log added to SAP: shopify - inventory_levels - success
2025-08-10 09:25:29,362 - sync_service - INFO - Updating inventory for item FG-0000713 (variant 44480632717378) at location 68605345858
2025-08-10 09:25:29,363 - sync_service - INFO - API Call: {'service': 'shopify', 'endpoint': 'rest_inventory_local', 'request': {'location_id': '68605345858', 'inventory_item_id': '44480632717378', 'available': 55}, 'response': None, 'status': None}
2025-08-10 09:25:29,834 - sync_service - INFO - API Call: {'service': 'shopify', 'endpoint': 'rest_inventory_local', 'request': None, 'response': {'inventory_level': {'inventory_item_id': 44480632717378, 'location_id': 68605345858, 'available': 55, 'updated_at': '2025-08-10T09:10:11+03:00', 'admin_graphql_api_id': 'gid://shopify/InventoryLevel/103109591106?inventory_item_id=44480632717378'}}, 'status': 'success'}
2025-08-10 09:25:30,548 - sync_service - INFO - API log added to SAP: shopify - inventory_levels - success
2025-08-10 09:25:30,650 - sync_service - INFO - Updating inventory for item FG-0000709 (variant 44480632782914) at location 68605345858
2025-08-10 09:25:30,650 - sync_service - INFO - API Call: {'service': 'shopify', 'endpoint': 'rest_inventory_local', 'request': {'location_id': '68605345858', 'inventory_item_id': '44480632782914', 'available': 10}, 'response': None, 'status': None}
2025-08-10 09:25:31,130 - sync_service - INFO - API Call: {'service': 'shopify', 'endpoint': 'rest_inventory_local', 'request': None, 'response': {'inventory_level': {'inventory_item_id': 44480632782914, 'location_id': 68605345858, 'available': 10, 'updated_at': '2025-08-10T09:10:25+03:00', 'admin_graphql_api_id': 'gid://shopify/InventoryLevel/103109591106?inventory_item_id=44480632782914'}}, 'status': 'success'}
2025-08-10 09:25:32,254 - sync_service - INFO - API log added to SAP: shopify - inventory_levels - success
2025-08-10 09:25:32,362 - sync_service - INFO - Updating inventory for item FG-0000710 (variant 44480632815682) at location 68605345858
2025-08-10 09:25:32,364 - sync_service - INFO - API Call: {'service': 'shopify', 'endpoint': 'rest_inventory_local', 'request': {'location_id': '68605345858', 'inventory_item_id': '44480632815682', 'available': 20}, 'response': None, 'status': None}
2025-08-10 09:25:32,866 - sync_service - INFO - API Call: {'service': 'shopify', 'endpoint': 'rest_inventory_local', 'request': None, 'response': {'inventory_level': {'inventory_item_id': 44480632815682, 'location_id': 68605345858, 'available': 20, 'updated_at': '2025-08-10T09:10:26+03:00', 'admin_graphql_api_id': 'gid://shopify/InventoryLevel/103109591106?inventory_item_id=44480632815682'}}, 'status': 'success'}
2025-08-10 09:25:33,995 - sync_service - INFO - API log added to SAP: shopify - inventory_levels - success
2025-08-10 09:25:34,111 - sync_service - INFO - Updating inventory for item FG-0000704 (variant 44480637239362) at location 68605345858
2025-08-10 09:25:34,113 - sync_service - INFO - API Call: {'service': 'shopify', 'endpoint': 'rest_inventory_local', 'request': {'location_id': '68605345858', 'inventory_item_id': '44480637239362', 'available': 0}, 'response': None, 'status': None}
2025-08-10 09:25:34,604 - sync_service - INFO - API Call: {'service': 'shopify', 'endpoint': 'rest_inventory_local', 'request': None, 'response': {'inventory_level': {'inventory_item_id': 44480637239362, 'location_id': 68605345858, 'available': 0, 'updated_at': '2025-08-10T09:25:21+03:00', 'admin_graphql_api_id': 'gid://shopify/InventoryLevel/103109591106?inventory_item_id=44480637239362'}}, 'status': 'success'}
2025-08-10 09:25:35,739 - sync_service - INFO - API log added to SAP: shopify - inventory_levels - success
2025-08-10 09:25:35,844 - sync_service - INFO - Stock change sync completed: 7 processed, 7 successful, 0 errors
2025-08-10 09:25:35,845 - sync_service - INFO - Starting item changes sync...
2025-08-10 09:25:35,846 - sync_service - INFO - Starting item changes sync from SAP to Shopify
2025-08-10 09:25:35,847 - sync_service - INFO - Processing item changes for store: local
2025-08-10 09:25:35,847 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': "view.svc/MASHURA_ItemChangeB1SLQuery?$filter=Shopify_Store eq 'local'", 'request': {'method': 'GET', 'url': "https://10.0.0.100:50000/b1s/v1/view.svc/MASHURA_ItemChangeB1SLQuery?$filter=Shopify_Store eq 'local'", 'data': None, 'params': None}, 'response': None, 'status': None}
2025-08-10 09:25:36,120 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': "view.svc/MASHURA_ItemChangeB1SLQuery?$filter=Shopify_Store eq 'local'", 'request': None, 'response': {'odata.metadata': 'https://10.0.0.100:50000/b1s/v1/view.svc/$metadata#MASHURA_ItemChangeB1SLQuery', 'value': [{'ItemCode': 'FG-0000707', 'ItemName': 'Morsi-Shoes-Beige', 'Color': 'Beige', 'MainProduct': 'Morsi Shoes', 'Barcode': None, 'IsActive': 'Y', 'Shopify_ProductCode': None, 'Shopify_VariantId': '42380116557890', 'Shopify_Store': 'local', 'UpdateDate': '20250810', 'UpdateTS': 124833, 'id__': 1}]}, 'status': 'success'}
2025-08-10 09:25:36,121 - sync_service - INFO - Found 1 item changes for store local
2025-08-10 09:25:36,122 - sync_service - INFO - Processing 1 item changes for store local
2025-08-10 09:25:36,123 - sync_service - INFO - Processing variant change for FG-0000707 (variant ID: gid://shopify/ProductVariant/42380116557890)
2025-08-10 09:25:36,399 - sync_service - INFO - API log added to SAP: shopify - /admin/api/graphql_local - success
2025-08-10 09:25:36,400 - sync_service - INFO - API Call: {'service': 'shopify', 'endpoint': 'graphql_local', 'request': {'query': '\n        mutation productVariantUpdate($input: ProductVariantInput!) {\n            productVariantUpdate(input: $input) {\n                productVariant {\n                    id\n                    sku\n                    title\n                    selectedOptions {\n                        name\n                        value\n                    }\n                }\n                userErrors {\n                    field\n                    message\n                }\n            }\n        }\n        ', 'variables': {'input': {'sku': 'FG-0000707', 'id': 'gid://shopify/ProductVariant/42380116557890'}}}, 'response': None, 'status': None}
2025-08-10 09:25:41,422 - sync_service - INFO - API Call: {'service': 'shopify', 'endpoint': 'graphql_local', 'request': None, 'response': {'productVariantUpdate': {'productVariant': {'id': 'gid://shopify/ProductVariant/42380116557890', 'sku': 'FG-0000707', 'title': 'Beige', 'selectedOptions': [{'name': 'Color', 'value': 'Beige'}]}, 'userErrors': []}}, 'status': 'success'}
2025-08-10 09:25:41,704 - sync_service - INFO - API log added to SAP: shopify - /admin/api/graphql_local - success
2025-08-10 09:25:41,705 - sync_service - INFO - Successfully updated variant gid://shopify/ProductVariant/42380116557890 details in store local
2025-08-10 09:25:41,705 - sync_service - INFO - API Call: {'service': 'shopify', 'endpoint': 'graphql_local', 'request': {'query': '\n        query GetVariant($id: ID!) {\n            productVariant(id: $id) {\n                id\n                sku\n                price\n                product {\n                    id\n                    title\n                    status\n                }\n                selectedOptions {\n                    name\n                    value\n                }\n            }\n        }\n        ', 'variables': {'id': 'gid://shopify/ProductVariant/42380116557890'}}, 'response': None, 'status': None}
2025-08-10 09:25:42,182 - sync_service - INFO - API Call: {'service': 'shopify', 'endpoint': 'graphql_local', 'request': None, 'response': {'productVariant': {'id': 'gid://shopify/ProductVariant/42380116557890', 'sku': 'FG-0000707', 'price': '1000.00', 'product': {'id': 'gid://shopify/Product/7526286950466', 'title': 'Morsi Shoes', 'status': 'DRAFT'}, 'selectedOptions': [{'name': 'Color', 'value': 'Beige'}]}}, 'status': 'success'}
2025-08-10 09:25:42,453 - sync_service - INFO - API log added to SAP: shopify - /admin/api/graphql_local - success
2025-08-10 09:25:42,454 - sync_service - INFO - API Call: {'service': 'shopify', 'endpoint': 'graphql_local', 'request': {'query': '\n        mutation productUpdate($input: ProductInput!) {\n            productUpdate(input: $input) {\n                product {\n                    id\n                    title\n                    status\n                    vendor\n                    descriptionHtml\n                }\n                userErrors {\n                    field\n                    message\n                }\n            }\n        }\n        ', 'variables': {'input': {'status': 'ACTIVE', 'id': 'gid://shopify/Product/7526286950466'}}}, 'response': None, 'status': None}
2025-08-10 09:25:43,114 - sync_service - INFO - API Call: {'service': 'shopify', 'endpoint': 'graphql_local', 'request': None, 'response': {'productUpdate': {'product': {'id': 'gid://shopify/Product/7526286950466', 'title': 'Morsi Shoes', 'status': 'ACTIVE', 'vendor': 'JUDE BENHALIM', 'descriptionHtml': ''}, 'userErrors': []}}, 'status': 'success'}
2025-08-10 09:25:43,383 - sync_service - INFO - API log added to SAP: shopify - /admin/api/graphql_local - success
2025-08-10 09:25:43,384 - sync_service - INFO - Successfully updated product gid://shopify/Product/7526286950466 status to ACTIVE in store local
2025-08-10 09:25:43,384 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': "U_ITEM_CHANGE('FG-0000707')", 'request': {'method': 'PATCH', 'url': "https://10.0.0.100:50000/b1s/v1/U_ITEM_CHANGE('FG-0000707')", 'data': {'U_LastChangeDate': '2025-08-10', 'U_LastChangeTime': '12:48:33'}, 'params': None}, 'response': None, 'status': None}
2025-08-10 09:25:43,659 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': "U_ITEM_CHANGE('FG-0000707')", 'request': None, 'response': {'status_code': 404, 'text': '{\n   "error" : {\n      "code" : -2028,\n      "message" : {\n         "lang" : "en-us",\n         "value" : "Entity with value(\'FG-0000707\') does not exist"\n      }\n   }\n}\n'}, 'status': 'failure'}
2025-08-10 09:25:43,660 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'U_ITEM_CHANGE', 'request': {'method': 'POST', 'url': 'https://10.0.0.100:50000/b1s/v1/U_ITEM_CHANGE', 'data': {'Code': 'FG-0000707', 'Name': 'FG-0000707', 'U_LastChangeDate': '2025-08-10', 'U_LastChangeTime': '12:48:33'}, 'params': None}, 'response': None, 'status': None}
2025-08-10 09:25:43,946 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'U_ITEM_CHANGE', 'request': None, 'response': {'odata.metadata': 'https://10.0.0.100:50000/b1s/v1/$metadata#U_ITEM_CHANGE/@Element', 'Code': 'FG-0000707', 'Name': 'FG-0000707', 'U_LastChangeDate': '2025-08-10', 'U_LastChangeTime': '12:48:00'}, 'status': 'success'}
2025-08-10 09:25:43,947 - sync_service - INFO - Successfully created item change record for FG-0000707
2025-08-10 09:25:43,948 - sync_service - INFO - Successfully processed item change for FG-0000707
2025-08-10 09:25:44,451 - sync_service - INFO - Sync Event: {'sync_type': 'item_changes_sap_to_shopify', 'items_processed': 1, 'success_count': 1, 'error_count': 0, 'details': None}
2025-08-10 09:25:44,454 - sync_service - INFO - Item changes sync completed: 1 processed, 1 successful, 0 errors
2025-08-10 09:25:44,457 - sync_service - INFO - Starting price changes sync...
2025-08-10 09:25:44,459 - sync_service - INFO - Starting price changes sync from SAP to Shopify
2025-08-10 09:25:44,461 - sync_service - INFO - Processing price changes for store: local
2025-08-10 09:25:44,461 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': "view.svc/MASHURA_PriceChangeB1SLQuery?$filter=Shopify_Store eq 'local'", 'request': {'method': 'GET', 'url': "https://10.0.0.100:50000/b1s/v1/view.svc/MASHURA_PriceChangeB1SLQuery?$filter=Shopify_Store eq 'local'", 'data': None, 'params': None}, 'response': None, 'status': None}
2025-08-10 09:25:44,732 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': "view.svc/MASHURA_PriceChangeB1SLQuery?$filter=Shopify_Store eq 'local'", 'request': None, 'response': {'odata.metadata': 'https://10.0.0.100:50000/b1s/v1/view.svc/$metadata#MASHURA_PriceChangeB1SLQuery', 'value': [{'ItemCode': 'FG-0000707', 'Shopify_ProductCode': None, 'Shopify_VariantId': '42380116557890', 'Price': 1200.0, 'Shopify_Store': 'local', 'id__': 1}]}, 'status': 'success'}
2025-08-10 09:25:44,734 - sync_service - INFO - Found 1 price changes for store local
2025-08-10 09:25:44,735 - sync_service - INFO - Processing 1 price changes for store local
2025-08-10 09:25:44,735 - sync_service - INFO - Processing variant price change for FG-0000707 (variant ID: gid://shopify/ProductVariant/42380116557890)
2025-08-10 09:25:45,439 - sync_service - INFO - API log added to SAP: shopify - /admin/api/graphql_local - success
2025-08-10 09:25:45,440 - sync_service - INFO - API Call: {'service': 'shopify', 'endpoint': 'graphql_local', 'request': {'query': '\n        mutation productVariantUpdate($input: ProductVariantInput!) {\n            productVariantUpdate(input: $input) {\n                productVariant {\n                    id\n                    sku\n                    title\n                    selectedOptions {\n                        name\n                        value\n                    }\n                }\n                userErrors {\n                    field\n                    message\n                }\n            }\n        }\n        ', 'variables': {'input': {'price': '1200.0', 'id': 'gid://shopify/ProductVariant/42380116557890'}}}, 'response': None, 'status': None}
2025-08-10 09:25:46,122 - sync_service - INFO - API Call: {'service': 'shopify', 'endpoint': 'graphql_local', 'request': None, 'response': {'productVariantUpdate': {'productVariant': {'id': 'gid://shopify/ProductVariant/42380116557890', 'sku': 'FG-0000707', 'title': 'Beige', 'selectedOptions': [{'name': 'Color', 'value': 'Beige'}]}, 'userErrors': []}}, 'status': 'success'}
2025-08-10 09:25:46,403 - sync_service - INFO - API log added to SAP: shopify - /admin/api/graphql_local - success
2025-08-10 09:25:46,404 - sync_service - INFO - Successfully updated variant gid://shopify/ProductVariant/42380116557890 price to 1200.0 in store local
2025-08-10 09:25:46,667 - sync_service - INFO - API log added to SAP: sap - price_change - success
2025-08-10 09:25:46,668 - sync_service - INFO - Successfully logged price change for FG-0000707-local: 1200.0
2025-08-10 09:25:46,669 - sync_service - INFO - Successfully processed price change for FG-0000707 (price: 1200.0)
2025-08-10 09:25:47,169 - sync_service - INFO - Sync Event: {'sync_type': 'price_changes_sap_to_shopify', 'items_processed': 1, 'success_count': 1, 'error_count': 0, 'details': None}
2025-08-10 09:25:47,169 - sync_service - INFO - Price changes sync completed: 1 processed, 1 successful, 0 errors
2025-08-10 09:43:05,738 - sync_service - INFO - Initialized Shopify client for store: Local Store (local)
2025-08-10 09:43:05,758 - sync_service - INFO - Starting all syncs...
2025-08-10 09:43:05,759 - sync_service - INFO - Starting new items sync...
2025-08-10 09:43:05,760 - sync_service - INFO - Starting multi-store new items sync from SAP to Shopify
2025-08-10 09:43:05,760 - sync_service - INFO - Fetching new items for store: local
2025-08-10 09:43:05,761 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'login', 'request': {'company': 'JudeBenHalim_Test', 'user': 'manager'}, 'response': None, 'status': None}
2025-08-10 09:43:06,513 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'login', 'request': None, 'response': {'status': 'success'}, 'status': 'success'}
2025-08-10 09:43:06,514 - sync_service - INFO - SAP login successful
2025-08-10 09:43:06,517 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': "view.svc/MASHURA_New_ItemsB1SLQuery?$filter=Shopify_Store eq 'local'&$orderby=MainProduct", 'request': {'method': 'GET', 'url': "https://10.0.0.100:50000/b1s/v1/view.svc/MASHURA_New_ItemsB1SLQuery?$filter=Shopify_Store eq 'local'&$orderby=MainProduct", 'data': None, 'params': None}, 'response': None, 'status': None}
2025-08-10 09:43:07,214 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': "view.svc/MASHURA_New_ItemsB1SLQuery?$filter=Shopify_Store eq 'local'&$orderby=MainProduct", 'request': None, 'response': {'odata.metadata': 'https://10.0.0.100:50000/b1s/v1/view.svc/$metadata#MASHURA_New_ItemsB1SLQuery', 'value': []}, 'status': 'success'}
2025-08-10 09:43:07,215 - sync_service - INFO - No new items found in SAP for store local
2025-08-10 09:43:07,216 - sync_service - INFO - Sync Event: {'sync_type': 'multi_store_new_items_sap_to_shopify', 'items_processed': 0, 'success_count': 0, 'error_count': 0, 'details': None}
2025-08-10 09:43:07,217 - sync_service - INFO - Multi-store new items sync completed: 0 processed, 0 successful, 0 errors
2025-08-10 09:43:07,219 - sync_service - INFO - Starting stock change sync...
2025-08-10 09:43:07,219 - sync_service - INFO - Starting stock change sync using MASHURA_StockChangeB1SLQuery view
2025-08-10 09:43:07,219 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'view.svc/MASHURA_StockChangeB1SLQuery', 'request': {'method': 'GET', 'url': 'https://10.0.0.100:50000/b1s/v1/view.svc/MASHURA_StockChangeB1SLQuery', 'data': None, 'params': {'$top': 50}}, 'response': None, 'status': None}
2025-08-10 09:43:08,352 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'view.svc/MASHURA_StockChangeB1SLQuery', 'request': None, 'response': {'odata.metadata': 'https://10.0.0.100:50000/b1s/v1/view.svc/$metadata#MASHURA_StockChangeB1SLQuery', 'value': []}, 'status': 'success'}
2025-08-10 09:43:08,353 - sync_service - INFO - No stock changes found in the view.
2025-08-10 09:43:08,353 - sync_service - INFO - Starting item changes sync...
2025-08-10 09:43:08,354 - sync_service - INFO - Starting item changes sync from SAP to Shopify
2025-08-10 09:43:08,354 - sync_service - INFO - Processing item changes for store: local
2025-08-10 09:43:08,355 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': "view.svc/MASHURA_ItemChangeB1SLQuery?$filter=Shopify_Store eq 'local'", 'request': {'method': 'GET', 'url': "https://10.0.0.100:50000/b1s/v1/view.svc/MASHURA_ItemChangeB1SLQuery?$filter=Shopify_Store eq 'local'", 'data': None, 'params': None}, 'response': None, 'status': None}
2025-08-10 09:43:09,038 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': "view.svc/MASHURA_ItemChangeB1SLQuery?$filter=Shopify_Store eq 'local'", 'request': None, 'response': {'odata.metadata': 'https://10.0.0.100:50000/b1s/v1/view.svc/$metadata#MASHURA_ItemChangeB1SLQuery', 'value': []}, 'status': 'success'}
2025-08-10 09:43:09,038 - sync_service - INFO - Found 0 item changes for store local
2025-08-10 09:43:09,039 - sync_service - INFO - No item changes found for store local
2025-08-10 09:43:09,039 - sync_service - INFO - Sync Event: {'sync_type': 'item_changes_sap_to_shopify', 'items_processed': 0, 'success_count': 0, 'error_count': 0, 'details': None}
2025-08-10 09:43:09,039 - sync_service - INFO - Item changes sync completed: 0 processed, 0 successful, 0 errors
2025-08-10 09:43:09,040 - sync_service - INFO - Starting price changes sync...
2025-08-10 09:43:09,040 - sync_service - INFO - Starting price changes sync from SAP to Shopify
2025-08-10 09:43:09,041 - sync_service - INFO - Processing price changes for store: local
2025-08-10 09:43:09,042 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': "view.svc/MASHURA_PriceChangeB1SLQuery?$filter=Shopify_Store eq 'local'", 'request': {'method': 'GET', 'url': "https://10.0.0.100:50000/b1s/v1/view.svc/MASHURA_PriceChangeB1SLQuery?$filter=Shopify_Store eq 'local'", 'data': None, 'params': None}, 'response': None, 'status': None}
2025-08-10 09:43:09,746 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': "view.svc/MASHURA_PriceChangeB1SLQuery?$filter=Shopify_Store eq 'local'", 'request': None, 'response': {'odata.metadata': 'https://10.0.0.100:50000/b1s/v1/view.svc/$metadata#MASHURA_PriceChangeB1SLQuery', 'value': []}, 'status': 'success'}
2025-08-10 09:43:09,747 - sync_service - INFO - Found 0 price changes for store local
2025-08-10 09:43:09,748 - sync_service - INFO - No price changes found for store local
2025-08-10 09:43:09,748 - sync_service - INFO - Sync Event: {'sync_type': 'price_changes_sap_to_shopify', 'items_processed': 0, 'success_count': 0, 'error_count': 0, 'details': None}
2025-08-10 09:43:09,749 - sync_service - INFO - Price changes sync completed: 0 processed, 0 successful, 0 errors
