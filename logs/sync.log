2025-06-17 11:51:15,394 - sync_service - INFO - Starting sync service
2025-06-17 11:51:15,398 - sync_service - INFO - Sync cycle started at 2025-06-17 08:51:15.398709
2025-06-17 11:51:15,398 - sync_service - INFO - Starting master data sync
2025-06-17 11:51:15,398 - sync_service - INFO - Starting master data sync
2025-06-17 11:51:15,402 - sync_service - INFO - API Call: {'service': 'shopify', 'endpoint': 'graphql', 'request': {'query': '\n        query GetProducts($first: Int!, $after: String) {\n            products(first: $first, after: $after) {\n                pageInfo {\n                    hasNextPage\n                    endCursor\n                }\n                edges {\n                    node {\n                        id\n                        title\n                        handle\n                        description\n                        variants(first: 1) {\n                            edges {\n                                node {\n                                    id\n                                    sku\n                                    price\n                                    inventoryQuantity\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n        }\n        ', 'variables': {'first': 100, 'after': None}}, 'response': None, 'status': None}
2025-06-17 11:51:15,409 - sync_service - INFO - Starting inventory sync
2025-06-17 11:51:15,410 - sync_service - INFO - Starting orders sync
2025-06-17 11:51:15,920 - sync_service - ERROR - GraphQL query error: Error while fetching schema: [
If you don't need the schema, you can try with: "fetch_schema_from_transport=False"
2025-06-17 11:51:15,920 - sync_service - ERROR - Failed to get products from Shopify: Error while fetching schema: [
If you don't need the schema, you can try with: "fetch_schema_from_transport=False"
2025-06-17 11:51:15,920 - sync_service - ERROR - Product sync failed: Error while fetching schema: [
If you don't need the schema, you can try with: "fetch_schema_from_transport=False"
2025-06-17 11:51:15,920 - sync_service - INFO - Next sync cycle scheduled for 2025-06-17 09:51:15.398709
2025-06-17 11:52:42,306 - sync_service - INFO - Starting sync service
2025-06-17 11:52:42,316 - sync_service - INFO - Sync cycle started at 2025-06-17 08:52:42.316005
2025-06-17 11:52:42,316 - sync_service - INFO - Starting master data sync
2025-06-17 11:52:42,316 - sync_service - INFO - Starting master data sync
2025-06-17 11:52:42,316 - sync_service - INFO - API Call: {'service': 'shopify', 'endpoint': 'graphql', 'request': {'query': '\n        query GetProducts($first: Int!, $after: String) {\n            products(first: $first, after: $after) {\n                pageInfo {\n                    hasNextPage\n                    endCursor\n                }\n                edges {\n                    node {\n                        id\n                        title\n                        handle\n                        description\n                        variants(first: 1) {\n                            edges {\n                                node {\n                                    id\n                                    sku\n                                    price\n                                    inventoryQuantity\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n        }\n        ', 'variables': {'first': 100, 'after': None}}, 'response': None, 'status': None}
2025-06-17 11:52:42,370 - sync_service - INFO - Starting inventory sync
2025-06-17 11:52:42,372 - sync_service - INFO - Starting orders sync
2025-06-17 11:52:42,734 - sync_service - ERROR - GraphQL query error: [
2025-06-17 11:52:42,739 - sync_service - ERROR - Failed to get products from Shopify: [
2025-06-17 11:52:42,739 - sync_service - ERROR - Product sync failed: [
2025-06-17 11:52:42,739 - sync_service - INFO - Next sync cycle scheduled for 2025-06-17 09:52:42.316005
2025-06-17 11:54:06,195 - sync_service - INFO - Starting sync service
2025-06-17 11:54:06,196 - sync_service - INFO - Sync cycle started at 2025-06-17 08:54:06.196853
2025-06-17 11:54:06,196 - sync_service - INFO - Starting master data sync
2025-06-17 11:54:06,198 - sync_service - INFO - Starting master data sync
2025-06-17 11:54:06,198 - sync_service - INFO - API Call: {'service': 'shopify', 'endpoint': 'graphql', 'request': {'query': '\n        query GetProducts($first: Int!, $after: String) {\n            products(first: $first, after: $after) {\n                pageInfo {\n                    hasNextPage\n                    endCursor\n                }\n                edges {\n                    node {\n                        id\n                        title\n                        handle\n                        description\n                        variants(first: 1) {\n                            edges {\n                                node {\n                                    id\n                                    sku\n                                    price\n                                    inventoryQuantity\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n        }\n        ', 'variables': {'first': 100, 'after': None}}, 'response': None, 'status': None}
2025-06-17 11:54:06,207 - sync_service - INFO - Starting inventory sync
2025-06-17 11:54:06,209 - sync_service - INFO - Starting orders sync
2025-06-17 11:54:06,581 - sync_service - ERROR - GraphQL query error: [
GraphQL Errors: "[API] Invalid API key or access token (unrecognized login or wrong password)"
2025-06-17 11:54:06,581 - sync_service - ERROR - Failed to get products from Shopify: GraphQL query error: [
GraphQL Errors: "[API] Invalid API key or access token (unrecognized login or wrong password)"
2025-06-17 11:54:06,581 - sync_service - ERROR - Product sync failed: GraphQL query error: [
GraphQL Errors: "[API] Invalid API key or access token (unrecognized login or wrong password)"
2025-06-17 11:54:06,581 - sync_service - INFO - Next sync cycle scheduled for 2025-06-17 09:54:06.196853
2025-06-17 11:55:44,505 - sync_service - INFO - Starting sync service
2025-06-17 11:55:44,505 - sync_service - INFO - Sync cycle started at 2025-06-17 08:55:44.505419
2025-06-17 11:55:44,507 - sync_service - INFO - Starting master data sync
2025-06-17 11:55:44,508 - sync_service - INFO - Starting master data sync
2025-06-17 11:55:44,508 - sync_service - INFO - API Call: {'service': 'shopify', 'endpoint': 'graphql', 'request': {'query': '\n        query GetProducts($first: Int!, $after: String) {\n            products(first: $first, after: $after) {\n                pageInfo {\n                    hasNextPage\n                    endCursor\n                }\n                edges {\n                    node {\n                        id\n                        title\n                        handle\n                        description\n                        variants(first: 1) {\n                            edges {\n                                node {\n                                    id\n                                    sku\n                                    price\n                                    inventoryQuantity\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n        }\n        ', 'variables': {'first': 100, 'after': None}}, 'response': None, 'status': None}
2025-06-17 11:55:44,521 - sync_service - INFO - Starting inventory sync
2025-06-17 11:55:44,525 - sync_service - INFO - Starting orders sync
2025-06-17 11:55:45,091 - sync_service - INFO - API Call: {'service': 'shopify', 'endpoint': 'graphql', 'request': None, 'response': {'products': {'pageInfo': {'hasNextPage': False, 'endCursor': 'eyJsYXN0X2lkIjo4NTIxODQ0MzkyMDkwLCJsYXN0X3ZhbHVlIjoiODUyMTg0NDM5MjA5MCJ9'}, 'edges': [{'node': {'id': 'gid://shopify/Product/8521844392090', 'title': 'NABB', 'handle': 'nabb', 'description': 'Not a Bean Bag', 'variants': {'edges': [{'node': {'id': 'gid://shopify/ProductVariant/45841365074074', 'sku': '', 'price': '1750.00', 'inventoryQuantity': 1}}]}}}]}}, 'status': 'success'}
2025-06-17 11:55:45,093 - sync_service - INFO - Sync Event: {'sync_type': 'master_data_products', 'items_processed': 1, 'success_count': 1, 'error_count': 0, 'details': None}
2025-06-17 11:55:45,093 - sync_service - INFO - API Call: {'service': 'shopify', 'endpoint': 'graphql', 'request': {'query': '\n        query GetProducts($first: Int!, $after: String) {\n            products(first: $first, after: $after) {\n                pageInfo {\n                    hasNextPage\n                    endCursor\n                }\n                edges {\n                    node {\n                        id\n                        title\n                        handle\n                        description\n                        variants(first: 1) {\n                            edges {\n                                node {\n                                    id\n                                    sku\n                                    price\n                                    inventoryQuantity\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n        }\n        ', 'variables': {'first': 100, 'after': None}}, 'response': None, 'status': None}
2025-06-17 11:55:45,501 - sync_service - INFO - API Call: {'service': 'shopify', 'endpoint': 'graphql', 'request': None, 'response': {'products': {'pageInfo': {'hasNextPage': False, 'endCursor': 'eyJsYXN0X2lkIjo4NTIxODQ0MzkyMDkwLCJsYXN0X3ZhbHVlIjoiODUyMTg0NDM5MjA5MCJ9'}, 'edges': [{'node': {'id': 'gid://shopify/Product/8521844392090', 'title': 'NABB', 'handle': 'nabb', 'description': 'Not a Bean Bag', 'variants': {'edges': [{'node': {'id': 'gid://shopify/ProductVariant/45841365074074', 'sku': '', 'price': '1750.00', 'inventoryQuantity': 1}}]}}}]}}, 'status': 'success'}
2025-06-17 11:55:45,502 - sync_service - INFO - Sync Event: {'sync_type': 'master_data_variants', 'items_processed': 1, 'success_count': 1, 'error_count': 0, 'details': None}
2025-06-17 11:55:45,503 - sync_service - INFO - Master data sync completed
2025-06-17 11:55:45,503 - sync_service - INFO - Next sync cycle scheduled for 2025-06-17 09:55:44.505419
2025-06-17 15:17:49,805 - sync_service - INFO - Sync cycle started at 2025-06-17 12:17:49.805080
2025-06-17 15:17:49,825 - sync_service - INFO - Starting master data sync
2025-06-17 15:17:49,829 - sync_service - INFO - Starting master data sync
2025-06-17 15:17:49,831 - sync_service - INFO - API Call: {'service': 'shopify', 'endpoint': 'graphql', 'request': {'query': '\n        query GetProducts($first: Int!, $after: String) {\n            products(first: $first, after: $after) {\n                pageInfo {\n                    hasNextPage\n                    endCursor\n                }\n                edges {\n                    node {\n                        id\n                        title\n                        handle\n                        description\n                        variants(first: 1) {\n                            edges {\n                                node {\n                                    id\n                                    sku\n                                    price\n                                    inventoryQuantity\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n        }\n        ', 'variables': {'first': 100, 'after': None}}, 'response': None, 'status': None}
2025-06-17 15:17:49,853 - sync_service - INFO - Starting inventory sync
2025-06-17 15:17:49,855 - sync_service - INFO - Starting orders sync
2025-06-17 15:17:50,261 - sync_service - ERROR - GraphQL query error: [
GraphQL Errors: "[API] Invalid API key or access token (unrecognized login or wrong password)"
2025-06-17 15:17:50,261 - sync_service - ERROR - Failed to get products from Shopify: GraphQL query error: [
GraphQL Errors: "[API] Invalid API key or access token (unrecognized login or wrong password)"
2025-06-17 15:17:50,263 - sync_service - ERROR - Product sync failed: GraphQL query error: [
GraphQL Errors: "[API] Invalid API key or access token (unrecognized login or wrong password)"
2025-06-17 15:17:50,265 - sync_service - INFO - Next sync cycle scheduled for 2025-06-17 13:17:49.805080
2025-06-17 15:19:28,736 - sync_service - INFO - Sync cycle started at 2025-06-17 12:19:28.736263
2025-06-17 15:19:28,751 - sync_service - INFO - Starting master data sync
2025-06-17 15:19:28,753 - sync_service - INFO - Starting master data sync
2025-06-17 15:19:28,759 - sync_service - INFO - API Call: {'service': 'shopify', 'endpoint': 'graphql', 'request': {'query': '\n        query GetProducts($first: Int!, $after: String) {\n            products(first: $first, after: $after) {\n                pageInfo {\n                    hasNextPage\n                    endCursor\n                }\n                edges {\n                    node {\n                        id\n                        title\n                        handle\n                        description\n                        variants(first: 1) {\n                            edges {\n                                node {\n                                    id\n                                    sku\n                                    price\n                                    inventoryQuantity\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n        }\n        ', 'variables': {'first': 100, 'after': None}}, 'response': None, 'status': None}
2025-06-17 15:19:28,784 - sync_service - INFO - Starting inventory sync
2025-06-17 15:19:28,787 - sync_service - INFO - Starting orders sync
2025-06-17 15:19:29,263 - sync_service - INFO - API Call: {'service': 'shopify', 'endpoint': 'graphql', 'request': None, 'response': {'products': {'pageInfo': {'hasNextPage': False, 'endCursor': 'eyJsYXN0X2lkIjo4NTIxODQ0MzkyMDkwLCJsYXN0X3ZhbHVlIjoiODUyMTg0NDM5MjA5MCJ9'}, 'edges': [{'node': {'id': 'gid://shopify/Product/8521844392090', 'title': 'NABB', 'handle': 'nabb', 'description': 'Not a Bean Bag', 'variants': {'edges': [{'node': {'id': 'gid://shopify/ProductVariant/45841365074074', 'sku': '', 'price': '1750.00', 'inventoryQuantity': 1}}]}}}]}}, 'status': 'success'}
2025-06-17 15:19:29,263 - sync_service - INFO - Sync Event: {'sync_type': 'master_data_products', 'items_processed': 1, 'success_count': 1, 'error_count': 0, 'details': None}
2025-06-17 15:19:29,267 - sync_service - INFO - API Call: {'service': 'shopify', 'endpoint': 'graphql', 'request': {'query': '\n        query GetProducts($first: Int!, $after: String) {\n            products(first: $first, after: $after) {\n                pageInfo {\n                    hasNextPage\n                    endCursor\n                }\n                edges {\n                    node {\n                        id\n                        title\n                        handle\n                        description\n                        variants(first: 1) {\n                            edges {\n                                node {\n                                    id\n                                    sku\n                                    price\n                                    inventoryQuantity\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n        }\n        ', 'variables': {'first': 100, 'after': None}}, 'response': None, 'status': None}
2025-06-17 15:19:29,693 - sync_service - INFO - API Call: {'service': 'shopify', 'endpoint': 'graphql', 'request': None, 'response': {'products': {'pageInfo': {'hasNextPage': False, 'endCursor': 'eyJsYXN0X2lkIjo4NTIxODQ0MzkyMDkwLCJsYXN0X3ZhbHVlIjoiODUyMTg0NDM5MjA5MCJ9'}, 'edges': [{'node': {'id': 'gid://shopify/Product/8521844392090', 'title': 'NABB', 'handle': 'nabb', 'description': 'Not a Bean Bag', 'variants': {'edges': [{'node': {'id': 'gid://shopify/ProductVariant/45841365074074', 'sku': '', 'price': '1750.00', 'inventoryQuantity': 1}}]}}}]}}, 'status': 'success'}
2025-06-17 15:19:29,698 - sync_service - INFO - Sync Event: {'sync_type': 'master_data_variants', 'items_processed': 1, 'success_count': 1, 'error_count': 0, 'details': None}
2025-06-17 15:19:29,698 - sync_service - INFO - Master data sync completed
2025-06-17 15:19:29,700 - sync_service - INFO - Next sync cycle scheduled for 2025-06-17 13:19:28.736263
2025-06-30 15:11:58,071 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'login', 'request': {'company': 'GREENS_TEST', 'user': 'RPRO'}, 'response': None, 'status': None}
2025-06-30 15:11:58,789 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'login', 'request': None, 'response': {'status': 'failed', 'status_code': 404}, 'status': 'failure'}
2025-06-30 15:11:58,833 - sync_service - ERROR - SAP login failed: 404 - <!DOCTYPE HTML PUBLIC "-//IETF//DTD HTML 2.0//EN">
<html><head>
<title>404 Not Found</title>
</head><body>
<h1>Not Found</h1>
<p>The requested URL was not found on this server.</p>
</body></html>

2025-06-30 15:11:58,842 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'login', 'request': {'company': 'GREENS_TEST', 'user': 'RPRO'}, 'response': None, 'status': None}
2025-06-30 15:11:59,312 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'login', 'request': None, 'response': {'status': 'failed', 'status_code': 404}, 'status': 'failure'}
2025-06-30 15:11:59,312 - sync_service - ERROR - SAP login failed: 404 - <!DOCTYPE HTML PUBLIC "-//IETF//DTD HTML 2.0//EN">
<html><head>
<title>404 Not Found</title>
</head><body>
<h1>Not Found</h1>
<p>The requested URL was not found on this server.</p>
</body></html>

2025-06-30 15:11:59,316 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'login', 'request': {'company': 'GREENS_TEST', 'user': 'RPRO'}, 'response': None, 'status': None}
2025-06-30 15:11:59,791 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'login', 'request': None, 'response': {'status': 'failed', 'status_code': 404}, 'status': 'failure'}
2025-06-30 15:11:59,793 - sync_service - ERROR - SAP login failed: 404 - <!DOCTYPE HTML PUBLIC "-//IETF//DTD HTML 2.0//EN">
<html><head>
<title>404 Not Found</title>
</head><body>
<h1>Not Found</h1>
<p>The requested URL was not found on this server.</p>
</body></html>

2025-06-30 15:13:10,057 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'login', 'request': {'company': 'GREENS_TEST', 'user': 'RPRO'}, 'response': None, 'status': None}
2025-06-30 15:13:12,122 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'login', 'request': None, 'response': {'status': 'success'}, 'status': 'success'}
2025-06-30 15:13:12,122 - sync_service - INFO - SAP login successful
2025-06-30 15:13:12,122 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'Items', 'request': {'method': 'GET', 'url': 'https://sapgc.wisys.com.sa:50000/b1s/v1/Items', 'data': None, 'params': {'$top': 5}}, 'response': None, 'status': None}
2025-06-30 15:13:20,875 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'BusinessPartners', 'request': {'method': 'GET', 'url': 'https://sapgc.wisys.com.sa:50000/b1s/v1/BusinessPartners', 'data': None, 'params': {}}, 'response': None, 'status': None}
2025-06-30 15:13:28,409 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'Orders', 'request': {'method': 'GET', 'url': 'https://sapgc.wisys.com.sa:50000/b1s/v1/Orders', 'data': None, 'params': {'$top': 5}}, 'response': None, 'status': None}
2025-06-30 15:13:30,336 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'sml.svc/NEW_ITEMS?$orderby=ItemCode', 'request': {'method': 'GET', 'url': 'https://sapgc.wisys.com.sa:50000/b1s/v1/sml.svc/NEW_ITEMS?$orderby=ItemCode', 'data': None, 'params': None}, 'response': None, 'status': None}
2025-06-30 15:13:31,078 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'Items', 'request': {'method': 'GET', 'url': 'https://sapgc.wisys.com.sa:50000/b1s/v1/Items', 'data': None, 'params': {'$filter': "ItemCode eq 'ITEM001'", '$top': 1}}, 'response': None, 'status': None}
2025-06-30 15:13:31,588 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'Items', 'request': None, 'response': {'odata.metadata': 'https://sapgc.wisys.com.sa:50000/b1s/v1/$metadata#Items', 'value': []}, 'status': 'success'}
2025-06-30 15:13:31,591 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'Items', 'request': {'method': 'GET', 'url': 'https://sapgc.wisys.com.sa:50000/b1s/v1/Items', 'data': None, 'params': {'$orderby': 'ItemCode desc', '$top': 3}}, 'response': None, 'status': None}
2025-06-30 15:41:47,682 - sync_service - INFO - Starting new items sync from SAP to Shopify
2025-06-30 15:41:47,684 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'login', 'request': {'company': 'GREENS_TEST', 'user': 'RPRO'}, 'response': None, 'status': None}
2025-06-30 15:41:49,885 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'login', 'request': None, 'response': {'status': 'success'}, 'status': 'success'}
2025-06-30 15:41:49,885 - sync_service - INFO - SAP login successful
2025-06-30 15:41:49,893 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'sml.svc/NEW_ITEMS?$orderby=ItemCode', 'request': {'method': 'GET', 'url': 'https://sapgc.wisys.com.sa:50000/b1s/v1/sml.svc/NEW_ITEMS?$orderby=ItemCode', 'data': None, 'params': None}, 'response': None, 'status': None}
2025-06-30 15:41:51,381 - sync_service - INFO - Retrieved 1 new items from SAP
2025-06-30 15:41:51,381 - sync_service - INFO - Processing SAP item: 10101010101010
2025-06-30 15:41:51,382 - sync_service - INFO - API Call: {'service': 'shopify', 'endpoint': 'graphql', 'request': {'query': '\n            mutation productCreate($input: ProductInput!) {\n                productCreate(input: $input) {\n                    product {\n                        id\n                        title\n                        handle\n                        variants(first: 1) {\n                            edges {\n                                node {\n                                    id\n                                    sku\n                                    inventoryItem {\n                                        id\n                                    }\n                                }\n                            }\n                        }\n                    }\n                    userErrors {\n                        field\n                        message\n                    }\n                }\n            }\n            ', 'variables': {'input': {'title': 'PROFESSIONAL HOT WATR BAG 27791111', 'descriptionHtml': '', 'vendor': 'PROFESSIONAL HOT WATER BAG 2779', 'productType': 'Default', 'status': 'DRAFT', 'tags': ['Brand:PROFESSIONAL', 'U_Size:1', 'U_Attribute:BAG'], 'variants': [{'sku': '10101010101010', 'price': '0.0', 'inventoryPolicy': 'DENY', 'inventoryManagement': 'SHOPIFY', 'inventoryQuantities': [{'availableQuantity': 0, 'locationId': 'gid://shopify/Location/1'}], 'weight': 0.0, 'weightUnit': 'KILOGRAMS'}], 'seo': {'title': 'PROFESSIONAL HOT WATR BAG 27791111', 'description': ''}}}}, 'response': None, 'status': None}
2025-06-30 15:41:52,719 - sync_service - INFO - API Call: {'service': 'shopify', 'endpoint': 'graphql', 'request': None, 'response': {'productCreate': {'product': None, 'userErrors': [{'field': ['variants', '0', 'inventoryQuantities'], 'message': "The quantity couldn't be set because the location was deleted."}]}}, 'status': 'success'}
2025-06-30 15:41:52,719 - sync_service - ERROR - Failed to create product in Shopify: The quantity couldn't be set because the location was deleted.
2025-06-30 15:41:52,719 - sync_service - INFO - Sync Event: {'sync_type': 'new_items_sap_to_shopify', 'items_processed': 0, 'success_count': 0, 'error_count': 1, 'details': None}
2025-06-30 15:41:52,719 - sync_service - INFO - New items sync completed: 0 processed, 0 successful, 1 errors
2025-06-30 15:42:19,041 - sync_service - INFO - API Call: {'service': 'shopify', 'endpoint': 'graphql', 'request': {'query': '\n        query {\n            locations(first: 10) {\n                edges {\n                    node {\n                        id\n                        name\n                        address {\n                            address1\n                            city\n                            country\n                        }\n                        isActive\n                    }\n                }\n            }\n        }\n        ', 'variables': None}, 'response': None, 'status': None}
2025-06-30 15:42:19,636 - sync_service - INFO - API Call: {'service': 'shopify', 'endpoint': 'graphql', 'request': None, 'response': {'locations': {'edges': [{'node': {'id': 'gid://shopify/Location/76913967258', 'name': 'Alexandria Warehouse', 'address': {'address1': 'Hatem Mosque', 'city': 'Sidi Gaber', 'country': 'Egypt'}, 'isActive': True}}, {'node': {'id': 'gid://shopify/Location/76072616090', 'name': 'Mivida Greens 6 (Parcel 22)', 'address': {'address1': 'Mivida Greens 6 (Parcel 22)', 'city': 'New Cairo 1', 'country': 'Egypt'}, 'isActive': True}}, {'node': {'id': 'gid://shopify/Location/76914000026', 'name': 'Mokattam Warehouse', 'address': {'address1': 'Mokattam', 'city': 'El Mokattam', 'country': 'Egypt'}, 'isActive': True}}, {'node': {'id': 'gid://shopify/Location/76914032794', 'name': 'Physical Warehouse', 'address': {'address1': 'bosta', 'city': 'Dar El Salam', 'country': 'Egypt'}, 'isActive': True}}]}}, 'status': 'success'}
2025-06-30 15:42:56,594 - sync_service - INFO - Starting new items sync from SAP to Shopify
2025-06-30 15:42:56,594 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'login', 'request': {'company': 'GREENS_TEST', 'user': 'RPRO'}, 'response': None, 'status': None}
2025-06-30 15:42:57,982 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'login', 'request': None, 'response': {'status': 'success'}, 'status': 'success'}
2025-06-30 15:42:57,986 - sync_service - INFO - SAP login successful
2025-06-30 15:42:57,989 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'sml.svc/NEW_ITEMS?$orderby=ItemCode', 'request': {'method': 'GET', 'url': 'https://sapgc.wisys.com.sa:50000/b1s/v1/sml.svc/NEW_ITEMS?$orderby=ItemCode', 'data': None, 'params': None}, 'response': None, 'status': None}
2025-06-30 15:42:59,790 - sync_service - INFO - Retrieved 1 new items from SAP
2025-06-30 15:42:59,790 - sync_service - INFO - Processing SAP item: 10101010101010
2025-06-30 15:42:59,792 - sync_service - INFO - API Call: {'service': 'shopify', 'endpoint': 'graphql', 'request': {'query': '\n            mutation productCreate($input: ProductInput!) {\n                productCreate(input: $input) {\n                    product {\n                        id\n                        title\n                        handle\n                        variants(first: 1) {\n                            edges {\n                                node {\n                                    id\n                                    sku\n                                    inventoryItem {\n                                        id\n                                    }\n                                }\n                            }\n                        }\n                    }\n                    userErrors {\n                        field\n                        message\n                    }\n                }\n            }\n            ', 'variables': {'input': {'title': 'PROFESSIONAL HOT WATR BAG 27791111', 'descriptionHtml': '', 'vendor': 'PROFESSIONAL HOT WATER BAG 2779', 'productType': 'Default', 'status': 'DRAFT', 'tags': ['Brand:PROFESSIONAL', 'U_Size:1', 'U_Attribute:BAG'], 'variants': [{'sku': '10101010101010', 'price': '0.0', 'inventoryPolicy': 'DENY', 'inventoryManagement': 'SHOPIFY', 'inventoryQuantities': [{'availableQuantity': 0, 'locationId': 'gid://shopify/Location/76913967258'}], 'weight': 0.0, 'weightUnit': 'KILOGRAMS'}], 'seo': {'title': 'PROFESSIONAL HOT WATR BAG 27791111', 'description': ''}}}}, 'response': None, 'status': None}
2025-06-30 15:43:00,794 - sync_service - INFO - API Call: {'service': 'shopify', 'endpoint': 'graphql', 'request': None, 'response': {'productCreate': {'product': {'id': 'gid://shopify/Product/8542831149210', 'title': 'PROFESSIONAL HOT WATR BAG 27791111', 'handle': 'professional-hot-watr-bag-27791111', 'variants': {'edges': [{'node': {'id': 'gid://shopify/ProductVariant/45902873198746', 'sku': '10101010101010', 'inventoryItem': {'id': 'gid://shopify/InventoryItem/47875014099098'}}}]}}, 'userErrors': []}}, 'status': 'success'}
2025-06-30 15:43:00,794 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': "Items('10101010101010')", 'request': {'method': 'PATCH', 'url': "https://sapgc.wisys.com.sa:50000/b1s/v1/Items('10101010101010')", 'data': {'U_Main_SID': '8542831149210', 'U_Price_SID': '45902873198746', 'U_Extend_SID': '47875014099098', 'U_SyncDT': 1612643.25, 'U_SyncTime': 'SYNCED'}, 'params': None}, 'response': None, 'status': None}
2025-06-30 15:43:02,728 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': "Items('10101010101010')", 'request': None, 'response': {'status_code': 400, 'text': '{\n   "error" : {\n      "code" : -1,\n      "message" : {\n         "lang" : "en-us",\n         "value" : "16126403 is a bad date in property U_SyncDT"\n      }\n   }\n}\n'}, 'status': 'failure'}
2025-06-30 15:43:02,728 - sync_service - ERROR - Failed to update SAP item 10101010101010: HTTP 400: {
   "error" : {
      "code" : -1,
      "message" : {
         "lang" : "en-us",
         "value" : "16126403 is a bad date in property U_SyncDT"
      }
   }
}

2025-06-30 15:43:02,731 - sync_service - ERROR - Failed to update SAP with Shopify ID: HTTP 400: {
   "error" : {
      "code" : -1,
      "message" : {
         "lang" : "en-us",
         "value" : "16126403 is a bad date in property U_SyncDT"
      }
   }
}

2025-06-30 15:43:02,732 - sync_service - INFO - Successfully synced item 10101010101010 to Shopify
2025-06-30 15:43:03,251 - sync_service - INFO - Sync Event: {'sync_type': 'new_items_sap_to_shopify', 'items_processed': 1, 'success_count': 1, 'error_count': 0, 'details': None}
2025-06-30 15:43:03,253 - sync_service - INFO - New items sync completed: 1 processed, 1 successful, 0 errors
2025-06-30 16:16:50,650 - sync_service - INFO - Initialized Shopify client for store: Local Store (local)
2025-06-30 16:16:50,672 - sync_service - INFO - API Call: {'service': 'shopify', 'endpoint': 'graphql_local', 'request': {'query': '\n        query {\n            locations(first: 10) {\n                edges {\n                    node {\n                        id\n                        name\n                        address {\n                            address1\n                            city\n                            country\n                        }\n                        isActive\n                    }\n                }\n            }\n        }\n        ', 'variables': None}, 'response': None, 'status': None}
2025-06-30 16:16:51,291 - sync_service - INFO - API Call: {'service': 'shopify', 'endpoint': 'graphql_local', 'request': None, 'response': {'locations': {'edges': [{'node': {'id': 'gid://shopify/Location/76913967258', 'name': 'Alexandria Warehouse', 'address': {'address1': 'Hatem Mosque', 'city': 'Sidi Gaber', 'country': 'Egypt'}, 'isActive': True}}, {'node': {'id': 'gid://shopify/Location/76072616090', 'name': 'Mivida Greens 6 (Parcel 22)', 'address': {'address1': 'Mivida Greens 6 (Parcel 22)', 'city': 'New Cairo 1', 'country': 'Egypt'}, 'isActive': True}}, {'node': {'id': 'gid://shopify/Location/76914000026', 'name': 'Mokattam Warehouse', 'address': {'address1': 'Mokattam', 'city': 'El Mokattam', 'country': 'Egypt'}, 'isActive': True}}, {'node': {'id': 'gid://shopify/Location/76914032794', 'name': 'Physical Warehouse', 'address': {'address1': 'bosta', 'city': 'Dar El Salam', 'country': 'Egypt'}, 'isActive': True}}]}}, 'status': 'success'}
2025-06-30 16:16:52,122 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'login', 'request': {'company': 'GREENS_TEST', 'user': 'RPRO'}, 'response': None, 'status': None}
2025-06-30 16:16:53,822 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'login', 'request': None, 'response': {'status': 'success'}, 'status': 'success'}
2025-06-30 16:16:53,822 - sync_service - INFO - SAP login successful
2025-06-30 16:16:53,822 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'sml.svc/NEW_ITEMS?$orderby=ItemCode', 'request': {'method': 'GET', 'url': 'https://sapgc.wisys.com.sa:50000/b1s/v1/sml.svc/NEW_ITEMS?$orderby=ItemCode', 'data': None, 'params': None}, 'response': None, 'status': None}
2025-06-30 16:17:23,806 - sync_service - INFO - Initialized Shopify client for store: Local Store (local)
2025-06-30 16:17:23,806 - sync_service - INFO - Starting multi-store new items sync from SAP to Shopify
2025-06-30 16:17:23,822 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'login', 'request': {'company': 'GREENS_TEST', 'user': 'RPRO'}, 'response': None, 'status': None}
2025-06-30 16:17:25,185 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'login', 'request': None, 'response': {'status': 'success'}, 'status': 'success'}
2025-06-30 16:17:25,186 - sync_service - INFO - SAP login successful
2025-06-30 16:17:25,190 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'sml.svc/NEW_ITEMS?$orderby=ItemCode', 'request': {'method': 'GET', 'url': 'https://sapgc.wisys.com.sa:50000/b1s/v1/sml.svc/NEW_ITEMS?$orderby=ItemCode', 'data': None, 'params': None}, 'response': None, 'status': None}
2025-06-30 16:17:26,582 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'sml.svc/NEW_ITEMS?$orderby=ItemCode', 'request': None, 'response': {'@odata.context': 'https://sapgc.wisys.com.sa:50000/b1s/v1/sml.svc/$metadata#NEW_ITEMS', 'value': [{'ItemCode': '10101010101010', 'ItemName': 'PROFESSIONAL HOT WATR BAG 27791111', 'FrgnName': 'بروفيشنال قربة ماء حار 2779', 'Price': 29.58, 'ReportCode': '729807766000157645', 'SerialType': 0, 'BatchType': 4, 'InvntItem': 'Y', 'BP_SID': '594556761000118648', 'DCS_SID': '616144142000124886', 'U_Text1': 'PROFESSIONAL HOT WATER BAG 2779', 'U_Text3': 'بروفيشنال قربة ماء حار 2779', 'U_Size': '1', 'U_Attribute': 'BAG', 'U_Color': None, 'U_Flavor': None, 'U_Count': None, 'U_PackSize': None, 'U_Concentration': None, 'U_TargetHairType': 'UPDATE', 'U_TargetSkinType': None, 'U_Scent': None, 'U_Productfunction': None, 'U_ProductIngredient': None, 'U_BRND': 'PROFESSIONAL', 'Barcode': '', 'id__': 1}]}, 'status': 'success'}
2025-06-30 16:17:26,590 - sync_service - INFO - Retrieved 1 new items from SAP
2025-06-30 16:17:26,593 - sync_service - INFO - Processing SAP item: 10101010101010
2025-06-30 16:17:26,593 - sync_service - INFO - Creating product in store: Local Store
2025-06-30 16:17:26,594 - sync_service - INFO - API Call: {'service': 'shopify', 'endpoint': 'graphql_local', 'request': {'query': '\n        mutation productCreate($input: ProductInput!) {\n            productCreate(input: $input) {\n                product {\n                    id\n                    title\n                    handle\n                    variants(first: 1) {\n                        edges {\n                            node {\n                                id\n                                sku\n                                inventoryItem {\n                                    id\n                                }\n                            }\n                        }\n                    }\n                }\n                userErrors {\n                    field\n                    message\n                }\n            }\n        }\n        ', 'variables': {'input': {'title': 'PROFESSIONAL HOT WATR BAG 27791111', 'descriptionHtml': '', 'vendor': 'PROFESSIONAL HOT WATER BAG 2779', 'productType': 'Default', 'status': 'DRAFT', 'tags': ['Brand:PROFESSIONAL', 'U_Size:1', 'U_Attribute:BAG'], 'variants': [{'sku': '10101010101010', 'price': '0.0', 'inventoryPolicy': 'DENY', 'inventoryManagement': 'SHOPIFY', 'inventoryQuantities': [{'availableQuantity': 0, 'locationId': 'gid://shopify/Location/76913967258'}], 'weight': 0.0, 'weightUnit': 'KILOGRAMS'}], 'seo': {'title': 'PROFESSIONAL HOT WATR BAG 27791111', 'description': ''}}}}, 'response': None, 'status': None}
2025-06-30 16:17:27,549 - sync_service - INFO - API Call: {'service': 'shopify', 'endpoint': 'graphql_local', 'request': None, 'response': {'productCreate': {'product': {'id': 'gid://shopify/Product/8542859952282', 'title': 'PROFESSIONAL HOT WATR BAG 27791111', 'handle': 'professional-hot-watr-bag-27791111', 'variants': {'edges': [{'node': {'id': 'gid://shopify/ProductVariant/45902952595610', 'sku': '10101010101010', 'inventoryItem': {'id': 'gid://shopify/InventoryItem/47875093659802'}}}]}}, 'userErrors': []}}, 'status': 'success'}
2025-06-30 16:17:27,549 - sync_service - INFO - Successfully created product in store local
2025-06-30 16:17:27,549 - sync_service - ERROR - Error updating SAP with Shopify IDs: 'data'
2025-06-30 16:17:27,551 - sync_service - ERROR - Failed to update SAP with Shopify IDs: 'data'
2025-06-30 16:17:27,552 - sync_service - INFO - Successfully synced item 10101010101010 to all stores
2025-06-30 16:17:28,056 - sync_service - INFO - Sync Event: {'sync_type': 'multi_store_new_items_sap_to_shopify', 'items_processed': 1, 'success_count': 1, 'error_count': 0, 'details': None}
2025-06-30 16:17:28,059 - sync_service - INFO - Multi-store new items sync completed: 1 processed, 1 successful, 0 errors
2025-06-30 16:18:49,965 - sync_service - INFO - Initialized Shopify client for store: Local Store (local)
2025-06-30 16:18:49,969 - sync_service - INFO - Starting multi-store new items sync from SAP to Shopify
2025-06-30 16:18:49,972 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'login', 'request': {'company': 'GREENS_TEST', 'user': 'RPRO'}, 'response': None, 'status': None}
2025-06-30 16:18:51,357 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'login', 'request': None, 'response': {'status': 'success'}, 'status': 'success'}
2025-06-30 16:18:51,360 - sync_service - INFO - SAP login successful
2025-06-30 16:18:51,362 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'sml.svc/NEW_ITEMS?$orderby=ItemCode', 'request': {'method': 'GET', 'url': 'https://sapgc.wisys.com.sa:50000/b1s/v1/sml.svc/NEW_ITEMS?$orderby=ItemCode', 'data': None, 'params': None}, 'response': None, 'status': None}
2025-06-30 16:18:52,840 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'sml.svc/NEW_ITEMS?$orderby=ItemCode', 'request': None, 'response': {'@odata.context': 'https://sapgc.wisys.com.sa:50000/b1s/v1/sml.svc/$metadata#NEW_ITEMS', 'value': [{'ItemCode': '10101010101010', 'ItemName': 'PROFESSIONAL HOT WATR BAG 27791111', 'FrgnName': 'بروفيشنال قربة ماء حار 2779', 'Price': 29.58, 'ReportCode': '729807766000157645', 'SerialType': 0, 'BatchType': 4, 'InvntItem': 'Y', 'BP_SID': '594556761000118648', 'DCS_SID': '616144142000124886', 'U_Text1': 'PROFESSIONAL HOT WATER BAG 2779', 'U_Text3': 'بروفيشنال قربة ماء حار 2779', 'U_Size': '1', 'U_Attribute': 'BAG', 'U_Color': None, 'U_Flavor': None, 'U_Count': None, 'U_PackSize': None, 'U_Concentration': None, 'U_TargetHairType': 'UPDATE', 'U_TargetSkinType': None, 'U_Scent': None, 'U_Productfunction': None, 'U_ProductIngredient': None, 'U_BRND': 'PROFESSIONAL', 'Barcode': '', 'id__': 1}]}, 'status': 'success'}
2025-06-30 16:18:52,856 - sync_service - INFO - Retrieved 1 new items from SAP
2025-06-30 16:18:52,856 - sync_service - INFO - Processing SAP item: 10101010101010
2025-06-30 16:18:52,856 - sync_service - INFO - Creating product in store: Local Store
2025-06-30 16:18:52,856 - sync_service - INFO - API Call: {'service': 'shopify', 'endpoint': 'graphql_local', 'request': {'query': '\n        mutation productCreate($input: ProductInput!) {\n            productCreate(input: $input) {\n                product {\n                    id\n                    title\n                    handle\n                    variants(first: 1) {\n                        edges {\n                            node {\n                                id\n                                sku\n                                inventoryItem {\n                                    id\n                                }\n                            }\n                        }\n                    }\n                }\n                userErrors {\n                    field\n                    message\n                }\n            }\n        }\n        ', 'variables': {'input': {'title': 'PROFESSIONAL HOT WATR BAG 27791111', 'descriptionHtml': '', 'vendor': 'PROFESSIONAL HOT WATER BAG 2779', 'productType': 'Default', 'status': 'DRAFT', 'tags': ['Brand:PROFESSIONAL', 'U_Size:1', 'U_Attribute:BAG'], 'variants': [{'sku': '10101010101010', 'price': '0.0', 'inventoryPolicy': 'DENY', 'inventoryManagement': 'SHOPIFY', 'inventoryQuantities': [{'availableQuantity': 0, 'locationId': 'gid://shopify/Location/76913967258'}], 'weight': 0.0, 'weightUnit': 'KILOGRAMS'}], 'seo': {'title': 'PROFESSIONAL HOT WATR BAG 27791111', 'description': ''}}}}, 'response': None, 'status': None}
2025-06-30 16:18:53,998 - sync_service - INFO - API Call: {'service': 'shopify', 'endpoint': 'graphql_local', 'request': None, 'response': {'productCreate': {'product': {'id': 'gid://shopify/Product/8542860804250', 'title': 'PROFESSIONAL HOT WATR BAG 27791111', 'handle': 'professional-hot-watr-bag-27791111', 'variants': {'edges': [{'node': {'id': 'gid://shopify/ProductVariant/45902953906330', 'sku': '10101010101010', 'inventoryItem': {'id': 'gid://shopify/InventoryItem/47875094970522'}}}]}}, 'userErrors': []}}, 'status': 'success'}
2025-06-30 16:18:53,998 - sync_service - INFO - Successfully created product in store local
2025-06-30 16:18:53,998 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': "Items('10101010101010')", 'request': {'method': 'PATCH', 'url': "https://sapgc.wisys.com.sa:50000/b1s/v1/Items('10101010101010')", 'data': {'U_SyncDT': '2025-06-30', 'U_SyncTime': 'SYNCED', 'U_LOCAL_SID': '8542860804250', 'U_LOCAL_VARIANT_SID': '45902953906330', 'U_LOCAL_INVENTORY_SID': '47875094970522'}, 'params': None}, 'response': None, 'status': None}
2025-06-30 16:18:55,608 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': "Items('10101010101010')", 'request': None, 'response': {'status_code': 400, 'text': '{\n   "error" : {\n      "code" : -1000,\n      "message" : {\n         "lang" : "en-us",\n         "value" : "Property \'U_LOCAL_INVENTORY_SID\' of \'Item\' is invalid"\n      }\n   }\n}\n'}, 'status': 'failure'}
2025-06-30 16:18:55,611 - sync_service - ERROR - Failed to update SAP item 10101010101010: HTTP 400: {
   "error" : {
      "code" : -1000,
      "message" : {
         "lang" : "en-us",
         "value" : "Property 'U_LOCAL_INVENTORY_SID' of 'Item' is invalid"
      }
   }
}

2025-06-30 16:18:55,614 - sync_service - ERROR - Failed to update SAP with Shopify IDs: HTTP 400: {
   "error" : {
      "code" : -1000,
      "message" : {
         "lang" : "en-us",
         "value" : "Property 'U_LOCAL_INVENTORY_SID' of 'Item' is invalid"
      }
   }
}

2025-06-30 16:18:55,615 - sync_service - INFO - Successfully synced item 10101010101010 to all stores
2025-06-30 16:18:56,134 - sync_service - INFO - Sync Event: {'sync_type': 'multi_store_new_items_sap_to_shopify', 'items_processed': 1, 'success_count': 1, 'error_count': 0, 'details': None}
2025-06-30 16:18:56,134 - sync_service - INFO - Multi-store new items sync completed: 1 processed, 1 successful, 0 errors
2025-06-30 16:55:11,248 - sync_service - INFO - Initialized Shopify client for store: Local Store (local)
2025-06-30 16:55:11,263 - sync_service - INFO - API Call: {'service': 'shopify', 'endpoint': 'graphql_local', 'request': {'query': '\n        query {\n            locations(first: 10) {\n                edges {\n                    node {\n                        id\n                        name\n                        address {\n                            address1\n                            city\n                            country\n                        }\n                        isActive\n                    }\n                }\n            }\n        }\n        ', 'variables': None}, 'response': None, 'status': None}
2025-06-30 16:55:11,919 - sync_service - INFO - API Call: {'service': 'shopify', 'endpoint': 'graphql_local', 'request': None, 'response': {'locations': {'edges': [{'node': {'id': 'gid://shopify/Location/76913967258', 'name': 'Alexandria Warehouse', 'address': {'address1': 'Hatem Mosque', 'city': 'Sidi Gaber', 'country': 'Egypt'}, 'isActive': True}}, {'node': {'id': 'gid://shopify/Location/76072616090', 'name': 'Mivida Greens 6 (Parcel 22)', 'address': {'address1': 'Mivida Greens 6 (Parcel 22)', 'city': 'New Cairo 1', 'country': 'Egypt'}, 'isActive': True}}, {'node': {'id': 'gid://shopify/Location/76914000026', 'name': 'Mokattam Warehouse', 'address': {'address1': 'Mokattam', 'city': 'El Mokattam', 'country': 'Egypt'}, 'isActive': True}}, {'node': {'id': 'gid://shopify/Location/76914032794', 'name': 'Physical Warehouse', 'address': {'address1': 'bosta', 'city': 'Dar El Salam', 'country': 'Egypt'}, 'isActive': True}}]}}, 'status': 'success'}
2025-06-30 16:55:12,598 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'login', 'request': {'company': 'GREENS_TEST', 'user': 'RPRO'}, 'response': None, 'status': None}
2025-06-30 16:55:14,167 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'login', 'request': None, 'response': {'status': 'success'}, 'status': 'success'}
2025-06-30 16:55:14,169 - sync_service - INFO - SAP login successful
2025-06-30 16:55:14,174 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'sml.svc/NEW_ITEMS?$orderby=ItemCode', 'request': {'method': 'GET', 'url': 'https://sapgc.wisys.com.sa:50000/b1s/v1/sml.svc/NEW_ITEMS?$orderby=ItemCode', 'data': None, 'params': None}, 'response': None, 'status': None}
2025-06-30 16:55:15,477 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'sml.svc/NEW_ITEMS?$orderby=ItemCode', 'request': None, 'response': {'@odata.context': 'https://sapgc.wisys.com.sa:50000/b1s/v1/sml.svc/$metadata#NEW_ITEMS', 'value': [{'ItemCode': '10101010101010', 'ItemName': 'PROFESSIONAL HOT WATR BAG 27791111', 'FrgnName': 'بروفيشنال قربة ماء حار 2779', 'Price': 29.58, 'ReportCode': '729807766000157645', 'SerialType': 0, 'BatchType': 4, 'InvntItem': 'Y', 'BP_SID': '594556761000118648', 'DCS_SID': '616144142000124886', 'U_Text1': 'PROFESSIONAL HOT WATER BAG 2779', 'U_Text3': 'بروفيشنال قربة ماء حار 2779', 'U_Size': '1', 'U_Attribute': 'BAG', 'U_Color': None, 'U_Flavor': None, 'U_Count': None, 'U_PackSize': None, 'U_Concentration': None, 'U_TargetHairType': 'UPDATE', 'U_TargetSkinType': None, 'U_Scent': None, 'U_Productfunction': None, 'U_ProductIngredient': None, 'U_BRND': 'PROFESSIONAL', 'Barcode': '', 'id__': 1}]}, 'status': 'success'}
2025-07-02 14:57:18,178 - sync_service - INFO - Initialized Shopify client for store: Local Store (local)
2025-07-02 14:57:18,180 - sync_service - INFO - API Call: {'service': 'shopify', 'endpoint': 'graphql_local', 'request': {'query': '\n        query {\n            locations(first: 10) {\n                edges {\n                    node {\n                        id\n                        name\n                        address {\n                            address1\n                            city\n                            country\n                        }\n                        isActive\n                    }\n                }\n            }\n        }\n        ', 'variables': None}, 'response': None, 'status': None}
2025-07-02 14:57:19,213 - sync_service - INFO - API Call: {'service': 'shopify', 'endpoint': 'graphql_local', 'request': None, 'response': {'locations': {'edges': [{'node': {'id': 'gid://shopify/Location/70074892354', 'name': '5A by The Waterway Store', 'address': {'address1': '5A by The Waterway Developments', 'city': 'New Cairo 1', 'country': 'Egypt'}, 'isActive': True}}, {'node': {'id': 'gid://shopify/Location/70074957890', 'name': 'Arkan Store', 'address': {'address1': 'Arkan', 'city': 'First Al Sheikh Zayed', 'country': 'Egypt'}, 'isActive': True}}, {'node': {'id': 'gid://shopify/Location/68605345858', 'name': 'Cairo', 'address': {'address1': '00', 'city': 'Cairo', 'country': 'Egypt'}, 'isActive': True}}, {'node': {'id': 'gid://shopify/Location/70074990658', 'name': 'Zamalek Store', 'address': {'address1': 'Degla Center', 'city': 'Zamalek', 'country': 'Egypt'}, 'isActive': True}}]}}, 'status': 'success'}
2025-07-02 14:57:19,221 - sync_service - INFO - API Call: {'service': 'shopify', 'endpoint': 'graphql_local', 'request': {'query': '\n        query GetProducts($first: Int!, $after: String) {\n            products(first: $first, after: $after) {\n                pageInfo {\n                    hasNextPage\n                    endCursor\n                }\n                edges {\n                    node {\n                        id\n                        title\n                        handle\n                        description\n                        variants(first: 1) {\n                            edges {\n                                node {\n                                    id\n                                    sku\n                                    price\n                                    inventoryQuantity\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n        }\n        ', 'variables': {'first': 10, 'after': None}}, 'response': None, 'status': None}
2025-07-02 14:57:19,853 - sync_service - INFO - API Call: {'service': 'shopify', 'endpoint': 'graphql_local', 'request': None, 'response': {'products': {'pageInfo': {'hasNextPage': True, 'endCursor': 'eyJsYXN0X2lkIjo3NDQyMDIyNjYyMjEwLCJsYXN0X3ZhbHVlIjoiNzQ0MjAyMjY2MjIxMCJ9'}, 'edges': [{'node': {'id': 'gid://shopify/Product/7442022170690', 'title': 'Sulla Luna Earrings', 'handle': 'sulla-luna-earrings', 'description': 'Inspired by ancient Etruscan art, the Sulla Luna earrings feature a fan with cut-out triangular spirals hung from a gold-plated ornamental hook. These lightweight earrings are a go-to everyday accessory.', 'variants': {'edges': [{'node': {'id': 'gid://shopify/ProductVariant/42003146211394', 'sku': 'FG-0000075', 'price': '4800.00', 'inventoryQuantity': 0}}]}}}, {'node': {'id': 'gid://shopify/Product/7442022203458', 'title': 'Sulla Luna Mix Earrings', 'handle': 'sulla-luna-mix-earrings', 'description': 'Inspired by ancient Etruscan art, the Sulla Luna Mix earrings feature a decorated silver hook and a gold-plated silver fan that suspends from it. The fan is an elegant sheet that presents cut-out triangular spirals. These lightweight earrings are a go-to pair.', 'variants': {'edges': [{'node': {'id': 'gid://shopify/ProductVariant/42003146276930', 'sku': 'FG-0000077', 'price': '7300.00', 'inventoryQuantity': 0}}]}}}, {'node': {'id': 'gid://shopify/Product/7442022301762', 'title': 'Lima Lima Bracelet', 'handle': 'lima-lima-bracelet', 'description': "The Lima Lima bracelet features silver and gold-plated irregular scales with cutout detailing to mimic the sea coral's irregular textures.", 'variants': {'edges': [{'node': {'id': 'gid://shopify/ProductVariant/42003146342466', 'sku': 'FG-0000014', 'price': '6800.00', 'inventoryQuantity': 0}}]}}}, {'node': {'id': 'gid://shopify/Product/7442022334530', 'title': 'Harmonia Hoop', 'handle': 'harmonia-hoop', 'description': 'The Harmonia Hoop features three hoops bonded at their top with a granulated silver hoop in the middle. On either side rest polished gold hoops that are irregularly shaped. Inspired by the duality of the journey of love, the Harmonia Hoops fuse texture and smoothness with mixed metals to show how opposing forces can come together in blissful harmony.', 'variants': {'edges': [{'node': {'id': 'gid://shopify/ProductVariant/42003146408002', 'sku': 'FG-0000225', 'price': '8800.00', 'inventoryQuantity': 4}}]}}}, {'node': {'id': 'gid://shopify/Product/7442022432834', 'title': 'Harmonia Cuff', 'handle': 'harmonia-cuff', 'description': 'Mixed metal cuff is hand-shaped to twist into a curved shape, where the two ends are mirrored, but never meet. The Harmonia Cuff, with a hinged back, features a granulated silver layer which is accentuated with a gold extension that presents fluid linear cut-outs.', 'variants': {'edges': [{'node': {'id': 'gid://shopify/ProductVariant/42003146440770', 'sku': 'FG-0000280', 'price': '15000.00', 'inventoryQuantity': 0}}]}}}, {'node': {'id': 'gid://shopify/Product/7442022498370', 'title': 'Medusa Bracelet', 'handle': 'medusa-bracelet', 'description': "The Medusa Bracelet decorates the wrist with its ornate spirals. Boasting a dramatic granulated texture that offsets the polished half of the bracelet. Merging tight and fluid curves and textural elements, the Medusa Bracelet is a spell-casting piece that represents the paradox of Medusa's journey.", 'variants': {'edges': [{'node': {'id': 'gid://shopify/ProductVariant/42003146506306', 'sku': 'FG-0000287', 'price': '4300.00', 'inventoryQuantity': 0}}]}}}, {'node': {'id': 'gid://shopify/Product/7442022531138', 'title': 'Hera Earrings', 'handle': 'hera-earrings', 'description': 'Channeling the power of feminine energy, the Hera Earrings form an irregular hoop that hangs into an asymmetrical shape, held proudly by a domed stud.The innermost layer is encrusted with a granulated surface that symbolizes charged energy which accents the polished surfaces, representing the duality of women as both powerful and gentle.', 'variants': {'edges': [{'node': {'id': 'gid://shopify/ProductVariant/42003146539074', 'sku': 'FG-0000267', 'price': '4900.00', 'inventoryQuantity': 0}}]}}}, {'node': {'id': 'gid://shopify/Product/7442022563906', 'title': 'Thea Necklace', 'handle': 'thea-necklace', 'description': 'Harnessing goddess energy, the Thea Necklace is formed with crescent scales attached together, accentuated with slender hand-crafted spirals that add an airiness to the structured scales. Including an adjustable chain and hook closure, the Thea Necklace can be worn as a statement or a stacked piece.', 'variants': {'edges': [{'node': {'id': 'gid://shopify/ProductVariant/42003146571842', 'sku': 'FG-0000224', 'price': '6200.00', 'inventoryQuantity': 0}}]}}}, {'node': {'id': 'gid://shopify/Product/7442022629442', 'title': 'Thalia Necklace', 'handle': 'thalia-necklace', 'description': 'A distinct hook brings the two contrasting halves together, forming an adjustable Y-shaped necklace with a dangling, uniquely shaped pearl. The Thalia Necklace, named after the Greek Muse of youth and beauty, rejoices in its own darling silhouette that joins smoothness, roughness, structure, fluidity, strength, and preciosity together.', 'variants': {'edges': [{'node': {'id': 'gid://shopify/ProductVariant/42003146637378', 'sku': 'FG-0000223', 'price': '6200.00', 'inventoryQuantity': 0}}]}}}, {'node': {'id': 'gid://shopify/Product/7442022662210', 'title': 'Medusa Earrings', 'handle': 'medusa-earrings', 'description': 'The Medusa Earring is a slender silver spiral that traces the shape of the ear. Hung gracefully from the spiral is a medley of miniature, mismatched gold-plated charms engraved with spirals and irregular lines. Granules accentuate the spiral for a touch of edginess. These earrings are just as music is to the ears: an orchestra of shapes, fine details and playfulness.', 'variants': {'edges': [{'node': {'id': 'gid://shopify/ProductVariant/42003146670146', 'sku': 'FG-0000344', 'price': '7500.00', 'inventoryQuantity': 0}}]}}}]}}, 'status': 'success'}
2025-07-02 14:57:19,880 - sync_service - INFO - API Call: {'service': 'shopify', 'endpoint': 'graphql_local', 'request': {'query': '\n        query GetProducts($first: Int!, $after: String) {\n            products(first: $first, after: $after) {\n                pageInfo {\n                    hasNextPage\n                    endCursor\n                }\n                edges {\n                    node {\n                        id\n                        title\n                        handle\n                        description\n                        variants(first: 1) {\n                            edges {\n                                node {\n                                    id\n                                    sku\n                                    price\n                                    inventoryQuantity\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n        }\n        ', 'variables': {'first': 1, 'after': None}}, 'response': None, 'status': None}
2025-07-02 14:57:20,626 - sync_service - INFO - API Call: {'service': 'shopify', 'endpoint': 'graphql_local', 'request': None, 'response': {'products': {'pageInfo': {'hasNextPage': True, 'endCursor': 'eyJsYXN0X2lkIjo3NDQyMDIyMTcwNjkwLCJsYXN0X3ZhbHVlIjoiNzQ0MjAyMjE3MDY5MCJ9'}, 'edges': [{'node': {'id': 'gid://shopify/Product/7442022170690', 'title': 'Sulla Luna Earrings', 'handle': 'sulla-luna-earrings', 'description': 'Inspired by ancient Etruscan art, the Sulla Luna earrings feature a fan with cut-out triangular spirals hung from a gold-plated ornamental hook. These lightweight earrings are a go-to everyday accessory.', 'variants': {'edges': [{'node': {'id': 'gid://shopify/ProductVariant/42003146211394', 'sku': 'FG-0000075', 'price': '4800.00', 'inventoryQuantity': 0}}]}}}]}}, 'status': 'success'}
2025-07-02 14:57:21,518 - sync_service - INFO - API Call: {'service': 'shopify', 'endpoint': 'graphql_local', 'request': {'query': '\n            query GetProductBySku($sku: String!) {\n                products(first: 1, query: $sku) {\n                    edges {\n                        node {\n                            id\n                            title\n                            variants(first: 1) {\n                                edges {\n                                    node {\n                                        sku\n                                    }\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n            ', 'variables': {'sku': 'sku:FG-0000075'}}, 'response': None, 'status': None}
2025-07-02 14:57:22,058 - sync_service - INFO - API Call: {'service': 'shopify', 'endpoint': 'graphql_local', 'request': None, 'response': {'products': {'edges': [{'node': {'id': 'gid://shopify/Product/7442022170690', 'title': 'Sulla Luna Earrings', 'variants': {'edges': [{'node': {'sku': 'FG-0000075'}}]}}}]}}, 'status': 'success'}
2025-07-08 23:38:48,034 - sync_service - INFO - Initialized Shopify client for store: Local Store (local)
2025-07-08 23:38:55,534 - sync_service - INFO - Initialized Shopify client for store: Local Store (local)
2025-07-08 23:41:22,046 - sync_service - INFO - Initialized Shopify client for store: Local Store (local)
2025-07-08 23:41:22,695 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'login', 'request': {'company': 'JudeBenHalim_Test', 'user': 'manager'}, 'response': None, 'status': None}
2025-07-08 23:41:23,311 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'login', 'request': None, 'response': {'status': 'success'}, 'status': 'success'}
2025-07-08 23:41:23,312 - sync_service - INFO - SAP login successful
2025-07-08 23:41:23,314 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'view.svc/MASHURA_New_ItemsB1SLQuery', 'request': {'method': 'GET', 'url': 'https://10.0.0.100:50000/b1s/v1/view.svc/MASHURA_New_ItemsB1SLQuery', 'data': None, 'params': None}, 'response': None, 'status': None}
2025-07-08 23:41:23,474 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'view.svc/MASHURA_New_ItemsB1SLQuery', 'request': None, 'response': {'odata.metadata': 'https://10.0.0.100:50000/b1s/v1/view.svc/$metadata#MASHURA_New_ItemsB1SLQuery', 'value': [{'itemcode': 'FG-0000701', 'ItemName': 'Morsi-Black-Gold', 'MainProduct': 'Morsi Necklace', 'Color': 'Black Gold', 'OnHand': 10.0, 'IsCommited': 0.0, 'Available': 10.0, 'Price': 2500.0, 'Status': 'new', 'Shopify_ProductCode': '', 'Shopify_Store': 'local', 'id__': 1}, {'itemcode': 'FG-0000702', 'ItemName': 'Morsi-Rose-Gold', 'MainProduct': 'Morsi Necklace', 'Color': 'Rose Gold', 'OnHand': 15.0, 'IsCommited': 0.0, 'Available': 15.0, 'Price': 2500.0, 'Status': 'new', 'Shopify_ProductCode': '', 'Shopify_Store': 'local', 'id__': 2}, {'itemcode': 'FG-0000703', 'ItemName': 'Morsi-White-Gold', 'MainProduct': 'Morsi Necklace', 'Color': 'White Gold', 'OnHand': 20.0, 'IsCommited': 0.0, 'Available': 20.0, 'Price': 2500.0, 'Status': 'new', 'Shopify_ProductCode': '', 'Shopify_Store': 'local', 'id__': 3}, {'itemcode': 'FG-0000701', 'ItemName': 'Morsi-Black-Gold', 'MainProduct': 'Morsi Necklace', 'Color': 'Black Gold', 'OnHand': 10.0, 'IsCommited': 0.0, 'Available': 10.0, 'Price': 3500.0, 'Status': 'new', 'Shopify_ProductCode': '', 'Shopify_Store': 'international', 'id__': 4}, {'itemcode': 'FG-0000702', 'ItemName': 'Morsi-Rose-Gold', 'MainProduct': 'Morsi Necklace', 'Color': 'Rose Gold', 'OnHand': 15.0, 'IsCommited': 0.0, 'Available': 15.0, 'Price': 3500.0, 'Status': 'new', 'Shopify_ProductCode': '', 'Shopify_Store': 'international', 'id__': 5}, {'itemcode': 'FG-0000703', 'ItemName': 'Morsi-White-Gold', 'MainProduct': 'Morsi Necklace', 'Color': 'White Gold', 'OnHand': 20.0, 'IsCommited': 0.0, 'Available': 20.0, 'Price': 3500.0, 'Status': 'new', 'Shopify_ProductCode': '', 'Shopify_Store': 'international', 'id__': 6}]}, 'status': 'success'}
2025-07-08 23:41:23,478 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': "view.svc/MASHURA_New_ItemsB1SLQuery?$filter=Shopify_Store eq 'local'&$orderby=MainProduct", 'request': {'method': 'GET', 'url': "https://10.0.0.100:50000/b1s/v1/view.svc/MASHURA_New_ItemsB1SLQuery?$filter=Shopify_Store eq 'local'&$orderby=MainProduct", 'data': None, 'params': None}, 'response': None, 'status': None}
2025-07-08 23:41:23,618 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': "view.svc/MASHURA_New_ItemsB1SLQuery?$filter=Shopify_Store eq 'local'&$orderby=MainProduct", 'request': None, 'response': {'odata.metadata': 'https://10.0.0.100:50000/b1s/v1/view.svc/$metadata#MASHURA_New_ItemsB1SLQuery', 'value': [{'itemcode': 'FG-0000701', 'ItemName': 'Morsi-Black-Gold', 'MainProduct': 'Morsi Necklace', 'Color': 'Black Gold', 'OnHand': 10.0, 'IsCommited': 0.0, 'Available': 10.0, 'Price': 2500.0, 'Status': 'new', 'Shopify_ProductCode': '', 'Shopify_Store': 'local', 'id__': 1}, {'itemcode': 'FG-0000702', 'ItemName': 'Morsi-Rose-Gold', 'MainProduct': 'Morsi Necklace', 'Color': 'Rose Gold', 'OnHand': 15.0, 'IsCommited': 0.0, 'Available': 15.0, 'Price': 2500.0, 'Status': 'new', 'Shopify_ProductCode': '', 'Shopify_Store': 'local', 'id__': 2}, {'itemcode': 'FG-0000703', 'ItemName': 'Morsi-White-Gold', 'MainProduct': 'Morsi Necklace', 'Color': 'White Gold', 'OnHand': 20.0, 'IsCommited': 0.0, 'Available': 20.0, 'Price': 2500.0, 'Status': 'new', 'Shopify_ProductCode': '', 'Shopify_Store': 'local', 'id__': 3}]}, 'status': 'success'}
2025-07-08 23:48:34,772 - sync_service - INFO - Initialized Shopify client for store: Local Store (local)
2025-07-08 23:48:34,786 - sync_service - INFO - Starting multi-store new items sync from SAP to Shopify
2025-07-08 23:48:34,787 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'login', 'request': {'company': 'JudeBenHalim_Test', 'user': 'manager'}, 'response': None, 'status': None}
2025-07-08 23:48:35,372 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'login', 'request': None, 'response': {'status': 'success'}, 'status': 'success'}
2025-07-08 23:48:35,372 - sync_service - INFO - SAP login successful
2025-07-08 23:48:35,373 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'view.svc/MASHURA_New_ItemsB1SLQuery', 'request': {'method': 'GET', 'url': 'https://10.0.0.100:50000/b1s/v1/view.svc/MASHURA_New_ItemsB1SLQuery', 'data': None, 'params': None}, 'response': None, 'status': None}
2025-07-08 23:48:35,469 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'view.svc/MASHURA_New_ItemsB1SLQuery', 'request': None, 'response': {'odata.metadata': 'https://10.0.0.100:50000/b1s/v1/view.svc/$metadata#MASHURA_New_ItemsB1SLQuery', 'value': [{'itemcode': 'FG-0000701', 'ItemName': 'Morsi-Black-Gold', 'MainProduct': 'Morsi Necklace', 'Color': 'Black Gold', 'OnHand': 10.0, 'IsCommited': 0.0, 'Available': 10.0, 'Price': 2500.0, 'Status': 'new', 'Shopify_ProductCode': '', 'Shopify_Store': 'local', 'id__': 1}, {'itemcode': 'FG-0000702', 'ItemName': 'Morsi-Rose-Gold', 'MainProduct': 'Morsi Necklace', 'Color': 'Rose Gold', 'OnHand': 15.0, 'IsCommited': 0.0, 'Available': 15.0, 'Price': 2500.0, 'Status': 'new', 'Shopify_ProductCode': '', 'Shopify_Store': 'local', 'id__': 2}, {'itemcode': 'FG-0000703', 'ItemName': 'Morsi-White-Gold', 'MainProduct': 'Morsi Necklace', 'Color': 'White Gold', 'OnHand': 20.0, 'IsCommited': 0.0, 'Available': 20.0, 'Price': 2500.0, 'Status': 'new', 'Shopify_ProductCode': '', 'Shopify_Store': 'local', 'id__': 3}, {'itemcode': 'FG-0000701', 'ItemName': 'Morsi-Black-Gold', 'MainProduct': 'Morsi Necklace', 'Color': 'Black Gold', 'OnHand': 10.0, 'IsCommited': 0.0, 'Available': 10.0, 'Price': 3500.0, 'Status': 'new', 'Shopify_ProductCode': '', 'Shopify_Store': 'international', 'id__': 4}, {'itemcode': 'FG-0000702', 'ItemName': 'Morsi-Rose-Gold', 'MainProduct': 'Morsi Necklace', 'Color': 'Rose Gold', 'OnHand': 15.0, 'IsCommited': 0.0, 'Available': 15.0, 'Price': 3500.0, 'Status': 'new', 'Shopify_ProductCode': '', 'Shopify_Store': 'international', 'id__': 5}, {'itemcode': 'FG-0000703', 'ItemName': 'Morsi-White-Gold', 'MainProduct': 'Morsi Necklace', 'Color': 'White Gold', 'OnHand': 20.0, 'IsCommited': 0.0, 'Available': 20.0, 'Price': 3500.0, 'Status': 'new', 'Shopify_ProductCode': '', 'Shopify_Store': 'international', 'id__': 6}]}, 'status': 'success'}
2025-07-08 23:48:35,470 - sync_service - INFO - Retrieved 6 new items from SAP
2025-07-08 23:48:35,470 - sync_service - INFO - Grouped 6 items into 1 product groups
2025-07-08 23:48:35,471 - sync_service - INFO - Processing product group:  with 1 items
2025-07-08 23:48:35,471 - sync_service - INFO - Creating product in store: Local Store
2025-07-08 23:48:35,471 - sync_service - INFO - API Call: {'service': 'shopify', 'endpoint': 'graphql_local', 'request': {'query': '\n        mutation productCreate($input: ProductInput!) {\n            productCreate(input: $input) {\n                product {\n                    id\n                    title\n                    handle\n                    variants(first: 50) {\n                        edges {\n                            node {\n                                id\n                                sku\n                                inventoryItem {\n                                    id\n                                }\n                                selectedOptions {\n                                    name\n                                    value\n                                }\n                            }\n                        }\n                    }\n                }\n                userErrors {\n                    field\n                    message\n                }\n            }\n        }\n        ', 'variables': {'input': {'title': 'Morsi-Black-Gold', 'descriptionHtml': '', 'vendor': '', 'productType': 'Default', 'status': 'DRAFT', 'tags': [], 'variants': [{'sku': '', 'price': '2500.0', 'inventoryPolicy': 'DENY', 'inventoryManagement': 'SHOPIFY', 'inventoryQuantities': [{'availableQuantity': 10, 'locationId': 'gid://shopify/Location/76913967258'}], 'weight': 0.0, 'weightUnit': 'KILOGRAMS'}], 'seo': {'title': 'Morsi-Black-Gold', 'description': ''}}}}, 'response': None, 'status': None}
2025-07-08 23:48:36,150 - sync_service - INFO - API Call: {'service': 'shopify', 'endpoint': 'graphql_local', 'request': None, 'response': {'productCreate': {'product': None, 'userErrors': [{'field': ['variants', '0', 'inventoryQuantities'], 'message': "The quantity couldn't be set because the location was deleted."}]}}, 'status': 'success'}
2025-07-08 23:48:36,151 - sync_service - ERROR - Failed to create product in store local: The quantity couldn't be set because the location was deleted.
2025-07-08 23:48:36,152 - sync_service - ERROR - Failed to sync product group  to all stores
2025-07-08 23:48:36,659 - sync_service - INFO - Sync Event: {'sync_type': 'multi_store_new_items_sap_to_shopify', 'items_processed': 1, 'success_count': 0, 'error_count': 1, 'details': None}
2025-07-08 23:48:36,660 - sync_service - INFO - Multi-store new items sync completed: 1 processed, 0 successful, 1 errors
2025-07-08 23:53:16,829 - sync_service - INFO - Initialized Shopify client for store: Local Store (local)
2025-07-08 23:53:16,832 - sync_service - INFO - API Call: {'service': 'shopify', 'endpoint': 'graphql_local', 'request': {'query': '\n        query {\n            locations(first: 10) {\n                edges {\n                    node {\n                        id\n                        name\n                        address {\n                            address1\n                            city\n                            country\n                        }\n                        isActive\n                    }\n                }\n            }\n        }\n        ', 'variables': None}, 'response': None, 'status': None}
2025-07-08 23:53:17,217 - sync_service - INFO - API Call: {'service': 'shopify', 'endpoint': 'graphql_local', 'request': None, 'response': {'locations': {'edges': [{'node': {'id': 'gid://shopify/Location/70074892354', 'name': '5A by The Waterway Store', 'address': {'address1': '5A by The Waterway Developments', 'city': 'New Cairo 1', 'country': 'Egypt'}, 'isActive': True}}, {'node': {'id': 'gid://shopify/Location/70074957890', 'name': 'Arkan Store', 'address': {'address1': 'Arkan', 'city': 'First Al Sheikh Zayed', 'country': 'Egypt'}, 'isActive': True}}, {'node': {'id': 'gid://shopify/Location/68605345858', 'name': 'Cairo', 'address': {'address1': '00', 'city': 'Cairo', 'country': 'Egypt'}, 'isActive': True}}, {'node': {'id': 'gid://shopify/Location/70074990658', 'name': 'Zamalek Store', 'address': {'address1': 'Degla Center', 'city': 'Zamalek', 'country': 'Egypt'}, 'isActive': True}}]}}, 'status': 'success'}
2025-07-08 23:53:47,569 - sync_service - INFO - Initialized Shopify client for store: Local Store (local)
2025-07-08 23:53:47,582 - sync_service - INFO - Starting multi-store new items sync from SAP to Shopify
2025-07-08 23:53:47,583 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'login', 'request': {'company': 'JudeBenHalim_Test', 'user': 'manager'}, 'response': None, 'status': None}
2025-07-08 23:53:48,172 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'login', 'request': None, 'response': {'status': 'success'}, 'status': 'success'}
2025-07-08 23:53:48,173 - sync_service - INFO - SAP login successful
2025-07-08 23:53:48,174 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'view.svc/MASHURA_New_ItemsB1SLQuery', 'request': {'method': 'GET', 'url': 'https://10.0.0.100:50000/b1s/v1/view.svc/MASHURA_New_ItemsB1SLQuery', 'data': None, 'params': None}, 'response': None, 'status': None}
2025-07-08 23:53:48,276 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'view.svc/MASHURA_New_ItemsB1SLQuery', 'request': None, 'response': {'odata.metadata': 'https://10.0.0.100:50000/b1s/v1/view.svc/$metadata#MASHURA_New_ItemsB1SLQuery', 'value': [{'itemcode': 'FG-0000701', 'ItemName': 'Morsi-Black-Gold', 'MainProduct': 'Morsi Necklace', 'Color': 'Black Gold', 'OnHand': 10.0, 'IsCommited': 0.0, 'Available': 10.0, 'Price': 2500.0, 'Status': 'new', 'Shopify_ProductCode': '', 'Shopify_Store': 'local', 'id__': 1}, {'itemcode': 'FG-0000702', 'ItemName': 'Morsi-Rose-Gold', 'MainProduct': 'Morsi Necklace', 'Color': 'Rose Gold', 'OnHand': 15.0, 'IsCommited': 0.0, 'Available': 15.0, 'Price': 2500.0, 'Status': 'new', 'Shopify_ProductCode': '', 'Shopify_Store': 'local', 'id__': 2}, {'itemcode': 'FG-0000703', 'ItemName': 'Morsi-White-Gold', 'MainProduct': 'Morsi Necklace', 'Color': 'White Gold', 'OnHand': 20.0, 'IsCommited': 0.0, 'Available': 20.0, 'Price': 2500.0, 'Status': 'new', 'Shopify_ProductCode': '', 'Shopify_Store': 'local', 'id__': 3}, {'itemcode': 'FG-0000701', 'ItemName': 'Morsi-Black-Gold', 'MainProduct': 'Morsi Necklace', 'Color': 'Black Gold', 'OnHand': 10.0, 'IsCommited': 0.0, 'Available': 10.0, 'Price': 3500.0, 'Status': 'new', 'Shopify_ProductCode': '', 'Shopify_Store': 'international', 'id__': 4}, {'itemcode': 'FG-0000702', 'ItemName': 'Morsi-Rose-Gold', 'MainProduct': 'Morsi Necklace', 'Color': 'Rose Gold', 'OnHand': 15.0, 'IsCommited': 0.0, 'Available': 15.0, 'Price': 3500.0, 'Status': 'new', 'Shopify_ProductCode': '', 'Shopify_Store': 'international', 'id__': 5}, {'itemcode': 'FG-0000703', 'ItemName': 'Morsi-White-Gold', 'MainProduct': 'Morsi Necklace', 'Color': 'White Gold', 'OnHand': 20.0, 'IsCommited': 0.0, 'Available': 20.0, 'Price': 3500.0, 'Status': 'new', 'Shopify_ProductCode': '', 'Shopify_Store': 'international', 'id__': 6}]}, 'status': 'success'}
2025-07-08 23:53:48,279 - sync_service - INFO - Retrieved 6 new items from SAP
2025-07-08 23:53:48,280 - sync_service - INFO - Grouped 6 items into 1 product groups
2025-07-08 23:53:48,281 - sync_service - INFO - Processing product group:  with 1 items
2025-07-08 23:53:48,282 - sync_service - INFO - Creating product in store: Local Store
2025-07-08 23:53:48,283 - sync_service - INFO - API Call: {'service': 'shopify', 'endpoint': 'graphql_local', 'request': {'query': '\n        mutation productCreate($input: ProductInput!) {\n            productCreate(input: $input) {\n                product {\n                    id\n                    title\n                    handle\n                    variants(first: 50) {\n                        edges {\n                            node {\n                                id\n                                sku\n                                inventoryItem {\n                                    id\n                                }\n                                selectedOptions {\n                                    name\n                                    value\n                                }\n                            }\n                        }\n                    }\n                }\n                userErrors {\n                    field\n                    message\n                }\n            }\n        }\n        ', 'variables': {'input': {'title': 'Morsi-Black-Gold', 'descriptionHtml': '', 'vendor': '', 'productType': 'Default', 'status': 'DRAFT', 'tags': [], 'variants': [{'sku': '', 'price': '2500.0', 'inventoryPolicy': 'DENY', 'inventoryManagement': 'SHOPIFY', 'inventoryQuantities': [{'availableQuantity': 10, 'locationId': 'gid://shopify/Location/68605345858'}], 'weight': 0.0, 'weightUnit': 'KILOGRAMS'}], 'seo': {'title': 'Morsi-Black-Gold', 'description': ''}}}}, 'response': None, 'status': None}
2025-07-08 23:53:49,079 - sync_service - INFO - API Call: {'service': 'shopify', 'endpoint': 'graphql_local', 'request': None, 'response': {'productCreate': {'product': {'id': 'gid://shopify/Product/7510088319042', 'title': 'Morsi-Black-Gold', 'handle': 'morsi-black-gold', 'variants': {'edges': [{'node': {'id': 'gid://shopify/ProductVariant/42293279981634', 'sku': None, 'inventoryItem': {'id': 'gid://shopify/InventoryItem/44394408247362'}, 'selectedOptions': [{'name': 'Title', 'value': 'Default Title'}]}}]}}, 'userErrors': []}}, 'status': 'success'}
2025-07-08 23:53:49,080 - sync_service - INFO - Successfully created product in store local
2025-07-08 23:53:49,080 - sync_service - INFO - Successfully synced product group  to all stores
2025-07-08 23:53:49,589 - sync_service - INFO - Sync Event: {'sync_type': 'multi_store_new_items_sap_to_shopify', 'items_processed': 1, 'success_count': 1, 'error_count': 0, 'details': None}
2025-07-08 23:53:49,590 - sync_service - INFO - Multi-store new items sync completed: 1 processed, 1 successful, 0 errors
2025-07-08 23:58:32,279 - sync_service - INFO - Initialized Shopify client for store: Local Store (local)
2025-07-08 23:58:32,281 - sync_service - INFO - Starting multi-store new items sync from SAP to Shopify
2025-07-08 23:58:32,281 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'login', 'request': {'company': 'JudeBenHalim_Test', 'user': 'manager'}, 'response': None, 'status': None}
2025-07-08 23:58:33,292 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'login', 'request': None, 'response': {'status': 'success'}, 'status': 'success'}
2025-07-08 23:58:33,293 - sync_service - INFO - SAP login successful
2025-07-08 23:58:33,294 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'view.svc/MASHURA_New_ItemsB1SLQuery', 'request': {'method': 'GET', 'url': 'https://10.0.0.100:50000/b1s/v1/view.svc/MASHURA_New_ItemsB1SLQuery', 'data': None, 'params': None}, 'response': None, 'status': None}
2025-07-08 23:58:33,813 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'view.svc/MASHURA_New_ItemsB1SLQuery', 'request': None, 'response': {'odata.metadata': 'https://10.0.0.100:50000/b1s/v1/view.svc/$metadata#MASHURA_New_ItemsB1SLQuery', 'value': [{'itemcode': 'FG-0000701', 'ItemName': 'Morsi-Black-Gold', 'MainProduct': 'Morsi Necklace', 'Color': 'Black Gold', 'OnHand': 10.0, 'IsCommited': 0.0, 'Available': 10.0, 'Price': 2500.0, 'Status': 'new', 'Shopify_ProductCode': '', 'Shopify_Store': 'local', 'id__': 1}, {'itemcode': 'FG-0000702', 'ItemName': 'Morsi-Rose-Gold', 'MainProduct': 'Morsi Necklace', 'Color': 'Rose Gold', 'OnHand': 15.0, 'IsCommited': 0.0, 'Available': 15.0, 'Price': 2500.0, 'Status': 'new', 'Shopify_ProductCode': '', 'Shopify_Store': 'local', 'id__': 2}, {'itemcode': 'FG-0000703', 'ItemName': 'Morsi-White-Gold', 'MainProduct': 'Morsi Necklace', 'Color': 'White Gold', 'OnHand': 20.0, 'IsCommited': 0.0, 'Available': 20.0, 'Price': 2500.0, 'Status': 'new', 'Shopify_ProductCode': '', 'Shopify_Store': 'local', 'id__': 3}, {'itemcode': 'FG-0000701', 'ItemName': 'Morsi-Black-Gold', 'MainProduct': 'Morsi Necklace', 'Color': 'Black Gold', 'OnHand': 10.0, 'IsCommited': 0.0, 'Available': 10.0, 'Price': 3500.0, 'Status': 'new', 'Shopify_ProductCode': '', 'Shopify_Store': 'international', 'id__': 4}, {'itemcode': 'FG-0000702', 'ItemName': 'Morsi-Rose-Gold', 'MainProduct': 'Morsi Necklace', 'Color': 'Rose Gold', 'OnHand': 15.0, 'IsCommited': 0.0, 'Available': 15.0, 'Price': 3500.0, 'Status': 'new', 'Shopify_ProductCode': '', 'Shopify_Store': 'international', 'id__': 5}, {'itemcode': 'FG-0000703', 'ItemName': 'Morsi-White-Gold', 'MainProduct': 'Morsi Necklace', 'Color': 'White Gold', 'OnHand': 20.0, 'IsCommited': 0.0, 'Available': 20.0, 'Price': 3500.0, 'Status': 'new', 'Shopify_ProductCode': '', 'Shopify_Store': 'international', 'id__': 6}]}, 'status': 'success'}
2025-07-08 23:58:33,814 - sync_service - INFO - Retrieved 6 new items from SAP
2025-07-08 23:58:33,815 - sync_service - INFO - Product group: ('Morsi Necklace', 'local') has 3 items
2025-07-08 23:58:33,815 - sync_service - INFO - Product group: ('Morsi Necklace', 'international') has 3 items
2025-07-08 23:58:33,816 - sync_service - INFO - Grouped 6 items into 2 product groups
2025-07-08 23:58:33,817 - sync_service - INFO - Processing product group: ('Morsi Necklace', 'local') with 3 items
2025-07-08 23:58:33,817 - sync_service - INFO - Creating product in store: Local Store
2025-07-08 23:58:33,818 - sync_service - INFO - API Call: {'service': 'shopify', 'endpoint': 'graphql_local', 'request': {'query': '\n        mutation productCreate($input: ProductInput!) {\n            productCreate(input: $input) {\n                product {\n                    id\n                    title\n                    handle\n                    variants(first: 50) {\n                        edges {\n                            node {\n                                id\n                                sku\n                                inventoryItem {\n                                    id\n                                }\n                                selectedOptions {\n                                    name\n                                    value\n                                }\n                            }\n                        }\n                    }\n                }\n                userErrors {\n                    field\n                    message\n                }\n            }\n        }\n        ', 'variables': {'input': {'title': 'Morsi-Black-Gold', 'descriptionHtml': '', 'vendor': '', 'productType': 'Default', 'status': 'DRAFT', 'tags': [], 'options': [{'name': 'Color'}], 'variants': [{'sku': '', 'price': '2500.0', 'inventoryPolicy': 'DENY', 'inventoryManagement': 'SHOPIFY', 'inventoryQuantities': [{'availableQuantity': 10, 'locationId': 'gid://shopify/Location/68605345858'}], 'weight': 0.0, 'weightUnit': 'KILOGRAMS'}, {'sku': '', 'price': '2500.0', 'inventoryPolicy': 'DENY', 'inventoryManagement': 'SHOPIFY', 'inventoryQuantities': [{'availableQuantity': 10, 'locationId': 'gid://shopify/Location/68605345858'}], 'weight': 0.0, 'weightUnit': 'KILOGRAMS'}, {'sku': '', 'price': '2500.0', 'inventoryPolicy': 'DENY', 'inventoryManagement': 'SHOPIFY', 'inventoryQuantities': [{'availableQuantity': 10, 'locationId': 'gid://shopify/Location/68605345858'}], 'weight': 0.0, 'weightUnit': 'KILOGRAMS'}], 'seo': {'title': 'Morsi-Black-Gold', 'description': ''}}}}, 'response': None, 'status': None}
2025-07-08 23:58:43,819 - sync_service - ERROR - GraphQL query error for store local: 
2025-07-08 23:58:43,820 - sync_service - ERROR - Failed to create product in store local: GraphQL query error for store local: 
2025-07-08 23:58:43,821 - sync_service - ERROR - Failed to sync product group ('Morsi Necklace', 'local') to all stores
2025-07-08 23:58:44,330 - sync_service - INFO - Processing product group: ('Morsi Necklace', 'international') with 3 items
2025-07-08 23:58:44,330 - sync_service - INFO - Creating product in store: Local Store
2025-07-08 23:58:44,331 - sync_service - INFO - API Call: {'service': 'shopify', 'endpoint': 'graphql_local', 'request': {'query': '\n        mutation productCreate($input: ProductInput!) {\n            productCreate(input: $input) {\n                product {\n                    id\n                    title\n                    handle\n                    variants(first: 50) {\n                        edges {\n                            node {\n                                id\n                                sku\n                                inventoryItem {\n                                    id\n                                }\n                                selectedOptions {\n                                    name\n                                    value\n                                }\n                            }\n                        }\n                    }\n                }\n                userErrors {\n                    field\n                    message\n                }\n            }\n        }\n        ', 'variables': {'input': {'title': 'Morsi-Black-Gold', 'descriptionHtml': '', 'vendor': '', 'productType': 'Default', 'status': 'DRAFT', 'tags': [], 'options': [{'name': 'Color'}], 'variants': [{'sku': '', 'price': '3500.0', 'inventoryPolicy': 'DENY', 'inventoryManagement': 'SHOPIFY', 'inventoryQuantities': [{'availableQuantity': 10, 'locationId': 'gid://shopify/Location/68605345858'}], 'weight': 0.0, 'weightUnit': 'KILOGRAMS'}, {'sku': '', 'price': '3500.0', 'inventoryPolicy': 'DENY', 'inventoryManagement': 'SHOPIFY', 'inventoryQuantities': [{'availableQuantity': 10, 'locationId': 'gid://shopify/Location/68605345858'}], 'weight': 0.0, 'weightUnit': 'KILOGRAMS'}, {'sku': '', 'price': '3500.0', 'inventoryPolicy': 'DENY', 'inventoryManagement': 'SHOPIFY', 'inventoryQuantities': [{'availableQuantity': 10, 'locationId': 'gid://shopify/Location/68605345858'}], 'weight': 0.0, 'weightUnit': 'KILOGRAMS'}], 'seo': {'title': 'Morsi-Black-Gold', 'description': ''}}}}, 'response': None, 'status': None}
2025-07-08 23:58:44,754 - sync_service - ERROR - GraphQL query error for store local: {'message': 'Variable $input of type ProductInput! was provided invalid value for options.0 (Could not coerce value {name:"Color"} to String)', 'locations': [{'line': 1, 'column': 24}], 'extensions': {'value': {'title': 'Morsi-Black-Gold', 'descriptionHtml': '', 'vendor': '', 'productType': 'Default', 'status': 'DRAFT', 'tags': [], 'options': [{'name': 'Color'}], 'variants': [{'sku': '', 'price': '3500.0', 'inventoryPolicy': 'DENY', 'inventoryManagement': 'SHOPIFY', 'inventoryQuantities': [{'availableQuantity': 10, 'locationId': 'gid://shopify/Location/68605345858'}], 'weight': 0.0, 'weightUnit': 'KILOGRAMS'}, {'sku': '', 'price': '3500.0', 'inventoryPolicy': 'DENY', 'inventoryManagement': 'SHOPIFY', 'inventoryQuantities': [{'availableQuantity': 10, 'locationId': 'gid://shopify/Location/68605345858'}], 'weight': 0.0, 'weightUnit': 'KILOGRAMS'}, {'sku': '', 'price': '3500.0', 'inventoryPolicy': 'DENY', 'inventoryManagement': 'SHOPIFY', 'inventoryQuantities': [{'availableQuantity': 10, 'locationId': 'gid://shopify/Location/68605345858'}], 'weight': 0.0, 'weightUnit': 'KILOGRAMS'}], 'seo': {'title': 'Morsi-Black-Gold', 'description': ''}}, 'problems': [{'path': ['options', 0], 'explanation': 'Could not coerce value {name:"Color"} to String'}]}}
GraphQL Errors: [
  {
    "message": "Variable $input of type ProductInput! was provided invalid value for options.0 (Could not coerce value {name:\"Color\"} to String)",
    "locations": [
      {
        "line": 1,
        "column": 24
      }
    ],
    "extensions": {
      "value": {
        "title": "Morsi-Black-Gold",
        "descriptionHtml": "",
        "vendor": "",
        "productType": "Default",
        "status": "DRAFT",
        "tags": [],
        "options": [
          {
            "name": "Color"
          }
        ],
        "variants": [
          {
            "sku": "",
            "price": "3500.0",
            "inventoryPolicy": "DENY",
            "inventoryManagement": "SHOPIFY",
            "inventoryQuantities": [
              {
                "availableQuantity": 10,
                "locationId": "gid://shopify/Location/68605345858"
              }
            ],
            "weight": 0.0,
            "weightUnit": "KILOGRAMS"
          },
          {
            "sku": "",
            "price": "3500.0",
            "inventoryPolicy": "DENY",
            "inventoryManagement": "SHOPIFY",
            "inventoryQuantities": [
              {
                "availableQuantity": 10,
                "locationId": "gid://shopify/Location/68605345858"
              }
            ],
            "weight": 0.0,
            "weightUnit": "KILOGRAMS"
          },
          {
            "sku": "",
            "price": "3500.0",
            "inventoryPolicy": "DENY",
            "inventoryManagement": "SHOPIFY",
            "inventoryQuantities": [
              {
                "availableQuantity": 10,
                "locationId": "gid://shopify/Location/68605345858"
              }
            ],
            "weight": 0.0,
            "weightUnit": "KILOGRAMS"
          }
        ],
        "seo": {
          "title": "Morsi-Black-Gold",
          "description": ""
        }
      },
      "problems": [
        {
          "path": [
            "options",
            0
          ],
          "explanation": "Could not coerce value {name:\"Color\"} to String"
        }
      ]
    }
  }
]
2025-07-08 23:58:44,755 - sync_service - ERROR - Failed to create product in store local: GraphQL query error for store local: {'message': 'Variable $input of type ProductInput! was provided invalid value for options.0 (Could not coerce value {name:"Color"} to String)', 'locations': [{'line': 1, 'column': 24}], 'extensions': {'value': {'title': 'Morsi-Black-Gold', 'descriptionHtml': '', 'vendor': '', 'productType': 'Default', 'status': 'DRAFT', 'tags': [], 'options': [{'name': 'Color'}], 'variants': [{'sku': '', 'price': '3500.0', 'inventoryPolicy': 'DENY', 'inventoryManagement': 'SHOPIFY', 'inventoryQuantities': [{'availableQuantity': 10, 'locationId': 'gid://shopify/Location/68605345858'}], 'weight': 0.0, 'weightUnit': 'KILOGRAMS'}, {'sku': '', 'price': '3500.0', 'inventoryPolicy': 'DENY', 'inventoryManagement': 'SHOPIFY', 'inventoryQuantities': [{'availableQuantity': 10, 'locationId': 'gid://shopify/Location/68605345858'}], 'weight': 0.0, 'weightUnit': 'KILOGRAMS'}, {'sku': '', 'price': '3500.0', 'inventoryPolicy': 'DENY', 'inventoryManagement': 'SHOPIFY', 'inventoryQuantities': [{'availableQuantity': 10, 'locationId': 'gid://shopify/Location/68605345858'}], 'weight': 0.0, 'weightUnit': 'KILOGRAMS'}], 'seo': {'title': 'Morsi-Black-Gold', 'description': ''}}, 'problems': [{'path': ['options', 0], 'explanation': 'Could not coerce value {name:"Color"} to String'}]}}
GraphQL Errors: [
  {
    "message": "Variable $input of type ProductInput! was provided invalid value for options.0 (Could not coerce value {name:\"Color\"} to String)",
    "locations": [
      {
        "line": 1,
        "column": 24
      }
    ],
    "extensions": {
      "value": {
        "title": "Morsi-Black-Gold",
        "descriptionHtml": "",
        "vendor": "",
        "productType": "Default",
        "status": "DRAFT",
        "tags": [],
        "options": [
          {
            "name": "Color"
          }
        ],
        "variants": [
          {
            "sku": "",
            "price": "3500.0",
            "inventoryPolicy": "DENY",
            "inventoryManagement": "SHOPIFY",
            "inventoryQuantities": [
              {
                "availableQuantity": 10,
                "locationId": "gid://shopify/Location/68605345858"
              }
            ],
            "weight": 0.0,
            "weightUnit": "KILOGRAMS"
          },
          {
            "sku": "",
            "price": "3500.0",
            "inventoryPolicy": "DENY",
            "inventoryManagement": "SHOPIFY",
            "inventoryQuantities": [
              {
                "availableQuantity": 10,
                "locationId": "gid://shopify/Location/68605345858"
              }
            ],
            "weight": 0.0,
            "weightUnit": "KILOGRAMS"
          },
          {
            "sku": "",
            "price": "3500.0",
            "inventoryPolicy": "DENY",
            "inventoryManagement": "SHOPIFY",
            "inventoryQuantities": [
              {
                "availableQuantity": 10,
                "locationId": "gid://shopify/Location/68605345858"
              }
            ],
            "weight": 0.0,
            "weightUnit": "KILOGRAMS"
          }
        ],
        "seo": {
          "title": "Morsi-Black-Gold",
          "description": ""
        }
      },
      "problems": [
        {
          "path": [
            "options",
            0
          ],
          "explanation": "Could not coerce value {name:\"Color\"} to String"
        }
      ]
    }
  }
]
2025-07-08 23:58:44,757 - sync_service - ERROR - Failed to sync product group ('Morsi Necklace', 'international') to all stores
2025-07-08 23:58:45,262 - sync_service - INFO - Sync Event: {'sync_type': 'multi_store_new_items_sap_to_shopify', 'items_processed': 2, 'success_count': 0, 'error_count': 2, 'details': None}
2025-07-08 23:58:45,263 - sync_service - INFO - Multi-store new items sync completed: 2 processed, 0 successful, 2 errors
2025-07-09 00:08:42,635 - sync_service - INFO - Initialized Shopify client for store: Local Store (local)
2025-07-09 00:08:42,637 - sync_service - INFO - Starting multi-store new items sync from SAP to Shopify
2025-07-09 00:08:42,637 - sync_service - INFO - Fetching new items for store: local
2025-07-09 00:08:42,637 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'login', 'request': {'company': 'JudeBenHalim_Test', 'user': 'manager'}, 'response': None, 'status': None}
2025-07-09 00:08:43,203 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'login', 'request': None, 'response': {'status': 'success'}, 'status': 'success'}
2025-07-09 00:08:43,204 - sync_service - INFO - SAP login successful
2025-07-09 00:08:43,205 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': "view.svc/MASHURA_New_ItemsB1SLQuery?$filter=Shopify_Store eq 'local'&$orderby=MainProduct", 'request': {'method': 'GET', 'url': "https://10.0.0.100:50000/b1s/v1/view.svc/MASHURA_New_ItemsB1SLQuery?$filter=Shopify_Store eq 'local'&$orderby=MainProduct", 'data': None, 'params': None}, 'response': None, 'status': None}
2025-07-09 00:08:43,309 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': "view.svc/MASHURA_New_ItemsB1SLQuery?$filter=Shopify_Store eq 'local'&$orderby=MainProduct", 'request': None, 'response': {'odata.metadata': 'https://10.0.0.100:50000/b1s/v1/view.svc/$metadata#MASHURA_New_ItemsB1SLQuery', 'value': [{'itemcode': 'FG-0000701', 'ItemName': 'Morsi-Black-Gold', 'MainProduct': 'Morsi Necklace', 'Color': 'Black Gold', 'OnHand': 10.0, 'IsCommited': 0.0, 'Available': 10.0, 'Price': 2500.0, 'Status': 'new', 'Shopify_ProductCode': '', 'Shopify_Store': 'local', 'id__': 1}, {'itemcode': 'FG-0000702', 'ItemName': 'Morsi-Rose-Gold', 'MainProduct': 'Morsi Necklace', 'Color': 'Rose Gold', 'OnHand': 15.0, 'IsCommited': 0.0, 'Available': 15.0, 'Price': 2500.0, 'Status': 'new', 'Shopify_ProductCode': '', 'Shopify_Store': 'local', 'id__': 2}, {'itemcode': 'FG-0000703', 'ItemName': 'Morsi-White-Gold', 'MainProduct': 'Morsi Necklace', 'Color': 'White Gold', 'OnHand': 20.0, 'IsCommited': 0.0, 'Available': 20.0, 'Price': 2500.0, 'Status': 'new', 'Shopify_ProductCode': '', 'Shopify_Store': 'local', 'id__': 3}]}, 'status': 'success'}
2025-07-09 00:08:43,313 - sync_service - INFO - Product group: ('Morsi Necklace', 'local') has 3 items
2025-07-09 00:08:43,314 - sync_service - INFO - Grouped 3 items into 1 product groups for store local
2025-07-09 00:08:43,314 - sync_service - INFO - Processing product group: ('Morsi Necklace', 'local') with 3 items for store local
2025-07-09 00:08:43,316 - sync_service - INFO - API Call: {'service': 'shopify', 'endpoint': 'graphql_local', 'request': {'query': '\n        mutation productCreate($input: ProductInput!) {\n            productCreate(input: $input) {\n                product {\n                    id\n                    title\n                    handle\n                    variants(first: 50) {\n                        edges {\n                            node {\n                                id\n                                sku\n                                inventoryItem {\n                                    id\n                                }\n                                selectedOptions {\n                                    name\n                                    value\n                                }\n                            }\n                        }\n                    }\n                }\n                userErrors {\n                    field\n                    message\n                }\n            }\n        }\n        ', 'variables': {'input': {'title': 'Morsi-Black-Gold', 'descriptionHtml': '', 'vendor': '', 'productType': 'Default', 'status': 'DRAFT', 'tags': [], 'options': [{'name': 'Color'}], 'variants': [{'sku': '', 'price': '2500.0', 'inventoryPolicy': 'DENY', 'inventoryManagement': 'SHOPIFY', 'inventoryQuantities': [{'availableQuantity': 10, 'locationId': 'gid://shopify/Location/68605345858'}], 'weight': 0.0, 'weightUnit': 'KILOGRAMS'}, {'sku': '', 'price': '2500.0', 'inventoryPolicy': 'DENY', 'inventoryManagement': 'SHOPIFY', 'inventoryQuantities': [{'availableQuantity': 10, 'locationId': 'gid://shopify/Location/68605345858'}], 'weight': 0.0, 'weightUnit': 'KILOGRAMS'}, {'sku': '', 'price': '2500.0', 'inventoryPolicy': 'DENY', 'inventoryManagement': 'SHOPIFY', 'inventoryQuantities': [{'availableQuantity': 10, 'locationId': 'gid://shopify/Location/68605345858'}], 'weight': 0.0, 'weightUnit': 'KILOGRAMS'}], 'seo': {'title': 'Morsi-Black-Gold', 'description': ''}}}}, 'response': None, 'status': None}
2025-07-09 00:08:43,749 - sync_service - ERROR - GraphQL query error for store local: {'message': 'Variable $input of type ProductInput! was provided invalid value for options.0 (Could not coerce value {name:"Color"} to String)', 'locations': [{'line': 1, 'column': 24}], 'extensions': {'value': {'title': 'Morsi-Black-Gold', 'descriptionHtml': '', 'vendor': '', 'productType': 'Default', 'status': 'DRAFT', 'tags': [], 'options': [{'name': 'Color'}], 'variants': [{'sku': '', 'price': '2500.0', 'inventoryPolicy': 'DENY', 'inventoryManagement': 'SHOPIFY', 'inventoryQuantities': [{'availableQuantity': 10, 'locationId': 'gid://shopify/Location/68605345858'}], 'weight': 0.0, 'weightUnit': 'KILOGRAMS'}, {'sku': '', 'price': '2500.0', 'inventoryPolicy': 'DENY', 'inventoryManagement': 'SHOPIFY', 'inventoryQuantities': [{'availableQuantity': 10, 'locationId': 'gid://shopify/Location/68605345858'}], 'weight': 0.0, 'weightUnit': 'KILOGRAMS'}, {'sku': '', 'price': '2500.0', 'inventoryPolicy': 'DENY', 'inventoryManagement': 'SHOPIFY', 'inventoryQuantities': [{'availableQuantity': 10, 'locationId': 'gid://shopify/Location/68605345858'}], 'weight': 0.0, 'weightUnit': 'KILOGRAMS'}], 'seo': {'title': 'Morsi-Black-Gold', 'description': ''}}, 'problems': [{'path': ['options', 0], 'explanation': 'Could not coerce value {name:"Color"} to String'}]}}
GraphQL Errors: [
  {
    "message": "Variable $input of type ProductInput! was provided invalid value for options.0 (Could not coerce value {name:\"Color\"} to String)",
    "locations": [
      {
        "line": 1,
        "column": 24
      }
    ],
    "extensions": {
      "value": {
        "title": "Morsi-Black-Gold",
        "descriptionHtml": "",
        "vendor": "",
        "productType": "Default",
        "status": "DRAFT",
        "tags": [],
        "options": [
          {
            "name": "Color"
          }
        ],
        "variants": [
          {
            "sku": "",
            "price": "2500.0",
            "inventoryPolicy": "DENY",
            "inventoryManagement": "SHOPIFY",
            "inventoryQuantities": [
              {
                "availableQuantity": 10,
                "locationId": "gid://shopify/Location/68605345858"
              }
            ],
            "weight": 0.0,
            "weightUnit": "KILOGRAMS"
          },
          {
            "sku": "",
            "price": "2500.0",
            "inventoryPolicy": "DENY",
            "inventoryManagement": "SHOPIFY",
            "inventoryQuantities": [
              {
                "availableQuantity": 10,
                "locationId": "gid://shopify/Location/68605345858"
              }
            ],
            "weight": 0.0,
            "weightUnit": "KILOGRAMS"
          },
          {
            "sku": "",
            "price": "2500.0",
            "inventoryPolicy": "DENY",
            "inventoryManagement": "SHOPIFY",
            "inventoryQuantities": [
              {
                "availableQuantity": 10,
                "locationId": "gid://shopify/Location/68605345858"
              }
            ],
            "weight": 0.0,
            "weightUnit": "KILOGRAMS"
          }
        ],
        "seo": {
          "title": "Morsi-Black-Gold",
          "description": ""
        }
      },
      "problems": [
        {
          "path": [
            "options",
            0
          ],
          "explanation": "Could not coerce value {name:\"Color\"} to String"
        }
      ]
    }
  }
]
2025-07-09 00:08:43,750 - sync_service - ERROR - Failed to create product in store local: GraphQL query error for store local: {'message': 'Variable $input of type ProductInput! was provided invalid value for options.0 (Could not coerce value {name:"Color"} to String)', 'locations': [{'line': 1, 'column': 24}], 'extensions': {'value': {'title': 'Morsi-Black-Gold', 'descriptionHtml': '', 'vendor': '', 'productType': 'Default', 'status': 'DRAFT', 'tags': [], 'options': [{'name': 'Color'}], 'variants': [{'sku': '', 'price': '2500.0', 'inventoryPolicy': 'DENY', 'inventoryManagement': 'SHOPIFY', 'inventoryQuantities': [{'availableQuantity': 10, 'locationId': 'gid://shopify/Location/68605345858'}], 'weight': 0.0, 'weightUnit': 'KILOGRAMS'}, {'sku': '', 'price': '2500.0', 'inventoryPolicy': 'DENY', 'inventoryManagement': 'SHOPIFY', 'inventoryQuantities': [{'availableQuantity': 10, 'locationId': 'gid://shopify/Location/68605345858'}], 'weight': 0.0, 'weightUnit': 'KILOGRAMS'}, {'sku': '', 'price': '2500.0', 'inventoryPolicy': 'DENY', 'inventoryManagement': 'SHOPIFY', 'inventoryQuantities': [{'availableQuantity': 10, 'locationId': 'gid://shopify/Location/68605345858'}], 'weight': 0.0, 'weightUnit': 'KILOGRAMS'}], 'seo': {'title': 'Morsi-Black-Gold', 'description': ''}}, 'problems': [{'path': ['options', 0], 'explanation': 'Could not coerce value {name:"Color"} to String'}]}}
GraphQL Errors: [
  {
    "message": "Variable $input of type ProductInput! was provided invalid value for options.0 (Could not coerce value {name:\"Color\"} to String)",
    "locations": [
      {
        "line": 1,
        "column": 24
      }
    ],
    "extensions": {
      "value": {
        "title": "Morsi-Black-Gold",
        "descriptionHtml": "",
        "vendor": "",
        "productType": "Default",
        "status": "DRAFT",
        "tags": [],
        "options": [
          {
            "name": "Color"
          }
        ],
        "variants": [
          {
            "sku": "",
            "price": "2500.0",
            "inventoryPolicy": "DENY",
            "inventoryManagement": "SHOPIFY",
            "inventoryQuantities": [
              {
                "availableQuantity": 10,
                "locationId": "gid://shopify/Location/68605345858"
              }
            ],
            "weight": 0.0,
            "weightUnit": "KILOGRAMS"
          },
          {
            "sku": "",
            "price": "2500.0",
            "inventoryPolicy": "DENY",
            "inventoryManagement": "SHOPIFY",
            "inventoryQuantities": [
              {
                "availableQuantity": 10,
                "locationId": "gid://shopify/Location/68605345858"
              }
            ],
            "weight": 0.0,
            "weightUnit": "KILOGRAMS"
          },
          {
            "sku": "",
            "price": "2500.0",
            "inventoryPolicy": "DENY",
            "inventoryManagement": "SHOPIFY",
            "inventoryQuantities": [
              {
                "availableQuantity": 10,
                "locationId": "gid://shopify/Location/68605345858"
              }
            ],
            "weight": 0.0,
            "weightUnit": "KILOGRAMS"
          }
        ],
        "seo": {
          "title": "Morsi-Black-Gold",
          "description": ""
        }
      },
      "problems": [
        {
          "path": [
            "options",
            0
          ],
          "explanation": "Could not coerce value {name:\"Color\"} to String"
        }
      ]
    }
  }
]
2025-07-09 00:08:44,260 - sync_service - INFO - Sync Event: {'sync_type': 'multi_store_new_items_sap_to_shopify', 'items_processed': 1, 'success_count': 0, 'error_count': 1, 'details': None}
2025-07-09 00:08:44,262 - sync_service - INFO - Multi-store new items sync completed: 1 processed, 0 successful, 1 errors
2025-07-09 00:10:46,830 - sync_service - INFO - Initialized Shopify client for store: Local Store (local)
2025-07-09 00:10:46,833 - sync_service - INFO - Starting multi-store new items sync from SAP to Shopify
2025-07-09 00:10:46,834 - sync_service - INFO - Fetching new items for store: local
2025-07-09 00:10:46,835 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'login', 'request': {'company': 'JudeBenHalim_Test', 'user': 'manager'}, 'response': None, 'status': None}
2025-07-09 00:10:47,427 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'login', 'request': None, 'response': {'status': 'success'}, 'status': 'success'}
2025-07-09 00:10:47,429 - sync_service - INFO - SAP login successful
2025-07-09 00:10:47,433 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': "view.svc/MASHURA_New_ItemsB1SLQuery?$filter=Shopify_Store eq 'local'&$orderby=MainProduct", 'request': {'method': 'GET', 'url': "https://10.0.0.100:50000/b1s/v1/view.svc/MASHURA_New_ItemsB1SLQuery?$filter=Shopify_Store eq 'local'&$orderby=MainProduct", 'data': None, 'params': None}, 'response': None, 'status': None}
2025-07-09 00:10:47,546 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': "view.svc/MASHURA_New_ItemsB1SLQuery?$filter=Shopify_Store eq 'local'&$orderby=MainProduct", 'request': None, 'response': {'odata.metadata': 'https://10.0.0.100:50000/b1s/v1/view.svc/$metadata#MASHURA_New_ItemsB1SLQuery', 'value': [{'itemcode': 'FG-0000701', 'ItemName': 'Morsi-Black-Gold', 'MainProduct': 'Morsi Necklace', 'Color': 'Black Gold', 'OnHand': 10.0, 'IsCommited': 0.0, 'Available': 10.0, 'Price': 2500.0, 'Status': 'new', 'Shopify_ProductCode': '', 'Shopify_Store': 'local', 'id__': 1}, {'itemcode': 'FG-0000702', 'ItemName': 'Morsi-Rose-Gold', 'MainProduct': 'Morsi Necklace', 'Color': 'Rose Gold', 'OnHand': 15.0, 'IsCommited': 0.0, 'Available': 15.0, 'Price': 2500.0, 'Status': 'new', 'Shopify_ProductCode': '', 'Shopify_Store': 'local', 'id__': 2}, {'itemcode': 'FG-0000703', 'ItemName': 'Morsi-White-Gold', 'MainProduct': 'Morsi Necklace', 'Color': 'White Gold', 'OnHand': 20.0, 'IsCommited': 0.0, 'Available': 20.0, 'Price': 2500.0, 'Status': 'new', 'Shopify_ProductCode': '', 'Shopify_Store': 'local', 'id__': 3}]}, 'status': 'success'}
2025-07-09 00:10:47,550 - sync_service - INFO - Product group: ('Morsi Necklace', 'local') has 3 items
2025-07-09 00:10:47,551 - sync_service - INFO - Grouped 3 items into 1 product groups for store local
2025-07-09 00:10:47,552 - sync_service - INFO - Processing product group: ('Morsi Necklace', 'local') with 3 items for store local
2025-07-09 00:10:47,553 - sync_service - INFO - API Call: {'service': 'shopify', 'endpoint': 'graphql_local', 'request': {'query': '\n        mutation productCreate($input: ProductInput!) {\n            productCreate(input: $input) {\n                product {\n                    id\n                    title\n                    handle\n                    variants(first: 50) {\n                        edges {\n                            node {\n                                id\n                                sku\n                                inventoryItem {\n                                    id\n                                }\n                                selectedOptions {\n                                    name\n                                    value\n                                }\n                            }\n                        }\n                    }\n                }\n                userErrors {\n                    field\n                    message\n                }\n            }\n        }\n        ', 'variables': {'input': {'title': 'Morsi-Black-Gold', 'descriptionHtml': '', 'vendor': '', 'productType': 'Default', 'status': 'DRAFT', 'tags': [], 'options': ['Color'], 'variants': [{'sku': '', 'price': '2500.0', 'inventoryPolicy': 'DENY', 'inventoryManagement': 'SHOPIFY', 'inventoryQuantities': [{'availableQuantity': 10, 'locationId': 'gid://shopify/Location/68605345858'}], 'weight': 0.0, 'weightUnit': 'KILOGRAMS'}, {'sku': '', 'price': '2500.0', 'inventoryPolicy': 'DENY', 'inventoryManagement': 'SHOPIFY', 'inventoryQuantities': [{'availableQuantity': 10, 'locationId': 'gid://shopify/Location/68605345858'}], 'weight': 0.0, 'weightUnit': 'KILOGRAMS'}, {'sku': '', 'price': '2500.0', 'inventoryPolicy': 'DENY', 'inventoryManagement': 'SHOPIFY', 'inventoryQuantities': [{'availableQuantity': 10, 'locationId': 'gid://shopify/Location/68605345858'}], 'weight': 0.0, 'weightUnit': 'KILOGRAMS'}], 'seo': {'title': 'Morsi-Black-Gold', 'description': ''}}}}, 'response': None, 'status': None}
2025-07-09 00:10:48,110 - sync_service - INFO - API Call: {'service': 'shopify', 'endpoint': 'graphql_local', 'request': None, 'response': {'productCreate': {'product': None, 'userErrors': [{'field': ['variants', '1'], 'message': "The variant 'Default Title' already exists."}]}}, 'status': 'success'}
2025-07-09 00:10:48,111 - sync_service - ERROR - Failed to create product in store local: The variant 'Default Title' already exists.
2025-07-09 00:10:48,625 - sync_service - INFO - Sync Event: {'sync_type': 'multi_store_new_items_sap_to_shopify', 'items_processed': 1, 'success_count': 0, 'error_count': 1, 'details': None}
2025-07-09 00:10:48,626 - sync_service - INFO - Multi-store new items sync completed: 1 processed, 0 successful, 1 errors
2025-07-09 00:18:22,153 - sync_service - INFO - Initialized Shopify client for store: Local Store (local)
2025-07-09 00:18:22,156 - sync_service - INFO - Starting multi-store new items sync from SAP to Shopify
2025-07-09 00:18:22,157 - sync_service - INFO - Fetching new items for store: local
2025-07-09 00:18:22,157 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'login', 'request': {'company': 'JudeBenHalim_Test', 'user': 'manager'}, 'response': None, 'status': None}
2025-07-09 00:18:22,713 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'login', 'request': None, 'response': {'status': 'success'}, 'status': 'success'}
2025-07-09 00:18:22,714 - sync_service - INFO - SAP login successful
2025-07-09 00:18:22,715 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': "view.svc/MASHURA_New_ItemsB1SLQuery?$filter=Shopify_Store eq 'local'&$orderby=MainProduct", 'request': {'method': 'GET', 'url': "https://10.0.0.100:50000/b1s/v1/view.svc/MASHURA_New_ItemsB1SLQuery?$filter=Shopify_Store eq 'local'&$orderby=MainProduct", 'data': None, 'params': None}, 'response': None, 'status': None}
2025-07-09 00:18:22,821 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': "view.svc/MASHURA_New_ItemsB1SLQuery?$filter=Shopify_Store eq 'local'&$orderby=MainProduct", 'request': None, 'response': {'odata.metadata': 'https://10.0.0.100:50000/b1s/v1/view.svc/$metadata#MASHURA_New_ItemsB1SLQuery', 'value': [{'itemcode': 'FG-0000701', 'ItemName': 'Morsi-Black-Gold', 'MainProduct': 'Morsi Necklace', 'Color': 'Black Gold', 'OnHand': 10.0, 'IsCommited': 0.0, 'Available': 10.0, 'Price': 2500.0, 'Status': 'new', 'Shopify_ProductCode': '', 'Shopify_Store': 'local', 'id__': 1}, {'itemcode': 'FG-0000702', 'ItemName': 'Morsi-Rose-Gold', 'MainProduct': 'Morsi Necklace', 'Color': 'Rose Gold', 'OnHand': 15.0, 'IsCommited': 0.0, 'Available': 15.0, 'Price': 2500.0, 'Status': 'new', 'Shopify_ProductCode': '', 'Shopify_Store': 'local', 'id__': 2}, {'itemcode': 'FG-0000703', 'ItemName': 'Morsi-White-Gold', 'MainProduct': 'Morsi Necklace', 'Color': 'White Gold', 'OnHand': 20.0, 'IsCommited': 0.0, 'Available': 20.0, 'Price': 2500.0, 'Status': 'new', 'Shopify_ProductCode': '', 'Shopify_Store': 'local', 'id__': 3}]}, 'status': 'success'}
2025-07-09 00:18:22,822 - sync_service - INFO - Product group: ('Morsi Necklace', 'local') has 3 items
2025-07-09 00:18:22,822 - sync_service - INFO - Grouped 3 items into 1 product groups for store local
2025-07-09 00:18:22,823 - sync_service - INFO - Processing product group: ('Morsi Necklace', 'local') with 3 items for store local
2025-07-09 00:18:22,823 - sync_service - INFO - API Call: {'service': 'shopify', 'endpoint': 'graphql_local', 'request': {'query': '\n        mutation productCreate($input: ProductInput!) {\n            productCreate(input: $input) {\n                product {\n                    id\n                    title\n                    handle\n                    variants(first: 50) {\n                        edges {\n                            node {\n                                id\n                                sku\n                                inventoryItem {\n                                    id\n                                }\n                                selectedOptions {\n                                    name\n                                    value\n                                }\n                            }\n                        }\n                    }\n                }\n                userErrors {\n                    field\n                    message\n                }\n            }\n        }\n        ', 'variables': {'input': {'title': 'Morsi-Black-Gold', 'descriptionHtml': '', 'vendor': '', 'productType': 'Default', 'status': 'DRAFT', 'tags': [], 'options': ['Color'], 'variants': [{'sku': 'FG-0000701', 'price': '2500.0', 'inventoryPolicy': 'DENY', 'inventoryManagement': 'SHOPIFY', 'inventoryQuantities': [{'availableQuantity': 10, 'locationId': 'gid://shopify/Location/68605345858'}], 'weight': 0.0, 'weightUnit': 'KILOGRAMS', 'option1': 'Black Gold'}, {'sku': 'FG-0000702', 'price': '2500.0', 'inventoryPolicy': 'DENY', 'inventoryManagement': 'SHOPIFY', 'inventoryQuantities': [{'availableQuantity': 10, 'locationId': 'gid://shopify/Location/68605345858'}], 'weight': 0.0, 'weightUnit': 'KILOGRAMS', 'option1': 'Rose Gold'}, {'sku': 'FG-0000703', 'price': '2500.0', 'inventoryPolicy': 'DENY', 'inventoryManagement': 'SHOPIFY', 'inventoryQuantities': [{'availableQuantity': 10, 'locationId': 'gid://shopify/Location/68605345858'}], 'weight': 0.0, 'weightUnit': 'KILOGRAMS', 'option1': 'White Gold'}], 'seo': {'title': 'Morsi-Black-Gold', 'description': ''}}}}, 'response': None, 'status': None}
2025-07-09 00:18:32,831 - sync_service - ERROR - GraphQL query error for store local: 
2025-07-09 00:18:32,832 - sync_service - ERROR - Failed to create product in store local: GraphQL query error for store local: 
2025-07-09 00:18:33,342 - sync_service - INFO - Sync Event: {'sync_type': 'multi_store_new_items_sap_to_shopify', 'items_processed': 1, 'success_count': 0, 'error_count': 1, 'details': None}
2025-07-09 00:18:33,342 - sync_service - INFO - Multi-store new items sync completed: 1 processed, 0 successful, 1 errors
2025-07-09 00:22:12,414 - sync_service - INFO - Initialized Shopify client for store: Local Store (local)
2025-07-09 00:22:12,424 - sync_service - INFO - Starting multi-store new items sync from SAP to Shopify
2025-07-09 00:22:12,425 - sync_service - INFO - Fetching new items for store: local
2025-07-09 00:22:12,428 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'login', 'request': {'company': 'JudeBenHalim_Test', 'user': 'manager'}, 'response': None, 'status': None}
2025-07-09 00:22:12,989 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'login', 'request': None, 'response': {'status': 'success'}, 'status': 'success'}
2025-07-09 00:22:12,990 - sync_service - INFO - SAP login successful
2025-07-09 00:22:12,992 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': "view.svc/MASHURA_New_ItemsB1SLQuery?$filter=Shopify_Store eq 'local'&$orderby=MainProduct", 'request': {'method': 'GET', 'url': "https://10.0.0.100:50000/b1s/v1/view.svc/MASHURA_New_ItemsB1SLQuery?$filter=Shopify_Store eq 'local'&$orderby=MainProduct", 'data': None, 'params': None}, 'response': None, 'status': None}
2025-07-09 00:22:13,089 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': "view.svc/MASHURA_New_ItemsB1SLQuery?$filter=Shopify_Store eq 'local'&$orderby=MainProduct", 'request': None, 'response': {'odata.metadata': 'https://10.0.0.100:50000/b1s/v1/view.svc/$metadata#MASHURA_New_ItemsB1SLQuery', 'value': [{'itemcode': 'FG-0000701', 'ItemName': 'Morsi-Black-Gold', 'MainProduct': 'Morsi Necklace', 'Color': 'Black Gold', 'OnHand': 10.0, 'IsCommited': 0.0, 'Available': 10.0, 'Price': 2500.0, 'Status': 'new', 'Shopify_ProductCode': '', 'Shopify_Store': 'local', 'id__': 1}, {'itemcode': 'FG-0000702', 'ItemName': 'Morsi-Rose-Gold', 'MainProduct': 'Morsi Necklace', 'Color': 'Rose Gold', 'OnHand': 15.0, 'IsCommited': 0.0, 'Available': 15.0, 'Price': 2500.0, 'Status': 'new', 'Shopify_ProductCode': '', 'Shopify_Store': 'local', 'id__': 2}, {'itemcode': 'FG-0000703', 'ItemName': 'Morsi-White-Gold', 'MainProduct': 'Morsi Necklace', 'Color': 'White Gold', 'OnHand': 20.0, 'IsCommited': 0.0, 'Available': 20.0, 'Price': 2500.0, 'Status': 'new', 'Shopify_ProductCode': '', 'Shopify_Store': 'local', 'id__': 3}]}, 'status': 'success'}
2025-07-09 00:22:13,090 - sync_service - INFO - Product group: ('Morsi Necklace', 'local') has 3 items
2025-07-09 00:22:13,091 - sync_service - INFO - Grouped 3 items into 1 product groups for store local
2025-07-09 00:22:13,092 - sync_service - INFO - Processing product group: ('Morsi Necklace', 'local') with 3 items for store local
2025-07-09 00:22:13,092 - sync_service - INFO - API Call: {'service': 'shopify', 'endpoint': 'graphql_local', 'request': {'query': '\n        mutation productCreate($input: ProductInput!) {\n            productCreate(input: $input) {\n                product {\n                    id\n                    title\n                    handle\n                    variants(first: 50) {\n                        edges {\n                            node {\n                                id\n                                sku\n                                inventoryItem {\n                                    id\n                                }\n                                selectedOptions {\n                                    name\n                                    value\n                                }\n                            }\n                        }\n                    }\n                }\n                userErrors {\n                    field\n                    message\n                }\n            }\n        }\n        ', 'variables': {'input': {'title': 'Morsi-Black-Gold', 'descriptionHtml': '', 'vendor': '', 'productType': 'Default', 'status': 'DRAFT', 'tags': [], 'options': ['Color'], 'variants': [{'sku': 'FG-0000701', 'price': '2500.0', 'inventoryPolicy': 'DENY', 'inventoryManagement': 'SHOPIFY', 'inventoryQuantities': [{'availableQuantity': 10, 'locationId': 'gid://shopify/Location/68605345858'}], 'weight': 0.0, 'weightUnit': 'KILOGRAMS', 'option1': 'Black Gold'}, {'sku': 'FG-0000702', 'price': '2500.0', 'inventoryPolicy': 'DENY', 'inventoryManagement': 'SHOPIFY', 'inventoryQuantities': [{'availableQuantity': 10, 'locationId': 'gid://shopify/Location/68605345858'}], 'weight': 0.0, 'weightUnit': 'KILOGRAMS', 'option1': 'Rose Gold'}, {'sku': 'FG-0000703', 'price': '2500.0', 'inventoryPolicy': 'DENY', 'inventoryManagement': 'SHOPIFY', 'inventoryQuantities': [{'availableQuantity': 10, 'locationId': 'gid://shopify/Location/68605345858'}], 'weight': 0.0, 'weightUnit': 'KILOGRAMS', 'option1': 'White Gold'}], 'seo': {'title': 'Morsi-Black-Gold', 'description': ''}}}}, 'response': None, 'status': None}
2025-07-09 00:22:23,115 - sync_service - ERROR - GraphQL query error for store local: 
2025-07-09 00:22:23,115 - sync_service - ERROR - Shopify full response for store local: {'msg': 'failure', 'error': 'GraphQL query error for store local: '}
2025-07-09 00:22:23,116 - sync_service - ERROR - Failed to create product in store local: GraphQL query error for store local: 
2025-07-09 00:22:23,625 - sync_service - INFO - Sync Event: {'sync_type': 'multi_store_new_items_sap_to_shopify', 'items_processed': 1, 'success_count': 0, 'error_count': 1, 'details': None}
2025-07-09 00:22:23,625 - sync_service - INFO - Multi-store new items sync completed: 1 processed, 0 successful, 1 errors
2025-07-09 00:24:10,256 - sync_service - INFO - Initialized Shopify client for store: Local Store (local)
2025-07-09 00:24:10,259 - sync_service - INFO - Starting multi-store new items sync from SAP to Shopify
2025-07-09 00:24:10,259 - sync_service - INFO - Fetching new items for store: local
2025-07-09 00:24:10,261 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'login', 'request': {'company': 'JudeBenHalim_Test', 'user': 'manager'}, 'response': None, 'status': None}
2025-07-09 00:24:11,050 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'login', 'request': None, 'response': {'status': 'success'}, 'status': 'success'}
2025-07-09 00:24:11,050 - sync_service - INFO - SAP login successful
2025-07-09 00:24:11,051 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': "view.svc/MASHURA_New_ItemsB1SLQuery?$filter=Shopify_Store eq 'local'&$orderby=MainProduct", 'request': {'method': 'GET', 'url': "https://10.0.0.100:50000/b1s/v1/view.svc/MASHURA_New_ItemsB1SLQuery?$filter=Shopify_Store eq 'local'&$orderby=MainProduct", 'data': None, 'params': None}, 'response': None, 'status': None}
2025-07-09 00:24:11,162 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': "view.svc/MASHURA_New_ItemsB1SLQuery?$filter=Shopify_Store eq 'local'&$orderby=MainProduct", 'request': None, 'response': {'odata.metadata': 'https://10.0.0.100:50000/b1s/v1/view.svc/$metadata#MASHURA_New_ItemsB1SLQuery', 'value': [{'itemcode': 'FG-0000701', 'ItemName': 'Morsi-Black-Gold', 'MainProduct': 'Morsi Necklace', 'Color': 'Black Gold', 'OnHand': 10.0, 'IsCommited': 0.0, 'Available': 10.0, 'Price': 2500.0, 'Status': 'new', 'Shopify_ProductCode': '', 'Shopify_Store': 'local', 'id__': 1}, {'itemcode': 'FG-0000702', 'ItemName': 'Morsi-Rose-Gold', 'MainProduct': 'Morsi Necklace', 'Color': 'Rose Gold', 'OnHand': 15.0, 'IsCommited': 0.0, 'Available': 15.0, 'Price': 2500.0, 'Status': 'new', 'Shopify_ProductCode': '', 'Shopify_Store': 'local', 'id__': 2}, {'itemcode': 'FG-0000703', 'ItemName': 'Morsi-White-Gold', 'MainProduct': 'Morsi Necklace', 'Color': 'White Gold', 'OnHand': 20.0, 'IsCommited': 0.0, 'Available': 20.0, 'Price': 2500.0, 'Status': 'new', 'Shopify_ProductCode': '', 'Shopify_Store': 'local', 'id__': 3}]}, 'status': 'success'}
2025-07-09 00:24:11,163 - sync_service - INFO - Product group: ('Morsi Necklace', 'local') has 3 items
2025-07-09 00:24:11,163 - sync_service - INFO - Grouped 3 items into 1 product groups for store local
2025-07-09 00:24:11,163 - sync_service - INFO - Processing product group: ('Morsi Necklace', 'local') with 3 items for store local
2025-07-09 00:24:11,164 - sync_service - INFO - API Call: {'service': 'shopify', 'endpoint': 'graphql_local', 'request': {'query': '\n        mutation productCreate($input: ProductInput!) {\n            productCreate(input: $input) {\n                product {\n                    id\n                    title\n                    handle\n                    variants(first: 50) {\n                        edges {\n                            node {\n                                id\n                                sku\n                                inventoryItem {\n                                    id\n                                }\n                                selectedOptions {\n                                    name\n                                    value\n                                }\n                            }\n                        }\n                    }\n                }\n                userErrors {\n                    field\n                    message\n                }\n            }\n        }\n        ', 'variables': {'input': {'title': 'Morsi-Black-Gold', 'status': 'DRAFT', 'options': ['Color'], 'variants': [{'option1': 'Black Gold', 'sku': 'FG-0000701'}, {'option1': 'Rose Gold', 'sku': 'FG-0000702'}, {'option1': 'White Gold', 'sku': 'FG-0000703'}]}}}, 'response': None, 'status': None}
2025-07-09 00:24:11,530 - sync_service - ERROR - GraphQL query error for store local: {'message': 'Variable $input of type ProductInput! was provided invalid value for variants.0.option1 (Field is not defined on ProductVariantInput), variants.1.option1 (Field is not defined on ProductVariantInput), variants.2.option1 (Field is not defined on ProductVariantInput)', 'locations': [{'line': 1, 'column': 24}], 'extensions': {'value': {'title': 'Morsi-Black-Gold', 'status': 'DRAFT', 'options': ['Color'], 'variants': [{'option1': 'Black Gold', 'sku': 'FG-0000701'}, {'option1': 'Rose Gold', 'sku': 'FG-0000702'}, {'option1': 'White Gold', 'sku': 'FG-0000703'}]}, 'problems': [{'path': ['variants', 0, 'option1'], 'explanation': 'Field is not defined on ProductVariantInput'}, {'path': ['variants', 1, 'option1'], 'explanation': 'Field is not defined on ProductVariantInput'}, {'path': ['variants', 2, 'option1'], 'explanation': 'Field is not defined on ProductVariantInput'}]}}
GraphQL Errors: [
  {
    "message": "Variable $input of type ProductInput! was provided invalid value for variants.0.option1 (Field is not defined on ProductVariantInput), variants.1.option1 (Field is not defined on ProductVariantInput), variants.2.option1 (Field is not defined on ProductVariantInput)",
    "locations": [
      {
        "line": 1,
        "column": 24
      }
    ],
    "extensions": {
      "value": {
        "title": "Morsi-Black-Gold",
        "status": "DRAFT",
        "options": [
          "Color"
        ],
        "variants": [
          {
            "option1": "Black Gold",
            "sku": "FG-0000701"
          },
          {
            "option1": "Rose Gold",
            "sku": "FG-0000702"
          },
          {
            "option1": "White Gold",
            "sku": "FG-0000703"
          }
        ]
      },
      "problems": [
        {
          "path": [
            "variants",
            0,
            "option1"
          ],
          "explanation": "Field is not defined on ProductVariantInput"
        },
        {
          "path": [
            "variants",
            1,
            "option1"
          ],
          "explanation": "Field is not defined on ProductVariantInput"
        },
        {
          "path": [
            "variants",
            2,
            "option1"
          ],
          "explanation": "Field is not defined on ProductVariantInput"
        }
      ]
    }
  }
]
2025-07-09 00:24:11,530 - sync_service - ERROR - Shopify full response for store local: {'msg': 'failure', 'error': 'GraphQL query error for store local: {\'message\': \'Variable $input of type ProductInput! was provided invalid value for variants.0.option1 (Field is not defined on ProductVariantInput), variants.1.option1 (Field is not defined on ProductVariantInput), variants.2.option1 (Field is not defined on ProductVariantInput)\', \'locations\': [{\'line\': 1, \'column\': 24}], \'extensions\': {\'value\': {\'title\': \'Morsi-Black-Gold\', \'status\': \'DRAFT\', \'options\': [\'Color\'], \'variants\': [{\'option1\': \'Black Gold\', \'sku\': \'FG-0000701\'}, {\'option1\': \'Rose Gold\', \'sku\': \'FG-0000702\'}, {\'option1\': \'White Gold\', \'sku\': \'FG-0000703\'}]}, \'problems\': [{\'path\': [\'variants\', 0, \'option1\'], \'explanation\': \'Field is not defined on ProductVariantInput\'}, {\'path\': [\'variants\', 1, \'option1\'], \'explanation\': \'Field is not defined on ProductVariantInput\'}, {\'path\': [\'variants\', 2, \'option1\'], \'explanation\': \'Field is not defined on ProductVariantInput\'}]}}\nGraphQL Errors: [\n  {\n    "message": "Variable $input of type ProductInput! was provided invalid value for variants.0.option1 (Field is not defined on ProductVariantInput), variants.1.option1 (Field is not defined on ProductVariantInput), variants.2.option1 (Field is not defined on ProductVariantInput)",\n    "locations": [\n      {\n        "line": 1,\n        "column": 24\n      }\n    ],\n    "extensions": {\n      "value": {\n        "title": "Morsi-Black-Gold",\n        "status": "DRAFT",\n        "options": [\n          "Color"\n        ],\n        "variants": [\n          {\n            "option1": "Black Gold",\n            "sku": "FG-0000701"\n          },\n          {\n            "option1": "Rose Gold",\n            "sku": "FG-0000702"\n          },\n          {\n            "option1": "White Gold",\n            "sku": "FG-0000703"\n          }\n        ]\n      },\n      "problems": [\n        {\n          "path": [\n            "variants",\n            0,\n            "option1"\n          ],\n          "explanation": "Field is not defined on ProductVariantInput"\n        },\n        {\n          "path": [\n            "variants",\n            1,\n            "option1"\n          ],\n          "explanation": "Field is not defined on ProductVariantInput"\n        },\n        {\n          "path": [\n            "variants",\n            2,\n            "option1"\n          ],\n          "explanation": "Field is not defined on ProductVariantInput"\n        }\n      ]\n    }\n  }\n]'}
2025-07-09 00:24:11,531 - sync_service - ERROR - Failed to create product in store local: GraphQL query error for store local: {'message': 'Variable $input of type ProductInput! was provided invalid value for variants.0.option1 (Field is not defined on ProductVariantInput), variants.1.option1 (Field is not defined on ProductVariantInput), variants.2.option1 (Field is not defined on ProductVariantInput)', 'locations': [{'line': 1, 'column': 24}], 'extensions': {'value': {'title': 'Morsi-Black-Gold', 'status': 'DRAFT', 'options': ['Color'], 'variants': [{'option1': 'Black Gold', 'sku': 'FG-0000701'}, {'option1': 'Rose Gold', 'sku': 'FG-0000702'}, {'option1': 'White Gold', 'sku': 'FG-0000703'}]}, 'problems': [{'path': ['variants', 0, 'option1'], 'explanation': 'Field is not defined on ProductVariantInput'}, {'path': ['variants', 1, 'option1'], 'explanation': 'Field is not defined on ProductVariantInput'}, {'path': ['variants', 2, 'option1'], 'explanation': 'Field is not defined on ProductVariantInput'}]}}
GraphQL Errors: [
  {
    "message": "Variable $input of type ProductInput! was provided invalid value for variants.0.option1 (Field is not defined on ProductVariantInput), variants.1.option1 (Field is not defined on ProductVariantInput), variants.2.option1 (Field is not defined on ProductVariantInput)",
    "locations": [
      {
        "line": 1,
        "column": 24
      }
    ],
    "extensions": {
      "value": {
        "title": "Morsi-Black-Gold",
        "status": "DRAFT",
        "options": [
          "Color"
        ],
        "variants": [
          {
            "option1": "Black Gold",
            "sku": "FG-0000701"
          },
          {
            "option1": "Rose Gold",
            "sku": "FG-0000702"
          },
          {
            "option1": "White Gold",
            "sku": "FG-0000703"
          }
        ]
      },
      "problems": [
        {
          "path": [
            "variants",
            0,
            "option1"
          ],
          "explanation": "Field is not defined on ProductVariantInput"
        },
        {
          "path": [
            "variants",
            1,
            "option1"
          ],
          "explanation": "Field is not defined on ProductVariantInput"
        },
        {
          "path": [
            "variants",
            2,
            "option1"
          ],
          "explanation": "Field is not defined on ProductVariantInput"
        }
      ]
    }
  }
]
2025-07-09 00:24:12,037 - sync_service - INFO - Sync Event: {'sync_type': 'multi_store_new_items_sap_to_shopify', 'items_processed': 1, 'success_count': 0, 'error_count': 1, 'details': None}
2025-07-09 00:24:12,037 - sync_service - INFO - Multi-store new items sync completed: 1 processed, 0 successful, 1 errors
2025-07-09 00:25:46,176 - sync_service - INFO - Initialized Shopify client for store: Local Store (local)
2025-07-09 00:25:46,177 - sync_service - INFO - Starting multi-store new items sync from SAP to Shopify
2025-07-09 00:25:46,178 - sync_service - INFO - Fetching new items for store: local
2025-07-09 00:25:46,178 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'login', 'request': {'company': 'JudeBenHalim_Test', 'user': 'manager'}, 'response': None, 'status': None}
2025-07-09 00:25:46,755 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'login', 'request': None, 'response': {'status': 'success'}, 'status': 'success'}
2025-07-09 00:25:46,756 - sync_service - INFO - SAP login successful
2025-07-09 00:25:46,756 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': "view.svc/MASHURA_New_ItemsB1SLQuery?$filter=Shopify_Store eq 'local'&$orderby=MainProduct", 'request': {'method': 'GET', 'url': "https://10.0.0.100:50000/b1s/v1/view.svc/MASHURA_New_ItemsB1SLQuery?$filter=Shopify_Store eq 'local'&$orderby=MainProduct", 'data': None, 'params': None}, 'response': None, 'status': None}
2025-07-09 00:25:46,844 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': "view.svc/MASHURA_New_ItemsB1SLQuery?$filter=Shopify_Store eq 'local'&$orderby=MainProduct", 'request': None, 'response': {'odata.metadata': 'https://10.0.0.100:50000/b1s/v1/view.svc/$metadata#MASHURA_New_ItemsB1SLQuery', 'value': [{'itemcode': 'FG-0000701', 'ItemName': 'Morsi-Black-Gold', 'MainProduct': 'Morsi Necklace', 'Color': 'Black Gold', 'OnHand': 10.0, 'IsCommited': 0.0, 'Available': 10.0, 'Price': 2500.0, 'Status': 'new', 'Shopify_ProductCode': '', 'Shopify_Store': 'local', 'id__': 1}, {'itemcode': 'FG-0000702', 'ItemName': 'Morsi-Rose-Gold', 'MainProduct': 'Morsi Necklace', 'Color': 'Rose Gold', 'OnHand': 15.0, 'IsCommited': 0.0, 'Available': 15.0, 'Price': 2500.0, 'Status': 'new', 'Shopify_ProductCode': '', 'Shopify_Store': 'local', 'id__': 2}, {'itemcode': 'FG-0000703', 'ItemName': 'Morsi-White-Gold', 'MainProduct': 'Morsi Necklace', 'Color': 'White Gold', 'OnHand': 20.0, 'IsCommited': 0.0, 'Available': 20.0, 'Price': 2500.0, 'Status': 'new', 'Shopify_ProductCode': '', 'Shopify_Store': 'local', 'id__': 3}]}, 'status': 'success'}
2025-07-09 00:25:46,845 - sync_service - INFO - Product group: ('Morsi Necklace', 'local') has 3 items
2025-07-09 00:25:46,845 - sync_service - INFO - Grouped 3 items into 1 product groups for store local
2025-07-09 00:25:46,846 - sync_service - INFO - Processing product group: ('Morsi Necklace', 'local') with 3 items for store local
2025-07-09 00:25:46,846 - sync_service - INFO - API Call: {'service': 'shopify', 'endpoint': 'graphql_local', 'request': {'query': '\n        mutation productCreate($input: ProductInput!) {\n            productCreate(input: $input) {\n                product {\n                    id\n                    title\n                    handle\n                    variants(first: 50) {\n                        edges {\n                            node {\n                                id\n                                sku\n                                inventoryItem {\n                                    id\n                                }\n                                selectedOptions {\n                                    name\n                                    value\n                                }\n                            }\n                        }\n                    }\n                }\n                userErrors {\n                    field\n                    message\n                }\n            }\n        }\n        ', 'variables': {'input': {'title': 'Morsi-Black-Gold', 'status': 'DRAFT', 'options': ['Color'], 'variants': [{'options': ['Black Gold'], 'sku': 'FG-0000701'}, {'options': ['Rose Gold'], 'sku': 'FG-0000702'}, {'options': ['White Gold'], 'sku': 'FG-0000703'}]}}}, 'response': None, 'status': None}
2025-07-09 00:25:56,851 - sync_service - ERROR - GraphQL query error for store local: 
2025-07-09 00:25:56,852 - sync_service - ERROR - Shopify full response for store local: {'msg': 'failure', 'error': 'GraphQL query error for store local: '}
2025-07-09 00:25:56,852 - sync_service - ERROR - Failed to create product in store local: GraphQL query error for store local: 
2025-07-09 00:25:57,356 - sync_service - INFO - Sync Event: {'sync_type': 'multi_store_new_items_sap_to_shopify', 'items_processed': 1, 'success_count': 0, 'error_count': 1, 'details': None}
2025-07-09 00:25:57,356 - sync_service - INFO - Multi-store new items sync completed: 1 processed, 0 successful, 1 errors
2025-07-09 00:28:51,016 - sync_service - INFO - Initialized Shopify client for store: Local Store (local)
2025-07-09 00:28:51,022 - sync_service - INFO - Starting multi-store new items sync from SAP to Shopify
2025-07-09 00:28:51,023 - sync_service - INFO - Fetching new items for store: local
2025-07-09 00:28:51,024 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'login', 'request': {'company': 'JudeBenHalim_Test', 'user': 'manager'}, 'response': None, 'status': None}
2025-07-09 00:28:51,596 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'login', 'request': None, 'response': {'status': 'success'}, 'status': 'success'}
2025-07-09 00:28:51,598 - sync_service - INFO - SAP login successful
2025-07-09 00:28:51,599 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': "view.svc/MASHURA_New_ItemsB1SLQuery?$filter=Shopify_Store eq 'local'&$orderby=MainProduct", 'request': {'method': 'GET', 'url': "https://10.0.0.100:50000/b1s/v1/view.svc/MASHURA_New_ItemsB1SLQuery?$filter=Shopify_Store eq 'local'&$orderby=MainProduct", 'data': None, 'params': None}, 'response': None, 'status': None}
2025-07-09 00:28:52,396 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': "view.svc/MASHURA_New_ItemsB1SLQuery?$filter=Shopify_Store eq 'local'&$orderby=MainProduct", 'request': None, 'response': {'odata.metadata': 'https://10.0.0.100:50000/b1s/v1/view.svc/$metadata#MASHURA_New_ItemsB1SLQuery', 'value': [{'itemcode': 'FG-0000701', 'ItemName': 'Morsi-Black-Gold', 'MainProduct': 'Morsi Necklace', 'Color': 'Black Gold', 'OnHand': 10.0, 'IsCommited': 0.0, 'Available': 10.0, 'Price': 2500.0, 'Status': 'new', 'Shopify_ProductCode': '', 'Shopify_Store': 'local', 'id__': 1}, {'itemcode': 'FG-0000702', 'ItemName': 'Morsi-Rose-Gold', 'MainProduct': 'Morsi Necklace', 'Color': 'Rose Gold', 'OnHand': 15.0, 'IsCommited': 0.0, 'Available': 15.0, 'Price': 2500.0, 'Status': 'new', 'Shopify_ProductCode': '', 'Shopify_Store': 'local', 'id__': 2}, {'itemcode': 'FG-0000703', 'ItemName': 'Morsi-White-Gold', 'MainProduct': 'Morsi Necklace', 'Color': 'White Gold', 'OnHand': 20.0, 'IsCommited': 0.0, 'Available': 20.0, 'Price': 2500.0, 'Status': 'new', 'Shopify_ProductCode': '', 'Shopify_Store': 'local', 'id__': 3}]}, 'status': 'success'}
2025-07-09 00:28:52,397 - sync_service - INFO - Product group: ('Morsi Necklace', 'local') has 3 items
2025-07-09 00:28:52,398 - sync_service - INFO - Grouped 3 items into 1 product groups for store local
2025-07-09 00:28:52,398 - sync_service - INFO - Processing product group: ('Morsi Necklace', 'local') with 3 items for store local
2025-07-09 00:28:52,398 - sync_service - INFO - API Call: {'service': 'shopify', 'endpoint': 'graphql_local', 'request': {'query': '\n        mutation productCreate($input: ProductInput!) {\n            productCreate(input: $input) {\n                product {\n                    id\n                    title\n                    handle\n                    variants(first: 50) {\n                        edges {\n                            node {\n                                id\n                                sku\n                                inventoryItem {\n                                    id\n                                }\n                                selectedOptions {\n                                    name\n                                    value\n                                }\n                            }\n                        }\n                    }\n                }\n                userErrors {\n                    field\n                    message\n                }\n            }\n        }\n        ', 'variables': {'input': {'title': 'Morsi-Black-Gold', 'status': 'DRAFT', 'options': ['Color'], 'variants': [{'options': ['Black Gold'], 'sku': 'FG-0000701'}]}}}, 'response': None, 'status': None}
2025-07-09 00:28:53,097 - sync_service - INFO - API Call: {'service': 'shopify', 'endpoint': 'graphql_local', 'request': None, 'response': {'productCreate': {'product': {'id': 'gid://shopify/Product/7510099329090', 'title': 'Morsi-Black-Gold', 'handle': 'morsi-black-gold', 'variants': {'edges': [{'node': {'id': 'gid://shopify/ProductVariant/42293401256002', 'sku': 'FG-0000701', 'inventoryItem': {'id': 'gid://shopify/InventoryItem/44394529521730'}, 'selectedOptions': [{'name': 'Color', 'value': 'Black Gold'}]}}]}}, 'userErrors': []}}, 'status': 'success'}
2025-07-09 00:28:53,098 - sync_service - ERROR - Shopify full response for store local: {'msg': 'success', 'data': {'productCreate': {'product': {'id': 'gid://shopify/Product/7510099329090', 'title': 'Morsi-Black-Gold', 'handle': 'morsi-black-gold', 'variants': {'edges': [{'node': {'id': 'gid://shopify/ProductVariant/42293401256002', 'sku': 'FG-0000701', 'inventoryItem': {'id': 'gid://shopify/InventoryItem/44394529521730'}, 'selectedOptions': [{'name': 'Color', 'value': 'Black Gold'}]}}]}}, 'userErrors': []}}}
2025-07-09 00:28:53,098 - sync_service - INFO - Successfully created product in store local
2025-07-09 00:28:53,604 - sync_service - INFO - Sync Event: {'sync_type': 'multi_store_new_items_sap_to_shopify', 'items_processed': 1, 'success_count': 1, 'error_count': 0, 'details': None}
2025-07-09 00:28:53,605 - sync_service - INFO - Multi-store new items sync completed: 1 processed, 1 successful, 0 errors
2025-07-09 00:34:44,571 - sync_service - INFO - Initialized Shopify client for store: Local Store (local)
2025-07-09 00:34:44,573 - sync_service - INFO - Starting multi-store new items sync from SAP to Shopify
2025-07-09 00:34:44,574 - sync_service - INFO - Fetching new items for store: local
2025-07-09 00:34:44,574 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'login', 'request': {'company': 'JudeBenHalim_Test', 'user': 'manager'}, 'response': None, 'status': None}
2025-07-09 00:34:45,168 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'login', 'request': None, 'response': {'status': 'success'}, 'status': 'success'}
2025-07-09 00:34:45,168 - sync_service - INFO - SAP login successful
2025-07-09 00:34:45,169 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': "view.svc/MASHURA_New_ItemsB1SLQuery?$filter=Shopify_Store eq 'local'&$orderby=MainProduct", 'request': {'method': 'GET', 'url': "https://10.0.0.100:50000/b1s/v1/view.svc/MASHURA_New_ItemsB1SLQuery?$filter=Shopify_Store eq 'local'&$orderby=MainProduct", 'data': None, 'params': None}, 'response': None, 'status': None}
2025-07-09 00:34:45,688 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': "view.svc/MASHURA_New_ItemsB1SLQuery?$filter=Shopify_Store eq 'local'&$orderby=MainProduct", 'request': None, 'response': {'odata.metadata': 'https://10.0.0.100:50000/b1s/v1/view.svc/$metadata#MASHURA_New_ItemsB1SLQuery', 'value': [{'itemcode': 'FG-0000701', 'ItemName': 'Morsi-Black-Gold', 'MainProduct': 'Morsi Necklace', 'Color': 'Black Gold', 'OnHand': 10.0, 'IsCommited': 0.0, 'Available': 10.0, 'Price': 2500.0, 'Status': 'new', 'Shopify_ProductCode': '', 'Shopify_Store': 'local', 'id__': 1}, {'itemcode': 'FG-0000702', 'ItemName': 'Morsi-Rose-Gold', 'MainProduct': 'Morsi Necklace', 'Color': 'Rose Gold', 'OnHand': 15.0, 'IsCommited': 0.0, 'Available': 15.0, 'Price': 2500.0, 'Status': 'new', 'Shopify_ProductCode': '', 'Shopify_Store': 'local', 'id__': 2}, {'itemcode': 'FG-0000703', 'ItemName': 'Morsi-White-Gold', 'MainProduct': 'Morsi Necklace', 'Color': 'White Gold', 'OnHand': 20.0, 'IsCommited': 0.0, 'Available': 20.0, 'Price': 2500.0, 'Status': 'new', 'Shopify_ProductCode': '', 'Shopify_Store': 'local', 'id__': 3}]}, 'status': 'success'}
2025-07-09 00:34:45,689 - sync_service - INFO - Product group: ('Morsi Necklace', 'local') has 3 items
2025-07-09 00:34:45,690 - sync_service - INFO - Grouped 3 items into 1 product groups for store local
2025-07-09 00:34:45,691 - sync_service - INFO - Processing product group: ('Morsi Necklace', 'local') with 3 items for store local
2025-07-09 00:34:45,691 - sync_service - INFO - API Call: {'service': 'shopify', 'endpoint': 'graphql_local', 'request': {'query': '\n        mutation productCreate($input: ProductInput!) {\n            productCreate(input: $input) {\n                product {\n                    id\n                    title\n                    handle\n                    variants(first: 50) {\n                        edges {\n                            node {\n                                id\n                                sku\n                                inventoryItem {\n                                    id\n                                }\n                                selectedOptions {\n                                    name\n                                    value\n                                }\n                            }\n                        }\n                    }\n                }\n                userErrors {\n                    field\n                    message\n                }\n            }\n        }\n        ', 'variables': {'input': {'title': 'Morsi Necklace', 'status': 'DRAFT', 'options': ['Color'], 'variants': [{'options': ['Black Gold'], 'sku': 'FG-0000701'}, {'options': ['Rose Gold'], 'sku': 'FG-0000702'}, {'options': ['White Gold'], 'sku': 'FG-0000703'}]}}}, 'response': None, 'status': None}
2025-07-09 00:34:46,445 - sync_service - INFO - API Call: {'service': 'shopify', 'endpoint': 'graphql_local', 'request': None, 'response': {'productCreate': {'product': {'id': 'gid://shopify/Product/7510100869186', 'title': 'Morsi Necklace', 'handle': 'morsi-necklace', 'variants': {'edges': [{'node': {'id': 'gid://shopify/ProductVariant/42293419475010', 'sku': 'FG-0000701', 'inventoryItem': {'id': 'gid://shopify/InventoryItem/44394547413058'}, 'selectedOptions': [{'name': 'Color', 'value': 'Black Gold'}]}}, {'node': {'id': 'gid://shopify/ProductVariant/42293419507778', 'sku': 'FG-0000702', 'inventoryItem': {'id': 'gid://shopify/InventoryItem/44394547445826'}, 'selectedOptions': [{'name': 'Color', 'value': 'Rose Gold'}]}}, {'node': {'id': 'gid://shopify/ProductVariant/42293419540546', 'sku': 'FG-0000703', 'inventoryItem': {'id': 'gid://shopify/InventoryItem/44394547478594'}, 'selectedOptions': [{'name': 'Color', 'value': 'White Gold'}]}}]}}, 'userErrors': []}}, 'status': 'success'}
2025-07-09 00:34:46,447 - sync_service - ERROR - Shopify full response for store local: {'msg': 'success', 'data': {'productCreate': {'product': {'id': 'gid://shopify/Product/7510100869186', 'title': 'Morsi Necklace', 'handle': 'morsi-necklace', 'variants': {'edges': [{'node': {'id': 'gid://shopify/ProductVariant/42293419475010', 'sku': 'FG-0000701', 'inventoryItem': {'id': 'gid://shopify/InventoryItem/44394547413058'}, 'selectedOptions': [{'name': 'Color', 'value': 'Black Gold'}]}}, {'node': {'id': 'gid://shopify/ProductVariant/42293419507778', 'sku': 'FG-0000702', 'inventoryItem': {'id': 'gid://shopify/InventoryItem/44394547445826'}, 'selectedOptions': [{'name': 'Color', 'value': 'Rose Gold'}]}}, {'node': {'id': 'gid://shopify/ProductVariant/42293419540546', 'sku': 'FG-0000703', 'inventoryItem': {'id': 'gid://shopify/InventoryItem/44394547478594'}, 'selectedOptions': [{'name': 'Color', 'value': 'White Gold'}]}}]}}, 'userErrors': []}}}
2025-07-09 00:34:46,448 - sync_service - INFO - Successfully created product in store local
2025-07-09 00:34:46,955 - sync_service - INFO - Sync Event: {'sync_type': 'multi_store_new_items_sap_to_shopify', 'items_processed': 1, 'success_count': 1, 'error_count': 0, 'details': None}
2025-07-09 00:34:46,957 - sync_service - INFO - Multi-store new items sync completed: 1 processed, 1 successful, 0 errors
2025-07-09 00:36:57,008 - sync_service - INFO - Initialized Shopify client for store: Local Store (local)
2025-07-09 00:36:57,010 - sync_service - INFO - Starting multi-store new items sync from SAP to Shopify
2025-07-09 00:36:57,010 - sync_service - INFO - Fetching new items for store: local
2025-07-09 00:36:57,011 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'login', 'request': {'company': 'JudeBenHalim_Test', 'user': 'manager'}, 'response': None, 'status': None}
2025-07-09 00:36:57,581 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'login', 'request': None, 'response': {'status': 'success'}, 'status': 'success'}
2025-07-09 00:36:57,583 - sync_service - INFO - SAP login successful
2025-07-09 00:36:57,584 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': "view.svc/MASHURA_New_ItemsB1SLQuery?$filter=Shopify_Store eq 'local'&$orderby=MainProduct", 'request': {'method': 'GET', 'url': "https://10.0.0.100:50000/b1s/v1/view.svc/MASHURA_New_ItemsB1SLQuery?$filter=Shopify_Store eq 'local'&$orderby=MainProduct", 'data': None, 'params': None}, 'response': None, 'status': None}
2025-07-09 00:36:58,092 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': "view.svc/MASHURA_New_ItemsB1SLQuery?$filter=Shopify_Store eq 'local'&$orderby=MainProduct", 'request': None, 'response': {'odata.metadata': 'https://10.0.0.100:50000/b1s/v1/view.svc/$metadata#MASHURA_New_ItemsB1SLQuery', 'value': [{'itemcode': 'FG-0000701', 'ItemName': 'Morsi-Black-Gold', 'MainProduct': 'Morsi Necklace', 'Color': 'Black Gold', 'OnHand': 10.0, 'IsCommited': 0.0, 'Available': 10.0, 'Price': 2500.0, 'Status': 'new', 'Shopify_ProductCode': '', 'Shopify_Store': 'local', 'id__': 1}, {'itemcode': 'FG-0000702', 'ItemName': 'Morsi-Rose-Gold', 'MainProduct': 'Morsi Necklace', 'Color': 'Rose Gold', 'OnHand': 15.0, 'IsCommited': 0.0, 'Available': 15.0, 'Price': 2500.0, 'Status': 'new', 'Shopify_ProductCode': '', 'Shopify_Store': 'local', 'id__': 2}, {'itemcode': 'FG-0000703', 'ItemName': 'Morsi-White-Gold', 'MainProduct': 'Morsi Necklace', 'Color': 'White Gold', 'OnHand': 20.0, 'IsCommited': 0.0, 'Available': 20.0, 'Price': 2500.0, 'Status': 'new', 'Shopify_ProductCode': '', 'Shopify_Store': 'local', 'id__': 3}]}, 'status': 'success'}
2025-07-09 00:36:58,093 - sync_service - INFO - Product group: ('Morsi Necklace', 'local') has 3 items
2025-07-09 00:36:58,094 - sync_service - INFO - Grouped 3 items into 1 product groups for store local
2025-07-09 00:36:58,094 - sync_service - INFO - Processing product group: ('Morsi Necklace', 'local') with 3 items for store local
2025-07-09 00:36:58,095 - sync_service - INFO - API Call: {'service': 'shopify', 'endpoint': 'graphql_local', 'request': {'query': '\n        mutation productCreate($input: ProductInput!) {\n            productCreate(input: $input) {\n                product {\n                    id\n                    title\n                    handle\n                    variants(first: 50) {\n                        edges {\n                            node {\n                                id\n                                sku\n                                inventoryItem {\n                                    id\n                                }\n                                selectedOptions {\n                                    name\n                                    value\n                                }\n                            }\n                        }\n                    }\n                }\n                userErrors {\n                    field\n                    message\n                }\n            }\n        }\n        ', 'variables': {'input': {'title': 'Morsi Necklace', 'status': 'DRAFT', 'options': ['Color'], 'variants': [{'options': ['Black Gold'], 'sku': 'FG-0000701', 'inventoryManagement': 'SHOPIFY', 'inventoryQuantities': [{'availableQuantity': 10, 'locationId': 'gid://shopify/Location/68605345858'}]}, {'options': ['Rose Gold'], 'sku': 'FG-0000702', 'inventoryManagement': 'SHOPIFY', 'inventoryQuantities': [{'availableQuantity': 15, 'locationId': 'gid://shopify/Location/68605345858'}]}, {'options': ['White Gold'], 'sku': 'FG-0000703', 'inventoryManagement': 'SHOPIFY', 'inventoryQuantities': [{'availableQuantity': 20, 'locationId': 'gid://shopify/Location/68605345858'}]}]}}}, 'response': None, 'status': None}
2025-07-09 00:36:58,794 - sync_service - INFO - API Call: {'service': 'shopify', 'endpoint': 'graphql_local', 'request': None, 'response': {'productCreate': {'product': {'id': 'gid://shopify/Product/7510101590082', 'title': 'Morsi Necklace', 'handle': 'morsi-necklace', 'variants': {'edges': [{'node': {'id': 'gid://shopify/ProductVariant/42293424586818', 'sku': 'FG-0000701', 'inventoryItem': {'id': 'gid://shopify/InventoryItem/44394552852546'}, 'selectedOptions': [{'name': 'Color', 'value': 'Black Gold'}]}}, {'node': {'id': 'gid://shopify/ProductVariant/42293424619586', 'sku': 'FG-0000702', 'inventoryItem': {'id': 'gid://shopify/InventoryItem/44394552885314'}, 'selectedOptions': [{'name': 'Color', 'value': 'Rose Gold'}]}}, {'node': {'id': 'gid://shopify/ProductVariant/42293424652354', 'sku': 'FG-0000703', 'inventoryItem': {'id': 'gid://shopify/InventoryItem/44394552918082'}, 'selectedOptions': [{'name': 'Color', 'value': 'White Gold'}]}}]}}, 'userErrors': []}}, 'status': 'success'}
2025-07-09 00:36:58,795 - sync_service - ERROR - Shopify full response for store local: {'msg': 'success', 'data': {'productCreate': {'product': {'id': 'gid://shopify/Product/7510101590082', 'title': 'Morsi Necklace', 'handle': 'morsi-necklace', 'variants': {'edges': [{'node': {'id': 'gid://shopify/ProductVariant/42293424586818', 'sku': 'FG-0000701', 'inventoryItem': {'id': 'gid://shopify/InventoryItem/44394552852546'}, 'selectedOptions': [{'name': 'Color', 'value': 'Black Gold'}]}}, {'node': {'id': 'gid://shopify/ProductVariant/42293424619586', 'sku': 'FG-0000702', 'inventoryItem': {'id': 'gid://shopify/InventoryItem/44394552885314'}, 'selectedOptions': [{'name': 'Color', 'value': 'Rose Gold'}]}}, {'node': {'id': 'gid://shopify/ProductVariant/42293424652354', 'sku': 'FG-0000703', 'inventoryItem': {'id': 'gid://shopify/InventoryItem/44394552918082'}, 'selectedOptions': [{'name': 'Color', 'value': 'White Gold'}]}}]}}, 'userErrors': []}}}
2025-07-09 00:36:58,796 - sync_service - INFO - Successfully created product in store local
2025-07-09 00:36:59,297 - sync_service - INFO - Sync Event: {'sync_type': 'multi_store_new_items_sap_to_shopify', 'items_processed': 1, 'success_count': 1, 'error_count': 0, 'details': None}
2025-07-09 00:36:59,298 - sync_service - INFO - Multi-store new items sync completed: 1 processed, 1 successful, 0 errors
2025-07-09 00:40:41,875 - sync_service - INFO - Initialized Shopify client for store: Local Store (local)
2025-07-09 00:40:41,877 - sync_service - INFO - Starting multi-store new items sync from SAP to Shopify
2025-07-09 00:40:41,878 - sync_service - INFO - Fetching new items for store: local
2025-07-09 00:40:41,879 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'login', 'request': {'company': 'JudeBenHalim_Test', 'user': 'manager'}, 'response': None, 'status': None}
2025-07-09 00:40:42,452 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'login', 'request': None, 'response': {'status': 'success'}, 'status': 'success'}
2025-07-09 00:40:42,452 - sync_service - INFO - SAP login successful
2025-07-09 00:40:42,453 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': "view.svc/MASHURA_New_ItemsB1SLQuery?$filter=Shopify_Store eq 'local'&$orderby=MainProduct", 'request': {'method': 'GET', 'url': "https://10.0.0.100:50000/b1s/v1/view.svc/MASHURA_New_ItemsB1SLQuery?$filter=Shopify_Store eq 'local'&$orderby=MainProduct", 'data': None, 'params': None}, 'response': None, 'status': None}
2025-07-09 00:40:42,962 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': "view.svc/MASHURA_New_ItemsB1SLQuery?$filter=Shopify_Store eq 'local'&$orderby=MainProduct", 'request': None, 'response': {'odata.metadata': 'https://10.0.0.100:50000/b1s/v1/view.svc/$metadata#MASHURA_New_ItemsB1SLQuery', 'value': [{'itemcode': 'FG-0000701', 'ItemName': 'Morsi-Black-Gold', 'MainProduct': 'Morsi Necklace', 'Color': 'Black Gold', 'OnHand': 10.0, 'IsCommited': 0.0, 'Available': 10.0, 'Price': 2500.0, 'Status': 'new', 'Shopify_ProductCode': '', 'Shopify_Store': 'local', 'id__': 1}, {'itemcode': 'FG-0000702', 'ItemName': 'Morsi-Rose-Gold', 'MainProduct': 'Morsi Necklace', 'Color': 'Rose Gold', 'OnHand': 15.0, 'IsCommited': 0.0, 'Available': 15.0, 'Price': 2500.0, 'Status': 'new', 'Shopify_ProductCode': '', 'Shopify_Store': 'local', 'id__': 2}, {'itemcode': 'FG-0000703', 'ItemName': 'Morsi-White-Gold', 'MainProduct': 'Morsi Necklace', 'Color': 'White Gold', 'OnHand': 20.0, 'IsCommited': 0.0, 'Available': 20.0, 'Price': 2500.0, 'Status': 'new', 'Shopify_ProductCode': '', 'Shopify_Store': 'local', 'id__': 3}]}, 'status': 'success'}
2025-07-09 00:40:42,963 - sync_service - INFO - Product group: ('Morsi Necklace', 'local') has 3 items
2025-07-09 00:40:42,964 - sync_service - INFO - Grouped 3 items into 1 product groups for store local
2025-07-09 00:40:42,964 - sync_service - INFO - Processing product group: ('Morsi Necklace', 'local') with 3 items for store local
2025-07-09 00:40:42,965 - sync_service - INFO - API Call: {'service': 'shopify', 'endpoint': 'graphql_local', 'request': {'query': '\n        mutation productCreate($input: ProductInput!) {\n            productCreate(input: $input) {\n                product {\n                    id\n                    title\n                    handle\n                    variants(first: 50) {\n                        edges {\n                            node {\n                                id\n                                sku\n                                inventoryItem {\n                                    id\n                                }\n                                selectedOptions {\n                                    name\n                                    value\n                                }\n                            }\n                        }\n                    }\n                }\n                userErrors {\n                    field\n                    message\n                }\n            }\n        }\n        ', 'variables': {'input': {'title': 'Morsi Necklace', 'status': 'DRAFT', 'options': ['Color'], 'variants': [{'options': ['Black Gold'], 'sku': 'FG-0000701', 'price': '2500.0', 'inventoryManagement': 'SHOPIFY', 'inventoryQuantities': [{'availableQuantity': 10, 'locationId': 'gid://shopify/Location/68605345858'}]}, {'options': ['Rose Gold'], 'sku': 'FG-0000702', 'price': '2500.0', 'inventoryManagement': 'SHOPIFY', 'inventoryQuantities': [{'availableQuantity': 15, 'locationId': 'gid://shopify/Location/68605345858'}]}, {'options': ['White Gold'], 'sku': 'FG-0000703', 'price': '2500.0', 'inventoryManagement': 'SHOPIFY', 'inventoryQuantities': [{'availableQuantity': 20, 'locationId': 'gid://shopify/Location/68605345858'}]}]}}}, 'response': None, 'status': None}
2025-07-09 00:40:43,742 - sync_service - INFO - API Call: {'service': 'shopify', 'endpoint': 'graphql_local', 'request': None, 'response': {'productCreate': {'product': {'id': 'gid://shopify/Product/7510103228482', 'title': 'Morsi Necklace', 'handle': 'morsi-necklace', 'variants': {'edges': [{'node': {'id': 'gid://shopify/ProductVariant/42293446541378', 'sku': 'FG-0000701', 'inventoryItem': {'id': 'gid://shopify/InventoryItem/44394574512194'}, 'selectedOptions': [{'name': 'Color', 'value': 'Black Gold'}]}}, {'node': {'id': 'gid://shopify/ProductVariant/42293446574146', 'sku': 'FG-0000702', 'inventoryItem': {'id': 'gid://shopify/InventoryItem/44394574544962'}, 'selectedOptions': [{'name': 'Color', 'value': 'Rose Gold'}]}}, {'node': {'id': 'gid://shopify/ProductVariant/42293446639682', 'sku': 'FG-0000703', 'inventoryItem': {'id': 'gid://shopify/InventoryItem/44394574577730'}, 'selectedOptions': [{'name': 'Color', 'value': 'White Gold'}]}}]}}, 'userErrors': []}}, 'status': 'success'}
2025-07-09 00:40:43,743 - sync_service - ERROR - Shopify full response for store local: {'msg': 'success', 'data': {'productCreate': {'product': {'id': 'gid://shopify/Product/7510103228482', 'title': 'Morsi Necklace', 'handle': 'morsi-necklace', 'variants': {'edges': [{'node': {'id': 'gid://shopify/ProductVariant/42293446541378', 'sku': 'FG-0000701', 'inventoryItem': {'id': 'gid://shopify/InventoryItem/44394574512194'}, 'selectedOptions': [{'name': 'Color', 'value': 'Black Gold'}]}}, {'node': {'id': 'gid://shopify/ProductVariant/42293446574146', 'sku': 'FG-0000702', 'inventoryItem': {'id': 'gid://shopify/InventoryItem/44394574544962'}, 'selectedOptions': [{'name': 'Color', 'value': 'Rose Gold'}]}}, {'node': {'id': 'gid://shopify/ProductVariant/42293446639682', 'sku': 'FG-0000703', 'inventoryItem': {'id': 'gid://shopify/InventoryItem/44394574577730'}, 'selectedOptions': [{'name': 'Color', 'value': 'White Gold'}]}}]}}, 'userErrors': []}}}
2025-07-09 00:40:43,744 - sync_service - INFO - Successfully created product in store local
2025-07-09 00:40:44,257 - sync_service - INFO - Sync Event: {'sync_type': 'multi_store_new_items_sap_to_shopify', 'items_processed': 1, 'success_count': 1, 'error_count': 0, 'details': None}
2025-07-09 00:40:44,257 - sync_service - INFO - Multi-store new items sync completed: 1 processed, 1 successful, 0 errors
2025-07-09 01:01:20,306 - sync_service - INFO - Initialized Shopify client for store: Local Store (local)
2025-07-09 01:01:20,310 - sync_service - INFO - Starting multi-store new items sync from SAP to Shopify
2025-07-09 01:01:20,310 - sync_service - INFO - Fetching new items for store: local
2025-07-09 01:01:20,312 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'login', 'request': {'company': 'JudeBenHalim_Test', 'user': 'manager'}, 'response': None, 'status': None}
2025-07-09 01:01:21,738 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'login', 'request': None, 'response': {'status': 'success'}, 'status': 'success'}
2025-07-09 01:01:21,740 - sync_service - INFO - SAP login successful
2025-07-09 01:01:21,741 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': "view.svc/MASHURA_New_ItemsB1SLQuery?$filter=Shopify_Store eq 'local'&$orderby=MainProduct", 'request': {'method': 'GET', 'url': "https://10.0.0.100:50000/b1s/v1/view.svc/MASHURA_New_ItemsB1SLQuery?$filter=Shopify_Store eq 'local'&$orderby=MainProduct", 'data': None, 'params': None}, 'response': None, 'status': None}
2025-07-09 01:01:22,251 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': "view.svc/MASHURA_New_ItemsB1SLQuery?$filter=Shopify_Store eq 'local'&$orderby=MainProduct", 'request': None, 'response': {'odata.metadata': 'https://10.0.0.100:50000/b1s/v1/view.svc/$metadata#MASHURA_New_ItemsB1SLQuery', 'value': [{'itemcode': 'FG-0000701', 'ItemName': 'Morsi-Black-Gold', 'MainProduct': 'Morsi Necklace', 'Color': 'Black Gold', 'OnHand': 10.0, 'IsCommited': 0.0, 'Available': 10.0, 'Price': 2500.0, 'Status': 'new', 'Shopify_ProductCode': '', 'Shopify_Store': 'local', 'id__': 1}, {'itemcode': 'FG-0000702', 'ItemName': 'Morsi-Rose-Gold', 'MainProduct': 'Morsi Necklace', 'Color': 'Rose Gold', 'OnHand': 15.0, 'IsCommited': 0.0, 'Available': 15.0, 'Price': 2500.0, 'Status': 'new', 'Shopify_ProductCode': '', 'Shopify_Store': 'local', 'id__': 2}, {'itemcode': 'FG-0000703', 'ItemName': 'Morsi-White-Gold', 'MainProduct': 'Morsi Necklace', 'Color': 'White Gold', 'OnHand': 20.0, 'IsCommited': 0.0, 'Available': 20.0, 'Price': 2500.0, 'Status': 'new', 'Shopify_ProductCode': '', 'Shopify_Store': 'local', 'id__': 3}]}, 'status': 'success'}
2025-07-09 01:01:22,253 - sync_service - INFO - Product group: ('Morsi Necklace', 'local') has 3 items
2025-07-09 01:01:22,255 - sync_service - INFO - Grouped 3 items into 1 product groups for store local
2025-07-09 01:01:22,255 - sync_service - INFO - Processing product group: ('Morsi Necklace', 'local') with 3 items for store local
2025-07-09 01:01:22,257 - sync_service - INFO - API Call: {'service': 'shopify', 'endpoint': 'graphql_local', 'request': {'query': '\n        mutation productCreate($input: ProductInput!) {\n            productCreate(input: $input) {\n                product {\n                    id\n                    title\n                    handle\n                    variants(first: 50) {\n                        edges {\n                            node {\n                                id\n                                sku\n                                inventoryItem {\n                                    id\n                                }\n                                selectedOptions {\n                                    name\n                                    value\n                                }\n                            }\n                        }\n                    }\n                }\n                userErrors {\n                    field\n                    message\n                }\n            }\n        }\n        ', 'variables': {'input': {'title': 'Morsi Necklace', 'status': 'DRAFT', 'options': ['Color'], 'variants': [{'options': ['Black Gold'], 'sku': 'FG-0000701', 'price': '2500.0', 'inventoryManagement': 'SHOPIFY', 'inventoryQuantities': [{'availableQuantity': 10, 'locationId': 'gid://shopify/Location/68605345858'}]}, {'options': ['Rose Gold'], 'sku': 'FG-0000702', 'price': '2500.0', 'inventoryManagement': 'SHOPIFY', 'inventoryQuantities': [{'availableQuantity': 15, 'locationId': 'gid://shopify/Location/68605345858'}]}, {'options': ['White Gold'], 'sku': 'FG-0000703', 'price': '2500.0', 'inventoryManagement': 'SHOPIFY', 'inventoryQuantities': [{'availableQuantity': 20, 'locationId': 'gid://shopify/Location/68605345858'}]}]}}}, 'response': None, 'status': None}
2025-07-09 01:01:23,589 - sync_service - INFO - API Call: {'service': 'shopify', 'endpoint': 'graphql_local', 'request': None, 'response': {'productCreate': {'product': {'id': 'gid://shopify/Product/7510108733506', 'title': 'Morsi Necklace', 'handle': 'morsi-necklace-1', 'variants': {'edges': [{'node': {'id': 'gid://shopify/ProductVariant/42293507063874', 'sku': 'FG-0000701', 'inventoryItem': {'id': 'gid://shopify/InventoryItem/44394637557826'}, 'selectedOptions': [{'name': 'Color', 'value': 'Black Gold'}]}}, {'node': {'id': 'gid://shopify/ProductVariant/42293507096642', 'sku': 'FG-0000702', 'inventoryItem': {'id': 'gid://shopify/InventoryItem/44394637590594'}, 'selectedOptions': [{'name': 'Color', 'value': 'Rose Gold'}]}}, {'node': {'id': 'gid://shopify/ProductVariant/42293507129410', 'sku': 'FG-0000703', 'inventoryItem': {'id': 'gid://shopify/InventoryItem/44394637623362'}, 'selectedOptions': [{'name': 'Color', 'value': 'White Gold'}]}}]}}, 'userErrors': []}}, 'status': 'success'}
2025-07-09 01:01:23,590 - sync_service - ERROR - Shopify full response for store local: {'msg': 'success', 'data': {'productCreate': {'product': {'id': 'gid://shopify/Product/7510108733506', 'title': 'Morsi Necklace', 'handle': 'morsi-necklace-1', 'variants': {'edges': [{'node': {'id': 'gid://shopify/ProductVariant/42293507063874', 'sku': 'FG-0000701', 'inventoryItem': {'id': 'gid://shopify/InventoryItem/44394637557826'}, 'selectedOptions': [{'name': 'Color', 'value': 'Black Gold'}]}}, {'node': {'id': 'gid://shopify/ProductVariant/42293507096642', 'sku': 'FG-0000702', 'inventoryItem': {'id': 'gid://shopify/InventoryItem/44394637590594'}, 'selectedOptions': [{'name': 'Color', 'value': 'Rose Gold'}]}}, {'node': {'id': 'gid://shopify/ProductVariant/42293507129410', 'sku': 'FG-0000703', 'inventoryItem': {'id': 'gid://shopify/InventoryItem/44394637623362'}, 'selectedOptions': [{'name': 'Color', 'value': 'White Gold'}]}}]}}, 'userErrors': []}}}
2025-07-09 01:01:23,591 - sync_service - INFO - Successfully created product in store local
2025-07-09 01:01:23,591 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'U_SHOPIFY_MAPPING', 'request': {'method': 'POST', 'url': 'https://10.0.0.100:50000/b1s/v1/U_SHOPIFY_MAPPING', 'data': {'Code': '7510108733506', 'Name': '7510108733506', 'U_Shopify_Type': 'product', 'U_SAP_Code': 'Morsi Necklace', 'U_Shopify_Store': 'local', 'U_SAP_Type': 'item'}, 'params': None}, 'response': None, 'status': None}
2025-07-09 01:01:23,724 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'U_SHOPIFY_MAPPING', 'request': None, 'response': {'odata.metadata': 'https://10.0.0.100:50000/b1s/v1/$metadata#U_SHOPIFY_MAPPING/@Element', 'Code': '7510108733506', 'Name': '7510108733506', 'U_Shopify_Type': 'product', 'U_SAP_Code': 'Morsi Necklace', 'U_SAP_Type': 'item', 'U_Shopify_Store': 'local'}, 'status': 'success'}
2025-07-09 01:01:23,727 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'U_SHOPIFY_MAPPING', 'request': {'method': 'POST', 'url': 'https://10.0.0.100:50000/b1s/v1/U_SHOPIFY_MAPPING', 'data': {'Code': '42293507063874', 'Name': '42293507063874', 'U_Shopify_Type': 'variant', 'U_SAP_Code': 'FG-0000701', 'U_Shopify_Store': 'local', 'U_SAP_Type': 'item'}, 'params': None}, 'response': None, 'status': None}
2025-07-09 01:01:24,633 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'U_SHOPIFY_MAPPING', 'request': None, 'response': {'odata.metadata': 'https://10.0.0.100:50000/b1s/v1/$metadata#U_SHOPIFY_MAPPING/@Element', 'Code': '42293507063874', 'Name': '42293507063874', 'U_Shopify_Type': 'variant', 'U_SAP_Code': 'FG-0000701', 'U_SAP_Type': 'item', 'U_Shopify_Store': 'local'}, 'status': 'success'}
2025-07-09 01:01:24,633 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'U_SHOPIFY_MAPPING', 'request': {'method': 'POST', 'url': 'https://10.0.0.100:50000/b1s/v1/U_SHOPIFY_MAPPING', 'data': {'Code': '44394637557826', 'Name': '44394637557826', 'U_Shopify_Type': 'variant_inventory', 'U_SAP_Code': 'FG-0000701', 'U_Shopify_Store': 'local', 'U_SAP_Type': 'item'}, 'params': None}, 'response': None, 'status': None}
2025-07-09 01:01:24,741 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'U_SHOPIFY_MAPPING', 'request': None, 'response': {'odata.metadata': 'https://10.0.0.100:50000/b1s/v1/$metadata#U_SHOPIFY_MAPPING/@Element', 'Code': '44394637557826', 'Name': '44394637557826', 'U_Shopify_Type': 'variant_inventory', 'U_SAP_Code': 'FG-0000701', 'U_SAP_Type': 'item', 'U_Shopify_Store': 'local'}, 'status': 'success'}
2025-07-09 01:01:24,744 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'U_SHOPIFY_MAPPING', 'request': {'method': 'POST', 'url': 'https://10.0.0.100:50000/b1s/v1/U_SHOPIFY_MAPPING', 'data': {'Code': '42293507096642', 'Name': '42293507096642', 'U_Shopify_Type': 'variant', 'U_SAP_Code': 'FG-0000702', 'U_Shopify_Store': 'local', 'U_SAP_Type': 'item'}, 'params': None}, 'response': None, 'status': None}
2025-07-09 01:01:24,843 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'U_SHOPIFY_MAPPING', 'request': None, 'response': {'odata.metadata': 'https://10.0.0.100:50000/b1s/v1/$metadata#U_SHOPIFY_MAPPING/@Element', 'Code': '42293507096642', 'Name': '42293507096642', 'U_Shopify_Type': 'variant', 'U_SAP_Code': 'FG-0000702', 'U_SAP_Type': 'item', 'U_Shopify_Store': 'local'}, 'status': 'success'}
2025-07-09 01:01:24,844 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'U_SHOPIFY_MAPPING', 'request': {'method': 'POST', 'url': 'https://10.0.0.100:50000/b1s/v1/U_SHOPIFY_MAPPING', 'data': {'Code': '44394637590594', 'Name': '44394637590594', 'U_Shopify_Type': 'variant_inventory', 'U_SAP_Code': 'FG-0000702', 'U_Shopify_Store': 'local', 'U_SAP_Type': 'item'}, 'params': None}, 'response': None, 'status': None}
2025-07-09 01:01:24,953 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'U_SHOPIFY_MAPPING', 'request': None, 'response': {'odata.metadata': 'https://10.0.0.100:50000/b1s/v1/$metadata#U_SHOPIFY_MAPPING/@Element', 'Code': '44394637590594', 'Name': '44394637590594', 'U_Shopify_Type': 'variant_inventory', 'U_SAP_Code': 'FG-0000702', 'U_SAP_Type': 'item', 'U_Shopify_Store': 'local'}, 'status': 'success'}
2025-07-09 01:01:24,954 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'U_SHOPIFY_MAPPING', 'request': {'method': 'POST', 'url': 'https://10.0.0.100:50000/b1s/v1/U_SHOPIFY_MAPPING', 'data': {'Code': '42293507129410', 'Name': '42293507129410', 'U_Shopify_Type': 'variant', 'U_SAP_Code': 'FG-0000703', 'U_Shopify_Store': 'local', 'U_SAP_Type': 'item'}, 'params': None}, 'response': None, 'status': None}
2025-07-09 01:01:25,051 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'U_SHOPIFY_MAPPING', 'request': None, 'response': {'odata.metadata': 'https://10.0.0.100:50000/b1s/v1/$metadata#U_SHOPIFY_MAPPING/@Element', 'Code': '42293507129410', 'Name': '42293507129410', 'U_Shopify_Type': 'variant', 'U_SAP_Code': 'FG-0000703', 'U_SAP_Type': 'item', 'U_Shopify_Store': 'local'}, 'status': 'success'}
2025-07-09 01:01:25,053 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'U_SHOPIFY_MAPPING', 'request': {'method': 'POST', 'url': 'https://10.0.0.100:50000/b1s/v1/U_SHOPIFY_MAPPING', 'data': {'Code': '44394637623362', 'Name': '44394637623362', 'U_Shopify_Type': 'variant_inventory', 'U_SAP_Code': 'FG-0000703', 'U_Shopify_Store': 'local', 'U_SAP_Type': 'item'}, 'params': None}, 'response': None, 'status': None}
2025-07-09 01:01:25,151 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'U_SHOPIFY_MAPPING', 'request': None, 'response': {'odata.metadata': 'https://10.0.0.100:50000/b1s/v1/$metadata#U_SHOPIFY_MAPPING/@Element', 'Code': '44394637623362', 'Name': '44394637623362', 'U_Shopify_Type': 'variant_inventory', 'U_SAP_Code': 'FG-0000703', 'U_SAP_Type': 'item', 'U_Shopify_Store': 'local'}, 'status': 'success'}
2025-07-09 01:01:25,657 - sync_service - INFO - Sync Event: {'sync_type': 'multi_store_new_items_sap_to_shopify', 'items_processed': 1, 'success_count': 1, 'error_count': 0, 'details': None}
2025-07-09 01:01:25,657 - sync_service - INFO - Multi-store new items sync completed: 1 processed, 1 successful, 0 errors
2025-07-09 15:44:15,683 - sync_service - INFO - Initialized Shopify client for store: Local Store (local)
2025-07-09 15:44:22,768 - sync_service - INFO - Initialized Shopify client for store: Local Store (local)
2025-07-09 15:44:23,008 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'login', 'request': {'company': 'JudeBenHalim_Test', 'user': 'manager'}, 'response': None, 'status': None}
2025-07-09 15:44:23,144 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'login', 'request': {'company': 'JudeBenHalim_Test', 'user': 'manager'}, 'response': None, 'status': None}
2025-07-09 15:44:23,179 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'login', 'request': {'company': 'JudeBenHalim_Test', 'user': 'manager'}, 'response': None, 'status': None}
2025-07-09 15:44:23,184 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'login', 'request': {'company': 'JudeBenHalim_Test', 'user': 'manager'}, 'response': None, 'status': None}
2025-07-09 15:44:23,191 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'login', 'request': {'company': 'JudeBenHalim_Test', 'user': 'manager'}, 'response': None, 'status': None}
2025-07-09 15:44:23,193 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'login', 'request': {'company': 'JudeBenHalim_Test', 'user': 'manager'}, 'response': None, 'status': None}
2025-07-09 15:44:23,193 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'login', 'request': {'company': 'JudeBenHalim_Test', 'user': 'manager'}, 'response': None, 'status': None}
2025-07-09 15:44:23,195 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'login', 'request': {'company': 'JudeBenHalim_Test', 'user': 'manager'}, 'response': None, 'status': None}
2025-07-09 15:44:23,204 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'login', 'request': {'company': 'JudeBenHalim_Test', 'user': 'manager'}, 'response': None, 'status': None}
2025-07-09 15:44:23,311 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'login', 'request': {'company': 'JudeBenHalim_Test', 'user': 'manager'}, 'response': None, 'status': None}
2025-07-09 15:44:23,332 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'login', 'request': {'company': 'JudeBenHalim_Test', 'user': 'manager'}, 'response': None, 'status': None}
2025-07-09 15:44:23,339 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'login', 'request': {'company': 'JudeBenHalim_Test', 'user': 'manager'}, 'response': None, 'status': None}
2025-07-09 15:44:23,341 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'login', 'request': {'company': 'JudeBenHalim_Test', 'user': 'manager'}, 'response': None, 'status': None}
2025-07-09 15:44:23,342 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'login', 'request': {'company': 'JudeBenHalim_Test', 'user': 'manager'}, 'response': None, 'status': None}
2025-07-09 15:44:23,345 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'login', 'request': {'company': 'JudeBenHalim_Test', 'user': 'manager'}, 'response': None, 'status': None}
2025-07-09 15:44:23,355 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'login', 'request': {'company': 'JudeBenHalim_Test', 'user': 'manager'}, 'response': None, 'status': None}
2025-07-09 15:44:23,559 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'login', 'request': {'company': 'JudeBenHalim_Test', 'user': 'manager'}, 'response': None, 'status': None}
2025-07-09 15:44:23,576 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'login', 'request': {'company': 'JudeBenHalim_Test', 'user': 'manager'}, 'response': None, 'status': None}
2025-07-09 15:44:23,595 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'login', 'request': {'company': 'JudeBenHalim_Test', 'user': 'manager'}, 'response': None, 'status': None}
2025-07-09 15:44:23,776 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'login', 'request': {'company': 'JudeBenHalim_Test', 'user': 'manager'}, 'response': None, 'status': None}
2025-07-09 15:44:23,809 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'login', 'request': {'company': 'JudeBenHalim_Test', 'user': 'manager'}, 'response': None, 'status': None}
2025-07-09 15:44:23,812 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'login', 'request': {'company': 'JudeBenHalim_Test', 'user': 'manager'}, 'response': None, 'status': None}
2025-07-09 15:44:23,813 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'login', 'request': {'company': 'JudeBenHalim_Test', 'user': 'manager'}, 'response': None, 'status': None}
2025-07-09 15:44:23,814 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'login', 'request': {'company': 'JudeBenHalim_Test', 'user': 'manager'}, 'response': None, 'status': None}
2025-07-09 15:44:23,816 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'login', 'request': {'company': 'JudeBenHalim_Test', 'user': 'manager'}, 'response': None, 'status': None}
2025-07-09 15:44:23,817 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'login', 'request': {'company': 'JudeBenHalim_Test', 'user': 'manager'}, 'response': None, 'status': None}
2025-07-09 15:44:23,827 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'login', 'request': {'company': 'JudeBenHalim_Test', 'user': 'manager'}, 'response': None, 'status': None}
2025-07-09 15:44:23,828 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'login', 'request': {'company': 'JudeBenHalim_Test', 'user': 'manager'}, 'response': None, 'status': None}
2025-07-09 15:44:23,830 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'login', 'request': {'company': 'JudeBenHalim_Test', 'user': 'manager'}, 'response': None, 'status': None}
2025-07-09 15:44:23,833 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'login', 'request': {'company': 'JudeBenHalim_Test', 'user': 'manager'}, 'response': None, 'status': None}
2025-07-09 15:44:24,005 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'login', 'request': {'company': 'JudeBenHalim_Test', 'user': 'manager'}, 'response': None, 'status': None}
2025-07-09 15:44:24,026 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'login', 'request': {'company': 'JudeBenHalim_Test', 'user': 'manager'}, 'response': None, 'status': None}
2025-07-09 15:44:24,055 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'login', 'request': {'company': 'JudeBenHalim_Test', 'user': 'manager'}, 'response': None, 'status': None}
2025-07-09 15:44:24,058 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'login', 'request': {'company': 'JudeBenHalim_Test', 'user': 'manager'}, 'response': None, 'status': None}
2025-07-09 15:44:24,060 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'login', 'request': {'company': 'JudeBenHalim_Test', 'user': 'manager'}, 'response': None, 'status': None}
2025-07-09 15:44:24,061 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'login', 'request': {'company': 'JudeBenHalim_Test', 'user': 'manager'}, 'response': None, 'status': None}
2025-07-09 15:44:24,062 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'login', 'request': {'company': 'JudeBenHalim_Test', 'user': 'manager'}, 'response': None, 'status': None}
2025-07-09 15:44:24,066 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'login', 'request': {'company': 'JudeBenHalim_Test', 'user': 'manager'}, 'response': None, 'status': None}
2025-07-09 15:44:24,186 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'login', 'request': {'company': 'JudeBenHalim_Test', 'user': 'manager'}, 'response': None, 'status': None}
2025-07-09 15:44:24,208 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'login', 'request': {'company': 'JudeBenHalim_Test', 'user': 'manager'}, 'response': None, 'status': None}
2025-07-09 15:44:24,212 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'login', 'request': {'company': 'JudeBenHalim_Test', 'user': 'manager'}, 'response': None, 'status': None}
2025-07-09 15:44:24,221 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'login', 'request': {'company': 'JudeBenHalim_Test', 'user': 'manager'}, 'response': None, 'status': None}
2025-07-09 15:44:24,233 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'login', 'request': {'company': 'JudeBenHalim_Test', 'user': 'manager'}, 'response': None, 'status': None}
2025-07-09 15:44:24,393 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'login', 'request': {'company': 'JudeBenHalim_Test', 'user': 'manager'}, 'response': None, 'status': None}
2025-07-09 15:44:24,402 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'login', 'request': {'company': 'JudeBenHalim_Test', 'user': 'manager'}, 'response': None, 'status': None}
2025-07-09 15:44:24,407 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'login', 'request': {'company': 'JudeBenHalim_Test', 'user': 'manager'}, 'response': None, 'status': None}
2025-07-09 15:44:24,408 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'login', 'request': {'company': 'JudeBenHalim_Test', 'user': 'manager'}, 'response': None, 'status': None}
2025-07-09 15:44:24,410 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'login', 'request': {'company': 'JudeBenHalim_Test', 'user': 'manager'}, 'response': None, 'status': None}
2025-07-09 15:44:24,410 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'login', 'request': {'company': 'JudeBenHalim_Test', 'user': 'manager'}, 'response': None, 'status': None}
2025-07-09 15:44:24,412 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'login', 'request': {'company': 'JudeBenHalim_Test', 'user': 'manager'}, 'response': None, 'status': None}
2025-07-09 15:44:24,426 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'login', 'request': {'company': 'JudeBenHalim_Test', 'user': 'manager'}, 'response': None, 'status': None}
2025-07-09 15:44:24,431 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'login', 'request': {'company': 'JudeBenHalim_Test', 'user': 'manager'}, 'response': None, 'status': None}
2025-07-09 15:44:24,457 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'login', 'request': {'company': 'JudeBenHalim_Test', 'user': 'manager'}, 'response': None, 'status': None}
2025-07-09 15:44:24,460 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'login', 'request': {'company': 'JudeBenHalim_Test', 'user': 'manager'}, 'response': None, 'status': None}
2025-07-09 15:44:24,461 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'login', 'request': {'company': 'JudeBenHalim_Test', 'user': 'manager'}, 'response': None, 'status': None}
2025-07-09 15:44:24,465 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'login', 'request': {'company': 'JudeBenHalim_Test', 'user': 'manager'}, 'response': None, 'status': None}
2025-07-09 15:44:24,627 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'login', 'request': {'company': 'JudeBenHalim_Test', 'user': 'manager'}, 'response': None, 'status': None}
2025-07-09 15:44:24,649 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'login', 'request': {'company': 'JudeBenHalim_Test', 'user': 'manager'}, 'response': None, 'status': None}
2025-07-09 15:44:24,661 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'login', 'request': {'company': 'JudeBenHalim_Test', 'user': 'manager'}, 'response': None, 'status': None}
2025-07-09 15:44:24,662 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'login', 'request': {'company': 'JudeBenHalim_Test', 'user': 'manager'}, 'response': None, 'status': None}
2025-07-09 15:44:24,795 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'login', 'request': {'company': 'JudeBenHalim_Test', 'user': 'manager'}, 'response': None, 'status': None}
2025-07-09 15:44:24,797 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'login', 'request': {'company': 'JudeBenHalim_Test', 'user': 'manager'}, 'response': None, 'status': None}
2025-07-09 15:44:24,799 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'login', 'request': {'company': 'JudeBenHalim_Test', 'user': 'manager'}, 'response': None, 'status': None}
2025-07-09 15:44:24,800 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'login', 'request': {'company': 'JudeBenHalim_Test', 'user': 'manager'}, 'response': None, 'status': None}
2025-07-09 15:44:24,802 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'login', 'request': {'company': 'JudeBenHalim_Test', 'user': 'manager'}, 'response': None, 'status': None}
2025-07-09 15:44:24,805 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'login', 'request': {'company': 'JudeBenHalim_Test', 'user': 'manager'}, 'response': None, 'status': None}
2025-07-09 15:44:24,806 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'login', 'request': {'company': 'JudeBenHalim_Test', 'user': 'manager'}, 'response': None, 'status': None}
2025-07-09 15:44:24,809 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'login', 'request': {'company': 'JudeBenHalim_Test', 'user': 'manager'}, 'response': None, 'status': None}
2025-07-09 15:44:24,810 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'login', 'request': {'company': 'JudeBenHalim_Test', 'user': 'manager'}, 'response': None, 'status': None}
2025-07-09 15:44:24,811 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'login', 'request': {'company': 'JudeBenHalim_Test', 'user': 'manager'}, 'response': None, 'status': None}
2025-07-09 15:44:24,812 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'login', 'request': {'company': 'JudeBenHalim_Test', 'user': 'manager'}, 'response': None, 'status': None}
2025-07-09 15:44:24,812 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'login', 'request': {'company': 'JudeBenHalim_Test', 'user': 'manager'}, 'response': None, 'status': None}
2025-07-09 15:44:24,813 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'login', 'request': {'company': 'JudeBenHalim_Test', 'user': 'manager'}, 'response': None, 'status': None}
2025-07-09 15:44:24,815 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'login', 'request': {'company': 'JudeBenHalim_Test', 'user': 'manager'}, 'response': None, 'status': None}
2025-07-09 15:44:24,815 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'login', 'request': {'company': 'JudeBenHalim_Test', 'user': 'manager'}, 'response': None, 'status': None}
2025-07-09 15:44:24,816 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'login', 'request': {'company': 'JudeBenHalim_Test', 'user': 'manager'}, 'response': None, 'status': None}
2025-07-09 15:44:24,816 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'login', 'request': {'company': 'JudeBenHalim_Test', 'user': 'manager'}, 'response': None, 'status': None}
2025-07-09 15:44:24,818 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'login', 'request': {'company': 'JudeBenHalim_Test', 'user': 'manager'}, 'response': None, 'status': None}
2025-07-09 15:44:24,819 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'login', 'request': {'company': 'JudeBenHalim_Test', 'user': 'manager'}, 'response': None, 'status': None}
2025-07-09 15:44:24,821 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'login', 'request': {'company': 'JudeBenHalim_Test', 'user': 'manager'}, 'response': None, 'status': None}
2025-07-09 15:44:24,823 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'login', 'request': {'company': 'JudeBenHalim_Test', 'user': 'manager'}, 'response': None, 'status': None}
2025-07-09 15:44:24,825 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'login', 'request': {'company': 'JudeBenHalim_Test', 'user': 'manager'}, 'response': None, 'status': None}
2025-07-09 15:44:24,825 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'login', 'request': {'company': 'JudeBenHalim_Test', 'user': 'manager'}, 'response': None, 'status': None}
2025-07-09 15:44:24,826 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'login', 'request': {'company': 'JudeBenHalim_Test', 'user': 'manager'}, 'response': None, 'status': None}
2025-07-09 15:44:24,828 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'login', 'request': {'company': 'JudeBenHalim_Test', 'user': 'manager'}, 'response': None, 'status': None}
2025-07-09 15:44:24,839 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'login', 'request': {'company': 'JudeBenHalim_Test', 'user': 'manager'}, 'response': None, 'status': None}
2025-07-09 15:44:24,843 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'login', 'request': {'company': 'JudeBenHalim_Test', 'user': 'manager'}, 'response': None, 'status': None}
2025-07-09 15:44:24,849 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'login', 'request': {'company': 'JudeBenHalim_Test', 'user': 'manager'}, 'response': None, 'status': None}
2025-07-09 15:44:24,854 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'login', 'request': {'company': 'JudeBenHalim_Test', 'user': 'manager'}, 'response': None, 'status': None}
2025-07-09 15:44:24,970 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'login', 'request': {'company': 'JudeBenHalim_Test', 'user': 'manager'}, 'response': None, 'status': None}
2025-07-09 15:44:24,972 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'login', 'request': {'company': 'JudeBenHalim_Test', 'user': 'manager'}, 'response': None, 'status': None}
2025-07-09 15:44:24,975 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'login', 'request': {'company': 'JudeBenHalim_Test', 'user': 'manager'}, 'response': None, 'status': None}
2025-07-09 15:44:24,976 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'login', 'request': {'company': 'JudeBenHalim_Test', 'user': 'manager'}, 'response': None, 'status': None}
2025-07-09 15:44:24,977 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'login', 'request': {'company': 'JudeBenHalim_Test', 'user': 'manager'}, 'response': None, 'status': None}
2025-07-09 15:44:24,977 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'login', 'request': {'company': 'JudeBenHalim_Test', 'user': 'manager'}, 'response': None, 'status': None}
2025-07-09 15:44:24,996 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'login', 'request': {'company': 'JudeBenHalim_Test', 'user': 'manager'}, 'response': None, 'status': None}
2025-07-09 15:44:24,998 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'login', 'request': {'company': 'JudeBenHalim_Test', 'user': 'manager'}, 'response': None, 'status': None}
2025-07-09 15:44:25,006 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'login', 'request': {'company': 'JudeBenHalim_Test', 'user': 'manager'}, 'response': None, 'status': None}
2025-07-09 15:44:25,009 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'login', 'request': {'company': 'JudeBenHalim_Test', 'user': 'manager'}, 'response': None, 'status': None}
2025-07-09 15:44:25,009 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'login', 'request': {'company': 'JudeBenHalim_Test', 'user': 'manager'}, 'response': None, 'status': None}
2025-07-09 15:44:25,011 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'login', 'request': {'company': 'JudeBenHalim_Test', 'user': 'manager'}, 'response': None, 'status': None}
2025-07-09 15:44:25,012 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'login', 'request': {'company': 'JudeBenHalim_Test', 'user': 'manager'}, 'response': None, 'status': None}
2025-07-09 15:44:25,013 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'login', 'request': {'company': 'JudeBenHalim_Test', 'user': 'manager'}, 'response': None, 'status': None}
2025-07-09 15:44:25,013 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'login', 'request': {'company': 'JudeBenHalim_Test', 'user': 'manager'}, 'response': None, 'status': None}
2025-07-09 15:44:25,015 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'login', 'request': {'company': 'JudeBenHalim_Test', 'user': 'manager'}, 'response': None, 'status': None}
2025-07-09 15:44:25,015 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'login', 'request': {'company': 'JudeBenHalim_Test', 'user': 'manager'}, 'response': None, 'status': None}
2025-07-09 15:44:25,016 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'login', 'request': {'company': 'JudeBenHalim_Test', 'user': 'manager'}, 'response': None, 'status': None}
2025-07-09 15:44:25,017 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'login', 'request': {'company': 'JudeBenHalim_Test', 'user': 'manager'}, 'response': None, 'status': None}
2025-07-09 15:44:25,019 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'login', 'request': {'company': 'JudeBenHalim_Test', 'user': 'manager'}, 'response': None, 'status': None}
2025-07-09 15:44:25,021 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'login', 'request': {'company': 'JudeBenHalim_Test', 'user': 'manager'}, 'response': None, 'status': None}
2025-07-09 15:44:25,022 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'login', 'request': {'company': 'JudeBenHalim_Test', 'user': 'manager'}, 'response': None, 'status': None}
2025-07-09 15:44:25,024 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'login', 'request': {'company': 'JudeBenHalim_Test', 'user': 'manager'}, 'response': None, 'status': None}
2025-07-09 15:44:25,026 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'login', 'request': {'company': 'JudeBenHalim_Test', 'user': 'manager'}, 'response': None, 'status': None}
2025-07-09 15:44:25,026 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'login', 'request': {'company': 'JudeBenHalim_Test', 'user': 'manager'}, 'response': None, 'status': None}
2025-07-09 15:44:25,027 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'login', 'request': {'company': 'JudeBenHalim_Test', 'user': 'manager'}, 'response': None, 'status': None}
2025-07-09 15:44:25,041 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'login', 'request': {'company': 'JudeBenHalim_Test', 'user': 'manager'}, 'response': None, 'status': None}
2025-07-09 15:44:25,044 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'login', 'request': {'company': 'JudeBenHalim_Test', 'user': 'manager'}, 'response': None, 'status': None}
2025-07-09 15:44:25,045 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'login', 'request': {'company': 'JudeBenHalim_Test', 'user': 'manager'}, 'response': None, 'status': None}
2025-07-09 15:44:25,051 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'login', 'request': {'company': 'JudeBenHalim_Test', 'user': 'manager'}, 'response': None, 'status': None}
2025-07-09 15:44:25,055 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'login', 'request': {'company': 'JudeBenHalim_Test', 'user': 'manager'}, 'response': None, 'status': None}
2025-07-09 15:44:25,060 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'login', 'request': {'company': 'JudeBenHalim_Test', 'user': 'manager'}, 'response': None, 'status': None}
2025-07-09 15:44:25,187 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'login', 'request': {'company': 'JudeBenHalim_Test', 'user': 'manager'}, 'response': None, 'status': None}
2025-07-09 15:44:25,218 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'login', 'request': {'company': 'JudeBenHalim_Test', 'user': 'manager'}, 'response': None, 'status': None}
2025-07-09 15:44:25,221 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'login', 'request': {'company': 'JudeBenHalim_Test', 'user': 'manager'}, 'response': None, 'status': None}
2025-07-09 15:44:25,222 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'login', 'request': {'company': 'JudeBenHalim_Test', 'user': 'manager'}, 'response': None, 'status': None}
2025-07-09 15:44:25,224 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'login', 'request': {'company': 'JudeBenHalim_Test', 'user': 'manager'}, 'response': None, 'status': None}
2025-07-09 15:44:25,225 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'login', 'request': {'company': 'JudeBenHalim_Test', 'user': 'manager'}, 'response': None, 'status': None}
2025-07-09 15:44:25,228 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'login', 'request': {'company': 'JudeBenHalim_Test', 'user': 'manager'}, 'response': None, 'status': None}
2025-07-09 15:44:25,230 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'login', 'request': {'company': 'JudeBenHalim_Test', 'user': 'manager'}, 'response': None, 'status': None}
2025-07-09 15:44:25,231 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'login', 'request': {'company': 'JudeBenHalim_Test', 'user': 'manager'}, 'response': None, 'status': None}
2025-07-09 15:44:25,233 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'login', 'request': {'company': 'JudeBenHalim_Test', 'user': 'manager'}, 'response': None, 'status': None}
2025-07-09 15:44:25,234 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'login', 'request': {'company': 'JudeBenHalim_Test', 'user': 'manager'}, 'response': None, 'status': None}
2025-07-09 15:44:25,236 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'login', 'request': {'company': 'JudeBenHalim_Test', 'user': 'manager'}, 'response': None, 'status': None}
2025-07-09 15:44:25,237 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'login', 'request': {'company': 'JudeBenHalim_Test', 'user': 'manager'}, 'response': None, 'status': None}
2025-07-09 15:44:25,239 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'login', 'request': {'company': 'JudeBenHalim_Test', 'user': 'manager'}, 'response': None, 'status': None}
2025-07-09 15:44:25,240 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'login', 'request': {'company': 'JudeBenHalim_Test', 'user': 'manager'}, 'response': None, 'status': None}
2025-07-09 15:44:25,243 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'login', 'request': {'company': 'JudeBenHalim_Test', 'user': 'manager'}, 'response': None, 'status': None}
2025-07-09 15:44:25,245 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'login', 'request': {'company': 'JudeBenHalim_Test', 'user': 'manager'}, 'response': None, 'status': None}
2025-07-09 15:44:25,248 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'login', 'request': {'company': 'JudeBenHalim_Test', 'user': 'manager'}, 'response': None, 'status': None}
2025-07-09 15:44:33,271 - sync_service - ERROR - Error logging API call to SAP: RetryError[<Future at 0x1f1e917d870 state=finished raised RecursionError>]
2025-07-09 15:44:33,275 - sync_service - ERROR - SAP login error: maximum recursion depth exceeded
2025-07-09 15:44:33,277 - sync_service - ERROR - Failed to add API log to SAP: Failed to login to SAP
2025-07-09 15:44:33,279 - sync_service - ERROR - SAP login error: maximum recursion depth exceeded while calling a Python object
2025-07-09 15:44:33,280 - sync_service - ERROR - Failed to add API log to SAP: Failed to login to SAP
2025-07-09 15:44:33,295 - sync_service - ERROR - SAP login error: maximum recursion depth exceeded while calling a Python object
2025-07-09 15:44:33,299 - sync_service - ERROR - Failed to add API log to SAP: Failed to login to SAP
2025-07-09 15:44:34,046 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'login', 'request': None, 'response': {'status': 'success'}, 'status': 'success'}
2025-07-09 15:44:34,050 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'U_API_LOG', 'request': {'method': 'POST', 'url': 'https://10.0.0.100:50000/b1s/v1/U_API_LOG', 'data': {'U_Server': 'sap', 'U_EndPoint': 'login', 'U_Request': '', 'U_Response': '{"status": "success"}', 'U_Status': 'success', 'U_Reference': '', 'U_LogDate': '2025-07-09', 'U_LogTime': '1544', 'U_Action': '', 'U_Value': ''}, 'params': None}, 'response': None, 'status': None}
2025-07-09 15:44:34,052 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'U_API_LOG', 'request': {'method': 'POST', 'url': 'https://10.0.0.100:50000/b1s/v1/U_API_LOG', 'data': {'U_Server': 'sap', 'U_EndPoint': 'U_API_LOG', 'U_Request': '{"method": "POST", "url": "https://10.0.0.100:50000/b1s/v1/U_API_LOG", "data": {"U_Server": "sap", "U_EndPoint": "login", "U_Request": "", "U_Response": "{\\"status\\": \\"success\\"}", "U_Status": "success", "U_Reference": "", "U_LogDate": "2025-07-09", "U_LogTime": "1544", "U_Action": "", "U_Value": ""}, "params": null}', 'U_Response': '', 'U_Status': 'success', 'U_Reference': '', 'U_LogDate': '2025-07-09', 'U_LogTime': '1544', 'U_Action': '', 'U_Value': ''}, 'params': None}, 'response': None, 'status': None}
2025-07-09 15:44:34,053 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'U_API_LOG', 'request': {'method': 'POST', 'url': 'https://10.0.0.100:50000/b1s/v1/U_API_LOG', 'data': {'U_Server': 'sap', 'U_EndPoint': 'U_API_LOG', 'U_Request': '{"method": "POST", "url": "https://10.0.0.100:50000/b1s/v1/U_API_LOG", "data": {"U_Server": "sap", "U_EndPoint": "U_API_LOG", "U_Request": "{\\"method\\": \\"POST\\", \\"url\\": \\"https://10.0.0.100:50000/b1s/v1/U_API_LOG\\", \\"data\\": {\\"U_Server\\": \\"sap\\", \\"U_EndPoint\\": \\"login\\", \\"U_Request\\": \\"\\", \\"U_Response\\": \\"{\\\\\\"status\\\\\\": \\\\\\"success\\\\\\"}\\", \\"U_Status\\": \\"success\\", \\"U_Reference\\": \\"\\", \\"U_LogDate\\": \\"2025-07-09\\", \\"U_LogTime\\": \\"1544\\", \\"U_Action\\": \\"\\", \\"U_Value\\": \\"\\"}, \\"params\\": null}", "U_Response": "", "U_Status": "success", "U_Reference": "", "U_LogDate": "2025-07-09", "U_LogTime": "1544", "U_Action": "", "U_Value": ""}, "params": null}', 'U_Response': '', 'U_Status': 'success', 'U_Reference': '', 'U_LogDate': '2025-07-09', 'U_LogTime': '1544', 'U_Action': '', 'U_Value': ''}, 'params': None}, 'response': None, 'status': None}
2025-07-09 15:44:34,054 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'U_API_LOG', 'request': {'method': 'POST', 'url': 'https://10.0.0.100:50000/b1s/v1/U_API_LOG', 'data': {'U_Server': 'sap', 'U_EndPoint': 'U_API_LOG', 'U_Request': '{"method": "POST", "url": "https://10.0.0.100:50000/b1s/v1/U_API_LOG", "data": {"U_Server": "sap", "U_EndPoint": "U_API_LOG", "U_Request": "{\\"method\\": \\"POST\\", \\"url\\": \\"https://10.0.0.100:50000/b1s/v1/U_API_LOG\\", \\"data\\": {\\"U_Server\\": \\"sap\\", \\"U_EndPoint\\": \\"U_API_LOG\\", \\"U_Request\\": \\"{\\\\\\"method\\\\\\": \\\\\\"POST\\\\\\", \\\\\\"url\\\\\\": \\\\\\"https://10.0.0.100:50000/b1s/v1/U_API_LOG\\\\\\", \\\\\\"data\\\\\\": {\\\\\\"U_Server\\\\\\": \\\\\\"sap\\\\\\", \\\\\\"U_EndPoint\\\\\\": \\\\\\"login\\\\\\", \\\\\\"U_Request\\\\\\": \\\\\\"\\\\\\", \\\\\\"U_Response\\\\\\": \\\\\\"{\\\\\\\\\\\\\\"status\\\\\\\\\\\\\\": \\\\\\\\\\\\\\"success\\\\\\\\\\\\\\"}\\\\\\", \\\\\\"U_Status\\\\\\": \\\\\\"success\\\\\\", \\\\\\"U_Reference\\\\\\": \\\\\\"\\\\\\", \\\\\\"U_LogDate\\\\\\": \\\\\\"2025-07-09\\\\\\", \\\\\\"U_LogTime\\\\\\": \\\\\\"1544\\\\\\", \\\\\\"U_Action\\\\\\": \\\\\\"\\\\\\", \\\\\\"U_Value\\\\\\": \\\\\\"\\\\\\"}, \\\\\\"params\\\\\\": null}\\", \\"U_Response\\": \\"\\", \\"U_Status\\": \\"success\\", \\"U_Reference\\": \\"\\", \\"U_LogDate\\": \\"2025-07-09\\", \\"U_LogTime\\": \\"1544\\", \\"U_Action\\": \\"\\", \\"U_Value\\": \\"\\"}, \\"params\\": null}", "U_Response": "", "U_Status": "success", "U_Reference": "", "U_LogDate": "2025-07-09", "U_LogTime": "1544", "U_Action": "", "U_Value": ""}, "params": null}', 'U_Response': '', 'U_Status': 'success', 'U_Reference': '', 'U_LogDate': '2025-07-09', 'U_LogTime': '1544', 'U_Action': '', 'U_Value': ''}, 'params': None}, 'response': None, 'status': None}
2025-07-09 15:44:34,055 - sync_service - ERROR - Error logging API call to SAP: maximum recursion depth exceeded while calling a Python object
2025-07-09 15:44:34,059 - sync_service - ERROR - Error logging API call to SAP: maximum recursion depth exceeded while calling a Python object
2025-07-09 15:44:34,060 - sync_service - ERROR - SAP request error: maximum recursion depth exceeded while calling a Python object
2025-07-09 15:44:34,061 - sync_service - ERROR - Error logging API call to SAP: maximum recursion depth exceeded while calling a Python object
2025-07-09 15:44:34,062 - sync_service - ERROR - Failed to add API log to SAP: SAP request error: maximum recursion depth exceeded while calling a Python object
2025-07-09 15:44:34,064 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'U_API_LOG', 'request': {'method': 'POST', 'url': 'https://10.0.0.100:50000/b1s/v1/U_API_LOG', 'data': {'U_Server': 'sap', 'U_EndPoint': 'U_API_LOG', 'U_Request': '{"method": "POST", "url": "https://10.0.0.100:50000/b1s/v1/U_API_LOG", "data": {"U_Server": "sap", "U_EndPoint": "U_API_LOG", "U_Request": "{\\"method\\": \\"POST\\", \\"url\\": \\"https://10.0.0.100:50000/b1s/v1/U_API_LOG\\", \\"data\\": {\\"U_Server\\": \\"sap\\", \\"U_EndPoint\\": \\"U_API_LOG\\", \\"U_Request\\": \\"{\\\\\\"method\\\\\\": \\\\\\"POST\\\\\\", \\\\\\"url\\\\\\": \\\\\\"https://10.0.0.100:50000/b1s/v1/U_API_LOG\\\\\\", \\\\\\"data\\\\\\": {\\\\\\"U_Server\\\\\\": \\\\\\"sap\\\\\\", \\\\\\"U_EndPoint\\\\\\": \\\\\\"login\\\\\\", \\\\\\"U_Request\\\\\\": \\\\\\"\\\\\\", \\\\\\"U_Response\\\\\\": \\\\\\"{\\\\\\\\\\\\\\"status\\\\\\\\\\\\\\": \\\\\\\\\\\\\\"success\\\\\\\\\\\\\\"}\\\\\\", \\\\\\"U_Status\\\\\\": \\\\\\"success\\\\\\", \\\\\\"U_Reference\\\\\\": \\\\\\"\\\\\\", \\\\\\"U_LogDate\\\\\\": \\\\\\"2025-07-09\\\\\\", \\\\\\"U_LogTime\\\\\\": \\\\\\"1544\\\\\\", \\\\\\"U_Action\\\\\\": \\\\\\"\\\\\\", \\\\\\"U_Value\\\\\\": \\\\\\"\\\\\\"}, \\\\\\"params\\\\\\": null}\\", \\"U_Response\\": \\"\\", \\"U_Status\\": \\"success\\", \\"U_Reference\\": \\"\\", \\"U_LogDate\\": \\"2025-07-09\\", \\"U_LogTime\\": \\"1544\\", \\"U_Action\\": \\"\\", \\"U_Value\\": \\"\\"}, \\"params\\": null}", "U_Response": "", "U_Status": "success", "U_Reference": "", "U_LogDate": "2025-07-09", "U_LogTime": "1544", "U_Action": "", "U_Value": ""}, "params": null}', 'U_Response': '', 'U_Status': 'success', 'U_Reference': '', 'U_LogDate': '2025-07-09', 'U_LogTime': '1544', 'U_Action': 'sap_post', 'U_Value': 'SAP POST request to U_API_LOG'}, 'params': None}, 'response': None, 'status': None}
2025-07-09 15:44:34,066 - sync_service - ERROR - Error logging API call to SAP: maximum recursion depth exceeded while calling a Python object
2025-07-09 15:44:34,068 - sync_service - ERROR - Error logging API call to SAP: maximum recursion depth exceeded while calling a Python object
2025-07-09 15:44:34,069 - sync_service - ERROR - SAP request error: maximum recursion depth exceeded while calling a Python object
2025-07-09 15:44:34,071 - sync_service - ERROR - Error logging API call to SAP: maximum recursion depth exceeded while calling a Python object
2025-07-09 15:44:34,071 - sync_service - ERROR - Failed to add API log to SAP: SAP request error: maximum recursion depth exceeded while calling a Python object
2025-07-09 15:44:34,076 - sync_service - ERROR - SAP request error: maximum recursion depth exceeded while calling a Python object
2025-07-09 15:44:34,077 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'U_API_LOG', 'request': {'method': 'POST', 'url': 'https://10.0.0.100:50000/b1s/v1/U_API_LOG', 'data': {'U_Server': 'sap', 'U_EndPoint': 'U_API_LOG', 'U_Request': '', 'U_Response': '{"error": "SAP request error: maximum recursion depth exceeded while calling a Python object"}', 'U_Status': 'failure', 'U_Reference': '', 'U_LogDate': '2025-07-09', 'U_LogTime': '1544', 'U_Action': 'sap_post_exception', 'U_Value': 'SAP POST request exception to U_API_LOG: maximum recursion depth exceeded while calling a Python object'}, 'params': None}, 'response': None, 'status': None}
2025-07-09 15:44:34,079 - sync_service - ERROR - Error logging API call to SAP: maximum recursion depth exceeded while calling a Python object
2025-07-09 15:44:34,080 - sync_service - ERROR - Error logging API call to SAP: maximum recursion depth exceeded while calling a Python object
2025-07-09 15:44:34,082 - sync_service - ERROR - SAP request error: maximum recursion depth exceeded while calling a Python object
2025-07-09 15:44:34,083 - sync_service - ERROR - Error logging API call to SAP: maximum recursion depth exceeded while calling a Python object
2025-07-09 15:44:34,084 - sync_service - ERROR - Failed to add API log to SAP: SAP request error: maximum recursion depth exceeded while calling a Python object
2025-07-09 15:44:34,084 - sync_service - ERROR - Failed to add API log to SAP: SAP request error: maximum recursion depth exceeded while calling a Python object
2025-07-09 15:44:34,085 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'U_API_LOG', 'request': {'method': 'POST', 'url': 'https://10.0.0.100:50000/b1s/v1/U_API_LOG', 'data': {'U_Server': 'sap', 'U_EndPoint': 'U_API_LOG', 'U_Request': '{"method": "POST", "url": "https://10.0.0.100:50000/b1s/v1/U_API_LOG", "data": {"U_Server": "sap", "U_EndPoint": "U_API_LOG", "U_Request": "{\\"method\\": \\"POST\\", \\"url\\": \\"https://10.0.0.100:50000/b1s/v1/U_API_LOG\\", \\"data\\": {\\"U_Server\\": \\"sap\\", \\"U_EndPoint\\": \\"login\\", \\"U_Request\\": \\"\\", \\"U_Response\\": \\"{\\\\\\"status\\\\\\": \\\\\\"success\\\\\\"}\\", \\"U_Status\\": \\"success\\", \\"U_Reference\\": \\"\\", \\"U_LogDate\\": \\"2025-07-09\\", \\"U_LogTime\\": \\"1544\\", \\"U_Action\\": \\"\\", \\"U_Value\\": \\"\\"}, \\"params\\": null}", "U_Response": "", "U_Status": "success", "U_Reference": "", "U_LogDate": "2025-07-09", "U_LogTime": "1544", "U_Action": "", "U_Value": ""}, "params": null}', 'U_Response': '', 'U_Status': 'success', 'U_Reference': '', 'U_LogDate': '2025-07-09', 'U_LogTime': '1544', 'U_Action': 'sap_post', 'U_Value': 'SAP POST request to U_API_LOG'}, 'params': None}, 'response': None, 'status': None}
2025-07-09 15:44:34,087 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'U_API_LOG', 'request': {'method': 'POST', 'url': 'https://10.0.0.100:50000/b1s/v1/U_API_LOG', 'data': {'U_Server': 'sap', 'U_EndPoint': 'U_API_LOG', 'U_Request': '{"method": "POST", "url": "https://10.0.0.100:50000/b1s/v1/U_API_LOG", "data": {"U_Server": "sap", "U_EndPoint": "U_API_LOG", "U_Request": "{\\"method\\": \\"POST\\", \\"url\\": \\"https://10.0.0.100:50000/b1s/v1/U_API_LOG\\", \\"data\\": {\\"U_Server\\": \\"sap\\", \\"U_EndPoint\\": \\"U_API_LOG\\", \\"U_Request\\": \\"{\\\\\\"method\\\\\\": \\\\\\"POST\\\\\\", \\\\\\"url\\\\\\": \\\\\\"https://10.0.0.100:50000/b1s/v1/U_API_LOG\\\\\\", \\\\\\"data\\\\\\": {\\\\\\"U_Server\\\\\\": \\\\\\"sap\\\\\\", \\\\\\"U_EndPoint\\\\\\": \\\\\\"login\\\\\\", \\\\\\"U_Request\\\\\\": \\\\\\"\\\\\\", \\\\\\"U_Response\\\\\\": \\\\\\"{\\\\\\\\\\\\\\"status\\\\\\\\\\\\\\": \\\\\\\\\\\\\\"success\\\\\\\\\\\\\\"}\\\\\\", \\\\\\"U_Status\\\\\\": \\\\\\"success\\\\\\", \\\\\\"U_Reference\\\\\\": \\\\\\"\\\\\\", \\\\\\"U_LogDate\\\\\\": \\\\\\"2025-07-09\\\\\\", \\\\\\"U_LogTime\\\\\\": \\\\\\"1544\\\\\\", \\\\\\"U_Action\\\\\\": \\\\\\"\\\\\\", \\\\\\"U_Value\\\\\\": \\\\\\"\\\\\\"}, \\\\\\"params\\\\\\": null}\\", \\"U_Response\\": \\"\\", \\"U_Status\\": \\"success\\", \\"U_Reference\\": \\"\\", \\"U_LogDate\\": \\"2025-07-09\\", \\"U_LogTime\\": \\"1544\\", \\"U_Action\\": \\"\\", \\"U_Value\\": \\"\\"}, \\"params\\": null}", "U_Response": "", "U_Status": "success", "U_Reference": "", "U_LogDate": "2025-07-09", "U_LogTime": "1544", "U_Action": "sap_post", "U_Value": "SAP POST request to U_API_LOG"}, "params": null}', 'U_Response': '', 'U_Status': 'success', 'U_Reference': '', 'U_LogDate': '2025-07-09', 'U_LogTime': '1544', 'U_Action': '', 'U_Value': ''}, 'params': None}, 'response': None, 'status': None}
2025-07-09 15:44:34,088 - sync_service - ERROR - Error logging API call to SAP: maximum recursion depth exceeded while calling a Python object
2025-07-09 15:44:34,091 - sync_service - ERROR - Error logging API call to SAP: maximum recursion depth exceeded while calling a Python object
2025-07-09 15:44:34,093 - sync_service - ERROR - SAP request error: maximum recursion depth exceeded while calling a Python object
2025-07-09 15:44:34,095 - sync_service - ERROR - Error logging API call to SAP: maximum recursion depth exceeded while calling a Python object
2025-07-09 15:44:34,095 - sync_service - ERROR - Failed to add API log to SAP: SAP request error: maximum recursion depth exceeded while calling a Python object
2025-07-09 15:44:34,096 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'U_API_LOG', 'request': {'method': 'POST', 'url': 'https://10.0.0.100:50000/b1s/v1/U_API_LOG', 'data': {'U_Server': 'sap', 'U_EndPoint': 'U_API_LOG', 'U_Request': '{"method": "POST", "url": "https://10.0.0.100:50000/b1s/v1/U_API_LOG", "data": {"U_Server": "sap", "U_EndPoint": "U_API_LOG", "U_Request": "{\\"method\\": \\"POST\\", \\"url\\": \\"https://10.0.0.100:50000/b1s/v1/U_API_LOG\\", \\"data\\": {\\"U_Server\\": \\"sap\\", \\"U_EndPoint\\": \\"U_API_LOG\\", \\"U_Request\\": \\"{\\\\\\"method\\\\\\": \\\\\\"POST\\\\\\", \\\\\\"url\\\\\\": \\\\\\"https://10.0.0.100:50000/b1s/v1/U_API_LOG\\\\\\", \\\\\\"data\\\\\\": {\\\\\\"U_Server\\\\\\": \\\\\\"sap\\\\\\", \\\\\\"U_EndPoint\\\\\\": \\\\\\"login\\\\\\", \\\\\\"U_Request\\\\\\": \\\\\\"\\\\\\", \\\\\\"U_Response\\\\\\": \\\\\\"{\\\\\\\\\\\\\\"status\\\\\\\\\\\\\\": \\\\\\\\\\\\\\"success\\\\\\\\\\\\\\"}\\\\\\", \\\\\\"U_Status\\\\\\": \\\\\\"success\\\\\\", \\\\\\"U_Reference\\\\\\": \\\\\\"\\\\\\", \\\\\\"U_LogDate\\\\\\": \\\\\\"2025-07-09\\\\\\", \\\\\\"U_LogTime\\\\\\": \\\\\\"1544\\\\\\", \\\\\\"U_Action\\\\\\": \\\\\\"\\\\\\", \\\\\\"U_Value\\\\\\": \\\\\\"\\\\\\"}, \\\\\\"params\\\\\\": null}\\", \\"U_Response\\": \\"\\", \\"U_Status\\": \\"success\\", \\"U_Reference\\": \\"\\", \\"U_LogDate\\": \\"2025-07-09\\", \\"U_LogTime\\": \\"1544\\", \\"U_Action\\": \\"\\", \\"U_Value\\": \\"\\"}, \\"params\\": null}", "U_Response": "", "U_Status": "success", "U_Reference": "", "U_LogDate": "2025-07-09", "U_LogTime": "1544", "U_Action": "sap_post", "U_Value": "SAP POST request to U_API_LOG"}, "params": null}', 'U_Response': '', 'U_Status': 'success', 'U_Reference': '', 'U_LogDate': '2025-07-09', 'U_LogTime': '1544', 'U_Action': 'sap_post', 'U_Value': 'SAP POST request to U_API_LOG'}, 'params': None}, 'response': None, 'status': None}
2025-07-09 15:44:34,100 - sync_service - ERROR - Error logging API call to SAP: maximum recursion depth exceeded while calling a Python object
2025-07-09 15:44:34,103 - sync_service - ERROR - Error logging API call to SAP: maximum recursion depth exceeded while calling a Python object
2025-07-09 15:44:34,105 - sync_service - ERROR - SAP request error: maximum recursion depth exceeded while calling a Python object
2025-07-09 15:44:34,106 - sync_service - ERROR - Error logging API call to SAP: maximum recursion depth exceeded while calling a Python object
2025-07-09 15:44:34,106 - sync_service - ERROR - Failed to add API log to SAP: SAP request error: maximum recursion depth exceeded while calling a Python object
2025-07-09 15:44:34,111 - sync_service - ERROR - SAP request error: maximum recursion depth exceeded while calling a Python object
2025-07-09 15:44:34,112 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'U_API_LOG', 'request': {'method': 'POST', 'url': 'https://10.0.0.100:50000/b1s/v1/U_API_LOG', 'data': {'U_Server': 'sap', 'U_EndPoint': 'U_API_LOG', 'U_Request': '', 'U_Response': '{"error": "SAP request error: maximum recursion depth exceeded while calling a Python object"}', 'U_Status': 'failure', 'U_Reference': '', 'U_LogDate': '2025-07-09', 'U_LogTime': '1544', 'U_Action': 'sap_post_exception', 'U_Value': 'SAP POST request exception to U_API_LOG: maximum recursion depth exceeded while calling a Python object'}, 'params': None}, 'response': None, 'status': None}
2025-07-09 15:44:34,113 - sync_service - ERROR - Error logging API call to SAP: maximum recursion depth exceeded while calling a Python object
2025-07-09 15:44:34,114 - sync_service - ERROR - Error logging API call to SAP: maximum recursion depth exceeded while calling a Python object
2025-07-09 15:44:34,116 - sync_service - ERROR - SAP request error: maximum recursion depth exceeded while calling a Python object
2025-07-09 15:44:34,118 - sync_service - ERROR - Error logging API call to SAP: maximum recursion depth exceeded while calling a Python object
2025-07-09 15:44:34,118 - sync_service - ERROR - Failed to add API log to SAP: SAP request error: maximum recursion depth exceeded while calling a Python object
2025-07-09 15:44:34,120 - sync_service - ERROR - Failed to add API log to SAP: SAP request error: maximum recursion depth exceeded while calling a Python object
2025-07-09 15:44:34,393 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'U_API_LOG', 'request': None, 'response': None, 'status': 'success'}
2025-07-09 15:44:34,394 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'U_API_LOG', 'request': {'method': 'POST', 'url': 'https://10.0.0.100:50000/b1s/v1/U_API_LOG', 'data': {'U_Server': 'sap', 'U_EndPoint': 'U_API_LOG', 'U_Request': '', 'U_Response': '', 'U_Status': 'success', 'U_Reference': '', 'U_LogDate': '2025-07-09', 'U_LogTime': '1544', 'U_Action': '', 'U_Value': ''}, 'params': None}, 'response': None, 'status': None}
2025-07-09 15:44:34,395 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'U_API_LOG', 'request': {'method': 'POST', 'url': 'https://10.0.0.100:50000/b1s/v1/U_API_LOG', 'data': {'U_Server': 'sap', 'U_EndPoint': 'U_API_LOG', 'U_Request': '{"method": "POST", "url": "https://10.0.0.100:50000/b1s/v1/U_API_LOG", "data": {"U_Server": "sap", "U_EndPoint": "U_API_LOG", "U_Request": "", "U_Response": "", "U_Status": "success", "U_Reference": "", "U_LogDate": "2025-07-09", "U_LogTime": "1544", "U_Action": "", "U_Value": ""}, "params": null}', 'U_Response': '', 'U_Status': 'success', 'U_Reference': '', 'U_LogDate': '2025-07-09', 'U_LogTime': '1544', 'U_Action': '', 'U_Value': ''}, 'params': None}, 'response': None, 'status': None}
2025-07-09 15:44:34,396 - sync_service - ERROR - Error logging API call to SAP: maximum recursion depth exceeded while calling a Python object
2025-07-09 15:44:34,398 - sync_service - ERROR - Error logging API call to SAP: maximum recursion depth exceeded while calling a Python object
2025-07-09 15:44:34,399 - sync_service - ERROR - SAP request error: maximum recursion depth exceeded while calling a Python object
2025-07-09 15:44:34,402 - sync_service - ERROR - Error logging API call to SAP: maximum recursion depth exceeded while calling a Python object
2025-07-09 15:44:34,403 - sync_service - ERROR - Failed to add API log to SAP: SAP request error: maximum recursion depth exceeded while calling a Python object
2025-07-09 15:44:34,404 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'U_API_LOG', 'request': {'method': 'POST', 'url': 'https://10.0.0.100:50000/b1s/v1/U_API_LOG', 'data': {'U_Server': 'sap', 'U_EndPoint': 'U_API_LOG', 'U_Request': '{"method": "POST", "url": "https://10.0.0.100:50000/b1s/v1/U_API_LOG", "data": {"U_Server": "sap", "U_EndPoint": "U_API_LOG", "U_Request": "", "U_Response": "", "U_Status": "success", "U_Reference": "", "U_LogDate": "2025-07-09", "U_LogTime": "1544", "U_Action": "", "U_Value": ""}, "params": null}', 'U_Response': '', 'U_Status': 'success', 'U_Reference': '', 'U_LogDate': '2025-07-09', 'U_LogTime': '1544', 'U_Action': 'sap_post', 'U_Value': 'SAP POST request to U_API_LOG'}, 'params': None}, 'response': None, 'status': None}
2025-07-09 15:44:34,407 - sync_service - ERROR - Error logging API call to SAP: maximum recursion depth exceeded while calling a Python object
2025-07-09 15:44:34,409 - sync_service - ERROR - Error logging API call to SAP: maximum recursion depth exceeded while calling a Python object
2025-07-09 15:44:34,410 - sync_service - ERROR - SAP request error: maximum recursion depth exceeded while calling a Python object
2025-07-09 15:44:34,411 - sync_service - ERROR - Error logging API call to SAP: maximum recursion depth exceeded while calling a Python object
2025-07-09 15:44:34,411 - sync_service - ERROR - Failed to add API log to SAP: SAP request error: maximum recursion depth exceeded while calling a Python object
2025-07-09 15:44:34,416 - sync_service - ERROR - SAP request error: maximum recursion depth exceeded while calling a Python object
2025-07-09 15:44:34,419 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'U_API_LOG', 'request': {'method': 'POST', 'url': 'https://10.0.0.100:50000/b1s/v1/U_API_LOG', 'data': {'U_Server': 'sap', 'U_EndPoint': 'U_API_LOG', 'U_Request': '', 'U_Response': '{"error": "SAP request error: maximum recursion depth exceeded while calling a Python object"}', 'U_Status': 'failure', 'U_Reference': '', 'U_LogDate': '2025-07-09', 'U_LogTime': '1544', 'U_Action': 'sap_post_exception', 'U_Value': 'SAP POST request exception to U_API_LOG: maximum recursion depth exceeded while calling a Python object'}, 'params': None}, 'response': None, 'status': None}
2025-07-09 15:44:34,421 - sync_service - ERROR - Error logging API call to SAP: maximum recursion depth exceeded while calling a Python object
2025-07-09 15:44:34,423 - sync_service - ERROR - Error logging API call to SAP: maximum recursion depth exceeded while calling a Python object
2025-07-09 15:44:34,425 - sync_service - ERROR - SAP request error: maximum recursion depth exceeded while calling a Python object
2025-07-09 15:44:34,427 - sync_service - ERROR - Error logging API call to SAP: maximum recursion depth exceeded while calling a Python object
2025-07-09 15:44:34,427 - sync_service - ERROR - Failed to add API log to SAP: SAP request error: maximum recursion depth exceeded while calling a Python object
2025-07-09 15:44:34,427 - sync_service - ERROR - Failed to add API log to SAP: SAP request error: maximum recursion depth exceeded while calling a Python object
2025-07-09 15:44:34,428 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'U_API_LOG', 'request': {'method': 'POST', 'url': 'https://10.0.0.100:50000/b1s/v1/U_API_LOG', 'data': {'U_Server': 'sap', 'U_EndPoint': 'U_API_LOG', 'U_Request': '', 'U_Response': '', 'U_Status': 'success', 'U_Reference': '', 'U_LogDate': '2025-07-09', 'U_LogTime': '1544', 'U_Action': 'sap_post_success', 'U_Value': 'SAP POST request successful to U_API_LOG'}, 'params': None}, 'response': None, 'status': None}
2025-07-09 15:44:34,428 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'U_API_LOG', 'request': {'method': 'POST', 'url': 'https://10.0.0.100:50000/b1s/v1/U_API_LOG', 'data': {'U_Server': 'sap', 'U_EndPoint': 'U_API_LOG', 'U_Request': '{"method": "POST", "url": "https://10.0.0.100:50000/b1s/v1/U_API_LOG", "data": {"U_Server": "sap", "U_EndPoint": "U_API_LOG", "U_Request": "", "U_Response": "", "U_Status": "success", "U_Reference": "", "U_LogDate": "2025-07-09", "U_LogTime": "1544", "U_Action": "sap_post_success", "U_Value": "SAP POST request successful to U_API_LOG"}, "params": null}', 'U_Response': '', 'U_Status': 'success', 'U_Reference': '', 'U_LogDate': '2025-07-09', 'U_LogTime': '1544', 'U_Action': '', 'U_Value': ''}, 'params': None}, 'response': None, 'status': None}
2025-07-09 15:44:34,430 - sync_service - ERROR - Error logging API call to SAP: maximum recursion depth exceeded while calling a Python object
2025-07-09 15:44:34,432 - sync_service - ERROR - Error logging API call to SAP: maximum recursion depth exceeded while calling a Python object
2025-07-09 15:44:34,435 - sync_service - ERROR - SAP request error: maximum recursion depth exceeded while calling a Python object
2025-07-09 15:44:34,436 - sync_service - ERROR - Error logging API call to SAP: maximum recursion depth exceeded while calling a Python object
2025-07-09 15:44:34,438 - sync_service - ERROR - Failed to add API log to SAP: SAP request error: maximum recursion depth exceeded while calling a Python object
2025-07-09 15:44:34,438 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'U_API_LOG', 'request': {'method': 'POST', 'url': 'https://10.0.0.100:50000/b1s/v1/U_API_LOG', 'data': {'U_Server': 'sap', 'U_EndPoint': 'U_API_LOG', 'U_Request': '{"method": "POST", "url": "https://10.0.0.100:50000/b1s/v1/U_API_LOG", "data": {"U_Server": "sap", "U_EndPoint": "U_API_LOG", "U_Request": "", "U_Response": "", "U_Status": "success", "U_Reference": "", "U_LogDate": "2025-07-09", "U_LogTime": "1544", "U_Action": "sap_post_success", "U_Value": "SAP POST request successful to U_API_LOG"}, "params": null}', 'U_Response': '', 'U_Status': 'success', 'U_Reference': '', 'U_LogDate': '2025-07-09', 'U_LogTime': '1544', 'U_Action': 'sap_post', 'U_Value': 'SAP POST request to U_API_LOG'}, 'params': None}, 'response': None, 'status': None}
2025-07-09 15:44:34,443 - sync_service - ERROR - Error logging API call to SAP: maximum recursion depth exceeded while calling a Python object
2025-07-09 15:44:34,444 - sync_service - ERROR - Error logging API call to SAP: maximum recursion depth exceeded while calling a Python object
2025-07-09 15:44:34,446 - sync_service - ERROR - SAP request error: maximum recursion depth exceeded while calling a Python object
2025-07-09 15:44:34,448 - sync_service - ERROR - Error logging API call to SAP: maximum recursion depth exceeded while calling a Python object
2025-07-09 15:44:34,449 - sync_service - ERROR - Failed to add API log to SAP: SAP request error: maximum recursion depth exceeded while calling a Python object
2025-07-09 15:44:34,454 - sync_service - ERROR - SAP request error: maximum recursion depth exceeded while calling a Python object
2025-07-09 15:44:34,455 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'U_API_LOG', 'request': {'method': 'POST', 'url': 'https://10.0.0.100:50000/b1s/v1/U_API_LOG', 'data': {'U_Server': 'sap', 'U_EndPoint': 'U_API_LOG', 'U_Request': '', 'U_Response': '{"error": "SAP request error: maximum recursion depth exceeded while calling a Python object"}', 'U_Status': 'failure', 'U_Reference': '', 'U_LogDate': '2025-07-09', 'U_LogTime': '1544', 'U_Action': 'sap_post_exception', 'U_Value': 'SAP POST request exception to U_API_LOG: maximum recursion depth exceeded while calling a Python object'}, 'params': None}, 'response': None, 'status': None}
2025-07-09 15:44:34,459 - sync_service - ERROR - Error logging API call to SAP: maximum recursion depth exceeded while calling a Python object
2025-07-09 15:44:34,460 - sync_service - ERROR - Error logging API call to SAP: maximum recursion depth exceeded while calling a Python object
2025-07-09 15:44:34,461 - sync_service - ERROR - SAP request error: maximum recursion depth exceeded while calling a Python object
2025-07-09 15:44:34,462 - sync_service - ERROR - Error logging API call to SAP: maximum recursion depth exceeded while calling a Python object
2025-07-09 15:44:34,463 - sync_service - ERROR - Failed to add API log to SAP: SAP request error: maximum recursion depth exceeded while calling a Python object
2025-07-09 15:44:34,464 - sync_service - ERROR - Failed to add API log to SAP: SAP request error: maximum recursion depth exceeded while calling a Python object
2025-07-09 15:44:34,467 - sync_service - INFO - API log added to SAP: sap - U_API_LOG - success
2025-07-09 15:44:34,469 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'U_API_LOG', 'request': {'method': 'POST', 'url': 'https://10.0.0.100:50000/b1s/v1/U_API_LOG', 'data': {'U_Server': 'sap', 'U_EndPoint': 'U_API_LOG', 'U_Request': '{"method": "POST", "url": "https://10.0.0.100:50000/b1s/v1/U_API_LOG", "data": {"U_Server": "sap", "U_EndPoint": "login", "U_Request": "", "U_Response": "{\\"status\\": \\"success\\"}", "U_Status": "success", "U_Reference": "", "U_LogDate": "2025-07-09", "U_LogTime": "1544", "U_Action": "", "U_Value": ""}, "params": null}', 'U_Response': '', 'U_Status': 'success', 'U_Reference': '', 'U_LogDate': '2025-07-09', 'U_LogTime': '1544', 'U_Action': 'sap_post', 'U_Value': 'SAP POST request to U_API_LOG'}, 'params': None}, 'response': None, 'status': None}
2025-07-09 15:44:34,470 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'U_API_LOG', 'request': {'method': 'POST', 'url': 'https://10.0.0.100:50000/b1s/v1/U_API_LOG', 'data': {'U_Server': 'sap', 'U_EndPoint': 'U_API_LOG', 'U_Request': '{"method": "POST", "url": "https://10.0.0.100:50000/b1s/v1/U_API_LOG", "data": {"U_Server": "sap", "U_EndPoint": "U_API_LOG", "U_Request": "{\\"method\\": \\"POST\\", \\"url\\": \\"https://10.0.0.100:50000/b1s/v1/U_API_LOG\\", \\"data\\": {\\"U_Server\\": \\"sap\\", \\"U_EndPoint\\": \\"login\\", \\"U_Request\\": \\"\\", \\"U_Response\\": \\"{\\\\\\"status\\\\\\": \\\\\\"success\\\\\\"}\\", \\"U_Status\\": \\"success\\", \\"U_Reference\\": \\"\\", \\"U_LogDate\\": \\"2025-07-09\\", \\"U_LogTime\\": \\"1544\\", \\"U_Action\\": \\"\\", \\"U_Value\\": \\"\\"}, \\"params\\": null}", "U_Response": "", "U_Status": "success", "U_Reference": "", "U_LogDate": "2025-07-09", "U_LogTime": "1544", "U_Action": "sap_post", "U_Value": "SAP POST request to U_API_LOG"}, "params": null}', 'U_Response': '', 'U_Status': 'success', 'U_Reference': '', 'U_LogDate': '2025-07-09', 'U_LogTime': '1544', 'U_Action': '', 'U_Value': ''}, 'params': None}, 'response': None, 'status': None}
2025-07-09 15:44:34,471 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'U_API_LOG', 'request': {'method': 'POST', 'url': 'https://10.0.0.100:50000/b1s/v1/U_API_LOG', 'data': {'U_Server': 'sap', 'U_EndPoint': 'U_API_LOG', 'U_Request': '{"method": "POST", "url": "https://10.0.0.100:50000/b1s/v1/U_API_LOG", "data": {"U_Server": "sap", "U_EndPoint": "U_API_LOG", "U_Request": "{\\"method\\": \\"POST\\", \\"url\\": \\"https://10.0.0.100:50000/b1s/v1/U_API_LOG\\", \\"data\\": {\\"U_Server\\": \\"sap\\", \\"U_EndPoint\\": \\"U_API_LOG\\", \\"U_Request\\": \\"{\\\\\\"method\\\\\\": \\\\\\"POST\\\\\\", \\\\\\"url\\\\\\": \\\\\\"https://10.0.0.100:50000/b1s/v1/U_API_LOG\\\\\\", \\\\\\"data\\\\\\": {\\\\\\"U_Server\\\\\\": \\\\\\"sap\\\\\\", \\\\\\"U_EndPoint\\\\\\": \\\\\\"login\\\\\\", \\\\\\"U_Request\\\\\\": \\\\\\"\\\\\\", \\\\\\"U_Response\\\\\\": \\\\\\"{\\\\\\\\\\\\\\"status\\\\\\\\\\\\\\": \\\\\\\\\\\\\\"success\\\\\\\\\\\\\\"}\\\\\\", \\\\\\"U_Status\\\\\\": \\\\\\"success\\\\\\", \\\\\\"U_Reference\\\\\\": \\\\\\"\\\\\\", \\\\\\"U_LogDate\\\\\\": \\\\\\"2025-07-09\\\\\\", \\\\\\"U_LogTime\\\\\\": \\\\\\"1544\\\\\\", \\\\\\"U_Action\\\\\\": \\\\\\"\\\\\\", \\\\\\"U_Value\\\\\\": \\\\\\"\\\\\\"}, \\\\\\"params\\\\\\": null}\\", \\"U_Response\\": \\"\\", \\"U_Status\\": \\"success\\", \\"U_Reference\\": \\"\\", \\"U_LogDate\\": \\"2025-07-09\\", \\"U_LogTime\\": \\"1544\\", \\"U_Action\\": \\"sap_post\\", \\"U_Value\\": \\"SAP POST request to U_API_LOG\\"}, \\"params\\": null}", "U_Response": "", "U_Status": "success", "U_Reference": "", "U_LogDate": "2025-07-09", "U_LogTime": "1544", "U_Action": "", "U_Value": ""}, "params": null}', 'U_Response': '', 'U_Status': 'success', 'U_Reference': '', 'U_LogDate': '2025-07-09', 'U_LogTime': '1544', 'U_Action': '', 'U_Value': ''}, 'params': None}, 'response': None, 'status': None}
2025-07-09 15:44:34,473 - sync_service - ERROR - Error logging API call to SAP: maximum recursion depth exceeded while calling a Python object
2025-07-09 15:44:34,478 - sync_service - ERROR - Error logging API call to SAP: maximum recursion depth exceeded while calling a Python object
2025-07-09 15:44:34,479 - sync_service - ERROR - SAP request error: maximum recursion depth exceeded while calling a Python object
2025-07-09 15:44:34,482 - sync_service - ERROR - Error logging API call to SAP: maximum recursion depth exceeded while calling a Python object
2025-07-09 15:44:34,484 - sync_service - ERROR - Failed to add API log to SAP: SAP request error: maximum recursion depth exceeded while calling a Python object
2025-07-09 15:44:34,486 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'U_API_LOG', 'request': {'method': 'POST', 'url': 'https://10.0.0.100:50000/b1s/v1/U_API_LOG', 'data': {'U_Server': 'sap', 'U_EndPoint': 'U_API_LOG', 'U_Request': '{"method": "POST", "url": "https://10.0.0.100:50000/b1s/v1/U_API_LOG", "data": {"U_Server": "sap", "U_EndPoint": "U_API_LOG", "U_Request": "{\\"method\\": \\"POST\\", \\"url\\": \\"https://10.0.0.100:50000/b1s/v1/U_API_LOG\\", \\"data\\": {\\"U_Server\\": \\"sap\\", \\"U_EndPoint\\": \\"U_API_LOG\\", \\"U_Request\\": \\"{\\\\\\"method\\\\\\": \\\\\\"POST\\\\\\", \\\\\\"url\\\\\\": \\\\\\"https://10.0.0.100:50000/b1s/v1/U_API_LOG\\\\\\", \\\\\\"data\\\\\\": {\\\\\\"U_Server\\\\\\": \\\\\\"sap\\\\\\", \\\\\\"U_EndPoint\\\\\\": \\\\\\"login\\\\\\", \\\\\\"U_Request\\\\\\": \\\\\\"\\\\\\", \\\\\\"U_Response\\\\\\": \\\\\\"{\\\\\\\\\\\\\\"status\\\\\\\\\\\\\\": \\\\\\\\\\\\\\"success\\\\\\\\\\\\\\"}\\\\\\", \\\\\\"U_Status\\\\\\": \\\\\\"success\\\\\\", \\\\\\"U_Reference\\\\\\": \\\\\\"\\\\\\", \\\\\\"U_LogDate\\\\\\": \\\\\\"2025-07-09\\\\\\", \\\\\\"U_LogTime\\\\\\": \\\\\\"1544\\\\\\", \\\\\\"U_Action\\\\\\": \\\\\\"\\\\\\", \\\\\\"U_Value\\\\\\": \\\\\\"\\\\\\"}, \\\\\\"params\\\\\\": null}\\", \\"U_Response\\": \\"\\", \\"U_Status\\": \\"success\\", \\"U_Reference\\": \\"\\", \\"U_LogDate\\": \\"2025-07-09\\", \\"U_LogTime\\": \\"1544\\", \\"U_Action\\": \\"sap_post\\", \\"U_Value\\": \\"SAP POST request to U_API_LOG\\"}, \\"params\\": null}", "U_Response": "", "U_Status": "success", "U_Reference": "", "U_LogDate": "2025-07-09", "U_LogTime": "1544", "U_Action": "", "U_Value": ""}, "params": null}', 'U_Response': '', 'U_Status': 'success', 'U_Reference': '', 'U_LogDate': '2025-07-09', 'U_LogTime': '1544', 'U_Action': 'sap_post', 'U_Value': 'SAP POST request to U_API_LOG'}, 'params': None}, 'response': None, 'status': None}
2025-07-09 15:44:34,488 - sync_service - ERROR - Error logging API call to SAP: maximum recursion depth exceeded while calling a Python object
2025-07-09 15:44:34,489 - sync_service - ERROR - Error logging API call to SAP: maximum recursion depth exceeded while calling a Python object
2025-07-09 15:44:34,492 - sync_service - ERROR - SAP request error: maximum recursion depth exceeded while calling a Python object
2025-07-09 15:44:34,493 - sync_service - ERROR - Error logging API call to SAP: maximum recursion depth exceeded while calling a Python object
2025-07-09 15:44:34,494 - sync_service - ERROR - Failed to add API log to SAP: SAP request error: maximum recursion depth exceeded while calling a Python object
2025-07-09 15:44:34,497 - sync_service - ERROR - SAP request error: maximum recursion depth exceeded while calling a Python object
2025-07-09 15:44:34,499 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'U_API_LOG', 'request': {'method': 'POST', 'url': 'https://10.0.0.100:50000/b1s/v1/U_API_LOG', 'data': {'U_Server': 'sap', 'U_EndPoint': 'U_API_LOG', 'U_Request': '', 'U_Response': '{"error": "SAP request error: maximum recursion depth exceeded while calling a Python object"}', 'U_Status': 'failure', 'U_Reference': '', 'U_LogDate': '2025-07-09', 'U_LogTime': '1544', 'U_Action': 'sap_post_exception', 'U_Value': 'SAP POST request exception to U_API_LOG: maximum recursion depth exceeded while calling a Python object'}, 'params': None}, 'response': None, 'status': None}
2025-07-09 15:44:34,503 - sync_service - ERROR - Error logging API call to SAP: maximum recursion depth exceeded while calling a Python object
2025-07-09 15:44:34,505 - sync_service - ERROR - Error logging API call to SAP: maximum recursion depth exceeded while calling a Python object
2025-07-09 15:44:34,506 - sync_service - ERROR - SAP request error: maximum recursion depth exceeded while calling a Python object
2025-07-09 15:44:34,511 - sync_service - ERROR - Error logging API call to SAP: maximum recursion depth exceeded while calling a Python object
2025-07-09 15:44:34,511 - sync_service - ERROR - Failed to add API log to SAP: SAP request error: maximum recursion depth exceeded while calling a Python object
2025-07-09 15:44:34,512 - sync_service - ERROR - Failed to add API log to SAP: SAP request error: maximum recursion depth exceeded while calling a Python object
2025-07-09 15:44:34,513 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'U_API_LOG', 'request': {'method': 'POST', 'url': 'https://10.0.0.100:50000/b1s/v1/U_API_LOG', 'data': {'U_Server': 'sap', 'U_EndPoint': 'U_API_LOG', 'U_Request': '{"method": "POST", "url": "https://10.0.0.100:50000/b1s/v1/U_API_LOG", "data": {"U_Server": "sap", "U_EndPoint": "U_API_LOG", "U_Request": "{\\"method\\": \\"POST\\", \\"url\\": \\"https://10.0.0.100:50000/b1s/v1/U_API_LOG\\", \\"data\\": {\\"U_Server\\": \\"sap\\", \\"U_EndPoint\\": \\"login\\", \\"U_Request\\": \\"\\", \\"U_Response\\": \\"{\\\\\\"status\\\\\\": \\\\\\"success\\\\\\"}\\", \\"U_Status\\": \\"success\\", \\"U_Reference\\": \\"\\", \\"U_LogDate\\": \\"2025-07-09\\", \\"U_LogTime\\": \\"1544\\", \\"U_Action\\": \\"\\", \\"U_Value\\": \\"\\"}, \\"params\\": null}", "U_Response": "", "U_Status": "success", "U_Reference": "", "U_LogDate": "2025-07-09", "U_LogTime": "1544", "U_Action": "sap_post", "U_Value": "SAP POST request to U_API_LOG"}, "params": null}', 'U_Response': '', 'U_Status': 'success', 'U_Reference': '', 'U_LogDate': '2025-07-09', 'U_LogTime': '1544', 'U_Action': 'sap_post', 'U_Value': 'SAP POST request to U_API_LOG'}, 'params': None}, 'response': None, 'status': None}
2025-07-09 15:44:34,515 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'U_API_LOG', 'request': {'method': 'POST', 'url': 'https://10.0.0.100:50000/b1s/v1/U_API_LOG', 'data': {'U_Server': 'sap', 'U_EndPoint': 'U_API_LOG', 'U_Request': '{"method": "POST", "url": "https://10.0.0.100:50000/b1s/v1/U_API_LOG", "data": {"U_Server": "sap", "U_EndPoint": "U_API_LOG", "U_Request": "{\\"method\\": \\"POST\\", \\"url\\": \\"https://10.0.0.100:50000/b1s/v1/U_API_LOG\\", \\"data\\": {\\"U_Server\\": \\"sap\\", \\"U_EndPoint\\": \\"U_API_LOG\\", \\"U_Request\\": \\"{\\\\\\"method\\\\\\": \\\\\\"POST\\\\\\", \\\\\\"url\\\\\\": \\\\\\"https://10.0.0.100:50000/b1s/v1/U_API_LOG\\\\\\", \\\\\\"data\\\\\\": {\\\\\\"U_Server\\\\\\": \\\\\\"sap\\\\\\", \\\\\\"U_EndPoint\\\\\\": \\\\\\"login\\\\\\", \\\\\\"U_Request\\\\\\": \\\\\\"\\\\\\", \\\\\\"U_Response\\\\\\": \\\\\\"{\\\\\\\\\\\\\\"status\\\\\\\\\\\\\\": \\\\\\\\\\\\\\"success\\\\\\\\\\\\\\"}\\\\\\", \\\\\\"U_Status\\\\\\": \\\\\\"success\\\\\\", \\\\\\"U_Reference\\\\\\": \\\\\\"\\\\\\", \\\\\\"U_LogDate\\\\\\": \\\\\\"2025-07-09\\\\\\", \\\\\\"U_LogTime\\\\\\": \\\\\\"1544\\\\\\", \\\\\\"U_Action\\\\\\": \\\\\\"\\\\\\", \\\\\\"U_Value\\\\\\": \\\\\\"\\\\\\"}, \\\\\\"params\\\\\\": null}\\", \\"U_Response\\": \\"\\", \\"U_Status\\": \\"success\\", \\"U_Reference\\": \\"\\", \\"U_LogDate\\": \\"2025-07-09\\", \\"U_LogTime\\": \\"1544\\", \\"U_Action\\": \\"sap_post\\", \\"U_Value\\": \\"SAP POST request to U_API_LOG\\"}, \\"params\\": null}", "U_Response": "", "U_Status": "success", "U_Reference": "", "U_LogDate": "2025-07-09", "U_LogTime": "1544", "U_Action": "sap_post", "U_Value": "SAP POST request to U_API_LOG"}, "params": null}', 'U_Response': '', 'U_Status': 'success', 'U_Reference': '', 'U_LogDate': '2025-07-09', 'U_LogTime': '1544', 'U_Action': '', 'U_Value': ''}, 'params': None}, 'response': None, 'status': None}
2025-07-09 15:44:34,516 - sync_service - ERROR - Error logging API call to SAP: maximum recursion depth exceeded while calling a Python object
2025-07-09 15:44:34,519 - sync_service - ERROR - Error logging API call to SAP: maximum recursion depth exceeded while calling a Python object
2025-07-09 15:44:34,521 - sync_service - ERROR - SAP request error: maximum recursion depth exceeded while calling a Python object
2025-07-09 15:44:34,522 - sync_service - ERROR - Error logging API call to SAP: maximum recursion depth exceeded while calling a Python object
2025-07-09 15:44:34,523 - sync_service - ERROR - Failed to add API log to SAP: SAP request error: maximum recursion depth exceeded while calling a Python object
2025-07-09 15:44:34,526 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'U_API_LOG', 'request': {'method': 'POST', 'url': 'https://10.0.0.100:50000/b1s/v1/U_API_LOG', 'data': {'U_Server': 'sap', 'U_EndPoint': 'U_API_LOG', 'U_Request': '{"method": "POST", "url": "https://10.0.0.100:50000/b1s/v1/U_API_LOG", "data": {"U_Server": "sap", "U_EndPoint": "U_API_LOG", "U_Request": "{\\"method\\": \\"POST\\", \\"url\\": \\"https://10.0.0.100:50000/b1s/v1/U_API_LOG\\", \\"data\\": {\\"U_Server\\": \\"sap\\", \\"U_EndPoint\\": \\"U_API_LOG\\", \\"U_Request\\": \\"{\\\\\\"method\\\\\\": \\\\\\"POST\\\\\\", \\\\\\"url\\\\\\": \\\\\\"https://10.0.0.100:50000/b1s/v1/U_API_LOG\\\\\\", \\\\\\"data\\\\\\": {\\\\\\"U_Server\\\\\\": \\\\\\"sap\\\\\\", \\\\\\"U_EndPoint\\\\\\": \\\\\\"login\\\\\\", \\\\\\"U_Request\\\\\\": \\\\\\"\\\\\\", \\\\\\"U_Response\\\\\\": \\\\\\"{\\\\\\\\\\\\\\"status\\\\\\\\\\\\\\": \\\\\\\\\\\\\\"success\\\\\\\\\\\\\\"}\\\\\\", \\\\\\"U_Status\\\\\\": \\\\\\"success\\\\\\", \\\\\\"U_Reference\\\\\\": \\\\\\"\\\\\\", \\\\\\"U_LogDate\\\\\\": \\\\\\"2025-07-09\\\\\\", \\\\\\"U_LogTime\\\\\\": \\\\\\"1544\\\\\\", \\\\\\"U_Action\\\\\\": \\\\\\"\\\\\\", \\\\\\"U_Value\\\\\\": \\\\\\"\\\\\\"}, \\\\\\"params\\\\\\": null}\\", \\"U_Response\\": \\"\\", \\"U_Status\\": \\"success\\", \\"U_Reference\\": \\"\\", \\"U_LogDate\\": \\"2025-07-09\\", \\"U_LogTime\\": \\"1544\\", \\"U_Action\\": \\"sap_post\\", \\"U_Value\\": \\"SAP POST request to U_API_LOG\\"}, \\"params\\": null}", "U_Response": "", "U_Status": "success", "U_Reference": "", "U_LogDate": "2025-07-09", "U_LogTime": "1544", "U_Action": "sap_post", "U_Value": "SAP POST request to U_API_LOG"}, "params": null}', 'U_Response': '', 'U_Status': 'success', 'U_Reference': '', 'U_LogDate': '2025-07-09', 'U_LogTime': '1544', 'U_Action': 'sap_post', 'U_Value': 'SAP POST request to U_API_LOG'}, 'params': None}, 'response': None, 'status': None}
2025-07-09 15:44:34,527 - sync_service - ERROR - Error logging API call to SAP: maximum recursion depth exceeded while calling a Python object
2025-07-09 15:44:34,529 - sync_service - ERROR - Error logging API call to SAP: maximum recursion depth exceeded while calling a Python object
2025-07-09 15:44:34,531 - sync_service - ERROR - SAP request error: maximum recursion depth exceeded while calling a Python object
2025-07-09 15:44:34,532 - sync_service - ERROR - Error logging API call to SAP: maximum recursion depth exceeded while calling a Python object
2025-07-09 15:44:34,533 - sync_service - ERROR - Failed to add API log to SAP: SAP request error: maximum recursion depth exceeded while calling a Python object
2025-07-09 15:44:34,537 - sync_service - ERROR - SAP request error: maximum recursion depth exceeded while calling a Python object
2025-07-09 15:44:34,537 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'U_API_LOG', 'request': {'method': 'POST', 'url': 'https://10.0.0.100:50000/b1s/v1/U_API_LOG', 'data': {'U_Server': 'sap', 'U_EndPoint': 'U_API_LOG', 'U_Request': '', 'U_Response': '{"error": "SAP request error: maximum recursion depth exceeded while calling a Python object"}', 'U_Status': 'failure', 'U_Reference': '', 'U_LogDate': '2025-07-09', 'U_LogTime': '1544', 'U_Action': 'sap_post_exception', 'U_Value': 'SAP POST request exception to U_API_LOG: maximum recursion depth exceeded while calling a Python object'}, 'params': None}, 'response': None, 'status': None}
2025-07-09 15:44:34,538 - sync_service - ERROR - Error logging API call to SAP: maximum recursion depth exceeded while calling a Python object
2025-07-09 15:44:34,540 - sync_service - ERROR - Error logging API call to SAP: maximum recursion depth exceeded while calling a Python object
2025-07-09 15:44:34,543 - sync_service - ERROR - SAP request error: maximum recursion depth exceeded while calling a Python object
2025-07-09 15:44:34,544 - sync_service - ERROR - Error logging API call to SAP: maximum recursion depth exceeded while calling a Python object
2025-07-09 15:44:34,544 - sync_service - ERROR - Failed to add API log to SAP: SAP request error: maximum recursion depth exceeded while calling a Python object
2025-07-09 15:44:34,545 - sync_service - ERROR - Failed to add API log to SAP: SAP request error: maximum recursion depth exceeded while calling a Python object
2025-07-09 15:44:35,205 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'U_API_LOG', 'request': None, 'response': None, 'status': 'success'}
2025-07-09 15:44:35,210 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'U_API_LOG', 'request': {'method': 'POST', 'url': 'https://10.0.0.100:50000/b1s/v1/U_API_LOG', 'data': {'U_Server': 'sap', 'U_EndPoint': 'U_API_LOG', 'U_Request': '', 'U_Response': '', 'U_Status': 'success', 'U_Reference': '', 'U_LogDate': '2025-07-09', 'U_LogTime': '1544', 'U_Action': '', 'U_Value': ''}, 'params': None}, 'response': None, 'status': None}
2025-07-09 15:44:35,210 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'U_API_LOG', 'request': {'method': 'POST', 'url': 'https://10.0.0.100:50000/b1s/v1/U_API_LOG', 'data': {'U_Server': 'sap', 'U_EndPoint': 'U_API_LOG', 'U_Request': '{"method": "POST", "url": "https://10.0.0.100:50000/b1s/v1/U_API_LOG", "data": {"U_Server": "sap", "U_EndPoint": "U_API_LOG", "U_Request": "", "U_Response": "", "U_Status": "success", "U_Reference": "", "U_LogDate": "2025-07-09", "U_LogTime": "1544", "U_Action": "", "U_Value": ""}, "params": null}', 'U_Response': '', 'U_Status': 'success', 'U_Reference': '', 'U_LogDate': '2025-07-09', 'U_LogTime': '1544', 'U_Action': '', 'U_Value': ''}, 'params': None}, 'response': None, 'status': None}
2025-07-09 15:44:35,212 - sync_service - ERROR - Error logging API call to SAP: maximum recursion depth exceeded while calling a Python object
2025-07-09 15:44:35,214 - sync_service - ERROR - Error logging API call to SAP: maximum recursion depth exceeded while calling a Python object
2025-07-09 15:44:35,218 - sync_service - ERROR - SAP request error: maximum recursion depth exceeded while calling a Python object
2025-07-09 15:44:35,221 - sync_service - ERROR - Error logging API call to SAP: maximum recursion depth exceeded while calling a Python object
2025-07-09 15:44:35,221 - sync_service - ERROR - Failed to add API log to SAP: SAP request error: maximum recursion depth exceeded while calling a Python object
2025-07-09 15:44:35,222 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'U_API_LOG', 'request': {'method': 'POST', 'url': 'https://10.0.0.100:50000/b1s/v1/U_API_LOG', 'data': {'U_Server': 'sap', 'U_EndPoint': 'U_API_LOG', 'U_Request': '{"method": "POST", "url": "https://10.0.0.100:50000/b1s/v1/U_API_LOG", "data": {"U_Server": "sap", "U_EndPoint": "U_API_LOG", "U_Request": "", "U_Response": "", "U_Status": "success", "U_Reference": "", "U_LogDate": "2025-07-09", "U_LogTime": "1544", "U_Action": "", "U_Value": ""}, "params": null}', 'U_Response': '', 'U_Status': 'success', 'U_Reference': '', 'U_LogDate': '2025-07-09', 'U_LogTime': '1544', 'U_Action': 'sap_post', 'U_Value': 'SAP POST request to U_API_LOG'}, 'params': None}, 'response': None, 'status': None}
2025-07-09 15:44:35,226 - sync_service - ERROR - Error logging API call to SAP: maximum recursion depth exceeded while calling a Python object
2025-07-09 15:44:35,227 - sync_service - ERROR - Error logging API call to SAP: maximum recursion depth exceeded while calling a Python object
2025-07-09 15:44:35,228 - sync_service - ERROR - SAP request error: maximum recursion depth exceeded while calling a Python object
2025-07-09 15:44:35,229 - sync_service - ERROR - Error logging API call to SAP: maximum recursion depth exceeded while calling a Python object
2025-07-09 15:44:35,229 - sync_service - ERROR - Failed to add API log to SAP: SAP request error: maximum recursion depth exceeded while calling a Python object
2025-07-09 15:44:35,235 - sync_service - ERROR - SAP request error: maximum recursion depth exceeded while calling a Python object
2025-07-09 15:44:35,236 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'U_API_LOG', 'request': {'method': 'POST', 'url': 'https://10.0.0.100:50000/b1s/v1/U_API_LOG', 'data': {'U_Server': 'sap', 'U_EndPoint': 'U_API_LOG', 'U_Request': '', 'U_Response': '{"error": "SAP request error: maximum recursion depth exceeded while calling a Python object"}', 'U_Status': 'failure', 'U_Reference': '', 'U_LogDate': '2025-07-09', 'U_LogTime': '1544', 'U_Action': 'sap_post_exception', 'U_Value': 'SAP POST request exception to U_API_LOG: maximum recursion depth exceeded while calling a Python object'}, 'params': None}, 'response': None, 'status': None}
2025-07-09 15:44:35,238 - sync_service - ERROR - Error logging API call to SAP: maximum recursion depth exceeded while calling a Python object
2025-07-09 15:44:35,240 - sync_service - ERROR - Error logging API call to SAP: maximum recursion depth exceeded while calling a Python object
2025-07-09 15:44:35,242 - sync_service - ERROR - SAP request error: maximum recursion depth exceeded while calling a Python object
2025-07-09 15:44:35,244 - sync_service - ERROR - Error logging API call to SAP: maximum recursion depth exceeded while calling a Python object
2025-07-09 15:44:35,245 - sync_service - ERROR - Failed to add API log to SAP: SAP request error: maximum recursion depth exceeded while calling a Python object
2025-07-09 15:44:35,245 - sync_service - ERROR - Failed to add API log to SAP: SAP request error: maximum recursion depth exceeded while calling a Python object
2025-07-09 15:44:35,247 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'U_API_LOG', 'request': {'method': 'POST', 'url': 'https://10.0.0.100:50000/b1s/v1/U_API_LOG', 'data': {'U_Server': 'sap', 'U_EndPoint': 'U_API_LOG', 'U_Request': '', 'U_Response': '', 'U_Status': 'success', 'U_Reference': '', 'U_LogDate': '2025-07-09', 'U_LogTime': '1544', 'U_Action': 'sap_post_success', 'U_Value': 'SAP POST request successful to U_API_LOG'}, 'params': None}, 'response': None, 'status': None}
2025-07-09 15:44:35,248 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'U_API_LOG', 'request': {'method': 'POST', 'url': 'https://10.0.0.100:50000/b1s/v1/U_API_LOG', 'data': {'U_Server': 'sap', 'U_EndPoint': 'U_API_LOG', 'U_Request': '{"method": "POST", "url": "https://10.0.0.100:50000/b1s/v1/U_API_LOG", "data": {"U_Server": "sap", "U_EndPoint": "U_API_LOG", "U_Request": "", "U_Response": "", "U_Status": "success", "U_Reference": "", "U_LogDate": "2025-07-09", "U_LogTime": "1544", "U_Action": "sap_post_success", "U_Value": "SAP POST request successful to U_API_LOG"}, "params": null}', 'U_Response': '', 'U_Status': 'success', 'U_Reference': '', 'U_LogDate': '2025-07-09', 'U_LogTime': '1544', 'U_Action': '', 'U_Value': ''}, 'params': None}, 'response': None, 'status': None}
2025-07-09 15:44:35,250 - sync_service - ERROR - Error logging API call to SAP: maximum recursion depth exceeded while calling a Python object
2025-07-09 15:44:35,251 - sync_service - ERROR - Error logging API call to SAP: maximum recursion depth exceeded while calling a Python object
2025-07-09 15:44:35,253 - sync_service - ERROR - SAP request error: maximum recursion depth exceeded while calling a Python object
2025-07-09 15:44:35,254 - sync_service - ERROR - Error logging API call to SAP: maximum recursion depth exceeded while calling a Python object
2025-07-09 15:44:35,255 - sync_service - ERROR - Failed to add API log to SAP: SAP request error: maximum recursion depth exceeded while calling a Python object
2025-07-09 15:44:35,258 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'U_API_LOG', 'request': {'method': 'POST', 'url': 'https://10.0.0.100:50000/b1s/v1/U_API_LOG', 'data': {'U_Server': 'sap', 'U_EndPoint': 'U_API_LOG', 'U_Request': '{"method": "POST", "url": "https://10.0.0.100:50000/b1s/v1/U_API_LOG", "data": {"U_Server": "sap", "U_EndPoint": "U_API_LOG", "U_Request": "", "U_Response": "", "U_Status": "success", "U_Reference": "", "U_LogDate": "2025-07-09", "U_LogTime": "1544", "U_Action": "sap_post_success", "U_Value": "SAP POST request successful to U_API_LOG"}, "params": null}', 'U_Response': '', 'U_Status': 'success', 'U_Reference': '', 'U_LogDate': '2025-07-09', 'U_LogTime': '1544', 'U_Action': 'sap_post', 'U_Value': 'SAP POST request to U_API_LOG'}, 'params': None}, 'response': None, 'status': None}
2025-07-09 15:44:35,260 - sync_service - ERROR - Error logging API call to SAP: maximum recursion depth exceeded while calling a Python object
2025-07-09 15:44:35,263 - sync_service - ERROR - Error logging API call to SAP: maximum recursion depth exceeded while calling a Python object
2025-07-09 15:44:35,267 - sync_service - ERROR - SAP request error: maximum recursion depth exceeded while calling a Python object
2025-07-09 15:44:35,269 - sync_service - ERROR - Error logging API call to SAP: maximum recursion depth exceeded while calling a Python object
2025-07-09 15:44:35,270 - sync_service - ERROR - Failed to add API log to SAP: SAP request error: maximum recursion depth exceeded while calling a Python object
2025-07-09 15:44:35,274 - sync_service - ERROR - SAP request error: maximum recursion depth exceeded while calling a Python object
2025-07-09 15:44:35,277 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'U_API_LOG', 'request': {'method': 'POST', 'url': 'https://10.0.0.100:50000/b1s/v1/U_API_LOG', 'data': {'U_Server': 'sap', 'U_EndPoint': 'U_API_LOG', 'U_Request': '', 'U_Response': '{"error": "SAP request error: maximum recursion depth exceeded while calling a Python object"}', 'U_Status': 'failure', 'U_Reference': '', 'U_LogDate': '2025-07-09', 'U_LogTime': '1544', 'U_Action': 'sap_post_exception', 'U_Value': 'SAP POST request exception to U_API_LOG: maximum recursion depth exceeded while calling a Python object'}, 'params': None}, 'response': None, 'status': None}
2025-07-09 15:44:35,278 - sync_service - ERROR - Error logging API call to SAP: maximum recursion depth exceeded while calling a Python object
2025-07-09 15:44:35,279 - sync_service - ERROR - Error logging API call to SAP: maximum recursion depth exceeded while calling a Python object
2025-07-09 15:44:35,282 - sync_service - ERROR - SAP request error: maximum recursion depth exceeded while calling a Python object
2025-07-09 15:44:35,284 - sync_service - ERROR - Error logging API call to SAP: maximum recursion depth exceeded while calling a Python object
2025-07-09 15:44:35,285 - sync_service - ERROR - Failed to add API log to SAP: SAP request error: maximum recursion depth exceeded while calling a Python object
2025-07-09 15:44:35,286 - sync_service - ERROR - Failed to add API log to SAP: SAP request error: maximum recursion depth exceeded while calling a Python object
2025-07-09 15:44:35,288 - sync_service - INFO - API log added to SAP: sap - U_API_LOG - success
2025-07-09 15:44:35,480 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'U_API_LOG', 'request': None, 'response': None, 'status': 'success'}
2025-07-09 15:44:35,485 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'U_API_LOG', 'request': {'method': 'POST', 'url': 'https://10.0.0.100:50000/b1s/v1/U_API_LOG', 'data': {'U_Server': 'sap', 'U_EndPoint': 'U_API_LOG', 'U_Request': '', 'U_Response': '', 'U_Status': 'success', 'U_Reference': '', 'U_LogDate': '2025-07-09', 'U_LogTime': '1544', 'U_Action': '', 'U_Value': ''}, 'params': None}, 'response': None, 'status': None}
2025-07-09 15:44:35,489 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'U_API_LOG', 'request': {'method': 'POST', 'url': 'https://10.0.0.100:50000/b1s/v1/U_API_LOG', 'data': {'U_Server': 'sap', 'U_EndPoint': 'U_API_LOG', 'U_Request': '{"method": "POST", "url": "https://10.0.0.100:50000/b1s/v1/U_API_LOG", "data": {"U_Server": "sap", "U_EndPoint": "U_API_LOG", "U_Request": "", "U_Response": "", "U_Status": "success", "U_Reference": "", "U_LogDate": "2025-07-09", "U_LogTime": "1544", "U_Action": "", "U_Value": ""}, "params": null}', 'U_Response': '', 'U_Status': 'success', 'U_Reference': '', 'U_LogDate': '2025-07-09', 'U_LogTime': '1544', 'U_Action': '', 'U_Value': ''}, 'params': None}, 'response': None, 'status': None}
2025-07-09 15:44:35,491 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'U_API_LOG', 'request': {'method': 'POST', 'url': 'https://10.0.0.100:50000/b1s/v1/U_API_LOG', 'data': {'U_Server': 'sap', 'U_EndPoint': 'U_API_LOG', 'U_Request': '{"method": "POST", "url": "https://10.0.0.100:50000/b1s/v1/U_API_LOG", "data": {"U_Server": "sap", "U_EndPoint": "U_API_LOG", "U_Request": "{\\"method\\": \\"POST\\", \\"url\\": \\"https://10.0.0.100:50000/b1s/v1/U_API_LOG\\", \\"data\\": {\\"U_Server\\": \\"sap\\", \\"U_EndPoint\\": \\"U_API_LOG\\", \\"U_Request\\": \\"\\", \\"U_Response\\": \\"\\", \\"U_Status\\": \\"success\\", \\"U_Reference\\": \\"\\", \\"U_LogDate\\": \\"2025-07-09\\", \\"U_LogTime\\": \\"1544\\", \\"U_Action\\": \\"\\", \\"U_Value\\": \\"\\"}, \\"params\\": null}", "U_Response": "", "U_Status": "success", "U_Reference": "", "U_LogDate": "2025-07-09", "U_LogTime": "1544", "U_Action": "", "U_Value": ""}, "params": null}', 'U_Response': '', 'U_Status': 'success', 'U_Reference': '', 'U_LogDate': '2025-07-09', 'U_LogTime': '1544', 'U_Action': '', 'U_Value': ''}, 'params': None}, 'response': None, 'status': None}
2025-07-09 15:44:35,497 - sync_service - ERROR - Error logging API call to SAP: maximum recursion depth exceeded while calling a Python object
2025-07-09 15:44:35,499 - sync_service - ERROR - Error logging API call to SAP: maximum recursion depth exceeded while calling a Python object
2025-07-09 15:44:35,502 - sync_service - ERROR - SAP request error: maximum recursion depth exceeded while calling a Python object
2025-07-09 15:44:35,505 - sync_service - ERROR - Error logging API call to SAP: maximum recursion depth exceeded while calling a Python object
2025-07-09 15:44:35,507 - sync_service - ERROR - Failed to add API log to SAP: SAP request error: maximum recursion depth exceeded while calling a Python object
2025-07-09 15:44:35,509 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'U_API_LOG', 'request': {'method': 'POST', 'url': 'https://10.0.0.100:50000/b1s/v1/U_API_LOG', 'data': {'U_Server': 'sap', 'U_EndPoint': 'U_API_LOG', 'U_Request': '{"method": "POST", "url": "https://10.0.0.100:50000/b1s/v1/U_API_LOG", "data": {"U_Server": "sap", "U_EndPoint": "U_API_LOG", "U_Request": "{\\"method\\": \\"POST\\", \\"url\\": \\"https://10.0.0.100:50000/b1s/v1/U_API_LOG\\", \\"data\\": {\\"U_Server\\": \\"sap\\", \\"U_EndPoint\\": \\"U_API_LOG\\", \\"U_Request\\": \\"\\", \\"U_Response\\": \\"\\", \\"U_Status\\": \\"success\\", \\"U_Reference\\": \\"\\", \\"U_LogDate\\": \\"2025-07-09\\", \\"U_LogTime\\": \\"1544\\", \\"U_Action\\": \\"\\", \\"U_Value\\": \\"\\"}, \\"params\\": null}", "U_Response": "", "U_Status": "success", "U_Reference": "", "U_LogDate": "2025-07-09", "U_LogTime": "1544", "U_Action": "", "U_Value": ""}, "params": null}', 'U_Response': '', 'U_Status': 'success', 'U_Reference': '', 'U_LogDate': '2025-07-09', 'U_LogTime': '1544', 'U_Action': 'sap_post', 'U_Value': 'SAP POST request to U_API_LOG'}, 'params': None}, 'response': None, 'status': None}
2025-07-09 15:44:35,512 - sync_service - ERROR - Error logging API call to SAP: maximum recursion depth exceeded while calling a Python object
2025-07-09 15:44:35,515 - sync_service - ERROR - Error logging API call to SAP: maximum recursion depth exceeded while calling a Python object
2025-07-09 15:44:35,517 - sync_service - ERROR - SAP request error: maximum recursion depth exceeded while calling a Python object
2025-07-09 15:44:35,520 - sync_service - ERROR - Error logging API call to SAP: maximum recursion depth exceeded while calling a Python object
2025-07-09 15:44:35,522 - sync_service - ERROR - Failed to add API log to SAP: SAP request error: maximum recursion depth exceeded while calling a Python object
2025-07-09 15:44:35,525 - sync_service - ERROR - SAP request error: maximum recursion depth exceeded while calling a Python object
2025-07-09 15:44:35,527 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'U_API_LOG', 'request': {'method': 'POST', 'url': 'https://10.0.0.100:50000/b1s/v1/U_API_LOG', 'data': {'U_Server': 'sap', 'U_EndPoint': 'U_API_LOG', 'U_Request': '', 'U_Response': '{"error": "SAP request error: maximum recursion depth exceeded while calling a Python object"}', 'U_Status': 'failure', 'U_Reference': '', 'U_LogDate': '2025-07-09', 'U_LogTime': '1544', 'U_Action': 'sap_post_exception', 'U_Value': 'SAP POST request exception to U_API_LOG: maximum recursion depth exceeded while calling a Python object'}, 'params': None}, 'response': None, 'status': None}
2025-07-09 15:44:35,528 - sync_service - ERROR - Error logging API call to SAP: maximum recursion depth exceeded while calling a Python object
2025-07-09 15:44:35,528 - sync_service - ERROR - Error logging API call to SAP: maximum recursion depth exceeded while calling a Python object
2025-07-09 15:44:35,531 - sync_service - ERROR - SAP request error: maximum recursion depth exceeded while calling a Python object
2025-07-09 15:44:35,532 - sync_service - ERROR - Error logging API call to SAP: maximum recursion depth exceeded while calling a Python object
2025-07-09 15:44:35,532 - sync_service - ERROR - Failed to add API log to SAP: SAP request error: maximum recursion depth exceeded while calling a Python object
2025-07-09 15:44:35,533 - sync_service - ERROR - Failed to add API log to SAP: SAP request error: maximum recursion depth exceeded while calling a Python object
2025-07-09 15:44:35,534 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'U_API_LOG', 'request': {'method': 'POST', 'url': 'https://10.0.0.100:50000/b1s/v1/U_API_LOG', 'data': {'U_Server': 'sap', 'U_EndPoint': 'U_API_LOG', 'U_Request': '{"method": "POST", "url": "https://10.0.0.100:50000/b1s/v1/U_API_LOG", "data": {"U_Server": "sap", "U_EndPoint": "U_API_LOG", "U_Request": "", "U_Response": "", "U_Status": "success", "U_Reference": "", "U_LogDate": "2025-07-09", "U_LogTime": "1544", "U_Action": "", "U_Value": ""}, "params": null}', 'U_Response': '', 'U_Status': 'success', 'U_Reference': '', 'U_LogDate': '2025-07-09', 'U_LogTime': '1544', 'U_Action': 'sap_post', 'U_Value': 'SAP POST request to U_API_LOG'}, 'params': None}, 'response': None, 'status': None}
2025-07-09 15:44:35,535 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'U_API_LOG', 'request': {'method': 'POST', 'url': 'https://10.0.0.100:50000/b1s/v1/U_API_LOG', 'data': {'U_Server': 'sap', 'U_EndPoint': 'U_API_LOG', 'U_Request': '{"method": "POST", "url": "https://10.0.0.100:50000/b1s/v1/U_API_LOG", "data": {"U_Server": "sap", "U_EndPoint": "U_API_LOG", "U_Request": "{\\"method\\": \\"POST\\", \\"url\\": \\"https://10.0.0.100:50000/b1s/v1/U_API_LOG\\", \\"data\\": {\\"U_Server\\": \\"sap\\", \\"U_EndPoint\\": \\"U_API_LOG\\", \\"U_Request\\": \\"\\", \\"U_Response\\": \\"\\", \\"U_Status\\": \\"success\\", \\"U_Reference\\": \\"\\", \\"U_LogDate\\": \\"2025-07-09\\", \\"U_LogTime\\": \\"1544\\", \\"U_Action\\": \\"\\", \\"U_Value\\": \\"\\"}, \\"params\\": null}", "U_Response": "", "U_Status": "success", "U_Reference": "", "U_LogDate": "2025-07-09", "U_LogTime": "1544", "U_Action": "sap_post", "U_Value": "SAP POST request to U_API_LOG"}, "params": null}', 'U_Response': '', 'U_Status': 'success', 'U_Reference': '', 'U_LogDate': '2025-07-09', 'U_LogTime': '1544', 'U_Action': '', 'U_Value': ''}, 'params': None}, 'response': None, 'status': None}
2025-07-09 15:44:35,537 - sync_service - ERROR - Error logging API call to SAP: maximum recursion depth exceeded while calling a Python object
2025-07-09 15:44:35,538 - sync_service - ERROR - Error logging API call to SAP: maximum recursion depth exceeded while calling a Python object
2025-07-09 15:44:35,539 - sync_service - ERROR - SAP request error: maximum recursion depth exceeded while calling a Python object
2025-07-09 15:44:35,540 - sync_service - ERROR - Error logging API call to SAP: maximum recursion depth exceeded while calling a Python object
2025-07-09 15:44:35,541 - sync_service - ERROR - Failed to add API log to SAP: SAP request error: maximum recursion depth exceeded while calling a Python object
2025-07-09 15:44:35,543 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'U_API_LOG', 'request': {'method': 'POST', 'url': 'https://10.0.0.100:50000/b1s/v1/U_API_LOG', 'data': {'U_Server': 'sap', 'U_EndPoint': 'U_API_LOG', 'U_Request': '{"method": "POST", "url": "https://10.0.0.100:50000/b1s/v1/U_API_LOG", "data": {"U_Server": "sap", "U_EndPoint": "U_API_LOG", "U_Request": "{\\"method\\": \\"POST\\", \\"url\\": \\"https://10.0.0.100:50000/b1s/v1/U_API_LOG\\", \\"data\\": {\\"U_Server\\": \\"sap\\", \\"U_EndPoint\\": \\"U_API_LOG\\", \\"U_Request\\": \\"\\", \\"U_Response\\": \\"\\", \\"U_Status\\": \\"success\\", \\"U_Reference\\": \\"\\", \\"U_LogDate\\": \\"2025-07-09\\", \\"U_LogTime\\": \\"1544\\", \\"U_Action\\": \\"\\", \\"U_Value\\": \\"\\"}, \\"params\\": null}", "U_Response": "", "U_Status": "success", "U_Reference": "", "U_LogDate": "2025-07-09", "U_LogTime": "1544", "U_Action": "sap_post", "U_Value": "SAP POST request to U_API_LOG"}, "params": null}', 'U_Response': '', 'U_Status': 'success', 'U_Reference': '', 'U_LogDate': '2025-07-09', 'U_LogTime': '1544', 'U_Action': 'sap_post', 'U_Value': 'SAP POST request to U_API_LOG'}, 'params': None}, 'response': None, 'status': None}
2025-07-09 15:44:35,545 - sync_service - ERROR - Error logging API call to SAP: maximum recursion depth exceeded while calling a Python object
2025-07-09 15:44:35,549 - sync_service - ERROR - Error logging API call to SAP: maximum recursion depth exceeded while calling a Python object
2025-07-09 15:44:35,551 - sync_service - ERROR - SAP request error: maximum recursion depth exceeded while calling a Python object
2025-07-09 15:44:35,559 - sync_service - ERROR - Error logging API call to SAP: maximum recursion depth exceeded while calling a Python object
2025-07-09 15:44:35,560 - sync_service - ERROR - Failed to add API log to SAP: SAP request error: maximum recursion depth exceeded while calling a Python object
2025-07-09 15:44:35,562 - sync_service - ERROR - SAP request error: maximum recursion depth exceeded while calling a Python object
2025-07-09 15:44:35,563 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'U_API_LOG', 'request': {'method': 'POST', 'url': 'https://10.0.0.100:50000/b1s/v1/U_API_LOG', 'data': {'U_Server': 'sap', 'U_EndPoint': 'U_API_LOG', 'U_Request': '', 'U_Response': '{"error": "SAP request error: maximum recursion depth exceeded while calling a Python object"}', 'U_Status': 'failure', 'U_Reference': '', 'U_LogDate': '2025-07-09', 'U_LogTime': '1544', 'U_Action': 'sap_post_exception', 'U_Value': 'SAP POST request exception to U_API_LOG: maximum recursion depth exceeded while calling a Python object'}, 'params': None}, 'response': None, 'status': None}
2025-07-09 15:44:35,565 - sync_service - ERROR - Error logging API call to SAP: maximum recursion depth exceeded while calling a Python object
2025-07-09 15:44:35,567 - sync_service - ERROR - Error logging API call to SAP: maximum recursion depth exceeded while calling a Python object
2025-07-09 15:44:35,569 - sync_service - ERROR - SAP request error: maximum recursion depth exceeded while calling a Python object
2025-07-09 15:44:35,570 - sync_service - ERROR - Error logging API call to SAP: maximum recursion depth exceeded while calling a Python object
2025-07-09 15:44:35,571 - sync_service - ERROR - Failed to add API log to SAP: SAP request error: maximum recursion depth exceeded while calling a Python object
2025-07-09 15:44:35,571 - sync_service - ERROR - Failed to add API log to SAP: SAP request error: maximum recursion depth exceeded while calling a Python object
2025-07-09 15:44:35,822 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'U_API_LOG', 'request': None, 'response': None, 'status': 'success'}
2025-07-09 15:44:35,823 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'U_API_LOG', 'request': {'method': 'POST', 'url': 'https://10.0.0.100:50000/b1s/v1/U_API_LOG', 'data': {'U_Server': 'sap', 'U_EndPoint': 'U_API_LOG', 'U_Request': '', 'U_Response': '', 'U_Status': 'success', 'U_Reference': '', 'U_LogDate': '2025-07-09', 'U_LogTime': '1544', 'U_Action': '', 'U_Value': ''}, 'params': None}, 'response': None, 'status': None}
2025-07-09 15:44:35,825 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'U_API_LOG', 'request': {'method': 'POST', 'url': 'https://10.0.0.100:50000/b1s/v1/U_API_LOG', 'data': {'U_Server': 'sap', 'U_EndPoint': 'U_API_LOG', 'U_Request': '{"method": "POST", "url": "https://10.0.0.100:50000/b1s/v1/U_API_LOG", "data": {"U_Server": "sap", "U_EndPoint": "U_API_LOG", "U_Request": "", "U_Response": "", "U_Status": "success", "U_Reference": "", "U_LogDate": "2025-07-09", "U_LogTime": "1544", "U_Action": "", "U_Value": ""}, "params": null}', 'U_Response': '', 'U_Status': 'success', 'U_Reference': '', 'U_LogDate': '2025-07-09', 'U_LogTime': '1544', 'U_Action': '', 'U_Value': ''}, 'params': None}, 'response': None, 'status': None}
2025-07-09 15:44:35,829 - sync_service - ERROR - Error logging API call to SAP: maximum recursion depth exceeded while calling a Python object
2025-07-09 15:44:35,838 - sync_service - ERROR - Error logging API call to SAP: maximum recursion depth exceeded while calling a Python object
2025-07-09 15:44:35,839 - sync_service - ERROR - SAP request error: maximum recursion depth exceeded while calling a Python object
2025-07-09 15:44:35,842 - sync_service - ERROR - Error logging API call to SAP: maximum recursion depth exceeded while calling a Python object
2025-07-09 15:44:35,844 - sync_service - ERROR - Failed to add API log to SAP: SAP request error: maximum recursion depth exceeded while calling a Python object
2025-07-09 15:44:35,844 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'U_API_LOG', 'request': {'method': 'POST', 'url': 'https://10.0.0.100:50000/b1s/v1/U_API_LOG', 'data': {'U_Server': 'sap', 'U_EndPoint': 'U_API_LOG', 'U_Request': '{"method": "POST", "url": "https://10.0.0.100:50000/b1s/v1/U_API_LOG", "data": {"U_Server": "sap", "U_EndPoint": "U_API_LOG", "U_Request": "", "U_Response": "", "U_Status": "success", "U_Reference": "", "U_LogDate": "2025-07-09", "U_LogTime": "1544", "U_Action": "", "U_Value": ""}, "params": null}', 'U_Response': '', 'U_Status': 'success', 'U_Reference': '', 'U_LogDate': '2025-07-09', 'U_LogTime': '1544', 'U_Action': 'sap_post', 'U_Value': 'SAP POST request to U_API_LOG'}, 'params': None}, 'response': None, 'status': None}
2025-07-09 15:44:35,848 - sync_service - ERROR - Error logging API call to SAP: maximum recursion depth exceeded while calling a Python object
2025-07-09 15:44:35,851 - sync_service - ERROR - Error logging API call to SAP: maximum recursion depth exceeded while calling a Python object
2025-07-09 15:44:35,853 - sync_service - ERROR - SAP request error: maximum recursion depth exceeded while calling a Python object
2025-07-09 15:44:35,854 - sync_service - ERROR - Error logging API call to SAP: maximum recursion depth exceeded while calling a Python object
2025-07-09 15:44:35,856 - sync_service - ERROR - Failed to add API log to SAP: SAP request error: maximum recursion depth exceeded while calling a Python object
2025-07-09 15:44:35,860 - sync_service - ERROR - SAP request error: maximum recursion depth exceeded while calling a Python object
2025-07-09 15:44:35,870 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'U_API_LOG', 'request': {'method': 'POST', 'url': 'https://10.0.0.100:50000/b1s/v1/U_API_LOG', 'data': {'U_Server': 'sap', 'U_EndPoint': 'U_API_LOG', 'U_Request': '', 'U_Response': '{"error": "SAP request error: maximum recursion depth exceeded while calling a Python object"}', 'U_Status': 'failure', 'U_Reference': '', 'U_LogDate': '2025-07-09', 'U_LogTime': '1544', 'U_Action': 'sap_post_exception', 'U_Value': 'SAP POST request exception to U_API_LOG: maximum recursion depth exceeded while calling a Python object'}, 'params': None}, 'response': None, 'status': None}
2025-07-09 15:44:35,888 - sync_service - ERROR - Error logging API call to SAP: maximum recursion depth exceeded while calling a Python object
2025-07-09 15:44:35,890 - sync_service - ERROR - Error logging API call to SAP: maximum recursion depth exceeded while calling a Python object
2025-07-09 15:44:35,892 - sync_service - ERROR - SAP request error: maximum recursion depth exceeded while calling a Python object
2025-07-09 15:44:35,894 - sync_service - ERROR - Error logging API call to SAP: maximum recursion depth exceeded while calling a Python object
2025-07-09 15:44:35,895 - sync_service - ERROR - Failed to add API log to SAP: SAP request error: maximum recursion depth exceeded while calling a Python object
2025-07-09 15:44:35,897 - sync_service - ERROR - Failed to add API log to SAP: SAP request error: maximum recursion depth exceeded while calling a Python object
2025-07-09 15:44:35,901 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'U_API_LOG', 'request': {'method': 'POST', 'url': 'https://10.0.0.100:50000/b1s/v1/U_API_LOG', 'data': {'U_Server': 'sap', 'U_EndPoint': 'U_API_LOG', 'U_Request': '', 'U_Response': '', 'U_Status': 'success', 'U_Reference': '', 'U_LogDate': '2025-07-09', 'U_LogTime': '1544', 'U_Action': 'sap_post_success', 'U_Value': 'SAP POST request successful to U_API_LOG'}, 'params': None}, 'response': None, 'status': None}
2025-07-09 15:44:35,903 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'U_API_LOG', 'request': {'method': 'POST', 'url': 'https://10.0.0.100:50000/b1s/v1/U_API_LOG', 'data': {'U_Server': 'sap', 'U_EndPoint': 'U_API_LOG', 'U_Request': '{"method": "POST", "url": "https://10.0.0.100:50000/b1s/v1/U_API_LOG", "data": {"U_Server": "sap", "U_EndPoint": "U_API_LOG", "U_Request": "", "U_Response": "", "U_Status": "success", "U_Reference": "", "U_LogDate": "2025-07-09", "U_LogTime": "1544", "U_Action": "sap_post_success", "U_Value": "SAP POST request successful to U_API_LOG"}, "params": null}', 'U_Response': '', 'U_Status': 'success', 'U_Reference': '', 'U_LogDate': '2025-07-09', 'U_LogTime': '1544', 'U_Action': '', 'U_Value': ''}, 'params': None}, 'response': None, 'status': None}
2025-07-09 15:44:35,905 - sync_service - ERROR - Error logging API call to SAP: maximum recursion depth exceeded while calling a Python object
2025-07-09 15:44:35,908 - sync_service - ERROR - Error logging API call to SAP: maximum recursion depth exceeded while calling a Python object
2025-07-09 15:44:35,914 - sync_service - ERROR - SAP request error: maximum recursion depth exceeded while calling a Python object
2025-07-09 15:44:35,920 - sync_service - ERROR - Error logging API call to SAP: maximum recursion depth exceeded while calling a Python object
2025-07-09 15:44:35,922 - sync_service - ERROR - Failed to add API log to SAP: SAP request error: maximum recursion depth exceeded while calling a Python object
2025-07-09 15:44:35,924 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'U_API_LOG', 'request': {'method': 'POST', 'url': 'https://10.0.0.100:50000/b1s/v1/U_API_LOG', 'data': {'U_Server': 'sap', 'U_EndPoint': 'U_API_LOG', 'U_Request': '{"method": "POST", "url": "https://10.0.0.100:50000/b1s/v1/U_API_LOG", "data": {"U_Server": "sap", "U_EndPoint": "U_API_LOG", "U_Request": "", "U_Response": "", "U_Status": "success", "U_Reference": "", "U_LogDate": "2025-07-09", "U_LogTime": "1544", "U_Action": "sap_post_success", "U_Value": "SAP POST request successful to U_API_LOG"}, "params": null}', 'U_Response': '', 'U_Status': 'success', 'U_Reference': '', 'U_LogDate': '2025-07-09', 'U_LogTime': '1544', 'U_Action': 'sap_post', 'U_Value': 'SAP POST request to U_API_LOG'}, 'params': None}, 'response': None, 'status': None}
2025-07-09 15:44:35,927 - sync_service - ERROR - Error logging API call to SAP: maximum recursion depth exceeded while calling a Python object
2025-07-09 15:44:35,930 - sync_service - ERROR - Error logging API call to SAP: maximum recursion depth exceeded while calling a Python object
2025-07-09 15:44:35,932 - sync_service - ERROR - SAP request error: maximum recursion depth exceeded while calling a Python object
2025-07-09 15:44:35,935 - sync_service - ERROR - Error logging API call to SAP: maximum recursion depth exceeded while calling a Python object
2025-07-09 15:44:35,936 - sync_service - ERROR - Failed to add API log to SAP: SAP request error: maximum recursion depth exceeded while calling a Python object
2025-07-09 15:44:35,942 - sync_service - ERROR - SAP request error: maximum recursion depth exceeded while calling a Python object
2025-07-09 15:44:35,943 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'U_API_LOG', 'request': {'method': 'POST', 'url': 'https://10.0.0.100:50000/b1s/v1/U_API_LOG', 'data': {'U_Server': 'sap', 'U_EndPoint': 'U_API_LOG', 'U_Request': '', 'U_Response': '{"error": "SAP request error: maximum recursion depth exceeded while calling a Python object"}', 'U_Status': 'failure', 'U_Reference': '', 'U_LogDate': '2025-07-09', 'U_LogTime': '1544', 'U_Action': 'sap_post_exception', 'U_Value': 'SAP POST request exception to U_API_LOG: maximum recursion depth exceeded while calling a Python object'}, 'params': None}, 'response': None, 'status': None}
2025-07-09 15:44:35,944 - sync_service - ERROR - Error logging API call to SAP: maximum recursion depth exceeded while calling a Python object
2025-07-09 15:44:35,945 - sync_service - ERROR - Error logging API call to SAP: maximum recursion depth exceeded while calling a Python object
2025-07-09 15:44:35,947 - sync_service - ERROR - SAP request error: maximum recursion depth exceeded while calling a Python object
2025-07-09 15:44:35,949 - sync_service - ERROR - Error logging API call to SAP: maximum recursion depth exceeded while calling a Python object
2025-07-09 15:44:35,950 - sync_service - ERROR - Failed to add API log to SAP: SAP request error: maximum recursion depth exceeded while calling a Python object
2025-07-09 15:44:35,951 - sync_service - ERROR - Failed to add API log to SAP: SAP request error: maximum recursion depth exceeded while calling a Python object
2025-07-09 15:44:35,954 - sync_service - INFO - API log added to SAP: sap - U_API_LOG - success
2025-07-09 15:44:35,955 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'U_API_LOG', 'request': {'method': 'POST', 'url': 'https://10.0.0.100:50000/b1s/v1/U_API_LOG', 'data': {'U_Server': 'sap', 'U_EndPoint': 'U_API_LOG', 'U_Request': '', 'U_Response': '', 'U_Status': 'success', 'U_Reference': '', 'U_LogDate': '2025-07-09', 'U_LogTime': '1544', 'U_Action': 'sap_post_success', 'U_Value': 'SAP POST request successful to U_API_LOG'}, 'params': None}, 'response': None, 'status': None}
2025-07-09 15:44:35,957 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'U_API_LOG', 'request': {'method': 'POST', 'url': 'https://10.0.0.100:50000/b1s/v1/U_API_LOG', 'data': {'U_Server': 'sap', 'U_EndPoint': 'U_API_LOG', 'U_Request': '{"method": "POST", "url": "https://10.0.0.100:50000/b1s/v1/U_API_LOG", "data": {"U_Server": "sap", "U_EndPoint": "U_API_LOG", "U_Request": "", "U_Response": "", "U_Status": "success", "U_Reference": "", "U_LogDate": "2025-07-09", "U_LogTime": "1544", "U_Action": "sap_post_success", "U_Value": "SAP POST request successful to U_API_LOG"}, "params": null}', 'U_Response': '', 'U_Status': 'success', 'U_Reference': '', 'U_LogDate': '2025-07-09', 'U_LogTime': '1544', 'U_Action': '', 'U_Value': ''}, 'params': None}, 'response': None, 'status': None}
2025-07-09 15:44:35,959 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'U_API_LOG', 'request': {'method': 'POST', 'url': 'https://10.0.0.100:50000/b1s/v1/U_API_LOG', 'data': {'U_Server': 'sap', 'U_EndPoint': 'U_API_LOG', 'U_Request': '{"method": "POST", "url": "https://10.0.0.100:50000/b1s/v1/U_API_LOG", "data": {"U_Server": "sap", "U_EndPoint": "U_API_LOG", "U_Request": "{\\"method\\": \\"POST\\", \\"url\\": \\"https://10.0.0.100:50000/b1s/v1/U_API_LOG\\", \\"data\\": {\\"U_Server\\": \\"sap\\", \\"U_EndPoint\\": \\"U_API_LOG\\", \\"U_Request\\": \\"\\", \\"U_Response\\": \\"\\", \\"U_Status\\": \\"success\\", \\"U_Reference\\": \\"\\", \\"U_LogDate\\": \\"2025-07-09\\", \\"U_LogTime\\": \\"1544\\", \\"U_Action\\": \\"sap_post_success\\", \\"U_Value\\": \\"SAP POST request successful to U_API_LOG\\"}, \\"params\\": null}", "U_Response": "", "U_Status": "success", "U_Reference": "", "U_LogDate": "2025-07-09", "U_LogTime": "1544", "U_Action": "", "U_Value": ""}, "params": null}', 'U_Response': '', 'U_Status': 'success', 'U_Reference': '', 'U_LogDate': '2025-07-09', 'U_LogTime': '1544', 'U_Action': '', 'U_Value': ''}, 'params': None}, 'response': None, 'status': None}
2025-07-09 15:44:35,961 - sync_service - ERROR - Error logging API call to SAP: maximum recursion depth exceeded while calling a Python object
2025-07-09 15:44:35,963 - sync_service - ERROR - Error logging API call to SAP: maximum recursion depth exceeded while calling a Python object
2025-07-09 15:44:35,965 - sync_service - ERROR - SAP request error: maximum recursion depth exceeded while calling a Python object
2025-07-09 15:44:35,970 - sync_service - ERROR - Error logging API call to SAP: maximum recursion depth exceeded while calling a Python object
2025-07-09 15:44:35,971 - sync_service - ERROR - Failed to add API log to SAP: SAP request error: maximum recursion depth exceeded while calling a Python object
2025-07-09 15:44:35,973 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'U_API_LOG', 'request': {'method': 'POST', 'url': 'https://10.0.0.100:50000/b1s/v1/U_API_LOG', 'data': {'U_Server': 'sap', 'U_EndPoint': 'U_API_LOG', 'U_Request': '{"method": "POST", "url": "https://10.0.0.100:50000/b1s/v1/U_API_LOG", "data": {"U_Server": "sap", "U_EndPoint": "U_API_LOG", "U_Request": "{\\"method\\": \\"POST\\", \\"url\\": \\"https://10.0.0.100:50000/b1s/v1/U_API_LOG\\", \\"data\\": {\\"U_Server\\": \\"sap\\", \\"U_EndPoint\\": \\"U_API_LOG\\", \\"U_Request\\": \\"\\", \\"U_Response\\": \\"\\", \\"U_Status\\": \\"success\\", \\"U_Reference\\": \\"\\", \\"U_LogDate\\": \\"2025-07-09\\", \\"U_LogTime\\": \\"1544\\", \\"U_Action\\": \\"sap_post_success\\", \\"U_Value\\": \\"SAP POST request successful to U_API_LOG\\"}, \\"params\\": null}", "U_Response": "", "U_Status": "success", "U_Reference": "", "U_LogDate": "2025-07-09", "U_LogTime": "1544", "U_Action": "", "U_Value": ""}, "params": null}', 'U_Response': '', 'U_Status': 'success', 'U_Reference': '', 'U_LogDate': '2025-07-09', 'U_LogTime': '1544', 'U_Action': 'sap_post', 'U_Value': 'SAP POST request to U_API_LOG'}, 'params': None}, 'response': None, 'status': None}
2025-07-09 15:44:35,976 - sync_service - ERROR - Error logging API call to SAP: maximum recursion depth exceeded while calling a Python object
2025-07-09 15:44:35,978 - sync_service - ERROR - Error logging API call to SAP: maximum recursion depth exceeded while calling a Python object
2025-07-09 15:44:35,979 - sync_service - ERROR - SAP request error: maximum recursion depth exceeded while calling a Python object
2025-07-09 15:44:35,980 - sync_service - ERROR - Error logging API call to SAP: maximum recursion depth exceeded while calling a Python object
2025-07-09 15:44:35,981 - sync_service - ERROR - Failed to add API log to SAP: SAP request error: maximum recursion depth exceeded while calling a Python object
2025-07-09 15:44:35,988 - sync_service - ERROR - SAP request error: maximum recursion depth exceeded while calling a Python object
2025-07-09 15:44:35,990 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'U_API_LOG', 'request': {'method': 'POST', 'url': 'https://10.0.0.100:50000/b1s/v1/U_API_LOG', 'data': {'U_Server': 'sap', 'U_EndPoint': 'U_API_LOG', 'U_Request': '', 'U_Response': '{"error": "SAP request error: maximum recursion depth exceeded while calling a Python object"}', 'U_Status': 'failure', 'U_Reference': '', 'U_LogDate': '2025-07-09', 'U_LogTime': '1544', 'U_Action': 'sap_post_exception', 'U_Value': 'SAP POST request exception to U_API_LOG: maximum recursion depth exceeded while calling a Python object'}, 'params': None}, 'response': None, 'status': None}
2025-07-09 15:44:35,993 - sync_service - ERROR - Error logging API call to SAP: maximum recursion depth exceeded while calling a Python object
2025-07-09 15:44:35,995 - sync_service - ERROR - Error logging API call to SAP: maximum recursion depth exceeded while calling a Python object
2025-07-09 15:44:35,997 - sync_service - ERROR - SAP request error: maximum recursion depth exceeded while calling a Python object
2025-07-09 15:44:36,000 - sync_service - ERROR - Error logging API call to SAP: maximum recursion depth exceeded while calling a Python object
2025-07-09 15:44:36,001 - sync_service - ERROR - Failed to add API log to SAP: SAP request error: maximum recursion depth exceeded while calling a Python object
2025-07-09 15:44:36,002 - sync_service - ERROR - Failed to add API log to SAP: SAP request error: maximum recursion depth exceeded while calling a Python object
2025-07-09 15:44:36,003 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'U_API_LOG', 'request': {'method': 'POST', 'url': 'https://10.0.0.100:50000/b1s/v1/U_API_LOG', 'data': {'U_Server': 'sap', 'U_EndPoint': 'U_API_LOG', 'U_Request': '{"method": "POST", "url": "https://10.0.0.100:50000/b1s/v1/U_API_LOG", "data": {"U_Server": "sap", "U_EndPoint": "U_API_LOG", "U_Request": "", "U_Response": "", "U_Status": "success", "U_Reference": "", "U_LogDate": "2025-07-09", "U_LogTime": "1544", "U_Action": "sap_post_success", "U_Value": "SAP POST request successful to U_API_LOG"}, "params": null}', 'U_Response': '', 'U_Status': 'success', 'U_Reference': '', 'U_LogDate': '2025-07-09', 'U_LogTime': '1544', 'U_Action': 'sap_post', 'U_Value': 'SAP POST request to U_API_LOG'}, 'params': None}, 'response': None, 'status': None}
2025-07-09 15:44:36,004 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'U_API_LOG', 'request': {'method': 'POST', 'url': 'https://10.0.0.100:50000/b1s/v1/U_API_LOG', 'data': {'U_Server': 'sap', 'U_EndPoint': 'U_API_LOG', 'U_Request': '{"method": "POST", "url": "https://10.0.0.100:50000/b1s/v1/U_API_LOG", "data": {"U_Server": "sap", "U_EndPoint": "U_API_LOG", "U_Request": "{\\"method\\": \\"POST\\", \\"url\\": \\"https://10.0.0.100:50000/b1s/v1/U_API_LOG\\", \\"data\\": {\\"U_Server\\": \\"sap\\", \\"U_EndPoint\\": \\"U_API_LOG\\", \\"U_Request\\": \\"\\", \\"U_Response\\": \\"\\", \\"U_Status\\": \\"success\\", \\"U_Reference\\": \\"\\", \\"U_LogDate\\": \\"2025-07-09\\", \\"U_LogTime\\": \\"1544\\", \\"U_Action\\": \\"sap_post_success\\", \\"U_Value\\": \\"SAP POST request successful to U_API_LOG\\"}, \\"params\\": null}", "U_Response": "", "U_Status": "success", "U_Reference": "", "U_LogDate": "2025-07-09", "U_LogTime": "1544", "U_Action": "sap_post", "U_Value": "SAP POST request to U_API_LOG"}, "params": null}', 'U_Response': '', 'U_Status': 'success', 'U_Reference': '', 'U_LogDate': '2025-07-09', 'U_LogTime': '1544', 'U_Action': '', 'U_Value': ''}, 'params': None}, 'response': None, 'status': None}
2025-07-09 15:44:36,007 - sync_service - ERROR - Error logging API call to SAP: maximum recursion depth exceeded while calling a Python object
2025-07-09 15:44:36,009 - sync_service - ERROR - Error logging API call to SAP: maximum recursion depth exceeded while calling a Python object
2025-07-09 15:44:36,010 - sync_service - ERROR - SAP request error: maximum recursion depth exceeded while calling a Python object
2025-07-09 15:44:36,011 - sync_service - ERROR - Error logging API call to SAP: maximum recursion depth exceeded while calling a Python object
2025-07-09 15:44:36,011 - sync_service - ERROR - Failed to add API log to SAP: SAP request error: maximum recursion depth exceeded while calling a Python object
2025-07-09 15:44:36,012 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'U_API_LOG', 'request': {'method': 'POST', 'url': 'https://10.0.0.100:50000/b1s/v1/U_API_LOG', 'data': {'U_Server': 'sap', 'U_EndPoint': 'U_API_LOG', 'U_Request': '{"method": "POST", "url": "https://10.0.0.100:50000/b1s/v1/U_API_LOG", "data": {"U_Server": "sap", "U_EndPoint": "U_API_LOG", "U_Request": "{\\"method\\": \\"POST\\", \\"url\\": \\"https://10.0.0.100:50000/b1s/v1/U_API_LOG\\", \\"data\\": {\\"U_Server\\": \\"sap\\", \\"U_EndPoint\\": \\"U_API_LOG\\", \\"U_Request\\": \\"\\", \\"U_Response\\": \\"\\", \\"U_Status\\": \\"success\\", \\"U_Reference\\": \\"\\", \\"U_LogDate\\": \\"2025-07-09\\", \\"U_LogTime\\": \\"1544\\", \\"U_Action\\": \\"sap_post_success\\", \\"U_Value\\": \\"SAP POST request successful to U_API_LOG\\"}, \\"params\\": null}", "U_Response": "", "U_Status": "success", "U_Reference": "", "U_LogDate": "2025-07-09", "U_LogTime": "1544", "U_Action": "sap_post", "U_Value": "SAP POST request to U_API_LOG"}, "params": null}', 'U_Response': '', 'U_Status': 'success', 'U_Reference': '', 'U_LogDate': '2025-07-09', 'U_LogTime': '1544', 'U_Action': 'sap_post', 'U_Value': 'SAP POST request to U_API_LOG'}, 'params': None}, 'response': None, 'status': None}
2025-07-09 15:44:36,013 - sync_service - ERROR - Error logging API call to SAP: maximum recursion depth exceeded while calling a Python object
2025-07-09 15:44:36,015 - sync_service - ERROR - Error logging API call to SAP: maximum recursion depth exceeded while calling a Python object
2025-07-09 15:44:36,017 - sync_service - ERROR - SAP request error: maximum recursion depth exceeded while calling a Python object
2025-07-09 15:44:36,020 - sync_service - ERROR - Error logging API call to SAP: maximum recursion depth exceeded while calling a Python object
2025-07-09 15:44:36,021 - sync_service - ERROR - Failed to add API log to SAP: SAP request error: maximum recursion depth exceeded while calling a Python object
2025-07-09 15:44:36,026 - sync_service - ERROR - SAP request error: maximum recursion depth exceeded while calling a Python object
2025-07-09 15:44:36,028 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'U_API_LOG', 'request': {'method': 'POST', 'url': 'https://10.0.0.100:50000/b1s/v1/U_API_LOG', 'data': {'U_Server': 'sap', 'U_EndPoint': 'U_API_LOG', 'U_Request': '', 'U_Response': '{"error": "SAP request error: maximum recursion depth exceeded while calling a Python object"}', 'U_Status': 'failure', 'U_Reference': '', 'U_LogDate': '2025-07-09', 'U_LogTime': '1544', 'U_Action': 'sap_post_exception', 'U_Value': 'SAP POST request exception to U_API_LOG: maximum recursion depth exceeded while calling a Python object'}, 'params': None}, 'response': None, 'status': None}
2025-07-09 15:44:36,028 - sync_service - ERROR - Error logging API call to SAP: maximum recursion depth exceeded while calling a Python object
2025-07-09 15:44:36,029 - sync_service - ERROR - Error logging API call to SAP: maximum recursion depth exceeded while calling a Python object
2025-07-09 15:44:36,031 - sync_service - ERROR - SAP request error: maximum recursion depth exceeded while calling a Python object
2025-07-09 15:44:36,034 - sync_service - ERROR - Error logging API call to SAP: maximum recursion depth exceeded while calling a Python object
2025-07-09 15:44:36,035 - sync_service - ERROR - Failed to add API log to SAP: SAP request error: maximum recursion depth exceeded while calling a Python object
2025-07-09 15:44:36,036 - sync_service - ERROR - Failed to add API log to SAP: SAP request error: maximum recursion depth exceeded while calling a Python object
2025-07-09 15:44:36,260 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'U_API_LOG', 'request': None, 'response': None, 'status': 'success'}
2025-07-09 15:44:36,261 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'U_API_LOG', 'request': {'method': 'POST', 'url': 'https://10.0.0.100:50000/b1s/v1/U_API_LOG', 'data': {'U_Server': 'sap', 'U_EndPoint': 'U_API_LOG', 'U_Request': '', 'U_Response': '', 'U_Status': 'success', 'U_Reference': '', 'U_LogDate': '2025-07-09', 'U_LogTime': '1544', 'U_Action': '', 'U_Value': ''}, 'params': None}, 'response': None, 'status': None}
2025-07-09 15:44:36,263 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'U_API_LOG', 'request': {'method': 'POST', 'url': 'https://10.0.0.100:50000/b1s/v1/U_API_LOG', 'data': {'U_Server': 'sap', 'U_EndPoint': 'U_API_LOG', 'U_Request': '{"method": "POST", "url": "https://10.0.0.100:50000/b1s/v1/U_API_LOG", "data": {"U_Server": "sap", "U_EndPoint": "U_API_LOG", "U_Request": "", "U_Response": "", "U_Status": "success", "U_Reference": "", "U_LogDate": "2025-07-09", "U_LogTime": "1544", "U_Action": "", "U_Value": ""}, "params": null}', 'U_Response': '', 'U_Status': 'success', 'U_Reference': '', 'U_LogDate': '2025-07-09', 'U_LogTime': '1544', 'U_Action': '', 'U_Value': ''}, 'params': None}, 'response': None, 'status': None}
2025-07-09 15:44:36,268 - sync_service - ERROR - Error logging API call to SAP: maximum recursion depth exceeded while calling a Python object
2025-07-09 15:44:36,272 - sync_service - ERROR - Error logging API call to SAP: maximum recursion depth exceeded while calling a Python object
2025-07-09 15:44:36,274 - sync_service - ERROR - SAP request error: maximum recursion depth exceeded while calling a Python object
2025-07-09 15:44:36,276 - sync_service - ERROR - Error logging API call to SAP: maximum recursion depth exceeded while calling a Python object
2025-07-09 15:44:36,277 - sync_service - ERROR - Failed to add API log to SAP: SAP request error: maximum recursion depth exceeded while calling a Python object
2025-07-09 15:44:36,277 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'U_API_LOG', 'request': {'method': 'POST', 'url': 'https://10.0.0.100:50000/b1s/v1/U_API_LOG', 'data': {'U_Server': 'sap', 'U_EndPoint': 'U_API_LOG', 'U_Request': '{"method": "POST", "url": "https://10.0.0.100:50000/b1s/v1/U_API_LOG", "data": {"U_Server": "sap", "U_EndPoint": "U_API_LOG", "U_Request": "", "U_Response": "", "U_Status": "success", "U_Reference": "", "U_LogDate": "2025-07-09", "U_LogTime": "1544", "U_Action": "", "U_Value": ""}, "params": null}', 'U_Response': '', 'U_Status': 'success', 'U_Reference': '', 'U_LogDate': '2025-07-09', 'U_LogTime': '1544', 'U_Action': 'sap_post', 'U_Value': 'SAP POST request to U_API_LOG'}, 'params': None}, 'response': None, 'status': None}
2025-07-09 15:44:36,279 - sync_service - ERROR - Error logging API call to SAP: maximum recursion depth exceeded while calling a Python object
2025-07-09 15:44:36,280 - sync_service - ERROR - Error logging API call to SAP: maximum recursion depth exceeded while calling a Python object
2025-07-09 15:44:36,282 - sync_service - ERROR - SAP request error: maximum recursion depth exceeded while calling a Python object
2025-07-09 15:44:36,284 - sync_service - ERROR - Error logging API call to SAP: maximum recursion depth exceeded while calling a Python object
2025-07-09 15:44:36,285 - sync_service - ERROR - Failed to add API log to SAP: SAP request error: maximum recursion depth exceeded while calling a Python object
2025-07-09 15:44:36,290 - sync_service - ERROR - SAP request error: maximum recursion depth exceeded while calling a Python object
2025-07-09 15:44:36,291 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'U_API_LOG', 'request': {'method': 'POST', 'url': 'https://10.0.0.100:50000/b1s/v1/U_API_LOG', 'data': {'U_Server': 'sap', 'U_EndPoint': 'U_API_LOG', 'U_Request': '', 'U_Response': '{"error": "SAP request error: maximum recursion depth exceeded while calling a Python object"}', 'U_Status': 'failure', 'U_Reference': '', 'U_LogDate': '2025-07-09', 'U_LogTime': '1544', 'U_Action': 'sap_post_exception', 'U_Value': 'SAP POST request exception to U_API_LOG: maximum recursion depth exceeded while calling a Python object'}, 'params': None}, 'response': None, 'status': None}
2025-07-09 15:44:36,293 - sync_service - ERROR - Error logging API call to SAP: maximum recursion depth exceeded while calling a Python object
2025-07-09 15:44:36,294 - sync_service - ERROR - Error logging API call to SAP: maximum recursion depth exceeded while calling a Python object
2025-07-09 15:44:36,295 - sync_service - ERROR - SAP request error: maximum recursion depth exceeded while calling a Python object
2025-07-09 15:44:36,296 - sync_service - ERROR - Error logging API call to SAP: maximum recursion depth exceeded while calling a Python object
2025-07-09 15:44:36,298 - sync_service - ERROR - Failed to add API log to SAP: SAP request error: maximum recursion depth exceeded while calling a Python object
2025-07-09 15:44:36,298 - sync_service - ERROR - Failed to add API log to SAP: SAP request error: maximum recursion depth exceeded while calling a Python object
2025-07-09 15:44:36,300 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'U_API_LOG', 'request': {'method': 'POST', 'url': 'https://10.0.0.100:50000/b1s/v1/U_API_LOG', 'data': {'U_Server': 'sap', 'U_EndPoint': 'U_API_LOG', 'U_Request': '', 'U_Response': '', 'U_Status': 'success', 'U_Reference': '', 'U_LogDate': '2025-07-09', 'U_LogTime': '1544', 'U_Action': 'sap_post_success', 'U_Value': 'SAP POST request successful to U_API_LOG'}, 'params': None}, 'response': None, 'status': None}
2025-07-09 15:44:36,301 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'U_API_LOG', 'request': {'method': 'POST', 'url': 'https://10.0.0.100:50000/b1s/v1/U_API_LOG', 'data': {'U_Server': 'sap', 'U_EndPoint': 'U_API_LOG', 'U_Request': '{"method": "POST", "url": "https://10.0.0.100:50000/b1s/v1/U_API_LOG", "data": {"U_Server": "sap", "U_EndPoint": "U_API_LOG", "U_Request": "", "U_Response": "", "U_Status": "success", "U_Reference": "", "U_LogDate": "2025-07-09", "U_LogTime": "1544", "U_Action": "sap_post_success", "U_Value": "SAP POST request successful to U_API_LOG"}, "params": null}', 'U_Response': '', 'U_Status': 'success', 'U_Reference': '', 'U_LogDate': '2025-07-09', 'U_LogTime': '1544', 'U_Action': '', 'U_Value': ''}, 'params': None}, 'response': None, 'status': None}
2025-07-09 15:44:36,303 - sync_service - ERROR - Error logging API call to SAP: maximum recursion depth exceeded while calling a Python object
2025-07-09 15:44:36,304 - sync_service - ERROR - Error logging API call to SAP: maximum recursion depth exceeded while calling a Python object
2025-07-09 15:44:36,306 - sync_service - ERROR - SAP request error: maximum recursion depth exceeded while calling a Python object
2025-07-09 15:44:36,309 - sync_service - ERROR - Error logging API call to SAP: maximum recursion depth exceeded while calling a Python object
2025-07-09 15:44:36,310 - sync_service - ERROR - Failed to add API log to SAP: SAP request error: maximum recursion depth exceeded while calling a Python object
2025-07-09 15:44:36,311 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'U_API_LOG', 'request': {'method': 'POST', 'url': 'https://10.0.0.100:50000/b1s/v1/U_API_LOG', 'data': {'U_Server': 'sap', 'U_EndPoint': 'U_API_LOG', 'U_Request': '{"method": "POST", "url": "https://10.0.0.100:50000/b1s/v1/U_API_LOG", "data": {"U_Server": "sap", "U_EndPoint": "U_API_LOG", "U_Request": "", "U_Response": "", "U_Status": "success", "U_Reference": "", "U_LogDate": "2025-07-09", "U_LogTime": "1544", "U_Action": "sap_post_success", "U_Value": "SAP POST request successful to U_API_LOG"}, "params": null}', 'U_Response': '', 'U_Status': 'success', 'U_Reference': '', 'U_LogDate': '2025-07-09', 'U_LogTime': '1544', 'U_Action': 'sap_post', 'U_Value': 'SAP POST request to U_API_LOG'}, 'params': None}, 'response': None, 'status': None}
2025-07-09 15:44:36,312 - sync_service - ERROR - Error logging API call to SAP: maximum recursion depth exceeded while calling a Python object
2025-07-09 15:44:36,319 - sync_service - ERROR - Error logging API call to SAP: maximum recursion depth exceeded while calling a Python object
2025-07-09 15:44:36,321 - sync_service - ERROR - SAP request error: maximum recursion depth exceeded while calling a Python object
2025-07-09 15:44:36,325 - sync_service - ERROR - Error logging API call to SAP: maximum recursion depth exceeded while calling a Python object
2025-07-09 15:44:36,326 - sync_service - ERROR - Failed to add API log to SAP: SAP request error: maximum recursion depth exceeded while calling a Python object
2025-07-09 15:44:36,328 - sync_service - ERROR - SAP request error: maximum recursion depth exceeded while calling a Python object
2025-07-09 15:44:36,329 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'U_API_LOG', 'request': {'method': 'POST', 'url': 'https://10.0.0.100:50000/b1s/v1/U_API_LOG', 'data': {'U_Server': 'sap', 'U_EndPoint': 'U_API_LOG', 'U_Request': '', 'U_Response': '{"error": "SAP request error: maximum recursion depth exceeded while calling a Python object"}', 'U_Status': 'failure', 'U_Reference': '', 'U_LogDate': '2025-07-09', 'U_LogTime': '1544', 'U_Action': 'sap_post_exception', 'U_Value': 'SAP POST request exception to U_API_LOG: maximum recursion depth exceeded while calling a Python object'}, 'params': None}, 'response': None, 'status': None}
2025-07-09 15:44:36,331 - sync_service - ERROR - Error logging API call to SAP: maximum recursion depth exceeded while calling a Python object
2025-07-09 15:44:36,332 - sync_service - ERROR - Error logging API call to SAP: maximum recursion depth exceeded while calling a Python object
2025-07-09 15:44:36,334 - sync_service - ERROR - SAP request error: maximum recursion depth exceeded while calling a Python object
2025-07-09 15:44:36,336 - sync_service - ERROR - Error logging API call to SAP: maximum recursion depth exceeded while calling a Python object
2025-07-09 15:44:36,337 - sync_service - ERROR - Failed to add API log to SAP: SAP request error: maximum recursion depth exceeded while calling a Python object
2025-07-09 15:44:36,337 - sync_service - ERROR - Failed to add API log to SAP: SAP request error: maximum recursion depth exceeded while calling a Python object
2025-07-09 15:44:36,340 - sync_service - INFO - API log added to SAP: sap - U_API_LOG - success
2025-07-09 15:44:36,344 - sync_service - INFO - API log added to SAP: sap - login - success
2025-07-09 15:44:36,344 - sync_service - INFO - SAP login successful
2025-07-09 15:44:36,346 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'U_API_LOG', 'request': {'method': 'POST', 'url': 'https://10.0.0.100:50000/b1s/v1/U_API_LOG', 'data': {'U_Server': 'sap', 'U_EndPoint': 'login', 'U_Request': '{"company": "JudeBenHalim_Test", "user": "manager"}', 'U_Response': '', 'U_Status': 'success', 'U_Reference': '', 'U_LogDate': '2025-07-09', 'U_LogTime': '1544', 'U_Action': '', 'U_Value': ''}, 'params': None}, 'response': None, 'status': None}
2025-07-09 15:44:36,350 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'U_API_LOG', 'request': {'method': 'POST', 'url': 'https://10.0.0.100:50000/b1s/v1/U_API_LOG', 'data': {'U_Server': 'sap', 'U_EndPoint': 'U_API_LOG', 'U_Request': '{"method": "POST", "url": "https://10.0.0.100:50000/b1s/v1/U_API_LOG", "data": {"U_Server": "sap", "U_EndPoint": "login", "U_Request": "{\\"company\\": \\"JudeBenHalim_Test\\", \\"user\\": \\"manager\\"}", "U_Response": "", "U_Status": "success", "U_Reference": "", "U_LogDate": "2025-07-09", "U_LogTime": "1544", "U_Action": "", "U_Value": ""}, "params": null}', 'U_Response': '', 'U_Status': 'success', 'U_Reference': '', 'U_LogDate': '2025-07-09', 'U_LogTime': '1544', 'U_Action': '', 'U_Value': ''}, 'params': None}, 'response': None, 'status': None}
2025-07-09 15:44:36,352 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'U_API_LOG', 'request': {'method': 'POST', 'url': 'https://10.0.0.100:50000/b1s/v1/U_API_LOG', 'data': {'U_Server': 'sap', 'U_EndPoint': 'U_API_LOG', 'U_Request': '{"method": "POST", "url": "https://10.0.0.100:50000/b1s/v1/U_API_LOG", "data": {"U_Server": "sap", "U_EndPoint": "U_API_LOG", "U_Request": "{\\"method\\": \\"POST\\", \\"url\\": \\"https://10.0.0.100:50000/b1s/v1/U_API_LOG\\", \\"data\\": {\\"U_Server\\": \\"sap\\", \\"U_EndPoint\\": \\"login\\", \\"U_Request\\": \\"{\\\\\\"company\\\\\\": \\\\\\"JudeBenHalim_Test\\\\\\", \\\\\\"user\\\\\\": \\\\\\"manager\\\\\\"}\\", \\"U_Response\\": \\"\\", \\"U_Status\\": \\"success\\", \\"U_Reference\\": \\"\\", \\"U_LogDate\\": \\"2025-07-09\\", \\"U_LogTime\\": \\"1544\\", \\"U_Action\\": \\"\\", \\"U_Value\\": \\"\\"}, \\"params\\": null}", "U_Response": "", "U_Status": "success", "U_Reference": "", "U_LogDate": "2025-07-09", "U_LogTime": "1544", "U_Action": "", "U_Value": ""}, "params": null}', 'U_Response': '', 'U_Status': 'success', 'U_Reference': '', 'U_LogDate': '2025-07-09', 'U_LogTime': '1544', 'U_Action': '', 'U_Value': ''}, 'params': None}, 'response': None, 'status': None}
2025-07-09 15:44:36,354 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'U_API_LOG', 'request': {'method': 'POST', 'url': 'https://10.0.0.100:50000/b1s/v1/U_API_LOG', 'data': {'U_Server': 'sap', 'U_EndPoint': 'U_API_LOG', 'U_Request': '{"method": "POST", "url": "https://10.0.0.100:50000/b1s/v1/U_API_LOG", "data": {"U_Server": "sap", "U_EndPoint": "U_API_LOG", "U_Request": "{\\"method\\": \\"POST\\", \\"url\\": \\"https://10.0.0.100:50000/b1s/v1/U_API_LOG\\", \\"data\\": {\\"U_Server\\": \\"sap\\", \\"U_EndPoint\\": \\"U_API_LOG\\", \\"U_Request\\": \\"{\\\\\\"method\\\\\\": \\\\\\"POST\\\\\\", \\\\\\"url\\\\\\": \\\\\\"https://10.0.0.100:50000/b1s/v1/U_API_LOG\\\\\\", \\\\\\"data\\\\\\": {\\\\\\"U_Server\\\\\\": \\\\\\"sap\\\\\\", \\\\\\"U_EndPoint\\\\\\": \\\\\\"login\\\\\\", \\\\\\"U_Request\\\\\\": \\\\\\"{\\\\\\\\\\\\\\"company\\\\\\\\\\\\\\": \\\\\\\\\\\\\\"JudeBenHalim_Test\\\\\\\\\\\\\\", \\\\\\\\\\\\\\"user\\\\\\\\\\\\\\": \\\\\\\\\\\\\\"manager\\\\\\\\\\\\\\"}\\\\\\", \\\\\\"U_Response\\\\\\": \\\\\\"\\\\\\", \\\\\\"U_Status\\\\\\": \\\\\\"success\\\\\\", \\\\\\"U_Reference\\\\\\": \\\\\\"\\\\\\", \\\\\\"U_LogDate\\\\\\": \\\\\\"2025-07-09\\\\\\", \\\\\\"U_LogTime\\\\\\": \\\\\\"1544\\\\\\", \\\\\\"U_Action\\\\\\": \\\\\\"\\\\\\", \\\\\\"U_Value\\\\\\": \\\\\\"\\\\\\"}, \\\\\\"params\\\\\\": null}\\", \\"U_Response\\": \\"\\", \\"U_Status\\": \\"success\\", \\"U_Reference\\": \\"\\", \\"U_LogDate\\": \\"2025-07-09\\", \\"U_LogTime\\": \\"1544\\", \\"U_Action\\": \\"\\", \\"U_Value\\": \\"\\"}, \\"params\\": null}", "U_Response": "", "U_Status": "success", "U_Reference": "", "U_LogDate": "2025-07-09", "U_LogTime": "1544", "U_Action": "", "U_Value": ""}, "params": null}', 'U_Response': '', 'U_Status': 'success', 'U_Reference': '', 'U_LogDate': '2025-07-09', 'U_LogTime': '1544', 'U_Action': '', 'U_Value': ''}, 'params': None}, 'response': None, 'status': None}
2025-07-09 15:44:36,356 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'U_API_LOG', 'request': {'method': 'POST', 'url': 'https://10.0.0.100:50000/b1s/v1/U_API_LOG', 'data': {'U_Server': 'sap', 'U_EndPoint': 'U_API_LOG', 'U_Request': '{"method": "POST", "url": "https://10.0.0.100:50000/b1s/v1/U_API_LOG", "data": {"U_Server": "sap", "U_EndPoint": "U_API_LOG", "U_Request": "{\\"method\\": \\"POST\\", \\"url\\": \\"https://10.0.0.100:50000/b1s/v1/U_API_LOG\\", \\"data\\": {\\"U_Server\\": \\"sap\\", \\"U_EndPoint\\": \\"U_API_LOG\\", \\"U_Request\\": \\"{\\\\\\"method\\\\\\": \\\\\\"POST\\\\\\", \\\\\\"url\\\\\\": \\\\\\"https://10.0.0.100:50000/b1s/v1/U_API_LOG\\\\\\", \\\\\\"data\\\\\\": {\\\\\\"U_Server\\\\\\": \\\\\\"sap\\\\\\", \\\\\\"U_EndPoint\\\\\\": \\\\\\"U_API_LOG\\\\\\", \\\\\\"U_Request\\\\\\": \\\\\\"{\\\\\\\\\\\\\\"method\\\\\\\\\\\\\\": \\\\\\\\\\\\\\"POST\\\\\\\\\\\\\\", \\\\\\\\\\\\\\"url\\\\\\\\\\\\\\": \\\\\\\\\\\\\\"https://10.0.0.100:50000/b1s/v1/U_API_LOG\\\\\\\\\\\\\\", \\\\\\\\\\\\\\"data\\\\\\\\\\\\\\": {\\\\\\\\\\\\\\"U_Server\\\\\\\\\\\\\\": \\\\\\\\\\\\\\"sap\\\\\\\\\\\\\\", \\\\\\\\\\\\\\"U_EndPoint\\\\\\\\\\\\\\": \\\\\\\\\\\\\\"login\\\\\\\\\\\\\\", \\\\\\\\\\\\\\"U_Request\\\\\\\\\\\\\\": \\\\\\\\\\\\\\"{\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"company\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\": \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"JudeBenHalim_Test\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\", \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"user\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\": \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"manager\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"}\\\\\\\\\\\\\\", \\\\\\\\\\\\\\"U_Response\\\\\\\\\\\\\\": \\\\\\\\\\\\\\"\\\\\\\\\\\\\\", \\\\\\\\\\\\\\"U_Status\\\\\\\\\\\\\\": \\\\\\\\\\\\\\"success\\\\\\\\\\\\\\", \\\\\\\\\\\\\\"U_Reference\\\\\\\\\\\\\\": \\\\\\\\\\\\\\"\\\\\\\\\\\\\\", \\\\\\\\\\\\\\"U_LogDate\\\\\\\\\\\\\\": \\\\\\\\\\\\\\"2025-07-09\\\\\\\\\\\\\\", \\\\\\\\\\\\\\"U_LogTime\\\\\\\\\\\\\\": \\\\\\\\\\\\\\"1544\\\\\\\\\\\\\\", \\\\\\\\\\\\\\"U_Action\\\\\\\\\\\\\\": \\\\\\\\\\\\\\"\\\\\\\\\\\\\\", \\\\\\\\\\\\\\"U_Value\\\\\\\\\\\\\\": \\\\\\\\\\\\\\"\\\\\\\\\\\\\\"}, \\\\\\\\\\\\\\"params\\\\\\\\\\\\\\": null}\\\\\\", \\\\\\"U_Response\\\\\\": \\\\\\"\\\\\\", \\\\\\"U_Status\\\\\\": \\\\\\"success\\\\\\", \\\\\\"U_Reference\\\\\\": \\\\\\"\\\\\\", \\\\\\"U_LogDate\\\\\\": \\\\\\"2025-07-09\\\\\\", \\\\\\"U_LogTime\\\\\\": \\\\\\"1544\\\\\\", \\\\\\"U_Action\\\\\\": \\\\\\"\\\\\\", \\\\\\"U_Value\\\\\\": \\\\\\"\\\\\\"}, \\\\\\"params\\\\\\": null}\\", \\"U_Response\\": \\"\\", \\"U_Status\\": \\"success\\", \\"U_Reference\\": \\"\\", \\"U_LogDate\\": \\"2025-07-09\\", \\"U_LogTime\\": \\"1544\\", \\"U_Action\\": \\"\\", \\"U_Value\\": \\"\\"}, \\"params\\": null}", "U_Response": "", "U_Status": "success", "U_Reference": "", "U_LogDate": "2025-07-09", "U_LogTime": "1544", "U_Action": "", "U_Value": ""}, "params": null}', 'U_Response': '', 'U_Status': 'success', 'U_Reference': '', 'U_LogDate': '2025-07-09', 'U_LogTime': '1544', 'U_Action': '', 'U_Value': ''}, 'params': None}, 'response': None, 'status': None}
2025-07-09 15:44:44,378 - sync_service - ERROR - Error logging API call to SAP: RetryError[<Future at 0x1f1e9273d60 state=finished raised RecursionError>]
2025-07-09 15:44:52,403 - sync_service - ERROR - Error logging API call to SAP: RetryError[<Future at 0x1f1e9272cb0 state=finished raised RecursionError>]
2025-07-09 15:44:52,407 - sync_service - ERROR - SAP request error: maximum recursion depth exceeded
2025-07-09 15:45:00,431 - sync_service - ERROR - Error logging API call to SAP: RetryError[<Future at 0x1f1e9271150 state=finished raised RecursionError>]
2025-07-09 15:45:00,434 - sync_service - ERROR - Failed to add API log to SAP: SAP request error: maximum recursion depth exceeded
2025-07-09 15:45:00,438 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'U_API_LOG', 'request': {'method': 'POST', 'url': 'https://10.0.0.100:50000/b1s/v1/U_API_LOG', 'data': {'U_Server': 'sap', 'U_EndPoint': 'U_API_LOG', 'U_Request': '{"method": "POST", "url": "https://10.0.0.100:50000/b1s/v1/U_API_LOG", "data": {"U_Server": "sap", "U_EndPoint": "U_API_LOG", "U_Request": "{\\"method\\": \\"POST\\", \\"url\\": \\"https://10.0.0.100:50000/b1s/v1/U_API_LOG\\", \\"data\\": {\\"U_Server\\": \\"sap\\", \\"U_EndPoint\\": \\"U_API_LOG\\", \\"U_Request\\": \\"{\\\\\\"method\\\\\\": \\\\\\"POST\\\\\\", \\\\\\"url\\\\\\": \\\\\\"https://10.0.0.100:50000/b1s/v1/U_API_LOG\\\\\\", \\\\\\"data\\\\\\": {\\\\\\"U_Server\\\\\\": \\\\\\"sap\\\\\\", \\\\\\"U_EndPoint\\\\\\": \\\\\\"U_API_LOG\\\\\\", \\\\\\"U_Request\\\\\\": \\\\\\"{\\\\\\\\\\\\\\"method\\\\\\\\\\\\\\": \\\\\\\\\\\\\\"POST\\\\\\\\\\\\\\", \\\\\\\\\\\\\\"url\\\\\\\\\\\\\\": \\\\\\\\\\\\\\"https://10.0.0.100:50000/b1s/v1/U_API_LOG\\\\\\\\\\\\\\", \\\\\\\\\\\\\\"data\\\\\\\\\\\\\\": {\\\\\\\\\\\\\\"U_Server\\\\\\\\\\\\\\": \\\\\\\\\\\\\\"sap\\\\\\\\\\\\\\", \\\\\\\\\\\\\\"U_EndPoint\\\\\\\\\\\\\\": \\\\\\\\\\\\\\"login\\\\\\\\\\\\\\", \\\\\\\\\\\\\\"U_Request\\\\\\\\\\\\\\": \\\\\\\\\\\\\\"{\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"company\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\": \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"JudeBenHalim_Test\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\", \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"user\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\": \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"manager\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"}\\\\\\\\\\\\\\", \\\\\\\\\\\\\\"U_Response\\\\\\\\\\\\\\": \\\\\\\\\\\\\\"\\\\\\\\\\\\\\", \\\\\\\\\\\\\\"U_Status\\\\\\\\\\\\\\": \\\\\\\\\\\\\\"success\\\\\\\\\\\\\\", \\\\\\\\\\\\\\"U_Reference\\\\\\\\\\\\\\": \\\\\\\\\\\\\\"\\\\\\\\\\\\\\", \\\\\\\\\\\\\\"U_LogDate\\\\\\\\\\\\\\": \\\\\\\\\\\\\\"2025-07-09\\\\\\\\\\\\\\", \\\\\\\\\\\\\\"U_LogTime\\\\\\\\\\\\\\": \\\\\\\\\\\\\\"1544\\\\\\\\\\\\\\", \\\\\\\\\\\\\\"U_Action\\\\\\\\\\\\\\": \\\\\\\\\\\\\\"\\\\\\\\\\\\\\", \\\\\\\\\\\\\\"U_Value\\\\\\\\\\\\\\": \\\\\\\\\\\\\\"\\\\\\\\\\\\\\"}, \\\\\\\\\\\\\\"params\\\\\\\\\\\\\\": null}\\\\\\", \\\\\\"U_Response\\\\\\": \\\\\\"\\\\\\", \\\\\\"U_Status\\\\\\": \\\\\\"success\\\\\\", \\\\\\"U_Reference\\\\\\": \\\\\\"\\\\\\", \\\\\\"U_LogDate\\\\\\": \\\\\\"2025-07-09\\\\\\", \\\\\\"U_LogTime\\\\\\": \\\\\\"1544\\\\\\", \\\\\\"U_Action\\\\\\": \\\\\\"\\\\\\", \\\\\\"U_Value\\\\\\": \\\\\\"\\\\\\"}, \\\\\\"params\\\\\\": null}\\", \\"U_Response\\": \\"\\", \\"U_Status\\": \\"success\\", \\"U_Reference\\": \\"\\", \\"U_LogDate\\": \\"2025-07-09\\", \\"U_LogTime\\": \\"1544\\", \\"U_Action\\": \\"\\", \\"U_Value\\": \\"\\"}, \\"params\\": null}", "U_Response": "", "U_Status": "success", "U_Reference": "", "U_LogDate": "2025-07-09", "U_LogTime": "1544", "U_Action": "", "U_Value": ""}, "params": null}', 'U_Response': '', 'U_Status': 'success', 'U_Reference': '', 'U_LogDate': '2025-07-09', 'U_LogTime': '1545', 'U_Action': 'sap_post', 'U_Value': 'SAP POST request to U_API_LOG'}, 'params': None}, 'response': None, 'status': None}
2025-07-09 15:45:08,475 - sync_service - ERROR - Error logging API call to SAP: RetryError[<Future at 0x1f1e9273340 state=finished raised RecursionError>]
2025-07-09 15:45:16,512 - sync_service - ERROR - Error logging API call to SAP: RetryError[<Future at 0x1f1e9273370 state=finished raised RecursionError>]
2025-07-09 15:45:16,515 - sync_service - ERROR - SAP request error: maximum recursion depth exceeded
2025-07-09 15:45:24,544 - sync_service - ERROR - Error logging API call to SAP: RetryError[<Future at 0x1f1e9272e90 state=finished raised RecursionError>]
2025-07-09 15:45:24,544 - sync_service - ERROR - Failed to add API log to SAP: SAP request error: maximum recursion depth exceeded
2025-07-09 15:45:24,551 - sync_service - ERROR - SAP request error: maximum recursion depth exceeded while calling a Python object
2025-07-09 15:45:24,553 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'U_API_LOG', 'request': {'method': 'POST', 'url': 'https://10.0.0.100:50000/b1s/v1/U_API_LOG', 'data': {'U_Server': 'sap', 'U_EndPoint': 'U_API_LOG', 'U_Request': '', 'U_Response': '{"error": "SAP request error: maximum recursion depth exceeded while calling a Python object"}', 'U_Status': 'failure', 'U_Reference': '', 'U_LogDate': '2025-07-09', 'U_LogTime': '1545', 'U_Action': 'sap_post_exception', 'U_Value': 'SAP POST request exception to U_API_LOG: maximum recursion depth exceeded while calling a Python object'}, 'params': None}, 'response': None, 'status': None}
2025-07-09 15:45:32,579 - sync_service - ERROR - Error logging API call to SAP: RetryError[<Future at 0x1f1e9273700 state=finished raised RecursionError>]
2025-07-09 15:45:40,605 - sync_service - ERROR - Error logging API call to SAP: RetryError[<Future at 0x1f1e9273430 state=finished raised RecursionError>]
2025-07-09 15:45:40,610 - sync_service - ERROR - SAP request error: maximum recursion depth exceeded
2025-07-09 15:45:48,683 - sync_service - ERROR - Error logging API call to SAP: RetryError[<Future at 0x1f1e9272020 state=finished raised RecursionError>]
2025-07-09 15:45:48,685 - sync_service - ERROR - Failed to add API log to SAP: SAP request error: maximum recursion depth exceeded
2025-07-09 15:45:48,686 - sync_service - ERROR - Failed to add API log to SAP: SAP request error: maximum recursion depth exceeded while calling a Python object
2025-07-09 15:45:48,687 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'U_API_LOG', 'request': {'method': 'POST', 'url': 'https://10.0.0.100:50000/b1s/v1/U_API_LOG', 'data': {'U_Server': 'sap', 'U_EndPoint': 'U_API_LOG', 'U_Request': '{"method": "POST", "url": "https://10.0.0.100:50000/b1s/v1/U_API_LOG", "data": {"U_Server": "sap", "U_EndPoint": "U_API_LOG", "U_Request": "{\\"method\\": \\"POST\\", \\"url\\": \\"https://10.0.0.100:50000/b1s/v1/U_API_LOG\\", \\"data\\": {\\"U_Server\\": \\"sap\\", \\"U_EndPoint\\": \\"U_API_LOG\\", \\"U_Request\\": \\"{\\\\\\"method\\\\\\": \\\\\\"POST\\\\\\", \\\\\\"url\\\\\\": \\\\\\"https://10.0.0.100:50000/b1s/v1/U_API_LOG\\\\\\", \\\\\\"data\\\\\\": {\\\\\\"U_Server\\\\\\": \\\\\\"sap\\\\\\", \\\\\\"U_EndPoint\\\\\\": \\\\\\"login\\\\\\", \\\\\\"U_Request\\\\\\": \\\\\\"{\\\\\\\\\\\\\\"company\\\\\\\\\\\\\\": \\\\\\\\\\\\\\"JudeBenHalim_Test\\\\\\\\\\\\\\", \\\\\\\\\\\\\\"user\\\\\\\\\\\\\\": \\\\\\\\\\\\\\"manager\\\\\\\\\\\\\\"}\\\\\\", \\\\\\"U_Response\\\\\\": \\\\\\"\\\\\\", \\\\\\"U_Status\\\\\\": \\\\\\"success\\\\\\", \\\\\\"U_Reference\\\\\\": \\\\\\"\\\\\\", \\\\\\"U_LogDate\\\\\\": \\\\\\"2025-07-09\\\\\\", \\\\\\"U_LogTime\\\\\\": \\\\\\"1544\\\\\\", \\\\\\"U_Action\\\\\\": \\\\\\"\\\\\\", \\\\\\"U_Value\\\\\\": \\\\\\"\\\\\\"}, \\\\\\"params\\\\\\": null}\\", \\"U_Response\\": \\"\\", \\"U_Status\\": \\"success\\", \\"U_Reference\\": \\"\\", \\"U_LogDate\\": \\"2025-07-09\\", \\"U_LogTime\\": \\"1544\\", \\"U_Action\\": \\"\\", \\"U_Value\\": \\"\\"}, \\"params\\": null}", "U_Response": "", "U_Status": "success", "U_Reference": "", "U_LogDate": "2025-07-09", "U_LogTime": "1544", "U_Action": "", "U_Value": ""}, "params": null}', 'U_Response': '', 'U_Status': 'success', 'U_Reference': '', 'U_LogDate': '2025-07-09', 'U_LogTime': '1545', 'U_Action': 'sap_post', 'U_Value': 'SAP POST request to U_API_LOG'}, 'params': None}, 'response': None, 'status': None}
2025-07-09 15:45:48,689 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'U_API_LOG', 'request': {'method': 'POST', 'url': 'https://10.0.0.100:50000/b1s/v1/U_API_LOG', 'data': {'U_Server': 'sap', 'U_EndPoint': 'U_API_LOG', 'U_Request': '{"method": "POST", "url": "https://10.0.0.100:50000/b1s/v1/U_API_LOG", "data": {"U_Server": "sap", "U_EndPoint": "U_API_LOG", "U_Request": "{\\"method\\": \\"POST\\", \\"url\\": \\"https://10.0.0.100:50000/b1s/v1/U_API_LOG\\", \\"data\\": {\\"U_Server\\": \\"sap\\", \\"U_EndPoint\\": \\"U_API_LOG\\", \\"U_Request\\": \\"{\\\\\\"method\\\\\\": \\\\\\"POST\\\\\\", \\\\\\"url\\\\\\": \\\\\\"https://10.0.0.100:50000/b1s/v1/U_API_LOG\\\\\\", \\\\\\"data\\\\\\": {\\\\\\"U_Server\\\\\\": \\\\\\"sap\\\\\\", \\\\\\"U_EndPoint\\\\\\": \\\\\\"U_API_LOG\\\\\\", \\\\\\"U_Request\\\\\\": \\\\\\"{\\\\\\\\\\\\\\"method\\\\\\\\\\\\\\": \\\\\\\\\\\\\\"POST\\\\\\\\\\\\\\", \\\\\\\\\\\\\\"url\\\\\\\\\\\\\\": \\\\\\\\\\\\\\"https://10.0.0.100:50000/b1s/v1/U_API_LOG\\\\\\\\\\\\\\", \\\\\\\\\\\\\\"data\\\\\\\\\\\\\\": {\\\\\\\\\\\\\\"U_Server\\\\\\\\\\\\\\": \\\\\\\\\\\\\\"sap\\\\\\\\\\\\\\", \\\\\\\\\\\\\\"U_EndPoint\\\\\\\\\\\\\\": \\\\\\\\\\\\\\"login\\\\\\\\\\\\\\", \\\\\\\\\\\\\\"U_Request\\\\\\\\\\\\\\": \\\\\\\\\\\\\\"{\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"company\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\": \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"JudeBenHalim_Test\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\", \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"user\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\": \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"manager\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"}\\\\\\\\\\\\\\", \\\\\\\\\\\\\\"U_Response\\\\\\\\\\\\\\": \\\\\\\\\\\\\\"\\\\\\\\\\\\\\", \\\\\\\\\\\\\\"U_Status\\\\\\\\\\\\\\": \\\\\\\\\\\\\\"success\\\\\\\\\\\\\\", \\\\\\\\\\\\\\"U_Reference\\\\\\\\\\\\\\": \\\\\\\\\\\\\\"\\\\\\\\\\\\\\", \\\\\\\\\\\\\\"U_LogDate\\\\\\\\\\\\\\": \\\\\\\\\\\\\\"2025-07-09\\\\\\\\\\\\\\", \\\\\\\\\\\\\\"U_LogTime\\\\\\\\\\\\\\": \\\\\\\\\\\\\\"1544\\\\\\\\\\\\\\", \\\\\\\\\\\\\\"U_Action\\\\\\\\\\\\\\": \\\\\\\\\\\\\\"\\\\\\\\\\\\\\", \\\\\\\\\\\\\\"U_Value\\\\\\\\\\\\\\": \\\\\\\\\\\\\\"\\\\\\\\\\\\\\"}, \\\\\\\\\\\\\\"params\\\\\\\\\\\\\\": null}\\\\\\", \\\\\\"U_Response\\\\\\": \\\\\\"\\\\\\", \\\\\\"U_Status\\\\\\": \\\\\\"success\\\\\\", \\\\\\"U_Reference\\\\\\": \\\\\\"\\\\\\", \\\\\\"U_LogDate\\\\\\": \\\\\\"2025-07-09\\\\\\", \\\\\\"U_LogTime\\\\\\": \\\\\\"1544\\\\\\", \\\\\\"U_Action\\\\\\": \\\\\\"\\\\\\", \\\\\\"U_Value\\\\\\": \\\\\\"\\\\\\"}, \\\\\\"params\\\\\\": null}\\", \\"U_Response\\": \\"\\", \\"U_Status\\": \\"success\\", \\"U_Reference\\": \\"\\", \\"U_LogDate\\": \\"2025-07-09\\", \\"U_LogTime\\": \\"1544\\", \\"U_Action\\": \\"\\", \\"U_Value\\": \\"\\"}, \\"params\\": null}", "U_Response": "", "U_Status": "success", "U_Reference": "", "U_LogDate": "2025-07-09", "U_LogTime": "1545", "U_Action": "sap_post", "U_Value": "SAP POST request to U_API_LOG"}, "params": null}', 'U_Response': '', 'U_Status': 'success', 'U_Reference': '', 'U_LogDate': '2025-07-09', 'U_LogTime': '1545', 'U_Action': '', 'U_Value': ''}, 'params': None}, 'response': None, 'status': None}
2025-07-09 15:45:56,718 - sync_service - ERROR - Error logging API call to SAP: RetryError[<Future at 0x1f1e9272440 state=finished raised RecursionError>]
2025-07-09 15:46:04,738 - sync_service - ERROR - Error logging API call to SAP: RetryError[<Future at 0x1f1e9272860 state=finished raised RecursionError>]
2025-07-09 15:46:04,837 - sync_service - ERROR - SAP request error: maximum recursion depth exceeded
2025-07-09 15:46:12,879 - sync_service - ERROR - Error logging API call to SAP: RetryError[<Future at 0x1f1e92734f0 state=finished raised RecursionError>]
2025-07-09 15:46:12,880 - sync_service - ERROR - Failed to add API log to SAP: SAP request error: maximum recursion depth exceeded
2025-07-09 15:46:12,883 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'U_API_LOG', 'request': {'method': 'POST', 'url': 'https://10.0.0.100:50000/b1s/v1/U_API_LOG', 'data': {'U_Server': 'sap', 'U_EndPoint': 'U_API_LOG', 'U_Request': '{"method": "POST", "url": "https://10.0.0.100:50000/b1s/v1/U_API_LOG", "data": {"U_Server": "sap", "U_EndPoint": "U_API_LOG", "U_Request": "{\\"method\\": \\"POST\\", \\"url\\": \\"https://10.0.0.100:50000/b1s/v1/U_API_LOG\\", \\"data\\": {\\"U_Server\\": \\"sap\\", \\"U_EndPoint\\": \\"U_API_LOG\\", \\"U_Request\\": \\"{\\\\\\"method\\\\\\": \\\\\\"POST\\\\\\", \\\\\\"url\\\\\\": \\\\\\"https://10.0.0.100:50000/b1s/v1/U_API_LOG\\\\\\", \\\\\\"data\\\\\\": {\\\\\\"U_Server\\\\\\": \\\\\\"sap\\\\\\", \\\\\\"U_EndPoint\\\\\\": \\\\\\"U_API_LOG\\\\\\", \\\\\\"U_Request\\\\\\": \\\\\\"{\\\\\\\\\\\\\\"method\\\\\\\\\\\\\\": \\\\\\\\\\\\\\"POST\\\\\\\\\\\\\\", \\\\\\\\\\\\\\"url\\\\\\\\\\\\\\": \\\\\\\\\\\\\\"https://10.0.0.100:50000/b1s/v1/U_API_LOG\\\\\\\\\\\\\\", \\\\\\\\\\\\\\"data\\\\\\\\\\\\\\": {\\\\\\\\\\\\\\"U_Server\\\\\\\\\\\\\\": \\\\\\\\\\\\\\"sap\\\\\\\\\\\\\\", \\\\\\\\\\\\\\"U_EndPoint\\\\\\\\\\\\\\": \\\\\\\\\\\\\\"login\\\\\\\\\\\\\\", \\\\\\\\\\\\\\"U_Request\\\\\\\\\\\\\\": \\\\\\\\\\\\\\"{\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"company\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\": \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"JudeBenHalim_Test\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\", \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"user\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\": \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"manager\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"}\\\\\\\\\\\\\\", \\\\\\\\\\\\\\"U_Response\\\\\\\\\\\\\\": \\\\\\\\\\\\\\"\\\\\\\\\\\\\\", \\\\\\\\\\\\\\"U_Status\\\\\\\\\\\\\\": \\\\\\\\\\\\\\"success\\\\\\\\\\\\\\", \\\\\\\\\\\\\\"U_Reference\\\\\\\\\\\\\\": \\\\\\\\\\\\\\"\\\\\\\\\\\\\\", \\\\\\\\\\\\\\"U_LogDate\\\\\\\\\\\\\\": \\\\\\\\\\\\\\"2025-07-09\\\\\\\\\\\\\\", \\\\\\\\\\\\\\"U_LogTime\\\\\\\\\\\\\\": \\\\\\\\\\\\\\"1544\\\\\\\\\\\\\\", \\\\\\\\\\\\\\"U_Action\\\\\\\\\\\\\\": \\\\\\\\\\\\\\"\\\\\\\\\\\\\\", \\\\\\\\\\\\\\"U_Value\\\\\\\\\\\\\\": \\\\\\\\\\\\\\"\\\\\\\\\\\\\\"}, \\\\\\\\\\\\\\"params\\\\\\\\\\\\\\": null}\\\\\\", \\\\\\"U_Response\\\\\\": \\\\\\"\\\\\\", \\\\\\"U_Status\\\\\\": \\\\\\"success\\\\\\", \\\\\\"U_Reference\\\\\\": \\\\\\"\\\\\\", \\\\\\"U_LogDate\\\\\\": \\\\\\"2025-07-09\\\\\\", \\\\\\"U_LogTime\\\\\\": \\\\\\"1544\\\\\\", \\\\\\"U_Action\\\\\\": \\\\\\"\\\\\\", \\\\\\"U_Value\\\\\\": \\\\\\"\\\\\\"}, \\\\\\"params\\\\\\": null}\\", \\"U_Response\\": \\"\\", \\"U_Status\\": \\"success\\", \\"U_Reference\\": \\"\\", \\"U_LogDate\\": \\"2025-07-09\\", \\"U_LogTime\\": \\"1544\\", \\"U_Action\\": \\"\\", \\"U_Value\\": \\"\\"}, \\"params\\": null}", "U_Response": "", "U_Status": "success", "U_Reference": "", "U_LogDate": "2025-07-09", "U_LogTime": "1545", "U_Action": "sap_post", "U_Value": "SAP POST request to U_API_LOG"}, "params": null}', 'U_Response': '', 'U_Status': 'success', 'U_Reference': '', 'U_LogDate': '2025-07-09', 'U_LogTime': '1546', 'U_Action': 'sap_post', 'U_Value': 'SAP POST request to U_API_LOG'}, 'params': None}, 'response': None, 'status': None}
2025-07-09 15:46:20,921 - sync_service - ERROR - Error logging API call to SAP: RetryError[<Future at 0x1f1e9272110 state=finished raised RecursionError>]
2025-07-09 15:46:28,954 - sync_service - ERROR - Error logging API call to SAP: RetryError[<Future at 0x1f1e9273310 state=finished raised RecursionError>]
2025-07-09 15:46:28,957 - sync_service - ERROR - SAP request error: maximum recursion depth exceeded
2025-07-09 15:47:58,331 - sync_service - INFO - Initialized Shopify client for store: Local Store (local)
2025-07-09 15:48:09,923 - sync_service - INFO - Initialized Shopify client for store: Local Store (local)
2025-07-09 15:48:09,928 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'login', 'request': {'company': 'JudeBenHalim_Test', 'user': 'manager'}, 'response': None, 'status': None}
2025-07-09 15:48:30,197 - sync_service - INFO - SAP logging client login successful
2025-07-09 15:48:30,812 - sync_service - INFO - API log added to SAP: sap - login - success
2025-07-09 15:48:31,430 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'login', 'request': None, 'response': {'status': 'success'}, 'status': 'success'}
2025-07-09 15:48:31,628 - sync_service - INFO - API log added to SAP: sap - login - success
2025-07-09 15:48:31,630 - sync_service - INFO - SAP login successful
2025-07-09 15:48:31,631 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': "view.svc/MASHURA_New_ItemsB1SLQuery?$filter=Shopify_Store eq 'local'&$orderby=MainProduct", 'request': {'method': 'GET', 'url': "https://10.0.0.100:50000/b1s/v1/view.svc/MASHURA_New_ItemsB1SLQuery?$filter=Shopify_Store eq 'local'&$orderby=MainProduct", 'data': None, 'params': None}, 'response': None, 'status': None}
2025-07-09 15:48:31,757 - sync_service - INFO - API log added to SAP: sap - view.svc/MASHURA_New_ItemsB1SLQuery?$filter=Shopify_Store eq 'local'&$orderby=MainProduct - success
2025-07-09 15:48:31,858 - sync_service - INFO - API log added to SAP: sap - view.svc/MASHURA_New_ItemsB1SLQuery?$filter=Shopify_Store eq 'local'&$orderby=MainProduct - success
2025-07-09 15:48:32,051 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': "view.svc/MASHURA_New_ItemsB1SLQuery?$filter=Shopify_Store eq 'local'&$orderby=MainProduct", 'request': None, 'response': {'odata.metadata': 'https://10.0.0.100:50000/b1s/v1/view.svc/$metadata#MASHURA_New_ItemsB1SLQuery', 'value': [{'itemcode': 'FG-0000704', 'ItemName': 'Morsi-Green', 'MainProduct': 'Morsi Necklace', 'Color': 'Green', 'OnHand': 0.0, 'IsCommited': 0.0, 'Available': 0.0, 'Price': 2500.0, 'Status': 'existing', 'Shopify_ProductCode': '7510108733506', 'Shopify_Store': 'local', 'id__': 1}]}, 'status': 'success'}
2025-07-09 15:48:32,201 - sync_service - INFO - API log added to SAP: sap - view.svc/MASHURA_New_ItemsB1SLQuery?$filter=Shopify_Store eq 'local'&$orderby=MainProduct - success
2025-07-09 15:48:32,361 - sync_service - INFO - API log added to SAP: sap - view.svc/MASHURA_New_ItemsB1SLQuery?$filter=Shopify_Store eq 'local'&$orderby=MainProduct - success
2025-07-09 15:48:32,364 - sync_service - INFO - Product group: ('Morsi Necklace', 'local') has 1 items
2025-07-09 15:48:32,370 - sync_service - INFO - Starting multi-store new items sync from SAP to Shopify
2025-07-09 15:48:32,371 - sync_service - INFO - Fetching new items for store: local
2025-07-09 15:48:32,373 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': "view.svc/MASHURA_New_ItemsB1SLQuery?$filter=Shopify_Store eq 'local'&$orderby=MainProduct", 'request': {'method': 'GET', 'url': "https://10.0.0.100:50000/b1s/v1/view.svc/MASHURA_New_ItemsB1SLQuery?$filter=Shopify_Store eq 'local'&$orderby=MainProduct", 'data': None, 'params': None}, 'response': None, 'status': None}
2025-07-09 15:48:32,513 - sync_service - INFO - API log added to SAP: sap - view.svc/MASHURA_New_ItemsB1SLQuery?$filter=Shopify_Store eq 'local'&$orderby=MainProduct - success
2025-07-09 15:48:32,618 - sync_service - INFO - API log added to SAP: sap - view.svc/MASHURA_New_ItemsB1SLQuery?$filter=Shopify_Store eq 'local'&$orderby=MainProduct - success
2025-07-09 15:48:33,121 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': "view.svc/MASHURA_New_ItemsB1SLQuery?$filter=Shopify_Store eq 'local'&$orderby=MainProduct", 'request': None, 'response': {'odata.metadata': 'https://10.0.0.100:50000/b1s/v1/view.svc/$metadata#MASHURA_New_ItemsB1SLQuery', 'value': [{'itemcode': 'FG-0000704', 'ItemName': 'Morsi-Green', 'MainProduct': 'Morsi Necklace', 'Color': 'Green', 'OnHand': 0.0, 'IsCommited': 0.0, 'Available': 0.0, 'Price': 2500.0, 'Status': 'existing', 'Shopify_ProductCode': '7510108733506', 'Shopify_Store': 'local', 'id__': 1}]}, 'status': 'success'}
2025-07-09 15:48:33,246 - sync_service - INFO - API log added to SAP: sap - view.svc/MASHURA_New_ItemsB1SLQuery?$filter=Shopify_Store eq 'local'&$orderby=MainProduct - success
2025-07-09 15:48:33,358 - sync_service - INFO - API log added to SAP: sap - view.svc/MASHURA_New_ItemsB1SLQuery?$filter=Shopify_Store eq 'local'&$orderby=MainProduct - success
2025-07-09 15:48:33,361 - sync_service - INFO - Product group: ('Morsi Necklace', 'local') has 1 items
2025-07-09 15:48:33,363 - sync_service - INFO - Grouped 1 items into 1 product groups for store local
2025-07-09 15:48:33,372 - sync_service - INFO - Processing product group: ('Morsi Necklace', 'local') with 1 items for store local
2025-07-09 15:48:33,375 - sync_service - INFO - API Call: {'service': 'shopify', 'endpoint': 'graphql_local', 'request': {'query': '\n        mutation productCreate($input: ProductInput!) {\n            productCreate(input: $input) {\n                product {\n                    id\n                    title\n                    handle\n                    variants(first: 50) {\n                        edges {\n                            node {\n                                id\n                                sku\n                                inventoryItem {\n                                    id\n                                }\n                                selectedOptions {\n                                    name\n                                    value\n                                }\n                            }\n                        }\n                    }\n                }\n                userErrors {\n                    field\n                    message\n                }\n            }\n        }\n        ', 'variables': {'input': {'title': 'Morsi-Green', 'descriptionHtml': '', 'vendor': '', 'productType': 'Default', 'status': 'DRAFT', 'tags': [], 'variants': [{'sku': 'FG-0000704', 'price': '2500.0', 'inventoryPolicy': 'DENY', 'inventoryManagement': 'SHOPIFY', 'inventoryQuantities': [{'availableQuantity': 10, 'locationId': 'gid://shopify/Location/68605345858'}], 'weight': 0.0, 'weightUnit': 'KILOGRAMS', 'option1': 'Green'}], 'seo': {'title': 'Morsi-Green', 'description': ''}}}}, 'response': None, 'status': None}
2025-07-09 15:48:33,470 - sync_service - INFO - API log added to SAP: shopify - graphql_local - success
2025-07-09 15:48:33,582 - sync_service - ERROR - Failed to add API log to SAP: HTTP 400: {
   "error" : {
      "code" : -1,
      "message" : {
         "lang" : "en-us",
         "value" : "CServiceData::SetPropertyValueString failed; Value too long in property 'U_Action' of 'U_API_LOG'"
      }
   }
}

2025-07-09 15:48:43,613 - sync_service - ERROR - GraphQL query error for store local: 
2025-07-09 15:48:43,728 - sync_service - ERROR - Failed to add API log to SAP: HTTP 400: {
   "error" : {
      "code" : -1,
      "message" : {
         "lang" : "en-us",
         "value" : "CServiceData::SetPropertyValueString failed; Value too long in property 'U_Action' of 'U_API_LOG'"
      }
   }
}

2025-07-09 15:48:43,730 - sync_service - ERROR - Failed to create product in store local: GraphQL query error for store local: 
2025-07-09 15:48:44,239 - sync_service - INFO - Sync Event: {'sync_type': 'multi_store_new_items_sap_to_shopify', 'items_processed': 1, 'success_count': 0, 'error_count': 1, 'details': None}
2025-07-09 15:48:44,241 - sync_service - INFO - Multi-store new items sync completed: 1 processed, 0 successful, 1 errors
2025-07-09 15:48:44,244 - sync_service - INFO - Product group: ('TEST-PRODUCT', 'store1') has 1 items
2025-07-09 15:53:09,977 - sync_service - INFO - Initialized Shopify client for store: Local Store (local)
2025-07-09 15:53:14,161 - sync_service - INFO - Initialized Shopify client for store: Local Store (local)
2025-07-09 15:53:14,167 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'login', 'request': {'company': 'JudeBenHalim_Test', 'user': 'manager'}, 'response': None, 'status': None}
2025-07-09 15:53:14,169 - sync_service - ERROR - SAP login error: object NoneType can't be used in 'await' expression
2025-07-09 15:53:14,171 - sync_service - INFO - Product group: ('TEST-PRODUCT', 'store1') has 1 items
2025-07-09 15:53:18,841 - sync_service - INFO - Initialized Shopify client for store: Local Store (local)
2025-07-09 15:53:18,849 - sync_service - INFO - Starting multi-store new items sync from SAP to Shopify
2025-07-09 15:53:19,402 - sync_service - INFO - SAP logging client login successful
2025-07-09 15:53:20,006 - sync_service - INFO - API log added to SAP: system - /sync/new_items_multi_store - success
2025-07-09 15:53:20,008 - sync_service - INFO - Fetching new items for store: local
2025-07-09 15:53:20,009 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'login', 'request': {'company': 'JudeBenHalim_Test', 'user': 'manager'}, 'response': None, 'status': None}
2025-07-09 15:53:20,009 - sync_service - ERROR - SAP login error: object NoneType can't be used in 'await' expression
2025-07-09 15:53:20,013 - sync_service - ERROR - Failed to get new items from SAP for store local: Failed to login to SAP
2025-07-09 15:53:20,014 - sync_service - INFO - Sync Event: {'sync_type': 'multi_store_new_items_sap_to_shopify', 'items_processed': 0, 'success_count': 0, 'error_count': 0, 'details': None}
2025-07-09 15:53:20,258 - sync_service - INFO - API log added to SAP: system - /sync/new_items_multi_store - success
2025-07-09 15:53:20,306 - sync_service - INFO - Multi-store new items sync completed: 0 processed, 0 successful, 0 errors
2025-07-09 15:54:28,231 - sync_service - INFO - Initialized Shopify client for store: Local Store (local)
2025-07-09 15:54:28,241 - sync_service - INFO - Starting multi-store new items sync from SAP to Shopify
2025-07-09 15:54:28,879 - sync_service - INFO - SAP logging client login successful
2025-07-09 15:54:29,596 - sync_service - INFO - API log added to SAP: system - /sync/new_items_multi_store - success
2025-07-09 15:54:29,596 - sync_service - INFO - Fetching new items for store: local
2025-07-09 15:54:29,596 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'login', 'request': {'company': 'JudeBenHalim_Test', 'user': 'manager'}, 'response': None, 'status': None}
2025-07-09 15:54:30,129 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'login', 'request': None, 'response': {'status': 'success'}, 'status': 'success'}
2025-07-09 15:54:30,129 - sync_service - INFO - SAP login successful
2025-07-09 15:54:30,131 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': "view.svc/MASHURA_New_ItemsB1SLQuery?$filter=Shopify_Store eq 'local'&$orderby=MainProduct", 'request': {'method': 'GET', 'url': "https://10.0.0.100:50000/b1s/v1/view.svc/MASHURA_New_ItemsB1SLQuery?$filter=Shopify_Store eq 'local'&$orderby=MainProduct", 'data': None, 'params': None}, 'response': None, 'status': None}
2025-07-09 15:54:30,639 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': "view.svc/MASHURA_New_ItemsB1SLQuery?$filter=Shopify_Store eq 'local'&$orderby=MainProduct", 'request': None, 'response': {'odata.metadata': 'https://10.0.0.100:50000/b1s/v1/view.svc/$metadata#MASHURA_New_ItemsB1SLQuery', 'value': [{'itemcode': 'FG-0000704', 'ItemName': 'Morsi-Green', 'MainProduct': 'Morsi Necklace', 'Color': 'Green', 'OnHand': 0.0, 'IsCommited': 0.0, 'Available': 0.0, 'Price': 2500.0, 'Status': 'existing', 'Shopify_ProductCode': '7510108733506', 'Shopify_Store': 'local', 'id__': 1}]}, 'status': 'success'}
2025-07-09 15:54:30,643 - sync_service - INFO - Product group: ('Morsi Necklace', 'local') has 1 items
2025-07-09 15:54:30,646 - sync_service - INFO - Grouped 1 items into 1 product groups for store local
2025-07-09 15:54:30,647 - sync_service - INFO - Processing product group: ('Morsi Necklace', 'local') with 1 items for store local
2025-07-09 15:54:30,787 - sync_service - INFO - API log added to SAP: shopify - /admin/api/graphql_local - success
2025-07-09 15:54:30,789 - sync_service - INFO - API Call: {'service': 'shopify', 'endpoint': 'graphql_local', 'request': {'query': '\n        mutation productCreate($input: ProductInput!) {\n            productCreate(input: $input) {\n                product {\n                    id\n                    title\n                    handle\n                    variants(first: 50) {\n                        edges {\n                            node {\n                                id\n                                sku\n                                inventoryItem {\n                                    id\n                                }\n                                selectedOptions {\n                                    name\n                                    value\n                                }\n                            }\n                        }\n                    }\n                }\n                userErrors {\n                    field\n                    message\n                }\n            }\n        }\n        ', 'variables': {'input': {'title': 'Morsi-Green', 'descriptionHtml': '', 'vendor': '', 'productType': 'Default', 'status': 'DRAFT', 'tags': [], 'variants': [{'sku': 'FG-0000704', 'price': '2500.0', 'inventoryPolicy': 'DENY', 'inventoryManagement': 'SHOPIFY', 'inventoryQuantities': [{'availableQuantity': 10, 'locationId': 'gid://shopify/Location/68605345858'}], 'weight': 0.0, 'weightUnit': 'KILOGRAMS', 'option1': 'Green'}], 'seo': {'title': 'Morsi-Green', 'description': ''}}}}, 'response': None, 'status': None}
2025-07-09 15:54:31,261 - sync_service - ERROR - GraphQL query error for store local: {'message': 'Variable $input of type ProductInput! was provided invalid value for variants.0.option1 (Field is not defined on ProductVariantInput)', 'locations': [{'line': 1, 'column': 24}], 'extensions': {'value': {'title': 'Morsi-Green', 'descriptionHtml': '', 'vendor': '', 'productType': 'Default', 'status': 'DRAFT', 'tags': [], 'variants': [{'sku': 'FG-0000704', 'price': '2500.0', 'inventoryPolicy': 'DENY', 'inventoryManagement': 'SHOPIFY', 'inventoryQuantities': [{'availableQuantity': 10, 'locationId': 'gid://shopify/Location/68605345858'}], 'weight': 0.0, 'weightUnit': 'KILOGRAMS', 'option1': 'Green'}], 'seo': {'title': 'Morsi-Green', 'description': ''}}, 'problems': [{'path': ['variants', 0, 'option1'], 'explanation': 'Field is not defined on ProductVariantInput'}]}}
GraphQL Errors: [
  {
    "message": "Variable $input of type ProductInput! was provided invalid value for variants.0.option1 (Field is not defined on ProductVariantInput)",
    "locations": [
      {
        "line": 1,
        "column": 24
      }
    ],
    "extensions": {
      "value": {
        "title": "Morsi-Green",
        "descriptionHtml": "",
        "vendor": "",
        "productType": "Default",
        "status": "DRAFT",
        "tags": [],
        "variants": [
          {
            "sku": "FG-0000704",
            "price": "2500.0",
            "inventoryPolicy": "DENY",
            "inventoryManagement": "SHOPIFY",
            "inventoryQuantities": [
              {
                "availableQuantity": 10,
                "locationId": "gid://shopify/Location/68605345858"
              }
            ],
            "weight": 0.0,
            "weightUnit": "KILOGRAMS",
            "option1": "Green"
          }
        ],
        "seo": {
          "title": "Morsi-Green",
          "description": ""
        }
      },
      "problems": [
        {
          "path": [
            "variants",
            0,
            "option1"
          ],
          "explanation": "Field is not defined on ProductVariantInput"
        }
      ]
    }
  }
]
2025-07-09 15:54:31,263 - sync_service - ERROR - Shopify full response for store local: {'msg': 'failure', 'error': 'GraphQL query error for store local: {\'message\': \'Variable $input of type ProductInput! was provided invalid value for variants.0.option1 (Field is not defined on ProductVariantInput)\', \'locations\': [{\'line\': 1, \'column\': 24}], \'extensions\': {\'value\': {\'title\': \'Morsi-Green\', \'descriptionHtml\': \'\', \'vendor\': \'\', \'productType\': \'Default\', \'status\': \'DRAFT\', \'tags\': [], \'variants\': [{\'sku\': \'FG-0000704\', \'price\': \'2500.0\', \'inventoryPolicy\': \'DENY\', \'inventoryManagement\': \'SHOPIFY\', \'inventoryQuantities\': [{\'availableQuantity\': 10, \'locationId\': \'gid://shopify/Location/68605345858\'}], \'weight\': 0.0, \'weightUnit\': \'KILOGRAMS\', \'option1\': \'Green\'}], \'seo\': {\'title\': \'Morsi-Green\', \'description\': \'\'}}, \'problems\': [{\'path\': [\'variants\', 0, \'option1\'], \'explanation\': \'Field is not defined on ProductVariantInput\'}]}}\nGraphQL Errors: [\n  {\n    "message": "Variable $input of type ProductInput! was provided invalid value for variants.0.option1 (Field is not defined on ProductVariantInput)",\n    "locations": [\n      {\n        "line": 1,\n        "column": 24\n      }\n    ],\n    "extensions": {\n      "value": {\n        "title": "Morsi-Green",\n        "descriptionHtml": "",\n        "vendor": "",\n        "productType": "Default",\n        "status": "DRAFT",\n        "tags": [],\n        "variants": [\n          {\n            "sku": "FG-0000704",\n            "price": "2500.0",\n            "inventoryPolicy": "DENY",\n            "inventoryManagement": "SHOPIFY",\n            "inventoryQuantities": [\n              {\n                "availableQuantity": 10,\n                "locationId": "gid://shopify/Location/68605345858"\n              }\n            ],\n            "weight": 0.0,\n            "weightUnit": "KILOGRAMS",\n            "option1": "Green"\n          }\n        ],\n        "seo": {\n          "title": "Morsi-Green",\n          "description": ""\n        }\n      },\n      "problems": [\n        {\n          "path": [\n            "variants",\n            0,\n            "option1"\n          ],\n          "explanation": "Field is not defined on ProductVariantInput"\n        }\n      ]\n    }\n  }\n]'}
2025-07-09 15:54:31,395 - sync_service - ERROR - Failed to add API log to SAP: HTTP 400: {
   "error" : {
      "code" : -1,
      "message" : {
         "lang" : "en-us",
         "value" : "CServiceData::SetPropertyValueString failed; Value too long in property 'U_Value' of 'U_API_LOG'"
      }
   }
}

2025-07-09 15:54:31,396 - sync_service - ERROR - Failed to create product in store local: GraphQL query error for store local: {'message': 'Variable $input of type ProductInput! was provided invalid value for variants.0.option1 (Field is not defined on ProductVariantInput)', 'locations': [{'line': 1, 'column': 24}], 'extensions': {'value': {'title': 'Morsi-Green', 'descriptionHtml': '', 'vendor': '', 'productType': 'Default', 'status': 'DRAFT', 'tags': [], 'variants': [{'sku': 'FG-0000704', 'price': '2500.0', 'inventoryPolicy': 'DENY', 'inventoryManagement': 'SHOPIFY', 'inventoryQuantities': [{'availableQuantity': 10, 'locationId': 'gid://shopify/Location/68605345858'}], 'weight': 0.0, 'weightUnit': 'KILOGRAMS', 'option1': 'Green'}], 'seo': {'title': 'Morsi-Green', 'description': ''}}, 'problems': [{'path': ['variants', 0, 'option1'], 'explanation': 'Field is not defined on ProductVariantInput'}]}}
GraphQL Errors: [
  {
    "message": "Variable $input of type ProductInput! was provided invalid value for variants.0.option1 (Field is not defined on ProductVariantInput)",
    "locations": [
      {
        "line": 1,
        "column": 24
      }
    ],
    "extensions": {
      "value": {
        "title": "Morsi-Green",
        "descriptionHtml": "",
        "vendor": "",
        "productType": "Default",
        "status": "DRAFT",
        "tags": [],
        "variants": [
          {
            "sku": "FG-0000704",
            "price": "2500.0",
            "inventoryPolicy": "DENY",
            "inventoryManagement": "SHOPIFY",
            "inventoryQuantities": [
              {
                "availableQuantity": 10,
                "locationId": "gid://shopify/Location/68605345858"
              }
            ],
            "weight": 0.0,
            "weightUnit": "KILOGRAMS",
            "option1": "Green"
          }
        ],
        "seo": {
          "title": "Morsi-Green",
          "description": ""
        }
      },
      "problems": [
        {
          "path": [
            "variants",
            0,
            "option1"
          ],
          "explanation": "Field is not defined on ProductVariantInput"
        }
      ]
    }
  }
]
2025-07-09 15:54:31,912 - sync_service - INFO - Sync Event: {'sync_type': 'multi_store_new_items_sap_to_shopify', 'items_processed': 1, 'success_count': 0, 'error_count': 1, 'details': None}
2025-07-09 15:54:32,044 - sync_service - INFO - API log added to SAP: system - /sync/new_items_multi_store - success
2025-07-09 15:54:32,046 - sync_service - INFO - Multi-store new items sync completed: 1 processed, 0 successful, 1 errors
2025-07-09 15:58:35,325 - sync_service - INFO - Initialized Shopify client for store: Local Store (local)
2025-07-09 15:58:35,332 - sync_service - INFO - Starting multi-store new items sync from SAP to Shopify
2025-07-09 15:58:35,940 - sync_service - INFO - SAP logging client login successful
2025-07-09 15:58:36,770 - sync_service - INFO - API log added to SAP: system - /sync/new_items_multi_store - success
2025-07-09 15:58:36,772 - sync_service - INFO - Fetching new items for store: local
2025-07-09 15:58:36,773 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'login', 'request': {'company': 'JudeBenHalim_Test', 'user': 'manager'}, 'response': None, 'status': None}
2025-07-09 15:58:37,385 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'login', 'request': None, 'response': {'status': 'success'}, 'status': 'success'}
2025-07-09 15:58:37,386 - sync_service - INFO - SAP login successful
2025-07-09 15:58:37,389 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': "view.svc/MASHURA_New_ItemsB1SLQuery?$filter=Shopify_Store eq 'local'&$orderby=MainProduct", 'request': {'method': 'GET', 'url': "https://10.0.0.100:50000/b1s/v1/view.svc/MASHURA_New_ItemsB1SLQuery?$filter=Shopify_Store eq 'local'&$orderby=MainProduct", 'data': None, 'params': None}, 'response': None, 'status': None}
2025-07-09 15:58:37,908 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': "view.svc/MASHURA_New_ItemsB1SLQuery?$filter=Shopify_Store eq 'local'&$orderby=MainProduct", 'request': None, 'response': {'odata.metadata': 'https://10.0.0.100:50000/b1s/v1/view.svc/$metadata#MASHURA_New_ItemsB1SLQuery', 'value': [{'itemcode': 'FG-0000704', 'ItemName': 'Morsi-Green', 'MainProduct': 'Morsi Necklace', 'Color': 'Green', 'OnHand': 0.0, 'IsCommited': 0.0, 'Available': 0.0, 'Price': 2500.0, 'Status': 'existing', 'Shopify_ProductCode': '7510108733506', 'Shopify_Store': 'local', 'id__': 1}]}, 'status': 'success'}
2025-07-09 15:58:37,913 - sync_service - INFO - Product group: ('Morsi Necklace', 'local') has 1 items
2025-07-09 15:58:37,914 - sync_service - INFO - Grouped 1 items into 1 product groups for store local
2025-07-09 15:58:37,915 - sync_service - INFO - Processing product group: ('Morsi Necklace', 'local') with 1 items for store local
2025-07-09 15:58:38,092 - sync_service - ERROR - Failed to add API log to SAP: HTTP 400: {
   "error" : {
      "code" : -1,
      "message" : {
         "lang" : "en-us",
         "value" : "CServiceData::SetPropertyValueString failed; Value too long in property 'U_Action' of 'U_API_LOG'"
      }
   }
}

2025-07-09 15:58:38,094 - sync_service - INFO - API Call: {'service': 'shopify', 'endpoint': 'graphql_local', 'request': {'query': '\n        query GetProductByHandle($handle: String!) {\n            productByHandle(handle: $handle) {\n                id\n                title\n                handle\n                description\n                variants(first: 50) {\n                    edges {\n                        node {\n                            id\n                            sku\n                            price\n                            inventoryItem {\n                                id\n                            }\n                            selectedOptions {\n                                name\n                                value\n                            }\n                        }\n                    }\n                }\n            }\n        }\n        ', 'variables': {'handle': 'morsi-necklace'}}, 'response': None, 'status': None}
2025-07-09 15:58:38,510 - sync_service - INFO - API Call: {'service': 'shopify', 'endpoint': 'graphql_local', 'request': None, 'response': {'productByHandle': None}, 'status': 'success'}
2025-07-09 15:58:38,665 - sync_service - ERROR - Failed to add API log to SAP: HTTP 400: {
   "error" : {
      "code" : -1,
      "message" : {
         "lang" : "en-us",
         "value" : "CServiceData::SetPropertyValueString failed; Value too long in property 'U_Action' of 'U_API_LOG'"
      }
   }
}

2025-07-09 15:58:38,667 - sync_service - INFO - Product Morsi Necklace doesn't exist in store local, creating new product
2025-07-09 15:58:38,785 - sync_service - INFO - API log added to SAP: shopify - /admin/api/graphql_local - success
2025-07-09 15:58:38,786 - sync_service - INFO - API Call: {'service': 'shopify', 'endpoint': 'graphql_local', 'request': {'query': '\n        mutation productCreate($input: ProductInput!) {\n            productCreate(input: $input) {\n                product {\n                    id\n                    title\n                    handle\n                    variants(first: 50) {\n                        edges {\n                            node {\n                                id\n                                sku\n                                inventoryItem {\n                                    id\n                                }\n                                selectedOptions {\n                                    name\n                                    value\n                                }\n                            }\n                        }\n                    }\n                }\n                userErrors {\n                    field\n                    message\n                }\n            }\n        }\n        ', 'variables': {'input': {'title': 'Morsi-Green', 'descriptionHtml': '', 'vendor': '', 'productType': 'Default', 'status': 'DRAFT', 'tags': [], 'variants': [{'sku': 'FG-0000704', 'price': '2500.0', 'inventoryPolicy': 'DENY', 'inventoryManagement': 'SHOPIFY', 'inventoryQuantities': [{'availableQuantity': 10, 'locationId': 'gid://shopify/Location/68605345858'}], 'weight': 0.0, 'weightUnit': 'KILOGRAMS'}], 'seo': {'title': 'Morsi-Green', 'description': ''}}}}, 'response': None, 'status': None}
2025-07-09 15:58:39,493 - sync_service - INFO - API Call: {'service': 'shopify', 'endpoint': 'graphql_local', 'request': None, 'response': {'productCreate': {'product': {'id': 'gid://shopify/Product/7510766616642', 'title': 'Morsi-Green', 'handle': 'morsi-green', 'variants': {'edges': [{'node': {'id': 'gid://shopify/ProductVariant/42295121281090', 'sku': 'FG-0000704', 'inventoryItem': {'id': 'gid://shopify/InventoryItem/44396252233794'}, 'selectedOptions': [{'name': 'Title', 'value': 'Default Title'}]}}]}}, 'userErrors': []}}, 'status': 'success'}
2025-07-09 15:58:39,494 - sync_service - ERROR - Shopify full response for store local: {'msg': 'success', 'data': {'productCreate': {'product': {'id': 'gid://shopify/Product/7510766616642', 'title': 'Morsi-Green', 'handle': 'morsi-green', 'variants': {'edges': [{'node': {'id': 'gid://shopify/ProductVariant/42295121281090', 'sku': 'FG-0000704', 'inventoryItem': {'id': 'gid://shopify/InventoryItem/44396252233794'}, 'selectedOptions': [{'name': 'Title', 'value': 'Default Title'}]}}]}}, 'userErrors': []}}}
2025-07-09 15:58:39,902 - sync_service - INFO - API log added to SAP: shopify - /admin/api/graphql_local - success
2025-07-09 15:58:39,904 - sync_service - INFO - Successfully created product in store local
2025-07-09 15:58:40,014 - sync_service - INFO - API log added to SAP: sap - /U_SHOPIFY_MAPPING - success
2025-07-09 15:58:40,017 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'U_SHOPIFY_MAPPING', 'request': {'method': 'POST', 'url': 'https://10.0.0.100:50000/b1s/v1/U_SHOPIFY_MAPPING', 'data': {'Code': '7510766616642', 'Name': '7510766616642', 'U_Shopify_Type': 'product', 'U_SAP_Code': 'Morsi Necklace', 'U_Shopify_Store': 'local', 'U_SAP_Type': 'item'}, 'params': None}, 'response': None, 'status': None}
2025-07-09 15:58:40,151 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'U_SHOPIFY_MAPPING', 'request': None, 'response': {'odata.metadata': 'https://10.0.0.100:50000/b1s/v1/$metadata#U_SHOPIFY_MAPPING/@Element', 'Code': '7510766616642', 'Name': '7510766616642', 'U_Shopify_Type': 'product', 'U_SAP_Code': 'Morsi Necklace', 'U_SAP_Type': 'item', 'U_Shopify_Store': 'local'}, 'status': 'success'}
2025-07-09 15:58:40,315 - sync_service - INFO - API log added to SAP: sap - /U_SHOPIFY_MAPPING - success
2025-07-09 15:58:40,473 - sync_service - INFO - API log added to SAP: sap - /U_SHOPIFY_MAPPING - success
2025-07-09 15:58:40,474 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'U_SHOPIFY_MAPPING', 'request': {'method': 'POST', 'url': 'https://10.0.0.100:50000/b1s/v1/U_SHOPIFY_MAPPING', 'data': {'Code': '42295121281090', 'Name': '42295121281090', 'U_Shopify_Type': 'variant', 'U_SAP_Code': 'FG-0000704', 'U_Shopify_Store': 'local', 'U_SAP_Type': 'item'}, 'params': None}, 'response': None, 'status': None}
2025-07-09 15:58:40,649 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'U_SHOPIFY_MAPPING', 'request': None, 'response': {'odata.metadata': 'https://10.0.0.100:50000/b1s/v1/$metadata#U_SHOPIFY_MAPPING/@Element', 'Code': '42295121281090', 'Name': '42295121281090', 'U_Shopify_Type': 'variant', 'U_SAP_Code': 'FG-0000704', 'U_SAP_Type': 'item', 'U_Shopify_Store': 'local'}, 'status': 'success'}
2025-07-09 15:58:40,827 - sync_service - INFO - API log added to SAP: sap - /U_SHOPIFY_MAPPING - success
2025-07-09 15:58:40,984 - sync_service - ERROR - Failed to add API log to SAP: HTTP 400: {
   "error" : {
      "code" : -1,
      "message" : {
         "lang" : "en-us",
         "value" : "CServiceData::SetPropertyValueString failed; Value too long in property 'U_Action' of 'U_API_LOG'"
      }
   }
}

2025-07-09 15:58:40,985 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'U_SHOPIFY_MAPPING', 'request': {'method': 'POST', 'url': 'https://10.0.0.100:50000/b1s/v1/U_SHOPIFY_MAPPING', 'data': {'Code': '44396252233794', 'Name': '44396252233794', 'U_Shopify_Type': 'variant_inventory', 'U_SAP_Code': 'FG-0000704', 'U_Shopify_Store': 'local', 'U_SAP_Type': 'item'}, 'params': None}, 'response': None, 'status': None}
2025-07-09 15:58:41,127 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'U_SHOPIFY_MAPPING', 'request': None, 'response': {'odata.metadata': 'https://10.0.0.100:50000/b1s/v1/$metadata#U_SHOPIFY_MAPPING/@Element', 'Code': '44396252233794', 'Name': '44396252233794', 'U_Shopify_Type': 'variant_inventory', 'U_SAP_Code': 'FG-0000704', 'U_SAP_Type': 'item', 'U_Shopify_Store': 'local'}, 'status': 'success'}
2025-07-09 15:58:41,242 - sync_service - ERROR - Failed to add API log to SAP: HTTP 400: {
   "error" : {
      "code" : -1,
      "message" : {
         "lang" : "en-us",
         "value" : "CServiceData::SetPropertyValueString failed; Value too long in property 'U_Action' of 'U_API_LOG'"
      }
   }
}

2025-07-09 15:58:41,758 - sync_service - INFO - Sync Event: {'sync_type': 'multi_store_new_items_sap_to_shopify', 'items_processed': 1, 'success_count': 1, 'error_count': 0, 'details': None}
2025-07-09 15:58:41,858 - sync_service - INFO - API log added to SAP: system - /sync/new_items_multi_store - success
2025-07-09 15:58:41,859 - sync_service - INFO - Multi-store new items sync completed: 1 processed, 1 successful, 0 errors
2025-07-09 16:01:38,961 - sync_service - INFO - Initialized Shopify client for store: Local Store (local)
2025-07-09 16:01:38,970 - sync_service - INFO - Starting multi-store new items sync from SAP to Shopify
2025-07-09 16:01:39,631 - sync_service - INFO - SAP logging client login successful
2025-07-09 16:01:40,226 - sync_service - INFO - API log added to SAP: system - /sync/new_items_multi_store - success
2025-07-09 16:01:40,227 - sync_service - INFO - Fetching new items for store: local
2025-07-09 16:01:40,228 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'login', 'request': {'company': 'JudeBenHalim_Test', 'user': 'manager'}, 'response': None, 'status': None}
2025-07-09 16:01:40,823 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'login', 'request': None, 'response': {'status': 'success'}, 'status': 'success'}
2025-07-09 16:01:40,824 - sync_service - INFO - SAP login successful
2025-07-09 16:01:40,826 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': "view.svc/MASHURA_New_ItemsB1SLQuery?$filter=Shopify_Store eq 'local'&$orderby=MainProduct", 'request': {'method': 'GET', 'url': "https://10.0.0.100:50000/b1s/v1/view.svc/MASHURA_New_ItemsB1SLQuery?$filter=Shopify_Store eq 'local'&$orderby=MainProduct", 'data': None, 'params': None}, 'response': None, 'status': None}
2025-07-09 16:01:41,359 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': "view.svc/MASHURA_New_ItemsB1SLQuery?$filter=Shopify_Store eq 'local'&$orderby=MainProduct", 'request': None, 'response': {'odata.metadata': 'https://10.0.0.100:50000/b1s/v1/view.svc/$metadata#MASHURA_New_ItemsB1SLQuery', 'value': []}, 'status': 'success'}
2025-07-09 16:01:41,360 - sync_service - INFO - No new items found in SAP for store local
2025-07-09 16:01:41,363 - sync_service - INFO - Sync Event: {'sync_type': 'multi_store_new_items_sap_to_shopify', 'items_processed': 0, 'success_count': 0, 'error_count': 0, 'details': None}
2025-07-09 16:01:41,774 - sync_service - INFO - API log added to SAP: system - /sync/new_items_multi_store - success
2025-07-09 16:01:41,775 - sync_service - INFO - Multi-store new items sync completed: 0 processed, 0 successful, 0 errors
2025-07-09 16:02:02,146 - sync_service - INFO - Initialized Shopify client for store: Local Store (local)
2025-07-09 16:02:02,726 - sync_service - INFO - SAP logging client login successful
2025-07-09 16:02:03,272 - sync_service - INFO - API log added to SAP: system - /test/existing_product_variant - success
2025-07-09 16:02:03,364 - sync_service - INFO - API log added to SAP: system - /test/existing_product_variant - success
2025-07-09 16:02:27,966 - sync_service - INFO - Initialized Shopify client for store: Local Store (local)
2025-07-09 16:02:28,514 - sync_service - INFO - SAP logging client login successful
2025-07-09 16:02:29,006 - sync_service - INFO - API log added to SAP: system - /test/mock_existing_product - success
2025-07-09 16:02:29,103 - sync_service - INFO - API log added to SAP: system - /test/mock_existing_product - success
2025-07-09 16:05:24,695 - sync_service - INFO - Initialized Shopify client for store: Local Store (local)
2025-07-09 16:05:24,702 - sync_service - INFO - Starting multi-store new items sync from SAP to Shopify
2025-07-09 16:05:25,401 - sync_service - INFO - SAP logging client login successful
2025-07-09 16:05:25,981 - sync_service - INFO - API log added to SAP: system - /sync/new_items_multi_store - success
2025-07-09 16:05:25,985 - sync_service - INFO - Fetching new items for store: local
2025-07-09 16:05:25,987 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'login', 'request': {'company': 'JudeBenHalim_Test', 'user': 'manager'}, 'response': None, 'status': None}
2025-07-09 16:05:26,526 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'login', 'request': None, 'response': {'status': 'success'}, 'status': 'success'}
2025-07-09 16:05:26,527 - sync_service - INFO - SAP login successful
2025-07-09 16:05:26,528 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': "view.svc/MASHURA_New_ItemsB1SLQuery?$filter=Shopify_Store eq 'local'&$orderby=MainProduct", 'request': {'method': 'GET', 'url': "https://10.0.0.100:50000/b1s/v1/view.svc/MASHURA_New_ItemsB1SLQuery?$filter=Shopify_Store eq 'local'&$orderby=MainProduct", 'data': None, 'params': None}, 'response': None, 'status': None}
2025-07-09 16:05:27,361 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': "view.svc/MASHURA_New_ItemsB1SLQuery?$filter=Shopify_Store eq 'local'&$orderby=MainProduct", 'request': None, 'response': {'odata.metadata': 'https://10.0.0.100:50000/b1s/v1/view.svc/$metadata#MASHURA_New_ItemsB1SLQuery', 'value': [{'itemcode': 'FG-0000704', 'ItemName': 'Morsi-Green', 'MainProduct': 'Morsi Necklace', 'Color': 'Green', 'OnHand': 0.0, 'IsCommited': 0.0, 'Available': 0.0, 'Price': 2500.0, 'Status': 'existing', 'Shopify_ProductCode': '7510108733506', 'Shopify_Store': 'local', 'id__': 1}]}, 'status': 'success'}
2025-07-09 16:05:27,363 - sync_service - INFO - Product group: ('Morsi Necklace', 'local') has 1 items
2025-07-09 16:05:27,364 - sync_service - INFO - Grouped 1 items into 1 product groups for store local
2025-07-09 16:05:27,366 - sync_service - INFO - Processing product group: ('Morsi Necklace', 'local') with 1 items for store local
2025-07-09 16:05:27,371 - sync_service - INFO - Found existing Shopify product ID: 7510108733506 for Morsi Necklace
2025-07-09 16:05:27,373 - sync_service - INFO - Product Morsi Necklace already exists in store local, adding variants
2025-07-09 16:05:27,536 - sync_service - ERROR - Failed to add API log to SAP: HTTP 400: {
   "error" : {
      "code" : -1,
      "message" : {
         "lang" : "en-us",
         "value" : "CServiceData::SetPropertyValueString failed; Value too long in property 'U_Action' of 'U_API_LOG'"
      }
   }
}

2025-07-09 16:05:27,538 - sync_service - INFO - API Call: {'service': 'shopify', 'endpoint': 'graphql_local', 'request': {'query': '\n        mutation productVariantCreate($input: ProductVariantInput!) {\n            productVariantCreate(input: $input) {\n                productVariant {\n                    id\n                    sku\n                    price\n                    inventoryItem {\n                        id\n                    }\n                    selectedOptions {\n                        name\n                        value\n                    }\n                }\n                userErrors {\n                    field\n                    message\n                }\n            }\n        }\n        ', 'variables': {'input': {'sku': 'FG-0000704', 'price': '2500.0', 'inventoryPolicy': 'DENY', 'inventoryManagement': 'SHOPIFY', 'inventoryQuantities': [{'availableQuantity': 10, 'locationId': 'gid://shopify/Location/68605345858'}], 'weight': 0.0, 'weightUnit': 'KILOGRAMS', 'productId': 'gid://shopify/Product/7510108733506'}}}, 'response': None, 'status': None}
2025-07-09 16:05:37,533 - sync_service - ERROR - GraphQL query error for store local: 
2025-07-09 16:05:37,689 - sync_service - ERROR - Failed to add API log to SAP: HTTP 400: {
   "error" : {
      "code" : -1,
      "message" : {
         "lang" : "en-us",
         "value" : "CServiceData::SetPropertyValueString failed; Value too long in property 'U_Action' of 'U_API_LOG'"
      }
   }
}

2025-07-09 16:05:37,693 - sync_service - ERROR - Failed to add variant FG-0000704: GraphQL query error for store local: 
2025-07-09 16:05:37,806 - sync_service - INFO - API log added to SAP: sap - /U_SHOPIFY_MAPPING - success
2025-07-09 16:05:37,810 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'U_SHOPIFY_MAPPING', 'request': {'method': 'POST', 'url': 'https://10.0.0.100:50000/b1s/v1/U_SHOPIFY_MAPPING', 'data': {'Code': '7510108733506', 'Name': '7510108733506', 'U_Shopify_Type': 'product', 'U_SAP_Code': 'Morsi Necklace', 'U_Shopify_Store': 'local', 'U_SAP_Type': 'item'}, 'params': None}, 'response': None, 'status': None}
2025-07-09 16:05:37,965 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'U_SHOPIFY_MAPPING', 'request': None, 'response': {'status_code': 400, 'text': '{\n   "error" : {\n      "code" : -2035,\n      "message" : {\n         "lang" : "en-us",\n         "value" : "This entry already exists in the following tables (ODBC -2035)"\n      }\n   }\n}\n'}, 'status': 'failure'}
2025-07-09 16:05:38,123 - sync_service - INFO - API log added to SAP: sap - /U_SHOPIFY_MAPPING - failure
2025-07-09 16:05:38,626 - sync_service - INFO - Sync Event: {'sync_type': 'multi_store_new_items_sap_to_shopify', 'items_processed': 1, 'success_count': 0, 'error_count': 1, 'details': None}
2025-07-09 16:05:38,791 - sync_service - INFO - API log added to SAP: system - /sync/new_items_multi_store - success
2025-07-09 16:05:38,807 - sync_service - INFO - Multi-store new items sync completed: 1 processed, 0 successful, 1 errors
2025-07-09 16:08:27,632 - sync_service - INFO - Initialized Shopify client for store: Local Store (local)
2025-07-09 16:08:27,646 - sync_service - INFO - Starting multi-store new items sync from SAP to Shopify
2025-07-09 16:08:28,303 - sync_service - INFO - SAP logging client login successful
2025-07-09 16:08:28,967 - sync_service - INFO - API log added to SAP: system - /sync/new_items_multi_store - success
2025-07-09 16:08:28,969 - sync_service - INFO - Fetching new items for store: local
2025-07-09 16:08:28,971 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'login', 'request': {'company': 'JudeBenHalim_Test', 'user': 'manager'}, 'response': None, 'status': None}
2025-07-09 16:08:29,562 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'login', 'request': None, 'response': {'status': 'success'}, 'status': 'success'}
2025-07-09 16:08:29,563 - sync_service - INFO - SAP login successful
2025-07-09 16:08:29,563 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': "view.svc/MASHURA_New_ItemsB1SLQuery?$filter=Shopify_Store eq 'local'&$orderby=MainProduct", 'request': {'method': 'GET', 'url': "https://10.0.0.100:50000/b1s/v1/view.svc/MASHURA_New_ItemsB1SLQuery?$filter=Shopify_Store eq 'local'&$orderby=MainProduct", 'data': None, 'params': None}, 'response': None, 'status': None}
2025-07-09 16:08:30,125 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': "view.svc/MASHURA_New_ItemsB1SLQuery?$filter=Shopify_Store eq 'local'&$orderby=MainProduct", 'request': None, 'response': {'odata.metadata': 'https://10.0.0.100:50000/b1s/v1/view.svc/$metadata#MASHURA_New_ItemsB1SLQuery', 'value': [{'itemcode': 'FG-0000704', 'ItemName': 'Morsi-Green', 'MainProduct': 'Morsi Necklace', 'Color': 'Green', 'OnHand': 0.0, 'IsCommited': 0.0, 'Available': 0.0, 'Price': 2500.0, 'Status': 'existing', 'Shopify_ProductCode': '7510108733506', 'Shopify_Store': 'local', 'id__': 1}]}, 'status': 'success'}
2025-07-09 16:08:30,128 - sync_service - INFO - Product group: ('Morsi Necklace', 'local') has 1 items
2025-07-09 16:08:30,129 - sync_service - INFO - Grouped 1 items into 1 product groups for store local
2025-07-09 16:08:30,129 - sync_service - INFO - Processing product group: ('Morsi Necklace', 'local') with 1 items for store local
2025-07-09 16:08:30,130 - sync_service - INFO - Found existing Shopify product ID: 7510108733506 for Morsi Necklace
2025-07-09 16:08:30,130 - sync_service - INFO - Product Morsi Necklace already exists in store local, adding variants
2025-07-09 16:08:30,298 - sync_service - ERROR - Failed to add API log to SAP: HTTP 400: {
   "error" : {
      "code" : -1,
      "message" : {
         "lang" : "en-us",
         "value" : "CServiceData::SetPropertyValueString failed; Value too long in property 'U_Action' of 'U_API_LOG'"
      }
   }
}

2025-07-09 16:08:30,299 - sync_service - INFO - API Call: {'service': 'shopify', 'endpoint': 'graphql_local', 'request': {'query': '\n        mutation productVariantCreate($input: ProductVariantInput!) {\n            productVariantCreate(input: $input) {\n                productVariant {\n                    id\n                    sku\n                    price\n                    inventoryItem {\n                        id\n                    }\n                    selectedOptions {\n                        name\n                        value\n                    }\n                }\n                userErrors {\n                    field\n                    message\n                }\n            }\n        }\n        ', 'variables': {'input': {'sku': 'FG-0000704', 'price': '2500.0', 'inventoryPolicy': 'DENY', 'inventoryManagement': 'SHOPIFY', 'weight': 0.0, 'weightUnit': 'KILOGRAMS', 'productId': 'gid://shopify/Product/7510108733506'}}}, 'response': None, 'status': None}
2025-07-09 16:08:31,006 - sync_service - INFO - API Call: {'service': 'shopify', 'endpoint': 'graphql_local', 'request': None, 'response': {'productVariantCreate': {'productVariant': {'id': 'gid://shopify/ProductVariant/42295132028994', 'sku': 'FG-0000704', 'price': '2500.00', 'inventoryItem': {'id': 'gid://shopify/InventoryItem/44396262981698'}, 'selectedOptions': [{'name': 'Color', 'value': 'Default Title'}]}, 'userErrors': []}}, 'status': 'success'}
2025-07-09 16:08:31,231 - sync_service - ERROR - Failed to add API log to SAP: HTTP 400: {
   "error" : {
      "code" : -1,
      "message" : {
         "lang" : "en-us",
         "value" : "CServiceData::SetPropertyValueString failed; Value too long in property 'U_Action' of 'U_API_LOG'"
      }
   }
}

2025-07-09 16:08:31,231 - sync_service - INFO - API Call: {'service': 'shopify', 'endpoint': 'graphql_local', 'request': {'query': '\n        mutation inventoryAdjustQuantity($input: InventoryAdjustQuantityInput!) {\n            inventoryAdjustQuantity(input: $input) {\n                inventoryLevel {\n                    available\n                }\n                userErrors {\n                    field\n                    message\n                }\n            }\n        }\n        ', 'variables': {'input': {'inventoryItemId': 'gid://shopify/InventoryItem/44396262981698', 'availableDelta': 10}}}, 'response': None, 'status': None}
2025-07-09 16:08:31,647 - sync_service - ERROR - GraphQL query error for store local: {'message': "Field 'inventoryAdjustQuantity' doesn't exist on type 'Mutation'", 'locations': [{'line': 2, 'column': 3}], 'path': ['mutation inventoryAdjustQuantity', 'inventoryAdjustQuantity'], 'extensions': {'code': 'undefinedField', 'typeName': 'Mutation', 'fieldName': 'inventoryAdjustQuantity'}}
GraphQL Errors: [
  {
    "message": "Field 'inventoryAdjustQuantity' doesn't exist on type 'Mutation'",
    "locations": [
      {
        "line": 2,
        "column": 3
      }
    ],
    "path": [
      "mutation inventoryAdjustQuantity",
      "inventoryAdjustQuantity"
    ],
    "extensions": {
      "code": "undefinedField",
      "typeName": "Mutation",
      "fieldName": "inventoryAdjustQuantity"
    }
  },
  {
    "message": "Variable $input is declared by inventoryAdjustQuantity but not used",
    "locations": [
      {
        "line": 1,
        "column": 1
      }
    ],
    "path": [
      "mutation inventoryAdjustQuantity"
    ],
    "extensions": {
      "code": "variableNotUsed",
      "variableName": "input"
    }
  }
]
2025-07-09 16:08:31,881 - sync_service - ERROR - Failed to add API log to SAP: HTTP 400: {
   "error" : {
      "code" : -1,
      "message" : {
         "lang" : "en-us",
         "value" : "CServiceData::SetPropertyValueString failed; Value too long in property 'U_Value' of 'U_API_LOG'"
      }
   }
}

2025-07-09 16:08:31,883 - sync_service - WARNING - Failed to set inventory for variant FG-0000704: GraphQL query error for store local: {'message': "Field 'inventoryAdjustQuantity' doesn't exist on type 'Mutation'", 'locations': [{'line': 2, 'column': 3}], 'path': ['mutation inventoryAdjustQuantity', 'inventoryAdjustQuantity'], 'extensions': {'code': 'undefinedField', 'typeName': 'Mutation', 'fieldName': 'inventoryAdjustQuantity'}}
GraphQL Errors: [
  {
    "message": "Field 'inventoryAdjustQuantity' doesn't exist on type 'Mutation'",
    "locations": [
      {
        "line": 2,
        "column": 3
      }
    ],
    "path": [
      "mutation inventoryAdjustQuantity",
      "inventoryAdjustQuantity"
    ],
    "extensions": {
      "code": "undefinedField",
      "typeName": "Mutation",
      "fieldName": "inventoryAdjustQuantity"
    }
  },
  {
    "message": "Variable $input is declared by inventoryAdjustQuantity but not used",
    "locations": [
      {
        "line": 1,
        "column": 1
      }
    ],
    "path": [
      "mutation inventoryAdjustQuantity"
    ],
    "extensions": {
      "code": "variableNotUsed",
      "variableName": "input"
    }
  }
]
2025-07-09 16:08:31,884 - sync_service - INFO - Successfully added variant FG-0000704 to existing product
2025-07-09 16:08:32,176 - sync_service - INFO - API log added to SAP: sap - /U_SHOPIFY_MAPPING - success
2025-07-09 16:08:32,178 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'U_SHOPIFY_MAPPING', 'request': {'method': 'POST', 'url': 'https://10.0.0.100:50000/b1s/v1/U_SHOPIFY_MAPPING', 'data': {'Code': '7510108733506', 'Name': '7510108733506', 'U_Shopify_Type': 'product', 'U_SAP_Code': 'Morsi Necklace', 'U_Shopify_Store': 'local', 'U_SAP_Type': 'item'}, 'params': None}, 'response': None, 'status': None}
2025-07-09 16:08:32,379 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'U_SHOPIFY_MAPPING', 'request': None, 'response': {'status_code': 400, 'text': '{\n   "error" : {\n      "code" : -2035,\n      "message" : {\n         "lang" : "en-us",\n         "value" : "This entry already exists in the following tables (ODBC -2035)"\n      }\n   }\n}\n'}, 'status': 'failure'}
2025-07-09 16:08:32,590 - sync_service - INFO - API log added to SAP: sap - /U_SHOPIFY_MAPPING - failure
2025-07-09 16:08:32,742 - sync_service - INFO - API log added to SAP: sap - /U_SHOPIFY_MAPPING - success
2025-07-09 16:08:32,744 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'U_SHOPIFY_MAPPING', 'request': {'method': 'POST', 'url': 'https://10.0.0.100:50000/b1s/v1/U_SHOPIFY_MAPPING', 'data': {'Code': '42295132028994', 'Name': '42295132028994', 'U_Shopify_Type': 'variant', 'U_SAP_Code': 'FG-0000704', 'U_Shopify_Store': 'local', 'U_SAP_Type': 'item'}, 'params': None}, 'response': None, 'status': None}
2025-07-09 16:08:33,008 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'U_SHOPIFY_MAPPING', 'request': None, 'response': {'odata.metadata': 'https://10.0.0.100:50000/b1s/v1/$metadata#U_SHOPIFY_MAPPING/@Element', 'Code': '42295132028994', 'Name': '42295132028994', 'U_Shopify_Type': 'variant', 'U_SAP_Code': 'FG-0000704', 'U_SAP_Type': 'item', 'U_Shopify_Store': 'local'}, 'status': 'success'}
2025-07-09 16:08:33,181 - sync_service - INFO - API log added to SAP: sap - /U_SHOPIFY_MAPPING - success
2025-07-09 16:08:33,402 - sync_service - ERROR - Failed to add API log to SAP: HTTP 400: {
   "error" : {
      "code" : -1,
      "message" : {
         "lang" : "en-us",
         "value" : "CServiceData::SetPropertyValueString failed; Value too long in property 'U_Action' of 'U_API_LOG'"
      }
   }
}

2025-07-09 16:08:33,405 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'U_SHOPIFY_MAPPING', 'request': {'method': 'POST', 'url': 'https://10.0.0.100:50000/b1s/v1/U_SHOPIFY_MAPPING', 'data': {'Code': '44396262981698', 'Name': '44396262981698', 'U_Shopify_Type': 'variant_inventory', 'U_SAP_Code': 'FG-0000704', 'U_Shopify_Store': 'local', 'U_SAP_Type': 'item'}, 'params': None}, 'response': None, 'status': None}
2025-07-09 16:08:33,612 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'U_SHOPIFY_MAPPING', 'request': None, 'response': {'odata.metadata': 'https://10.0.0.100:50000/b1s/v1/$metadata#U_SHOPIFY_MAPPING/@Element', 'Code': '44396262981698', 'Name': '44396262981698', 'U_Shopify_Type': 'variant_inventory', 'U_SAP_Code': 'FG-0000704', 'U_SAP_Type': 'item', 'U_Shopify_Store': 'local'}, 'status': 'success'}
2025-07-09 16:08:33,846 - sync_service - ERROR - Failed to add API log to SAP: HTTP 400: {
   "error" : {
      "code" : -1,
      "message" : {
         "lang" : "en-us",
         "value" : "CServiceData::SetPropertyValueString failed; Value too long in property 'U_Action' of 'U_API_LOG'"
      }
   }
}

2025-07-09 16:08:34,355 - sync_service - INFO - Sync Event: {'sync_type': 'multi_store_new_items_sap_to_shopify', 'items_processed': 1, 'success_count': 1, 'error_count': 0, 'details': None}
2025-07-09 16:08:34,601 - sync_service - INFO - API log added to SAP: system - /sync/new_items_multi_store - success
2025-07-09 16:08:34,603 - sync_service - INFO - Multi-store new items sync completed: 1 processed, 1 successful, 0 errors
2025-07-09 16:12:31,880 - sync_service - INFO - Initialized Shopify client for store: Local Store (local)
2025-07-09 16:12:31,888 - sync_service - INFO - Starting multi-store new items sync from SAP to Shopify
2025-07-09 16:12:32,490 - sync_service - INFO - SAP logging client login successful
2025-07-09 16:12:33,059 - sync_service - INFO - API log added to SAP: system - /sync/new_items_multi_store - success
2025-07-09 16:12:33,066 - sync_service - INFO - Fetching new items for store: local
2025-07-09 16:12:33,067 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'login', 'request': {'company': 'JudeBenHalim_Test', 'user': 'manager'}, 'response': None, 'status': None}
2025-07-09 16:12:33,585 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'login', 'request': None, 'response': {'status': 'success'}, 'status': 'success'}
2025-07-09 16:12:33,587 - sync_service - INFO - SAP login successful
2025-07-09 16:12:33,588 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': "view.svc/MASHURA_New_ItemsB1SLQuery?$filter=Shopify_Store eq 'local'&$orderby=MainProduct", 'request': {'method': 'GET', 'url': "https://10.0.0.100:50000/b1s/v1/view.svc/MASHURA_New_ItemsB1SLQuery?$filter=Shopify_Store eq 'local'&$orderby=MainProduct", 'data': None, 'params': None}, 'response': None, 'status': None}
2025-07-09 16:12:34,098 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': "view.svc/MASHURA_New_ItemsB1SLQuery?$filter=Shopify_Store eq 'local'&$orderby=MainProduct", 'request': None, 'response': {'odata.metadata': 'https://10.0.0.100:50000/b1s/v1/view.svc/$metadata#MASHURA_New_ItemsB1SLQuery', 'value': [{'itemcode': 'FG-0000704', 'ItemName': 'Morsi-Green', 'MainProduct': 'Morsi Necklace', 'Color': 'Green', 'OnHand': 0.0, 'IsCommited': 0.0, 'Available': 0.0, 'Price': 2500.0, 'Status': 'existing', 'Shopify_ProductCode': '7510108733506', 'Shopify_Store': 'local', 'id__': 1}]}, 'status': 'success'}
2025-07-09 16:12:34,114 - sync_service - INFO - Product group: ('Morsi Necklace', 'local') has 1 items
2025-07-09 16:12:34,116 - sync_service - INFO - Grouped 1 items into 1 product groups for store local
2025-07-09 16:12:34,117 - sync_service - INFO - Processing product group: ('Morsi Necklace', 'local') with 1 items for store local
2025-07-09 16:12:34,118 - sync_service - INFO - Found existing Shopify product ID: 7510108733506 for Morsi Necklace
2025-07-09 16:12:34,119 - sync_service - INFO - Product Morsi Necklace already exists in store local, adding variants
2025-07-09 16:12:34,120 - sync_service - INFO - Setting up Color option for product gid://shopify/Product/7510108733506 with values: ['Green']
2025-07-09 16:12:34,121 - sync_service - INFO - API Call: {'service': 'shopify', 'endpoint': 'graphql_local', 'request': {'query': '\n        mutation productUpdate($input: ProductInput!) {\n            productUpdate(input: $input) {\n                product {\n                    id\n                    title\n                    options {\n                        id\n                        name\n                        values\n                    }\n                }\n                userErrors {\n                    field\n                    message\n                }\n            }\n        }\n        ', 'variables': {'input': {'id': 'gid://shopify/Product/7510108733506', 'options': [{'name': 'Color', 'values': ['Green']}]}}}, 'response': None, 'status': None}
2025-07-09 16:12:34,505 - sync_service - ERROR - GraphQL query error for store local: {'message': 'Variable $input of type ProductInput! was provided invalid value for options.0 (Could not coerce value {name:"Color",values:["Green"]} to String)', 'locations': [{'line': 1, 'column': 24}], 'extensions': {'value': {'id': 'gid://shopify/Product/7510108733506', 'options': [{'name': 'Color', 'values': ['Green']}]}, 'problems': [{'path': ['options', 0], 'explanation': 'Could not coerce value {name:"Color",values:["Green"]} to String'}]}}
GraphQL Errors: [
  {
    "message": "Variable $input of type ProductInput! was provided invalid value for options.0 (Could not coerce value {name:\"Color\",values:[\"Green\"]} to String)",
    "locations": [
      {
        "line": 1,
        "column": 24
      }
    ],
    "extensions": {
      "value": {
        "id": "gid://shopify/Product/7510108733506",
        "options": [
          {
            "name": "Color",
            "values": [
              "Green"
            ]
          }
        ]
      },
      "problems": [
        {
          "path": [
            "options",
            0
          ],
          "explanation": "Could not coerce value {name:\"Color\",values:[\"Green\"]} to String"
        }
      ]
    }
  }
]
2025-07-09 16:12:34,639 - sync_service - ERROR - Failed to add API log to SAP: HTTP 400: {
   "error" : {
      "code" : -1,
      "message" : {
         "lang" : "en-us",
         "value" : "CServiceData::SetPropertyValueString failed; Value too long in property 'U_Value' of 'U_API_LOG'"
      }
   }
}

2025-07-09 16:12:34,640 - sync_service - WARNING - Failed to add Color option to product: GraphQL query error for store local: {'message': 'Variable $input of type ProductInput! was provided invalid value for options.0 (Could not coerce value {name:"Color",values:["Green"]} to String)', 'locations': [{'line': 1, 'column': 24}], 'extensions': {'value': {'id': 'gid://shopify/Product/7510108733506', 'options': [{'name': 'Color', 'values': ['Green']}]}, 'problems': [{'path': ['options', 0], 'explanation': 'Could not coerce value {name:"Color",values:["Green"]} to String'}]}}
GraphQL Errors: [
  {
    "message": "Variable $input of type ProductInput! was provided invalid value for options.0 (Could not coerce value {name:\"Color\",values:[\"Green\"]} to String)",
    "locations": [
      {
        "line": 1,
        "column": 24
      }
    ],
    "extensions": {
      "value": {
        "id": "gid://shopify/Product/7510108733506",
        "options": [
          {
            "name": "Color",
            "values": [
              "Green"
            ]
          }
        ]
      },
      "problems": [
        {
          "path": [
            "options",
            0
          ],
          "explanation": "Could not coerce value {name:\"Color\",values:[\"Green\"]} to String"
        }
      ]
    }
  }
]
2025-07-09 16:12:34,769 - sync_service - ERROR - Failed to add API log to SAP: HTTP 400: {
   "error" : {
      "code" : -1,
      "message" : {
         "lang" : "en-us",
         "value" : "CServiceData::SetPropertyValueString failed; Value too long in property 'U_Action' of 'U_API_LOG'"
      }
   }
}

2025-07-09 16:12:34,771 - sync_service - INFO - API Call: {'service': 'shopify', 'endpoint': 'graphql_local', 'request': {'query': '\n        mutation productVariantCreate($input: ProductVariantInput!) {\n            productVariantCreate(input: $input) {\n                productVariant {\n                    id\n                    sku\n                    price\n                    inventoryItem {\n                        id\n                    }\n                    selectedOptions {\n                        name\n                        value\n                    }\n                }\n                userErrors {\n                    field\n                    message\n                }\n            }\n        }\n        ', 'variables': {'input': {'sku': 'FG-0000704', 'price': '2500.0', 'inventoryPolicy': 'DENY', 'inventoryManagement': 'SHOPIFY', 'weight': 0.0, 'weightUnit': 'KILOGRAMS', 'option1': 'Green', 'productId': 'gid://shopify/Product/7510108733506'}}}, 'response': None, 'status': None}
2025-07-09 16:12:44,781 - sync_service - ERROR - GraphQL query error for store local: 
2025-07-09 16:12:44,783 - sync_service - ERROR - Detailed variant creation error for FG-0000704: GraphQL query error for store local: 
2025-07-09 16:12:44,962 - sync_service - ERROR - Failed to add API log to SAP: HTTP 400: {
   "error" : {
      "code" : -1,
      "message" : {
         "lang" : "en-us",
         "value" : "CServiceData::SetPropertyValueString failed; Value too long in property 'U_Action' of 'U_API_LOG'"
      }
   }
}

2025-07-09 16:12:44,965 - sync_service - ERROR - Failed to add variant FG-0000704: GraphQL query error for store local: 
2025-07-09 16:12:45,084 - sync_service - INFO - API log added to SAP: sap - /U_SHOPIFY_MAPPING - success
2025-07-09 16:12:45,085 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'U_SHOPIFY_MAPPING', 'request': {'method': 'POST', 'url': 'https://10.0.0.100:50000/b1s/v1/U_SHOPIFY_MAPPING', 'data': {'Code': '7510108733506', 'Name': '7510108733506', 'U_Shopify_Type': 'product', 'U_SAP_Code': 'Morsi Necklace', 'U_Shopify_Store': 'local', 'U_SAP_Type': 'item'}, 'params': None}, 'response': None, 'status': None}
2025-07-09 16:12:45,209 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'U_SHOPIFY_MAPPING', 'request': None, 'response': {'status_code': 400, 'text': '{\n   "error" : {\n      "code" : -2035,\n      "message" : {\n         "lang" : "en-us",\n         "value" : "This entry already exists in the following tables (ODBC -2035)"\n      }\n   }\n}\n'}, 'status': 'failure'}
2025-07-09 16:12:45,335 - sync_service - INFO - API log added to SAP: sap - /U_SHOPIFY_MAPPING - failure
2025-07-09 16:12:45,837 - sync_service - INFO - Sync Event: {'sync_type': 'multi_store_new_items_sap_to_shopify', 'items_processed': 1, 'success_count': 0, 'error_count': 1, 'details': None}
2025-07-09 16:12:45,956 - sync_service - INFO - API log added to SAP: system - /sync/new_items_multi_store - success
2025-07-09 16:12:45,958 - sync_service - INFO - Multi-store new items sync completed: 1 processed, 0 successful, 1 errors
2025-07-09 16:13:53,975 - sync_service - INFO - Initialized Shopify client for store: Local Store (local)
2025-07-09 16:13:53,983 - sync_service - INFO - Starting multi-store new items sync from SAP to Shopify
2025-07-09 16:13:54,698 - sync_service - INFO - SAP logging client login successful
2025-07-09 16:13:55,275 - sync_service - INFO - API log added to SAP: system - /sync/new_items_multi_store - success
2025-07-09 16:13:55,278 - sync_service - INFO - Fetching new items for store: local
2025-07-09 16:13:55,281 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'login', 'request': {'company': 'JudeBenHalim_Test', 'user': 'manager'}, 'response': None, 'status': None}
2025-07-09 16:13:55,866 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'login', 'request': None, 'response': {'status': 'success'}, 'status': 'success'}
2025-07-09 16:13:55,867 - sync_service - INFO - SAP login successful
2025-07-09 16:13:55,869 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': "view.svc/MASHURA_New_ItemsB1SLQuery?$filter=Shopify_Store eq 'local'&$orderby=MainProduct", 'request': {'method': 'GET', 'url': "https://10.0.0.100:50000/b1s/v1/view.svc/MASHURA_New_ItemsB1SLQuery?$filter=Shopify_Store eq 'local'&$orderby=MainProduct", 'data': None, 'params': None}, 'response': None, 'status': None}
2025-07-09 16:13:56,382 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': "view.svc/MASHURA_New_ItemsB1SLQuery?$filter=Shopify_Store eq 'local'&$orderby=MainProduct", 'request': None, 'response': {'odata.metadata': 'https://10.0.0.100:50000/b1s/v1/view.svc/$metadata#MASHURA_New_ItemsB1SLQuery', 'value': [{'itemcode': 'FG-0000704', 'ItemName': 'Morsi-Green', 'MainProduct': 'Morsi Necklace', 'Color': 'Green', 'OnHand': 0.0, 'IsCommited': 0.0, 'Available': 0.0, 'Price': 2500.0, 'Status': 'existing', 'Shopify_ProductCode': '7510108733506', 'Shopify_Store': 'local', 'id__': 1}]}, 'status': 'success'}
2025-07-09 16:13:56,384 - sync_service - INFO - Product group: ('Morsi Necklace', 'local') has 1 items
2025-07-09 16:13:56,386 - sync_service - INFO - Grouped 1 items into 1 product groups for store local
2025-07-09 16:13:56,387 - sync_service - INFO - Processing product group: ('Morsi Necklace', 'local') with 1 items for store local
2025-07-09 16:13:56,388 - sync_service - INFO - Found existing Shopify product ID: 7510108733506 for Morsi Necklace
2025-07-09 16:13:56,388 - sync_service - INFO - Product Morsi Necklace already exists in store local, adding variants
2025-07-09 16:13:56,588 - sync_service - ERROR - Failed to add API log to SAP: HTTP 400: {
   "error" : {
      "code" : -1,
      "message" : {
         "lang" : "en-us",
         "value" : "CServiceData::SetPropertyValueString failed; Value too long in property 'U_Action' of 'U_API_LOG'"
      }
   }
}

2025-07-09 16:13:56,589 - sync_service - INFO - API Call: {'service': 'shopify', 'endpoint': 'graphql_local', 'request': {'query': '\n        mutation productVariantCreate($input: ProductVariantInput!) {\n            productVariantCreate(input: $input) {\n                productVariant {\n                    id\n                    sku\n                    price\n                    inventoryItem {\n                        id\n                    }\n                    selectedOptions {\n                        name\n                        value\n                    }\n                }\n                userErrors {\n                    field\n                    message\n                }\n            }\n        }\n        ', 'variables': {'input': {'sku': 'FG-0000704', 'price': '2500.0', 'inventoryPolicy': 'DENY', 'inventoryManagement': 'SHOPIFY', 'weight': 0.0, 'weightUnit': 'KILOGRAMS', '_color': 'Green', 'productId': 'gid://shopify/Product/7510108733506'}}}, 'response': None, 'status': None}
2025-07-09 16:13:56,949 - sync_service - ERROR - GraphQL query error for store local: {'message': 'Variable $input of type ProductVariantInput! was provided invalid value for _color (Field is not defined on ProductVariantInput)', 'locations': [{'line': 1, 'column': 31}], 'extensions': {'value': {'sku': 'FG-0000704', 'price': '2500.0', 'inventoryPolicy': 'DENY', 'inventoryManagement': 'SHOPIFY', 'weight': 0.0, 'weightUnit': 'KILOGRAMS', '_color': 'Green', 'productId': 'gid://shopify/Product/7510108733506'}, 'problems': [{'path': ['_color'], 'explanation': 'Field is not defined on ProductVariantInput'}]}}
GraphQL Errors: [
  {
    "message": "Variable $input of type ProductVariantInput! was provided invalid value for _color (Field is not defined on ProductVariantInput)",
    "locations": [
      {
        "line": 1,
        "column": 31
      }
    ],
    "extensions": {
      "value": {
        "sku": "FG-0000704",
        "price": "2500.0",
        "inventoryPolicy": "DENY",
        "inventoryManagement": "SHOPIFY",
        "weight": 0.0,
        "weightUnit": "KILOGRAMS",
        "_color": "Green",
        "productId": "gid://shopify/Product/7510108733506"
      },
      "problems": [
        {
          "path": [
            "_color"
          ],
          "explanation": "Field is not defined on ProductVariantInput"
        }
      ]
    }
  }
]
2025-07-09 16:13:57,048 - sync_service - ERROR - Failed to add API log to SAP: HTTP 400: {
   "error" : {
      "code" : -1,
      "message" : {
         "lang" : "en-us",
         "value" : "CServiceData::SetPropertyValueString failed; Value too long in property 'U_Value' of 'U_API_LOG'"
      }
   }
}

2025-07-09 16:13:57,049 - sync_service - ERROR - Detailed variant creation error for FG-0000704: GraphQL query error for store local: {'message': 'Variable $input of type ProductVariantInput! was provided invalid value for _color (Field is not defined on ProductVariantInput)', 'locations': [{'line': 1, 'column': 31}], 'extensions': {'value': {'sku': 'FG-0000704', 'price': '2500.0', 'inventoryPolicy': 'DENY', 'inventoryManagement': 'SHOPIFY', 'weight': 0.0, 'weightUnit': 'KILOGRAMS', '_color': 'Green', 'productId': 'gid://shopify/Product/7510108733506'}, 'problems': [{'path': ['_color'], 'explanation': 'Field is not defined on ProductVariantInput'}]}}
GraphQL Errors: [
  {
    "message": "Variable $input of type ProductVariantInput! was provided invalid value for _color (Field is not defined on ProductVariantInput)",
    "locations": [
      {
        "line": 1,
        "column": 31
      }
    ],
    "extensions": {
      "value": {
        "sku": "FG-0000704",
        "price": "2500.0",
        "inventoryPolicy": "DENY",
        "inventoryManagement": "SHOPIFY",
        "weight": 0.0,
        "weightUnit": "KILOGRAMS",
        "_color": "Green",
        "productId": "gid://shopify/Product/7510108733506"
      },
      "problems": [
        {
          "path": [
            "_color"
          ],
          "explanation": "Field is not defined on ProductVariantInput"
        }
      ]
    }
  }
]
2025-07-09 16:13:57,158 - sync_service - ERROR - Failed to add API log to SAP: HTTP 400: {
   "error" : {
      "code" : -1,
      "message" : {
         "lang" : "en-us",
         "value" : "CServiceData::SetPropertyValueString failed; Value too long in property 'U_Action' of 'U_API_LOG'"
      }
   }
}

2025-07-09 16:13:57,159 - sync_service - ERROR - Failed to add variant FG-0000704: GraphQL query error for store local: {'message': 'Variable $input of type ProductVariantInput! was provided invalid value for _color (Field is not defined on ProductVariantInput)', 'locations': [{'line': 1, 'column': 31}], 'extensions': {'value': {'sku': 'FG-0000704', 'price': '2500.0', 'inventoryPolicy': 'DENY', 'inventoryManagement': 'SHOPIFY', 'weight': 0.0, 'weightUnit': 'KILOGRAMS', '_color': 'Green', 'productId': 'gid://shopify/Product/7510108733506'}, 'problems': [{'path': ['_color'], 'explanation': 'Field is not defined on ProductVariantInput'}]}}
GraphQL Errors: [
  {
    "message": "Variable $input of type ProductVariantInput! was provided invalid value for _color (Field is not defined on ProductVariantInput)",
    "locations": [
      {
        "line": 1,
        "column": 31
      }
    ],
    "extensions": {
      "value": {
        "sku": "FG-0000704",
        "price": "2500.0",
        "inventoryPolicy": "DENY",
        "inventoryManagement": "SHOPIFY",
        "weight": 0.0,
        "weightUnit": "KILOGRAMS",
        "_color": "Green",
        "productId": "gid://shopify/Product/7510108733506"
      },
      "problems": [
        {
          "path": [
            "_color"
          ],
          "explanation": "Field is not defined on ProductVariantInput"
        }
      ]
    }
  }
]
2025-07-09 16:13:57,296 - sync_service - INFO - API log added to SAP: sap - /U_SHOPIFY_MAPPING - success
2025-07-09 16:13:57,298 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'U_SHOPIFY_MAPPING', 'request': {'method': 'POST', 'url': 'https://10.0.0.100:50000/b1s/v1/U_SHOPIFY_MAPPING', 'data': {'Code': '7510108733506', 'Name': '7510108733506', 'U_Shopify_Type': 'product', 'U_SAP_Code': 'Morsi Necklace', 'U_Shopify_Store': 'local', 'U_SAP_Type': 'item'}, 'params': None}, 'response': None, 'status': None}
2025-07-09 16:13:57,415 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'U_SHOPIFY_MAPPING', 'request': None, 'response': {'status_code': 400, 'text': '{\n   "error" : {\n      "code" : -2035,\n      "message" : {\n         "lang" : "en-us",\n         "value" : "This entry already exists in the following tables (ODBC -2035)"\n      }\n   }\n}\n'}, 'status': 'failure'}
2025-07-09 16:13:57,529 - sync_service - INFO - API log added to SAP: sap - /U_SHOPIFY_MAPPING - failure
2025-07-09 16:13:58,047 - sync_service - INFO - Sync Event: {'sync_type': 'multi_store_new_items_sap_to_shopify', 'items_processed': 1, 'success_count': 0, 'error_count': 1, 'details': None}
2025-07-09 16:13:58,155 - sync_service - INFO - API log added to SAP: system - /sync/new_items_multi_store - success
2025-07-09 16:13:58,156 - sync_service - INFO - Multi-store new items sync completed: 1 processed, 0 successful, 1 errors
2025-07-09 16:15:17,179 - sync_service - INFO - Initialized Shopify client for store: Local Store (local)
2025-07-09 16:15:17,188 - sync_service - INFO - Starting multi-store new items sync from SAP to Shopify
2025-07-09 16:15:17,748 - sync_service - INFO - SAP logging client login successful
2025-07-09 16:15:18,313 - sync_service - INFO - API log added to SAP: system - /sync/new_items_multi_store - success
2025-07-09 16:15:18,313 - sync_service - INFO - Fetching new items for store: local
2025-07-09 16:15:18,315 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'login', 'request': {'company': 'JudeBenHalim_Test', 'user': 'manager'}, 'response': None, 'status': None}
2025-07-09 16:15:18,787 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'login', 'request': None, 'response': {'status': 'success'}, 'status': 'success'}
2025-07-09 16:15:18,789 - sync_service - INFO - SAP login successful
2025-07-09 16:15:18,792 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': "view.svc/MASHURA_New_ItemsB1SLQuery?$filter=Shopify_Store eq 'local'&$orderby=MainProduct", 'request': {'method': 'GET', 'url': "https://10.0.0.100:50000/b1s/v1/view.svc/MASHURA_New_ItemsB1SLQuery?$filter=Shopify_Store eq 'local'&$orderby=MainProduct", 'data': None, 'params': None}, 'response': None, 'status': None}
2025-07-09 16:15:19,279 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': "view.svc/MASHURA_New_ItemsB1SLQuery?$filter=Shopify_Store eq 'local'&$orderby=MainProduct", 'request': None, 'response': {'odata.metadata': 'https://10.0.0.100:50000/b1s/v1/view.svc/$metadata#MASHURA_New_ItemsB1SLQuery', 'value': [{'itemcode': 'FG-0000704', 'ItemName': 'Morsi-Green', 'MainProduct': 'Morsi Necklace', 'Color': 'Green', 'OnHand': 0.0, 'IsCommited': 0.0, 'Available': 0.0, 'Price': 2500.0, 'Status': 'existing', 'Shopify_ProductCode': '7510108733506', 'Shopify_Store': 'local', 'id__': 1}]}, 'status': 'success'}
2025-07-09 16:15:19,281 - sync_service - INFO - Product group: ('Morsi Necklace', 'local') has 1 items
2025-07-09 16:15:19,282 - sync_service - INFO - Grouped 1 items into 1 product groups for store local
2025-07-09 16:15:19,283 - sync_service - INFO - Processing product group: ('Morsi Necklace', 'local') with 1 items for store local
2025-07-09 16:15:19,284 - sync_service - INFO - Found existing Shopify product ID: 7510108733506 for Morsi Necklace
2025-07-09 16:15:19,284 - sync_service - INFO - Product Morsi Necklace already exists in store local, adding variants
2025-07-09 16:15:19,452 - sync_service - ERROR - Failed to add API log to SAP: HTTP 400: {
   "error" : {
      "code" : -1,
      "message" : {
         "lang" : "en-us",
         "value" : "CServiceData::SetPropertyValueString failed; Value too long in property 'U_Action' of 'U_API_LOG'"
      }
   }
}

2025-07-09 16:15:19,485 - sync_service - INFO - API Call: {'service': 'shopify', 'endpoint': 'graphql_local', 'request': {'query': '\n        mutation productVariantCreate($input: ProductVariantInput!) {\n            productVariantCreate(input: $input) {\n                productVariant {\n                    id\n                    sku\n                    price\n                    inventoryItem {\n                        id\n                    }\n                    selectedOptions {\n                        name\n                        value\n                    }\n                }\n                userErrors {\n                    field\n                    message\n                }\n            }\n        }\n        ', 'variables': {'input': {'sku': 'FG-0000704', 'price': '2500.0', 'inventoryPolicy': 'DENY', 'inventoryManagement': 'SHOPIFY', 'weight': 0.0, 'weightUnit': 'KILOGRAMS', 'productId': 'gid://shopify/Product/7510108733506'}}}, 'response': None, 'status': None}
2025-07-09 16:15:20,085 - sync_service - INFO - API Call: {'service': 'shopify', 'endpoint': 'graphql_local', 'request': None, 'response': {'productVariantCreate': {'productVariant': {'id': 'gid://shopify/ProductVariant/42295138943042', 'sku': 'FG-0000704', 'price': '2500.00', 'inventoryItem': {'id': 'gid://shopify/InventoryItem/44396269895746'}, 'selectedOptions': [{'name': 'Color', 'value': 'Default Title'}]}, 'userErrors': []}}, 'status': 'success'}
2025-07-09 16:15:20,085 - sync_service - INFO - API Call: {'service': 'shopify', 'endpoint': 'graphql_local', 'request': {'query': '\n        mutation productVariantUpdate($input: ProductVariantInput!) {\n            productVariantUpdate(input: $input) {\n                productVariant {\n                    id\n                    sku\n                    title\n                    selectedOptions {\n                        name\n                        value\n                    }\n                }\n                userErrors {\n                    field\n                    message\n                }\n            }\n        }\n        ', 'variables': {'input': {'title': 'Green', 'id': 'gid://shopify/ProductVariant/42295138943042'}}}, 'response': None, 'status': None}
2025-07-09 16:15:20,588 - sync_service - INFO - API Call: {'service': 'shopify', 'endpoint': 'graphql_local', 'request': None, 'response': {'productVariantUpdate': {'productVariant': {'id': 'gid://shopify/ProductVariant/42295138943042', 'sku': 'FG-0000704', 'title': 'Default Title', 'selectedOptions': [{'name': 'Color', 'value': 'Default Title'}]}, 'userErrors': []}}, 'status': 'success'}
2025-07-09 16:15:20,589 - sync_service - INFO - Updated variant FG-0000704 title to 'Green'
2025-07-09 16:15:20,698 - sync_service - ERROR - Failed to add API log to SAP: HTTP 400: {
   "error" : {
      "code" : -1,
      "message" : {
         "lang" : "en-us",
         "value" : "CServiceData::SetPropertyValueString failed; Value too long in property 'U_Action' of 'U_API_LOG'"
      }
   }
}

2025-07-09 16:15:20,700 - sync_service - INFO - API Call: {'service': 'shopify', 'endpoint': 'graphql_local', 'request': {'query': '\n        mutation inventoryAdjustQuantity($input: InventoryAdjustQuantityInput!) {\n            inventoryAdjustQuantity(input: $input) {\n                inventoryLevel {\n                    available\n                }\n                userErrors {\n                    field\n                    message\n                }\n            }\n        }\n        ', 'variables': {'input': {'inventoryItemId': 'gid://shopify/InventoryItem/44396269895746', 'availableDelta': 10}}}, 'response': None, 'status': None}
2025-07-09 16:15:21,063 - sync_service - ERROR - GraphQL query error for store local: {'message': "Field 'inventoryAdjustQuantity' doesn't exist on type 'Mutation'", 'locations': [{'line': 2, 'column': 3}], 'path': ['mutation inventoryAdjustQuantity', 'inventoryAdjustQuantity'], 'extensions': {'code': 'undefinedField', 'typeName': 'Mutation', 'fieldName': 'inventoryAdjustQuantity'}}
GraphQL Errors: [
  {
    "message": "Field 'inventoryAdjustQuantity' doesn't exist on type 'Mutation'",
    "locations": [
      {
        "line": 2,
        "column": 3
      }
    ],
    "path": [
      "mutation inventoryAdjustQuantity",
      "inventoryAdjustQuantity"
    ],
    "extensions": {
      "code": "undefinedField",
      "typeName": "Mutation",
      "fieldName": "inventoryAdjustQuantity"
    }
  },
  {
    "message": "Variable $input is declared by inventoryAdjustQuantity but not used",
    "locations": [
      {
        "line": 1,
        "column": 1
      }
    ],
    "path": [
      "mutation inventoryAdjustQuantity"
    ],
    "extensions": {
      "code": "variableNotUsed",
      "variableName": "input"
    }
  }
]
2025-07-09 16:15:21,194 - sync_service - ERROR - Failed to add API log to SAP: HTTP 400: {
   "error" : {
      "code" : -1,
      "message" : {
         "lang" : "en-us",
         "value" : "CServiceData::SetPropertyValueString failed; Value too long in property 'U_Value' of 'U_API_LOG'"
      }
   }
}

2025-07-09 16:15:21,195 - sync_service - WARNING - Failed to set inventory for variant FG-0000704: GraphQL query error for store local: {'message': "Field 'inventoryAdjustQuantity' doesn't exist on type 'Mutation'", 'locations': [{'line': 2, 'column': 3}], 'path': ['mutation inventoryAdjustQuantity', 'inventoryAdjustQuantity'], 'extensions': {'code': 'undefinedField', 'typeName': 'Mutation', 'fieldName': 'inventoryAdjustQuantity'}}
GraphQL Errors: [
  {
    "message": "Field 'inventoryAdjustQuantity' doesn't exist on type 'Mutation'",
    "locations": [
      {
        "line": 2,
        "column": 3
      }
    ],
    "path": [
      "mutation inventoryAdjustQuantity",
      "inventoryAdjustQuantity"
    ],
    "extensions": {
      "code": "undefinedField",
      "typeName": "Mutation",
      "fieldName": "inventoryAdjustQuantity"
    }
  },
  {
    "message": "Variable $input is declared by inventoryAdjustQuantity but not used",
    "locations": [
      {
        "line": 1,
        "column": 1
      }
    ],
    "path": [
      "mutation inventoryAdjustQuantity"
    ],
    "extensions": {
      "code": "variableNotUsed",
      "variableName": "input"
    }
  }
]
2025-07-09 16:15:21,196 - sync_service - INFO - Successfully added variant FG-0000704 to existing product
2025-07-09 16:15:21,312 - sync_service - INFO - API log added to SAP: sap - /U_SHOPIFY_MAPPING - success
2025-07-09 16:15:21,314 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'U_SHOPIFY_MAPPING', 'request': {'method': 'POST', 'url': 'https://10.0.0.100:50000/b1s/v1/U_SHOPIFY_MAPPING', 'data': {'Code': '7510108733506', 'Name': '7510108733506', 'U_Shopify_Type': 'product', 'U_SAP_Code': 'Morsi Necklace', 'U_Shopify_Store': 'local', 'U_SAP_Type': 'item'}, 'params': None}, 'response': None, 'status': None}
2025-07-09 16:15:21,436 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'U_SHOPIFY_MAPPING', 'request': None, 'response': {'status_code': 400, 'text': '{\n   "error" : {\n      "code" : -2035,\n      "message" : {\n         "lang" : "en-us",\n         "value" : "This entry already exists in the following tables (ODBC -2035)"\n      }\n   }\n}\n'}, 'status': 'failure'}
2025-07-09 16:15:21,564 - sync_service - INFO - API log added to SAP: sap - /U_SHOPIFY_MAPPING - failure
2025-07-09 16:15:21,678 - sync_service - INFO - API log added to SAP: sap - /U_SHOPIFY_MAPPING - success
2025-07-09 16:15:21,679 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'U_SHOPIFY_MAPPING', 'request': {'method': 'POST', 'url': 'https://10.0.0.100:50000/b1s/v1/U_SHOPIFY_MAPPING', 'data': {'Code': '42295138943042', 'Name': '42295138943042', 'U_Shopify_Type': 'variant', 'U_SAP_Code': 'FG-0000704', 'U_Shopify_Store': 'local', 'U_SAP_Type': 'item'}, 'params': None}, 'response': None, 'status': None}
2025-07-09 16:15:21,828 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'U_SHOPIFY_MAPPING', 'request': None, 'response': {'odata.metadata': 'https://10.0.0.100:50000/b1s/v1/$metadata#U_SHOPIFY_MAPPING/@Element', 'Code': '42295138943042', 'Name': '42295138943042', 'U_Shopify_Type': 'variant', 'U_SAP_Code': 'FG-0000704', 'U_SAP_Type': 'item', 'U_Shopify_Store': 'local'}, 'status': 'success'}
2025-07-09 16:15:21,947 - sync_service - INFO - API log added to SAP: sap - /U_SHOPIFY_MAPPING - success
2025-07-09 16:15:22,051 - sync_service - ERROR - Failed to add API log to SAP: HTTP 400: {
   "error" : {
      "code" : -1,
      "message" : {
         "lang" : "en-us",
         "value" : "CServiceData::SetPropertyValueString failed; Value too long in property 'U_Action' of 'U_API_LOG'"
      }
   }
}

2025-07-09 16:15:22,052 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'U_SHOPIFY_MAPPING', 'request': {'method': 'POST', 'url': 'https://10.0.0.100:50000/b1s/v1/U_SHOPIFY_MAPPING', 'data': {'Code': '44396269895746', 'Name': '44396269895746', 'U_Shopify_Type': 'variant_inventory', 'U_SAP_Code': 'FG-0000704', 'U_Shopify_Store': 'local', 'U_SAP_Type': 'item'}, 'params': None}, 'response': None, 'status': None}
2025-07-09 16:15:22,179 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'U_SHOPIFY_MAPPING', 'request': None, 'response': {'odata.metadata': 'https://10.0.0.100:50000/b1s/v1/$metadata#U_SHOPIFY_MAPPING/@Element', 'Code': '44396269895746', 'Name': '44396269895746', 'U_Shopify_Type': 'variant_inventory', 'U_SAP_Code': 'FG-0000704', 'U_SAP_Type': 'item', 'U_Shopify_Store': 'local'}, 'status': 'success'}
2025-07-09 16:15:22,287 - sync_service - ERROR - Failed to add API log to SAP: HTTP 400: {
   "error" : {
      "code" : -1,
      "message" : {
         "lang" : "en-us",
         "value" : "CServiceData::SetPropertyValueString failed; Value too long in property 'U_Action' of 'U_API_LOG'"
      }
   }
}

2025-07-09 16:15:22,790 - sync_service - INFO - Sync Event: {'sync_type': 'multi_store_new_items_sap_to_shopify', 'items_processed': 1, 'success_count': 1, 'error_count': 0, 'details': None}
2025-07-09 16:15:22,904 - sync_service - INFO - API log added to SAP: system - /sync/new_items_multi_store - success
2025-07-09 16:15:22,906 - sync_service - INFO - Multi-store new items sync completed: 1 processed, 1 successful, 0 errors
2025-07-09 16:21:29,500 - sync_service - INFO - Initialized Shopify client for store: Local Store (local)
2025-07-09 16:21:29,509 - sync_service - INFO - Starting multi-store new items sync from SAP to Shopify
2025-07-09 16:21:30,105 - sync_service - INFO - SAP logging client login successful
2025-07-09 16:21:30,660 - sync_service - INFO - API log added to SAP: system - /sync/new_items_multi_store - success
2025-07-09 16:21:30,663 - sync_service - INFO - Fetching new items for store: local
2025-07-09 16:21:30,665 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'login', 'request': {'company': 'JudeBenHalim_Test', 'user': 'manager'}, 'response': None, 'status': None}
2025-07-09 16:21:31,210 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'login', 'request': None, 'response': {'status': 'success'}, 'status': 'success'}
2025-07-09 16:21:31,212 - sync_service - INFO - SAP login successful
2025-07-09 16:21:31,214 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': "view.svc/MASHURA_New_ItemsB1SLQuery?$filter=Shopify_Store eq 'local'&$orderby=MainProduct", 'request': {'method': 'GET', 'url': "https://10.0.0.100:50000/b1s/v1/view.svc/MASHURA_New_ItemsB1SLQuery?$filter=Shopify_Store eq 'local'&$orderby=MainProduct", 'data': None, 'params': None}, 'response': None, 'status': None}
2025-07-09 16:21:31,724 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': "view.svc/MASHURA_New_ItemsB1SLQuery?$filter=Shopify_Store eq 'local'&$orderby=MainProduct", 'request': None, 'response': {'odata.metadata': 'https://10.0.0.100:50000/b1s/v1/view.svc/$metadata#MASHURA_New_ItemsB1SLQuery', 'value': [{'itemcode': 'FG-0000704', 'ItemName': 'Morsi-Green', 'MainProduct': 'Morsi Necklace', 'Color': 'Green', 'OnHand': 0.0, 'IsCommited': 0.0, 'Available': 0.0, 'Price': 2500.0, 'Status': 'existing', 'Shopify_ProductCode': '7510108733506', 'Shopify_Store': 'local', 'id__': 1}]}, 'status': 'success'}
2025-07-09 16:21:31,726 - sync_service - INFO - Product group: ('Morsi Necklace', 'local') has 1 items
2025-07-09 16:21:31,727 - sync_service - INFO - Grouped 1 items into 1 product groups for store local
2025-07-09 16:21:31,727 - sync_service - INFO - Processing product group: ('Morsi Necklace', 'local') with 1 items for store local
2025-07-09 16:21:31,728 - sync_service - INFO - Found existing Shopify product ID: 7510108733506 for Morsi Necklace
2025-07-09 16:21:31,728 - sync_service - INFO - Product Morsi Necklace already exists in store local, adding variants
2025-07-09 16:21:31,730 - sync_service - INFO - API Call: {'service': 'shopify', 'endpoint': 'graphql_local', 'request': {'query': '\n        query GetProductByHandle($handle: String!) {\n            productByHandle(handle: $handle) {\n                id\n                title\n                handle\n                description\n                variants(first: 50) {\n                    edges {\n                        node {\n                            id\n                            sku\n                            price\n                            inventoryItem {\n                                id\n                            }\n                            selectedOptions {\n                                name\n                                value\n                            }\n                        }\n                    }\n                }\n            }\n        }\n        ', 'variables': {'handle': None}}, 'response': None, 'status': None}
2025-07-09 16:21:32,125 - sync_service - ERROR - GraphQL query error for store local: {'message': 'Variable $handle of type String! was provided invalid value', 'locations': [{'line': 1, 'column': 26}], 'extensions': {'value': None, 'problems': [{'path': [], 'explanation': 'Expected value to not be null'}]}}
GraphQL Errors: [
  {
    "message": "Variable $handle of type String! was provided invalid value",
    "locations": [
      {
        "line": 1,
        "column": 26
      }
    ],
    "extensions": {
      "value": null,
      "problems": [
        {
          "path": [],
          "explanation": "Expected value to not be null"
        }
      ]
    }
  }
]
2025-07-09 16:21:32,251 - sync_service - ERROR - Failed to add API log to SAP: HTTP 400: {
   "error" : {
      "code" : -1,
      "message" : {
         "lang" : "en-us",
         "value" : "CServiceData::SetPropertyValueString failed; Value too long in property 'U_Value' of 'U_API_LOG'"
      }
   }
}

2025-07-09 16:21:32,363 - sync_service - ERROR - Failed to add API log to SAP: HTTP 400: {
   "error" : {
      "code" : -1,
      "message" : {
         "lang" : "en-us",
         "value" : "CServiceData::SetPropertyValueString failed; Value too long in property 'U_Action' of 'U_API_LOG'"
      }
   }
}

2025-07-09 16:21:32,366 - sync_service - INFO - API Call: {'service': 'shopify', 'endpoint': 'graphql_local', 'request': {'query': '\n        mutation productVariantCreate($input: ProductVariantInput!) {\n            productVariantCreate(input: $input) {\n                productVariant {\n                    id\n                    sku\n                    price\n                    inventoryItem {\n                        id\n                    }\n                    selectedOptions {\n                        name\n                        value\n                    }\n                }\n                userErrors {\n                    field\n                    message\n                }\n            }\n        }\n        ', 'variables': {'input': {'sku': 'FG-0000704', 'price': '2500.0', 'inventoryPolicy': 'DENY', 'inventoryManagement': 'SHOPIFY', 'weight': 0.0, 'weightUnit': 'KILOGRAMS', 'option1': 'Green', 'productId': 'gid://shopify/Product/7510108733506'}}}, 'response': None, 'status': None}
2025-07-09 16:21:32,763 - sync_service - ERROR - GraphQL query error for store local: {'message': 'Variable $input of type ProductVariantInput! was provided invalid value for option1 (Field is not defined on ProductVariantInput)', 'locations': [{'line': 1, 'column': 31}], 'extensions': {'value': {'sku': 'FG-0000704', 'price': '2500.0', 'inventoryPolicy': 'DENY', 'inventoryManagement': 'SHOPIFY', 'weight': 0.0, 'weightUnit': 'KILOGRAMS', 'option1': 'Green', 'productId': 'gid://shopify/Product/7510108733506'}, 'problems': [{'path': ['option1'], 'explanation': 'Field is not defined on ProductVariantInput'}]}}
GraphQL Errors: [
  {
    "message": "Variable $input of type ProductVariantInput! was provided invalid value for option1 (Field is not defined on ProductVariantInput)",
    "locations": [
      {
        "line": 1,
        "column": 31
      }
    ],
    "extensions": {
      "value": {
        "sku": "FG-0000704",
        "price": "2500.0",
        "inventoryPolicy": "DENY",
        "inventoryManagement": "SHOPIFY",
        "weight": 0.0,
        "weightUnit": "KILOGRAMS",
        "option1": "Green",
        "productId": "gid://shopify/Product/7510108733506"
      },
      "problems": [
        {
          "path": [
            "option1"
          ],
          "explanation": "Field is not defined on ProductVariantInput"
        }
      ]
    }
  }
]
2025-07-09 16:21:32,895 - sync_service - ERROR - Failed to add API log to SAP: HTTP 400: {
   "error" : {
      "code" : -1,
      "message" : {
         "lang" : "en-us",
         "value" : "CServiceData::SetPropertyValueString failed; Value too long in property 'U_Value' of 'U_API_LOG'"
      }
   }
}

2025-07-09 16:21:32,897 - sync_service - ERROR - Detailed variant creation error for FG-0000704: GraphQL query error for store local: {'message': 'Variable $input of type ProductVariantInput! was provided invalid value for option1 (Field is not defined on ProductVariantInput)', 'locations': [{'line': 1, 'column': 31}], 'extensions': {'value': {'sku': 'FG-0000704', 'price': '2500.0', 'inventoryPolicy': 'DENY', 'inventoryManagement': 'SHOPIFY', 'weight': 0.0, 'weightUnit': 'KILOGRAMS', 'option1': 'Green', 'productId': 'gid://shopify/Product/7510108733506'}, 'problems': [{'path': ['option1'], 'explanation': 'Field is not defined on ProductVariantInput'}]}}
GraphQL Errors: [
  {
    "message": "Variable $input of type ProductVariantInput! was provided invalid value for option1 (Field is not defined on ProductVariantInput)",
    "locations": [
      {
        "line": 1,
        "column": 31
      }
    ],
    "extensions": {
      "value": {
        "sku": "FG-0000704",
        "price": "2500.0",
        "inventoryPolicy": "DENY",
        "inventoryManagement": "SHOPIFY",
        "weight": 0.0,
        "weightUnit": "KILOGRAMS",
        "option1": "Green",
        "productId": "gid://shopify/Product/7510108733506"
      },
      "problems": [
        {
          "path": [
            "option1"
          ],
          "explanation": "Field is not defined on ProductVariantInput"
        }
      ]
    }
  }
]
2025-07-09 16:21:33,010 - sync_service - ERROR - Failed to add API log to SAP: HTTP 400: {
   "error" : {
      "code" : -1,
      "message" : {
         "lang" : "en-us",
         "value" : "CServiceData::SetPropertyValueString failed; Value too long in property 'U_Action' of 'U_API_LOG'"
      }
   }
}

2025-07-09 16:21:33,012 - sync_service - ERROR - Failed to add variant FG-0000704: GraphQL query error for store local: {'message': 'Variable $input of type ProductVariantInput! was provided invalid value for option1 (Field is not defined on ProductVariantInput)', 'locations': [{'line': 1, 'column': 31}], 'extensions': {'value': {'sku': 'FG-0000704', 'price': '2500.0', 'inventoryPolicy': 'DENY', 'inventoryManagement': 'SHOPIFY', 'weight': 0.0, 'weightUnit': 'KILOGRAMS', 'option1': 'Green', 'productId': 'gid://shopify/Product/7510108733506'}, 'problems': [{'path': ['option1'], 'explanation': 'Field is not defined on ProductVariantInput'}]}}
GraphQL Errors: [
  {
    "message": "Variable $input of type ProductVariantInput! was provided invalid value for option1 (Field is not defined on ProductVariantInput)",
    "locations": [
      {
        "line": 1,
        "column": 31
      }
    ],
    "extensions": {
      "value": {
        "sku": "FG-0000704",
        "price": "2500.0",
        "inventoryPolicy": "DENY",
        "inventoryManagement": "SHOPIFY",
        "weight": 0.0,
        "weightUnit": "KILOGRAMS",
        "option1": "Green",
        "productId": "gid://shopify/Product/7510108733506"
      },
      "problems": [
        {
          "path": [
            "option1"
          ],
          "explanation": "Field is not defined on ProductVariantInput"
        }
      ]
    }
  }
]
2025-07-09 16:21:33,133 - sync_service - INFO - API log added to SAP: sap - /U_SHOPIFY_MAPPING - success
2025-07-09 16:21:33,135 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'U_SHOPIFY_MAPPING', 'request': {'method': 'POST', 'url': 'https://10.0.0.100:50000/b1s/v1/U_SHOPIFY_MAPPING', 'data': {'Code': '7510108733506', 'Name': '7510108733506', 'U_Shopify_Type': 'product', 'U_SAP_Code': 'Morsi Necklace', 'U_Shopify_Store': 'local', 'U_SAP_Type': 'item'}, 'params': None}, 'response': None, 'status': None}
2025-07-09 16:21:33,248 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'U_SHOPIFY_MAPPING', 'request': None, 'response': {'status_code': 400, 'text': '{\n   "error" : {\n      "code" : -2035,\n      "message" : {\n         "lang" : "en-us",\n         "value" : "This entry already exists in the following tables (ODBC -2035)"\n      }\n   }\n}\n'}, 'status': 'failure'}
2025-07-09 16:21:33,374 - sync_service - INFO - API log added to SAP: sap - /U_SHOPIFY_MAPPING - failure
2025-07-09 16:21:33,905 - sync_service - INFO - Sync Event: {'sync_type': 'multi_store_new_items_sap_to_shopify', 'items_processed': 1, 'success_count': 0, 'error_count': 1, 'details': None}
2025-07-09 16:21:34,018 - sync_service - INFO - API log added to SAP: system - /sync/new_items_multi_store - success
2025-07-09 16:21:34,048 - sync_service - INFO - Multi-store new items sync completed: 1 processed, 0 successful, 1 errors
2025-07-09 16:23:03,009 - sync_service - INFO - Initialized Shopify client for store: Local Store (local)
2025-07-09 16:23:03,016 - sync_service - INFO - Starting multi-store new items sync from SAP to Shopify
2025-07-09 16:23:03,667 - sync_service - INFO - SAP logging client login successful
2025-07-09 16:23:04,215 - sync_service - INFO - API log added to SAP: system - /sync/new_items_multi_store - success
2025-07-09 16:23:04,216 - sync_service - INFO - Fetching new items for store: local
2025-07-09 16:23:04,218 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'login', 'request': {'company': 'JudeBenHalim_Test', 'user': 'manager'}, 'response': None, 'status': None}
2025-07-09 16:23:04,747 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'login', 'request': None, 'response': {'status': 'success'}, 'status': 'success'}
2025-07-09 16:23:04,748 - sync_service - INFO - SAP login successful
2025-07-09 16:23:04,750 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': "view.svc/MASHURA_New_ItemsB1SLQuery?$filter=Shopify_Store eq 'local'&$orderby=MainProduct", 'request': {'method': 'GET', 'url': "https://10.0.0.100:50000/b1s/v1/view.svc/MASHURA_New_ItemsB1SLQuery?$filter=Shopify_Store eq 'local'&$orderby=MainProduct", 'data': None, 'params': None}, 'response': None, 'status': None}
2025-07-09 16:23:05,281 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': "view.svc/MASHURA_New_ItemsB1SLQuery?$filter=Shopify_Store eq 'local'&$orderby=MainProduct", 'request': None, 'response': {'odata.metadata': 'https://10.0.0.100:50000/b1s/v1/view.svc/$metadata#MASHURA_New_ItemsB1SLQuery', 'value': [{'itemcode': 'FG-0000704', 'ItemName': 'Morsi-Green', 'MainProduct': 'Morsi Necklace', 'Color': 'Green', 'OnHand': 0.0, 'IsCommited': 0.0, 'Available': 0.0, 'Price': 2500.0, 'Status': 'existing', 'Shopify_ProductCode': '7510108733506', 'Shopify_Store': 'local', 'id__': 1}]}, 'status': 'success'}
2025-07-09 16:23:05,283 - sync_service - INFO - Product group: ('Morsi Necklace', 'local') has 1 items
2025-07-09 16:23:05,284 - sync_service - INFO - Grouped 1 items into 1 product groups for store local
2025-07-09 16:23:05,286 - sync_service - INFO - Processing product group: ('Morsi Necklace', 'local') with 1 items for store local
2025-07-09 16:23:05,287 - sync_service - INFO - Found existing Shopify product ID: 7510108733506 for Morsi Necklace
2025-07-09 16:23:05,289 - sync_service - INFO - Product Morsi Necklace already exists in store local, adding variants
2025-07-09 16:23:05,291 - sync_service - INFO - API Call: {'service': 'shopify', 'endpoint': 'graphql_local', 'request': {'query': '\n        query GetProductByHandle($handle: String!) {\n            productByHandle(handle: $handle) {\n                id\n                title\n                handle\n                description\n                variants(first: 50) {\n                    edges {\n                        node {\n                            id\n                            sku\n                            price\n                            inventoryItem {\n                                id\n                            }\n                            selectedOptions {\n                                name\n                                value\n                            }\n                        }\n                    }\n                }\n            }\n        }\n        ', 'variables': {'handle': None}}, 'response': None, 'status': None}
2025-07-09 16:23:05,642 - sync_service - ERROR - GraphQL query error for store local: {'message': 'Variable $handle of type String! was provided invalid value', 'locations': [{'line': 1, 'column': 26}], 'extensions': {'value': None, 'problems': [{'path': [], 'explanation': 'Expected value to not be null'}]}}
GraphQL Errors: [
  {
    "message": "Variable $handle of type String! was provided invalid value",
    "locations": [
      {
        "line": 1,
        "column": 26
      }
    ],
    "extensions": {
      "value": null,
      "problems": [
        {
          "path": [],
          "explanation": "Expected value to not be null"
        }
      ]
    }
  }
]
2025-07-09 16:23:05,762 - sync_service - ERROR - Failed to add API log to SAP: HTTP 400: {
   "error" : {
      "code" : -1,
      "message" : {
         "lang" : "en-us",
         "value" : "CServiceData::SetPropertyValueString failed; Value too long in property 'U_Value' of 'U_API_LOG'"
      }
   }
}

2025-07-09 16:23:05,899 - sync_service - ERROR - Failed to add API log to SAP: HTTP 400: {
   "error" : {
      "code" : -1,
      "message" : {
         "lang" : "en-us",
         "value" : "CServiceData::SetPropertyValueString failed; Value too long in property 'U_Action' of 'U_API_LOG'"
      }
   }
}

2025-07-09 16:23:05,901 - sync_service - INFO - API Call: {'service': 'shopify', 'endpoint': 'graphql_local', 'request': {'query': '\n        mutation productVariantCreate($input: ProductVariantInput!) {\n            productVariantCreate(input: $input) {\n                productVariant {\n                    id\n                    sku\n                    price\n                    inventoryItem {\n                        id\n                    }\n                    selectedOptions {\n                        name\n                        value\n                    }\n                }\n                userErrors {\n                    field\n                    message\n                }\n            }\n        }\n        ', 'variables': {'input': {'sku': 'FG-0000704', 'price': '2500.0', 'inventoryPolicy': 'DENY', 'inventoryManagement': 'SHOPIFY', 'weight': 0.0, 'weightUnit': 'KILOGRAMS', 'selectedOptions': [{'name': 'Color', 'value': 'Green'}], 'productId': 'gid://shopify/Product/7510108733506'}}}, 'response': None, 'status': None}
2025-07-09 16:23:06,284 - sync_service - ERROR - GraphQL query error for store local: {'message': 'Variable $input of type ProductVariantInput! was provided invalid value for selectedOptions (Field is not defined on ProductVariantInput)', 'locations': [{'line': 1, 'column': 31}], 'extensions': {'value': {'sku': 'FG-0000704', 'price': '2500.0', 'inventoryPolicy': 'DENY', 'inventoryManagement': 'SHOPIFY', 'weight': 0.0, 'weightUnit': 'KILOGRAMS', 'selectedOptions': [{'name': 'Color', 'value': 'Green'}], 'productId': 'gid://shopify/Product/7510108733506'}, 'problems': [{'path': ['selectedOptions'], 'explanation': 'Field is not defined on ProductVariantInput'}]}}
GraphQL Errors: [
  {
    "message": "Variable $input of type ProductVariantInput! was provided invalid value for selectedOptions (Field is not defined on ProductVariantInput)",
    "locations": [
      {
        "line": 1,
        "column": 31
      }
    ],
    "extensions": {
      "value": {
        "sku": "FG-0000704",
        "price": "2500.0",
        "inventoryPolicy": "DENY",
        "inventoryManagement": "SHOPIFY",
        "weight": 0.0,
        "weightUnit": "KILOGRAMS",
        "selectedOptions": [
          {
            "name": "Color",
            "value": "Green"
          }
        ],
        "productId": "gid://shopify/Product/7510108733506"
      },
      "problems": [
        {
          "path": [
            "selectedOptions"
          ],
          "explanation": "Field is not defined on ProductVariantInput"
        }
      ]
    }
  }
]
2025-07-09 16:23:06,449 - sync_service - ERROR - Failed to add API log to SAP: HTTP 400: {
   "error" : {
      "code" : -1,
      "message" : {
         "lang" : "en-us",
         "value" : "CServiceData::SetPropertyValueString failed; Value too long in property 'U_Value' of 'U_API_LOG'"
      }
   }
}

2025-07-09 16:23:06,450 - sync_service - ERROR - Detailed variant creation error for FG-0000704: GraphQL query error for store local: {'message': 'Variable $input of type ProductVariantInput! was provided invalid value for selectedOptions (Field is not defined on ProductVariantInput)', 'locations': [{'line': 1, 'column': 31}], 'extensions': {'value': {'sku': 'FG-0000704', 'price': '2500.0', 'inventoryPolicy': 'DENY', 'inventoryManagement': 'SHOPIFY', 'weight': 0.0, 'weightUnit': 'KILOGRAMS', 'selectedOptions': [{'name': 'Color', 'value': 'Green'}], 'productId': 'gid://shopify/Product/7510108733506'}, 'problems': [{'path': ['selectedOptions'], 'explanation': 'Field is not defined on ProductVariantInput'}]}}
GraphQL Errors: [
  {
    "message": "Variable $input of type ProductVariantInput! was provided invalid value for selectedOptions (Field is not defined on ProductVariantInput)",
    "locations": [
      {
        "line": 1,
        "column": 31
      }
    ],
    "extensions": {
      "value": {
        "sku": "FG-0000704",
        "price": "2500.0",
        "inventoryPolicy": "DENY",
        "inventoryManagement": "SHOPIFY",
        "weight": 0.0,
        "weightUnit": "KILOGRAMS",
        "selectedOptions": [
          {
            "name": "Color",
            "value": "Green"
          }
        ],
        "productId": "gid://shopify/Product/7510108733506"
      },
      "problems": [
        {
          "path": [
            "selectedOptions"
          ],
          "explanation": "Field is not defined on ProductVariantInput"
        }
      ]
    }
  }
]
2025-07-09 16:23:06,580 - sync_service - ERROR - Failed to add API log to SAP: HTTP 400: {
   "error" : {
      "code" : -1,
      "message" : {
         "lang" : "en-us",
         "value" : "CServiceData::SetPropertyValueString failed; Value too long in property 'U_Action' of 'U_API_LOG'"
      }
   }
}

2025-07-09 16:23:06,581 - sync_service - ERROR - Failed to add variant FG-0000704: GraphQL query error for store local: {'message': 'Variable $input of type ProductVariantInput! was provided invalid value for selectedOptions (Field is not defined on ProductVariantInput)', 'locations': [{'line': 1, 'column': 31}], 'extensions': {'value': {'sku': 'FG-0000704', 'price': '2500.0', 'inventoryPolicy': 'DENY', 'inventoryManagement': 'SHOPIFY', 'weight': 0.0, 'weightUnit': 'KILOGRAMS', 'selectedOptions': [{'name': 'Color', 'value': 'Green'}], 'productId': 'gid://shopify/Product/7510108733506'}, 'problems': [{'path': ['selectedOptions'], 'explanation': 'Field is not defined on ProductVariantInput'}]}}
GraphQL Errors: [
  {
    "message": "Variable $input of type ProductVariantInput! was provided invalid value for selectedOptions (Field is not defined on ProductVariantInput)",
    "locations": [
      {
        "line": 1,
        "column": 31
      }
    ],
    "extensions": {
      "value": {
        "sku": "FG-0000704",
        "price": "2500.0",
        "inventoryPolicy": "DENY",
        "inventoryManagement": "SHOPIFY",
        "weight": 0.0,
        "weightUnit": "KILOGRAMS",
        "selectedOptions": [
          {
            "name": "Color",
            "value": "Green"
          }
        ],
        "productId": "gid://shopify/Product/7510108733506"
      },
      "problems": [
        {
          "path": [
            "selectedOptions"
          ],
          "explanation": "Field is not defined on ProductVariantInput"
        }
      ]
    }
  }
]
2025-07-09 16:23:06,709 - sync_service - INFO - API log added to SAP: sap - /U_SHOPIFY_MAPPING - success
2025-07-09 16:23:06,710 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'U_SHOPIFY_MAPPING', 'request': {'method': 'POST', 'url': 'https://10.0.0.100:50000/b1s/v1/U_SHOPIFY_MAPPING', 'data': {'Code': '7510108733506', 'Name': '7510108733506', 'U_Shopify_Type': 'product', 'U_SAP_Code': 'Morsi Necklace', 'U_Shopify_Store': 'local', 'U_SAP_Type': 'item'}, 'params': None}, 'response': None, 'status': None}
2025-07-09 16:23:06,832 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'U_SHOPIFY_MAPPING', 'request': None, 'response': {'status_code': 400, 'text': '{\n   "error" : {\n      "code" : -2035,\n      "message" : {\n         "lang" : "en-us",\n         "value" : "This entry already exists in the following tables (ODBC -2035)"\n      }\n   }\n}\n'}, 'status': 'failure'}
2025-07-09 16:23:06,946 - sync_service - INFO - API log added to SAP: sap - /U_SHOPIFY_MAPPING - failure
2025-07-09 16:23:07,460 - sync_service - INFO - Sync Event: {'sync_type': 'multi_store_new_items_sap_to_shopify', 'items_processed': 1, 'success_count': 0, 'error_count': 1, 'details': None}
2025-07-09 16:23:07,581 - sync_service - INFO - API log added to SAP: system - /sync/new_items_multi_store - success
2025-07-09 16:23:07,583 - sync_service - INFO - Multi-store new items sync completed: 1 processed, 0 successful, 1 errors
2025-07-09 16:23:38,990 - sync_service - INFO - Initialized Shopify client for store: Local Store (local)
2025-07-09 16:23:38,995 - sync_service - INFO - Starting multi-store new items sync from SAP to Shopify
2025-07-09 16:23:39,684 - sync_service - INFO - SAP logging client login successful
2025-07-09 16:23:40,420 - sync_service - INFO - API log added to SAP: system - /sync/new_items_multi_store - success
2025-07-09 16:23:40,421 - sync_service - INFO - Fetching new items for store: local
2025-07-09 16:23:40,423 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'login', 'request': {'company': 'JudeBenHalim_Test', 'user': 'manager'}, 'response': None, 'status': None}
2025-07-09 16:23:41,002 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'login', 'request': None, 'response': {'status': 'success'}, 'status': 'success'}
2025-07-09 16:23:41,003 - sync_service - INFO - SAP login successful
2025-07-09 16:23:41,004 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': "view.svc/MASHURA_New_ItemsB1SLQuery?$filter=Shopify_Store eq 'local'&$orderby=MainProduct", 'request': {'method': 'GET', 'url': "https://10.0.0.100:50000/b1s/v1/view.svc/MASHURA_New_ItemsB1SLQuery?$filter=Shopify_Store eq 'local'&$orderby=MainProduct", 'data': None, 'params': None}, 'response': None, 'status': None}
2025-07-09 16:23:41,503 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': "view.svc/MASHURA_New_ItemsB1SLQuery?$filter=Shopify_Store eq 'local'&$orderby=MainProduct", 'request': None, 'response': {'odata.metadata': 'https://10.0.0.100:50000/b1s/v1/view.svc/$metadata#MASHURA_New_ItemsB1SLQuery', 'value': [{'itemcode': 'FG-0000704', 'ItemName': 'Morsi-Green', 'MainProduct': 'Morsi Necklace', 'Color': 'Green', 'OnHand': 0.0, 'IsCommited': 0.0, 'Available': 0.0, 'Price': 2500.0, 'Status': 'existing', 'Shopify_ProductCode': '7510108733506', 'Shopify_Store': 'local', 'id__': 1}]}, 'status': 'success'}
2025-07-09 16:23:41,505 - sync_service - INFO - Product group: ('Morsi Necklace', 'local') has 1 items
2025-07-09 16:23:41,508 - sync_service - INFO - Grouped 1 items into 1 product groups for store local
2025-07-09 16:23:41,508 - sync_service - INFO - Processing product group: ('Morsi Necklace', 'local') with 1 items for store local
2025-07-09 16:23:41,509 - sync_service - INFO - Found existing Shopify product ID: 7510108733506 for Morsi Necklace
2025-07-09 16:23:41,511 - sync_service - INFO - Product Morsi Necklace already exists in store local, adding variants
2025-07-09 16:23:41,512 - sync_service - INFO - API Call: {'service': 'shopify', 'endpoint': 'graphql_local', 'request': {'query': '\n        query GetProductByHandle($handle: String!) {\n            productByHandle(handle: $handle) {\n                id\n                title\n                handle\n                description\n                variants(first: 50) {\n                    edges {\n                        node {\n                            id\n                            sku\n                            price\n                            inventoryItem {\n                                id\n                            }\n                            selectedOptions {\n                                name\n                                value\n                            }\n                        }\n                    }\n                }\n            }\n        }\n        ', 'variables': {'handle': None}}, 'response': None, 'status': None}
2025-07-09 16:23:41,886 - sync_service - ERROR - GraphQL query error for store local: {'message': 'Variable $handle of type String! was provided invalid value', 'locations': [{'line': 1, 'column': 26}], 'extensions': {'value': None, 'problems': [{'path': [], 'explanation': 'Expected value to not be null'}]}}
GraphQL Errors: [
  {
    "message": "Variable $handle of type String! was provided invalid value",
    "locations": [
      {
        "line": 1,
        "column": 26
      }
    ],
    "extensions": {
      "value": null,
      "problems": [
        {
          "path": [],
          "explanation": "Expected value to not be null"
        }
      ]
    }
  }
]
2025-07-09 16:23:42,074 - sync_service - ERROR - Failed to add API log to SAP: HTTP 400: {
   "error" : {
      "code" : -1,
      "message" : {
         "lang" : "en-us",
         "value" : "CServiceData::SetPropertyValueString failed; Value too long in property 'U_Value' of 'U_API_LOG'"
      }
   }
}

2025-07-09 16:23:42,211 - sync_service - ERROR - Failed to add API log to SAP: HTTP 400: {
   "error" : {
      "code" : -1,
      "message" : {
         "lang" : "en-us",
         "value" : "CServiceData::SetPropertyValueString failed; Value too long in property 'U_Action' of 'U_API_LOG'"
      }
   }
}

2025-07-09 16:23:42,212 - sync_service - INFO - API Call: {'service': 'shopify', 'endpoint': 'graphql_local', 'request': {'query': '\n        mutation productVariantCreate($input: ProductVariantInput!) {\n            productVariantCreate(input: $input) {\n                productVariant {\n                    id\n                    sku\n                    price\n                    inventoryItem {\n                        id\n                    }\n                    selectedOptions {\n                        name\n                        value\n                    }\n                }\n                userErrors {\n                    field\n                    message\n                }\n            }\n        }\n        ', 'variables': {'input': {'sku': 'FG-0000704', 'price': '2500.0', 'inventoryPolicy': 'DENY', 'inventoryManagement': 'SHOPIFY', 'weight': 0.0, 'weightUnit': 'KILOGRAMS', 'productId': 'gid://shopify/Product/7510108733506'}}}, 'response': None, 'status': None}
2025-07-09 16:23:42,638 - sync_service - INFO - API Call: {'service': 'shopify', 'endpoint': 'graphql_local', 'request': None, 'response': {'productVariantCreate': {'productVariant': None, 'userErrors': [{'field': None, 'message': "The variant 'Default Title' already exists."}]}}, 'status': 'success'}
2025-07-09 16:23:42,744 - sync_service - ERROR - Failed to add API log to SAP: HTTP 400: {
   "error" : {
      "code" : -1,
      "message" : {
         "lang" : "en-us",
         "value" : "CServiceData::SetPropertyValueString failed; Value too long in property 'U_Action' of 'U_API_LOG'"
      }
   }
}

2025-07-09 16:23:42,745 - sync_service - ERROR - Failed to add variant FG-0000704: The variant 'Default Title' already exists.
2025-07-09 16:23:42,904 - sync_service - INFO - API log added to SAP: sap - /U_SHOPIFY_MAPPING - success
2025-07-09 16:23:42,906 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'U_SHOPIFY_MAPPING', 'request': {'method': 'POST', 'url': 'https://10.0.0.100:50000/b1s/v1/U_SHOPIFY_MAPPING', 'data': {'Code': '7510108733506', 'Name': '7510108733506', 'U_Shopify_Type': 'product', 'U_SAP_Code': 'Morsi Necklace', 'U_Shopify_Store': 'local', 'U_SAP_Type': 'item'}, 'params': None}, 'response': None, 'status': None}
2025-07-09 16:23:43,069 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'U_SHOPIFY_MAPPING', 'request': None, 'response': {'status_code': 400, 'text': '{\n   "error" : {\n      "code" : -2035,\n      "message" : {\n         "lang" : "en-us",\n         "value" : "This entry already exists in the following tables (ODBC -2035)"\n      }\n   }\n}\n'}, 'status': 'failure'}
2025-07-09 16:23:43,472 - sync_service - INFO - API log added to SAP: sap - /U_SHOPIFY_MAPPING - failure
2025-07-09 16:23:43,987 - sync_service - INFO - Sync Event: {'sync_type': 'multi_store_new_items_sap_to_shopify', 'items_processed': 1, 'success_count': 0, 'error_count': 1, 'details': None}
2025-07-09 16:23:44,110 - sync_service - INFO - API log added to SAP: system - /sync/new_items_multi_store - success
2025-07-09 16:23:44,111 - sync_service - INFO - Multi-store new items sync completed: 1 processed, 0 successful, 1 errors
2025-07-09 16:24:08,953 - sync_service - INFO - Initialized Shopify client for store: Local Store (local)
2025-07-09 16:24:08,961 - sync_service - INFO - Starting multi-store new items sync from SAP to Shopify
2025-07-09 16:24:09,574 - sync_service - INFO - SAP logging client login successful
2025-07-09 16:24:10,137 - sync_service - INFO - API log added to SAP: system - /sync/new_items_multi_store - success
2025-07-09 16:24:10,140 - sync_service - INFO - Fetching new items for store: local
2025-07-09 16:24:10,144 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'login', 'request': {'company': 'JudeBenHalim_Test', 'user': 'manager'}, 'response': None, 'status': None}
2025-07-09 16:24:10,834 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'login', 'request': None, 'response': {'status': 'success'}, 'status': 'success'}
2025-07-09 16:24:10,835 - sync_service - INFO - SAP login successful
2025-07-09 16:24:10,837 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': "view.svc/MASHURA_New_ItemsB1SLQuery?$filter=Shopify_Store eq 'local'&$orderby=MainProduct", 'request': {'method': 'GET', 'url': "https://10.0.0.100:50000/b1s/v1/view.svc/MASHURA_New_ItemsB1SLQuery?$filter=Shopify_Store eq 'local'&$orderby=MainProduct", 'data': None, 'params': None}, 'response': None, 'status': None}
2025-07-09 16:24:11,438 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': "view.svc/MASHURA_New_ItemsB1SLQuery?$filter=Shopify_Store eq 'local'&$orderby=MainProduct", 'request': None, 'response': {'odata.metadata': 'https://10.0.0.100:50000/b1s/v1/view.svc/$metadata#MASHURA_New_ItemsB1SLQuery', 'value': [{'itemcode': 'FG-0000704', 'ItemName': 'Morsi-Green', 'MainProduct': 'Morsi Necklace', 'Color': 'Green', 'OnHand': 0.0, 'IsCommited': 0.0, 'Available': 0.0, 'Price': 2500.0, 'Status': 'existing', 'Shopify_ProductCode': '7510108733506', 'Shopify_Store': 'local', 'id__': 1}]}, 'status': 'success'}
2025-07-09 16:24:11,441 - sync_service - INFO - Product group: ('Morsi Necklace', 'local') has 1 items
2025-07-09 16:24:11,442 - sync_service - INFO - Grouped 1 items into 1 product groups for store local
2025-07-09 16:24:11,443 - sync_service - INFO - Processing product group: ('Morsi Necklace', 'local') with 1 items for store local
2025-07-09 16:24:11,444 - sync_service - INFO - Found existing Shopify product ID: 7510108733506 for Morsi Necklace
2025-07-09 16:24:11,444 - sync_service - INFO - Product Morsi Necklace already exists in store local, adding variants
2025-07-09 16:24:11,445 - sync_service - INFO - API Call: {'service': 'shopify', 'endpoint': 'graphql_local', 'request': {'query': '\n        query GetProduct($id: ID!) {\n            product(id: $id) {\n                id\n                title\n                handle\n                description\n                variants(first: 50) {\n                    edges {\n                        node {\n                            id\n                            sku\n                            price\n                            inventoryItem {\n                                id\n                            }\n                            selectedOptions {\n                                name\n                                value\n                            }\n                        }\n                    }\n                }\n            }\n        }\n        ', 'variables': {'id': 'gid://shopify/Product/7510108733506'}}, 'response': None, 'status': None}
2025-07-09 16:24:21,471 - sync_service - ERROR - GraphQL query error for store local: 
2025-07-09 16:24:21,473 - sync_service - INFO - API Call: {'service': 'shopify', 'endpoint': 'graphql_local', 'request': {'query': '\n        query GetProductByHandle($handle: String!) {\n            productByHandle(handle: $handle) {\n                id\n                title\n                handle\n                description\n                variants(first: 50) {\n                    edges {\n                        node {\n                            id\n                            sku\n                            price\n                            inventoryItem {\n                                id\n                            }\n                            selectedOptions {\n                                name\n                                value\n                            }\n                        }\n                    }\n                }\n            }\n        }\n        ', 'variables': {'handle': None}}, 'response': None, 'status': None}
2025-07-09 16:24:21,857 - sync_service - ERROR - GraphQL query error for store local: {'message': 'Variable $handle of type String! was provided invalid value', 'locations': [{'line': 1, 'column': 26}], 'extensions': {'value': None, 'problems': [{'path': [], 'explanation': 'Expected value to not be null'}]}}
GraphQL Errors: [
  {
    "message": "Variable $handle of type String! was provided invalid value",
    "locations": [
      {
        "line": 1,
        "column": 26
      }
    ],
    "extensions": {
      "value": null,
      "problems": [
        {
          "path": [],
          "explanation": "Expected value to not be null"
        }
      ]
    }
  }
]
2025-07-09 16:24:22,025 - sync_service - ERROR - Failed to add API log to SAP: HTTP 400: {
   "error" : {
      "code" : -1,
      "message" : {
         "lang" : "en-us",
         "value" : "CServiceData::SetPropertyValueString failed; Value too long in property 'U_Value' of 'U_API_LOG'"
      }
   }
}

2025-07-09 16:24:22,126 - sync_service - ERROR - Failed to add API log to SAP: HTTP 400: {
   "error" : {
      "code" : -1,
      "message" : {
         "lang" : "en-us",
         "value" : "CServiceData::SetPropertyValueString failed; Value too long in property 'U_Action' of 'U_API_LOG'"
      }
   }
}

2025-07-09 16:24:22,126 - sync_service - INFO - API Call: {'service': 'shopify', 'endpoint': 'graphql_local', 'request': {'query': '\n        mutation productVariantCreate($input: ProductVariantInput!) {\n            productVariantCreate(input: $input) {\n                productVariant {\n                    id\n                    sku\n                    price\n                    inventoryItem {\n                        id\n                    }\n                    selectedOptions {\n                        name\n                        value\n                    }\n                }\n                userErrors {\n                    field\n                    message\n                }\n            }\n        }\n        ', 'variables': {'input': {'sku': 'FG-0000704', 'price': '2500.0', 'inventoryPolicy': 'DENY', 'inventoryManagement': 'SHOPIFY', 'weight': 0.0, 'weightUnit': 'KILOGRAMS', 'productId': 'gid://shopify/Product/7510108733506'}}}, 'response': None, 'status': None}
2025-07-09 16:24:22,575 - sync_service - INFO - API Call: {'service': 'shopify', 'endpoint': 'graphql_local', 'request': None, 'response': {'productVariantCreate': {'productVariant': None, 'userErrors': [{'field': None, 'message': "The variant 'Default Title' already exists."}]}}, 'status': 'success'}
2025-07-09 16:24:22,736 - sync_service - ERROR - Failed to add API log to SAP: HTTP 400: {
   "error" : {
      "code" : -1,
      "message" : {
         "lang" : "en-us",
         "value" : "CServiceData::SetPropertyValueString failed; Value too long in property 'U_Action' of 'U_API_LOG'"
      }
   }
}

2025-07-09 16:24:22,738 - sync_service - ERROR - Failed to add variant FG-0000704: The variant 'Default Title' already exists.
2025-07-09 16:24:22,911 - sync_service - INFO - API log added to SAP: sap - /U_SHOPIFY_MAPPING - success
2025-07-09 16:24:22,916 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'U_SHOPIFY_MAPPING', 'request': {'method': 'POST', 'url': 'https://10.0.0.100:50000/b1s/v1/U_SHOPIFY_MAPPING', 'data': {'Code': '7510108733506', 'Name': '7510108733506', 'U_Shopify_Type': 'product', 'U_SAP_Code': 'Morsi Necklace', 'U_Shopify_Store': 'local', 'U_SAP_Type': 'item'}, 'params': None}, 'response': None, 'status': None}
2025-07-09 16:24:23,709 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'U_SHOPIFY_MAPPING', 'request': None, 'response': {'status_code': 400, 'text': '{\n   "error" : {\n      "code" : -2035,\n      "message" : {\n         "lang" : "en-us",\n         "value" : "This entry already exists in the following tables (ODBC -2035)"\n      }\n   }\n}\n'}, 'status': 'failure'}
2025-07-09 16:24:23,857 - sync_service - INFO - API log added to SAP: sap - /U_SHOPIFY_MAPPING - failure
2025-07-09 16:24:24,369 - sync_service - INFO - Sync Event: {'sync_type': 'multi_store_new_items_sap_to_shopify', 'items_processed': 1, 'success_count': 0, 'error_count': 1, 'details': None}
2025-07-09 16:24:24,477 - sync_service - INFO - API log added to SAP: system - /sync/new_items_multi_store - success
2025-07-09 16:24:24,479 - sync_service - INFO - Multi-store new items sync completed: 1 processed, 0 successful, 1 errors
2025-07-09 16:25:48,091 - sync_service - INFO - Initialized Shopify client for store: Local Store (local)
2025-07-09 16:25:48,097 - sync_service - INFO - Starting multi-store new items sync from SAP to Shopify
2025-07-09 16:25:48,684 - sync_service - INFO - SAP logging client login successful
2025-07-09 16:25:49,226 - sync_service - INFO - API log added to SAP: system - /sync/new_items_multi_store - success
2025-07-09 16:25:49,227 - sync_service - INFO - Fetching new items for store: local
2025-07-09 16:25:49,229 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'login', 'request': {'company': 'JudeBenHalim_Test', 'user': 'manager'}, 'response': None, 'status': None}
2025-07-09 16:25:49,768 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'login', 'request': None, 'response': {'status': 'success'}, 'status': 'success'}
2025-07-09 16:25:49,772 - sync_service - INFO - SAP login successful
2025-07-09 16:25:49,777 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': "view.svc/MASHURA_New_ItemsB1SLQuery?$filter=Shopify_Store eq 'local'&$orderby=MainProduct", 'request': {'method': 'GET', 'url': "https://10.0.0.100:50000/b1s/v1/view.svc/MASHURA_New_ItemsB1SLQuery?$filter=Shopify_Store eq 'local'&$orderby=MainProduct", 'data': None, 'params': None}, 'response': None, 'status': None}
2025-07-09 16:25:50,322 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': "view.svc/MASHURA_New_ItemsB1SLQuery?$filter=Shopify_Store eq 'local'&$orderby=MainProduct", 'request': None, 'response': {'odata.metadata': 'https://10.0.0.100:50000/b1s/v1/view.svc/$metadata#MASHURA_New_ItemsB1SLQuery', 'value': [{'itemcode': 'FG-0000704', 'ItemName': 'Morsi-Green', 'MainProduct': 'Morsi Necklace', 'Color': 'Green', 'OnHand': 0.0, 'IsCommited': 0.0, 'Available': 0.0, 'Price': 2500.0, 'Status': 'existing', 'Shopify_ProductCode': '7510108733506', 'Shopify_Store': 'local', 'id__': 1}]}, 'status': 'success'}
2025-07-09 16:25:50,325 - sync_service - INFO - Product group: ('Morsi Necklace', 'local') has 1 items
2025-07-09 16:25:50,327 - sync_service - INFO - Grouped 1 items into 1 product groups for store local
2025-07-09 16:25:50,328 - sync_service - INFO - Processing product group: ('Morsi Necklace', 'local') with 1 items for store local
2025-07-09 16:25:50,329 - sync_service - INFO - Found existing Shopify product ID: 7510108733506 for Morsi Necklace
2025-07-09 16:25:50,330 - sync_service - INFO - Product Morsi Necklace already exists in store local, adding variants
2025-07-09 16:25:50,331 - sync_service - INFO - API Call: {'service': 'shopify', 'endpoint': 'graphql_local', 'request': {'query': '\n        query GetProduct($id: ID!) {\n            product(id: $id) {\n                id\n                title\n                handle\n                description\n                variants(first: 50) {\n                    edges {\n                        node {\n                            id\n                            sku\n                            price\n                            inventoryItem {\n                                id\n                            }\n                            selectedOptions {\n                                name\n                                value\n                            }\n                        }\n                    }\n                }\n            }\n        }\n        ', 'variables': {'id': 'gid://shopify/Product/7510108733506'}}, 'response': None, 'status': None}
2025-07-09 16:26:00,336 - sync_service - ERROR - GraphQL query error for store local: 
2025-07-09 16:26:00,339 - sync_service - INFO - API Call: {'service': 'shopify', 'endpoint': 'graphql_local', 'request': {'query': '\n        query GetProductByHandle($handle: String!) {\n            productByHandle(handle: $handle) {\n                id\n                title\n                handle\n                description\n                variants(first: 50) {\n                    edges {\n                        node {\n                            id\n                            sku\n                            price\n                            inventoryItem {\n                                id\n                            }\n                            selectedOptions {\n                                name\n                                value\n                            }\n                        }\n                    }\n                }\n            }\n        }\n        ', 'variables': {'handle': None}}, 'response': None, 'status': None}
2025-07-09 16:26:00,686 - sync_service - ERROR - GraphQL query error for store local: {'message': 'Variable $handle of type String! was provided invalid value', 'locations': [{'line': 1, 'column': 26}], 'extensions': {'value': None, 'problems': [{'path': [], 'explanation': 'Expected value to not be null'}]}}
GraphQL Errors: [
  {
    "message": "Variable $handle of type String! was provided invalid value",
    "locations": [
      {
        "line": 1,
        "column": 26
      }
    ],
    "extensions": {
      "value": null,
      "problems": [
        {
          "path": [],
          "explanation": "Expected value to not be null"
        }
      ]
    }
  }
]
2025-07-09 16:26:00,823 - sync_service - ERROR - Failed to add API log to SAP: HTTP 400: {
   "error" : {
      "code" : -1,
      "message" : {
         "lang" : "en-us",
         "value" : "CServiceData::SetPropertyValueString failed; Value too long in property 'U_Value' of 'U_API_LOG'"
      }
   }
}

2025-07-09 16:26:00,989 - sync_service - ERROR - Failed to add API log to SAP: HTTP 400: {
   "error" : {
      "code" : -1,
      "message" : {
         "lang" : "en-us",
         "value" : "CServiceData::SetPropertyValueString failed; Value too long in property 'U_Action' of 'U_API_LOG'"
      }
   }
}

2025-07-09 16:26:00,992 - sync_service - INFO - API Call: {'service': 'shopify', 'endpoint': 'graphql_local', 'request': {'query': '\n        mutation productVariantCreate($input: ProductVariantInput!) {\n            productVariantCreate(input: $input) {\n                productVariant {\n                    id\n                    sku\n                    price\n                    inventoryItem {\n                        id\n                    }\n                    selectedOptions {\n                        name\n                        value\n                    }\n                }\n                userErrors {\n                    field\n                    message\n                }\n            }\n        }\n        ', 'variables': {'input': {'sku': 'FG-0000704', 'price': '2500.0', 'inventoryPolicy': 'DENY', 'inventoryManagement': 'SHOPIFY', 'weight': 0.0, 'weightUnit': 'KILOGRAMS', 'productId': 'gid://shopify/Product/7510108733506'}}}, 'response': None, 'status': None}
2025-07-09 16:26:01,899 - sync_service - INFO - API Call: {'service': 'shopify', 'endpoint': 'graphql_local', 'request': None, 'response': {'productVariantCreate': {'productVariant': {'id': 'gid://shopify/ProductVariant/42295150805058', 'sku': 'FG-0000704', 'price': '2500.00', 'inventoryItem': {'id': 'gid://shopify/InventoryItem/44396281561154'}, 'selectedOptions': [{'name': 'Color', 'value': 'Default Title'}]}, 'userErrors': []}}, 'status': 'success'}
2025-07-09 16:26:01,900 - sync_service - INFO - API Call: {'service': 'shopify', 'endpoint': 'graphql_local', 'request': {'query': '\n        mutation productVariantUpdate($input: ProductVariantInput!) {\n            productVariantUpdate(input: $input) {\n                productVariant {\n                    id\n                    sku\n                    title\n                    selectedOptions {\n                        name\n                        value\n                    }\n                }\n                userErrors {\n                    field\n                    message\n                }\n            }\n        }\n        ', 'variables': {'input': {'title': 'Green', 'id': 'gid://shopify/ProductVariant/42295150805058'}}}, 'response': None, 'status': None}
2025-07-09 16:26:02,480 - sync_service - INFO - API Call: {'service': 'shopify', 'endpoint': 'graphql_local', 'request': None, 'response': {'productVariantUpdate': {'productVariant': {'id': 'gid://shopify/ProductVariant/42295150805058', 'sku': 'FG-0000704', 'title': 'Default Title', 'selectedOptions': [{'name': 'Color', 'value': 'Default Title'}]}, 'userErrors': []}}, 'status': 'success'}
2025-07-09 16:26:02,482 - sync_service - INFO - Updated variant FG-0000704 title to 'Green'
2025-07-09 16:26:02,651 - sync_service - ERROR - Failed to add API log to SAP: HTTP 400: {
   "error" : {
      "code" : -1,
      "message" : {
         "lang" : "en-us",
         "value" : "CServiceData::SetPropertyValueString failed; Value too long in property 'U_Action' of 'U_API_LOG'"
      }
   }
}

2025-07-09 16:26:02,653 - sync_service - INFO - API Call: {'service': 'shopify', 'endpoint': 'graphql_local', 'request': {'query': '\n        mutation inventoryAdjustQuantity($input: InventoryAdjustQuantityInput!) {\n            inventoryAdjustQuantity(input: $input) {\n                inventoryLevel {\n                    available\n                }\n                userErrors {\n                    field\n                    message\n                }\n            }\n        }\n        ', 'variables': {'input': {'inventoryItemId': 'gid://shopify/InventoryItem/44396281561154', 'availableDelta': 10}}}, 'response': None, 'status': None}
2025-07-09 16:26:03,133 - sync_service - ERROR - GraphQL query error for store local: {'message': "Field 'inventoryAdjustQuantity' doesn't exist on type 'Mutation'", 'locations': [{'line': 2, 'column': 3}], 'path': ['mutation inventoryAdjustQuantity', 'inventoryAdjustQuantity'], 'extensions': {'code': 'undefinedField', 'typeName': 'Mutation', 'fieldName': 'inventoryAdjustQuantity'}}
GraphQL Errors: [
  {
    "message": "Field 'inventoryAdjustQuantity' doesn't exist on type 'Mutation'",
    "locations": [
      {
        "line": 2,
        "column": 3
      }
    ],
    "path": [
      "mutation inventoryAdjustQuantity",
      "inventoryAdjustQuantity"
    ],
    "extensions": {
      "code": "undefinedField",
      "typeName": "Mutation",
      "fieldName": "inventoryAdjustQuantity"
    }
  },
  {
    "message": "Variable $input is declared by inventoryAdjustQuantity but not used",
    "locations": [
      {
        "line": 1,
        "column": 1
      }
    ],
    "path": [
      "mutation inventoryAdjustQuantity"
    ],
    "extensions": {
      "code": "variableNotUsed",
      "variableName": "input"
    }
  }
]
2025-07-09 16:26:03,260 - sync_service - ERROR - Failed to add API log to SAP: HTTP 400: {
   "error" : {
      "code" : -1,
      "message" : {
         "lang" : "en-us",
         "value" : "CServiceData::SetPropertyValueString failed; Value too long in property 'U_Value' of 'U_API_LOG'"
      }
   }
}

2025-07-09 16:26:03,261 - sync_service - WARNING - Failed to set inventory for variant FG-0000704: GraphQL query error for store local: {'message': "Field 'inventoryAdjustQuantity' doesn't exist on type 'Mutation'", 'locations': [{'line': 2, 'column': 3}], 'path': ['mutation inventoryAdjustQuantity', 'inventoryAdjustQuantity'], 'extensions': {'code': 'undefinedField', 'typeName': 'Mutation', 'fieldName': 'inventoryAdjustQuantity'}}
GraphQL Errors: [
  {
    "message": "Field 'inventoryAdjustQuantity' doesn't exist on type 'Mutation'",
    "locations": [
      {
        "line": 2,
        "column": 3
      }
    ],
    "path": [
      "mutation inventoryAdjustQuantity",
      "inventoryAdjustQuantity"
    ],
    "extensions": {
      "code": "undefinedField",
      "typeName": "Mutation",
      "fieldName": "inventoryAdjustQuantity"
    }
  },
  {
    "message": "Variable $input is declared by inventoryAdjustQuantity but not used",
    "locations": [
      {
        "line": 1,
        "column": 1
      }
    ],
    "path": [
      "mutation inventoryAdjustQuantity"
    ],
    "extensions": {
      "code": "variableNotUsed",
      "variableName": "input"
    }
  }
]
2025-07-09 16:26:03,262 - sync_service - INFO - Successfully added variant FG-0000704 to existing product
2025-07-09 16:26:03,718 - sync_service - INFO - API log added to SAP: sap - /U_SHOPIFY_MAPPING - success
2025-07-09 16:26:03,719 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'U_SHOPIFY_MAPPING', 'request': {'method': 'POST', 'url': 'https://10.0.0.100:50000/b1s/v1/U_SHOPIFY_MAPPING', 'data': {'Code': '7510108733506', 'Name': '7510108733506', 'U_Shopify_Type': 'product', 'U_SAP_Code': 'Morsi Necklace', 'U_Shopify_Store': 'local', 'U_SAP_Type': 'item'}, 'params': None}, 'response': None, 'status': None}
2025-07-09 16:26:03,851 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'U_SHOPIFY_MAPPING', 'request': None, 'response': {'status_code': 400, 'text': '{\n   "error" : {\n      "code" : -2035,\n      "message" : {\n         "lang" : "en-us",\n         "value" : "This entry already exists in the following tables (ODBC -2035)"\n      }\n   }\n}\n'}, 'status': 'failure'}
2025-07-09 16:26:03,960 - sync_service - INFO - API log added to SAP: sap - /U_SHOPIFY_MAPPING - failure
2025-07-09 16:26:04,088 - sync_service - INFO - API log added to SAP: sap - /U_SHOPIFY_MAPPING - success
2025-07-09 16:26:04,110 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'U_SHOPIFY_MAPPING', 'request': {'method': 'POST', 'url': 'https://10.0.0.100:50000/b1s/v1/U_SHOPIFY_MAPPING', 'data': {'Code': '42295150805058', 'Name': '42295150805058', 'U_Shopify_Type': 'variant', 'U_SAP_Code': 'FG-0000704', 'U_Shopify_Store': 'local', 'U_SAP_Type': 'item'}, 'params': None}, 'response': None, 'status': None}
2025-07-09 16:26:04,228 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'U_SHOPIFY_MAPPING', 'request': None, 'response': {'odata.metadata': 'https://10.0.0.100:50000/b1s/v1/$metadata#U_SHOPIFY_MAPPING/@Element', 'Code': '42295150805058', 'Name': '42295150805058', 'U_Shopify_Type': 'variant', 'U_SAP_Code': 'FG-0000704', 'U_SAP_Type': 'item', 'U_Shopify_Store': 'local'}, 'status': 'success'}
2025-07-09 16:26:04,348 - sync_service - INFO - API log added to SAP: sap - /U_SHOPIFY_MAPPING - success
2025-07-09 16:26:04,459 - sync_service - ERROR - Failed to add API log to SAP: HTTP 400: {
   "error" : {
      "code" : -1,
      "message" : {
         "lang" : "en-us",
         "value" : "CServiceData::SetPropertyValueString failed; Value too long in property 'U_Action' of 'U_API_LOG'"
      }
   }
}

2025-07-09 16:26:04,461 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'U_SHOPIFY_MAPPING', 'request': {'method': 'POST', 'url': 'https://10.0.0.100:50000/b1s/v1/U_SHOPIFY_MAPPING', 'data': {'Code': '44396281561154', 'Name': '44396281561154', 'U_Shopify_Type': 'variant_inventory', 'U_SAP_Code': 'FG-0000704', 'U_Shopify_Store': 'local', 'U_SAP_Type': 'item'}, 'params': None}, 'response': None, 'status': None}
2025-07-09 16:26:04,579 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'U_SHOPIFY_MAPPING', 'request': None, 'response': {'odata.metadata': 'https://10.0.0.100:50000/b1s/v1/$metadata#U_SHOPIFY_MAPPING/@Element', 'Code': '44396281561154', 'Name': '44396281561154', 'U_Shopify_Type': 'variant_inventory', 'U_SAP_Code': 'FG-0000704', 'U_SAP_Type': 'item', 'U_Shopify_Store': 'local'}, 'status': 'success'}
2025-07-09 16:26:04,692 - sync_service - ERROR - Failed to add API log to SAP: HTTP 400: {
   "error" : {
      "code" : -1,
      "message" : {
         "lang" : "en-us",
         "value" : "CServiceData::SetPropertyValueString failed; Value too long in property 'U_Action' of 'U_API_LOG'"
      }
   }
}

2025-07-09 16:26:05,205 - sync_service - INFO - Sync Event: {'sync_type': 'multi_store_new_items_sap_to_shopify', 'items_processed': 1, 'success_count': 1, 'error_count': 0, 'details': None}
2025-07-09 16:26:05,566 - sync_service - INFO - API log added to SAP: system - /sync/new_items_multi_store - success
2025-07-09 16:26:05,567 - sync_service - INFO - Multi-store new items sync completed: 1 processed, 1 successful, 0 errors
2025-07-09 16:32:16,807 - sync_service - INFO - Initialized Shopify client for store: Local Store (local)
2025-07-09 16:32:16,807 - sync_service - INFO - Starting multi-store new items sync from SAP to Shopify
2025-07-09 16:32:37,865 - sync_service - ERROR - SAP logging client login error: All connection attempts failed
2025-07-09 16:32:37,867 - sync_service - ERROR - Failed to add API log to SAP: Failed to login to SAP
2025-07-09 16:32:37,872 - sync_service - INFO - Fetching new items for store: local
2025-07-09 16:32:37,880 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'login', 'request': {'company': 'JudeBenHalim_Test', 'user': 'manager'}, 'response': None, 'status': None}
2025-07-09 16:32:58,920 - sync_service - ERROR - SAP login error: All connection attempts failed
2025-07-09 16:32:58,930 - sync_service - ERROR - Failed to get new items from SAP for store local: Failed to login to SAP
2025-07-09 16:32:58,931 - sync_service - INFO - Sync Event: {'sync_type': 'multi_store_new_items_sap_to_shopify', 'items_processed': 0, 'success_count': 0, 'error_count': 0, 'details': None}
2025-07-09 16:36:32,668 - sync_service - INFO - Initialized Shopify client for store: Local Store (local)
2025-07-09 16:36:32,672 - sync_service - INFO - Starting multi-store new items sync from SAP to Shopify
2025-07-09 16:36:33,319 - sync_service - INFO - SAP logging client login successful
2025-07-09 16:36:33,830 - sync_service - INFO - API log added to SAP: system - /sync/new_items_multi_store - success
2025-07-09 16:36:33,831 - sync_service - INFO - Fetching new items for store: local
2025-07-09 16:36:33,832 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'login', 'request': {'company': 'JudeBenHalim_Test', 'user': 'manager'}, 'response': None, 'status': None}
2025-07-09 16:36:34,319 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'login', 'request': None, 'response': {'status': 'success'}, 'status': 'success'}
2025-07-09 16:36:34,320 - sync_service - INFO - SAP login successful
2025-07-09 16:36:34,321 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': "view.svc/MASHURA_New_ItemsB1SLQuery?$filter=Shopify_Store eq 'local'&$orderby=MainProduct", 'request': {'method': 'GET', 'url': "https://10.0.0.100:50000/b1s/v1/view.svc/MASHURA_New_ItemsB1SLQuery?$filter=Shopify_Store eq 'local'&$orderby=MainProduct", 'data': None, 'params': None}, 'response': None, 'status': None}
2025-07-09 16:36:34,805 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': "view.svc/MASHURA_New_ItemsB1SLQuery?$filter=Shopify_Store eq 'local'&$orderby=MainProduct", 'request': None, 'response': {'odata.metadata': 'https://10.0.0.100:50000/b1s/v1/view.svc/$metadata#MASHURA_New_ItemsB1SLQuery', 'value': [{'itemcode': 'FG-0000704', 'ItemName': 'Morsi-Green', 'MainProduct': 'Morsi Necklace', 'Color': 'Green', 'OnHand': 0.0, 'IsCommited': 0.0, 'Available': 0.0, 'Price': 2500.0, 'Status': 'existing', 'Shopify_ProductCode': '7510108733506', 'Shopify_Store': 'local', 'id__': 1}]}, 'status': 'success'}
2025-07-09 16:36:34,809 - sync_service - INFO - Product group: ('Morsi Necklace', 'local') has 1 items
2025-07-09 16:36:34,811 - sync_service - INFO - Grouped 1 items into 1 product groups for store local
2025-07-09 16:36:34,811 - sync_service - INFO - Processing product group: ('Morsi Necklace', 'local') with 1 items for store local
2025-07-09 16:36:34,812 - sync_service - INFO - Found existing Shopify product ID: 7510108733506 for Morsi Necklace
2025-07-09 16:36:34,814 - sync_service - INFO - Product Morsi Necklace already exists in store local, adding variants
2025-07-09 16:36:34,814 - sync_service - INFO - API Call: {'service': 'shopify', 'endpoint': 'graphql_local', 'request': {'query': '\n        query GetProduct($id: ID!) {\n            product(id: $id) {\n                id\n                title\n                handle\n                description\n                variants(first: 50) {\n                    edges {\n                        node {\n                            id\n                            sku\n                            price\n                            inventoryItem {\n                                id\n                            }\n                            selectedOptions {\n                                name\n                                value\n                            }\n                        }\n                    }\n                }\n            }\n        }\n        ', 'variables': {'id': 'gid://shopify/Product/7510108733506'}}, 'response': None, 'status': None}
2025-07-09 16:36:35,276 - sync_service - INFO - API Call: {'service': 'shopify', 'endpoint': 'graphql_local', 'request': None, 'response': {'product': {'id': 'gid://shopify/Product/7510108733506', 'title': 'Morsi Necklace', 'handle': 'morsi-necklace-1', 'description': '', 'variants': {'edges': [{'node': {'id': 'gid://shopify/ProductVariant/42293507063874', 'sku': 'FG-0000701', 'price': '2500.00', 'inventoryItem': {'id': 'gid://shopify/InventoryItem/44394637557826'}, 'selectedOptions': [{'name': 'Color', 'value': 'Black Gold'}]}}, {'node': {'id': 'gid://shopify/ProductVariant/42293507096642', 'sku': 'FG-0000702', 'price': '2500.00', 'inventoryItem': {'id': 'gid://shopify/InventoryItem/44394637590594'}, 'selectedOptions': [{'name': 'Color', 'value': 'Rose Gold'}]}}, {'node': {'id': 'gid://shopify/ProductVariant/42293507129410', 'sku': 'FG-0000703', 'price': '2500.00', 'inventoryItem': {'id': 'gid://shopify/InventoryItem/44394637623362'}, 'selectedOptions': [{'name': 'Color', 'value': 'White Gold'}]}}]}}}, 'status': 'success'}
2025-07-09 16:36:35,278 - sync_service - INFO - API Call: {'service': 'shopify', 'endpoint': 'graphql_local', 'request': {'query': '\n        query GetProductByHandle($handle: String!) {\n            productByHandle(handle: $handle) {\n                id\n                title\n                handle\n                description\n                variants(first: 50) {\n                    edges {\n                        node {\n                            id\n                            sku\n                            price\n                            inventoryItem {\n                                id\n                            }\n                            selectedOptions {\n                                name\n                                value\n                            }\n                        }\n                    }\n                }\n            }\n        }\n        ', 'variables': {'handle': None}}, 'response': None, 'status': None}
2025-07-09 16:36:35,663 - sync_service - ERROR - GraphQL query error for store local: {'message': 'Variable $handle of type String! was provided invalid value', 'locations': [{'line': 1, 'column': 26}], 'extensions': {'value': None, 'problems': [{'path': [], 'explanation': 'Expected value to not be null'}]}}
GraphQL Errors: [
  {
    "message": "Variable $handle of type String! was provided invalid value",
    "locations": [
      {
        "line": 1,
        "column": 26
      }
    ],
    "extensions": {
      "value": null,
      "problems": [
        {
          "path": [],
          "explanation": "Expected value to not be null"
        }
      ]
    }
  }
]
2025-07-09 16:36:35,769 - sync_service - ERROR - Failed to add API log to SAP: HTTP 400: {
   "error" : {
      "code" : -1,
      "message" : {
         "lang" : "en-us",
         "value" : "CServiceData::SetPropertyValueString failed; Value too long in property 'U_Value' of 'U_API_LOG'"
      }
   }
}

2025-07-09 16:36:35,852 - sync_service - ERROR - Failed to add API log to SAP: HTTP 400: {
   "error" : {
      "code" : -1,
      "message" : {
         "lang" : "en-us",
         "value" : "CServiceData::SetPropertyValueString failed; Value too long in property 'U_Action' of 'U_API_LOG'"
      }
   }
}

2025-07-09 16:36:35,853 - sync_service - INFO - API Call: {'service': 'shopify', 'endpoint': 'graphql_local', 'request': {'query': '\n        mutation productVariantCreate($input: ProductVariantInput!) {\n            productVariantCreate(input: $input) {\n                productVariant {\n                    id\n                    sku\n                    price\n                    inventoryItem {\n                        id\n                    }\n                    selectedOptions {\n                        name\n                        value\n                    }\n                }\n                userErrors {\n                    field\n                    message\n                }\n            }\n        }\n        ', 'variables': {'input': {'sku': 'FG-0000704', 'price': '2500.0', 'inventoryPolicy': 'DENY', 'inventoryManagement': 'SHOPIFY', 'weight': 0.0, 'weightUnit': 'KILOGRAMS', 'productId': 'gid://shopify/Product/7510108733506'}}}, 'response': None, 'status': None}
2025-07-09 16:36:36,504 - sync_service - INFO - API Call: {'service': 'shopify', 'endpoint': 'graphql_local', 'request': None, 'response': {'productVariantCreate': {'productVariant': {'id': 'gid://shopify/ProductVariant/42295166599234', 'sku': 'FG-0000704', 'price': '2500.00', 'inventoryItem': {'id': 'gid://shopify/InventoryItem/44396297355330'}, 'selectedOptions': [{'name': 'Color', 'value': 'Default Title'}]}, 'userErrors': []}}, 'status': 'success'}
2025-07-09 16:36:36,505 - sync_service - INFO - API Call: {'service': 'shopify', 'endpoint': 'graphql_local', 'request': {'query': '\n        mutation productVariantUpdate($input: ProductVariantInput!) {\n            productVariantUpdate(input: $input) {\n                productVariant {\n                    id\n                    sku\n                    title\n                    selectedOptions {\n                        name\n                        value\n                    }\n                }\n                userErrors {\n                    field\n                    message\n                }\n            }\n        }\n        ', 'variables': {'input': {'title': 'Green', 'selectedOptions': [{'name': 'Color', 'value': 'Green'}], 'id': 'gid://shopify/ProductVariant/42295166599234'}}}, 'response': None, 'status': None}
2025-07-09 16:36:46,501 - sync_service - ERROR - GraphQL query error for store local: 
2025-07-09 16:36:46,503 - sync_service - WARNING - Failed to update variant FG-0000704 title: GraphQL query error for store local: 
2025-07-09 16:36:46,753 - sync_service - ERROR - Failed to add API log to SAP: HTTP 400: {
   "error" : {
      "code" : -1,
      "message" : {
         "lang" : "en-us",
         "value" : "CServiceData::SetPropertyValueString failed; Value too long in property 'U_Action' of 'U_API_LOG'"
      }
   }
}

2025-07-09 16:36:46,754 - sync_service - INFO - API Call: {'service': 'shopify', 'endpoint': 'graphql_local', 'request': {'query': '\n        mutation inventoryAdjustQuantity($input: InventoryAdjustQuantityInput!) {\n            inventoryAdjustQuantity(input: $input) {\n                inventoryLevel {\n                    available\n                }\n                userErrors {\n                    field\n                    message\n                }\n            }\n        }\n        ', 'variables': {'input': {'inventoryItemId': 'gid://shopify/InventoryItem/44396297355330', 'availableDelta': 10}}}, 'response': None, 'status': None}
2025-07-09 16:36:49,230 - sync_service - ERROR - GraphQL query error for store local: {'message': "Field 'inventoryAdjustQuantity' doesn't exist on type 'Mutation'", 'locations': [{'line': 2, 'column': 3}], 'path': ['mutation inventoryAdjustQuantity', 'inventoryAdjustQuantity'], 'extensions': {'code': 'undefinedField', 'typeName': 'Mutation', 'fieldName': 'inventoryAdjustQuantity'}}
GraphQL Errors: [
  {
    "message": "Field 'inventoryAdjustQuantity' doesn't exist on type 'Mutation'",
    "locations": [
      {
        "line": 2,
        "column": 3
      }
    ],
    "path": [
      "mutation inventoryAdjustQuantity",
      "inventoryAdjustQuantity"
    ],
    "extensions": {
      "code": "undefinedField",
      "typeName": "Mutation",
      "fieldName": "inventoryAdjustQuantity"
    }
  },
  {
    "message": "Variable $input is declared by inventoryAdjustQuantity but not used",
    "locations": [
      {
        "line": 1,
        "column": 1
      }
    ],
    "path": [
      "mutation inventoryAdjustQuantity"
    ],
    "extensions": {
      "code": "variableNotUsed",
      "variableName": "input"
    }
  }
]
2025-07-09 16:36:49,335 - sync_service - ERROR - Failed to add API log to SAP: HTTP 400: {
   "error" : {
      "code" : -1,
      "message" : {
         "lang" : "en-us",
         "value" : "CServiceData::SetPropertyValueString failed; Value too long in property 'U_Value' of 'U_API_LOG'"
      }
   }
}

2025-07-09 16:36:49,336 - sync_service - WARNING - Failed to set inventory for variant FG-0000704: GraphQL query error for store local: {'message': "Field 'inventoryAdjustQuantity' doesn't exist on type 'Mutation'", 'locations': [{'line': 2, 'column': 3}], 'path': ['mutation inventoryAdjustQuantity', 'inventoryAdjustQuantity'], 'extensions': {'code': 'undefinedField', 'typeName': 'Mutation', 'fieldName': 'inventoryAdjustQuantity'}}
GraphQL Errors: [
  {
    "message": "Field 'inventoryAdjustQuantity' doesn't exist on type 'Mutation'",
    "locations": [
      {
        "line": 2,
        "column": 3
      }
    ],
    "path": [
      "mutation inventoryAdjustQuantity",
      "inventoryAdjustQuantity"
    ],
    "extensions": {
      "code": "undefinedField",
      "typeName": "Mutation",
      "fieldName": "inventoryAdjustQuantity"
    }
  },
  {
    "message": "Variable $input is declared by inventoryAdjustQuantity but not used",
    "locations": [
      {
        "line": 1,
        "column": 1
      }
    ],
    "path": [
      "mutation inventoryAdjustQuantity"
    ],
    "extensions": {
      "code": "variableNotUsed",
      "variableName": "input"
    }
  }
]
2025-07-09 16:36:49,337 - sync_service - INFO - Successfully added variant FG-0000704 to existing product
2025-07-09 16:36:49,465 - sync_service - INFO - API log added to SAP: sap - /U_SHOPIFY_MAPPING - success
2025-07-09 16:36:49,467 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'U_SHOPIFY_MAPPING', 'request': {'method': 'POST', 'url': 'https://10.0.0.100:50000/b1s/v1/U_SHOPIFY_MAPPING', 'data': {'Code': '7510108733506', 'Name': '7510108733506', 'U_Shopify_Type': 'product', 'U_SAP_Code': 'Morsi Necklace', 'U_Shopify_Store': 'local', 'U_SAP_Type': 'item'}, 'params': None}, 'response': None, 'status': None}
2025-07-09 16:36:49,618 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'U_SHOPIFY_MAPPING', 'request': None, 'response': {'status_code': 400, 'text': '{\n   "error" : {\n      "code" : -2035,\n      "message" : {\n         "lang" : "en-us",\n         "value" : "This entry already exists in the following tables (ODBC -2035)"\n      }\n   }\n}\n'}, 'status': 'failure'}
2025-07-09 16:36:49,763 - sync_service - INFO - API log added to SAP: sap - /U_SHOPIFY_MAPPING - failure
2025-07-09 16:36:49,915 - sync_service - INFO - API log added to SAP: sap - /U_SHOPIFY_MAPPING - success
2025-07-09 16:36:49,916 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'U_SHOPIFY_MAPPING', 'request': {'method': 'POST', 'url': 'https://10.0.0.100:50000/b1s/v1/U_SHOPIFY_MAPPING', 'data': {'Code': '42295166599234', 'Name': '42295166599234', 'U_Shopify_Type': 'variant', 'U_SAP_Code': 'FG-0000704', 'U_Shopify_Store': 'local', 'U_SAP_Type': 'item'}, 'params': None}, 'response': None, 'status': None}
2025-07-09 16:36:50,076 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'U_SHOPIFY_MAPPING', 'request': None, 'response': {'odata.metadata': 'https://10.0.0.100:50000/b1s/v1/$metadata#U_SHOPIFY_MAPPING/@Element', 'Code': '42295166599234', 'Name': '42295166599234', 'U_Shopify_Type': 'variant', 'U_SAP_Code': 'FG-0000704', 'U_SAP_Type': 'item', 'U_Shopify_Store': 'local'}, 'status': 'success'}
2025-07-09 16:36:50,238 - sync_service - INFO - API log added to SAP: sap - /U_SHOPIFY_MAPPING - success
2025-07-09 16:36:50,383 - sync_service - ERROR - Failed to add API log to SAP: HTTP 400: {
   "error" : {
      "code" : -1,
      "message" : {
         "lang" : "en-us",
         "value" : "CServiceData::SetPropertyValueString failed; Value too long in property 'U_Action' of 'U_API_LOG'"
      }
   }
}

2025-07-09 16:36:50,385 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'U_SHOPIFY_MAPPING', 'request': {'method': 'POST', 'url': 'https://10.0.0.100:50000/b1s/v1/U_SHOPIFY_MAPPING', 'data': {'Code': '44396297355330', 'Name': '44396297355330', 'U_Shopify_Type': 'variant_inventory', 'U_SAP_Code': 'FG-0000704', 'U_Shopify_Store': 'local', 'U_SAP_Type': 'item'}, 'params': None}, 'response': None, 'status': None}
2025-07-09 16:36:50,512 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'U_SHOPIFY_MAPPING', 'request': None, 'response': {'odata.metadata': 'https://10.0.0.100:50000/b1s/v1/$metadata#U_SHOPIFY_MAPPING/@Element', 'Code': '44396297355330', 'Name': '44396297355330', 'U_Shopify_Type': 'variant_inventory', 'U_SAP_Code': 'FG-0000704', 'U_SAP_Type': 'item', 'U_Shopify_Store': 'local'}, 'status': 'success'}
2025-07-09 16:36:50,639 - sync_service - ERROR - Failed to add API log to SAP: HTTP 400: {
   "error" : {
      "code" : -1,
      "message" : {
         "lang" : "en-us",
         "value" : "CServiceData::SetPropertyValueString failed; Value too long in property 'U_Action' of 'U_API_LOG'"
      }
   }
}

2025-07-09 16:36:51,149 - sync_service - INFO - Sync Event: {'sync_type': 'multi_store_new_items_sap_to_shopify', 'items_processed': 1, 'success_count': 1, 'error_count': 0, 'details': None}
2025-07-09 16:36:51,276 - sync_service - INFO - API log added to SAP: system - /sync/new_items_multi_store - success
2025-07-09 16:36:51,277 - sync_service - INFO - Multi-store new items sync completed: 1 processed, 1 successful, 0 errors
2025-07-09 16:37:54,636 - sync_service - INFO - Initialized Shopify client for store: Local Store (local)
2025-07-09 16:37:54,645 - sync_service - INFO - Starting multi-store new items sync from SAP to Shopify
2025-07-09 16:37:55,273 - sync_service - INFO - SAP logging client login successful
2025-07-09 16:37:55,826 - sync_service - INFO - API log added to SAP: system - /sync/new_items_multi_store - success
2025-07-09 16:37:55,828 - sync_service - INFO - Fetching new items for store: local
2025-07-09 16:37:55,829 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'login', 'request': {'company': 'JudeBenHalim_Test', 'user': 'manager'}, 'response': None, 'status': None}
2025-07-09 16:37:56,682 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'login', 'request': None, 'response': {'status': 'success'}, 'status': 'success'}
2025-07-09 16:37:56,684 - sync_service - INFO - SAP login successful
2025-07-09 16:37:56,686 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': "view.svc/MASHURA_New_ItemsB1SLQuery?$filter=Shopify_Store eq 'local'&$orderby=MainProduct", 'request': {'method': 'GET', 'url': "https://10.0.0.100:50000/b1s/v1/view.svc/MASHURA_New_ItemsB1SLQuery?$filter=Shopify_Store eq 'local'&$orderby=MainProduct", 'data': None, 'params': None}, 'response': None, 'status': None}
2025-07-09 16:37:57,337 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': "view.svc/MASHURA_New_ItemsB1SLQuery?$filter=Shopify_Store eq 'local'&$orderby=MainProduct", 'request': None, 'response': {'odata.metadata': 'https://10.0.0.100:50000/b1s/v1/view.svc/$metadata#MASHURA_New_ItemsB1SLQuery', 'value': []}, 'status': 'success'}
2025-07-09 16:37:57,338 - sync_service - INFO - No new items found in SAP for store local
2025-07-09 16:37:57,341 - sync_service - INFO - Sync Event: {'sync_type': 'multi_store_new_items_sap_to_shopify', 'items_processed': 0, 'success_count': 0, 'error_count': 0, 'details': None}
2025-07-09 16:37:57,697 - sync_service - INFO - API log added to SAP: system - /sync/new_items_multi_store - success
2025-07-09 16:37:57,698 - sync_service - INFO - Multi-store new items sync completed: 0 processed, 0 successful, 0 errors
2025-07-09 16:39:04,386 - sync_service - INFO - Initialized Shopify client for store: Local Store (local)
2025-07-09 16:39:04,388 - sync_service - INFO - Updating variant gid://shopify/ProductVariant/42295166599234 with title 'Green'
2025-07-09 16:39:04,389 - sync_service - INFO - API Call: {'service': 'shopify', 'endpoint': 'graphql_local', 'request': {'query': '\n        mutation productVariantUpdate($input: ProductVariantInput!) {\n            productVariantUpdate(input: $input) {\n                productVariant {\n                    id\n                    sku\n                    title\n                    selectedOptions {\n                        name\n                        value\n                    }\n                }\n                userErrors {\n                    field\n                    message\n                }\n            }\n        }\n        ', 'variables': {'input': {'title': 'Green', 'id': 'gid://shopify/ProductVariant/42295166599234'}}}, 'response': None, 'status': None}
2025-07-09 16:39:14,418 - sync_service - ERROR - GraphQL query error for store local: 
2025-07-09 16:39:14,420 - sync_service - ERROR - ❌ Failed to update variant: GraphQL query error for store local: 
2025-07-09 16:39:47,107 - sync_service - INFO - Initialized Shopify client for store: Local Store (local)
2025-07-09 16:39:47,266 - sync_service - INFO - Checking variants for product gid://shopify/Product/7510108733506
2025-07-09 16:39:47,527 - sync_service - INFO - API Call: {'service': 'shopify', 'endpoint': 'graphql_local', 'request': {'query': '\n        query GetProduct($id: ID!) {\n            product(id: $id) {\n                id\n                title\n                handle\n                description\n                variants(first: 50) {\n                    edges {\n                        node {\n                            id\n                            sku\n                            price\n                            inventoryItem {\n                                id\n                            }\n                            selectedOptions {\n                                name\n                                value\n                            }\n                        }\n                    }\n                }\n            }\n        }\n        ', 'variables': {'id': 'gid://shopify/Product/7510108733506'}}, 'response': None, 'status': None}
2025-07-09 16:39:57,646 - sync_service - ERROR - GraphQL query error for store local: 
2025-07-09 16:39:57,648 - sync_service - ERROR - ❌ Failed to get product: GraphQL query error for store local: 
2025-07-09 16:41:03,031 - sync_service - INFO - Initialized Shopify client for store: Local Store (local)
2025-07-09 16:41:03,037 - sync_service - INFO - Testing Shopify connection...
2025-07-09 16:41:03,037 - sync_service - INFO - API Call: {'service': 'shopify', 'endpoint': 'graphql_local', 'request': {'query': '\n        query {\n            locations(first: 10) {\n                edges {\n                    node {\n                        id\n                        name\n                        address {\n                            address1\n                            city\n                            country\n                        }\n                        isActive\n                    }\n                }\n            }\n        }\n        ', 'variables': None}, 'response': None, 'status': None}
2025-07-09 16:41:13,064 - sync_service - ERROR - GraphQL query error for store local: 
2025-07-09 16:41:13,067 - sync_service - ERROR - ❌ Shopify connection failed: GraphQL query error for store local: 
2025-07-09 16:41:57,538 - sync_service - INFO - Testing REST connection to https://eg-judebenhalim.myshopify.com/admin/api/2024-01/products.json
2025-07-09 16:41:59,132 - sync_service - INFO - ✅ REST connection successful
2025-07-09 16:41:59,134 - sync_service - INFO - Found 50 products
2025-07-09 16:42:16,269 - sync_service - INFO - Searching for variant with SKU: FG-0000704
2025-07-09 16:42:27,912 - sync_service - INFO - Found variant: ID=42003146211394, Current title=Default Title
2025-07-09 16:42:27,914 - sync_service - INFO - Updating variant 42003146211394 with title 'Green'
2025-07-09 16:42:28,212 - sync_service - INFO - ✅ Successfully updated variant title to 'Green'
2025-07-09 16:42:28,213 - sync_service - INFO - Updated variant: {'variant': {'id': 42003146211394, 'product_id': 7442022170690, 'title': 'Default Title', 'price': '4800.00', 'position': 1, 'inventory_policy': 'deny', 'compare_at_price': None, 'option1': 'Default Title', 'option2': None, 'option3': None, 'created_at': '2025-02-21T20:03:26+02:00', 'updated_at': '2025-07-09T10:14:21+03:00', 'taxable': False, 'barcode': None, 'fulfillment_service': 'manual', 'grams': 0, 'inventory_management': 'shopify', 'requires_shipping': True, 'sku': 'FG-0000075', 'weight': 0.0, 'weight_unit': 'g', 'inventory_item_id': 44107688411202, 'inventory_quantity': 3, 'old_inventory_quantity': 3, 'admin_graphql_api_id': 'gid://shopify/ProductVariant/42003146211394', 'image_id': None}}
2025-07-09 16:42:45,620 - sync_service - INFO - Listing all variants...
2025-07-09 16:42:58,430 - sync_service - INFO - Found 250 variants:
2025-07-09 16:42:58,435 - sync_service - INFO -   *** TARGET: SKU=FG-0000075, Title=Default Title, ID=42003146211394 ***
2025-07-09 16:42:58,441 - sync_service - INFO -   *** TARGET: SKU=FG-0000077, Title=Default Title, ID=42003146276930 ***
2025-07-09 16:42:58,443 - sync_service - INFO -   - SKU=FG-0000014, Title=Default Title, ID=42003146342466
2025-07-09 16:42:58,447 - sync_service - INFO -   - SKU=FG-0000225, Title=Default Title, ID=42003146408002
2025-07-09 16:42:58,449 - sync_service - INFO -   - SKU=FG-0000280, Title=Default Title, ID=42003146440770
2025-07-09 16:42:58,451 - sync_service - INFO -   - SKU=FG-0000287, Title=Default Title, ID=42003146506306
2025-07-09 16:42:58,454 - sync_service - INFO -   - SKU=FG-0000267, Title=Default Title, ID=42003146539074
2025-07-09 16:42:58,569 - sync_service - INFO -   - SKU=FG-0000224, Title=Default Title, ID=42003146571842
2025-07-09 16:42:58,585 - sync_service - INFO -   - SKU=FG-0000223, Title=Default Title, ID=42003146637378
2025-07-09 16:42:58,599 - sync_service - INFO -   - SKU=FG-0000344, Title=Default Title, ID=42003146670146
2025-07-09 16:42:58,603 - sync_service - INFO -   - SKU=FG-0000347, Title=Default Title, ID=42003146702914
2025-07-09 16:42:58,722 - sync_service - INFO -   - SKU=FG-0000342, Title=Default Title, ID=42003146768450
2025-07-09 16:42:58,743 - sync_service - INFO -   - SKU=FG-0000345, Title=Default Title, ID=42003146801218
2025-07-09 16:42:58,749 - sync_service - INFO -   - SKU=FG-0000366, Title=Default Title, ID=42003146833986
2025-07-09 16:42:58,935 - sync_service - INFO -   - SKU=FG-0000367, Title=Default Title, ID=42003146899522
2025-07-09 16:42:58,952 - sync_service - INFO -   - SKU=FG-0000368, Title=Default Title, ID=42003146932290
2025-07-09 16:42:58,977 - sync_service - INFO -   - SKU=FG-0000369, Title=Default Title, ID=42003146997826
2025-07-09 16:42:58,984 - sync_service - INFO -   - SKU=FG-0000383, Title=Default Title, ID=42003147030594
2025-07-09 16:42:58,998 - sync_service - INFO -   - SKU=FG-0000384, Title=Default Title, ID=42003147096130
2025-07-09 16:42:59,002 - sync_service - INFO -   - SKU=FG-0000361, Title=Default Title, ID=42003147128898
2025-07-09 16:42:59,009 - sync_service - INFO -   - SKU=FG-0000427, Title=Default Title, ID=42003147194434
2025-07-09 16:42:59,016 - sync_service - INFO -   - SKU=FG-0000237, Title=Lime Green-Magenta, ID=42003147227202
2025-07-09 16:42:59,018 - sync_service - INFO -   - SKU=FG-0000238, Title=Burnt Orange-Royal Blue, ID=42003147259970
2025-07-09 16:42:59,020 - sync_service - INFO -   - SKU=FG-0000235, Title=Royal Blue-Olive Green, ID=42003147292738
2025-07-09 16:42:59,022 - sync_service - INFO -   - SKU=FG-0000239, Title=Magenta-Lime Green, ID=42003147325506
2025-07-09 16:42:59,156 - sync_service - INFO -   - SKU=FG-0000236, Title=Olive Green-Burnt Orange, ID=42003147358274
2025-07-09 16:42:59,164 - sync_service - INFO -   - SKU=FG-0000255, Title=Rose, ID=42003147423810
2025-07-09 16:42:59,172 - sync_service - INFO -   - SKU=FG-0000254, Title=Olive Green, ID=42003147456578
2025-07-09 16:42:59,182 - sync_service - INFO -   - SKU=FG-0000256, Title=Burnt Orange, ID=42003147489346
2025-07-09 16:42:59,186 - sync_service - INFO -   - SKU=FG-0000257, Title=Pearl White, ID=42003147522114
2025-07-09 16:42:59,190 - sync_service - INFO -   - SKU=FG-0000270, Title=Rose, ID=42003147554882
2025-07-09 16:42:59,192 - sync_service - INFO -   - SKU=FG-0000268, Title=Olive Green, ID=42003147587650
2025-07-09 16:42:59,194 - sync_service - INFO -   - SKU=FG-0000269, Title=Burnt Orange, ID=42003147620418
2025-07-09 16:42:59,195 - sync_service - INFO -   - SKU=FG-0000271, Title=Pearl White, ID=42003147653186
2025-07-09 16:42:59,200 - sync_service - INFO -   - SKU=FG-0000334, Title=Pearl White, ID=42003147718722
2025-07-09 16:42:59,201 - sync_service - INFO -   - SKU=FG-0000266, Title=Rose, ID=42003147751490
2025-07-09 16:42:59,202 - sync_service - INFO -   - SKU=FG-0000288, Title=Olive Green, ID=42003147784258
2025-07-09 16:42:59,203 - sync_service - INFO -   - SKU=FG-0000265, Title=Lime Green, ID=42003147817026
2025-07-09 16:42:59,204 - sync_service - INFO -   - SKU=FG-0000352, Title=Frost White, ID=42003147849794
2025-07-09 16:42:59,206 - sync_service - INFO -   - SKU=FG-0000354, Title=Maroon, ID=42003147882562
2025-07-09 16:42:59,207 - sync_service - INFO -   - SKU=FG-0000353, Title=Christmas Forest Green, ID=42003147915330
2025-07-09 16:42:59,207 - sync_service - INFO -   - SKU=FG-0000372, Title=Jupiter Red, ID=42003147980866
2025-07-09 16:42:59,209 - sync_service - INFO -   - SKU=FG-0000373, Title=Moon White, ID=42003148013634
2025-07-09 16:42:59,209 - sync_service - INFO -   - SKU=FG-0000370, Title=Space Blue, ID=42003148046402
2025-07-09 16:42:59,211 - sync_service - INFO -   - SKU=FG-0000371, Title=Terrestrial Green, ID=42003148079170
2025-07-09 16:42:59,212 - sync_service - INFO -   - SKU=FG-0000382, Title=Space Blue, ID=42003148111938
2025-07-09 16:42:59,214 - sync_service - INFO -   - SKU=FG-0000395, Title=Terrestrial Green, ID=42003148144706
2025-07-09 16:42:59,215 - sync_service - INFO -   - SKU=FG-0000396, Title=Jupiter Red, ID=42003148177474
2025-07-09 16:42:59,215 - sync_service - INFO -   - SKU=FG-0000381, Title=Moon White, ID=42003148243010
2025-07-09 16:42:59,216 - sync_service - INFO -   - SKU=FG-0000378, Title=Space Blue, ID=42003148275778
2025-07-09 16:42:59,217 - sync_service - INFO -   - SKU=FG-0000379, Title=Terrestrial Green, ID=42003148308546
2025-07-09 16:42:59,218 - sync_service - INFO -   - SKU=FG-0000380, Title=Jupiter Red, ID=42003148341314
2025-07-09 16:42:59,220 - sync_service - INFO -   - SKU=FG-0000377, Title=Jupiter Red, ID=42003148374082
2025-07-09 16:42:59,221 - sync_service - INFO -   - SKU=FG-0000374, Title=Space Blue, ID=42003148406850
2025-07-09 16:42:59,222 - sync_service - INFO -   - SKU=FG-0000375, Title=Terrestrial Green, ID=42003148439618
2025-07-09 16:42:59,222 - sync_service - INFO -   - SKU=FG-0000376, Title=Moon White, ID=42003148472386
2025-07-09 16:42:59,224 - sync_service - INFO -   - SKU=FG-0000399, Title=Space Blue, ID=42003148505154
2025-07-09 16:42:59,224 - sync_service - INFO -   - SKU=FG-0000400, Title=Terrestrial Green, ID=42003148537922
2025-07-09 16:42:59,227 - sync_service - INFO -   - SKU=FG-0000401, Title=Jupiter Red, ID=42003148570690
2025-07-09 16:42:59,230 - sync_service - INFO -   - SKU=FG-0000432, Title=Jupiter Red, ID=42003148636226
2025-07-09 16:42:59,234 - sync_service - INFO -   - SKU=FG-0000433, Title=Space Blue, ID=42003148668994
2025-07-09 16:42:59,237 - sync_service - INFO -   - SKU=FG-0000431, Title=Terrestrial Green, ID=42003148701762
2025-07-09 16:42:59,238 - sync_service - INFO -   - SKU=FG-0000417, Title=Space Blue, ID=42003148734530
2025-07-09 16:42:59,239 - sync_service - INFO -   - SKU=FG-0000415, Title=Terrestrial Green, ID=42003148767298
2025-07-09 16:42:59,240 - sync_service - INFO -   - SKU=FG-0000416, Title=Jupiter Red, ID=42003148800066
2025-07-09 16:42:59,241 - sync_service - INFO -   - SKU=FG-0000435, Title=Shades of Blue, ID=42003148865602
2025-07-09 16:42:59,241 - sync_service - INFO -   - SKU=FG-0000434, Title=Lime green-Blushed Pink, ID=42003148898370
2025-07-09 16:42:59,245 - sync_service - INFO -   - SKU=FG-0000437, Title=Rose, ID=42003148931138
2025-07-09 16:42:59,248 - sync_service - INFO -   - SKU=FG-0000411, Title=Moon White, ID=42003148963906
2025-07-09 16:42:59,249 - sync_service - INFO -   - SKU=FG-0000408, Title=Space Blue, ID=42003148996674
2025-07-09 16:42:59,250 - sync_service - INFO -   - SKU=FG-0000409, Title=Terrestrial Green, ID=42003149029442
2025-07-09 16:42:59,251 - sync_service - INFO -   - SKU=FG-0000410, Title=Jupiter Red, ID=42003149062210
2025-07-09 16:42:59,252 - sync_service - INFO -   - SKU=FG-0000559, Title=Green, ID=42003149127746
2025-07-09 16:42:59,253 - sync_service - INFO -   - SKU=FG-0000567, Title=Purple, ID=42003149160514
2025-07-09 16:42:59,253 - sync_service - INFO -   - SKU=FG-0000555, Title=Beige, ID=42003149226050
2025-07-09 16:42:59,255 - sync_service - INFO -   - SKU=FG-0000557, Title=Burnt Orange, ID=42003149258818
2025-07-09 16:42:59,255 - sync_service - INFO -   - SKU=FG-0000556, Title=Green, ID=42003149291586
2025-07-09 16:42:59,261 - sync_service - INFO -   - SKU=FG-0000565, Title=Purple, ID=42003149324354
2025-07-09 16:42:59,267 - sync_service - INFO -   - SKU=FG-0000552, Title=Beige, ID=42003149357122
2025-07-09 16:42:59,270 - sync_service - INFO -   - SKU=FG-0000554, Title=Burnt Orange, ID=42003149389890
2025-07-09 16:42:59,270 - sync_service - INFO -   - SKU=FG-0000553, Title=Green, ID=42003149422658
2025-07-09 16:42:59,271 - sync_service - INFO -   - SKU=FG-0000566, Title=Purple, ID=42003149455426
2025-07-09 16:42:59,271 - sync_service - INFO -   - SKU=FG-0000425, Title=Space Blue, ID=42003149488194
2025-07-09 16:42:59,272 - sync_service - INFO -   - SKU=FG-0000424, Title=Terrestrial Green, ID=42003149520962
2025-07-09 16:42:59,274 - sync_service - INFO -   - SKU=FG-0000426, Title=Jupiter Red, ID=42003149553730
2025-07-09 16:42:59,281 - sync_service - INFO -   - SKU=FG-0000429, Title=Space Blue, ID=42003149586498
2025-07-09 16:42:59,286 - sync_service - INFO -   - SKU=FG-0000428, Title=Terrestrial Green, ID=42003149619266
2025-07-09 16:42:59,287 - sync_service - INFO -   - SKU=FG-0000430, Title=Jupiter Red, ID=42003149652034
2025-07-09 16:42:59,287 - sync_service - INFO -   - SKU=FG-0000477, Title=Default Title, ID=42003149684802
2025-07-09 16:42:59,289 - sync_service - INFO -   - SKU=FG-0000482, Title=Default Title, ID=42003149717570
2025-07-09 16:42:59,290 - sync_service - INFO -   - SKU=FG-0000500, Title=Default Title, ID=42003149750338
2025-07-09 16:42:59,454 - sync_service - INFO -   - SKU=FG-0000497, Title=Default Title, ID=42003149783106
2025-07-09 16:42:59,464 - sync_service - INFO -   - SKU=FG-0000499, Title=Default Title, ID=42003149815874
2025-07-09 16:42:59,490 - sync_service - INFO -   - SKU=FG-0000496, Title=Default Title, ID=42003149848642
2025-07-09 16:42:59,495 - sync_service - INFO -   - SKU=FG-0000498, Title=Default Title, ID=42003149881410
2025-07-09 16:42:59,499 - sync_service - INFO -   - SKU=FG-0000253, Title=Default Title, ID=42003149914178
2025-07-09 16:42:59,502 - sync_service - INFO -   - SKU=FG-0000289, Title=Default Title, ID=42003149946946
2025-07-09 16:42:59,504 - sync_service - INFO -   - SKU=FG-0000501, Title=blueberry Punch, Cherry Pie, Cotton Candy, Orange Peel, Sour Lime, Sweet Melon, ID=42003149979714
2025-07-09 16:42:59,507 - sync_service - INFO -   - SKU=FG-0000535, Title=Default Title, ID=42003150012482
2025-07-09 16:42:59,508 - sync_service - INFO -   - SKU=FG-0000533, Title=Default Title, ID=42003150045250
2025-07-09 16:42:59,511 - sync_service - INFO -   - SKU=FG-0000542, Title=Default Title, ID=42003150078018
2025-07-09 16:42:59,513 - sync_service - INFO -   - SKU=FG-0000549, Title=Default Title, ID=42003150110786
2025-07-09 16:42:59,516 - sync_service - INFO -   - SKU=FG-0000541, Title=Default Title, ID=42003150143554
2025-07-09 16:42:59,517 - sync_service - INFO -   - SKU=FG-0000509, Title=Default Title, ID=42003150176322
2025-07-09 16:42:59,519 - sync_service - INFO -   - SKU=FG-0000516, Title=Default Title, ID=42003150209090
2025-07-09 16:42:59,520 - sync_service - INFO -   - SKU=FG-0000534, Title=Default Title, ID=42003150274626
2025-07-09 16:42:59,521 - sync_service - INFO -   - SKU=FG-0000539, Title=Default Title, ID=42003150438466
2025-07-09 16:42:59,522 - sync_service - INFO -   - SKU=FG-0000532, Title=Default Title, ID=42003150471234
2025-07-09 16:42:59,524 - sync_service - INFO -   - SKU=FG-0000514, Title=Default Title, ID=42003150504002
2025-07-09 16:42:59,525 - sync_service - INFO -   - SKU=FG-0000540, Title=Default Title, ID=42003150536770
2025-07-09 16:42:59,529 - sync_service - INFO -   - SKU=FG-0000508, Title=Default Title, ID=42003150569538
2025-07-09 16:42:59,534 - sync_service - INFO -   - SKU=FG-0000544, Title=Default Title, ID=42003150602306
2025-07-09 16:42:59,658 - sync_service - INFO -   - SKU=FG-0000513, Title=Default Title, ID=42003150635074
2025-07-09 16:42:59,665 - sync_service - INFO -   - SKU=FG-0000543, Title=Default Title, ID=42003150700610
2025-07-09 16:42:59,669 - sync_service - INFO -   - SKU=FG-0000515, Title=Default Title, ID=42003150766146
2025-07-09 16:42:59,670 - sync_service - INFO -   - SKU=FG-0000569, Title=Default Title, ID=42003150929986
2025-07-09 16:42:59,674 - sync_service - INFO -   - SKU=FG-0000568, Title=Default Title, ID=42003150962754
2025-07-09 16:42:59,688 - sync_service - INFO -   - SKU=FG-0000571, Title=Default Title, ID=42003150995522
2025-07-09 16:42:59,695 - sync_service - INFO -   - SKU=FG-0000572, Title=Default Title, ID=42003151028290
2025-07-09 16:42:59,699 - sync_service - INFO -   - SKU=FG-0000570, Title=Default Title, ID=42003151061058
2025-07-09 16:42:59,702 - sync_service - INFO -   - SKU=FG-0000458, Title=Pearl White, ID=42003151126594
2025-07-09 16:42:59,716 - sync_service - INFO -   - SKU=FG-0000457, Title=Blue, ID=42003151159362
2025-07-09 16:42:59,719 - sync_service - INFO -   - SKU=FG-0000460, Title=Red, ID=42003151192130
2025-07-09 16:42:59,725 - sync_service - INFO -   - SKU=FG-0000459, Title=Green, ID=42003151224898
2025-07-09 16:42:59,727 - sync_service - INFO -   - SKU=FG-0000464, Title=Pearl White, ID=42003151290434
2025-07-09 16:42:59,727 - sync_service - INFO -   - SKU=FG-0000462, Title=Green, ID=42003151323202
2025-07-09 16:42:59,728 - sync_service - INFO -   - SKU=FG-0000461, Title=Blue, ID=42003151355970
2025-07-09 16:42:59,729 - sync_service - INFO -   - SKU=FG-0000463, Title=Red, ID=42003151388738
2025-07-09 16:42:59,730 - sync_service - INFO -   - SKU=FG-0000484, Title=Pearl White, ID=42003151421506
2025-07-09 16:42:59,730 - sync_service - INFO -   - SKU=FG-0000483, Title=Red, ID=42003151454274
2025-07-09 16:42:59,731 - sync_service - INFO -   - SKU=FG-0000481, Title=Green, ID=42003151487042
2025-07-09 16:42:59,731 - sync_service - INFO -   - SKU=FG-0000466, Title=Green, ID=42003151519810
2025-07-09 16:42:59,732 - sync_service - INFO -   - SKU=FG-0000467, Title=Pearl White, ID=42003151552578
2025-07-09 16:42:59,734 - sync_service - INFO -   - SKU=FG-0000465, Title=Blue, ID=42003151585346
2025-07-09 16:42:59,735 - sync_service - INFO -   - SKU=FG-0000468, Title=Red, ID=42003151618114
2025-07-09 16:42:59,738 - sync_service - INFO -   - SKU=FG-0000476, Title=Pearl White, ID=42003151650882
2025-07-09 16:42:59,739 - sync_service - INFO -   - SKU=FG-0000475, Title=Red, ID=42003151683650
2025-07-09 16:42:59,740 - sync_service - INFO -   - SKU=FG-0000474, Title=Green, ID=42003151716418
2025-07-09 16:42:59,744 - sync_service - INFO -   - SKU=FG-0000473, Title=Blue, ID=42003151749186
2025-07-09 16:42:59,901 - sync_service - INFO -   - SKU=FG-0000491, Title=Pearl White, ID=42003151814722
2025-07-09 16:42:59,903 - sync_service - INFO -   - SKU=FG-0000489, Title=Green, ID=42003151847490
2025-07-09 16:42:59,904 - sync_service - INFO -   - SKU=FG-0000490, Title=Red, ID=42003151880258
2025-07-09 16:42:59,904 - sync_service - INFO -   - SKU=FG-0000488, Title=Blue, ID=42003151913026
2025-07-09 16:42:59,904 - sync_service - INFO -   - SKU=FG-0000469, Title=Blue, ID=42003151945794
2025-07-09 16:42:59,909 - sync_service - INFO -   - SKU=FG-0000471, Title=Pearl White, ID=42003151978562
2025-07-09 16:42:59,910 - sync_service - INFO -   - SKU=FG-0000470, Title=Green, ID=42003152011330
2025-07-09 16:42:59,914 - sync_service - INFO -   - SKU=FG-0000472, Title=Red, ID=42003152044098
2025-07-09 16:42:59,915 - sync_service - INFO -   - SKU=FG-0000487, Title=Pearl White, ID=42003152076866
2025-07-09 16:42:59,918 - sync_service - INFO -   - SKU=FG-0000486, Title=Teal Green, ID=42003152109634
2025-07-09 16:42:59,919 - sync_service - INFO -   - SKU=FG-0000485, Title=Dusty Blue, ID=42003152142402
2025-07-09 16:42:59,921 - sync_service - INFO -   - SKU=FG-0000517, Title=Teal Blue, ID=42003152175170
2025-07-09 16:42:59,921 - sync_service - INFO -   - SKU=FG-0000518, Title=Emerald Green, ID=42003152207938
2025-07-09 16:42:59,923 - sync_service - INFO -   - SKU=FG-0000519, Title=Lime Green, ID=42003152240706
2025-07-09 16:42:59,924 - sync_service - INFO -   - SKU=FG-0000520, Title=Burnt Orange, ID=42003152273474
2025-07-09 16:42:59,925 - sync_service - INFO -   - SKU=FG-0000521, Title=Pearl White, ID=42003152306242
2025-07-09 16:42:59,929 - sync_service - INFO -   - SKU=FG-0000510, Title=Teal Blue, ID=42003152339010
2025-07-09 16:42:59,930 - sync_service - INFO -   - SKU=FG-0000511, Title=Emerald Green, ID=42003152371778
2025-07-09 16:42:59,932 - sync_service - INFO -   - SKU=FG-0000512, Title=Pearl White, ID=42003152404546
2025-07-09 16:42:59,934 - sync_service - INFO -   - SKU=FG-0000529, Title=Lime Green, ID=42003152437314
2025-07-09 16:42:59,935 - sync_service - INFO -   - SKU=FG-0000530, Title=Burnt Orange, ID=42003152470082
2025-07-09 16:42:59,936 - sync_service - INFO -   - SKU=FG-0000531, Title=Pearl White, ID=42003152502850
2025-07-09 16:42:59,936 - sync_service - INFO -   - SKU=FG-0000527, Title=Teal Blue, ID=42003152535618
2025-07-09 16:42:59,937 - sync_service - INFO -   - SKU=FG-0000528, Title=Emerald Green, ID=42003152568386
2025-07-09 16:42:59,939 - sync_service - INFO -   - SKU=FG-0000545, Title=Teal Blue, ID=42003152601154
2025-07-09 16:42:59,941 - sync_service - INFO -   - SKU=FG-0000546, Title=Emerald Green, ID=42003152633922
2025-07-09 16:42:59,947 - sync_service - INFO -   - SKU=FG-0000547, Title=Lime Green, ID=42003152666690
2025-07-09 16:42:59,949 - sync_service - INFO -   - SKU=FG-0000548, Title=Pearl White, ID=42003152699458
2025-07-09 16:42:59,951 - sync_service - INFO -   - SKU=FG-0000536, Title=Teal Blue, ID=42003152732226
2025-07-09 16:42:59,952 - sync_service - INFO -   - SKU=FG-0000537, Title=Emerald Green, ID=42003152764994
2025-07-09 16:42:59,953 - sync_service - INFO -   - SKU=FG-0000538, Title=Pearl White, ID=42003152797762
2025-07-09 16:42:59,953 - sync_service - INFO -   - SKU=FG-0000522, Title=Teal Blue, ID=42003152830530
2025-07-09 16:42:59,958 - sync_service - INFO -   - SKU=FG-0000523, Title=Emerald Green, ID=42003152863298
2025-07-09 16:42:59,959 - sync_service - INFO -   - SKU=FG-0000524, Title=Lime Green, ID=42003152896066
2025-07-09 16:42:59,960 - sync_service - INFO -   - SKU=FG-0000525, Title=Burnt Orange, ID=42003152928834
2025-07-09 16:42:59,963 - sync_service - INFO -   - SKU=FG-0000526, Title=Pearl White, ID=42003152961602
2025-07-09 16:42:59,965 - sync_service - INFO -   - SKU=FG-0000582, Title=Rose, ID=42003152994370
2025-07-09 16:42:59,966 - sync_service - INFO -   - SKU=FG-0000581, Title=Green, ID=42003153027138
2025-07-09 16:42:59,968 - sync_service - INFO -   - SKU=FG-0000580, Title=Pearl White, ID=42003153059906
2025-07-09 16:42:59,968 - sync_service - INFO -   - SKU=FG-0000611, Title=Rose, ID=42003153092674
2025-07-09 16:42:59,969 - sync_service - INFO -   - SKU=FG-0000610, Title=Green, ID=42003153125442
2025-07-09 16:42:59,969 - sync_service - INFO -   - SKU=FG-0000609, Title=Pearl White, ID=42003153158210
2025-07-09 16:42:59,972 - sync_service - INFO -   - SKU=FG-0000583, Title=Default Title, ID=42003153190978
2025-07-09 16:42:59,973 - sync_service - INFO -   - SKU=FG-0000587, Title=Default Title, ID=42003153223746
2025-07-09 16:42:59,975 - sync_service - INFO -   - SKU=FG-0000575, Title=Default Title, ID=42003153256514
2025-07-09 16:42:59,979 - sync_service - INFO -   - SKU=FG-0000595, Title=Default Title, ID=42003153289282
2025-07-09 16:42:59,982 - sync_service - INFO -   - SKU=FG-0000593, Title=Default Title, ID=42003153322050
2025-07-09 16:42:59,983 - sync_service - INFO -   - SKU=FG-0000576, Title=Pearl White, ID=42003153354818
2025-07-09 16:42:59,985 - sync_service - INFO -   - SKU=FG-0000578, Title=Rose, ID=42003153387586
2025-07-09 16:42:59,987 - sync_service - INFO -   - SKU=FG-0000577, Title=Green, ID=42003153420354
2025-07-09 16:42:59,988 - sync_service - INFO -   - SKU=FG-0000591, Title=Rose, ID=42003153453122
2025-07-09 16:42:59,990 - sync_service - INFO -   - SKU=FG-0000590, Title=Green, ID=42003153485890
2025-07-09 16:42:59,990 - sync_service - INFO -   - SKU=FG-0000589, Title=Pearl White, ID=42003153518658
2025-07-09 16:42:59,992 - sync_service - INFO -   - SKU=FG-0000094, Title=Default Title, ID=42003160137794
2025-07-09 16:42:59,992 - sync_service - INFO -   - SKU=FG-0000096, Title=Default Title, ID=42003160170562
2025-07-09 16:42:59,992 - sync_service - INFO -   - SKU=FG-0000250, Title=Default Title, ID=42003160203330
2025-07-09 16:42:59,993 - sync_service - INFO -   - SKU=FG-0000251, Title=Default Title, ID=42003160236098
2025-07-09 16:42:59,993 - sync_service - INFO -   - SKU=FG-0000605, Title=Default Title, ID=42003161055298
2025-07-09 16:42:59,995 - sync_service - INFO -   - SKU=FG-0000585, Title=Default Title, ID=42003161088066
2025-07-09 16:42:59,995 - sync_service - INFO -   - SKU=FG-0000594, Title=Default Title, ID=42003161120834
2025-07-09 16:42:59,997 - sync_service - INFO -   - SKU=FG-0000596, Title=Black, ID=42003161251906
2025-07-09 16:42:59,997 - sync_service - INFO -   - SKU=FG-0000597, Title=Teal Blue, ID=42003161284674
2025-07-09 16:42:59,998 - sync_service - INFO -   - SKU=FG-0000598, Title=Purple, ID=42003161317442
2025-07-09 16:42:59,998 - sync_service - INFO -   - SKU=FG-0000606, Title=Black, ID=42003161350210
2025-07-09 16:43:00,000 - sync_service - INFO -   - SKU=FG-0000607, Title=Teal Blue, ID=42003161382978
2025-07-09 16:43:00,000 - sync_service - INFO -   - SKU=FG-0000608, Title=Purple, ID=42003161415746
2025-07-09 16:43:00,004 - sync_service - INFO -   - SKU=FG-0000599, Title=Black, ID=42003161448514
2025-07-09 16:43:00,007 - sync_service - INFO -   - SKU=FG-0000600, Title=Purple, ID=42003161481282
2025-07-09 16:43:00,018 - sync_service - INFO -   - SKU=FG-0000601, Title=Teal Blue, ID=42003161514050
2025-07-09 16:43:00,029 - sync_service - INFO -   - SKU=FG-0000584, Title=Default Title, ID=42135097835586
2025-07-09 16:43:00,030 - sync_service - INFO -   - SKU=FG-0000615, Title=Default Title, ID=42135104356418
2025-07-09 16:43:00,032 - sync_service - INFO -   - SKU=FG-0000586, Title=Default Title, ID=42135109763138
2025-07-09 16:43:00,034 - sync_service - INFO -   - SKU=FG-0000588, Title=Default Title, ID=42135110484034
2025-07-09 16:43:00,035 - sync_service - INFO -   - SKU=FG-0000614, Title=Default Title, ID=42135111598146
2025-07-09 16:43:00,043 - sync_service - INFO -   - SKU=FG-0000613, Title=Default Title, ID=42135112187970
2025-07-09 16:43:00,215 - sync_service - INFO -   - SKU=FG-0000579, Title=Default Title, ID=42135112745026
2025-07-09 16:43:00,224 - sync_service - INFO -   - SKU=FG-0000574, Title=Default Title, ID=42135115366466
2025-07-09 16:43:00,225 - sync_service - INFO -   - SKU=FG-0000616, Title=Default Title, ID=42135115890754
2025-07-09 16:43:00,226 - sync_service - INFO -   - SKU=FG-0000603, Title=Teal Blue, ID=42140537815106
2025-07-09 16:43:00,227 - sync_service - INFO -   - SKU=FG-0000604, Title=Purple, ID=42140537847874
2025-07-09 16:43:00,229 - sync_service - INFO -   - SKU=FG-0000602, Title=Black, ID=42140537880642
2025-07-09 16:43:00,232 - sync_service - INFO -   - SKU=FG-0000618, Title=Blue, ID=42194952192066
2025-07-09 16:43:00,236 - sync_service - INFO -   - SKU=FG-0000619, Title=Green, ID=42194952224834
2025-07-09 16:43:00,243 - sync_service - INFO -   - SKU=FG-0000620, Title=Orange, ID=42194952257602
2025-07-09 16:43:00,264 - sync_service - INFO -   - SKU=FG-0000621, Title=Blue, ID=42194952290370
2025-07-09 16:43:00,270 - sync_service - INFO -   - SKU=FG-0000622, Title=Green, ID=42194952323138
2025-07-09 16:43:00,273 - sync_service - INFO -   - SKU=FG-0000623, Title=Orange, ID=42194952355906
2025-07-09 16:43:00,274 - sync_service - INFO -   - SKU=FG-0000624, Title=Blue, ID=42194952388674
2025-07-09 16:43:00,275 - sync_service - INFO -   - SKU=FG-0000625, Title=Green, ID=42194952421442
2025-07-09 16:43:00,275 - sync_service - INFO -   - SKU=FG-0000627, Title=Orange, ID=42194952454210
2025-07-09 16:43:00,276 - sync_service - INFO -   - SKU=FG-0000626, Title=Lime, ID=42194952486978
2025-07-09 16:43:00,277 - sync_service - INFO -   - SKU=FG-0000629, Title=White, ID=42194952519746
2025-07-09 16:43:00,278 - sync_service - INFO -   - SKU=FG-0000628, Title=Pink, ID=42194952552514
2025-07-09 16:43:00,279 - sync_service - INFO -   - SKU=FG-0000631, Title=Default Title, ID=42194952585282
2025-07-09 16:43:00,279 - sync_service - INFO -   - SKU=FG-0000630, Title=Default Title, ID=42194952618050
2025-07-09 16:43:00,280 - sync_service - INFO -   - SKU=FG-0000632, Title=Blue, ID=42194952650818
2025-07-09 16:43:00,283 - sync_service - INFO -   - SKU=FG-0000633, Title=Green, ID=42194952683586
2025-07-09 16:43:00,284 - sync_service - INFO -   - SKU=FG-0000635, Title=Orange, ID=42194952716354
2025-07-09 16:43:00,286 - sync_service - INFO -   - SKU=FG-0000634, Title=Lime, ID=42194952749122
2025-07-09 16:43:00,286 - sync_service - INFO -   - SKU=FG-0000637, Title=White, ID=42194952781890
2025-07-09 16:43:00,287 - sync_service - INFO -   - SKU=FG-0000636, Title=Pink, ID=42194952814658
2025-07-09 16:43:00,288 - sync_service - INFO -   - SKU=FG-0000638, Title=Blue, ID=42194952847426
2025-07-09 16:43:00,288 - sync_service - INFO -   - SKU=FG-0000639, Title=Green, ID=42194952880194
2025-07-09 16:43:00,291 - sync_service - INFO -   - SKU=FG-0000641, Title=Orange, ID=42194952912962
2025-07-09 16:43:00,293 - sync_service - INFO -   - SKU=FG-0000640, Title=Lime, ID=42194952945730
2025-07-09 16:43:00,293 - sync_service - INFO -   - SKU=FG-0000643, Title=White, ID=42194952978498
2025-07-09 16:43:00,294 - sync_service - INFO -   - SKU=FG-0000642, Title=Pink, ID=42194953011266
2025-07-09 16:43:00,295 - sync_service - INFO -   - SKU=FG-0000653, Title=Blue, ID=42194953044034
2025-07-09 16:43:00,299 - sync_service - INFO -   - SKU=FG-0000654, Title=Green, ID=42194953076802
2025-07-09 16:43:00,300 - sync_service - INFO -   - SKU=FG-0000655, Title=Orange, ID=42194953109570
2025-07-09 16:43:00,302 - sync_service - INFO -   - SKU=FG-0000656, Title=Blue, ID=42194953142338
2025-07-09 16:43:00,303 - sync_service - INFO - 
Found 2 target variants:
2025-07-09 16:43:00,304 - sync_service - INFO -   - SKU: FG-0000075, Title: Default Title, ID: 42003146211394
2025-07-09 16:43:00,304 - sync_service - INFO -   - SKU: FG-0000077, Title: Default Title, ID: 42003146276930
2025-07-09 16:44:40,450 - sync_service - INFO - Searching for variant with SKU: FG-0000704
2025-07-09 16:45:27,420 - sync_service - INFO - Updating variant 42295166599234 with title 'Green'
2025-07-09 16:45:38,904 - sync_service - INFO - ✅ Successfully updated variant title to 'Green'
2025-07-09 16:45:38,904 - sync_service - INFO - Updated variant: {'variant': {'id': 42295166599234, 'product_id': 7510108733506, 'title': 'Default Title', 'price': '2500.00', 'position': 4, 'inventory_policy': 'deny', 'compare_at_price': None, 'option1': 'Default Title', 'option2': None, 'option3': None, 'created_at': '2025-07-09T16:36:37+03:00', 'updated_at': '2025-07-09T16:36:37+03:00', 'taxable': True, 'barcode': None, 'fulfillment_service': 'manual', 'grams': 0, 'inventory_management': 'shopify', 'requires_shipping': True, 'sku': 'FG-0000704', 'weight': 0.0, 'weight_unit': 'kg', 'inventory_item_id': 44396297355330, 'inventory_quantity': 0, 'old_inventory_quantity': 0, 'admin_graphql_api_id': 'gid://shopify/ProductVariant/42295166599234', 'image_id': None}}
2025-07-09 16:45:55,823 - sync_service - INFO - Verifying variant 42295166599234 title
2025-07-09 16:46:07,346 - sync_service - INFO - ✅ Variant FG-0000704 current status:
2025-07-09 16:46:07,352 - sync_service - INFO -   - Title: Default Title
2025-07-09 16:46:07,360 - sync_service - INFO -   - Option1: Default Title
2025-07-09 16:46:07,363 - sync_service - WARNING - ⚠️  Title is still 'Default Title', not 'Green'
2025-07-09 16:46:38,631 - sync_service - INFO - Updating variant 42295166599234 with title and option1 to 'Green'
2025-07-09 16:46:39,244 - sync_service - INFO - ✅ Successfully updated variant
2025-07-09 16:46:39,248 - sync_service - INFO - Updated variant: {'variant': {'id': 42295166599234, 'product_id': 7510108733506, 'title': 'Green', 'price': '2500.00', 'position': 4, 'inventory_policy': 'deny', 'compare_at_price': None, 'option1': 'Green', 'option2': None, 'option3': None, 'created_at': '2025-07-09T16:36:37+03:00', 'updated_at': '2025-07-09T16:46:40+03:00', 'taxable': True, 'barcode': None, 'fulfillment_service': 'manual', 'grams': 0, 'inventory_management': 'shopify', 'requires_shipping': True, 'sku': 'FG-0000704', 'weight': 0.0, 'weight_unit': 'kg', 'inventory_item_id': 44396297355330, 'inventory_quantity': 0, 'old_inventory_quantity': 0, 'admin_graphql_api_id': 'gid://shopify/ProductVariant/42295166599234', 'image_id': None}}
2025-07-09 16:55:17,230 - sync_service - INFO - Initialized Shopify client for store: Local Store (local)
2025-07-14 11:35:07,614 - sync_service - INFO - Initialized Shopify client for store: Local Store (local)
2025-07-14 11:35:07,725 - sync_service - INFO - Starting inventory sync using change-based tracking
2025-07-14 11:35:07,730 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'login', 'request': {'company': 'JudeBenHalim_Test', 'user': 'manager'}, 'response': None, 'status': None}
2025-07-14 11:35:10,016 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'login', 'request': None, 'response': {'status': 'success'}, 'status': 'success'}
2025-07-14 11:35:10,023 - sync_service - INFO - SAP login successful
2025-07-14 11:35:10,040 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'sml.svc/QTY_CHANGE', 'request': {'method': 'GET', 'url': 'https://10.0.0.100:50000/b1s/v1/sml.svc/QTY_CHANGE', 'data': None, 'params': {}}, 'response': None, 'status': None}
2025-07-14 11:35:10,437 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'sml.svc/QTY_CHANGE', 'request': None, 'response': {'status_code': 400, 'text': '{\n   "error" : {\n      "code" : 805,\n      "message" : {\n         "lang" : "en-us",\n         "value" : "Semantic Layer exposure is not enabled."\n      }\n   }\n}\n'}, 'status': 'failure'}
2025-07-14 11:35:10,448 - sync_service - ERROR - Failed to get inventory changes from SAP: HTTP 400: {
   "error" : {
      "code" : 805,
      "message" : {
         "lang" : "en-us",
         "value" : "Semantic Layer exposure is not enabled."
      }
   }
}

2025-07-14 11:38:06,975 - sync_service - INFO - Initialized Shopify client for store: Local Store (local)
2025-07-14 11:38:07,014 - sync_service - INFO - Starting inventory sync using change-based tracking
2025-07-14 11:38:07,016 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'login', 'request': {'company': 'JudeBenHalim_Test', 'user': 'manager'}, 'response': None, 'status': None}
2025-07-14 11:38:07,839 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'login', 'request': None, 'response': {'status': 'success'}, 'status': 'success'}
2025-07-14 11:38:07,841 - sync_service - INFO - SAP login successful
2025-07-14 11:38:07,845 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'sml.svc/QTY_CHANGE', 'request': {'method': 'GET', 'url': 'https://10.0.0.100:50000/b1s/v1/sml.svc/QTY_CHANGE', 'data': None, 'params': {}}, 'response': None, 'status': None}
2025-07-14 11:38:08,553 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'sml.svc/QTY_CHANGE', 'request': None, 'response': {'status_code': 400, 'text': '{\n   "error" : {\n      "code" : 805,\n      "message" : {\n         "lang" : "en-us",\n         "value" : "Semantic Layer exposure is not enabled."\n      }\n   }\n}\n'}, 'status': 'failure'}
2025-07-14 11:38:08,553 - sync_service - ERROR - Failed to get inventory changes from SAP: HTTP 400: {
   "error" : {
      "code" : 805,
      "message" : {
         "lang" : "en-us",
         "value" : "Semantic Layer exposure is not enabled."
      }
   }
}

2025-07-14 11:40:56,301 - sync_service - INFO - Initialized Shopify client for store: Local Store (local)
2025-07-14 11:40:56,335 - sync_service - INFO - Starting inventory sync using change-based tracking
2025-07-14 11:40:56,336 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'login', 'request': {'company': 'JudeBenHalim_Test', 'user': 'manager'}, 'response': None, 'status': None}
2025-07-14 11:40:57,105 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'login', 'request': None, 'response': {'status': 'success'}, 'status': 'success'}
2025-07-14 11:40:57,110 - sync_service - INFO - SAP login successful
2025-07-14 11:40:57,113 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'sml.svc/QTY_CHANGE', 'request': {'method': 'GET', 'url': 'https://10.0.0.100:50000/b1s/v1/sml.svc/QTY_CHANGE', 'data': None, 'params': {}}, 'response': None, 'status': None}
2025-07-14 11:40:57,807 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'sml.svc/QTY_CHANGE', 'request': None, 'response': {'status_code': 400, 'text': '{\n   "error" : {\n      "code" : 805,\n      "message" : {\n         "lang" : "en-us",\n         "value" : "Semantic Layer exposure is not enabled."\n      }\n   }\n}\n'}, 'status': 'failure'}
2025-07-14 11:40:57,811 - sync_service - ERROR - Failed to get inventory changes from SAP: HTTP 400: {
   "error" : {
      "code" : 805,
      "message" : {
         "lang" : "en-us",
         "value" : "Semantic Layer exposure is not enabled."
      }
   }
}

2025-07-14 11:42:07,877 - sync_service - INFO - Initialized Shopify client for store: Local Store (local)
2025-07-14 11:42:07,899 - sync_service - INFO - Starting inventory sync using change-based tracking
2025-07-14 11:42:07,902 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'login', 'request': {'company': 'JudeBenHalim_Test', 'user': 'manager'}, 'response': None, 'status': None}
2025-07-14 11:42:08,733 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'login', 'request': None, 'response': {'status': 'success'}, 'status': 'success'}
2025-07-14 11:42:08,735 - sync_service - INFO - SAP login successful
2025-07-14 11:42:08,736 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'sml.svc/QTY_CHANGE', 'request': {'method': 'GET', 'url': 'https://10.0.0.100:50000/b1s/v1/sml.svc/QTY_CHANGE', 'data': None, 'params': {}}, 'response': None, 'status': None}
2025-07-14 11:42:09,403 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'sml.svc/QTY_CHANGE', 'request': None, 'response': {'status_code': 400, 'text': '{\n   "error" : {\n      "code" : 805,\n      "message" : {\n         "lang" : "en-us",\n         "value" : "Semantic Layer exposure is not enabled."\n      }\n   }\n}\n'}, 'status': 'failure'}
2025-07-14 11:42:09,404 - sync_service - ERROR - Failed to get inventory changes from SAP: HTTP 400: {
   "error" : {
      "code" : 805,
      "message" : {
         "lang" : "en-us",
         "value" : "Semantic Layer exposure is not enabled."
      }
   }
}

2025-07-14 11:42:46,900 - sync_service - INFO - Initialized Shopify client for store: Local Store (local)
2025-07-14 11:42:46,920 - sync_service - INFO - Starting stock change sync using MASHURA_StockChangeB1SLQuery view
2025-07-14 11:42:46,921 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'login', 'request': {'company': 'JudeBenHalim_Test', 'user': 'manager'}, 'response': None, 'status': None}
2025-07-14 11:42:48,169 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'login', 'request': None, 'response': {'status': 'success'}, 'status': 'success'}
2025-07-14 11:42:48,170 - sync_service - INFO - SAP login successful
2025-07-14 11:42:48,170 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'view.svc/MASHURA_StockChangeB1SLQuery', 'request': {'method': 'GET', 'url': 'https://10.0.0.100:50000/b1s/v1/view.svc/MASHURA_StockChangeB1SLQuery', 'data': None, 'params': {'$top': 50}}, 'response': None, 'status': None}
2025-07-14 11:42:48,858 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'view.svc/MASHURA_StockChangeB1SLQuery', 'request': None, 'response': {'odata.metadata': 'https://10.0.0.100:50000/b1s/v1/view.svc/$metadata#MASHURA_StockChangeB1SLQuery', 'value': [{'ItemCode': 'FG-0000701', 'Variant_ID': '44394637557826', 'OnHand': 30.0, 'Available': 30.0, 'Location_ID': '68605345858', 'id__': 1}, {'ItemCode': 'FG-0000702', 'Variant_ID': '44394637590594', 'OnHand': 45.0, 'Available': 45.0, 'Location_ID': '68605345858', 'id__': 2}, {'ItemCode': 'FG-0000703', 'Variant_ID': '44394637623362', 'OnHand': 60.0, 'Available': 60.0, 'Location_ID': '68605345858', 'id__': 3}, {'ItemCode': 'FG-0000704', 'Variant_ID': '44396297355330', 'OnHand': 80.0, 'Available': 80.0, 'Location_ID': '68605345858', 'id__': 4}]}, 'status': 'success'}
2025-07-14 11:42:48,862 - sync_service - ERROR - Error updating inventory level for store local: 'ConfigSettings' object has no attribute 'get_store_config'
2025-07-14 11:42:49,550 - sync_service - INFO - SAP logging client login successful
2025-07-14 11:42:50,219 - sync_service - INFO - API log added to SAP: shopify - inventory_levels - failure
2025-07-14 11:42:50,330 - sync_service - ERROR - Error updating inventory level for store local: 'ConfigSettings' object has no attribute 'get_store_config'
2025-07-14 11:42:50,588 - sync_service - INFO - API log added to SAP: shopify - inventory_levels - failure
2025-07-14 11:42:50,701 - sync_service - ERROR - Error updating inventory level for store local: 'ConfigSettings' object has no attribute 'get_store_config'
2025-07-14 11:42:50,987 - sync_service - INFO - API log added to SAP: shopify - inventory_levels - failure
2025-07-14 11:42:51,103 - sync_service - ERROR - Error updating inventory level for store local: 'ConfigSettings' object has no attribute 'get_store_config'
2025-07-14 11:42:51,374 - sync_service - INFO - API log added to SAP: shopify - inventory_levels - failure
2025-07-14 11:42:51,478 - sync_service - INFO - Stock change sync completed: 4 processed, 0 successful, 4 errors
2025-07-14 11:44:22,628 - sync_service - INFO - Initialized Shopify client for store: Local Store (local)
2025-07-14 11:44:22,656 - sync_service - INFO - Starting stock change sync using MASHURA_StockChangeB1SLQuery view
2025-07-14 11:44:22,658 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'login', 'request': {'company': 'JudeBenHalim_Test', 'user': 'manager'}, 'response': None, 'status': None}
2025-07-14 11:44:23,405 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'login', 'request': None, 'response': {'status': 'success'}, 'status': 'success'}
2025-07-14 11:44:23,406 - sync_service - INFO - SAP login successful
2025-07-14 11:44:23,408 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'view.svc/MASHURA_StockChangeB1SLQuery', 'request': {'method': 'GET', 'url': 'https://10.0.0.100:50000/b1s/v1/view.svc/MASHURA_StockChangeB1SLQuery', 'data': None, 'params': {'$top': 50}}, 'response': None, 'status': None}
2025-07-14 11:44:24,017 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'view.svc/MASHURA_StockChangeB1SLQuery', 'request': None, 'response': {'odata.metadata': 'https://10.0.0.100:50000/b1s/v1/view.svc/$metadata#MASHURA_StockChangeB1SLQuery', 'value': [{'ItemCode': 'FG-0000701', 'Variant_ID': '44394637557826', 'OnHand': 30.0, 'Available': 30.0, 'Location_ID': '68605345858', 'id__': 1}, {'ItemCode': 'FG-0000702', 'Variant_ID': '44394637590594', 'OnHand': 45.0, 'Available': 45.0, 'Location_ID': '68605345858', 'id__': 2}, {'ItemCode': 'FG-0000703', 'Variant_ID': '44394637623362', 'OnHand': 60.0, 'Available': 60.0, 'Location_ID': '68605345858', 'id__': 3}, {'ItemCode': 'FG-0000704', 'Variant_ID': '44396297355330', 'OnHand': 80.0, 'Available': 80.0, 'Location_ID': '68605345858', 'id__': 4}]}, 'status': 'success'}
2025-07-14 11:44:24,020 - sync_service - ERROR - Error updating inventory level for store local: 'ConfigSettings' object has no attribute 'get_store_config'
2025-07-14 11:44:24,658 - sync_service - INFO - SAP logging client login successful
2025-07-14 11:44:25,258 - sync_service - INFO - API log added to SAP: shopify - inventory_levels - failure
2025-07-14 11:44:25,376 - sync_service - ERROR - Error updating inventory level for store local: 'ConfigSettings' object has no attribute 'get_store_config'
2025-07-14 11:44:25,616 - sync_service - INFO - API log added to SAP: shopify - inventory_levels - failure
2025-07-14 11:44:25,719 - sync_service - ERROR - Error updating inventory level for store local: 'ConfigSettings' object has no attribute 'get_store_config'
2025-07-14 11:44:25,988 - sync_service - INFO - API log added to SAP: shopify - inventory_levels - failure
2025-07-14 11:44:26,092 - sync_service - ERROR - Error updating inventory level for store local: 'ConfigSettings' object has no attribute 'get_store_config'
2025-07-14 11:44:26,358 - sync_service - INFO - API log added to SAP: shopify - inventory_levels - failure
2025-07-14 11:44:26,468 - sync_service - INFO - Stock change sync completed: 4 processed, 0 successful, 4 errors
2025-07-14 12:08:47,081 - sync_service - INFO - Initialized Shopify client for store: Local Store (local)
2025-07-14 12:08:48,057 - sync_service - INFO - Starting stock change sync using MASHURA_StockChangeB1SLQuery view
2025-07-14 12:08:48,085 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'login', 'request': {'company': 'JudeBenHalim_Test', 'user': 'manager'}, 'response': None, 'status': None}
2025-07-14 12:08:49,079 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'login', 'request': None, 'response': {'status': 'success'}, 'status': 'success'}
2025-07-14 12:08:49,081 - sync_service - INFO - SAP login successful
2025-07-14 12:08:49,083 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'view.svc/MASHURA_StockChangeB1SLQuery', 'request': {'method': 'GET', 'url': 'https://10.0.0.100:50000/b1s/v1/view.svc/MASHURA_StockChangeB1SLQuery', 'data': None, 'params': {'$top': 50}}, 'response': None, 'status': None}
2025-07-14 12:08:49,805 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'view.svc/MASHURA_StockChangeB1SLQuery', 'request': None, 'response': {'odata.metadata': 'https://10.0.0.100:50000/b1s/v1/view.svc/$metadata#MASHURA_StockChangeB1SLQuery', 'value': [{'ItemCode': 'FG-0000701', 'Variant_ID': '44394637557826', 'OnHand': 30.0, 'Available': 30.0, 'Location_ID': '68605345858', 'id__': 1}, {'ItemCode': 'FG-0000702', 'Variant_ID': '44394637590594', 'OnHand': 45.0, 'Available': 45.0, 'Location_ID': '68605345858', 'id__': 2}, {'ItemCode': 'FG-0000703', 'Variant_ID': '44394637623362', 'OnHand': 60.0, 'Available': 60.0, 'Location_ID': '68605345858', 'id__': 3}, {'ItemCode': 'FG-0000704', 'Variant_ID': '44396297355330', 'OnHand': 80.0, 'Available': 80.0, 'Location_ID': '68605345858', 'id__': 4}]}, 'status': 'success'}
2025-07-14 12:08:49,812 - sync_service - INFO - API Call: {'service': 'shopify', 'endpoint': 'rest_inventory_local', 'request': {'location_id': '68605345858', 'inventory_item_id': '44394637557826', 'available': 30.0}, 'response': None, 'status': None}
2025-07-14 12:09:01,651 - sync_service - INFO - API Call: {'service': 'shopify', 'endpoint': 'rest_inventory_local', 'request': None, 'response': {'error': 'HTTP 400: {"errors":{"available":"expected Float to be a Integer"}}'}, 'status': 'failure'}
2025-07-14 12:09:02,418 - sync_service - INFO - SAP logging client login successful
2025-07-14 12:09:03,085 - sync_service - INFO - API log added to SAP: shopify - inventory_levels - failure
2025-07-14 12:09:03,199 - sync_service - INFO - API Call: {'service': 'shopify', 'endpoint': 'rest_inventory_local', 'request': {'location_id': '68605345858', 'inventory_item_id': '44394637590594', 'available': 45.0}, 'response': None, 'status': None}
2025-07-14 12:09:03,725 - sync_service - INFO - API Call: {'service': 'shopify', 'endpoint': 'rest_inventory_local', 'request': None, 'response': {'error': 'HTTP 400: {"errors":{"available":"expected Float to be a Integer"}}'}, 'status': 'failure'}
2025-07-14 12:09:04,002 - sync_service - INFO - API log added to SAP: shopify - inventory_levels - failure
2025-07-14 12:09:04,109 - sync_service - INFO - API Call: {'service': 'shopify', 'endpoint': 'rest_inventory_local', 'request': {'location_id': '68605345858', 'inventory_item_id': '44394637623362', 'available': 60.0}, 'response': None, 'status': None}
2025-07-14 12:09:04,584 - sync_service - INFO - API Call: {'service': 'shopify', 'endpoint': 'rest_inventory_local', 'request': None, 'response': {'error': 'HTTP 400: {"errors":{"available":"expected Float to be a Integer"}}'}, 'status': 'failure'}
2025-07-14 12:09:04,854 - sync_service - INFO - API log added to SAP: shopify - inventory_levels - failure
2025-07-14 12:09:04,962 - sync_service - INFO - API Call: {'service': 'shopify', 'endpoint': 'rest_inventory_local', 'request': {'location_id': '68605345858', 'inventory_item_id': '44396297355330', 'available': 80.0}, 'response': None, 'status': None}
2025-07-14 12:09:05,480 - sync_service - INFO - API Call: {'service': 'shopify', 'endpoint': 'rest_inventory_local', 'request': None, 'response': {'error': 'HTTP 400: {"errors":{"available":"expected Float to be a Integer"}}'}, 'status': 'failure'}
2025-07-14 12:09:05,765 - sync_service - INFO - API log added to SAP: shopify - inventory_levels - failure
2025-07-14 12:09:05,880 - sync_service - INFO - Stock change sync completed: 4 processed, 0 successful, 4 errors
2025-07-14 12:09:53,100 - sync_service - INFO - Initialized Shopify client for store: Local Store (local)
2025-07-14 12:09:53,139 - sync_service - INFO - Starting stock change sync using MASHURA_StockChangeB1SLQuery view
2025-07-14 12:09:53,144 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'login', 'request': {'company': 'JudeBenHalim_Test', 'user': 'manager'}, 'response': None, 'status': None}
2025-07-14 12:09:53,884 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'login', 'request': None, 'response': {'status': 'success'}, 'status': 'success'}
2025-07-14 12:09:53,885 - sync_service - INFO - SAP login successful
2025-07-14 12:09:53,889 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'view.svc/MASHURA_StockChangeB1SLQuery', 'request': {'method': 'GET', 'url': 'https://10.0.0.100:50000/b1s/v1/view.svc/MASHURA_StockChangeB1SLQuery', 'data': None, 'params': {'$top': 50}}, 'response': None, 'status': None}
2025-07-14 12:09:54,560 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'view.svc/MASHURA_StockChangeB1SLQuery', 'request': None, 'response': {'odata.metadata': 'https://10.0.0.100:50000/b1s/v1/view.svc/$metadata#MASHURA_StockChangeB1SLQuery', 'value': [{'ItemCode': 'FG-0000701', 'Variant_ID': '44394637557826', 'OnHand': 30.0, 'Available': 30.0, 'Location_ID': '68605345858', 'id__': 1}, {'ItemCode': 'FG-0000702', 'Variant_ID': '44394637590594', 'OnHand': 45.0, 'Available': 45.0, 'Location_ID': '68605345858', 'id__': 2}, {'ItemCode': 'FG-0000703', 'Variant_ID': '44394637623362', 'OnHand': 60.0, 'Available': 60.0, 'Location_ID': '68605345858', 'id__': 3}, {'ItemCode': 'FG-0000704', 'Variant_ID': '44396297355330', 'OnHand': 80.0, 'Available': 80.0, 'Location_ID': '68605345858', 'id__': 4}]}, 'status': 'success'}
2025-07-14 12:09:54,565 - sync_service - INFO - API Call: {'service': 'shopify', 'endpoint': 'rest_inventory_local', 'request': {'location_id': '68605345858', 'inventory_item_id': '44394637557826', 'available': 30}, 'response': None, 'status': None}
2025-07-14 12:10:06,248 - sync_service - INFO - API Call: {'service': 'shopify', 'endpoint': 'rest_inventory_local', 'request': None, 'response': {'inventory_level': {'inventory_item_id': 44394637557826, 'location_id': 68605345858, 'available': 30, 'updated_at': '2025-07-14T12:10:06+03:00', 'admin_graphql_api_id': 'gid://shopify/InventoryLevel/103109591106?inventory_item_id=44394637557826'}}, 'status': 'success'}
2025-07-14 12:10:07,476 - sync_service - INFO - SAP logging client login successful
2025-07-14 12:10:08,109 - sync_service - INFO - API log added to SAP: shopify - inventory_levels - success
2025-07-14 12:10:08,228 - sync_service - INFO - API Call: {'service': 'shopify', 'endpoint': 'rest_inventory_local', 'request': {'location_id': '68605345858', 'inventory_item_id': '44394637590594', 'available': 45}, 'response': None, 'status': None}
2025-07-14 12:10:21,886 - sync_service - ERROR - Error updating inventory level for store local: All connection attempts failed
2025-07-14 12:10:22,211 - sync_service - INFO - API log added to SAP: shopify - inventory_levels - failure
2025-07-14 12:10:22,328 - sync_service - INFO - API Call: {'service': 'shopify', 'endpoint': 'rest_inventory_local', 'request': {'location_id': '68605345858', 'inventory_item_id': '44394637623362', 'available': 60}, 'response': None, 'status': None}
2025-07-14 12:10:34,042 - sync_service - INFO - API Call: {'service': 'shopify', 'endpoint': 'rest_inventory_local', 'request': None, 'response': {'inventory_level': {'inventory_item_id': 44394637623362, 'location_id': 68605345858, 'available': 60, 'updated_at': '2025-07-14T12:10:34+03:00', 'admin_graphql_api_id': 'gid://shopify/InventoryLevel/103109591106?inventory_item_id=44394637623362'}}, 'status': 'success'}
2025-07-14 12:10:34,848 - sync_service - INFO - API log added to SAP: shopify - inventory_levels - success
2025-07-14 12:10:34,955 - sync_service - INFO - API Call: {'service': 'shopify', 'endpoint': 'rest_inventory_local', 'request': {'location_id': '68605345858', 'inventory_item_id': '44396297355330', 'available': 80}, 'response': None, 'status': None}
2025-07-14 12:10:35,544 - sync_service - INFO - API Call: {'service': 'shopify', 'endpoint': 'rest_inventory_local', 'request': None, 'response': {'inventory_level': {'inventory_item_id': 44396297355330, 'location_id': 68605345858, 'available': 80, 'updated_at': '2025-07-14T12:10:35+03:00', 'admin_graphql_api_id': 'gid://shopify/InventoryLevel/103109591106?inventory_item_id=44396297355330'}}, 'status': 'success'}
2025-07-14 12:10:36,376 - sync_service - INFO - API log added to SAP: shopify - inventory_levels - success
2025-07-14 12:10:36,482 - sync_service - INFO - Stock change sync completed: 4 processed, 3 successful, 1 errors
2025-07-14 12:12:30,265 - sync_service - INFO - Initialized Shopify client for store: Local Store (local)
2025-07-14 12:12:30,270 - sync_service - INFO - Starting stock change sync using MASHURA_StockChangeB1SLQuery view
2025-07-14 12:12:30,271 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'login', 'request': {'company': 'JudeBenHalim_Test', 'user': 'manager'}, 'response': None, 'status': None}
2025-07-14 12:12:31,005 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'login', 'request': None, 'response': {'status': 'success'}, 'status': 'success'}
2025-07-14 12:12:31,008 - sync_service - INFO - SAP login successful
2025-07-14 12:12:31,011 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'view.svc/MASHURA_StockChangeB1SLQuery', 'request': {'method': 'GET', 'url': 'https://10.0.0.100:50000/b1s/v1/view.svc/MASHURA_StockChangeB1SLQuery', 'data': None, 'params': {'$top': 50}}, 'response': None, 'status': None}
2025-07-14 12:12:31,624 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'view.svc/MASHURA_StockChangeB1SLQuery', 'request': None, 'response': {'odata.metadata': 'https://10.0.0.100:50000/b1s/v1/view.svc/$metadata#MASHURA_StockChangeB1SLQuery', 'value': [{'ItemCode': 'FG-0000702', 'Variant_ID': '44394637590594', 'OnHand': 45.0, 'Available': 45.0, 'Location_ID': '68605345858', 'id__': 1}]}, 'status': 'success'}
2025-07-14 12:12:31,629 - sync_service - INFO - API Call: {'service': 'shopify', 'endpoint': 'rest_inventory_local', 'request': {'location_id': '68605345858', 'inventory_item_id': '44394637590594', 'available': 45}, 'response': None, 'status': None}
2025-07-14 12:12:32,195 - sync_service - INFO - API Call: {'service': 'shopify', 'endpoint': 'rest_inventory_local', 'request': None, 'response': {'inventory_level': {'inventory_item_id': 44394637590594, 'location_id': 68605345858, 'available': 45, 'updated_at': '2025-07-14T12:12:32+03:00', 'admin_graphql_api_id': 'gid://shopify/InventoryLevel/103109591106?inventory_item_id=44394637590594'}}, 'status': 'success'}
2025-07-14 12:12:33,357 - sync_service - INFO - SAP logging client login successful
2025-07-14 12:12:34,019 - sync_service - INFO - API log added to SAP: shopify - inventory_levels - success
2025-07-14 12:12:34,122 - sync_service - INFO - Stock change sync completed: 1 processed, 1 successful, 0 errors
2025-07-15 15:39:33,742 - sync_service - INFO - Initialized Shopify client for store: Local Store (local)
2025-07-15 15:39:33,814 - sync_service - INFO - Starting multi-store new items sync from SAP to Shopify
2025-07-15 15:39:35,436 - sync_service - INFO - SAP logging client login successful
2025-07-15 15:39:37,711 - sync_service - INFO - API log added to SAP: system - /sync/new_items_multi_store - success
2025-07-15 15:39:37,716 - sync_service - INFO - Fetching new items for store: local
2025-07-15 15:39:37,722 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'login', 'request': {'company': 'JudeBenHalim_Test', 'user': 'manager'}, 'response': None, 'status': None}
2025-07-15 15:39:39,159 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'login', 'request': None, 'response': {'status': 'success'}, 'status': 'success'}
2025-07-15 15:39:39,161 - sync_service - INFO - SAP login successful
2025-07-15 15:39:39,167 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': "view.svc/MASHURA_New_ItemsB1SLQuery?$filter=Shopify_Store eq 'local'&$orderby=MainProduct", 'request': {'method': 'GET', 'url': "https://10.0.0.100:50000/b1s/v1/view.svc/MASHURA_New_ItemsB1SLQuery?$filter=Shopify_Store eq 'local'&$orderby=MainProduct", 'data': None, 'params': None}, 'response': None, 'status': None}
2025-07-15 15:39:40,563 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': "view.svc/MASHURA_New_ItemsB1SLQuery?$filter=Shopify_Store eq 'local'&$orderby=MainProduct", 'request': None, 'response': {'odata.metadata': 'https://10.0.0.100:50000/b1s/v1/view.svc/$metadata#MASHURA_New_ItemsB1SLQuery', 'value': [{'itemcode': 'FG-0000705', 'ItemName': 'Morsi Bracelet', 'MainProduct': None, 'Color': None, 'OnHand': 20.0, 'IsCommited': 0.0, 'Available': 20.0, 'Price': 2500.0, 'Status': 'new', 'Shopify_ProductCode': '', 'Shopify_Store': 'local', 'id__': 1}]}, 'status': 'success'}
2025-07-15 15:39:40,573 - sync_service - INFO - Product group: ('FG-0000705', 'local') has 1 items
2025-07-15 15:39:40,576 - sync_service - INFO - Grouped 1 items into 1 product groups for store local
2025-07-15 15:39:40,588 - sync_service - INFO - Processing product group: ('FG-0000705', 'local') with 1 items for store local
2025-07-15 15:39:41,625 - sync_service - ERROR - Failed to add API log to SAP: HTTP 400: {
   "error" : {
      "code" : -1,
      "message" : {
         "lang" : "en-us",
         "value" : "CServiceData::SetPropertyValueString failed; Value too long in property 'U_Action' of 'U_API_LOG'"
      }
   }
}

2025-07-15 15:39:41,628 - sync_service - ERROR - Error checking existing product in store local: 'NoneType' object has no attribute 'lower'
2025-07-15 15:39:41,630 - sync_service - ERROR - Failed to check existing product in store local: 'NoneType' object has no attribute 'lower'
2025-07-15 15:39:41,631 - sync_service - INFO - Sync Event: {'sync_type': 'multi_store_new_items_sap_to_shopify', 'items_processed': 0, 'success_count': 0, 'error_count': 1, 'details': None}
2025-07-15 15:39:42,926 - sync_service - INFO - API log added to SAP: system - /sync/new_items_multi_store - success
2025-07-15 15:39:42,931 - sync_service - INFO - Multi-store new items sync completed: 0 processed, 0 successful, 1 errors
2025-07-15 15:41:00,629 - sync_service - INFO - Initialized Shopify client for store: Local Store (local)
2025-07-15 15:41:00,637 - sync_service - INFO - Starting multi-store new items sync from SAP to Shopify
2025-07-15 15:41:02,182 - sync_service - INFO - SAP logging client login successful
2025-07-15 15:41:03,685 - sync_service - INFO - API log added to SAP: system - /sync/new_items_multi_store - success
2025-07-15 15:41:03,687 - sync_service - INFO - Fetching new items for store: local
2025-07-15 15:41:03,688 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'login', 'request': {'company': 'JudeBenHalim_Test', 'user': 'manager'}, 'response': None, 'status': None}
2025-07-15 15:41:05,117 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'login', 'request': None, 'response': {'status': 'success'}, 'status': 'success'}
2025-07-15 15:41:05,117 - sync_service - INFO - SAP login successful
2025-07-15 15:41:05,118 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': "view.svc/MASHURA_New_ItemsB1SLQuery?$filter=Shopify_Store eq 'local'&$orderby=MainProduct", 'request': {'method': 'GET', 'url': "https://10.0.0.100:50000/b1s/v1/view.svc/MASHURA_New_ItemsB1SLQuery?$filter=Shopify_Store eq 'local'&$orderby=MainProduct", 'data': None, 'params': None}, 'response': None, 'status': None}
2025-07-15 15:41:06,584 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': "view.svc/MASHURA_New_ItemsB1SLQuery?$filter=Shopify_Store eq 'local'&$orderby=MainProduct", 'request': None, 'response': {'odata.metadata': 'https://10.0.0.100:50000/b1s/v1/view.svc/$metadata#MASHURA_New_ItemsB1SLQuery', 'value': [{'itemcode': 'FG-0000705', 'ItemName': 'Morsi Bracelet', 'MainProduct': None, 'Color': None, 'OnHand': 20.0, 'IsCommited': 0.0, 'Available': 20.0, 'Price': 2500.0, 'Status': 'new', 'Shopify_ProductCode': '', 'Shopify_Store': 'local', 'id__': 1}]}, 'status': 'success'}
2025-07-15 15:41:06,586 - sync_service - INFO - Product group: ('FG-0000705', 'local') has 1 items
2025-07-15 15:41:06,587 - sync_service - INFO - Grouped 1 items into 1 product groups for store local
2025-07-15 15:41:06,588 - sync_service - INFO - Processing product group: ('FG-0000705', 'local') with 1 items for store local
2025-07-15 15:41:07,616 - sync_service - INFO - API log added to SAP: shopify - /admin/api/graphql_local - success
2025-07-15 15:41:07,617 - sync_service - INFO - API Call: {'service': 'shopify', 'endpoint': 'graphql_local', 'request': {'query': '\n        query GetProductByHandle($handle: String!) {\n            productByHandle(handle: $handle) {\n                id\n                title\n                handle\n                description\n                variants(first: 50) {\n                    edges {\n                        node {\n                            id\n                            sku\n                            price\n                            inventoryItem {\n                                id\n                            }\n                            selectedOptions {\n                                name\n                                value\n                            }\n                        }\n                    }\n                }\n            }\n        }\n        ', 'variables': {'handle': 'default'}}, 'response': None, 'status': None}
2025-07-15 15:41:17,621 - sync_service - ERROR - GraphQL query error for store local: 
2025-07-15 15:41:19,149 - sync_service - INFO - API log added to SAP: shopify - /admin/api/graphql_local - success
2025-07-15 15:41:19,150 - sync_service - INFO - Product None doesn't exist in store local, creating new product
2025-07-15 15:41:20,485 - sync_service - INFO - API log added to SAP: shopify - /admin/api/graphql_local - success
2025-07-15 15:41:20,486 - sync_service - INFO - API Call: {'service': 'shopify', 'endpoint': 'graphql_local', 'request': {'query': '\n        mutation productCreate($input: ProductInput!) {\n            productCreate(input: $input) {\n                product {\n                    id\n                    title\n                    handle\n                    variants(first: 50) {\n                        edges {\n                            node {\n                                id\n                                sku\n                                inventoryItem {\n                                    id\n                                }\n                                selectedOptions {\n                                    name\n                                    value\n                                }\n                            }\n                        }\n                    }\n                }\n                userErrors {\n                    field\n                    message\n                }\n            }\n        }\n        ', 'variables': {'input': {'title': 'Morsi Bracelet', 'descriptionHtml': '', 'vendor': '', 'productType': 'Default', 'status': 'DRAFT', 'tags': [], 'productCode': 'FG-0000705', 'variants': [{'price': '2500.0', 'inventoryPolicy': 'DENY', 'inventoryManagement': 'SHOPIFY', 'inventoryQuantities': [{'availableQuantity': 10, 'locationId': 'gid://shopify/Location/68605345858'}], 'weight': 0.0, 'weightUnit': 'KILOGRAMS'}], 'seo': {'title': 'Morsi Bracelet', 'description': ''}}}}, 'response': None, 'status': None}
2025-07-15 15:41:20,962 - sync_service - ERROR - GraphQL query error for store local: {'message': 'Variable $input of type ProductInput! was provided invalid value for productCode (Field is not defined on ProductInput)', 'locations': [{'line': 1, 'column': 24}], 'extensions': {'value': {'title': 'Morsi Bracelet', 'descriptionHtml': '', 'vendor': '', 'productType': 'Default', 'status': 'DRAFT', 'tags': [], 'productCode': 'FG-0000705', 'variants': [{'price': '2500.0', 'inventoryPolicy': 'DENY', 'inventoryManagement': 'SHOPIFY', 'inventoryQuantities': [{'availableQuantity': 10, 'locationId': 'gid://shopify/Location/68605345858'}], 'weight': 0.0, 'weightUnit': 'KILOGRAMS'}], 'seo': {'title': 'Morsi Bracelet', 'description': ''}}, 'problems': [{'path': ['productCode'], 'explanation': 'Field is not defined on ProductInput'}]}}
GraphQL Errors: [
  {
    "message": "Variable $input of type ProductInput! was provided invalid value for productCode (Field is not defined on ProductInput)",
    "locations": [
      {
        "line": 1,
        "column": 24
      }
    ],
    "extensions": {
      "value": {
        "title": "Morsi Bracelet",
        "descriptionHtml": "",
        "vendor": "",
        "productType": "Default",
        "status": "DRAFT",
        "tags": [],
        "productCode": "FG-0000705",
        "variants": [
          {
            "price": "2500.0",
            "inventoryPolicy": "DENY",
            "inventoryManagement": "SHOPIFY",
            "inventoryQuantities": [
              {
                "availableQuantity": 10,
                "locationId": "gid://shopify/Location/68605345858"
              }
            ],
            "weight": 0.0,
            "weightUnit": "KILOGRAMS"
          }
        ],
        "seo": {
          "title": "Morsi Bracelet",
          "description": ""
        }
      },
      "problems": [
        {
          "path": [
            "productCode"
          ],
          "explanation": "Field is not defined on ProductInput"
        }
      ]
    }
  }
]
2025-07-15 15:41:22,494 - sync_service - ERROR - Failed to add API log to SAP: HTTP 400: {
   "error" : {
      "code" : -1,
      "message" : {
         "lang" : "en-us",
         "value" : "CServiceData::SetPropertyValueString failed; Value too long in property 'U_Value' of 'U_API_LOG'"
      }
   }
}

2025-07-15 15:41:22,495 - sync_service - ERROR - Shopify full response for store local: {'msg': 'failure', 'error': 'GraphQL query error for store local: {\'message\': \'Variable $input of type ProductInput! was provided invalid value for productCode (Field is not defined on ProductInput)\', \'locations\': [{\'line\': 1, \'column\': 24}], \'extensions\': {\'value\': {\'title\': \'Morsi Bracelet\', \'descriptionHtml\': \'\', \'vendor\': \'\', \'productType\': \'Default\', \'status\': \'DRAFT\', \'tags\': [], \'productCode\': \'FG-0000705\', \'variants\': [{\'price\': \'2500.0\', \'inventoryPolicy\': \'DENY\', \'inventoryManagement\': \'SHOPIFY\', \'inventoryQuantities\': [{\'availableQuantity\': 10, \'locationId\': \'gid://shopify/Location/68605345858\'}], \'weight\': 0.0, \'weightUnit\': \'KILOGRAMS\'}], \'seo\': {\'title\': \'Morsi Bracelet\', \'description\': \'\'}}, \'problems\': [{\'path\': [\'productCode\'], \'explanation\': \'Field is not defined on ProductInput\'}]}}\nGraphQL Errors: [\n  {\n    "message": "Variable $input of type ProductInput! was provided invalid value for productCode (Field is not defined on ProductInput)",\n    "locations": [\n      {\n        "line": 1,\n        "column": 24\n      }\n    ],\n    "extensions": {\n      "value": {\n        "title": "Morsi Bracelet",\n        "descriptionHtml": "",\n        "vendor": "",\n        "productType": "Default",\n        "status": "DRAFT",\n        "tags": [],\n        "productCode": "FG-0000705",\n        "variants": [\n          {\n            "price": "2500.0",\n            "inventoryPolicy": "DENY",\n            "inventoryManagement": "SHOPIFY",\n            "inventoryQuantities": [\n              {\n                "availableQuantity": 10,\n                "locationId": "gid://shopify/Location/68605345858"\n              }\n            ],\n            "weight": 0.0,\n            "weightUnit": "KILOGRAMS"\n          }\n        ],\n        "seo": {\n          "title": "Morsi Bracelet",\n          "description": ""\n        }\n      },\n      "problems": [\n        {\n          "path": [\n            "productCode"\n          ],\n          "explanation": "Field is not defined on ProductInput"\n        }\n      ]\n    }\n  }\n]'}
2025-07-15 15:41:23,509 - sync_service - ERROR - Failed to add API log to SAP: HTTP 400: {
   "error" : {
      "code" : -1,
      "message" : {
         "lang" : "en-us",
         "value" : "CServiceData::SetPropertyValueString failed; Value too long in property 'U_Value' of 'U_API_LOG'"
      }
   }
}

2025-07-15 15:41:23,510 - sync_service - ERROR - Failed to create product in store local: GraphQL query error for store local: {'message': 'Variable $input of type ProductInput! was provided invalid value for productCode (Field is not defined on ProductInput)', 'locations': [{'line': 1, 'column': 24}], 'extensions': {'value': {'title': 'Morsi Bracelet', 'descriptionHtml': '', 'vendor': '', 'productType': 'Default', 'status': 'DRAFT', 'tags': [], 'productCode': 'FG-0000705', 'variants': [{'price': '2500.0', 'inventoryPolicy': 'DENY', 'inventoryManagement': 'SHOPIFY', 'inventoryQuantities': [{'availableQuantity': 10, 'locationId': 'gid://shopify/Location/68605345858'}], 'weight': 0.0, 'weightUnit': 'KILOGRAMS'}], 'seo': {'title': 'Morsi Bracelet', 'description': ''}}, 'problems': [{'path': ['productCode'], 'explanation': 'Field is not defined on ProductInput'}]}}
GraphQL Errors: [
  {
    "message": "Variable $input of type ProductInput! was provided invalid value for productCode (Field is not defined on ProductInput)",
    "locations": [
      {
        "line": 1,
        "column": 24
      }
    ],
    "extensions": {
      "value": {
        "title": "Morsi Bracelet",
        "descriptionHtml": "",
        "vendor": "",
        "productType": "Default",
        "status": "DRAFT",
        "tags": [],
        "productCode": "FG-0000705",
        "variants": [
          {
            "price": "2500.0",
            "inventoryPolicy": "DENY",
            "inventoryManagement": "SHOPIFY",
            "inventoryQuantities": [
              {
                "availableQuantity": 10,
                "locationId": "gid://shopify/Location/68605345858"
              }
            ],
            "weight": 0.0,
            "weightUnit": "KILOGRAMS"
          }
        ],
        "seo": {
          "title": "Morsi Bracelet",
          "description": ""
        }
      },
      "problems": [
        {
          "path": [
            "productCode"
          ],
          "explanation": "Field is not defined on ProductInput"
        }
      ]
    }
  }
]
2025-07-15 15:41:23,511 - sync_service - INFO - Sync Event: {'sync_type': 'multi_store_new_items_sap_to_shopify', 'items_processed': 0, 'success_count': 0, 'error_count': 1, 'details': None}
2025-07-15 15:41:25,004 - sync_service - INFO - API log added to SAP: system - /sync/new_items_multi_store - success
2025-07-15 15:41:25,018 - sync_service - INFO - Multi-store new items sync completed: 0 processed, 0 successful, 1 errors
2025-07-15 15:42:35,861 - sync_service - INFO - Initialized Shopify client for store: Local Store (local)
2025-07-15 15:42:35,878 - sync_service - INFO - Starting multi-store new items sync from SAP to Shopify
2025-07-15 15:42:37,392 - sync_service - INFO - SAP logging client login successful
2025-07-15 15:42:38,851 - sync_service - INFO - API log added to SAP: system - /sync/new_items_multi_store - success
2025-07-15 15:42:38,853 - sync_service - INFO - Fetching new items for store: local
2025-07-15 15:42:38,856 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'login', 'request': {'company': 'JudeBenHalim_Test', 'user': 'manager'}, 'response': None, 'status': None}
2025-07-15 15:42:40,292 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'login', 'request': None, 'response': {'status': 'success'}, 'status': 'success'}
2025-07-15 15:42:40,294 - sync_service - INFO - SAP login successful
2025-07-15 15:42:40,297 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': "view.svc/MASHURA_New_ItemsB1SLQuery?$filter=Shopify_Store eq 'local'&$orderby=MainProduct", 'request': {'method': 'GET', 'url': "https://10.0.0.100:50000/b1s/v1/view.svc/MASHURA_New_ItemsB1SLQuery?$filter=Shopify_Store eq 'local'&$orderby=MainProduct", 'data': None, 'params': None}, 'response': None, 'status': None}
2025-07-15 15:42:41,720 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': "view.svc/MASHURA_New_ItemsB1SLQuery?$filter=Shopify_Store eq 'local'&$orderby=MainProduct", 'request': None, 'response': {'odata.metadata': 'https://10.0.0.100:50000/b1s/v1/view.svc/$metadata#MASHURA_New_ItemsB1SLQuery', 'value': [{'itemcode': 'FG-0000705', 'ItemName': 'Morsi Bracelet', 'MainProduct': None, 'Color': None, 'OnHand': 20.0, 'IsCommited': 0.0, 'Available': 20.0, 'Price': 2500.0, 'Status': 'new', 'Shopify_ProductCode': '', 'Shopify_Store': 'local', 'id__': 1}]}, 'status': 'success'}
2025-07-15 15:42:41,723 - sync_service - INFO - Product group: ('FG-0000705', 'local') has 1 items
2025-07-15 15:42:41,724 - sync_service - INFO - Grouped 1 items into 1 product groups for store local
2025-07-15 15:42:41,725 - sync_service - INFO - Processing product group: ('FG-0000705', 'local') with 1 items for store local
2025-07-15 15:42:43,156 - sync_service - INFO - API log added to SAP: shopify - /admin/api/graphql_local - success
2025-07-15 15:42:43,157 - sync_service - INFO - API Call: {'service': 'shopify', 'endpoint': 'graphql_local', 'request': {'query': '\n        query GetProductByHandle($handle: String!) {\n            productByHandle(handle: $handle) {\n                id\n                title\n                handle\n                description\n                variants(first: 50) {\n                    edges {\n                        node {\n                            id\n                            sku\n                            price\n                            inventoryItem {\n                                id\n                            }\n                            selectedOptions {\n                                name\n                                value\n                            }\n                        }\n                    }\n                }\n            }\n        }\n        ', 'variables': {'handle': 'default'}}, 'response': None, 'status': None}
2025-07-15 15:42:43,601 - sync_service - INFO - API Call: {'service': 'shopify', 'endpoint': 'graphql_local', 'request': None, 'response': {'productByHandle': None}, 'status': 'success'}
2025-07-15 15:42:44,833 - sync_service - INFO - API log added to SAP: shopify - /admin/api/graphql_local - success
2025-07-15 15:42:44,835 - sync_service - INFO - Product None doesn't exist in store local, creating new product
2025-07-15 15:42:46,442 - sync_service - INFO - API log added to SAP: shopify - /admin/api/graphql_local - success
2025-07-15 15:42:46,446 - sync_service - INFO - API Call: {'service': 'shopify', 'endpoint': 'graphql_local', 'request': {'query': '\n        mutation productCreate($input: ProductInput!) {\n            productCreate(input: $input) {\n                product {\n                    id\n                    title\n                    handle\n                    variants(first: 50) {\n                        edges {\n                            node {\n                                id\n                                sku\n                                inventoryItem {\n                                    id\n                                }\n                                selectedOptions {\n                                    name\n                                    value\n                                }\n                            }\n                        }\n                    }\n                }\n                userErrors {\n                    field\n                    message\n                }\n            }\n        }\n        ', 'variables': {'input': {'title': 'Morsi Bracelet', 'descriptionHtml': '', 'vendor': '', 'productType': 'Default', 'status': 'DRAFT', 'tags': [], 'variants': [{'sku': 'FG-0000705', 'price': '2500.0', 'inventoryPolicy': 'DENY', 'inventoryManagement': 'SHOPIFY', 'inventoryQuantities': [{'availableQuantity': 10, 'locationId': 'gid://shopify/Location/68605345858'}], 'weight': 0.0, 'weightUnit': 'KILOGRAMS'}], 'seo': {'title': 'Morsi Bracelet', 'description': ''}}}}, 'response': None, 'status': None}
2025-07-15 15:42:56,440 - sync_service - ERROR - GraphQL query error for store local: 
2025-07-15 15:42:56,443 - sync_service - ERROR - Shopify full response for store local: {'msg': 'failure', 'error': 'GraphQL query error for store local: '}
2025-07-15 15:42:57,617 - sync_service - INFO - API log added to SAP: shopify - /admin/api/graphql_local - failure
2025-07-15 15:42:57,620 - sync_service - ERROR - Failed to create product in store local: GraphQL query error for store local: 
2025-07-15 15:42:57,622 - sync_service - INFO - Sync Event: {'sync_type': 'multi_store_new_items_sap_to_shopify', 'items_processed': 0, 'success_count': 0, 'error_count': 1, 'details': None}
2025-07-15 15:42:58,693 - sync_service - INFO - API log added to SAP: system - /sync/new_items_multi_store - success
2025-07-15 15:42:58,697 - sync_service - INFO - Multi-store new items sync completed: 0 processed, 0 successful, 1 errors
2025-07-15 15:43:18,757 - sync_service - INFO - Initialized Shopify client for store: Local Store (local)
2025-07-15 15:43:18,773 - sync_service - INFO - Starting multi-store new items sync from SAP to Shopify
2025-07-15 15:43:20,355 - sync_service - INFO - SAP logging client login successful
2025-07-15 15:43:22,717 - sync_service - INFO - API log added to SAP: system - /sync/new_items_multi_store - success
2025-07-15 15:43:22,717 - sync_service - INFO - Fetching new items for store: local
2025-07-15 15:43:22,719 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'login', 'request': {'company': 'JudeBenHalim_Test', 'user': 'manager'}, 'response': None, 'status': None}
2025-07-15 15:43:24,157 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'login', 'request': None, 'response': {'status': 'success'}, 'status': 'success'}
2025-07-15 15:43:24,158 - sync_service - INFO - SAP login successful
2025-07-15 15:43:24,161 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': "view.svc/MASHURA_New_ItemsB1SLQuery?$filter=Shopify_Store eq 'local'&$orderby=MainProduct", 'request': {'method': 'GET', 'url': "https://10.0.0.100:50000/b1s/v1/view.svc/MASHURA_New_ItemsB1SLQuery?$filter=Shopify_Store eq 'local'&$orderby=MainProduct", 'data': None, 'params': None}, 'response': None, 'status': None}
2025-07-15 15:43:25,512 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': "view.svc/MASHURA_New_ItemsB1SLQuery?$filter=Shopify_Store eq 'local'&$orderby=MainProduct", 'request': None, 'response': {'odata.metadata': 'https://10.0.0.100:50000/b1s/v1/view.svc/$metadata#MASHURA_New_ItemsB1SLQuery', 'value': [{'itemcode': 'FG-0000705', 'ItemName': 'Morsi Bracelet', 'MainProduct': None, 'Color': None, 'OnHand': 20.0, 'IsCommited': 0.0, 'Available': 20.0, 'Price': 2500.0, 'Status': 'new', 'Shopify_ProductCode': '', 'Shopify_Store': 'local', 'id__': 1}]}, 'status': 'success'}
2025-07-15 15:43:25,516 - sync_service - INFO - Product group: ('FG-0000705', 'local') has 1 items
2025-07-15 15:43:25,518 - sync_service - INFO - Grouped 1 items into 1 product groups for store local
2025-07-15 15:43:25,519 - sync_service - INFO - Processing product group: ('FG-0000705', 'local') with 1 items for store local
2025-07-15 15:43:26,998 - sync_service - INFO - API log added to SAP: shopify - /admin/api/graphql_local - success
2025-07-15 15:43:27,003 - sync_service - INFO - API Call: {'service': 'shopify', 'endpoint': 'graphql_local', 'request': {'query': '\n        query GetProductByHandle($handle: String!) {\n            productByHandle(handle: $handle) {\n                id\n                title\n                handle\n                description\n                variants(first: 50) {\n                    edges {\n                        node {\n                            id\n                            sku\n                            price\n                            inventoryItem {\n                                id\n                            }\n                            selectedOptions {\n                                name\n                                value\n                            }\n                        }\n                    }\n                }\n            }\n        }\n        ', 'variables': {'handle': 'default'}}, 'response': None, 'status': None}
2025-07-15 15:43:27,518 - sync_service - INFO - API Call: {'service': 'shopify', 'endpoint': 'graphql_local', 'request': None, 'response': {'productByHandle': None}, 'status': 'success'}
2025-07-15 15:43:28,838 - sync_service - INFO - API log added to SAP: shopify - /admin/api/graphql_local - success
2025-07-15 15:43:28,840 - sync_service - INFO - Product None doesn't exist in store local, creating new product
2025-07-15 15:43:29,861 - sync_service - INFO - API log added to SAP: shopify - /admin/api/graphql_local - success
2025-07-15 15:43:29,865 - sync_service - INFO - API Call: {'service': 'shopify', 'endpoint': 'graphql_local', 'request': {'query': '\n        mutation productCreate($input: ProductInput!) {\n            productCreate(input: $input) {\n                product {\n                    id\n                    title\n                    handle\n                    variants(first: 50) {\n                        edges {\n                            node {\n                                id\n                                sku\n                                inventoryItem {\n                                    id\n                                }\n                                selectedOptions {\n                                    name\n                                    value\n                                }\n                            }\n                        }\n                    }\n                }\n                userErrors {\n                    field\n                    message\n                }\n            }\n        }\n        ', 'variables': {'input': {'title': 'Morsi Bracelet', 'descriptionHtml': '', 'vendor': '', 'productType': 'Default', 'status': 'DRAFT', 'tags': [], 'variants': [{'sku': 'FG-0000705', 'price': '2500.0', 'inventoryPolicy': 'DENY', 'inventoryManagement': 'SHOPIFY', 'weight': 0.0, 'weightUnit': 'KILOGRAMS'}], 'seo': {'title': 'Morsi Bracelet', 'description': ''}}}}, 'response': None, 'status': None}
2025-07-15 15:43:30,661 - sync_service - INFO - API Call: {'service': 'shopify', 'endpoint': 'graphql_local', 'request': None, 'response': {'productCreate': {'product': {'id': 'gid://shopify/Product/7513818890306', 'title': 'Morsi Bracelet', 'handle': 'morsi-bracelet', 'variants': {'edges': [{'node': {'id': 'gid://shopify/ProductVariant/42311996735554', 'sku': 'FG-0000705', 'inventoryItem': {'id': 'gid://shopify/InventoryItem/44412903227458'}, 'selectedOptions': [{'name': 'Title', 'value': 'Default Title'}]}}]}}, 'userErrors': []}}, 'status': 'success'}
2025-07-15 15:43:30,664 - sync_service - ERROR - Shopify full response for store local: {'msg': 'success', 'data': {'productCreate': {'product': {'id': 'gid://shopify/Product/7513818890306', 'title': 'Morsi Bracelet', 'handle': 'morsi-bracelet', 'variants': {'edges': [{'node': {'id': 'gid://shopify/ProductVariant/42311996735554', 'sku': 'FG-0000705', 'inventoryItem': {'id': 'gid://shopify/InventoryItem/44412903227458'}, 'selectedOptions': [{'name': 'Title', 'value': 'Default Title'}]}}]}}, 'userErrors': []}}}
2025-07-15 15:43:31,669 - sync_service - INFO - API log added to SAP: shopify - /admin/api/graphql_local - success
2025-07-15 15:43:31,672 - sync_service - INFO - Successfully created product in store local
2025-07-15 15:43:33,156 - sync_service - INFO - API log added to SAP: sap - /U_SHOPIFY_MAPPING - success
2025-07-15 15:43:33,158 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'U_SHOPIFY_MAPPING', 'request': {'method': 'POST', 'url': 'https://10.0.0.100:50000/b1s/v1/U_SHOPIFY_MAPPING', 'data': {'Code': '7513818890306', 'Name': '7513818890306', 'U_Shopify_Type': 'product', 'U_SAP_Code': None, 'U_Shopify_Store': 'local', 'U_SAP_Type': 'item'}, 'params': None}, 'response': None, 'status': None}
2025-07-15 15:43:34,131 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'U_SHOPIFY_MAPPING', 'request': None, 'response': {'odata.metadata': 'https://10.0.0.100:50000/b1s/v1/$metadata#U_SHOPIFY_MAPPING/@Element', 'Code': '7513818890306', 'Name': '7513818890306', 'U_Shopify_Type': 'product', 'U_SAP_Code': None, 'U_SAP_Type': 'item', 'U_Shopify_Store': 'local'}, 'status': 'success'}
2025-07-15 15:43:35,094 - sync_service - INFO - API log added to SAP: sap - /U_SHOPIFY_MAPPING - success
2025-07-15 15:43:36,288 - sync_service - INFO - API log added to SAP: sap - /U_SHOPIFY_MAPPING - success
2025-07-15 15:43:36,288 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'U_SHOPIFY_MAPPING', 'request': {'method': 'POST', 'url': 'https://10.0.0.100:50000/b1s/v1/U_SHOPIFY_MAPPING', 'data': {'Code': '42311996735554', 'Name': '42311996735554', 'U_Shopify_Type': 'variant', 'U_SAP_Code': 'FG-0000705', 'U_Shopify_Store': 'local', 'U_SAP_Type': 'item'}, 'params': None}, 'response': None, 'status': None}
2025-07-15 15:43:37,501 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'U_SHOPIFY_MAPPING', 'request': None, 'response': {'odata.metadata': 'https://10.0.0.100:50000/b1s/v1/$metadata#U_SHOPIFY_MAPPING/@Element', 'Code': '42311996735554', 'Name': '42311996735554', 'U_Shopify_Type': 'variant', 'U_SAP_Code': 'FG-0000705', 'U_SAP_Type': 'item', 'U_Shopify_Store': 'local'}, 'status': 'success'}
2025-07-15 15:43:38,892 - sync_service - INFO - API log added to SAP: sap - /U_SHOPIFY_MAPPING - success
2025-07-15 15:43:39,851 - sync_service - ERROR - Failed to add API log to SAP: HTTP 400: {
   "error" : {
      "code" : -1,
      "message" : {
         "lang" : "en-us",
         "value" : "CServiceData::SetPropertyValueString failed; Value too long in property 'U_Action' of 'U_API_LOG'"
      }
   }
}

2025-07-15 15:43:39,853 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'U_SHOPIFY_MAPPING', 'request': {'method': 'POST', 'url': 'https://10.0.0.100:50000/b1s/v1/U_SHOPIFY_MAPPING', 'data': {'Code': '44412903227458', 'Name': '44412903227458', 'U_Shopify_Type': 'variant_inventory', 'U_SAP_Code': 'FG-0000705', 'U_Shopify_Store': 'local', 'U_SAP_Type': 'item'}, 'params': None}, 'response': None, 'status': None}
2025-07-15 15:43:40,816 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'U_SHOPIFY_MAPPING', 'request': None, 'response': {'odata.metadata': 'https://10.0.0.100:50000/b1s/v1/$metadata#U_SHOPIFY_MAPPING/@Element', 'Code': '44412903227458', 'Name': '44412903227458', 'U_Shopify_Type': 'variant_inventory', 'U_SAP_Code': 'FG-0000705', 'U_SAP_Type': 'item', 'U_Shopify_Store': 'local'}, 'status': 'success'}
2025-07-15 15:43:41,772 - sync_service - ERROR - Failed to add API log to SAP: HTTP 400: {
   "error" : {
      "code" : -1,
      "message" : {
         "lang" : "en-us",
         "value" : "CServiceData::SetPropertyValueString failed; Value too long in property 'U_Action' of 'U_API_LOG'"
      }
   }
}

2025-07-15 15:43:42,291 - sync_service - INFO - Sync Event: {'sync_type': 'multi_store_new_items_sap_to_shopify', 'items_processed': 1, 'success_count': 1, 'error_count': 0, 'details': None}
2025-07-15 15:43:43,687 - sync_service - INFO - API log added to SAP: system - /sync/new_items_multi_store - success
2025-07-15 15:43:43,688 - sync_service - INFO - Multi-store new items sync completed: 1 processed, 1 successful, 0 errors
2025-07-15 15:44:14,208 - sync_service - INFO - Initialized Shopify client for store: Local Store (local)
2025-07-15 15:44:14,245 - sync_service - INFO - Starting stock change sync using MASHURA_StockChangeB1SLQuery view
2025-07-15 15:44:14,247 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'login', 'request': {'company': 'JudeBenHalim_Test', 'user': 'manager'}, 'response': None, 'status': None}
2025-07-15 15:44:15,923 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'login', 'request': None, 'response': {'status': 'success'}, 'status': 'success'}
2025-07-15 15:44:15,924 - sync_service - INFO - SAP login successful
2025-07-15 15:44:15,928 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'view.svc/MASHURA_StockChangeB1SLQuery', 'request': {'method': 'GET', 'url': 'https://10.0.0.100:50000/b1s/v1/view.svc/MASHURA_StockChangeB1SLQuery', 'data': None, 'params': {'$top': 50}}, 'response': None, 'status': None}
2025-07-15 15:44:17,282 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'view.svc/MASHURA_StockChangeB1SLQuery', 'request': None, 'response': {'odata.metadata': 'https://10.0.0.100:50000/b1s/v1/view.svc/$metadata#MASHURA_StockChangeB1SLQuery', 'value': [{'ItemCode': 'FG-0000705', 'Variant_ID': '44412903227458', 'OnHand': 20.0, 'Available': 20.0, 'Location_ID': '68605345858', 'id__': 1}]}, 'status': 'success'}
2025-07-15 15:44:17,287 - sync_service - INFO - API Call: {'service': 'shopify', 'endpoint': 'rest_inventory_local', 'request': {'location_id': '68605345858', 'inventory_item_id': '44412903227458', 'available': 20}, 'response': None, 'status': None}
2025-07-15 15:44:17,838 - sync_service - INFO - API Call: {'service': 'shopify', 'endpoint': 'rest_inventory_local', 'request': None, 'response': {'inventory_level': {'inventory_item_id': 44412903227458, 'location_id': 68605345858, 'available': 20, 'updated_at': '2025-07-15T15:44:18+03:00', 'admin_graphql_api_id': 'gid://shopify/InventoryLevel/103109591106?inventory_item_id=44412903227458'}}, 'status': 'success'}
2025-07-15 15:44:20,608 - sync_service - INFO - SAP logging client login successful
2025-07-15 15:44:22,419 - sync_service - INFO - API log added to SAP: shopify - inventory_levels - success
2025-07-15 15:44:22,528 - sync_service - INFO - Stock change sync completed: 1 processed, 1 successful, 0 errors
2025-07-15 16:02:36,002 - sync_service - INFO - Initialized Shopify client for store: Local Store (local)
2025-07-15 16:02:36,019 - sync_service - INFO - Starting multi-store new items sync from SAP to Shopify
2025-07-15 16:02:37,670 - sync_service - INFO - SAP logging client login successful
2025-07-15 16:02:39,150 - sync_service - INFO - API log added to SAP: system - /sync/new_items_multi_store - success
2025-07-15 16:02:39,152 - sync_service - INFO - Fetching new items for store: local
2025-07-15 16:02:39,154 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'login', 'request': {'company': 'JudeBenHalim_Test', 'user': 'manager'}, 'response': None, 'status': None}
2025-07-15 16:02:41,239 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'login', 'request': None, 'response': {'status': 'success'}, 'status': 'success'}
2025-07-15 16:02:41,240 - sync_service - INFO - SAP login successful
2025-07-15 16:02:41,241 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': "view.svc/MASHURA_New_ItemsB1SLQuery?$filter=Shopify_Store eq 'local'&$orderby=MainProduct", 'request': {'method': 'GET', 'url': "https://10.0.0.100:50000/b1s/v1/view.svc/MASHURA_New_ItemsB1SLQuery?$filter=Shopify_Store eq 'local'&$orderby=MainProduct", 'data': None, 'params': None}, 'response': None, 'status': None}
2025-07-15 16:02:43,247 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': "view.svc/MASHURA_New_ItemsB1SLQuery?$filter=Shopify_Store eq 'local'&$orderby=MainProduct", 'request': None, 'response': {'odata.metadata': 'https://10.0.0.100:50000/b1s/v1/view.svc/$metadata#MASHURA_New_ItemsB1SLQuery', 'value': []}, 'status': 'success'}
2025-07-15 16:02:43,251 - sync_service - INFO - No new items found in SAP for store local
2025-07-15 16:02:43,251 - sync_service - INFO - Sync Event: {'sync_type': 'multi_store_new_items_sap_to_shopify', 'items_processed': 0, 'success_count': 0, 'error_count': 0, 'details': None}
2025-07-15 16:02:44,306 - sync_service - INFO - API log added to SAP: system - /sync/new_items_multi_store - success
2025-07-15 16:02:44,309 - sync_service - INFO - Multi-store new items sync completed: 0 processed, 0 successful, 0 errors
2025-07-15 16:46:14,046 - sync_service - INFO - Initialized Shopify client for store: Local Store (local)
2025-07-15 16:46:14,241 - sync_service - INFO - Starting stock change sync using MASHURA_StockChangeB1SLQuery view
2025-07-15 16:46:14,249 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'login', 'request': {'company': 'JudeBenHalim_Test', 'user': 'manager'}, 'response': None, 'status': None}
2025-07-15 16:46:35,320 - sync_service - ERROR - SAP login error: All connection attempts failed
2025-07-15 16:46:35,322 - sync_service - ERROR - Failed to get stock changes from SAP: Failed to login to SAP
2025-07-15 16:50:39,690 - sync_service - INFO - Initialized Shopify client for store: Local Store (local)
2025-07-15 16:50:39,849 - sync_service - INFO - Starting stock change sync...
2025-07-15 16:50:39,852 - sync_service - INFO - Starting stock change sync using MASHURA_StockChangeB1SLQuery view
2025-07-15 16:50:39,856 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'login', 'request': {'company': 'JudeBenHalim_Test', 'user': 'manager'}, 'response': None, 'status': None}
2025-07-15 16:51:00,939 - sync_service - ERROR - SAP login error: All connection attempts failed
2025-07-15 16:51:00,939 - sync_service - ERROR - Failed to fetch stock changes: Failed to login to SAP
2025-07-15 18:48:41,837 - sync_service - INFO - Initialized Shopify client for store: Local Store (local)
2025-07-15 18:48:41,885 - sync_service - INFO - Starting stock change sync...
2025-07-15 18:48:41,885 - sync_service - INFO - Starting stock change sync using MASHURA_StockChangeB1SLQuery view
2025-07-15 18:48:41,885 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'login', 'request': {'company': 'JudeBenHalim_Test', 'user': 'manager'}, 'response': None, 'status': None}
2025-07-15 18:49:02,957 - sync_service - ERROR - SAP login error: All connection attempts failed
2025-07-15 18:49:02,965 - sync_service - ERROR - Failed to fetch stock changes: Failed to login to SAP
2025-07-15 18:49:12,230 - sync_service - INFO - Initialized Shopify client for store: Local Store (local)
2025-07-15 18:49:12,263 - sync_service - INFO - Starting new items sync...
2025-07-15 18:49:12,265 - sync_service - INFO - Starting multi-store new items sync from SAP to Shopify
2025-07-15 18:49:13,812 - sync_service - INFO - SAP logging client login successful
2025-07-15 18:49:15,744 - sync_service - INFO - API log added to SAP: system - /sync/new_items_multi_store - success
2025-07-15 18:49:15,745 - sync_service - INFO - Fetching new items for store: local
2025-07-15 18:49:15,747 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'login', 'request': {'company': 'JudeBenHalim_Test', 'user': 'manager'}, 'response': None, 'status': None}
2025-07-15 18:49:17,453 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'login', 'request': None, 'response': {'status': 'success'}, 'status': 'success'}
2025-07-15 18:49:17,455 - sync_service - INFO - SAP login successful
2025-07-15 18:49:17,458 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': "view.svc/MASHURA_New_ItemsB1SLQuery?$filter=Shopify_Store eq 'local'&$orderby=MainProduct", 'request': {'method': 'GET', 'url': "https://10.0.0.100:50000/b1s/v1/view.svc/MASHURA_New_ItemsB1SLQuery?$filter=Shopify_Store eq 'local'&$orderby=MainProduct", 'data': None, 'params': None}, 'response': None, 'status': None}
2025-07-15 18:49:19,103 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': "view.svc/MASHURA_New_ItemsB1SLQuery?$filter=Shopify_Store eq 'local'&$orderby=MainProduct", 'request': None, 'response': {'odata.metadata': 'https://10.0.0.100:50000/b1s/v1/view.svc/$metadata#MASHURA_New_ItemsB1SLQuery', 'value': []}, 'status': 'success'}
2025-07-15 18:49:19,107 - sync_service - INFO - No new items found in SAP for store local
2025-07-15 18:49:19,108 - sync_service - INFO - Sync Event: {'sync_type': 'multi_store_new_items_sap_to_shopify', 'items_processed': 0, 'success_count': 0, 'error_count': 0, 'details': None}
2025-07-15 18:49:20,041 - sync_service - INFO - API log added to SAP: system - /sync/new_items_multi_store - success
2025-07-15 18:49:20,044 - sync_service - INFO - Multi-store new items sync completed: 0 processed, 0 successful, 0 errors
2025-07-15 18:58:30,615 - sync_service - INFO - Initialized Shopify client for store: Local Store (local)
2025-07-15 18:58:30,645 - sync_service - INFO - Starting new items sync...
2025-07-15 18:58:30,646 - sync_service - INFO - Starting multi-store new items sync from SAP to Shopify
2025-07-15 18:58:32,446 - sync_service - INFO - SAP logging client login successful
2025-07-15 18:58:34,678 - sync_service - INFO - API log added to SAP: system - /sync/new_items_multi_store - success
2025-07-15 18:58:34,679 - sync_service - INFO - Fetching new items for store: local
2025-07-15 18:58:34,680 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'login', 'request': {'company': 'JudeBenHalim_Test', 'user': 'manager'}, 'response': None, 'status': None}
2025-07-15 18:58:37,440 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'login', 'request': None, 'response': {'status': 'success'}, 'status': 'success'}
2025-07-15 18:58:37,441 - sync_service - INFO - SAP login successful
2025-07-15 18:58:37,445 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': "view.svc/MASHURA_New_ItemsB1SLQuery?$filter=Shopify_Store eq 'local'&$orderby=MainProduct", 'request': {'method': 'GET', 'url': "https://10.0.0.100:50000/b1s/v1/view.svc/MASHURA_New_ItemsB1SLQuery?$filter=Shopify_Store eq 'local'&$orderby=MainProduct", 'data': None, 'params': None}, 'response': None, 'status': None}
2025-07-15 18:58:40,207 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': "view.svc/MASHURA_New_ItemsB1SLQuery?$filter=Shopify_Store eq 'local'&$orderby=MainProduct", 'request': None, 'response': {'odata.metadata': 'https://10.0.0.100:50000/b1s/v1/view.svc/$metadata#MASHURA_New_ItemsB1SLQuery', 'value': [{'itemcode': 'FG-0000707', 'ItemName': 'Morsi Glasses', 'MainProduct': None, 'Color': None, 'OnHand': 30.0, 'IsCommited': 0.0, 'Available': 30.0, 'Price': 2500.0, 'Status': 'new', 'Shopify_ProductCode': '', 'Shopify_Store': 'local', 'id__': 1}, {'itemcode': 'FG-0000708', 'ItemName': 'Morsi-Earrings-Blue', 'MainProduct': 'Morsi Earrings', 'Color': 'Blue', 'OnHand': 0.0, 'IsCommited': 0.0, 'Available': 0.0, 'Price': 2500.0, 'Status': 'new', 'Shopify_ProductCode': '', 'Shopify_Store': 'local', 'id__': 2}, {'itemcode': 'FG-0000706', 'ItemName': 'Morsi-Red', 'MainProduct': 'Morsi Necklace', 'Color': 'Red', 'OnHand': 25.0, 'IsCommited': 0.0, 'Available': 25.0, 'Price': 2500.0, 'Status': 'existing', 'Shopify_ProductCode': '7510108733506', 'Shopify_Store': 'local', 'id__': 3}]}, 'status': 'success'}
2025-07-15 18:58:40,212 - sync_service - INFO - Product group: ('FG-0000707', 'local') has 1 items
2025-07-15 18:58:40,215 - sync_service - INFO - Product group: ('Morsi Earrings', 'local') has 1 items
2025-07-15 18:58:40,218 - sync_service - INFO - Product group: ('Morsi Necklace', 'local') has 1 items
2025-07-15 18:58:40,221 - sync_service - INFO - Grouped 3 items into 3 product groups for store local
2025-07-15 18:58:40,223 - sync_service - INFO - Processing product group: ('FG-0000707', 'local') with 1 items for store local
2025-07-15 18:58:42,040 - sync_service - INFO - API log added to SAP: shopify - /admin/api/graphql_local - success
2025-07-15 18:58:42,041 - sync_service - INFO - API Call: {'service': 'shopify', 'endpoint': 'graphql_local', 'request': {'query': '\n        query GetProductByHandle($handle: String!) {\n            productByHandle(handle: $handle) {\n                id\n                title\n                handle\n                description\n                variants(first: 50) {\n                    edges {\n                        node {\n                            id\n                            sku\n                            price\n                            inventoryItem {\n                                id\n                            }\n                            selectedOptions {\n                                name\n                                value\n                            }\n                        }\n                    }\n                }\n            }\n        }\n        ', 'variables': {'handle': 'default'}}, 'response': None, 'status': None}
2025-07-15 18:58:52,042 - sync_service - ERROR - GraphQL query error for store local: 
2025-07-15 18:58:53,754 - sync_service - INFO - API log added to SAP: shopify - /admin/api/graphql_local - success
2025-07-15 18:58:53,756 - sync_service - INFO - Product None doesn't exist in store local, creating new product
2025-07-15 18:58:55,521 - sync_service - INFO - API log added to SAP: shopify - /admin/api/graphql_local - success
2025-07-15 18:58:55,522 - sync_service - INFO - API Call: {'service': 'shopify', 'endpoint': 'graphql_local', 'request': {'query': '\n        mutation productCreate($input: ProductInput!) {\n            productCreate(input: $input) {\n                product {\n                    id\n                    title\n                    handle\n                    variants(first: 50) {\n                        edges {\n                            node {\n                                id\n                                sku\n                                inventoryItem {\n                                    id\n                                }\n                                selectedOptions {\n                                    name\n                                    value\n                                }\n                            }\n                        }\n                    }\n                }\n                userErrors {\n                    field\n                    message\n                }\n            }\n        }\n        ', 'variables': {'input': {'title': 'Morsi Glasses', 'descriptionHtml': '', 'vendor': '', 'productType': 'Default', 'status': 'DRAFT', 'tags': [], 'variants': [{'sku': 'FG-0000707', 'price': '2500.0', 'inventoryPolicy': 'DENY', 'inventoryManagement': 'SHOPIFY', 'weight': 0.0, 'weightUnit': 'KILOGRAMS'}], 'seo': {'title': 'Morsi Glasses', 'description': ''}}}}, 'response': None, 'status': None}
2025-07-15 18:58:56,509 - sync_service - INFO - API Call: {'service': 'shopify', 'endpoint': 'graphql_local', 'request': None, 'response': {'productCreate': {'product': {'id': 'gid://shopify/Product/7513977159746', 'title': 'Morsi Glasses', 'handle': 'morsi-glasses', 'variants': {'edges': [{'node': {'id': 'gid://shopify/ProductVariant/42313759457346', 'sku': 'FG-0000707', 'inventoryItem': {'id': 'gid://shopify/InventoryItem/44414036344898'}, 'selectedOptions': [{'name': 'Title', 'value': 'Default Title'}]}}]}}, 'userErrors': []}}, 'status': 'success'}
2025-07-15 18:58:56,512 - sync_service - ERROR - Shopify full response for store local: {'msg': 'success', 'data': {'productCreate': {'product': {'id': 'gid://shopify/Product/7513977159746', 'title': 'Morsi Glasses', 'handle': 'morsi-glasses', 'variants': {'edges': [{'node': {'id': 'gid://shopify/ProductVariant/42313759457346', 'sku': 'FG-0000707', 'inventoryItem': {'id': 'gid://shopify/InventoryItem/44414036344898'}, 'selectedOptions': [{'name': 'Title', 'value': 'Default Title'}]}}]}}, 'userErrors': []}}}
2025-07-15 18:58:57,846 - sync_service - INFO - API log added to SAP: shopify - /admin/api/graphql_local - success
2025-07-15 18:58:57,847 - sync_service - INFO - Successfully created product in store local
2025-07-15 18:58:59,313 - sync_service - INFO - API log added to SAP: sap - /U_SHOPIFY_MAPPING - success
2025-07-15 18:58:59,314 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'U_SHOPIFY_MAPPING', 'request': {'method': 'POST', 'url': 'https://10.0.0.100:50000/b1s/v1/U_SHOPIFY_MAPPING', 'data': {'Code': '7513977159746', 'Name': '7513977159746', 'U_Shopify_Type': 'product', 'U_SAP_Code': 'FG-0000707', 'U_Shopify_Store': 'local', 'U_SAP_Type': 'item'}, 'params': None}, 'response': None, 'status': None}
2025-07-15 18:59:00,912 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'U_SHOPIFY_MAPPING', 'request': None, 'response': {'odata.metadata': 'https://10.0.0.100:50000/b1s/v1/$metadata#U_SHOPIFY_MAPPING/@Element', 'Code': '7513977159746', 'Name': '7513977159746', 'U_Shopify_Type': 'product', 'U_SAP_Code': 'FG-0000707', 'U_SAP_Type': 'item', 'U_Shopify_Store': 'local'}, 'status': 'success'}
2025-07-15 18:59:03,924 - sync_service - INFO - API log added to SAP: sap - /U_SHOPIFY_MAPPING - success
2025-07-15 18:59:05,250 - sync_service - INFO - API log added to SAP: sap - /U_SHOPIFY_MAPPING - success
2025-07-15 18:59:05,253 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'U_SHOPIFY_MAPPING', 'request': {'method': 'POST', 'url': 'https://10.0.0.100:50000/b1s/v1/U_SHOPIFY_MAPPING', 'data': {'Code': '42313759457346', 'Name': '42313759457346', 'U_Shopify_Type': 'variant', 'U_SAP_Code': 'FG-0000707', 'U_Shopify_Store': 'local', 'U_SAP_Type': 'item'}, 'params': None}, 'response': None, 'status': None}
2025-07-15 18:59:06,242 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'U_SHOPIFY_MAPPING', 'request': None, 'response': {'odata.metadata': 'https://10.0.0.100:50000/b1s/v1/$metadata#U_SHOPIFY_MAPPING/@Element', 'Code': '42313759457346', 'Name': '42313759457346', 'U_Shopify_Type': 'variant', 'U_SAP_Code': 'FG-0000707', 'U_SAP_Type': 'item', 'U_Shopify_Store': 'local'}, 'status': 'success'}
2025-07-15 18:59:07,592 - sync_service - INFO - API log added to SAP: sap - /U_SHOPIFY_MAPPING - success
2025-07-15 18:59:09,553 - sync_service - ERROR - Failed to add API log to SAP: HTTP 400: {
   "error" : {
      "code" : -1,
      "message" : {
         "lang" : "en-us",
         "value" : "CServiceData::SetPropertyValueString failed; Value too long in property 'U_Action' of 'U_API_LOG'"
      }
   }
}

2025-07-15 18:59:09,556 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'U_SHOPIFY_MAPPING', 'request': {'method': 'POST', 'url': 'https://10.0.0.100:50000/b1s/v1/U_SHOPIFY_MAPPING', 'data': {'Code': '44414036344898', 'Name': '44414036344898', 'U_Shopify_Type': 'variant_inventory', 'U_SAP_Code': 'FG-0000707', 'U_Shopify_Store': 'local', 'U_SAP_Type': 'item'}, 'params': None}, 'response': None, 'status': None}
2025-07-15 18:59:10,727 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'U_SHOPIFY_MAPPING', 'request': None, 'response': {'odata.metadata': 'https://10.0.0.100:50000/b1s/v1/$metadata#U_SHOPIFY_MAPPING/@Element', 'Code': '44414036344898', 'Name': '44414036344898', 'U_Shopify_Type': 'variant_inventory', 'U_SAP_Code': 'FG-0000707', 'U_SAP_Type': 'item', 'U_Shopify_Store': 'local'}, 'status': 'success'}
2025-07-15 18:59:12,212 - sync_service - ERROR - Failed to add API log to SAP: HTTP 400: {
   "error" : {
      "code" : -1,
      "message" : {
         "lang" : "en-us",
         "value" : "CServiceData::SetPropertyValueString failed; Value too long in property 'U_Action' of 'U_API_LOG'"
      }
   }
}

2025-07-15 18:59:12,726 - sync_service - INFO - Processing product group: ('Morsi Earrings', 'local') with 1 items for store local
2025-07-15 18:59:13,528 - sync_service - INFO - API log added to SAP: shopify - /admin/api/graphql_local - success
2025-07-15 18:59:13,528 - sync_service - INFO - API Call: {'service': 'shopify', 'endpoint': 'graphql_local', 'request': {'query': '\n        query GetProductByHandle($handle: String!) {\n            productByHandle(handle: $handle) {\n                id\n                title\n                handle\n                description\n                variants(first: 50) {\n                    edges {\n                        node {\n                            id\n                            sku\n                            price\n                            inventoryItem {\n                                id\n                            }\n                            selectedOptions {\n                                name\n                                value\n                            }\n                        }\n                    }\n                }\n            }\n        }\n        ', 'variables': {'handle': 'morsi-earrings'}}, 'response': None, 'status': None}
2025-07-15 18:59:14,047 - sync_service - INFO - API Call: {'service': 'shopify', 'endpoint': 'graphql_local', 'request': None, 'response': {'productByHandle': None}, 'status': 'success'}
2025-07-15 18:59:14,829 - sync_service - INFO - API log added to SAP: shopify - /admin/api/graphql_local - success
2025-07-15 18:59:14,831 - sync_service - INFO - Product Morsi Earrings doesn't exist in store local, creating new product
2025-07-15 18:59:16,657 - sync_service - INFO - API log added to SAP: shopify - /admin/api/graphql_local - success
2025-07-15 18:59:16,659 - sync_service - INFO - API Call: {'service': 'shopify', 'endpoint': 'graphql_local', 'request': {'query': '\n        mutation productCreate($input: ProductInput!) {\n            productCreate(input: $input) {\n                product {\n                    id\n                    title\n                    handle\n                    variants(first: 50) {\n                        edges {\n                            node {\n                                id\n                                sku\n                                inventoryItem {\n                                    id\n                                }\n                                selectedOptions {\n                                    name\n                                    value\n                                }\n                            }\n                        }\n                    }\n                }\n                userErrors {\n                    field\n                    message\n                }\n            }\n        }\n        ', 'variables': {'input': {'title': 'Morsi-Earrings-Blue', 'descriptionHtml': '', 'vendor': '', 'productType': 'Default', 'status': 'DRAFT', 'tags': [], 'variants': [{'sku': 'FG-0000708', 'price': '2500.0', 'inventoryPolicy': 'DENY', 'inventoryManagement': 'SHOPIFY', 'weight': 0.0, 'weightUnit': 'KILOGRAMS'}], 'seo': {'title': 'Morsi-Earrings-Blue', 'description': ''}}}}, 'response': None, 'status': None}
2025-07-15 18:59:17,432 - sync_service - INFO - API Call: {'service': 'shopify', 'endpoint': 'graphql_local', 'request': None, 'response': {'productCreate': {'product': {'id': 'gid://shopify/Product/7513977192514', 'title': 'Morsi-Earrings-Blue', 'handle': 'morsi-earrings-blue', 'variants': {'edges': [{'node': {'id': 'gid://shopify/ProductVariant/42313759490114', 'sku': 'FG-0000708', 'inventoryItem': {'id': 'gid://shopify/InventoryItem/44414036377666'}, 'selectedOptions': [{'name': 'Title', 'value': 'Default Title'}]}}]}}, 'userErrors': []}}, 'status': 'success'}
2025-07-15 18:59:17,435 - sync_service - ERROR - Shopify full response for store local: {'msg': 'success', 'data': {'productCreate': {'product': {'id': 'gid://shopify/Product/7513977192514', 'title': 'Morsi-Earrings-Blue', 'handle': 'morsi-earrings-blue', 'variants': {'edges': [{'node': {'id': 'gid://shopify/ProductVariant/42313759490114', 'sku': 'FG-0000708', 'inventoryItem': {'id': 'gid://shopify/InventoryItem/44414036377666'}, 'selectedOptions': [{'name': 'Title', 'value': 'Default Title'}]}}]}}, 'userErrors': []}}}
2025-07-15 18:59:18,910 - sync_service - INFO - API log added to SAP: shopify - /admin/api/graphql_local - success
2025-07-15 18:59:18,911 - sync_service - INFO - Successfully created product in store local
2025-07-15 18:59:21,089 - sync_service - INFO - API log added to SAP: sap - /U_SHOPIFY_MAPPING - success
2025-07-15 18:59:21,091 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'U_SHOPIFY_MAPPING', 'request': {'method': 'POST', 'url': 'https://10.0.0.100:50000/b1s/v1/U_SHOPIFY_MAPPING', 'data': {'Code': '7513977192514', 'Name': '7513977192514', 'U_Shopify_Type': 'product', 'U_SAP_Code': 'Morsi Earrings', 'U_Shopify_Store': 'local', 'U_SAP_Type': 'item'}, 'params': None}, 'response': None, 'status': None}
2025-07-15 18:59:22,508 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'U_SHOPIFY_MAPPING', 'request': None, 'response': {'odata.metadata': 'https://10.0.0.100:50000/b1s/v1/$metadata#U_SHOPIFY_MAPPING/@Element', 'Code': '7513977192514', 'Name': '7513977192514', 'U_Shopify_Type': 'product', 'U_SAP_Code': 'Morsi Earrings', 'U_SAP_Type': 'item', 'U_Shopify_Store': 'local'}, 'status': 'success'}
2025-07-15 18:59:24,309 - sync_service - INFO - API log added to SAP: sap - /U_SHOPIFY_MAPPING - success
2025-07-15 18:59:27,078 - sync_service - INFO - API log added to SAP: sap - /U_SHOPIFY_MAPPING - success
2025-07-15 18:59:27,079 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'U_SHOPIFY_MAPPING', 'request': {'method': 'POST', 'url': 'https://10.0.0.100:50000/b1s/v1/U_SHOPIFY_MAPPING', 'data': {'Code': '42313759490114', 'Name': '42313759490114', 'U_Shopify_Type': 'variant', 'U_SAP_Code': 'FG-0000708', 'U_Shopify_Store': 'local', 'U_SAP_Type': 'item'}, 'params': None}, 'response': None, 'status': None}
2025-07-15 18:59:29,509 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'U_SHOPIFY_MAPPING', 'request': None, 'response': {'odata.metadata': 'https://10.0.0.100:50000/b1s/v1/$metadata#U_SHOPIFY_MAPPING/@Element', 'Code': '42313759490114', 'Name': '42313759490114', 'U_Shopify_Type': 'variant', 'U_SAP_Code': 'FG-0000708', 'U_SAP_Type': 'item', 'U_Shopify_Store': 'local'}, 'status': 'success'}
2025-07-15 18:59:32,061 - sync_service - INFO - API log added to SAP: sap - /U_SHOPIFY_MAPPING - success
2025-07-15 18:59:33,526 - sync_service - ERROR - Failed to add API log to SAP: HTTP 400: {
   "error" : {
      "code" : -1,
      "message" : {
         "lang" : "en-us",
         "value" : "CServiceData::SetPropertyValueString failed; Value too long in property 'U_Action' of 'U_API_LOG'"
      }
   }
}

2025-07-15 18:59:33,527 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'U_SHOPIFY_MAPPING', 'request': {'method': 'POST', 'url': 'https://10.0.0.100:50000/b1s/v1/U_SHOPIFY_MAPPING', 'data': {'Code': '44414036377666', 'Name': '44414036377666', 'U_Shopify_Type': 'variant_inventory', 'U_SAP_Code': 'FG-0000708', 'U_Shopify_Store': 'local', 'U_SAP_Type': 'item'}, 'params': None}, 'response': None, 'status': None}
2025-07-15 18:59:36,241 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'U_SHOPIFY_MAPPING', 'request': None, 'response': {'odata.metadata': 'https://10.0.0.100:50000/b1s/v1/$metadata#U_SHOPIFY_MAPPING/@Element', 'Code': '44414036377666', 'Name': '44414036377666', 'U_Shopify_Type': 'variant_inventory', 'U_SAP_Code': 'FG-0000708', 'U_SAP_Type': 'item', 'U_Shopify_Store': 'local'}, 'status': 'success'}
2025-07-15 18:59:37,595 - sync_service - ERROR - Failed to add API log to SAP: HTTP 400: {
   "error" : {
      "code" : -1,
      "message" : {
         "lang" : "en-us",
         "value" : "CServiceData::SetPropertyValueString failed; Value too long in property 'U_Action' of 'U_API_LOG'"
      }
   }
}

2025-07-15 18:59:38,097 - sync_service - INFO - Processing product group: ('Morsi Necklace', 'local') with 1 items for store local
2025-07-15 18:59:38,121 - sync_service - INFO - Found existing Shopify product ID: 7510108733506 for Morsi Necklace
2025-07-15 18:59:38,123 - sync_service - INFO - Product Morsi Necklace already exists in store local, adding variants
2025-07-15 18:59:38,127 - sync_service - INFO - API Call: {'service': 'shopify', 'endpoint': 'graphql_local', 'request': {'query': '\n        query GetProduct($id: ID!) {\n            product(id: $id) {\n                id\n                title\n                handle\n                description\n                variants(first: 50) {\n                    edges {\n                        node {\n                            id\n                            sku\n                            price\n                            inventoryItem {\n                                id\n                            }\n                            selectedOptions {\n                                name\n                                value\n                            }\n                        }\n                    }\n                }\n            }\n        }\n        ', 'variables': {'id': 'gid://shopify/Product/7510108733506'}}, 'response': None, 'status': None}
2025-07-15 18:59:38,623 - sync_service - INFO - API Call: {'service': 'shopify', 'endpoint': 'graphql_local', 'request': None, 'response': {'product': {'id': 'gid://shopify/Product/7510108733506', 'title': 'Morsi Necklace', 'handle': 'morsi-necklace-1', 'description': '', 'variants': {'edges': [{'node': {'id': 'gid://shopify/ProductVariant/42293507063874', 'sku': 'FG-0000701', 'price': '2500.00', 'inventoryItem': {'id': 'gid://shopify/InventoryItem/44394637557826'}, 'selectedOptions': [{'name': 'Color', 'value': 'Black Gold'}]}}, {'node': {'id': 'gid://shopify/ProductVariant/42293507096642', 'sku': 'FG-0000702', 'price': '2500.00', 'inventoryItem': {'id': 'gid://shopify/InventoryItem/44394637590594'}, 'selectedOptions': [{'name': 'Color', 'value': 'Rose Gold'}]}}, {'node': {'id': 'gid://shopify/ProductVariant/42293507129410', 'sku': 'FG-0000703', 'price': '2500.00', 'inventoryItem': {'id': 'gid://shopify/InventoryItem/44394637623362'}, 'selectedOptions': [{'name': 'Color', 'value': 'White Gold'}]}}, {'node': {'id': 'gid://shopify/ProductVariant/42295166599234', 'sku': 'FG-0000704', 'price': '2500.00', 'inventoryItem': {'id': 'gid://shopify/InventoryItem/44396297355330'}, 'selectedOptions': [{'name': 'Color', 'value': 'Green'}]}}]}}}, 'status': 'success'}
2025-07-15 18:59:38,624 - sync_service - INFO - API Call: {'service': 'shopify', 'endpoint': 'graphql_local', 'request': {'query': '\n        query GetProductByHandle($handle: String!) {\n            productByHandle(handle: $handle) {\n                id\n                title\n                handle\n                description\n                variants(first: 50) {\n                    edges {\n                        node {\n                            id\n                            sku\n                            price\n                            inventoryItem {\n                                id\n                            }\n                            selectedOptions {\n                                name\n                                value\n                            }\n                        }\n                    }\n                }\n            }\n        }\n        ', 'variables': {'handle': None}}, 'response': None, 'status': None}
2025-07-15 18:59:39,074 - sync_service - ERROR - GraphQL query error for store local: {'message': 'Variable $handle of type String! was provided invalid value', 'locations': [{'line': 1, 'column': 26}], 'extensions': {'value': None, 'problems': [{'path': [], 'explanation': 'Expected value to not be null'}]}}
GraphQL Errors: [
  {
    "message": "Variable $handle of type String! was provided invalid value",
    "locations": [
      {
        "line": 1,
        "column": 26
      }
    ],
    "extensions": {
      "value": null,
      "problems": [
        {
          "path": [],
          "explanation": "Expected value to not be null"
        }
      ]
    }
  }
]
2025-07-15 18:59:41,378 - sync_service - ERROR - Failed to add API log to SAP: HTTP 400: {
   "error" : {
      "code" : -1,
      "message" : {
         "lang" : "en-us",
         "value" : "CServiceData::SetPropertyValueString failed; Value too long in property 'U_Value' of 'U_API_LOG'"
      }
   }
}

2025-07-15 18:59:43,728 - sync_service - ERROR - Failed to add API log to SAP: HTTP 400: {
   "error" : {
      "code" : -1,
      "message" : {
         "lang" : "en-us",
         "value" : "CServiceData::SetPropertyValueString failed; Value too long in property 'U_Action' of 'U_API_LOG'"
      }
   }
}

2025-07-15 18:59:43,729 - sync_service - INFO - API Call: {'service': 'shopify', 'endpoint': 'graphql_local', 'request': {'query': '\n        mutation productVariantCreate($input: ProductVariantInput!) {\n            productVariantCreate(input: $input) {\n                productVariant {\n                    id\n                    sku\n                    price\n                    inventoryItem {\n                        id\n                    }\n                    selectedOptions {\n                        name\n                        value\n                    }\n                }\n                userErrors {\n                    field\n                    message\n                }\n            }\n        }\n        ', 'variables': {'input': {'sku': 'FG-0000706', 'price': '2500.0', 'inventoryPolicy': 'DENY', 'inventoryManagement': 'SHOPIFY', 'weight': 0.0, 'weightUnit': 'KILOGRAMS', 'options': ['Red'], 'productId': 'gid://shopify/Product/7510108733506'}}}, 'response': None, 'status': None}
2025-07-15 18:59:49,971 - sync_service - INFO - API Call: {'service': 'shopify', 'endpoint': 'graphql_local', 'request': None, 'response': {'productVariantCreate': {'productVariant': {'id': 'gid://shopify/ProductVariant/42313759719490', 'sku': 'FG-0000706', 'price': '2500.00', 'inventoryItem': {'id': 'gid://shopify/InventoryItem/44414036607042'}, 'selectedOptions': [{'name': 'Color', 'value': 'Red'}]}, 'userErrors': []}}, 'status': 'success'}
2025-07-15 18:59:49,974 - sync_service - INFO - API Call: {'service': 'shopify', 'endpoint': 'graphql_local', 'request': {'query': '\n        mutation productVariantUpdate($input: ProductVariantInput!) {\n            productVariantUpdate(input: $input) {\n                productVariant {\n                    id\n                    sku\n                    title\n                    selectedOptions {\n                        name\n                        value\n                    }\n                }\n                userErrors {\n                    field\n                    message\n                }\n            }\n        }\n        ', 'variables': {'input': {'title': 'Red', 'id': 'gid://shopify/ProductVariant/42313759719490'}}}, 'response': None, 'status': None}
2025-07-15 18:59:50,496 - sync_service - INFO - API Call: {'service': 'shopify', 'endpoint': 'graphql_local', 'request': None, 'response': {'productVariantUpdate': {'productVariant': {'id': 'gid://shopify/ProductVariant/42313759719490', 'sku': 'FG-0000706', 'title': 'Red', 'selectedOptions': [{'name': 'Color', 'value': 'Red'}]}, 'userErrors': []}}, 'status': 'success'}
2025-07-15 18:59:50,496 - sync_service - INFO - Updated variant FG-0000706 title to 'Red'
2025-07-15 18:59:51,875 - sync_service - ERROR - Failed to add API log to SAP: HTTP 400: {
   "error" : {
      "code" : -1,
      "message" : {
         "lang" : "en-us",
         "value" : "CServiceData::SetPropertyValueString failed; Value too long in property 'U_Action' of 'U_API_LOG'"
      }
   }
}

2025-07-15 18:59:51,877 - sync_service - INFO - API Call: {'service': 'shopify', 'endpoint': 'graphql_local', 'request': {'query': '\n        mutation inventoryAdjustQuantity($input: InventoryAdjustQuantityInput!) {\n            inventoryAdjustQuantity(input: $input) {\n                inventoryLevel {\n                    available\n                }\n                userErrors {\n                    field\n                    message\n                }\n            }\n        }\n        ', 'variables': {'input': {'inventoryItemId': 'gid://shopify/InventoryItem/44414036607042', 'availableDelta': 10}}}, 'response': None, 'status': None}
2025-07-15 18:59:52,363 - sync_service - ERROR - GraphQL query error for store local: {'message': "Field 'inventoryAdjustQuantity' doesn't exist on type 'Mutation'", 'locations': [{'line': 2, 'column': 3}], 'path': ['mutation inventoryAdjustQuantity', 'inventoryAdjustQuantity'], 'extensions': {'code': 'undefinedField', 'typeName': 'Mutation', 'fieldName': 'inventoryAdjustQuantity'}}
GraphQL Errors: [
  {
    "message": "Field 'inventoryAdjustQuantity' doesn't exist on type 'Mutation'",
    "locations": [
      {
        "line": 2,
        "column": 3
      }
    ],
    "path": [
      "mutation inventoryAdjustQuantity",
      "inventoryAdjustQuantity"
    ],
    "extensions": {
      "code": "undefinedField",
      "typeName": "Mutation",
      "fieldName": "inventoryAdjustQuantity"
    }
  },
  {
    "message": "Variable $input is declared by inventoryAdjustQuantity but not used",
    "locations": [
      {
        "line": 1,
        "column": 1
      }
    ],
    "path": [
      "mutation inventoryAdjustQuantity"
    ],
    "extensions": {
      "code": "variableNotUsed",
      "variableName": "input"
    }
  }
]
2025-07-15 18:59:54,845 - sync_service - ERROR - Failed to add API log to SAP: HTTP 400: {
   "error" : {
      "code" : -1,
      "message" : {
         "lang" : "en-us",
         "value" : "CServiceData::SetPropertyValueString failed; Value too long in property 'U_Value' of 'U_API_LOG'"
      }
   }
}

2025-07-15 18:59:54,846 - sync_service - WARNING - Failed to set inventory for variant FG-0000706: GraphQL query error for store local: {'message': "Field 'inventoryAdjustQuantity' doesn't exist on type 'Mutation'", 'locations': [{'line': 2, 'column': 3}], 'path': ['mutation inventoryAdjustQuantity', 'inventoryAdjustQuantity'], 'extensions': {'code': 'undefinedField', 'typeName': 'Mutation', 'fieldName': 'inventoryAdjustQuantity'}}
GraphQL Errors: [
  {
    "message": "Field 'inventoryAdjustQuantity' doesn't exist on type 'Mutation'",
    "locations": [
      {
        "line": 2,
        "column": 3
      }
    ],
    "path": [
      "mutation inventoryAdjustQuantity",
      "inventoryAdjustQuantity"
    ],
    "extensions": {
      "code": "undefinedField",
      "typeName": "Mutation",
      "fieldName": "inventoryAdjustQuantity"
    }
  },
  {
    "message": "Variable $input is declared by inventoryAdjustQuantity but not used",
    "locations": [
      {
        "line": 1,
        "column": 1
      }
    ],
    "path": [
      "mutation inventoryAdjustQuantity"
    ],
    "extensions": {
      "code": "variableNotUsed",
      "variableName": "input"
    }
  }
]
2025-07-15 18:59:54,847 - sync_service - INFO - Successfully added variant FG-0000706 to existing product
2025-07-15 18:59:57,062 - sync_service - INFO - API log added to SAP: sap - /U_SHOPIFY_MAPPING - success
2025-07-15 18:59:57,062 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'U_SHOPIFY_MAPPING', 'request': {'method': 'POST', 'url': 'https://10.0.0.100:50000/b1s/v1/U_SHOPIFY_MAPPING', 'data': {'Code': '7510108733506', 'Name': '7510108733506', 'U_Shopify_Type': 'product', 'U_SAP_Code': 'Morsi Necklace', 'U_Shopify_Store': 'local', 'U_SAP_Type': 'item'}, 'params': None}, 'response': None, 'status': None}
2025-07-15 18:59:58,879 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'U_SHOPIFY_MAPPING', 'request': None, 'response': {'status_code': 400, 'text': '{\n   "error" : {\n      "code" : -2035,\n      "message" : {\n         "lang" : "en-us",\n         "value" : "This entry already exists in the following tables (ODBC -2035)"\n      }\n   }\n}\n'}, 'status': 'failure'}
2025-07-15 19:00:01,221 - sync_service - INFO - API log added to SAP: sap - /U_SHOPIFY_MAPPING - failure
2025-07-15 19:00:03,946 - sync_service - INFO - API log added to SAP: sap - /U_SHOPIFY_MAPPING - success
2025-07-15 19:00:03,947 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'U_SHOPIFY_MAPPING', 'request': {'method': 'POST', 'url': 'https://10.0.0.100:50000/b1s/v1/U_SHOPIFY_MAPPING', 'data': {'Code': '42313759719490', 'Name': '42313759719490', 'U_Shopify_Type': 'variant', 'U_SAP_Code': 'FG-0000706', 'U_Shopify_Store': 'local', 'U_SAP_Type': 'item'}, 'params': None}, 'response': None, 'status': None}
2025-07-15 19:00:05,157 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'U_SHOPIFY_MAPPING', 'request': None, 'response': {'odata.metadata': 'https://10.0.0.100:50000/b1s/v1/$metadata#U_SHOPIFY_MAPPING/@Element', 'Code': '42313759719490', 'Name': '42313759719490', 'U_Shopify_Type': 'variant', 'U_SAP_Code': 'FG-0000706', 'U_SAP_Type': 'item', 'U_Shopify_Store': 'local'}, 'status': 'success'}
2025-07-15 19:00:06,957 - sync_service - INFO - API log added to SAP: sap - /U_SHOPIFY_MAPPING - success
2025-07-15 19:00:08,883 - sync_service - ERROR - Failed to add API log to SAP: HTTP 400: {
   "error" : {
      "code" : -1,
      "message" : {
         "lang" : "en-us",
         "value" : "CServiceData::SetPropertyValueString failed; Value too long in property 'U_Action' of 'U_API_LOG'"
      }
   }
}

2025-07-15 19:00:08,886 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'U_SHOPIFY_MAPPING', 'request': {'method': 'POST', 'url': 'https://10.0.0.100:50000/b1s/v1/U_SHOPIFY_MAPPING', 'data': {'Code': '44414036607042', 'Name': '44414036607042', 'U_Shopify_Type': 'variant_inventory', 'U_SAP_Code': 'FG-0000706', 'U_Shopify_Store': 'local', 'U_SAP_Type': 'item'}, 'params': None}, 'response': None, 'status': None}
2025-07-15 19:00:10,026 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'U_SHOPIFY_MAPPING', 'request': None, 'response': {'odata.metadata': 'https://10.0.0.100:50000/b1s/v1/$metadata#U_SHOPIFY_MAPPING/@Element', 'Code': '44414036607042', 'Name': '44414036607042', 'U_Shopify_Type': 'variant_inventory', 'U_SAP_Code': 'FG-0000706', 'U_SAP_Type': 'item', 'U_Shopify_Store': 'local'}, 'status': 'success'}
2025-07-15 19:00:11,506 - sync_service - ERROR - Failed to add API log to SAP: HTTP 400: {
   "error" : {
      "code" : -1,
      "message" : {
         "lang" : "en-us",
         "value" : "CServiceData::SetPropertyValueString failed; Value too long in property 'U_Action' of 'U_API_LOG'"
      }
   }
}

2025-07-15 19:00:12,020 - sync_service - INFO - Sync Event: {'sync_type': 'multi_store_new_items_sap_to_shopify', 'items_processed': 3, 'success_count': 3, 'error_count': 0, 'details': None}
2025-07-15 19:00:13,302 - sync_service - INFO - API log added to SAP: system - /sync/new_items_multi_store - success
2025-07-15 19:00:13,304 - sync_service - INFO - Multi-store new items sync completed: 3 processed, 3 successful, 0 errors
2025-07-15 19:00:21,362 - sync_service - INFO - Initialized Shopify client for store: Local Store (local)
2025-07-15 19:00:21,396 - sync_service - INFO - Starting stock change sync...
2025-07-15 19:00:21,396 - sync_service - INFO - Starting stock change sync using MASHURA_StockChangeB1SLQuery view
2025-07-15 19:00:21,397 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'login', 'request': {'company': 'JudeBenHalim_Test', 'user': 'manager'}, 'response': None, 'status': None}
2025-07-15 19:00:22,644 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'login', 'request': None, 'response': {'status': 'success'}, 'status': 'success'}
2025-07-15 19:00:22,646 - sync_service - INFO - SAP login successful
2025-07-15 19:00:22,648 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'view.svc/MASHURA_StockChangeB1SLQuery', 'request': {'method': 'GET', 'url': 'https://10.0.0.100:50000/b1s/v1/view.svc/MASHURA_StockChangeB1SLQuery', 'data': None, 'params': {'$top': 50}}, 'response': None, 'status': None}
2025-07-15 19:00:24,927 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'view.svc/MASHURA_StockChangeB1SLQuery', 'request': None, 'response': {'odata.metadata': 'https://10.0.0.100:50000/b1s/v1/view.svc/$metadata#MASHURA_StockChangeB1SLQuery', 'value': [{'ItemCode': 'FG-0000703', 'Variant_ID': '44394637623362', 'OnHand': 80.0, 'Available': 80.0, 'Location_ID': '68605345858', 'id__': 1}, {'ItemCode': 'FG-0000705', 'Variant_ID': '44412903227458', 'OnHand': 30.0, 'Available': 30.0, 'Location_ID': '68605345858', 'id__': 2}, {'ItemCode': 'FG-0000707', 'Variant_ID': '44414036344898', 'OnHand': 30.0, 'Available': 30.0, 'Location_ID': '68605345858', 'id__': 3}, {'ItemCode': 'FG-0000706', 'Variant_ID': '44414036607042', 'OnHand': 25.0, 'Available': 25.0, 'Location_ID': '68605345858', 'id__': 4}]}, 'status': 'success'}
2025-07-15 19:00:24,930 - sync_service - INFO - API Call: {'service': 'shopify', 'endpoint': 'rest_inventory_local', 'request': {'location_id': '68605345858', 'inventory_item_id': '44394637623362', 'available': 80}, 'response': None, 'status': None}
2025-07-15 19:00:39,986 - sync_service - INFO - API Call: {'service': 'shopify', 'endpoint': 'rest_inventory_local', 'request': None, 'response': {'inventory_level': {'inventory_item_id': 44394637623362, 'location_id': 68605345858, 'available': 80, 'updated_at': '2025-07-15T19:00:39+03:00', 'admin_graphql_api_id': 'gid://shopify/InventoryLevel/103109591106?inventory_item_id=44394637623362'}}, 'status': 'success'}
2025-07-15 19:00:45,738 - sync_service - INFO - SAP logging client login successful
2025-07-15 19:00:48,029 - sync_service - INFO - API log added to SAP: shopify - inventory_levels - success
2025-07-15 19:00:48,143 - sync_service - INFO - API Call: {'service': 'shopify', 'endpoint': 'rest_inventory_local', 'request': {'location_id': '68605345858', 'inventory_item_id': '44412903227458', 'available': 30}, 'response': None, 'status': None}
2025-07-15 19:01:00,436 - sync_service - INFO - API Call: {'service': 'shopify', 'endpoint': 'rest_inventory_local', 'request': None, 'response': {'inventory_level': {'inventory_item_id': 44412903227458, 'location_id': 68605345858, 'available': 30, 'updated_at': '2025-07-15T19:01:00+03:00', 'admin_graphql_api_id': 'gid://shopify/InventoryLevel/103109591106?inventory_item_id=44412903227458'}}, 'status': 'success'}
2025-07-15 19:01:02,424 - sync_service - INFO - API log added to SAP: shopify - inventory_levels - success
2025-07-15 19:01:02,533 - sync_service - INFO - API Call: {'service': 'shopify', 'endpoint': 'rest_inventory_local', 'request': {'location_id': '68605345858', 'inventory_item_id': '44414036344898', 'available': 30}, 'response': None, 'status': None}
2025-07-15 19:01:03,229 - sync_service - INFO - API Call: {'service': 'shopify', 'endpoint': 'rest_inventory_local', 'request': None, 'response': {'inventory_level': {'inventory_item_id': 44414036344898, 'location_id': 68605345858, 'available': 30, 'updated_at': '2025-07-15T19:01:03+03:00', 'admin_graphql_api_id': 'gid://shopify/InventoryLevel/103109591106?inventory_item_id=44414036344898'}}, 'status': 'success'}
2025-07-15 19:01:05,340 - sync_service - INFO - API log added to SAP: shopify - inventory_levels - success
2025-07-15 19:01:05,462 - sync_service - INFO - API Call: {'service': 'shopify', 'endpoint': 'rest_inventory_local', 'request': {'location_id': '68605345858', 'inventory_item_id': '44414036607042', 'available': 25}, 'response': None, 'status': None}
2025-07-15 19:01:13,512 - sync_service - INFO - API Call: {'service': 'shopify', 'endpoint': 'rest_inventory_local', 'request': None, 'response': {'inventory_level': {'inventory_item_id': 44414036607042, 'location_id': 68605345858, 'available': 25, 'updated_at': '2025-07-15T19:01:13+03:00', 'admin_graphql_api_id': 'gid://shopify/InventoryLevel/103109591106?inventory_item_id=44414036607042'}}, 'status': 'success'}
2025-07-15 19:01:16,714 - sync_service - INFO - API log added to SAP: shopify - inventory_levels - success
2025-07-15 19:01:16,831 - sync_service - INFO - Stock change sync completed: 4 processed, 4 successful, 0 errors
2025-07-15 19:05:53,572 - sync_service - INFO - Initialized Shopify client for store: Local Store (local)
2025-07-15 19:05:53,599 - sync_service - INFO - Starting new items sync...
2025-07-15 19:05:53,602 - sync_service - INFO - Starting multi-store new items sync from SAP to Shopify
2025-07-15 19:05:56,012 - sync_service - INFO - SAP logging client login successful
2025-07-15 19:05:58,365 - sync_service - INFO - API log added to SAP: system - /sync/new_items_multi_store - success
2025-07-15 19:05:58,369 - sync_service - INFO - Fetching new items for store: local
2025-07-15 19:05:58,371 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'login', 'request': {'company': 'JudeBenHalim_Test', 'user': 'manager'}, 'response': None, 'status': None}
2025-07-15 19:05:59,575 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'login', 'request': None, 'response': {'status': 'success'}, 'status': 'success'}
2025-07-15 19:05:59,577 - sync_service - INFO - SAP login successful
2025-07-15 19:05:59,581 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': "view.svc/MASHURA_New_ItemsB1SLQuery?$filter=Shopify_Store eq 'local'&$orderby=MainProduct", 'request': {'method': 'GET', 'url': "https://10.0.0.100:50000/b1s/v1/view.svc/MASHURA_New_ItemsB1SLQuery?$filter=Shopify_Store eq 'local'&$orderby=MainProduct", 'data': None, 'params': None}, 'response': None, 'status': None}
2025-07-15 19:06:01,738 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': "view.svc/MASHURA_New_ItemsB1SLQuery?$filter=Shopify_Store eq 'local'&$orderby=MainProduct", 'request': None, 'response': {'odata.metadata': 'https://10.0.0.100:50000/b1s/v1/view.svc/$metadata#MASHURA_New_ItemsB1SLQuery', 'value': [{'itemcode': 'FG-0000708', 'ItemName': 'Morsi-Earrings-Blue', 'MainProduct': 'Morsi Earrings', 'Color': 'Blue', 'OnHand': 0.0, 'IsCommited': 0.0, 'Available': 0.0, 'Price': 2500.0, 'Status': 'new', 'Shopify_ProductCode': '', 'Shopify_Store': 'local', 'id__': 1}, {'itemcode': 'FG-0000709', 'ItemName': 'Morsi-Earrings-Orange', 'MainProduct': 'Morsi Earrings', 'Color': 'Orange', 'OnHand': 15.0, 'IsCommited': 0.0, 'Available': 15.0, 'Price': 2500.0, 'Status': 'new', 'Shopify_ProductCode': '', 'Shopify_Store': 'local', 'id__': 2}]}, 'status': 'success'}
2025-07-15 19:06:01,742 - sync_service - INFO - Product group: ('Morsi Earrings', 'local') has 2 items
2025-07-15 19:06:01,743 - sync_service - INFO - Grouped 2 items into 1 product groups for store local
2025-07-15 19:06:01,743 - sync_service - INFO - Processing product group: ('Morsi Earrings', 'local') with 2 items for store local
2025-07-15 19:06:03,279 - sync_service - INFO - API log added to SAP: shopify - /admin/api/graphql_local - success
2025-07-15 19:06:03,280 - sync_service - INFO - API Call: {'service': 'shopify', 'endpoint': 'graphql_local', 'request': {'query': '\n        query GetProductByHandle($handle: String!) {\n            productByHandle(handle: $handle) {\n                id\n                title\n                handle\n                description\n                variants(first: 50) {\n                    edges {\n                        node {\n                            id\n                            sku\n                            price\n                            inventoryItem {\n                                id\n                            }\n                            selectedOptions {\n                                name\n                                value\n                            }\n                        }\n                    }\n                }\n            }\n        }\n        ', 'variables': {'handle': 'morsi-earrings'}}, 'response': None, 'status': None}
2025-07-15 19:06:03,725 - sync_service - INFO - API Call: {'service': 'shopify', 'endpoint': 'graphql_local', 'request': None, 'response': {'productByHandle': None}, 'status': 'success'}
2025-07-15 19:06:04,968 - sync_service - INFO - API log added to SAP: shopify - /admin/api/graphql_local - success
2025-07-15 19:06:04,972 - sync_service - INFO - Product Morsi Earrings doesn't exist in store local, creating new product
2025-07-15 19:06:05,934 - sync_service - INFO - API log added to SAP: shopify - /admin/api/graphql_local - success
2025-07-15 19:06:05,937 - sync_service - INFO - API Call: {'service': 'shopify', 'endpoint': 'graphql_local', 'request': {'query': '\n        mutation productCreate($input: ProductInput!) {\n            productCreate(input: $input) {\n                product {\n                    id\n                    title\n                    handle\n                    variants(first: 50) {\n                        edges {\n                            node {\n                                id\n                                sku\n                                inventoryItem {\n                                    id\n                                }\n                                selectedOptions {\n                                    name\n                                    value\n                                }\n                            }\n                        }\n                    }\n                }\n                userErrors {\n                    field\n                    message\n                }\n            }\n        }\n        ', 'variables': {'input': {'title': 'Morsi Earrings', 'status': 'DRAFT', 'options': ['Color'], 'variants': [{'options': ['Blue'], 'sku': 'FG-0000708', 'price': '2500.0', 'inventoryManagement': 'SHOPIFY', 'inventoryQuantities': [{'availableQuantity': 0, 'locationId': 'gid://shopify/Location/68605345858'}]}, {'options': ['Orange'], 'sku': 'FG-0000709', 'price': '2500.0', 'inventoryManagement': 'SHOPIFY', 'inventoryQuantities': [{'availableQuantity': 15, 'locationId': 'gid://shopify/Location/68605345858'}]}]}}}, 'response': None, 'status': None}
2025-07-15 19:06:06,820 - sync_service - INFO - API Call: {'service': 'shopify', 'endpoint': 'graphql_local', 'request': None, 'response': {'productCreate': {'product': {'id': 'gid://shopify/Product/7513978830914', 'title': 'Morsi Earrings', 'handle': 'morsi-earrings', 'variants': {'edges': [{'node': {'id': 'gid://shopify/ProductVariant/42313772335170', 'sku': 'FG-0000708', 'inventoryItem': {'id': 'gid://shopify/InventoryItem/44414049222722'}, 'selectedOptions': [{'name': 'Color', 'value': 'Blue'}]}}, {'node': {'id': 'gid://shopify/ProductVariant/42313772367938', 'sku': 'FG-0000709', 'inventoryItem': {'id': 'gid://shopify/InventoryItem/44414049255490'}, 'selectedOptions': [{'name': 'Color', 'value': 'Orange'}]}}]}}, 'userErrors': []}}, 'status': 'success'}
2025-07-15 19:06:06,821 - sync_service - ERROR - Shopify full response for store local: {'msg': 'success', 'data': {'productCreate': {'product': {'id': 'gid://shopify/Product/7513978830914', 'title': 'Morsi Earrings', 'handle': 'morsi-earrings', 'variants': {'edges': [{'node': {'id': 'gid://shopify/ProductVariant/42313772335170', 'sku': 'FG-0000708', 'inventoryItem': {'id': 'gid://shopify/InventoryItem/44414049222722'}, 'selectedOptions': [{'name': 'Color', 'value': 'Blue'}]}}, {'node': {'id': 'gid://shopify/ProductVariant/42313772367938', 'sku': 'FG-0000709', 'inventoryItem': {'id': 'gid://shopify/InventoryItem/44414049255490'}, 'selectedOptions': [{'name': 'Color', 'value': 'Orange'}]}}]}}, 'userErrors': []}}}
2025-07-15 19:06:07,708 - sync_service - INFO - API log added to SAP: shopify - /admin/api/graphql_local - success
2025-07-15 19:06:07,709 - sync_service - INFO - Successfully created product in store local
2025-07-15 19:06:09,459 - sync_service - INFO - API log added to SAP: sap - /U_SHOPIFY_MAPPING - success
2025-07-15 19:06:09,461 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'U_SHOPIFY_MAPPING', 'request': {'method': 'POST', 'url': 'https://10.0.0.100:50000/b1s/v1/U_SHOPIFY_MAPPING', 'data': {'Code': '7513978830914', 'Name': '7513978830914', 'U_Shopify_Type': 'product', 'U_SAP_Code': 'Morsi Earrings', 'U_Shopify_Store': 'local', 'U_SAP_Type': 'item'}, 'params': None}, 'response': None, 'status': None}
2025-07-15 19:06:11,847 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'U_SHOPIFY_MAPPING', 'request': None, 'response': {'odata.metadata': 'https://10.0.0.100:50000/b1s/v1/$metadata#U_SHOPIFY_MAPPING/@Element', 'Code': '7513978830914', 'Name': '7513978830914', 'U_Shopify_Type': 'product', 'U_SAP_Code': 'Morsi Earrings', 'U_SAP_Type': 'item', 'U_Shopify_Store': 'local'}, 'status': 'success'}
2025-07-15 19:06:13,106 - sync_service - INFO - API log added to SAP: sap - /U_SHOPIFY_MAPPING - success
2025-07-15 19:06:14,513 - sync_service - INFO - API log added to SAP: sap - /U_SHOPIFY_MAPPING - success
2025-07-15 19:06:14,514 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'U_SHOPIFY_MAPPING', 'request': {'method': 'POST', 'url': 'https://10.0.0.100:50000/b1s/v1/U_SHOPIFY_MAPPING', 'data': {'Code': '42313772335170', 'Name': '42313772335170', 'U_Shopify_Type': 'variant', 'U_SAP_Code': 'FG-0000708', 'U_Shopify_Store': 'local', 'U_SAP_Type': 'item'}, 'params': None}, 'response': None, 'status': None}
2025-07-15 19:06:16,045 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'U_SHOPIFY_MAPPING', 'request': None, 'response': {'odata.metadata': 'https://10.0.0.100:50000/b1s/v1/$metadata#U_SHOPIFY_MAPPING/@Element', 'Code': '42313772335170', 'Name': '42313772335170', 'U_Shopify_Type': 'variant', 'U_SAP_Code': 'FG-0000708', 'U_SAP_Type': 'item', 'U_Shopify_Store': 'local'}, 'status': 'success'}
2025-07-15 19:06:18,360 - sync_service - INFO - API log added to SAP: sap - /U_SHOPIFY_MAPPING - success
2025-07-15 19:06:19,244 - sync_service - ERROR - Failed to add API log to SAP: HTTP 400: {
   "error" : {
      "code" : -1,
      "message" : {
         "lang" : "en-us",
         "value" : "CServiceData::SetPropertyValueString failed; Value too long in property 'U_Action' of 'U_API_LOG'"
      }
   }
}

2025-07-15 19:06:19,245 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'U_SHOPIFY_MAPPING', 'request': {'method': 'POST', 'url': 'https://10.0.0.100:50000/b1s/v1/U_SHOPIFY_MAPPING', 'data': {'Code': '44414049222722', 'Name': '44414049222722', 'U_Shopify_Type': 'variant_inventory', 'U_SAP_Code': 'FG-0000708', 'U_Shopify_Store': 'local', 'U_SAP_Type': 'item'}, 'params': None}, 'response': None, 'status': None}
2025-07-15 19:06:21,495 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'U_SHOPIFY_MAPPING', 'request': None, 'response': {'odata.metadata': 'https://10.0.0.100:50000/b1s/v1/$metadata#U_SHOPIFY_MAPPING/@Element', 'Code': '44414049222722', 'Name': '44414049222722', 'U_Shopify_Type': 'variant_inventory', 'U_SAP_Code': 'FG-0000708', 'U_SAP_Type': 'item', 'U_Shopify_Store': 'local'}, 'status': 'success'}
2025-07-15 19:06:24,559 - sync_service - ERROR - Failed to add API log to SAP: HTTP 400: {
   "error" : {
      "code" : -1,
      "message" : {
         "lang" : "en-us",
         "value" : "CServiceData::SetPropertyValueString failed; Value too long in property 'U_Action' of 'U_API_LOG'"
      }
   }
}

2025-07-15 19:06:26,612 - sync_service - INFO - API log added to SAP: sap - /U_SHOPIFY_MAPPING - success
2025-07-15 19:06:26,614 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'U_SHOPIFY_MAPPING', 'request': {'method': 'POST', 'url': 'https://10.0.0.100:50000/b1s/v1/U_SHOPIFY_MAPPING', 'data': {'Code': '42313772367938', 'Name': '42313772367938', 'U_Shopify_Type': 'variant', 'U_SAP_Code': 'FG-0000709', 'U_Shopify_Store': 'local', 'U_SAP_Type': 'item'}, 'params': None}, 'response': None, 'status': None}
2025-07-15 19:06:28,457 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'U_SHOPIFY_MAPPING', 'request': None, 'response': {'odata.metadata': 'https://10.0.0.100:50000/b1s/v1/$metadata#U_SHOPIFY_MAPPING/@Element', 'Code': '42313772367938', 'Name': '42313772367938', 'U_Shopify_Type': 'variant', 'U_SAP_Code': 'FG-0000709', 'U_SAP_Type': 'item', 'U_Shopify_Store': 'local'}, 'status': 'success'}
2025-07-15 19:06:29,995 - sync_service - INFO - API log added to SAP: sap - /U_SHOPIFY_MAPPING - success
2025-07-15 19:06:31,013 - sync_service - ERROR - Failed to add API log to SAP: HTTP 400: {
   "error" : {
      "code" : -1,
      "message" : {
         "lang" : "en-us",
         "value" : "CServiceData::SetPropertyValueString failed; Value too long in property 'U_Action' of 'U_API_LOG'"
      }
   }
}

2025-07-15 19:06:31,015 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'U_SHOPIFY_MAPPING', 'request': {'method': 'POST', 'url': 'https://10.0.0.100:50000/b1s/v1/U_SHOPIFY_MAPPING', 'data': {'Code': '44414049255490', 'Name': '44414049255490', 'U_Shopify_Type': 'variant_inventory', 'U_SAP_Code': 'FG-0000709', 'U_Shopify_Store': 'local', 'U_SAP_Type': 'item'}, 'params': None}, 'response': None, 'status': None}
2025-07-15 19:06:32,040 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'U_SHOPIFY_MAPPING', 'request': None, 'response': {'odata.metadata': 'https://10.0.0.100:50000/b1s/v1/$metadata#U_SHOPIFY_MAPPING/@Element', 'Code': '44414049255490', 'Name': '44414049255490', 'U_Shopify_Type': 'variant_inventory', 'U_SAP_Code': 'FG-0000709', 'U_SAP_Type': 'item', 'U_Shopify_Store': 'local'}, 'status': 'success'}
2025-07-15 19:06:34,509 - sync_service - ERROR - Failed to add API log to SAP: HTTP 400: {
   "error" : {
      "code" : -1,
      "message" : {
         "lang" : "en-us",
         "value" : "CServiceData::SetPropertyValueString failed; Value too long in property 'U_Action' of 'U_API_LOG'"
      }
   }
}

2025-07-15 19:06:35,013 - sync_service - INFO - Sync Event: {'sync_type': 'multi_store_new_items_sap_to_shopify', 'items_processed': 1, 'success_count': 1, 'error_count': 0, 'details': None}
2025-07-15 19:06:36,485 - sync_service - INFO - API log added to SAP: system - /sync/new_items_multi_store - success
2025-07-15 19:06:36,488 - sync_service - INFO - Multi-store new items sync completed: 1 processed, 1 successful, 0 errors
2025-07-15 19:06:46,911 - sync_service - INFO - Initialized Shopify client for store: Local Store (local)
2025-07-15 19:06:46,931 - sync_service - INFO - Starting stock change sync...
2025-07-15 19:06:46,932 - sync_service - INFO - Starting stock change sync using MASHURA_StockChangeB1SLQuery view
2025-07-15 19:06:46,933 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'login', 'request': {'company': 'JudeBenHalim_Test', 'user': 'manager'}, 'response': None, 'status': None}
2025-07-15 19:06:49,331 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'login', 'request': None, 'response': {'status': 'success'}, 'status': 'success'}
2025-07-15 19:06:49,334 - sync_service - INFO - SAP login successful
2025-07-15 19:06:49,337 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'view.svc/MASHURA_StockChangeB1SLQuery', 'request': {'method': 'GET', 'url': 'https://10.0.0.100:50000/b1s/v1/view.svc/MASHURA_StockChangeB1SLQuery', 'data': None, 'params': {'$top': 50}}, 'response': None, 'status': None}
2025-07-15 19:06:51,275 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'view.svc/MASHURA_StockChangeB1SLQuery', 'request': None, 'response': {'odata.metadata': 'https://10.0.0.100:50000/b1s/v1/view.svc/$metadata#MASHURA_StockChangeB1SLQuery', 'value': [{'ItemCode': 'FG-0000709', 'Variant_ID': '44414049255490', 'OnHand': 15.0, 'Available': 15.0, 'Location_ID': '68605345858', 'id__': 1}]}, 'status': 'success'}
2025-07-15 19:06:51,276 - sync_service - INFO - API Call: {'service': 'shopify', 'endpoint': 'rest_inventory_local', 'request': {'location_id': '68605345858', 'inventory_item_id': '44414049255490', 'available': 15}, 'response': None, 'status': None}
2025-07-15 19:07:02,808 - sync_service - INFO - API Call: {'service': 'shopify', 'endpoint': 'rest_inventory_local', 'request': None, 'response': {'inventory_level': {'inventory_item_id': 44414049255490, 'location_id': 68605345858, 'available': 15, 'updated_at': '2025-07-15T19:06:12+03:00', 'admin_graphql_api_id': 'gid://shopify/InventoryLevel/103109591106?inventory_item_id=44414049255490'}}, 'status': 'success'}
2025-07-15 19:07:04,516 - sync_service - INFO - SAP logging client login successful
2025-07-15 19:07:06,212 - sync_service - INFO - API log added to SAP: shopify - inventory_levels - success
2025-07-15 19:07:06,321 - sync_service - INFO - Stock change sync completed: 1 processed, 1 successful, 0 errors
2025-07-16 13:32:18,622 - sync_service - INFO - Initialized Shopify client for store: Local Store (local)
2025-07-16 13:32:40,488 - sync_service - INFO - Initialized Shopify client for store: Local Store (local)
2025-07-16 13:32:40,508 - sync_service - INFO - Starting all syncs...
2025-07-16 13:33:07,510 - sync_service - INFO - Initialized Shopify client for store: Local Store (local)
2025-07-16 13:33:07,570 - sync_service - INFO - Starting all syncs...
2025-07-16 13:33:07,574 - sync_service - INFO - Starting new items sync...
2025-07-16 13:33:07,578 - sync_service - INFO - Starting multi-store new items sync from SAP to Shopify
2025-07-16 13:33:09,476 - sync_service - INFO - SAP logging client login successful
2025-07-16 13:33:10,999 - sync_service - INFO - API log added to SAP: system - /sync/new_items_multi_store - success
2025-07-16 13:33:11,004 - sync_service - INFO - Fetching new items for store: local
2025-07-16 13:33:11,010 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'login', 'request': {'company': 'JudeBenHalim_Test', 'user': 'manager'}, 'response': None, 'status': None}
2025-07-16 13:33:12,323 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'login', 'request': None, 'response': {'status': 'success'}, 'status': 'success'}
2025-07-16 13:33:12,326 - sync_service - INFO - SAP login successful
2025-07-16 13:33:12,330 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': "view.svc/MASHURA_New_ItemsB1SLQuery?$filter=Shopify_Store eq 'local'&$orderby=MainProduct", 'request': {'method': 'GET', 'url': "https://10.0.0.100:50000/b1s/v1/view.svc/MASHURA_New_ItemsB1SLQuery?$filter=Shopify_Store eq 'local'&$orderby=MainProduct", 'data': None, 'params': None}, 'response': None, 'status': None}
2025-07-16 13:33:13,355 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': "view.svc/MASHURA_New_ItemsB1SLQuery?$filter=Shopify_Store eq 'local'&$orderby=MainProduct", 'request': None, 'response': {'odata.metadata': 'https://10.0.0.100:50000/b1s/v1/view.svc/$metadata#MASHURA_New_ItemsB1SLQuery', 'value': []}, 'status': 'success'}
2025-07-16 13:33:13,360 - sync_service - INFO - No new items found in SAP for store local
2025-07-16 13:33:13,362 - sync_service - INFO - Sync Event: {'sync_type': 'multi_store_new_items_sap_to_shopify', 'items_processed': 0, 'success_count': 0, 'error_count': 0, 'details': None}
2025-07-16 13:33:15,672 - sync_service - INFO - API log added to SAP: system - /sync/new_items_multi_store - success
2025-07-16 13:33:15,674 - sync_service - INFO - Multi-store new items sync completed: 0 processed, 0 successful, 0 errors
2025-07-16 13:33:15,675 - sync_service - INFO - Starting stock change sync...
2025-07-16 13:33:15,676 - sync_service - INFO - Starting stock change sync using MASHURA_StockChangeB1SLQuery view
2025-07-16 13:33:15,677 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'view.svc/MASHURA_StockChangeB1SLQuery', 'request': {'method': 'GET', 'url': 'https://10.0.0.100:50000/b1s/v1/view.svc/MASHURA_StockChangeB1SLQuery', 'data': None, 'params': {'$top': 50}}, 'response': None, 'status': None}
2025-07-16 13:33:16,707 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'view.svc/MASHURA_StockChangeB1SLQuery', 'request': None, 'response': {'odata.metadata': 'https://10.0.0.100:50000/b1s/v1/view.svc/$metadata#MASHURA_StockChangeB1SLQuery', 'value': []}, 'status': 'success'}
2025-07-16 13:33:16,712 - sync_service - INFO - No stock changes found in the view.
2025-07-16 13:33:16,715 - sync_service - INFO - Starting master data sync...
2025-07-16 13:33:16,717 - sync_service - INFO - Starting master data sync
2025-07-16 13:33:16,718 - sync_service - INFO - API Call: {'service': 'shopify', 'endpoint': 'graphql', 'request': {'query': '\n        query GetProducts($first: Int!, $after: String) {\n            products(first: $first, after: $after) {\n                pageInfo {\n                    hasNextPage\n                    endCursor\n                }\n                edges {\n                    node {\n                        id\n                        title\n                        handle\n                        description\n                        variants(first: 1) {\n                            edges {\n                                node {\n                                    id\n                                    sku\n                                    price\n                                    inventoryQuantity\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n        }\n        ', 'variables': {'first': 100, 'after': None}}, 'response': None, 'status': None}
2025-07-16 13:33:26,731 - sync_service - ERROR - GraphQL query error: 
2025-07-16 13:33:26,733 - sync_service - ERROR - Failed to get products from Shopify: GraphQL query error: 
2025-07-16 13:33:26,733 - sync_service - ERROR - Product sync failed: GraphQL query error: 
2025-07-16 13:33:26,734 - sync_service - INFO - Starting orders sync...
2025-07-16 13:33:26,734 - sync_service - INFO - Starting orders sync
2025-07-16 13:33:26,735 - sync_service - INFO - Sync Event: {'sync_type': 'orders', 'items_processed': 0, 'success_count': 0, 'error_count': 0, 'details': None}
2025-07-16 13:33:26,736 - sync_service - INFO - Orders sync completed
2025-07-16 15:57:20,447 - sync_service - INFO - Initialized Shopify client for store: Local Store (local)
2025-07-16 15:57:20,504 - sync_service - INFO - Starting continuous sync mode...
2025-07-16 15:57:20,507 - sync_service - INFO - New items sync scheduled to run every 10 minutes
2025-07-16 15:57:20,507 - sync_service - INFO - Inventory sync scheduled to run every 2 minutes
2025-07-16 15:57:20,509 - sync_service - INFO - Running new_items sync...
2025-07-16 15:57:20,510 - sync_service - INFO - Starting new items sync...
2025-07-16 15:57:20,511 - sync_service - INFO - Starting multi-store new items sync from SAP to Shopify
2025-07-16 15:57:20,534 - sync_service - INFO - Running stock sync...
2025-07-16 15:57:20,537 - sync_service - INFO - Starting stock change sync...
2025-07-16 15:57:20,538 - sync_service - INFO - Starting stock change sync using MASHURA_StockChangeB1SLQuery view
2025-07-16 15:57:20,538 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'login', 'request': {'company': 'JudeBenHalim_Test', 'user': 'manager'}, 'response': None, 'status': None}
2025-07-16 15:57:21,817 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'login', 'request': None, 'response': {'status': 'success'}, 'status': 'success'}
2025-07-16 15:57:21,819 - sync_service - INFO - SAP login successful
2025-07-16 15:57:21,824 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'view.svc/MASHURA_StockChangeB1SLQuery', 'request': {'method': 'GET', 'url': 'https://10.0.0.100:50000/b1s/v1/view.svc/MASHURA_StockChangeB1SLQuery', 'data': None, 'params': {'$top': 50}}, 'response': None, 'status': None}
2025-07-16 15:57:21,831 - sync_service - INFO - SAP logging client login successful
2025-07-16 15:57:22,545 - sync_service - INFO - API log added to SAP: system - /sync/new_items_multi_store - success
2025-07-16 15:57:22,547 - sync_service - INFO - Fetching new items for store: local
2025-07-16 15:57:22,549 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': "view.svc/MASHURA_New_ItemsB1SLQuery?$filter=Shopify_Store eq 'local'&$orderby=MainProduct", 'request': {'method': 'GET', 'url': "https://10.0.0.100:50000/b1s/v1/view.svc/MASHURA_New_ItemsB1SLQuery?$filter=Shopify_Store eq 'local'&$orderby=MainProduct", 'data': None, 'params': None}, 'response': None, 'status': None}
2025-07-16 15:57:23,259 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': "view.svc/MASHURA_New_ItemsB1SLQuery?$filter=Shopify_Store eq 'local'&$orderby=MainProduct", 'request': None, 'response': {'odata.metadata': 'https://10.0.0.100:50000/b1s/v1/view.svc/$metadata#MASHURA_New_ItemsB1SLQuery', 'value': []}, 'status': 'success'}
2025-07-16 15:57:23,262 - sync_service - INFO - No new items found in SAP for store local
2025-07-16 15:57:23,264 - sync_service - INFO - Sync Event: {'sync_type': 'multi_store_new_items_sap_to_shopify', 'items_processed': 0, 'success_count': 0, 'error_count': 0, 'details': None}
2025-07-16 15:57:23,976 - sync_service - INFO - API log added to SAP: system - /sync/new_items_multi_store - success
2025-07-16 15:57:23,979 - sync_service - INFO - Multi-store new items sync completed: 0 processed, 0 successful, 0 errors
2025-07-16 15:57:23,981 - sync_service - INFO - ✅ new_items sync completed successfully
2025-07-16 15:57:23,982 - sync_service - INFO -    - Processed: 0
2025-07-16 15:57:23,983 - sync_service - INFO -    - Successful: 0
2025-07-16 15:57:23,983 - sync_service - INFO -    - Errors: 0
2025-07-16 15:57:23,988 - sync_service - INFO - Waiting 10 minutes before next new_items sync...
2025-07-16 15:57:24,011 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'view.svc/MASHURA_StockChangeB1SLQuery', 'request': None, 'response': {'odata.metadata': 'https://10.0.0.100:50000/b1s/v1/view.svc/$metadata#MASHURA_StockChangeB1SLQuery', 'value': []}, 'status': 'success'}
2025-07-16 15:57:24,014 - sync_service - INFO - No stock changes found in the view.
2025-07-16 15:57:24,015 - sync_service - INFO - ✅ stock sync completed successfully
2025-07-16 15:57:24,015 - sync_service - INFO -    - Processed: 0
2025-07-16 15:57:24,016 - sync_service - INFO -    - Successful: 0
2025-07-16 15:57:24,016 - sync_service - INFO -    - Errors: 0
2025-07-16 15:57:24,017 - sync_service - INFO - Waiting 2 minutes before next stock sync...
2025-07-16 15:59:24,019 - sync_service - INFO - Running stock sync...
2025-07-16 15:59:24,043 - sync_service - INFO - Starting stock change sync...
2025-07-16 15:59:24,070 - sync_service - INFO - Starting stock change sync using MASHURA_StockChangeB1SLQuery view
2025-07-16 15:59:24,099 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'view.svc/MASHURA_StockChangeB1SLQuery', 'request': {'method': 'GET', 'url': 'https://10.0.0.100:50000/b1s/v1/view.svc/MASHURA_StockChangeB1SLQuery', 'data': None, 'params': {'$top': 50}}, 'response': None, 'status': None}
2025-07-16 15:59:25,748 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'view.svc/MASHURA_StockChangeB1SLQuery', 'request': None, 'response': {'odata.metadata': 'https://10.0.0.100:50000/b1s/v1/view.svc/$metadata#MASHURA_StockChangeB1SLQuery', 'value': []}, 'status': 'success'}
2025-07-16 15:59:25,917 - sync_service - INFO - No stock changes found in the view.
2025-07-16 15:59:26,032 - sync_service - INFO - ✅ stock sync completed successfully
2025-07-16 15:59:26,064 - sync_service - INFO -    - Processed: 0
2025-07-16 15:59:26,074 - sync_service - INFO -    - Successful: 0
2025-07-16 15:59:26,082 - sync_service - INFO -    - Errors: 0
2025-07-16 15:59:26,089 - sync_service - INFO - Waiting 2 minutes before next stock sync...
2025-07-16 16:01:26,101 - sync_service - INFO - Running stock sync...
2025-07-16 16:01:26,103 - sync_service - INFO - Starting stock change sync...
2025-07-16 16:01:26,105 - sync_service - INFO - Starting stock change sync using MASHURA_StockChangeB1SLQuery view
2025-07-16 16:01:26,107 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'view.svc/MASHURA_StockChangeB1SLQuery', 'request': {'method': 'GET', 'url': 'https://10.0.0.100:50000/b1s/v1/view.svc/MASHURA_StockChangeB1SLQuery', 'data': None, 'params': {'$top': 50}}, 'response': None, 'status': None}
2025-07-16 16:01:27,253 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'view.svc/MASHURA_StockChangeB1SLQuery', 'request': None, 'response': {'odata.metadata': 'https://10.0.0.100:50000/b1s/v1/view.svc/$metadata#MASHURA_StockChangeB1SLQuery', 'value': []}, 'status': 'success'}
2025-07-16 16:01:27,254 - sync_service - INFO - No stock changes found in the view.
2025-07-16 16:01:27,255 - sync_service - INFO - ✅ stock sync completed successfully
2025-07-16 16:01:27,256 - sync_service - INFO -    - Processed: 0
2025-07-16 16:01:27,257 - sync_service - INFO -    - Successful: 0
2025-07-16 16:01:27,257 - sync_service - INFO -    - Errors: 0
2025-07-16 16:01:27,258 - sync_service - INFO - Waiting 2 minutes before next stock sync...
2025-07-16 16:03:27,260 - sync_service - INFO - Running stock sync...
2025-07-16 16:03:27,261 - sync_service - INFO - Starting stock change sync...
2025-07-16 16:03:27,262 - sync_service - INFO - Starting stock change sync using MASHURA_StockChangeB1SLQuery view
2025-07-16 16:03:27,263 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'view.svc/MASHURA_StockChangeB1SLQuery', 'request': {'method': 'GET', 'url': 'https://10.0.0.100:50000/b1s/v1/view.svc/MASHURA_StockChangeB1SLQuery', 'data': None, 'params': {'$top': 50}}, 'response': None, 'status': None}
2025-07-16 16:03:28,209 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'view.svc/MASHURA_StockChangeB1SLQuery', 'request': None, 'response': {'odata.metadata': 'https://10.0.0.100:50000/b1s/v1/view.svc/$metadata#MASHURA_StockChangeB1SLQuery', 'value': []}, 'status': 'success'}
2025-07-16 16:03:28,209 - sync_service - INFO - No stock changes found in the view.
2025-07-16 16:03:28,210 - sync_service - INFO - ✅ stock sync completed successfully
2025-07-16 16:03:28,210 - sync_service - INFO -    - Processed: 0
2025-07-16 16:03:28,211 - sync_service - INFO -    - Successful: 0
2025-07-16 16:03:28,211 - sync_service - INFO -    - Errors: 0
2025-07-16 16:03:28,211 - sync_service - INFO - Waiting 2 minutes before next stock sync...
2025-07-16 16:05:28,216 - sync_service - INFO - Running stock sync...
2025-07-16 16:05:28,220 - sync_service - INFO - Starting stock change sync...
2025-07-16 16:05:28,225 - sync_service - INFO - Starting stock change sync using MASHURA_StockChangeB1SLQuery view
2025-07-16 16:05:28,228 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'view.svc/MASHURA_StockChangeB1SLQuery', 'request': {'method': 'GET', 'url': 'https://10.0.0.100:50000/b1s/v1/view.svc/MASHURA_StockChangeB1SLQuery', 'data': None, 'params': {'$top': 50}}, 'response': None, 'status': None}
2025-07-16 16:05:29,232 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'view.svc/MASHURA_StockChangeB1SLQuery', 'request': None, 'response': {'odata.metadata': 'https://10.0.0.100:50000/b1s/v1/view.svc/$metadata#MASHURA_StockChangeB1SLQuery', 'value': [{'ItemCode': 'FG-0000708', 'Variant_ID': '44414049222722', 'OnHand': 25.0, 'Available': 25.0, 'Location_ID': '68605345858', 'id__': 1}]}, 'status': 'success'}
2025-07-16 16:05:29,234 - sync_service - INFO - API Call: {'service': 'shopify', 'endpoint': 'rest_inventory_local', 'request': {'location_id': '68605345858', 'inventory_item_id': '44414049222722', 'available': 25}, 'response': None, 'status': None}
2025-07-16 16:05:41,196 - sync_service - INFO - API Call: {'service': 'shopify', 'endpoint': 'rest_inventory_local', 'request': None, 'response': {'inventory_level': {'inventory_item_id': 44414049222722, 'location_id': 68605345858, 'available': 25, 'updated_at': '2025-07-16T16:05:41+03:00', 'admin_graphql_api_id': 'gid://shopify/InventoryLevel/103109591106?inventory_item_id=44414049222722'}}, 'status': 'success'}
2025-07-16 16:05:42,700 - sync_service - INFO - API log added to SAP: shopify - inventory_levels - success
2025-07-16 16:05:42,811 - sync_service - INFO - Stock change sync completed: 1 processed, 1 successful, 0 errors
2025-07-16 16:05:42,811 - sync_service - INFO - ✅ stock sync completed successfully
2025-07-16 16:05:42,812 - sync_service - INFO -    - Processed: 1
2025-07-16 16:05:42,813 - sync_service - INFO -    - Successful: 1
2025-07-16 16:05:42,814 - sync_service - INFO -    - Errors: 0
2025-07-16 16:05:42,815 - sync_service - INFO - Waiting 2 minutes before next stock sync...
2025-07-16 16:07:23,998 - sync_service - INFO - Running new_items sync...
2025-07-16 16:07:24,001 - sync_service - INFO - Starting new items sync...
2025-07-16 16:07:24,003 - sync_service - INFO - Starting multi-store new items sync from SAP to Shopify
2025-07-16 16:07:24,851 - sync_service - INFO - API log added to SAP: system - /sync/new_items_multi_store - success
2025-07-16 16:07:24,852 - sync_service - INFO - Fetching new items for store: local
2025-07-16 16:07:24,853 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': "view.svc/MASHURA_New_ItemsB1SLQuery?$filter=Shopify_Store eq 'local'&$orderby=MainProduct", 'request': {'method': 'GET', 'url': "https://10.0.0.100:50000/b1s/v1/view.svc/MASHURA_New_ItemsB1SLQuery?$filter=Shopify_Store eq 'local'&$orderby=MainProduct", 'data': None, 'params': None}, 'response': None, 'status': None}
2025-07-16 16:07:25,692 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': "view.svc/MASHURA_New_ItemsB1SLQuery?$filter=Shopify_Store eq 'local'&$orderby=MainProduct", 'request': None, 'response': {'odata.metadata': 'https://10.0.0.100:50000/b1s/v1/view.svc/$metadata#MASHURA_New_ItemsB1SLQuery', 'value': [{'itemcode': 'FG-0000710', 'ItemName': 'Morsi-Earrings-Purpple', 'MainProduct': 'Morsi Earrings', 'Color': 'Purple', 'OnHand': 10.0, 'IsCommited': 0.0, 'Available': 10.0, 'Price': 2500.0, 'Status': 'existing', 'Shopify_ProductCode': '7513978830914', 'Shopify_Store': 'local', 'id__': 1}]}, 'status': 'success'}
2025-07-16 16:07:25,697 - sync_service - INFO - Product group: ('Morsi Earrings', 'local') has 1 items
2025-07-16 16:07:25,699 - sync_service - INFO - Grouped 1 items into 1 product groups for store local
2025-07-16 16:07:25,699 - sync_service - INFO - Processing product group: ('Morsi Earrings', 'local') with 1 items for store local
2025-07-16 16:07:25,700 - sync_service - INFO - Found existing Shopify product ID: 7513978830914 for Morsi Earrings
2025-07-16 16:07:25,706 - sync_service - INFO - Product Morsi Earrings already exists in store local, adding variants
2025-07-16 16:07:25,708 - sync_service - INFO - API Call: {'service': 'shopify', 'endpoint': 'graphql_local', 'request': {'query': '\n        query GetProduct($id: ID!) {\n            product(id: $id) {\n                id\n                title\n                handle\n                description\n                variants(first: 50) {\n                    edges {\n                        node {\n                            id\n                            sku\n                            price\n                            inventoryItem {\n                                id\n                            }\n                            selectedOptions {\n                                name\n                                value\n                            }\n                        }\n                    }\n                }\n            }\n        }\n        ', 'variables': {'id': 'gid://shopify/Product/7513978830914'}}, 'response': None, 'status': None}
2025-07-16 16:07:35,725 - sync_service - ERROR - GraphQL query error for store local: 
2025-07-16 16:07:35,729 - sync_service - INFO - API Call: {'service': 'shopify', 'endpoint': 'graphql_local', 'request': {'query': '\n        query GetProductByHandle($handle: String!) {\n            productByHandle(handle: $handle) {\n                id\n                title\n                handle\n                description\n                variants(first: 50) {\n                    edges {\n                        node {\n                            id\n                            sku\n                            price\n                            inventoryItem {\n                                id\n                            }\n                            selectedOptions {\n                                name\n                                value\n                            }\n                        }\n                    }\n                }\n            }\n        }\n        ', 'variables': {'handle': None}}, 'response': None, 'status': None}
2025-07-16 16:07:37,233 - sync_service - ERROR - GraphQL query error for store local: {'message': 'Variable $handle of type String! was provided invalid value', 'locations': [{'line': 1, 'column': 26}], 'extensions': {'value': None, 'problems': [{'path': [], 'explanation': 'Expected value to not be null'}]}}
GraphQL Errors: [
  {
    "message": "Variable $handle of type String! was provided invalid value",
    "locations": [
      {
        "line": 1,
        "column": 26
      }
    ],
    "extensions": {
      "value": null,
      "problems": [
        {
          "path": [],
          "explanation": "Expected value to not be null"
        }
      ]
    }
  }
]
2025-07-16 16:07:38,013 - sync_service - ERROR - Failed to add API log to SAP: HTTP 400: {
   "error" : {
      "code" : -1,
      "message" : {
         "lang" : "en-us",
         "value" : "CServiceData::SetPropertyValueString failed; Value too long in property 'U_Value' of 'U_API_LOG'"
      }
   }
}

2025-07-16 16:07:38,770 - sync_service - ERROR - Failed to add API log to SAP: HTTP 400: {
   "error" : {
      "code" : -1,
      "message" : {
         "lang" : "en-us",
         "value" : "CServiceData::SetPropertyValueString failed; Value too long in property 'U_Action' of 'U_API_LOG'"
      }
   }
}

2025-07-16 16:07:38,771 - sync_service - INFO - API Call: {'service': 'shopify', 'endpoint': 'graphql_local', 'request': {'query': '\n        mutation productVariantCreate($input: ProductVariantInput!) {\n            productVariantCreate(input: $input) {\n                productVariant {\n                    id\n                    sku\n                    price\n                    inventoryItem {\n                        id\n                    }\n                    selectedOptions {\n                        name\n                        value\n                    }\n                }\n                userErrors {\n                    field\n                    message\n                }\n            }\n        }\n        ', 'variables': {'input': {'sku': 'FG-0000710', 'price': '2500.0', 'inventoryPolicy': 'DENY', 'inventoryManagement': 'SHOPIFY', 'weight': 0.0, 'weightUnit': 'KILOGRAMS', 'options': ['Purple'], 'productId': 'gid://shopify/Product/7513978830914'}}}, 'response': None, 'status': None}
2025-07-16 16:07:42,831 - sync_service - INFO - Running stock sync...
2025-07-16 16:07:42,832 - sync_service - INFO - Starting stock change sync...
2025-07-16 16:07:42,832 - sync_service - INFO - Starting stock change sync using MASHURA_StockChangeB1SLQuery view
2025-07-16 16:07:42,833 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'view.svc/MASHURA_StockChangeB1SLQuery', 'request': {'method': 'GET', 'url': 'https://10.0.0.100:50000/b1s/v1/view.svc/MASHURA_StockChangeB1SLQuery', 'data': None, 'params': {'$top': 50}}, 'response': None, 'status': None}
2025-07-16 16:07:43,606 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'view.svc/MASHURA_StockChangeB1SLQuery', 'request': None, 'response': {'odata.metadata': 'https://10.0.0.100:50000/b1s/v1/view.svc/$metadata#MASHURA_StockChangeB1SLQuery', 'value': []}, 'status': 'success'}
2025-07-16 16:07:43,610 - sync_service - INFO - No stock changes found in the view.
2025-07-16 16:07:43,612 - sync_service - INFO - ✅ stock sync completed successfully
2025-07-16 16:07:43,612 - sync_service - INFO -    - Processed: 0
2025-07-16 16:07:43,613 - sync_service - INFO -    - Successful: 0
2025-07-16 16:07:43,614 - sync_service - INFO -    - Errors: 0
2025-07-16 16:07:43,615 - sync_service - INFO - Waiting 2 minutes before next stock sync...
2025-07-16 16:07:48,779 - sync_service - ERROR - GraphQL query error for store local: 
2025-07-16 16:07:48,782 - sync_service - ERROR - Detailed variant creation error for FG-0000710: GraphQL query error for store local: 
2025-07-16 16:07:49,591 - sync_service - ERROR - Failed to add API log to SAP: HTTP 400: {
   "error" : {
      "code" : -1,
      "message" : {
         "lang" : "en-us",
         "value" : "CServiceData::SetPropertyValueString failed; Value too long in property 'U_Action' of 'U_API_LOG'"
      }
   }
}

2025-07-16 16:07:49,593 - sync_service - ERROR - Failed to add variant FG-0000710: GraphQL query error for store local: 
2025-07-16 16:07:50,412 - sync_service - INFO - API log added to SAP: sap - /U_SHOPIFY_MAPPING - success
2025-07-16 16:07:50,415 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'U_SHOPIFY_MAPPING', 'request': {'method': 'POST', 'url': 'https://10.0.0.100:50000/b1s/v1/U_SHOPIFY_MAPPING', 'data': {'Code': '7513978830914', 'Name': '7513978830914', 'U_Shopify_Type': 'product', 'U_SAP_Code': 'Morsi Earrings', 'U_Shopify_Store': 'local', 'U_SAP_Type': 'item'}, 'params': None}, 'response': None, 'status': None}
2025-07-16 16:07:51,199 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'U_SHOPIFY_MAPPING', 'request': None, 'response': {'status_code': 400, 'text': '{\n   "error" : {\n      "code" : -2035,\n      "message" : {\n         "lang" : "en-us",\n         "value" : "This entry already exists in the following tables (ODBC -2035)"\n      }\n   }\n}\n'}, 'status': 'failure'}
2025-07-16 16:07:51,960 - sync_service - INFO - API log added to SAP: sap - /U_SHOPIFY_MAPPING - failure
2025-07-16 16:07:52,464 - sync_service - INFO - Sync Event: {'sync_type': 'multi_store_new_items_sap_to_shopify', 'items_processed': 1, 'success_count': 0, 'error_count': 1, 'details': None}
2025-07-16 16:07:53,200 - sync_service - INFO - API log added to SAP: system - /sync/new_items_multi_store - success
2025-07-16 16:07:53,200 - sync_service - INFO - Multi-store new items sync completed: 1 processed, 0 successful, 1 errors
2025-07-16 16:07:53,201 - sync_service - INFO - ✅ new_items sync completed successfully
2025-07-16 16:07:53,201 - sync_service - INFO -    - Processed: 1
2025-07-16 16:07:53,202 - sync_service - INFO -    - Successful: 0
2025-07-16 16:07:53,202 - sync_service - INFO -    - Errors: 1
2025-07-16 16:07:53,203 - sync_service - INFO - Waiting 10 minutes before next new_items sync...
2025-07-16 16:12:23,712 - sync_service - INFO - Initialized Shopify client for store: Local Store (local)
2025-07-16 16:12:23,748 - sync_service - INFO - Starting new items sync...
2025-07-16 16:12:23,749 - sync_service - INFO - Starting multi-store new items sync from SAP to Shopify
2025-07-16 16:12:25,012 - sync_service - INFO - SAP logging client login successful
2025-07-16 16:12:26,198 - sync_service - INFO - API log added to SAP: system - /sync/new_items_multi_store - success
2025-07-16 16:12:26,199 - sync_service - INFO - Fetching new items for store: local
2025-07-16 16:12:26,200 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'login', 'request': {'company': 'JudeBenHalim_Test', 'user': 'manager'}, 'response': None, 'status': None}
2025-07-16 16:12:27,283 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'login', 'request': None, 'response': {'status': 'success'}, 'status': 'success'}
2025-07-16 16:12:27,284 - sync_service - INFO - SAP login successful
2025-07-16 16:12:27,291 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': "view.svc/MASHURA_New_ItemsB1SLQuery?$filter=Shopify_Store eq 'local'&$orderby=MainProduct", 'request': {'method': 'GET', 'url': "https://10.0.0.100:50000/b1s/v1/view.svc/MASHURA_New_ItemsB1SLQuery?$filter=Shopify_Store eq 'local'&$orderby=MainProduct", 'data': None, 'params': None}, 'response': None, 'status': None}
2025-07-16 16:12:28,401 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': "view.svc/MASHURA_New_ItemsB1SLQuery?$filter=Shopify_Store eq 'local'&$orderby=MainProduct", 'request': None, 'response': {'odata.metadata': 'https://10.0.0.100:50000/b1s/v1/view.svc/$metadata#MASHURA_New_ItemsB1SLQuery', 'value': [{'itemcode': 'FG-0000710', 'ItemName': 'Morsi-Earrings-Purpple', 'MainProduct': 'Morsi Earrings', 'Color': 'Purple', 'OnHand': 10.0, 'IsCommited': 0.0, 'Available': 10.0, 'Price': 2500.0, 'Status': 'existing', 'Shopify_ProductCode': '7513978830914', 'Shopify_Store': 'local', 'id__': 1}]}, 'status': 'success'}
2025-07-16 16:12:28,407 - sync_service - INFO - Product group: ('Morsi Earrings', 'local') has 1 items
2025-07-16 16:12:28,409 - sync_service - INFO - Grouped 1 items into 1 product groups for store local
2025-07-16 16:12:28,410 - sync_service - INFO - Processing product group: ('Morsi Earrings', 'local') with 1 items for store local
2025-07-16 16:12:28,412 - sync_service - INFO - Found existing Shopify product ID: 7513978830914 for Morsi Earrings
2025-07-16 16:12:28,415 - sync_service - INFO - Product Morsi Earrings already exists in store local, adding variants
2025-07-16 16:12:28,416 - sync_service - INFO - API Call: {'service': 'shopify', 'endpoint': 'graphql_local', 'request': {'query': '\n        query GetProduct($id: ID!) {\n            product(id: $id) {\n                id\n                title\n                handle\n                description\n                variants(first: 50) {\n                    edges {\n                        node {\n                            id\n                            sku\n                            price\n                            inventoryItem {\n                                id\n                            }\n                            selectedOptions {\n                                name\n                                value\n                            }\n                        }\n                    }\n                }\n            }\n        }\n        ', 'variables': {'id': 'gid://shopify/Product/7513978830914'}}, 'response': None, 'status': None}
2025-07-16 16:12:28,964 - sync_service - INFO - API Call: {'service': 'shopify', 'endpoint': 'graphql_local', 'request': None, 'response': {'product': {'id': 'gid://shopify/Product/7513978830914', 'title': 'Morsi Earrings', 'handle': 'morsi-earrings', 'description': '', 'variants': {'edges': [{'node': {'id': 'gid://shopify/ProductVariant/42313772335170', 'sku': 'FG-0000708', 'price': '2500.00', 'inventoryItem': {'id': 'gid://shopify/InventoryItem/44414049222722'}, 'selectedOptions': [{'name': 'Color', 'value': 'Blue'}]}}, {'node': {'id': 'gid://shopify/ProductVariant/42313772367938', 'sku': 'FG-0000709', 'price': '2500.00', 'inventoryItem': {'id': 'gid://shopify/InventoryItem/44414049255490'}, 'selectedOptions': [{'name': 'Color', 'value': 'Orange'}]}}]}}}, 'status': 'success'}
2025-07-16 16:12:28,965 - sync_service - INFO - API Call: {'service': 'shopify', 'endpoint': 'graphql_local', 'request': {'query': '\n        query GetProduct($id: ID!) {\n            product(id: $id) {\n                id\n                title\n                handle\n                description\n                variants(first: 50) {\n                    edges {\n                        node {\n                            id\n                            sku\n                            price\n                            inventoryItem {\n                                id\n                            }\n                            selectedOptions {\n                                name\n                                value\n                            }\n                        }\n                    }\n                }\n            }\n        }\n        ', 'variables': {'id': 'gid://shopify/Product/7513978830914'}}, 'response': None, 'status': None}
2025-07-16 16:12:29,450 - sync_service - INFO - API Call: {'service': 'shopify', 'endpoint': 'graphql_local', 'request': None, 'response': {'product': {'id': 'gid://shopify/Product/7513978830914', 'title': 'Morsi Earrings', 'handle': 'morsi-earrings', 'description': '', 'variants': {'edges': [{'node': {'id': 'gid://shopify/ProductVariant/42313772335170', 'sku': 'FG-0000708', 'price': '2500.00', 'inventoryItem': {'id': 'gid://shopify/InventoryItem/44414049222722'}, 'selectedOptions': [{'name': 'Color', 'value': 'Blue'}]}}, {'node': {'id': 'gid://shopify/ProductVariant/42313772367938', 'sku': 'FG-0000709', 'price': '2500.00', 'inventoryItem': {'id': 'gid://shopify/InventoryItem/44414049255490'}, 'selectedOptions': [{'name': 'Color', 'value': 'Orange'}]}}]}}}, 'status': 'success'}
2025-07-16 16:12:30,171 - sync_service - ERROR - Failed to add API log to SAP: HTTP 400: {
   "error" : {
      "code" : -1,
      "message" : {
         "lang" : "en-us",
         "value" : "CServiceData::SetPropertyValueString failed; Value too long in property 'U_Action' of 'U_API_LOG'"
      }
   }
}

2025-07-16 16:12:30,174 - sync_service - INFO - API Call: {'service': 'shopify', 'endpoint': 'graphql_local', 'request': {'query': '\n        mutation productVariantCreate($input: ProductVariantInput!) {\n            productVariantCreate(input: $input) {\n                productVariant {\n                    id\n                    sku\n                    price\n                    inventoryItem {\n                        id\n                    }\n                    selectedOptions {\n                        name\n                        value\n                    }\n                }\n                userErrors {\n                    field\n                    message\n                }\n            }\n        }\n        ', 'variables': {'input': {'sku': 'FG-0000710', 'price': '2500.0', 'inventoryPolicy': 'DENY', 'inventoryManagement': 'SHOPIFY', 'weight': 0.0, 'weightUnit': 'KILOGRAMS', 'options': ['Purple'], 'productId': 'gid://shopify/Product/7513978830914'}}}, 'response': None, 'status': None}
2025-07-16 16:12:30,890 - sync_service - INFO - API Call: {'service': 'shopify', 'endpoint': 'graphql_local', 'request': None, 'response': {'productVariantCreate': {'productVariant': {'id': 'gid://shopify/ProductVariant/42316493389890', 'sku': 'FG-0000710', 'price': '2500.00', 'inventoryItem': {'id': 'gid://shopify/InventoryItem/44416857014338'}, 'selectedOptions': [{'name': 'Color', 'value': 'Purple'}]}, 'userErrors': []}}, 'status': 'success'}
2025-07-16 16:12:30,892 - sync_service - INFO - API Call: {'service': 'shopify', 'endpoint': 'graphql_local', 'request': {'query': '\n        mutation productVariantUpdate($input: ProductVariantInput!) {\n            productVariantUpdate(input: $input) {\n                productVariant {\n                    id\n                    sku\n                    title\n                    selectedOptions {\n                        name\n                        value\n                    }\n                }\n                userErrors {\n                    field\n                    message\n                }\n            }\n        }\n        ', 'variables': {'input': {'title': 'Purple', 'id': 'gid://shopify/ProductVariant/42316493389890'}}}, 'response': None, 'status': None}
2025-07-16 16:12:40,082 - sync_service - INFO - API Call: {'service': 'shopify', 'endpoint': 'graphql_local', 'request': None, 'response': {'productVariantUpdate': {'productVariant': {'id': 'gid://shopify/ProductVariant/42316493389890', 'sku': 'FG-0000710', 'title': 'Purple', 'selectedOptions': [{'name': 'Color', 'value': 'Purple'}]}, 'userErrors': []}}, 'status': 'success'}
2025-07-16 16:12:40,084 - sync_service - INFO - Updated variant FG-0000710 title to 'Purple'
2025-07-16 16:12:40,679 - sync_service - ERROR - Failed to add API log to SAP: HTTP 400: {
   "error" : {
      "code" : -1,
      "message" : {
         "lang" : "en-us",
         "value" : "CServiceData::SetPropertyValueString failed; Value too long in property 'U_Action' of 'U_API_LOG'"
      }
   }
}

2025-07-16 16:12:40,681 - sync_service - INFO - API Call: {'service': 'shopify', 'endpoint': 'graphql_local', 'request': {'query': '\n        mutation inventoryAdjustQuantity($input: InventoryAdjustQuantityInput!) {\n            inventoryAdjustQuantity(input: $input) {\n                inventoryLevel {\n                    available\n                }\n                userErrors {\n                    field\n                    message\n                }\n            }\n        }\n        ', 'variables': {'input': {'inventoryItemId': 'gid://shopify/InventoryItem/44416857014338', 'availableDelta': 10}}}, 'response': None, 'status': None}
2025-07-16 16:12:41,198 - sync_service - ERROR - GraphQL query error for store local: {'message': "Field 'inventoryAdjustQuantity' doesn't exist on type 'Mutation'", 'locations': [{'line': 2, 'column': 3}], 'path': ['mutation inventoryAdjustQuantity', 'inventoryAdjustQuantity'], 'extensions': {'code': 'undefinedField', 'typeName': 'Mutation', 'fieldName': 'inventoryAdjustQuantity'}}
GraphQL Errors: [
  {
    "message": "Field 'inventoryAdjustQuantity' doesn't exist on type 'Mutation'",
    "locations": [
      {
        "line": 2,
        "column": 3
      }
    ],
    "path": [
      "mutation inventoryAdjustQuantity",
      "inventoryAdjustQuantity"
    ],
    "extensions": {
      "code": "undefinedField",
      "typeName": "Mutation",
      "fieldName": "inventoryAdjustQuantity"
    }
  },
  {
    "message": "Variable $input is declared by inventoryAdjustQuantity but not used",
    "locations": [
      {
        "line": 1,
        "column": 1
      }
    ],
    "path": [
      "mutation inventoryAdjustQuantity"
    ],
    "extensions": {
      "code": "variableNotUsed",
      "variableName": "input"
    }
  }
]
2025-07-16 16:12:41,827 - sync_service - ERROR - Failed to add API log to SAP: HTTP 400: {
   "error" : {
      "code" : -1,
      "message" : {
         "lang" : "en-us",
         "value" : "CServiceData::SetPropertyValueString failed; Value too long in property 'U_Value' of 'U_API_LOG'"
      }
   }
}

2025-07-16 16:12:41,830 - sync_service - WARNING - Failed to set inventory for variant FG-0000710: GraphQL query error for store local: {'message': "Field 'inventoryAdjustQuantity' doesn't exist on type 'Mutation'", 'locations': [{'line': 2, 'column': 3}], 'path': ['mutation inventoryAdjustQuantity', 'inventoryAdjustQuantity'], 'extensions': {'code': 'undefinedField', 'typeName': 'Mutation', 'fieldName': 'inventoryAdjustQuantity'}}
GraphQL Errors: [
  {
    "message": "Field 'inventoryAdjustQuantity' doesn't exist on type 'Mutation'",
    "locations": [
      {
        "line": 2,
        "column": 3
      }
    ],
    "path": [
      "mutation inventoryAdjustQuantity",
      "inventoryAdjustQuantity"
    ],
    "extensions": {
      "code": "undefinedField",
      "typeName": "Mutation",
      "fieldName": "inventoryAdjustQuantity"
    }
  },
  {
    "message": "Variable $input is declared by inventoryAdjustQuantity but not used",
    "locations": [
      {
        "line": 1,
        "column": 1
      }
    ],
    "path": [
      "mutation inventoryAdjustQuantity"
    ],
    "extensions": {
      "code": "variableNotUsed",
      "variableName": "input"
    }
  }
]
2025-07-16 16:12:41,832 - sync_service - INFO - Successfully added variant FG-0000710 to existing product
2025-07-16 16:12:42,449 - sync_service - INFO - API log added to SAP: sap - /U_SHOPIFY_MAPPING - success
2025-07-16 16:12:42,449 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'U_SHOPIFY_MAPPING', 'request': {'method': 'POST', 'url': 'https://10.0.0.100:50000/b1s/v1/U_SHOPIFY_MAPPING', 'data': {'Code': '7513978830914', 'Name': '7513978830914', 'U_Shopify_Type': 'product', 'U_SAP_Code': 'Morsi Earrings', 'U_Shopify_Store': 'local', 'U_SAP_Type': 'item'}, 'params': None}, 'response': None, 'status': None}
2025-07-16 16:12:43,064 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'U_SHOPIFY_MAPPING', 'request': None, 'response': {'status_code': 400, 'text': '{\n   "error" : {\n      "code" : -2035,\n      "message" : {\n         "lang" : "en-us",\n         "value" : "This entry already exists in the following tables (ODBC -2035)"\n      }\n   }\n}\n'}, 'status': 'failure'}
2025-07-16 16:12:43,694 - sync_service - INFO - API log added to SAP: sap - /U_SHOPIFY_MAPPING - failure
2025-07-16 16:12:44,331 - sync_service - INFO - API log added to SAP: sap - /U_SHOPIFY_MAPPING - success
2025-07-16 16:12:44,332 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'U_SHOPIFY_MAPPING', 'request': {'method': 'POST', 'url': 'https://10.0.0.100:50000/b1s/v1/U_SHOPIFY_MAPPING', 'data': {'Code': '42316493389890', 'Name': '42316493389890', 'U_Shopify_Type': 'variant', 'U_SAP_Code': 'FG-0000710', 'U_Shopify_Store': 'local', 'U_SAP_Type': 'item'}, 'params': None}, 'response': None, 'status': None}
2025-07-16 16:12:44,978 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'U_SHOPIFY_MAPPING', 'request': None, 'response': {'odata.metadata': 'https://10.0.0.100:50000/b1s/v1/$metadata#U_SHOPIFY_MAPPING/@Element', 'Code': '42316493389890', 'Name': '42316493389890', 'U_Shopify_Type': 'variant', 'U_SAP_Code': 'FG-0000710', 'U_SAP_Type': 'item', 'U_Shopify_Store': 'local'}, 'status': 'success'}
2025-07-16 16:12:45,631 - sync_service - INFO - API log added to SAP: sap - /U_SHOPIFY_MAPPING - success
2025-07-16 16:12:46,267 - sync_service - ERROR - Failed to add API log to SAP: HTTP 400: {
   "error" : {
      "code" : -1,
      "message" : {
         "lang" : "en-us",
         "value" : "CServiceData::SetPropertyValueString failed; Value too long in property 'U_Action' of 'U_API_LOG'"
      }
   }
}

2025-07-16 16:12:46,267 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'U_SHOPIFY_MAPPING', 'request': {'method': 'POST', 'url': 'https://10.0.0.100:50000/b1s/v1/U_SHOPIFY_MAPPING', 'data': {'Code': '44416857014338', 'Name': '44416857014338', 'U_Shopify_Type': 'variant_inventory', 'U_SAP_Code': 'FG-0000710', 'U_Shopify_Store': 'local', 'U_SAP_Type': 'item'}, 'params': None}, 'response': None, 'status': None}
2025-07-16 16:12:46,934 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'U_SHOPIFY_MAPPING', 'request': None, 'response': {'odata.metadata': 'https://10.0.0.100:50000/b1s/v1/$metadata#U_SHOPIFY_MAPPING/@Element', 'Code': '44416857014338', 'Name': '44416857014338', 'U_Shopify_Type': 'variant_inventory', 'U_SAP_Code': 'FG-0000710', 'U_SAP_Type': 'item', 'U_Shopify_Store': 'local'}, 'status': 'success'}
2025-07-16 16:12:47,607 - sync_service - ERROR - Failed to add API log to SAP: HTTP 400: {
   "error" : {
      "code" : -1,
      "message" : {
         "lang" : "en-us",
         "value" : "CServiceData::SetPropertyValueString failed; Value too long in property 'U_Action' of 'U_API_LOG'"
      }
   }
}

2025-07-16 16:12:48,118 - sync_service - INFO - Sync Event: {'sync_type': 'multi_store_new_items_sap_to_shopify', 'items_processed': 1, 'success_count': 1, 'error_count': 0, 'details': None}
2025-07-16 16:12:48,800 - sync_service - INFO - API log added to SAP: system - /sync/new_items_multi_store - success
2025-07-16 16:12:48,801 - sync_service - INFO - Multi-store new items sync completed: 1 processed, 1 successful, 0 errors
2025-07-16 16:14:35,292 - sync_service - INFO - Initialized Shopify client for store: Local Store (local)
2025-07-16 16:14:35,331 - sync_service - INFO - Starting new items sync...
2025-07-16 16:14:35,333 - sync_service - INFO - Starting multi-store new items sync from SAP to Shopify
2025-07-16 16:14:36,567 - sync_service - INFO - SAP logging client login successful
2025-07-16 16:14:37,684 - sync_service - INFO - API log added to SAP: system - /sync/new_items_multi_store - success
2025-07-16 16:14:37,684 - sync_service - INFO - Fetching new items for store: local
2025-07-16 16:14:37,685 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'login', 'request': {'company': 'JudeBenHalim_Test', 'user': 'manager'}, 'response': None, 'status': None}
2025-07-16 16:14:38,761 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'login', 'request': None, 'response': {'status': 'success'}, 'status': 'success'}
2025-07-16 16:14:38,762 - sync_service - INFO - SAP login successful
2025-07-16 16:14:38,764 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': "view.svc/MASHURA_New_ItemsB1SLQuery?$filter=Shopify_Store eq 'local'&$orderby=MainProduct", 'request': {'method': 'GET', 'url': "https://10.0.0.100:50000/b1s/v1/view.svc/MASHURA_New_ItemsB1SLQuery?$filter=Shopify_Store eq 'local'&$orderby=MainProduct", 'data': None, 'params': None}, 'response': None, 'status': None}
2025-07-16 16:14:39,884 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': "view.svc/MASHURA_New_ItemsB1SLQuery?$filter=Shopify_Store eq 'local'&$orderby=MainProduct", 'request': None, 'response': {'odata.metadata': 'https://10.0.0.100:50000/b1s/v1/view.svc/$metadata#MASHURA_New_ItemsB1SLQuery', 'value': []}, 'status': 'success'}
2025-07-16 16:14:39,885 - sync_service - INFO - No new items found in SAP for store local
2025-07-16 16:14:39,886 - sync_service - INFO - Sync Event: {'sync_type': 'multi_store_new_items_sap_to_shopify', 'items_processed': 0, 'success_count': 0, 'error_count': 0, 'details': None}
2025-07-16 16:14:40,629 - sync_service - INFO - API log added to SAP: system - /sync/new_items_multi_store - success
2025-07-16 16:14:40,630 - sync_service - INFO - Multi-store new items sync completed: 0 processed, 0 successful, 0 errors
2025-07-16 16:14:46,792 - sync_service - INFO - Initialized Shopify client for store: Local Store (local)
2025-07-16 16:14:46,815 - sync_service - INFO - Starting stock change sync...
2025-07-16 16:14:46,816 - sync_service - INFO - Starting stock change sync using MASHURA_StockChangeB1SLQuery view
2025-07-16 16:14:46,817 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'login', 'request': {'company': 'JudeBenHalim_Test', 'user': 'manager'}, 'response': None, 'status': None}
2025-07-16 16:14:48,018 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'login', 'request': None, 'response': {'status': 'success'}, 'status': 'success'}
2025-07-16 16:14:48,019 - sync_service - INFO - SAP login successful
2025-07-16 16:14:48,024 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'view.svc/MASHURA_StockChangeB1SLQuery', 'request': {'method': 'GET', 'url': 'https://10.0.0.100:50000/b1s/v1/view.svc/MASHURA_StockChangeB1SLQuery', 'data': None, 'params': {'$top': 50}}, 'response': None, 'status': None}
2025-07-16 16:14:49,112 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'view.svc/MASHURA_StockChangeB1SLQuery', 'request': None, 'response': {'odata.metadata': 'https://10.0.0.100:50000/b1s/v1/view.svc/$metadata#MASHURA_StockChangeB1SLQuery', 'value': [{'ItemCode': 'FG-0000710', 'Variant_ID': '44416857014338', 'OnHand': 10.0, 'Available': 10.0, 'Location_ID': '68605345858', 'id__': 1}]}, 'status': 'success'}
2025-07-16 16:14:49,116 - sync_service - INFO - API Call: {'service': 'shopify', 'endpoint': 'rest_inventory_local', 'request': {'location_id': '68605345858', 'inventory_item_id': '44416857014338', 'available': 10}, 'response': None, 'status': None}
2025-07-16 16:14:49,631 - sync_service - INFO - API Call: {'service': 'shopify', 'endpoint': 'rest_inventory_local', 'request': None, 'response': {'inventory_level': {'inventory_item_id': 44416857014338, 'location_id': 68605345858, 'available': 10, 'updated_at': '2025-07-16T16:14:50+03:00', 'admin_graphql_api_id': 'gid://shopify/InventoryLevel/103109591106?inventory_item_id=44416857014338'}}, 'status': 'success'}
2025-07-16 16:14:51,384 - sync_service - INFO - SAP logging client login successful
2025-07-16 16:14:52,454 - sync_service - INFO - API log added to SAP: shopify - inventory_levels - success
2025-07-16 16:14:52,560 - sync_service - INFO - Stock change sync completed: 1 processed, 1 successful, 0 errors
2025-07-16 16:14:59,737 - sync_service - INFO - Initialized Shopify client for store: Local Store (local)
2025-07-16 16:14:59,779 - sync_service - INFO - Starting all syncs...
2025-07-16 16:14:59,781 - sync_service - INFO - Starting new items sync...
2025-07-16 16:14:59,782 - sync_service - INFO - Starting multi-store new items sync from SAP to Shopify
2025-07-16 16:15:00,917 - sync_service - INFO - SAP logging client login successful
2025-07-16 16:15:02,014 - sync_service - INFO - API log added to SAP: system - /sync/new_items_multi_store - success
2025-07-16 16:15:02,016 - sync_service - INFO - Fetching new items for store: local
2025-07-16 16:15:02,022 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'login', 'request': {'company': 'JudeBenHalim_Test', 'user': 'manager'}, 'response': None, 'status': None}
2025-07-16 16:15:03,130 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'login', 'request': None, 'response': {'status': 'success'}, 'status': 'success'}
2025-07-16 16:15:03,132 - sync_service - INFO - SAP login successful
2025-07-16 16:15:03,136 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': "view.svc/MASHURA_New_ItemsB1SLQuery?$filter=Shopify_Store eq 'local'&$orderby=MainProduct", 'request': {'method': 'GET', 'url': "https://10.0.0.100:50000/b1s/v1/view.svc/MASHURA_New_ItemsB1SLQuery?$filter=Shopify_Store eq 'local'&$orderby=MainProduct", 'data': None, 'params': None}, 'response': None, 'status': None}
2025-07-16 16:15:04,221 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': "view.svc/MASHURA_New_ItemsB1SLQuery?$filter=Shopify_Store eq 'local'&$orderby=MainProduct", 'request': None, 'response': {'odata.metadata': 'https://10.0.0.100:50000/b1s/v1/view.svc/$metadata#MASHURA_New_ItemsB1SLQuery', 'value': []}, 'status': 'success'}
2025-07-16 16:15:04,228 - sync_service - INFO - No new items found in SAP for store local
2025-07-16 16:15:04,231 - sync_service - INFO - Sync Event: {'sync_type': 'multi_store_new_items_sap_to_shopify', 'items_processed': 0, 'success_count': 0, 'error_count': 0, 'details': None}
2025-07-16 16:15:04,899 - sync_service - INFO - API log added to SAP: system - /sync/new_items_multi_store - success
2025-07-16 16:15:04,901 - sync_service - INFO - Multi-store new items sync completed: 0 processed, 0 successful, 0 errors
2025-07-16 16:15:04,903 - sync_service - INFO - Starting stock change sync...
2025-07-16 16:15:04,903 - sync_service - INFO - Starting stock change sync using MASHURA_StockChangeB1SLQuery view
2025-07-16 16:15:04,905 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'view.svc/MASHURA_StockChangeB1SLQuery', 'request': {'method': 'GET', 'url': 'https://10.0.0.100:50000/b1s/v1/view.svc/MASHURA_StockChangeB1SLQuery', 'data': None, 'params': {'$top': 50}}, 'response': None, 'status': None}
2025-07-16 16:15:05,551 - sync_service - INFO - API Call: {'service': 'sap', 'endpoint': 'view.svc/MASHURA_StockChangeB1SLQuery', 'request': None, 'response': {'odata.metadata': 'https://10.0.0.100:50000/b1s/v1/view.svc/$metadata#MASHURA_StockChangeB1SLQuery', 'value': []}, 'status': 'success'}
2025-07-16 16:15:05,552 - sync_service - INFO - No stock changes found in the view.
